{"version":3,"sources":["webpack://LineUpJS/webpack/universalModuleDefinition","webpack://LineUpJS/webpack/bootstrap","webpack://LineUpJS/./node_modules/fast-deep-equal/index.js","webpack://LineUpJS/./node_modules/detect-browser/index.js","webpack://LineUpJS/./node_modules/reflect-metadata/Reflect.js","webpack://LineUpJS/./node_modules/tslib/tslib.es6.js","webpack://LineUpJS/./src/internal/interable.ts","webpack://LineUpJS/./src/internal/worker.ts","webpack://LineUpJS/./src/internal/math.ts","webpack://LineUpJS/./src/internal/utils.ts","webpack://LineUpJS/./node_modules/d3-dispatch/src/dispatch.js","webpack://LineUpJS/./src/internal/AEventDispatcher.ts","webpack://LineUpJS/./src/model/interfaces.ts","webpack://LineUpJS/./src/model/Column.ts","webpack://LineUpJS/./src/model/annotations.ts","webpack://LineUpJS/./src/model/INumberColumn.ts","webpack://LineUpJS/./src/model/ValueColumn.ts","webpack://LineUpJS/./src/model/CompositeColumn.ts","webpack://LineUpJS/./node_modules/d3-scale-chromatic/src/colors.js","webpack://LineUpJS/./node_modules/d3-scale-chromatic/src/categorical/category10.js","webpack://LineUpJS/./node_modules/d3-scale-chromatic/src/categorical/Accent.js","webpack://LineUpJS/./node_modules/d3-scale-chromatic/src/categorical/Dark2.js","webpack://LineUpJS/./node_modules/d3-scale-chromatic/src/categorical/Pastel1.js","webpack://LineUpJS/./node_modules/d3-scale-chromatic/src/categorical/Paired.js","webpack://LineUpJS/./node_modules/d3-scale-chromatic/src/categorical/Pastel2.js","webpack://LineUpJS/./node_modules/d3-scale-chromatic/src/categorical/Set1.js","webpack://LineUpJS/./node_modules/d3-scale-chromatic/src/categorical/Set2.js","webpack://LineUpJS/./node_modules/d3-scale-chromatic/src/categorical/Set3.js","webpack://LineUpJS/./node_modules/d3-color/src/define.js","webpack://LineUpJS/./node_modules/d3-color/src/color.js","webpack://LineUpJS/./node_modules/d3-color/src/math.js","webpack://LineUpJS/./node_modules/d3-color/src/lab.js","webpack://LineUpJS/./node_modules/d3-color/src/cubehelix.js","webpack://LineUpJS/./node_modules/d3-interpolate/src/basis.js","webpack://LineUpJS/./node_modules/d3-interpolate/src/constant.js","webpack://LineUpJS/./node_modules/d3-interpolate/src/color.js","webpack://LineUpJS/./node_modules/d3-interpolate/src/rgb.js","webpack://LineUpJS/./node_modules/d3-interpolate/src/number.js","webpack://LineUpJS/./node_modules/d3-interpolate/src/basisClosed.js","webpack://LineUpJS/./node_modules/d3-interpolate/src/string.js","webpack://LineUpJS/./node_modules/d3-interpolate/src/transform/parse.js","webpack://LineUpJS/./node_modules/d3-interpolate/src/value.js","webpack://LineUpJS/./node_modules/d3-interpolate/src/date.js","webpack://LineUpJS/./node_modules/d3-interpolate/src/array.js","webpack://LineUpJS/./node_modules/d3-interpolate/src/object.js","webpack://LineUpJS/./node_modules/d3-interpolate/src/round.js","webpack://LineUpJS/./node_modules/d3-interpolate/src/transform/decompose.js","webpack://LineUpJS/./node_modules/d3-interpolate/src/transform/index.js","webpack://LineUpJS/./node_modules/d3-interpolate/src/zoom.js","webpack://LineUpJS/./node_modules/d3-interpolate/src/hsl.js","webpack://LineUpJS/./node_modules/d3-interpolate/src/hcl.js","webpack://LineUpJS/./node_modules/d3-interpolate/src/cubehelix.js","webpack://LineUpJS/./node_modules/d3-interpolate/src/quantize.js","webpack://LineUpJS/./node_modules/d3-scale-chromatic/src/ramp.js","webpack://LineUpJS/./node_modules/d3-scale-chromatic/src/diverging/BrBG.js","webpack://LineUpJS/./node_modules/d3-scale-chromatic/src/diverging/PRGn.js","webpack://LineUpJS/./node_modules/d3-scale-chromatic/src/diverging/PiYG.js","webpack://LineUpJS/./node_modules/d3-scale-chromatic/src/diverging/PuOr.js","webpack://LineUpJS/./node_modules/d3-scale-chromatic/src/diverging/RdBu.js","webpack://LineUpJS/./node_modules/d3-scale-chromatic/src/diverging/RdGy.js","webpack://LineUpJS/./node_modules/d3-scale-chromatic/src/diverging/RdYlBu.js","webpack://LineUpJS/./node_modules/d3-scale-chromatic/src/diverging/RdYlGn.js","webpack://LineUpJS/./node_modules/d3-scale-chromatic/src/diverging/Spectral.js","webpack://LineUpJS/./node_modules/d3-scale-chromatic/src/sequential-multi/BuGn.js","webpack://LineUpJS/./node_modules/d3-scale-chromatic/src/sequential-multi/BuPu.js","webpack://LineUpJS/./node_modules/d3-scale-chromatic/src/sequential-multi/GnBu.js","webpack://LineUpJS/./node_modules/d3-scale-chromatic/src/sequential-multi/OrRd.js","webpack://LineUpJS/./node_modules/d3-scale-chromatic/src/sequential-multi/PuBuGn.js","webpack://LineUpJS/./node_modules/d3-scale-chromatic/src/sequential-multi/PuBu.js","webpack://LineUpJS/./node_modules/d3-scale-chromatic/src/sequential-multi/PuRd.js","webpack://LineUpJS/./node_modules/d3-scale-chromatic/src/sequential-multi/RdPu.js","webpack://LineUpJS/./node_modules/d3-scale-chromatic/src/sequential-multi/YlGnBu.js","webpack://LineUpJS/./node_modules/d3-scale-chromatic/src/sequential-multi/YlGn.js","webpack://LineUpJS/./node_modules/d3-scale-chromatic/src/sequential-multi/YlOrBr.js","webpack://LineUpJS/./node_modules/d3-scale-chromatic/src/sequential-multi/YlOrRd.js","webpack://LineUpJS/./node_modules/d3-scale-chromatic/src/sequential-single/Blues.js","webpack://LineUpJS/./node_modules/d3-scale-chromatic/src/sequential-single/Greens.js","webpack://LineUpJS/./node_modules/d3-scale-chromatic/src/sequential-single/Greys.js","webpack://LineUpJS/./node_modules/d3-scale-chromatic/src/sequential-single/Purples.js","webpack://LineUpJS/./node_modules/d3-scale-chromatic/src/sequential-single/Reds.js","webpack://LineUpJS/./node_modules/d3-scale-chromatic/src/sequential-single/Oranges.js","webpack://LineUpJS/./node_modules/d3-scale-chromatic/src/sequential-multi/cubehelix.js","webpack://LineUpJS/./node_modules/d3-scale-chromatic/src/sequential-multi/rainbow.js","webpack://LineUpJS/./node_modules/d3-scale-chromatic/src/sequential-multi/sinebow.js","webpack://LineUpJS/./node_modules/d3-scale-chromatic/src/sequential-multi/viridis.js","webpack://LineUpJS/./src/internal/OrderedSet.ts","webpack://LineUpJS/./src/model/internal.ts","webpack://LineUpJS/./src/model/Ranking.ts","webpack://LineUpJS/./src/internal/debounce.ts","webpack://LineUpJS/./src/model/RankColumn.ts","webpack://LineUpJS/./src/model/AggregateGroupColumn.ts","webpack://LineUpJS/./src/model/SelectionColumn.ts","webpack://LineUpJS/./src/model/ActionColumn.ts","webpack://LineUpJS/./src/model/missing.ts","webpack://LineUpJS/./src/model/StringColumn.ts","webpack://LineUpJS/./src/internal/mathInterfaces.ts","webpack://LineUpJS/./src/model/AnnotateColumn.ts","webpack://LineUpJS/./src/model/CategoricalColorMappingFunction.ts","webpack://LineUpJS/./src/model/internalCategorical.ts","webpack://LineUpJS/./src/model/CategoricalColumn.ts","webpack://LineUpJS/./src/model/BooleanColumn.ts","webpack://LineUpJS/./src/model/ArrayColumn.ts","webpack://LineUpJS/./src/model/BooleansColumn.ts","webpack://LineUpJS/./node_modules/d3-format/src/formatDecimal.js","webpack://LineUpJS/./node_modules/d3-format/src/exponent.js","webpack://LineUpJS/./node_modules/d3-format/src/formatSpecifier.js","webpack://LineUpJS/./node_modules/d3-format/src/formatTrim.js","webpack://LineUpJS/./node_modules/d3-format/src/formatPrefixAuto.js","webpack://LineUpJS/./node_modules/d3-format/src/defaultLocale.js","webpack://LineUpJS/./node_modules/d3-format/src/formatRounded.js","webpack://LineUpJS/./node_modules/d3-format/src/formatTypes.js","webpack://LineUpJS/./node_modules/d3-format/src/identity.js","webpack://LineUpJS/./node_modules/d3-format/src/locale.js","webpack://LineUpJS/./node_modules/d3-format/src/formatGroup.js","webpack://LineUpJS/./node_modules/d3-format/src/formatNumerals.js","webpack://LineUpJS/./node_modules/d3-format/src/precisionFixed.js","webpack://LineUpJS/./node_modules/d3-array/src/ascending.js","webpack://LineUpJS/./node_modules/d3-array/src/bisector.js","webpack://LineUpJS/./node_modules/d3-array/src/bisect.js","webpack://LineUpJS/./node_modules/d3-array/src/array.js","webpack://LineUpJS/./node_modules/d3-array/src/ticks.js","webpack://LineUpJS/./node_modules/d3-scale/src/init.js","webpack://LineUpJS/./node_modules/d3-scale/src/ordinal.js","webpack://LineUpJS/./node_modules/d3-scale/src/constant.js","webpack://LineUpJS/./node_modules/d3-scale/src/number.js","webpack://LineUpJS/./node_modules/d3-scale/src/continuous.js","webpack://LineUpJS/./node_modules/d3-scale/src/tickFormat.js","webpack://LineUpJS/./node_modules/d3-format/src/precisionPrefix.js","webpack://LineUpJS/./node_modules/d3-format/src/precisionRound.js","webpack://LineUpJS/./node_modules/d3-scale/src/linear.js","webpack://LineUpJS/./node_modules/d3-scale/src/nice.js","webpack://LineUpJS/./node_modules/d3-scale/src/log.js","webpack://LineUpJS/./node_modules/d3-scale/src/pow.js","webpack://LineUpJS/./node_modules/d3-time/src/interval.js","webpack://LineUpJS/./node_modules/d3-time/src/millisecond.js","webpack://LineUpJS/./node_modules/d3-time/src/duration.js","webpack://LineUpJS/./node_modules/d3-time/src/second.js","webpack://LineUpJS/./node_modules/d3-time/src/minute.js","webpack://LineUpJS/./node_modules/d3-time/src/hour.js","webpack://LineUpJS/./node_modules/d3-time/src/day.js","webpack://LineUpJS/./node_modules/d3-time/src/week.js","webpack://LineUpJS/./node_modules/d3-time/src/month.js","webpack://LineUpJS/./node_modules/d3-time/src/year.js","webpack://LineUpJS/./node_modules/d3-time/src/utcMinute.js","webpack://LineUpJS/./node_modules/d3-time/src/utcHour.js","webpack://LineUpJS/./node_modules/d3-time/src/utcDay.js","webpack://LineUpJS/./node_modules/d3-time/src/utcWeek.js","webpack://LineUpJS/./node_modules/d3-time/src/utcMonth.js","webpack://LineUpJS/./node_modules/d3-time/src/utcYear.js","webpack://LineUpJS/./node_modules/d3-time-format/src/locale.js","webpack://LineUpJS/./node_modules/d3-time-format/src/defaultLocale.js","webpack://LineUpJS/./node_modules/d3-time-format/src/isoFormat.js","webpack://LineUpJS/./node_modules/d3-time-format/src/isoParse.js","webpack://LineUpJS/./src/model/MappingFunction.ts","webpack://LineUpJS/./src/model/internalNumber.ts","webpack://LineUpJS/./src/model/NumberColumn.ts","webpack://LineUpJS/./src/model/BoxPlotColumn.ts","webpack://LineUpJS/./src/model/MapColumn.ts","webpack://LineUpJS/./src/model/CategoricalMapColumn.ts","webpack://LineUpJS/./src/model/CategoricalsColumn.ts","webpack://LineUpJS/./src/model/internalDate.ts","webpack://LineUpJS/./src/model/DateColumn.ts","webpack://LineUpJS/./src/model/DatesColumn.ts","webpack://LineUpJS/./src/model/DatesMapColumn.ts","webpack://LineUpJS/./src/model/GroupColumn.ts","webpack://LineUpJS/./src/model/HierarchyColumn.ts","webpack://LineUpJS/./src/model/ColorMappingFunction.ts","webpack://LineUpJS/./src/model/ImpositionCompositeColumn.ts","webpack://LineUpJS/./src/model/NumbersColumn.ts","webpack://LineUpJS/./src/model/ImpositionBoxPlotColumn.ts","webpack://LineUpJS/./src/model/ImpositionCompositesColumn.ts","webpack://LineUpJS/./src/model/CompositeNumberColumn.ts","webpack://LineUpJS/./src/model/ReduceColumn.ts","webpack://LineUpJS/./src/model/StackColumn.ts","webpack://LineUpJS/./src/model/MultiLevelCompositeColumn.ts","webpack://LineUpJS/./src/model/NestedColumn.ts","webpack://LineUpJS/./src/model/NumberMapColumn.ts","webpack://LineUpJS/./src/model/OrdinalColumn.ts","webpack://LineUpJS/./src/model/ScriptColumn.ts","webpack://LineUpJS/./src/model/SetColumn.ts","webpack://LineUpJS/./src/model/StringMapColumn.ts","webpack://LineUpJS/./src/model/StringsColumn.ts","webpack://LineUpJS/./src/model/LinkColumn.ts","webpack://LineUpJS/./src/model/LinkMapColumn.ts","webpack://LineUpJS/./src/model/LinksColumn.ts","webpack://LineUpJS/./node_modules/lineupengine/src/abortAble.js","webpack://LineUpJS/./src/provider/interfaces.ts","webpack://LineUpJS/./src/provider/utils.ts","webpack://LineUpJS/./src/provider/ADataProvider.ts","webpack://LineUpJS/./src/model/models.ts","webpack://LineUpJS/./src/provider/accessor.ts","webpack://LineUpJS/./src/provider/ACommonDataProvider.ts","webpack://LineUpJS/./src/provider/sort.ts","webpack://LineUpJS/./src/internal/scheduler.ts","webpack://LineUpJS/./src/provider/tasks.ts","webpack://LineUpJS/./src/constants.ts","webpack://LineUpJS/./src/provider/DirectRenderTasks.ts","webpack://LineUpJS/./src/model/IArrayColumn.ts","webpack://LineUpJS/./src/model/ICategoricalColumn.ts","webpack://LineUpJS/./src/model/IDateColumn.ts","webpack://LineUpJS/./src/provider/ScheduledTasks.ts","webpack://LineUpJS/./src/provider/internal.ts","webpack://LineUpJS/./src/provider/LocalDataProvider.ts","webpack://LineUpJS/./src/renderer/interfaces.ts","webpack://LineUpJS/./src/styles/index.ts","webpack://LineUpJS/./src/renderer/utils.ts","webpack://LineUpJS/./src/renderer/ActionRenderer.ts","webpack://LineUpJS/./src/renderer/AggregateGroupRenderer.ts","webpack://LineUpJS/./src/ui/missing.ts","webpack://LineUpJS/./src/renderer/missing.ts","webpack://LineUpJS/./src/renderer/StringCellRenderer.ts","webpack://LineUpJS/./src/renderer/AnnotationRenderer.ts","webpack://LineUpJS/./src/renderer/impose.ts","webpack://LineUpJS/./src/renderer/BarCellRenderer.ts","webpack://LineUpJS/./src/renderer/DefaultCellRenderer.ts","webpack://LineUpJS/./src/renderer/BooleanCellRenderer.ts","webpack://LineUpJS/./src/renderer/BoxplotCellRenderer.ts","webpack://LineUpJS/./src/renderer/BrightnessCellRenderer.ts","webpack://LineUpJS/./src/renderer/CategoricalCellRenderer.ts","webpack://LineUpJS/./src/renderer/CategoricalHeatmapCellRenderer.ts","webpack://LineUpJS/./src/renderer/CategoricalStackedDistributionlCellRenderer.ts","webpack://LineUpJS/./src/renderer/CircleCellRenderer.ts","webpack://LineUpJS/./src/renderer/DotCellRenderer.ts","webpack://LineUpJS/./src/renderer/GroupCellRenderer.ts","webpack://LineUpJS/./src/renderer/ANumbersCellRenderer.ts","webpack://LineUpJS/./node_modules/popper.js/dist/esm/popper.js","webpack://LineUpJS/./src/renderer/HeatmapCellRenderer.ts","webpack://LineUpJS/./src/internal/merge.ts","webpack://LineUpJS/./src/ui/dialogs/ADialog.ts","webpack://LineUpJS/./src/ui/dialogs/InputNumberDialog.ts","webpack://LineUpJS/./src/internal/drag.ts","webpack://LineUpJS/./src/renderer/histogram.ts","webpack://LineUpJS/./src/renderer/HistogramCellRenderer.ts","webpack://LineUpJS/./src/renderer/ImageCellRenderer.ts","webpack://LineUpJS/./src/renderer/AAggregatedGroupRenderer.ts","webpack://LineUpJS/./src/renderer/MultiLevelCellRenderer.ts","webpack://LineUpJS/./src/renderer/InterleavingCellRenderer.ts","webpack://LineUpJS/./src/renderer/LinkCellRenderer.ts","webpack://LineUpJS/./src/renderer/TableCellRenderer.ts","webpack://LineUpJS/./src/renderer/LinkMapCellRenderer.ts","webpack://LineUpJS/./src/renderer/LoadingCellRenderer.ts","webpack://LineUpJS/./src/renderer/MapBarCellRenderer.ts","webpack://LineUpJS/./src/renderer/RankCellRenderer.ts","webpack://LineUpJS/./src/renderer/SelectionRenderer.ts","webpack://LineUpJS/./src/renderer/SetCellRenderer.ts","webpack://LineUpJS/./src/renderer/SparklineCellRenderer.ts","webpack://LineUpJS/./src/renderer/UpSetCellRenderer.ts","webpack://LineUpJS/./src/renderer/VerticalBarCellRenderer.ts","webpack://LineUpJS/./src/renderer/DateCellRenderer.ts","webpack://LineUpJS/./src/ui/dialogs/InputDateDialog.ts","webpack://LineUpJS/./src/renderer/DateHistogramCellRenderer.ts","webpack://LineUpJS/./src/renderer/renderers.ts","webpack://LineUpJS/./src/ui/dialogs/utils.ts","webpack://LineUpJS/./src/ui/dialogs/BooleanFilterDialog.ts","webpack://LineUpJS/./src/ui/dialogs/CategoricalColorMappingDialog.ts","webpack://LineUpJS/./src/ui/dialogs/CategoricalFilterDialog.ts","webpack://LineUpJS/./src/ui/dialogs/CategoricalMappingFilterDialog.ts","webpack://LineUpJS/./src/ui/dialogs/ChangeRendererDialog.ts","webpack://LineUpJS/./src/ui/dialogs/ColorMappingDialog.ts","webpack://LineUpJS/./src/internal/dnd.ts","webpack://LineUpJS/./src/ui/dialogs/MoreColumnOptionsDialog.ts","webpack://LineUpJS/./src/ui/header.ts","webpack://LineUpJS/./src/ui/dialogs/CompositeChildrenDialog.ts","webpack://LineUpJS/./src/ui/dialogs/CutOffHierarchyDialog.ts","webpack://LineUpJS/./src/ui/dialogs/DateFilterDialog.ts","webpack://LineUpJS/./src/ui/dialogs/EditPatternDialog.ts","webpack://LineUpJS/./src/ui/dialogs/GroupDialog.ts","webpack://LineUpJS/./src/ui/dialogs/MappingLineDialog.ts","webpack://LineUpJS/./src/ui/dialogs/MappingDialog.ts","webpack://LineUpJS/./src/ui/dialogs/NumberFilterDialog.ts","webpack://LineUpJS/./src/ui/dialogs/ReduceDialog.ts","webpack://LineUpJS/./src/ui/dialogs/RenameDialog.ts","webpack://LineUpJS/./src/ui/dialogs/ScriptEditDialog.ts","webpack://LineUpJS/./src/ui/dialogs/SearchDialog.ts","webpack://LineUpJS/./src/ui/dialogs/ShowTopNDialog.ts","webpack://LineUpJS/./src/ui/dialogs/SortDialog.ts","webpack://LineUpJS/./src/ui/dialogs/StringFilterDialog.ts","webpack://LineUpJS/./src/ui/dialogs/WeightsEditDialog.ts","webpack://LineUpJS/./src/ui/toolbar.ts","webpack://LineUpJS/./src/ui/dialogs/groupNumber.ts","webpack://LineUpJS/./src/ui/dialogs/groupString.ts","webpack://LineUpJS/./src/ui/dialogs/groupDate.ts","webpack://LineUpJS/./src/config.ts","webpack://LineUpJS/./src/browser.ts","webpack://LineUpJS/./src/ui/ALineUp.ts","webpack://LineUpJS/./node_modules/lineupengine/src/animation/index.js","webpack://LineUpJS/./node_modules/lineupengine/src/animation/KeyFinder.js","webpack://LineUpJS/./node_modules/lineupengine/src/internal/scroll.js","webpack://LineUpJS/./node_modules/lineupengine/src/internal/index.js","webpack://LineUpJS/./node_modules/lineupengine/src/logic.js","webpack://LineUpJS/./node_modules/lineupengine/src/mixin/IMixin.js","webpack://LineUpJS/./node_modules/lineupengine/src/styles/index.js","webpack://LineUpJS/./node_modules/lineupengine/src/ARowRenderer.js","webpack://LineUpJS/./node_modules/lineupengine/src/style/StyleManager.js","webpack://LineUpJS/./node_modules/lineupengine/src/style/GridStyleManager.js","webpack://LineUpJS/./node_modules/lineupengine/src/table/MultiTableRowRenderer.js","webpack://LineUpJS/./src/ui/dialogs/DialogManager.ts","webpack://LineUpJS/./node_modules/lineupengine/src/mixin/PrefetchMixin.js","webpack://LineUpJS/./node_modules/lineupengine/src/table/internal/ACellAdapter.js","webpack://LineUpJS/./node_modules/lineupengine/src/table/ACellTableSection.js","webpack://LineUpJS/./src/ui/animation.ts","webpack://LineUpJS/./src/ui/RenderColumn.ts","webpack://LineUpJS/./src/ui/MultiLevelRenderColumn.ts","webpack://LineUpJS/./src/ui/interfaces.ts","webpack://LineUpJS/./src/ui/SelectionManager.ts","webpack://LineUpJS/./src/ui/EngineRanking.ts","webpack://LineUpJS/./src/ui/SlopeGraph.ts","webpack://LineUpJS/./src/ui/EngineRenderer.ts","webpack://LineUpJS/./src/ui/domElementCache.ts","webpack://LineUpJS/./src/ui/dialogs/ChooseRankingDialog.ts","webpack://LineUpJS/./src/ui/panel/SearchBox.ts","webpack://LineUpJS/./src/ui/dialogs/RenameRankingDialog.ts","webpack://LineUpJS/./src/ui/dialogs/MoreRankingOptionsDialog.ts","webpack://LineUpJS/./src/ui/dialogs/AddonDialog.ts","webpack://LineUpJS/./src/ui/panel/Hierarchy.ts","webpack://LineUpJS/./src/ui/panel/SidePanelEntryVis.ts","webpack://LineUpJS/./src/ui/panel/SidePanelRanking.ts","webpack://LineUpJS/./src/ui/panel/SidePanel.ts","webpack://LineUpJS/./src/ui/LineUp.ts","webpack://LineUpJS/./src/ui/taggle/rules.ts","webpack://LineUpJS/./src/ui/taggle/TaggleRenderer.ts","webpack://LineUpJS/./src/ui/taggle/Taggle.ts","webpack://LineUpJS/./src/internal/LRUCache.ts","webpack://LineUpJS/./src/provider/remote/interfaces.ts","webpack://LineUpJS/./src/provider/remote/internal.ts","webpack://LineUpJS/./src/provider/remote/RemoteTaskExecutor.ts","webpack://LineUpJS/./src/provider/remote/RemoteDataProvider.ts","webpack://LineUpJS/./src/builder/column/ColumnBuilder.ts","webpack://LineUpJS/./src/builder/LineUpBuilder.ts","webpack://LineUpJS/./src/builder/RankingBuilder.ts","webpack://LineUpJS/./src/builder/column/CategoricalColumnBuilder.ts","webpack://LineUpJS/./src/builder/column/NumberColumnBuilder.ts","webpack://LineUpJS/./src/builder/column/StringColumnBuilder.ts","webpack://LineUpJS/./src/builder/column/DateColumnBuilder.ts","webpack://LineUpJS/./src/builder/column/HierarchyColumnBuilder.ts","webpack://LineUpJS/./src/builder/column/ActionsColumnBuilder.ts","webpack://LineUpJS/./src/builder/column/BooleanColumnBuilder.ts","webpack://LineUpJS/./src/builder/DataBuilder.ts","webpack://LineUpJS/./src/builder/adapter/column.ts","webpack://LineUpJS/./src/builder/adapter/ranking.ts","webpack://LineUpJS/./src/builder/adapter/utils.ts","webpack://LineUpJS/./src/builder/adapter/lineup.ts","webpack://LineUpJS/./src/builder/adapter/builderAdapter.ts","webpack://LineUpJS/./src/model/index.ts","webpack://LineUpJS/./src/index.ts","webpack://LineUpJS/./src/bundle.ts"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","isArray","Array","keyList","keys","hasProp","equal","a","b","length","arrA","arrB","dateA","Date","dateB","getTime","regexpA","RegExp","regexpB","toString","BrowserInfo","version","os","this","NodeInfo","process","platform","BotInfo","bot","REQUIRED_VERSION_PARTS","userAgentRules","operatingSystemRules","parseUserAgent","ua","matchedRule","reduce","matched","_a","browser","regex","uaMatch","exec","match","versionParts","split","slice","concat","count","output","ii","push","createVersionParts","join","detectOS","test","getNodeVersion","detect","navigator","userAgent","Reflect","global","self","Function","exporter","makeExporter","target","previous","configurable","writable","hasOwn","supportsSymbol","toPrimitiveSymbol","toPrimitive","iteratorSymbol","iterator","supportsCreate","supportsProto","__proto__","downLevel","HashMap","MakeDictionary","has","map","undefined","functionPrototype","getPrototypeOf","usePolyfill","env","_Map","Map","entries","cacheSentinel","arraySentinel","MapIterator","values","selector","_index","_keys","_values","_selector","next","index","result","done","throw","error","return","_cacheKey","_cacheIndex","_find","set","delete","size","clear","getKey","getValue","getEntry","insert","indexOf","_","CreateMapPolyfill","_Set","Set","_map","add","Metadata","WeakMap","UUID_SIZE","rootKey","CreateUniqueKey","_key","table","GetOrCreateWeakMapTable","CreateUUID","FillRandomBytes","buffer","Math","random","data","Uint8Array","crypto","getRandomValues","msCrypto","GenRandomBytes","offset","byte","toLowerCase","CreateWeakMapPolyfill","GetOrCreateMetadataMap","O","P","Create","targetMetadata","IsUndefined","metadataMap","OrdinaryHasOwnMetadata","MetadataKey","OrdinaryGetOwnMetadata","OrdinaryDefineOwnMetadata","MetadataValue","OrdinaryOwnMetadataKeys","keysObj","obj","method","GetMethod","IsCallable","TypeError","IsObject","GetIterator","k","IteratorStep","nextValue","e","IteratorClose","Type","x","IsNull","ToPrimitive","input","PreferredType","hint","exoticToPrim","toString_1","valueOf","toString_2","OrdinaryToPrimitive","ToPropertyKey","argument","ToString","IsArray","IsConstructor","V","func","f","OrdinaryGetPrototypeOf","proto","prototypeProto","constructor","__","decorators","propertyKey","attributes","decorator","decorated","DecorateConstructor","descriptor","DecorateProperty","metadataKey","metadataValue","IsPropertyKey","OrdinaryHasMetadata","parent","OrdinaryGetMetadata","OrdinaryMetadataKeys","ownKeys","parentKeys","_i","ownKeys_1","hasKey","parentKeys_1","extendStatics","setPrototypeOf","__extends","__assign","assign","arguments","apply","__decorate","desc","getOwnPropertyDescriptor","decorate","isSeqEmpty","seq","every","isIndicesAble","it","Uint16Array","Uint32Array","Float32Array","Int8Array","Int16Array","Int32Array","Float64Array","LazyFilter","filters","_length","forEach","filter","callback","interable_LazyMap1","outer","i_1","v_1","valid","v","_b","_c","_this","some","i_2","v_2","i_3","v_3","initial","acc","j","i_4","v_4","ALazyMap","mapV","acc_1","_super","LazyMap1","map12","interable_LazyMap2","LazyMap2","map23","interable_LazyMap3","LazyMap3","map34","LazySeq","iterable","_arr","from","arr","acc_2","lazySeq","ConcatSequence","seqs","shift","MIN_WORKER_THREADS","MAX_WORKER_THREADS","max","hardwareConcurrency","WorkerTaskScheduler","blob","workers","cleanUpWorkerTimer","workerTaskCounter","cleanUpWorker","toFree","findIndex","tasks","splice","worker","terminate","finshedTask","w","Worker","refs","checkOutWorker","clearTimeout","emptyWorker","find","setTimeout","pushStats","type","args","refData","refIndices","indices","Promise","resolve","uid","receiver","msg","removeEventListener","stats","addEventListener","postMessage","transferAbles","toResult","setRef","ref","broadCast","deleteRef","startsWith","deleteRefs","getNumberOfBins","ceil","log","LN2","math_min","min","Number","POSITIVE_INFINITY","values_1","math_max","NEGATIVE_INFINITY","values_2","extent","values_3","math_empty","fill","quantile","NaN","floor","math_median","sort","pushAll","vs","boxplotBuilder","fixedLength","sum","missing","isNaN","pushAndSave","invalid","mean","whiskerHigh","whiskerLow","outlier","median","q1","q3","buildImpl","iqr","left","right","reversedOutliers","reverse","build","buildArr","normalizedStatsBuilder","numberOfBins","hist","x0","binWidth","x1","bin1","binN","low","high","center","toBin","maxBin","computeGranularity","histGranularity","getFullYear","minYear","maxYear","x0_1","getMonth","getDay","setDate","getDate","setMonth","pushDateHist","dummyDateStatistics","dateStatsBuilder","template","byDay","templateHist","h","dummyCategoricalStatisticsBuilder","categories","cat","dummyCategoricalStatistics","categoricalStatsBuilder","math_round","precision","round","scale","pow","similar","delta","abs","isPromiseLike","then","createIndexArray","dataSize","toIndexArray","maxDataIndex","joinIndexArrays","groups","total","createLike","groups_1","g","math_asc","math_desc","sortComplex","comparators","c_1","asc","cLookup_1","lookup","c1_1","c1Lookup_1","c2_1","c2Lookup_1","l_1","fs_1","l_2","dateValueCache2Value","categoricalValueCache2Value","sortWorkerMain","wself","resolveRefs","msgHandlers","sortOrders","order","dateStats","categoricalStats","cats","numberStats","boxplotStats","evt","createWorkerBlob","fs","source","lastIndexOf","sources","Blob","URL","createObjectURL","equalArrays","ai","fixCSS","id","replace","node","lastChild","removeChild","arrs","arrs_1","a_1","noop","dispatch","Error","Dispatch","on","typename","types","T","trim","copy","that","src_dispatch","AEventDispatcher_suffix","suffix","prefix","ECompareValueType","AEventDispatcher","events","createEventList","listenerEvents","listeners","forwarder","fireImpl","primaryType","origin","listener","listenersChanged","Boolean","_type","_active","fire","context","forward","unforward","DEFAULT_COLOR","defaultGroup","color","othersGroup","interfaces_isGroup","item","group","isMultiLevelColumn","col","model_Column","Column","width","renderer","groupRenderer","summaryRenderer","visible","metadata","label","description","fixed","frozen","assignNewId","idGenerator","fqid","fqpath","EVENT_WIDTH_CHANGED","EVENT_LABEL_CHANGED","EVENT_METADATA_CHANGED","EVENT_VISIBILITY_CHANGED","EVENT_SUMMARY_RENDERER_TYPE_CHANGED","EVENT_RENDERER_TYPE_CHANGED","EVENT_GROUP_RENDERER_TYPE_CHANGED","EVENT_DIRTY","EVENT_DIRTY_HEADER","EVENT_DIRTY_VALUES","EVENT_DIRTY_CACHES","getWidth","hide","setVisible","show","isVisible","getVisible","flatten","_levelsToGo","_padding","setWidth","setWidthImpl","setMetaData","bak","getMetaData","sortByMe","ascending","priority","isSortingAscByDefault","findMyRanker","sortBy","groupByMe","toggleGrouping","isGroupedBy","getGroupCriteria","toggleMySorting","toggleSorting","isSortedByMeImpl","ranker","criterias","isSortedByMe","getSortCriteria","groupSortByMe","groupSortBy","toggleMyGroupSorting","toggleGroupSorting","isGroupSortedByMe","getGroupSortCriteria","removeMe","remove","attach","detach","insertAfterMe","insertAfter","dump","toDescRef","getRenderer","getGroupRenderer","getSummaryRenderer","restore","_factory","rendererType","getLabel","row","String","_row","getExportValue","format","getColor","toCompareValue","_valueCache","toCompareValueType","UINT8","toCompareGroupValue","_rows","toCompareGroupValueType","STRING","isFiltered","clearFilter","setRenderer","setDefaultRenderer","setGroupRenderer","setDefaultGroupRenderer","setSummaryRenderer","setDefaultSummaryRenderer","setDefaultWidth","markDirty","FLAT_ALL_COLUMNS","internal_AEventDispatcher","supportType","for","category","SupportType","SortByDefault","clazz","hasMetadata","ESortMethod","EAdvancedSortMethod","Categories","string","featureLevel","categorical","number","date","array","composite","support","other","annotations_categories","Category","getSortType","categoryOf","annotations_toolbar","dialogAddons","isSupportType","getMetadata","categoryOfDesc","models","isMapAbleColumn","getMapping","isNumberColumn","getNumber","isBoxPlotColumn","getBoxPlotData","isNumbersColumn","getNumbers","model_ValueColumn","ValueColumn","accessor","loaded","lazyLoaded","EVENT_DATA_LOADED","isLoaded","getRaw","setLoaded","RENDERER_LOADING","model_CompositeColumn","CompositeColumn","_children","CompositeColumn_1","EVENT_FILTER_CHANGED","EVENT_ADD_COLUMN","EVENT_MOVE_COLUMN","EVENT_REMOVE_COLUMN","levelsToGo","padding","children","child","canJustAddNumbers","insertImpl","move","old","moveImpl","oldIndex","at","moveAfter","removeImpl","src_colors","specifier","colors","category10","Accent","Dark2","Pastel1","Pastel2","Set1","Set2","Set3","extend","definition","Color","reI","reN","reP","reHex3","reHex6","reRgbInteger","reRgbPercent","reRgbaInteger","reRgbaPercent","reHslPercent","reHslaPercent","named","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","color_color","Rgb","parseInt","rgbn","rgba","hsla","rgbConvert","rgb","opacity","color_rgb","hex","Hsl","hsl","hslConvert","hsl2rgb","m1","m2","displayable","brighter","darker","deg2rad","PI","rad2deg","Xn","Yn","Zn","lab_t0","lab_t1","lab_t2","t3","labConvert","Lab","Hcl","cos","sin","z","rgb2lrgb","y","xyz2lab","lab","lab2xyz","lrgb2rgb","hclConvert","atan2","sqrt","hcl","A","B","C","D","E","ED","EB","BC_DA","cubehelix_cubehelix","Cubehelix","bl","cubehelixConvert","basis","t1","v0","v1","v2","v3","t2","cosh","sinh","constant","linear","color_hue","gamma","nogamma","exponential","src_rgb","rgbGamma","start","end","rgbSpline","spline","rgbBasis","reA","reB","cssNode","cssRoot","cssView","svgNode","src_value","am","bm","bs","bi","lastIndex","q","string_one","string_zero","setTime","nb","na","src_round","degrees","identity","translateX","translateY","rotate","skewX","scaleX","scaleY","decompose","atan","interpolateTransform","parse","pxComma","pxParen","degParen","pop","xa","ya","xb","yb","translate","document","createElement","documentElement","defaultView","style","transform","getComputedStyle","appendChild","getPropertyValue","createElementNS","setAttribute","baseVal","consolidate","matrix","SQRT2","hsl_hsl","hue","hcl_hcl","src_cubehelix_cubehelix","cubehelixGamma","cubehelix","cubehelixLong","ramp","scheme","BrBG","PRGn","PiYG","PuOr","RdBu","RdGy","RdYlBu","RdYlGn","Spectral","BuGn","BuPu","GnBu","OrRd","PuBuGn","PuBu","PuRd","RdPu","YlGnBu","YlGn","YlOrBr","YlOrRd","Blues","Greens","Greys","Purples","Reds","Oranges","sequential_multi_cubehelix","warm","cool","rainbow_c","rainbow","ts","viridis_ramp","range","viridis","magma","inferno","plasma","OrderedSet","list","addAll","console","assert","deleteAll","act","callbackfn","thisArg","patternFunction","pattern","joinGroups","parents","gparents","unshift","subGroups","duplicateGroup","clone","isGroupParent","toGroupID","groupRoots","roots","internal_OrderedSet","groups_2","internal_colors","MAX_COLORS","colorPool","mapIndices","everyIndices","forEachIndices","chooseUIntByDataLength","dataLength","UINT32","UINT16","EDirtyReason","internal_cache","model_Ranking","Ranking","sortCriteria","groupColumns","groupSortCriteria","columns","dirtyOrder","reason","EVENT_DIRTY_ORDER","dirtyOrderSortDirty","SORT_CRITERIA_DIRTY","dirtyOrderGroupDirty","GROUP_CRITERIA_DIRTY","dirtyOrderGroupSortDirty","GROUP_SORT_CRITERIA_DIRTY","dirtyOrderFiltering","FILTER_CHANGED","index2pos","EVENT_GROUPS_CHANGED","EVENT_GROUP_CRITERIA_CHANGED","EVENT_GROUP_SORT_CRITERIA_CHANGED","EVENT_COLUMN_VISIBILITY_CHANGED","EVENT_SORT_CRITERIA_CHANGED","EVENT_ORDER_CHANGED","setLabel","setGroups","dirtyReason","oldGroups","unifyGroups","offsets","subarray","subs","gi","roots_1","getRank","dataIndex","getOrder","getOrderLength","getGroups","sortColumn","help","setGroupCriteria","restoreSortCriteria","dumped","setSortCriteria","setGroupSortCriteria","getPrimarySortCriteria","toggleSortingLogic","newSort","current","defaultAsc","newGroupings","hierarchyLogic","entry","groupBy","equalCriteria","COLUMN_SORT_DIRTY","triggerResort","column","cols","groupColumn","COLUMN_GROUP_DIRTY","COLUMN_GROUP_SORT_DIRTY","triggerGroupResort","sortCriterias","bakMulti","FORWARD_COLUMN_EVENTS","oldValue","newValue","reference","findByPath","isSortCriteria","sortCriteriaChanged","isGroupSortCriteria","groupSortCriteriaChanged","newGrouping","isGroupColumn","removed","idOrFilter","r_1","flatColumns","clearFilters","debounce","timeToDelay","choose","tm","ctx","createRankDesc","EAggregationState","model_RankColumn","RankColumn","ranking","createAggregateDesc","model_AggregateGroupColumn","AggregateGroupColumn","AggregateGroupColumn_1","EVENT_AGGREGATE","isAggregated","setAggregated","EXPAND","COLLAPSE","createSelectionDesc","model_SelectionColumn","SelectionColumn","SelectionColumn_1","EVENT_SELECT","setValue","setImpl","setValues","rows","setterAll","setter","toggleValue","BINARY","isSelected","SELECTED_GROUP","NOT_SELECTED_GROUP","createActionDesc","actions","groupActions","model_ActionColumn","ActionColumn","compare","isMissingValue","isUnknown","EAlignment","FIRST_IS_NAN","FIRST_IS_MISSING","missingGroup","fast_deep_equal","model_StringColumn","StringColumn","currentFilter","currentGroupCriteria","alignment","escape","StringColumn_1","EVENT_GROUPING_CHANGED","groupCriteria","FILTER_MISSING","getFilter","setFilter","was","criteria","model_AnnotateColumn","AnnotateColumn","annotations","EVENT_VALUE_CHANGED","DEFAULT_CATEGORICAL_COLOR_FUNCTION","toJSON","eq","ReplacmentColorMappingFunction","restoreCategoricalColorMapping","toCategory","nextColor","COMPARE_CATEGORY_VALUE_TYPES","FLOAT_ASC","toGroupCompareCategoryValue","valueCache","mostFrequent","topCat","topCount","findMostFrequent","getCategory","COMPARE_GROUP_CATEGORY_VALUE_TYPES","FLOAT","COUNT","compareCategory","aNull","bNull","localeCompare","toCategories","isEmptyFilter","filterMissing","isCategoryIncluded","filterObj","includes","model_CategoricalColumn","CategoricalColumn","colorMapping","CategoricalColumn_1","EVENT_COLOR_MAPPING_CHANGED","getCategories","getValues","getLabels","getMap","getMapLabel","getSet","iterCategory","categoricalColorMappingFunction","getColorMapping","setColorMapping","mapping","al","arrayEquals","_group","model_BooleanColumn","BooleanColumn","trueMarker","BooleanColumn_1","GROUP_TRUE","GROUP_FALSE","enabled","model_ArrayColumn","ArrayColumn","_dataLength","originalLabels","labels","_d","model_BooleansColumn","BooleansColumn","getColors","formatDecimal","toExponential","coefficient","src_exponent","re","formatSpecifier","FormatSpecifier","align","sign","symbol","zero","comma","prefixExponent","defaultLocale_locale","defaultLocale_format","defaultLocale_formatPrefix","formatTrim","out","i1","i0","formatRounded","exponent","formatTypes","%","toFixed","toPrecision","X","toUpperCase","src_identity","prefixes","locale","grouping","thousands","substring","currency","decimal","numerals","formatNumerals","percent","newFormat","formatType","maybeSuffix","valuePrefix","valueSuffix","valueNegative","charCodeAt","Infinity","formatPrefix","src_locale","src_ascending","bisector","lo","hi","mid","ascendingBisect","bisectRight","bisect","array_array","e10","e5","e2","ticks","stop","step","tickIncrement","isFinite","power","LN10","tickStep","step0","step1","initRange","domain","d3_scale_src_constant","d3_scale_src_number","continuous_unit","continuous_identity","normalize","clamper","bimap","interpolate","d0","d1","r0","r1","polymap","continuous_copy","clamp","unknown","transformer","untransform","piecewise","rescale","invert","rangeRound","u","continuous","src_tickFormat","precisionPrefix","precisionRound","precisionFixed","linearish","tickFormat","nice","linear_linear","interval","transformLog","transformExp","exp","transformLogn","transformExpn","pow10","reflect","loggish","logs","pows","base","log10","log2","logp","powp","transformPow","transformSqrt","transformSquare","powish","interval_t0","interval_t1","newInterval","floori","offseti","field","millisecond_millisecond","durationMinute","durationWeek","second_second","getMilliseconds","getUTCSeconds","src_second","minute_minute","getSeconds","getMinutes","src_minute","hour_hour","getHours","src_hour","day_day","setHours","getTimezoneOffset","src_day","weekday","sunday","monday","tuesday","wednesday","thursday","friday","saturday","month_month","src_month","year_year","setFullYear","src_year","utcMinute","setUTCSeconds","getUTCMinutes","utcHour","setUTCMinutes","getUTCHours","utcDay","setUTCHours","setUTCDate","getUTCDate","src_utcDay","utcWeekday","getUTCDay","utcSunday","utcMonday","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","utcMonth","setUTCMonth","getUTCMonth","getUTCFullYear","utcYear","setUTCFullYear","src_utcYear","localDate","H","M","S","L","utcDate","UTC","newYear","src_defaultLocale_locale","timeFormat","timeParse","utcFormat","utcParse","pads","-","0","numberRe","percentRe","requoteRe","locale_pad","requote","formatRe","names","formatLookup","parseWeekdayNumberSunday","parseWeekdayNumberMonday","parseWeekNumberSunday","U","parseWeekNumberISO","parseWeekNumberMonday","W","parseFullYear","parseYear","parseZone","Z","parseMonthNumber","parseDayOfMonth","parseDayOfYear","parseHour24","parseMinutes","parseSeconds","parseMilliseconds","parseMicroseconds","parseLiteralPercent","parseUnixTimestamp","Q","parseUnixTimestampSeconds","formatDayOfMonth","formatHour24","formatHour12","formatDayOfYear","formatMilliseconds","formatMicroseconds","formatMonthNumber","formatMinutes","formatSeconds","formatWeekdayNumberMonday","day","formatWeekNumberSunday","formatWeekNumberISO","formatWeekdayNumberSunday","formatWeekNumberMonday","locale_formatYear","formatFullYear","formatZone","formatUTCDayOfMonth","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","getUTCMilliseconds","formatUTCMicroseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekdayNumberMonday","dow","formatUTCWeekNumberSunday","formatUTCWeekNumberISO","formatUTCWeekdayNumberSunday","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","formatLiteralPercent","formatUnixTimestamp","formatUnixTimestampSeconds","locale_dateTime","dateTime","locale_date","locale_time","time","locale_periods","periods","locale_weekdays","days","locale_shortWeekdays","shortDays","locale_months","months","locale_shortMonths","shortMonths","periodRe","periodLookup","weekdayRe","weekdayLookup","shortWeekdayRe","shortWeekdayLookup","monthRe","monthLookup","shortMonthRe","shortMonthLookup","formats","I","Y","utcFormats","parses","parseSpecifier","pad","charAt","newParse","newDate","week","formatLocale","defaultLocale_defaultLocale","toISOString","toScale","MappingFunction_isSame","fixDomain","ScaleMappingFunction","getRange","ScriptMappingFunction","code","value_min","value_max","value_range","value_domain","mi","ma","restoreMapping","mappingFunction","DEFAULT_FORMATTER","toCompareBoxPlotValue","getSortMethod","getBoxPlotNumber","getRawBoxPlotData","numberCompare","aMissing","bMissing","isEqualNumberFilter","isNumberIncluded","isDummyNumberFilter","restoreNumberFilter","model_NumberColumn","NumberColumn","numberFormat","currentGroupThresholds","groupSortMethod","original","colorMappingFunction","getNumberFormat","stratifyThreshholds","stratifyThresholds","NumberColumn_1","EVENT_MAPPING_CHANGED","EVENT_SORTMETHOD_CHANGED","raw","getRawValue","iterNumber","iterRawNumber","getRawNumber","sortMethod","getOriginalMapping","setMapping","getGroupThresholds","setGroupThresholds","threshold","treshholdIndex","setSortMethod","model_BoxPlotColumn","BoxPlotColumn","BoxPlotColumn_1","model_MapColumn","MapColumn","byKey","toKeyValue","model_CategoricalMapColumn","CategoricalMapColumn","CategoricalMapColumn_1","parseValue","getCategoryMap","model_CategoricalsColumn","CategoricalsColumn","CategoricalsColumn_1","shiftFilterDateDay","setMinutes","setSeconds","setMilliseconds","toDateGroup","grouper","granularity","centuryP","circular","century","decadeP","decade","year","chooseAggregatedDate","dates","trueMedian","EDateSort","model_DateColumn","DateColumn","currentGrouper","dateFormat","DateColumn_1","DEFAULT_DATE_FORMAT","dateParse","getFormatter","getParser","iterDate","DOUBLE_ASC","getDateGrouper","setDateGrouper","model_DatesColumn","DatesColumn","DatesColumn_1","getDates","av","DatesColumn_compute","EGroupSortMethod","model_DatesMapColumn","DatesMapColumn","DatesMapColumn_1","getDateMap","createGroupDesc","model_GroupColumn","GroupColumn","GroupColumn_1","model_HierarchyColumn","HierarchyColumn","currentMaxDepth","currentLeaves","currentLeavesNameCache","currentLeavesPathCache","hierarchySeparator","hierarchy","initHierarchy","currentNode","computeLeaves","updateCaches","path_1","path","HierarchyColumn_1","EVENT_CUTOFF_CHANGED","maxDepth","cutOffNode","act_1","getCutOff","setCutOff","leaves","visit","depth","resolveInnerNodes","queue","isHierarchical","deriveHierarchy","ColorMappingFunction_SequentialColorFunction","SequentialColorFunction","FUNCTIONS","interpolateBlues","interpolateGreens","interpolateGreys","interpolateOranges","interpolatePurples","interpolateReds","interpolateCool","interpolateCubehelixDefault","interpolateWarm","interpolatePlasma","interpolateMagma","interpolateViridis","interpolateInferno","interpolateYlOrRd","interpolateYlOrBr","interpolateBuGn","interpolateBuPu","interpolateGnBu","interpolateOrRd","interpolatePuBuGn","interpolatePuBu","interpolatePuRd","interpolateRdPu","interpolateYlGnBu","interpolateYlGn","interpolateRainbow","ColorMappingFunction_DivergentColorFunction","DivergentColorFunction","interpolateBrBG","interpolatePRGn","interpolatePiYG","interpolatePuOr","interpolateRdBu","interpolateRdGy","interpolateRdYlBu","interpolateRdYlGn","interpolateSpectral","UnknownColorFunction","SolidColorFunction","QuantizedColorFunction","steps","perStep","ColorMappingFunction_quantize","ColorMappingFunction_CustomColorMappingFunction","CustomColorMappingFunction","DEFAULT_COLOR_FUNCTION","createImpositionDesc","model_ImpositionCompositeColumn","ImpositionCompositeColumn","wrapper","rest","ImpositionCompositeColumn_1","model_NumbersColumn","NumbersColumn","getRawNumbers","data_1","data_2","NumbersColumn_1","CENTER","createImpositionBoxPlotDesc","model_ImpositionBoxPlotColumn","ImpositionBoxPlotColumn","ImpositionBoxPlotColumn_1","createImpositionsDesc","model_ImpositionCompositesColumn","ImpositionCompositesColumn","ImpositionCompositesColumn_1","model_CompositeNumberColumn","CompositeNumberColumn","compute","createReduceDesc","model_ReduceColumn","ReduceColumn","selected","ReduceColumn_1","EVENT_REDUCE_CHANGED","getReduce","setReduce","createStackDesc","model_StackColumn","StackColumn","collapsed","adaptChange","adaptWidthChange","weights","getWeights","StackColumn_1","EVENT_COLLAPSE_CHANGED","EVENT_WEIGHTS_CHANGED","EVENT_MULTI_LEVEL_CHANGED","setCollapsed","getCollapsed","weight","full","oldWeight","factor","widths","guess","setWeights","COLLAPSED_RENDERER","model_MultiLevelCompositeColumn","MultiLevelCompositeColumn","MultiLevelCompositeColumn_1","createNestedDesc","NestedColumn","model_NumberMapColumn","NumberMapColumn","NumberMapColumn_1","model_OrdinalColumn","OrdinalColumn","OrdinalColumn_1","DEFAULT_SCRIPT","createScriptDesc","script","ColumnWrapper","ScriptColumn_LazyColumnWrapper","LazyColumnWrapper","ColumnContext","allFactory","_all","byName","byID","byIndex","model_ScriptColumn","ScriptColumn","ScriptColumn_1","EVENT_SCRIPT_CHANGED","setScript","getScript","clean","raws","model_SetColumn","SetColumn","separator","SetColumn_1","getSortedSet","sv","cardinality","model_StringMapColumn","StringMapColumn","getMapValue","model_StringsColumn","StringsColumn","model_LinkColumn","LinkColumn","patternTemplates","setPattern","LinkColumn_1","EVENT_PATTERN_CHANGED","getPattern","getLink","href","transformValue","alt","model_LinkMapColumn","LinkMapColumn","getLinkMap","model_LinksColumn","LinksColumn","LinksColumn_1","getLinks","abortAble_isPromiseLike","ABORTED","thenFactory","loader","isAborted","abort","onfulfilled","_onrejected","loadedOrAborted","res","abortAble_abortAble","aborted","aborter","race","abortAbleFetch","init","controller","AbortController","reject","fetch","signal","catch","DOMException","abortAbleAll","all","isAbortAble","abortAble","isAsyncUpdate","update","ready","abortAbleResolveNow","SCHEMA_REF","cleanCategories","isEmpty","deriveBaseType","options","warn","datePattern","treatAsCategorical","categoricalThreshold","deriveType","primitive","cats_1","value_1","vi","first","mapAll","vii","sameLength","hasDifferentSizes","vi_1","p_1","deriveColumnDescriptions","config","math_range","existing","exclude","selectColumns","foundRow","toLabel","deriveColors","exportRanking","opts","newline","header","quote","quoteChar","verboseColumnHeaders","rangeSelection","provider","rankingId","relIndex","ctrlKey","getRankings","selection","getSelection","nearest","distance","setSelection","toDirtyReason","UNKNOWN","SORT_CRITERIA_CHANGED","GROUP_CRITERIA_CHANGED","GROUP_SORT_CRITERIA_CHANGED","mergeDirtyOrderContext","currentReason","nextReason","combined","nextReason_1","provider_ADataProvider","ADataProvider","rankings","aggregations","columnTypes","colorMappingFunctionTypes","mappingFunctionTypes","singleSelection","showTopN","aggregationStrategy","fromDescRef","descRef","aggregate","annotate","boolean","booleans","boxplot","categoricalMap","categoricals","dateMap","imposition","impositionBoxPlot","impositions","nested","model_NestedColumn","numbers","numberMap","ordinal","rank","stack","stringMap","strings","link","linkMap","links","quantized","custom","colorMappingFunctions","pow1.1","pow2","pow3","typeFactory","createTypeFactory","fixDesc","typeName","createColorMappingFunction","EVENT_DATA_CHANGED","EVENT_BUSY","EVENT_SHOWTOPN_CHANGED","EVENT_ADD_RANKING","EVENT_REMOVE_RANKING","EVENT_SELECTION_CHANGED","EVENT_ADD_DESC","EVENT_CLEAR_DESC","EVENT_JUMP_TO_NEAREST","EVENT_GROUP_AGGREGATION_CHANGED","pushRanking","cloneRanking","insertRanking","fireBusy","busy","takeSnapshot","hasString","hasColumn","toClone","FORWARD_RANKING_EVENTS","triggerReorder","paths","removeDuplicates","level","real","unifyParents","initAggregateState","removeRanking","cleanUpRanking","clearRankings","getFirstRanking","getLastRanking","ensureOneRanking","destroy","_ranking","nextId","select","deselect","selectAll","deselectAll","getAggregationState","setAggregationState","cleanDesc","dumpColumn","restoreColumn","$schema","restoreRanking","object2Map","deriveDefault","addSupportType","getColumns","getTopNAggregated","EXPAND_TOP_N","setTopNAggregated","unaggregateParents","getAggregationStrategy","aggregateAllOf","aggregateAll","getShowTopN","setShowTopN","jumpToNearest","selectAllOf","clearSelection","toggleSelection","additional","selectedRows","view","exportTable","isComplexAccessor","rowComplexGetter","rowGetter","rowGuessGetter","injectAccessor","provider_ACommonDataProvider","ACommonDataProvider","rankingIndex","nextRankingId","pushDesc","clearColumns","findDesc","missingBinary","missingUInt16","missingUInt32","missingInt8","missingInt16","missingInt32","missingFloat","missingFloatAsc","missingString","toCompareLookUp","rawLength","INT8","INT16","INT32","DOUBLE","createSetter","missingCount","sort_CompareLookup","CompareLookup","isSorting","valueCaches","chooseMissingByLength","ri","pushValues","free","ANOTHER_ROUND","oneShotIterator","calc","scheduler_thenFactory","wrappee","onrejected","TaskScheduler","taskId","runTasks","deadline","task","didTimeout","timeRemaining","requestAnimationFrame","reSchedule","ww","requestIdleCallback","pushMulti","abortOrDummy","isAbortedOrDummy","abortAll","abort_1","clearIdleCallback","TaskNow","onfullfilled","taskNow","abortedTask","tasks_TaskLater","TaskLater","taskLater","tasksAll","tasks_MultiIndices","MultiIndices","_joined","tasks_ARenderTasks","ARenderTasks","valueCacheData","byOrder","byOrderAcc","builder","orders","currentChunkSize","chunkCounter","actOrder","builderForEach","numberStatsBuilder","key_1","dacc","vs_1","setValueCacheData","cache_1","vs_2","cache","dateValueCacheBuilder","cache_2","vs_3","name2index","categoricalValueCacheBuilder","cache_3","dirtyColumn","DENSE_HISTOGRAM","MIN_LABEL_WIDTH","HOVER_DELAY_SHOW_DETAIL","sortDirect","lookups","DirectRenderTasks_DirectRenderTasks","DirectRenderTasks","setData","dirtyRanking","preCompute","preComputeData","preComputeCol","copyData2Summary","copyCache","fromPrefix","tkey","_singleCall","groupCompare","rg","rg_1","groupRows","_col","groupExampleRows","groupBoxPlotStats","summaryBoxPlotStatsD","summary","groupNumberStats","summaryNumberStatsD","groupCategoricalStats","summaryCategoricalStatsD","groupDateStats","summaryDateStatsD","summaryBoxPlotStats","summaryNumberStats","summaryCategoricalStats","summaryDateStats","cached","dataNumberStats","dataBoxPlotStats","dataCategoricalStats","dataDateStats","creator","dontCache","isMapColumn","endsWith","isArrayColumn","isCategoricalLikeColumn","isSetColumn","isCategoricalColumn","isCategoricalsColumn","isCategory","isDateColumn","isDatesColumn","ScheduledTasks_ScheduleRenderTasks","ScheduleRenderTasks","scheduler","checker","this_1","cols_1","ogroups","cols_3","ogroups_1","ogroups_2","_e","ogroups_3","multi","cols_2","chainCopy","chain","joined","canAbort","isValidCacheEntry","subTask","created","subTask_1","valueCacheKey","singleCall","indexArray","toTransfer","isAlwaysShowingGroupStrategy","strategy","toItemMeta","relativeIndex","topN","groupParents","meta","prev","prevMeta","groupEndLevel","topNGetter","last","isSummaryGroup","internal_index2pos","ERenderMode","LocalDataProvider","_data","ooptions","filterGlobally","jumpToSearchResult","taskExecutor","_dataRows","toRows","reorderAll","getTotalNumberOfRows","getTaskExecutor","dataChanged","clearData","appendData","trackRanking","addKey","removeKey","removeCol","addCol","resolveFilter","noSorting","createSorter","needsFiltering","needsGrouping","needsSorting","groupOrder","pushGroup","groupKey","groupCaches","filterCaches","toGroup","fc","before","sortGroup","groupLookup","singleGroup","sortTask","groupSortTask","groupC","sortGroups","groupIndices","reasons","needsGroupSorting","isSortedBy","isGroupedSortedBy","getRow","mappingSample","searchAndJump","search","styles","getStyle","defaultValue","COLUMN_PADDING","FILTERED_OPACITY","parseFloat","DASH","height","UPSET","inactive","DOT","BOX_PLOT","box","stroke","AGGREGATE","strokeWidth","levelOffset","levelWidth","SLOPEGRAPH_WIDTH","CANVAS_HEIGHT","CSS_PREFIX","ENGINE_CSS_PREFIX","cssClass","engineCssClass","aria","text","utils_noop","noRenderer","setText","textContent","querySelectorAll","forEachChild","matchColumns","childElementCount","dataset","columnId","rendererId","idsAndRenderer","idAndRenderer","cnode","querySelector","asElement","classList","innerHTML","children_1","wideEnough","adaptColorCache","adaptTextColorToBgColor","bgColor","uniqueId","idCounter","NUM_EXAMPLE_VALUES","exampleText","examples","multiLevelGridCSSClass","idPrefix","utils_colorOf","ActionRenderer","title","canRender","SUMMARY","className","icon","ni","onclick","event","preventDefault","stopPropagation","action","createGroup","createSummary","matchNodes","addTopN","doc","ownerDocument","renderGroups","isRow","isLeafGroup","alwaysShowGroup","isSummary","hasTopN","hasTopNStrategy","lastParent","state","isLastGroup","toggle","isCollapsed","isFirst","isShowAll","childTopN","nextState","isDummyGroup","AggregateGroupRenderer","render","fillStyle","fillRect","filterMissingText","filterMissingMarkup","bakMissing","filterMissingNumberMarkup","findFilterMissing","getElementsByClassName","previousElementSibling","updateFilterMissingNumberMarkup","element","getElementsByTagName","disabled","lastElementChild","renderMissingValue","dashX","dashY","renderMissingDOM","renderMissingCanvas","StringCellRenderer","interactiveSummary","form","isRegex","checked","onchange","onsubmit","actCol","_context","interactive","StringCellRenderer_toString","AnnotationRenderer","firstElementChild","renderer_StringCellRenderer","impose_colorOf","imposer","valueHint","BarCellRenderer","renderValue","CELL","colWidth","bar","backgroundColor","adapt","innerText","span","adaptDynamicColorToBgColor","DefaultCellRenderer_DefaultCellRenderer","DefaultCellRenderer","groupTitle","summaryTitle","_mode","BooleanCellRenderer","BOXPLOT","MAPPED_BOXPLOT","BoxplotCellRenderer","sortedByMe","renderDOMBoxPlot","topPadding","strokeStyle","beginPath","rect","bottomPos","middlePos","moveTo","lineTo","renderBoxPlot","_interactive","range_1","hasRange","computeLabel","whiskers","nextElementSibling","leftWhisker","rightWhisker","display","outliers","numOutliers","insertAdjacentElement","toHeatMapColor","valueColor","BrightnessCellRenderer","CategoricalCellRenderer","CategoricalCellRenderer_hist","filterUpdate","interactiveHist","staticSummary","showLabels","bins","gHist","inner","gCount","relY","background","inner_1","markFilter","bin","included","contained","parentElement","CategoricalHeatmapCellRenderer","createContext","cellDimension","mover","offsetX","getContext","canvas","clearRect","onmousemove","onmouseleave","maps","toMostFrequentCategoricals","templateRows","labels_1","CategoricalStackedDistributionlCellRenderer","stackedBar","CategoricalStackedDistributionlCellRenderer_interactiveSummary","CategoricalStackedDistributionlCellRenderer_staticSummary","selectedCol","gBins","flexGrow","total_1","CircleCellRenderer","DotCellRenderer","getCanvasRenderer","pi2","radius","save","globalAlpha","arc","getDOMRenderer","dots","tmp","top","formatter","seq1","seq2","concatSeq","GroupCellRenderer_isDummyGroup","GroupCellRenderer","_ctx","ANumbersCellRenderer_ANumbersCellRenderer","ANumbersCellRenderer","normalized","bbn_1","bbr_1","templateRow","HeatmapCellRenderer","_hist","isBrowser","longerTimeoutBrowsers","timeoutDuration","popper_i","popper_debounce","fn","called","scheduled","isFunction","functionToCheck","getStyleComputedProperty","nodeType","css","getParentNode","nodeName","parentNode","host","getScrollParent","body","_getStyleComputedProp","overflow","overflowX","overflowY","isIE11","MSInputMethodContext","documentMode","isIE10","isIE","getOffsetParent","noOffsetParent","offsetParent","getRoot","findCommonOffsetParent","element1","element2","compareDocumentPosition","Node","DOCUMENT_POSITION_FOLLOWING","createRange","setStart","setEnd","commonAncestorContainer","contains","element1root","getScroll","upperSide","html","scrollingElement","getBordersSize","axis","sideA","sideB","getSize","computedStyle","getWindowSizes","classCallCheck","instance","Constructor","createClass","defineProperties","props","protoProps","staticProps","_extends","getClientRect","bottom","getBoundingClientRect","scrollTop","scrollLeft","sizes","clientWidth","clientHeight","horizScrollbar","offsetWidth","vertScrollbar","offsetHeight","getOffsetRectRelativeToArbitraryNode","fixedPosition","isHTML","childrenRect","parentRect","scrollParent","borderTopWidth","borderLeftWidth","marginTop","marginLeft","subtract","modifier","includeScroll","getFixedPositionOffsetParent","el","getBoundaries","popper","boundariesElement","boundaries","excludeScroll","relativeOffset","innerWidth","innerHeight","getViewportOffsetRectRelativeToArtbitraryNode","boundariesNode","isFixed","_getWindowSizes","isPaddingNumber","computeAutoPlacement","placement","refRect","rects","sortedAreas","area","_ref","filteredAreas","_ref2","computedPlacement","variation","getReferenceOffsets","getOuterSizes","marginBottom","marginRight","getOppositePlacement","hash","getPopperOffsets","referenceOffsets","popperRect","popperOffsets","isHoriz","mainSide","secondarySide","measurement","secondaryMeasurement","check","runModifiers","modifiers","ends","prop","cur","isModifierEnabled","modifierName","getSupportedPropertyName","upperProp","toCheck","getWindow","setupEventListeners","updateBound","passive","scrollElement","attachToScrollParents","scrollParents","isBody","eventsEnabled","disableEventListeners","cancelAnimationFrame","scheduleUpdate","isNumeric","setStyles","unit","isFirefox","isModifierRequired","requestingName","requestedName","requesting","isRequired","_requesting","requested","placements","validPlacements","clockwise","counter","BEHAVIORS","FLIP","CLOCKWISE","COUNTERCLOCKWISE","parseOffset","basePlacement","useHeight","fragments","frag","divider","splitRegex","ops","op","mergeWithPrevious","str","toValue","index2","Defaults","positionFixed","removeOnDestroy","onCreate","onUpdate","shiftvariation","_data$offsets","isVertical","side","shiftOffsets","preventOverflow","transformProp","popperStyles","primary","escapeWithReference","secondary","keepTogether","opSide","arrow","_data$offsets$arrow","arrowElement","len","sideCapitalized","altSide","arrowElementSize","popperMarginSide","popperBorderSide","sideValue","flip","flipped","originalPlacement","placementOpposite","flipOrder","behavior","refOffsets","overlapsRef","overflowsLeft","overflowsRight","overflowsTop","overflowsBottom","overflowsBoundaries","flippedVariationByRef","flipVariations","flippedVariationByContent","flipVariationsByContent","flippedVariation","getOppositeVariation","subtractLength","bound","computeStyle","legacyGpuAccelerationOption","gpuAcceleration","offsetParentRect","position","shouldRound","noRound","referenceWidth","popperWidth","isVariation","horizontalToInteger","verticalToInteger","getRoundedOffsets","devicePixelRatio","prefixedProperty","willChange","invertTop","invertLeft","x-placement","arrowStyles","applyStyle","removeAttribute","onLoad","modifierOptions","Popper","isDestroyed","isCreated","jquery","enableEventListeners","Utils","PopperUtils","TYPE_OBJECT","merge_merge","bKeys","bKeys_1","dialogContext","attachment","currentTarget","manager","dialogManager","dialogs_ADialog","ADialog","dialog","fullDialog","resetPossible","toggleDialog","equals","appendDialogButtons","insertAdjacentHTML","open","removeLike","closest","auto","focus","reset","checkValidity","submit","cancel","findInput","InputNumberDialog","ioptions","valueAsNumber","dragHandle","handle","container","onStart","onDrag","onEnd","minDelta","toContainerRelative","elem","clientLeft","handleShift","mouseMove","clientX","mouseUp","onmousedown","filteredColor","histogramTemplate","guessedBins","histogramUpdate","unfiltered","colorOf","nodes","matchBins","mappingHintTemplate","mappingHintUpdate","filteredHistTemplate","filterMin","filterMax","initFilter","minHint","maxHint","minValue","unpercent","maxValue","shiftKey","edit","button","px","HistogramCellRenderer","getHistDOMRenderer","n_1","HistogramCellRenderer_staticSummary","updateFilter","fContext","dialogCtx","dialogs_InputNumberDialog","createFilterContext","createFilterInfo","HistogramCellRenderer_interactiveSummary","ImageCellRenderer","backgroundImage","src","image","Image","onload","AAggregatedGroupRenderer_AAggregatedGroupRenderer","AAggregatedGroupRenderer","single","aggregatedIndex","createData","stacked","GROUP","MultiLevelCellRenderer","toWait","missingWeight","ci","gridColumnStart","stackShift","col_1","cr","callbacks","sorted","medianIndex","InterleavingCellRenderer","rr","summaries","grouped","sample","dummyBin","groupedHist","LinkCellRenderer","TableCellRenderer","createFixed","example","createFixedGroup","groupByKey","LinkMapCellRenderer","arr_1","LoadingCellRenderer","MapBarCellRenderer","RankCellRenderer","fromTSpan","toTSpan","SelectionRenderer","unselected","unchecked","SetCellRenderer","createDOMContext","categories_1","posx","wideEnoughCat","categories_2","SparklineCellRenderer_line","moveNext","SparklineCellRenderer","yPos","repeat","matchRows","UpSetCellRenderer","calculateSetPath","catindexes","line","hasTrueValues","VerticalBarCellRenderer","one","xpos","DateCellRenderer","chosen","InputDateDialog","valueAsDate","DateHistogramCellRenderer","DateHistogramCellRenderer_getHistDOMRenderer","dummyDomain","DateHistogramCellRenderer_createFilterContext","DateHistogramCellRenderer_createFilterInfo","now","DateHistogramCellRenderer_interactiveSummary","DateHistogramCellRenderer_staticSummary","dialogs_InputDateDialog","defaultCellRenderer","renderers_renderers","renderer_ActionRenderer","renderer_AggregateGroupRenderer","renderer_AnnotationRenderer","renderer_BooleanCellRenderer","renderer_BoxplotCellRenderer","brightness","renderer_BrightnessCellRenderer","catdistributionbar","renderer_CategoricalStackedDistributionlCellRenderer","renderer_CategoricalCellRenderer","circle","renderer_CircleCellRenderer","renderer_DateCellRenderer","default","dot","renderer_DotCellRenderer","renderer_GroupCellRenderer","heatmap","renderer_HeatmapCellRenderer","catheatmap","renderer_CategoricalHeatmapCellRenderer","histogram","renderer_HistogramCellRenderer","datehistogram","renderer_DateHistogramCellRenderer","renderer_ImageCellRenderer","interleaving","renderer_InterleavingCellRenderer","renderer_LinkCellRenderer","renderer_LinkMapCellRenderer","loading","renderer_LoadingCellRenderer","renderer_MultiLevelCellRenderer","renderer_BarCellRenderer","mapbars","renderer_MapBarCellRenderer","renderer_RankCellRenderer","renderer_SelectionRenderer","renderer_SetCellRenderer","sparkline","renderer_SparklineCellRenderer","renderer_TableCellRenderer","upset","renderer_UpSetCellRenderer","verticalbar","renderer_VerticalBarCellRenderer","updateFilterState","filtered","active","sortMethods","methods","BooleanFilterDialog","isTrue","isFalse","sets","schemeCategory10","schemeAccent","schemeDark2","schemePastel1","schemePastel2","schemeSet1","schemeSet2","schemeSet3","CategoricalColorMappingDialog","CategoricalFilterDialog","noFilter","CategoricalMappingFilterDialog","joint","oninput","items","ChangeRendererDialog","currentGroup","currentSummary","getPossibleRenderer","ColorMappingDialog","refColor_1","colorsets_1","gradient","isCustom","continuouos","toggles","toggles_2","toggles_1","customs","updateColor","customs_1","s0","s1","dm1","toColor","updateSelectedColor","updateGradients","steppedGradient","di","stepSize","half","hasDnDType","typesToCheck","available","dataTransfer","dndTransferStorage","isEdgeDnD","updateDropEffect","dT","effectAllowed","copyDnD","dropEffect","dropAble","mimeTypes","onDrop","onDragOver","canDrop","effect","getData","mime","MoreColumnOptionsDialog","addIcon","addIconDOM","getToolbar","shortcut","createToolbarMenuItems","updateIconState","createHeader","dragAble","mergeDropAble","rearrangeAble","resizeable","extraPrefix","extra","createShortcutMenuItems","toggleToolbarIcons","dragAbleColumn","resolveDrop","MIMETYPE_PREFIX","alternative","JSON","pushChild","mergeImpl","mergeWith","numberish","draginfo","toInsertParent","rearrangeDropAble","ueberElement","dragWidth","updateHeader","minWidth","colId","typeCat","groupedBy","actionCSSClass","showLabel","featureCategory","setHighlightColumn","onClick","willAutoHide","toolbar","shortcuts","hybrids","moreEntries","dialogs_MoreColumnOptionsDialog","defaultVisibleClientWidth","rotated","scrollWidth","toggleRotatedHeader","availableWidth","shortCuts","moreIcon","needMore","actions_1","onDragStart","draggable","payload","over","stringify","text/plain","CompositeChildrenDialog","substr","createChildren","summaryNode","CutOffHierarchyDialog","innerNodes","innerNodePaths","setCustomValidity","newNode","newNodeIndex","maxDepthText","DateFilterDialog","to","EditPatternDialog","templates","GroupDialog","addons","getToolbarDialogAddons","addon","append","updateDisabled","disable","trigger","priority_1","sortOrder","MappingLineDialog_clamp","MappingLineDialog_MappingLineDialog","MappingLineDialog","adapter","unnormalizeRaw","normalizeRaw","MappingLineDialog_MappingLine","MappingLine","beforeDomain_1","beforeRange_1","shiftDomain_1","shiftRange_1","normalize_1","common","updated","destroyed","MappingDialog","mappingLines","mappingAdapter","updateLines","computeScale","rawDomain","scaleType","others","bb","textarea_1","copyMapping","createMappings","scaleType_1","selectedIndex","applyMapping","getAttribute","newScale","NumberFilterDialog","ReduceDialog","RenameDialog","newDescription","ScriptEditDialog","SearchDialog","checkbox","ShowTopNDialog","SortDialog","SortDialog_sortOrder","StringFilterDialog","WeightsEditDialog","inputs","updateBar","distributeWeights","missingIndices","sum_1","missingIndices_1","missingIndices_2","validWeights","inputs_1","buttons","inputs_2","reportValidity","ui","uiDialog","dialogClass","extraArgs","uiSortMethod","toolbar_sort","removeAboveLevel","isAscByDefault","dialogs_SortDialog","sortGroupBy","rename","dialogs_RenameDialog","vis","dialogs_ChangeRendererDialog","toolbar_clone","_evt","removeAll","toolbar_group","dialogs_GroupDialog","toggleCompressExpand","mcol","compress","expand","dialogs_ShowTopNDialog","toolbarAddons","sortNumber","sortNumbers","sortBoxPlot","sortDates","groupNumber","isThreshold","thresholds","groupString","isRegexCheck","groupDate","toolbarActions","dialogs_SearchDialog","filterNumber","dialogs_NumberFilterDialog","filterDate","dialogs_DateFilterDialog","filterString","dialogs_StringFilterDialog","filterCategorical","dialogs_CategoricalFilterDialog","filterOrdinal","dialogs_CategoricalMappingFilterDialog","filterBoolean","dialogs_BooleanFilterDialog","colorMapped","dialogs_ColorMappingDialog","colorMappedCategorical","dialogs_CategoricalColorMappingDialog","dialogs_ScriptEditDialog","dialogs_ReduceDialog","cutoff","dialogs_CutOffHierarchyDialog","editMapping","dialogs_MappingDialog","editPattern","dialogs_EditPatternDialog","editWeights","dialogs_WeightsEditDialog","compositeContained","dialogs_CompositeChildrenDialog","splitCombined","invertSelection","ss","sortActions","toolbar_cache","cacheAddon","getFullToolbar","icons","possible","toolbarIcon","getOwnMetadata","m_1","getAllToolbarActions","flags","advancedModelFeatures","advancedRankingFeatures","advancedUIFeatures","cacheKey","m_2","getAllToolbarDialogAddons","defaultOptions","renderers","labelRotation","summaryHeader","animated","expandLineOnHover","sidePanel","sidePanelCollapsed","hierarchyIndicator","defaultSlopeGraphMode","overviewMode","rowHeight","groupHeight","groupPadding","rowPadding","levelOfDetail","customRowUpdate","dynamicHeight","disableFrozenColumns","ignoreUnsupportedBrowser","SUPPORTED_FIREFOX_VERSION","SUPPORTED_CHROME_VERSION","SUPPORTED_EDGE_VERSION","getUnsupportedBrowserError","info","detect_browser","fVersion","EAnimationMode","ALineUp_ALineUp","ALineUp","ignoreIncompatibleBrowser","highlightListeners","isBrowserSupported","EVENT_HIGHLIGHT_CHANGED","setDataProvider","dataIndices","enableHighlightListening","_enable","NO_CHANGE_DELTA","defaultPhases","delay","nodeY","animation","SHOW","HIDE","UPDATE_REMOVE","animation_KeyFinder","KeyFinder","lastFilled","key2index","exceptions","findValidStart","posByKey","pos","fillCacheTillKey","defaultRowHeight","fillCache","heightOf","exceptionsLookup","exceptionHeightOf","returnDefault","numberOfRows","positions","defaultMode","ScrollHandler","sync","handler","timer","handleAnimationImpl","handleAnimation","handleTimeouts","asInfo","isWaiting","addScroll","scroller","__le_scroller__","isScrollEventWaiting","internal_clear","EScrollResult","RowHeightException","nonUniformContext","rowHeights","mostFrequentValue","totalHeight","between","logic_range","heightExceptions","firstRowPos","endPos","y2","offset2","indexShift","offsetShift","isGuess","shifted2","lastPos","heightExceptions_1","firstException","lastException","updateFrozen","oldLast","added","PREFIX","styles_cssClass","CSS_CLASS_LOADING","CSS_CLASS_FROZEN","CSS_CLASS_HIDDEN","CSS_CLASS_MULTI","CSS_CLASS_EVEN","CSS_CLASS_SHIFTED","CSS_CLASS_SCROLLBAR_TESTER","CSS_CLASS_HEADER","CSS_CLASS_BODY","CSS_CLASS_FOOTER","CSS_CLASS_THEAD","CSS_CLASS_TBODY","CSS_CLASS_TR","CSS_CLASS_TH","CSS_CLASS_TD","CSS_CLASS_SCROLLING","CSS_CLASS_ROW_ANIMATION","isLoadingCell","src_ARowRenderer","ARowRenderer","pool","loadingPool","forcedFirst","forcedLast","visibleFirstRowPos","scrollListener","lastScrollInfo","abortAnimation","async","minScrollDelta","mixins","scrollingHint","batchSize","striped","viewportOversize","createAdapter","mixinClass","fragment","createDocumentFragment","addMixin","addAtBeginning","addAtBottom","removeFromBeginning","removeFromBottom","updateOffset","bodyScroller","scrollOffset","scrollTotal","sizer","tagName","insertBefore","firstChild","isGoingDown","onScrolledVertically","recreate","cleanUp","updateRow","createRow","selectProxy","proxy","recycle","replaceChild","ex","perform","torecycle","forEachRow","inplace","fromBeginning","nextSibling","previousSibling","updateSizer","setTransform","bodySizer","recreateAnimated","recreatePure","clearPool","previousKey","currentKey","rows_1","UPDATE","UPDATE_CREATE","nodeYCurrentHeight","nextPos","prevHeight","animate","phases","previousFinder","currentFinder","currentTimer","actPhase","executePhase","phase","anim","run","offsetTop","dummyAnimation","previousHeight","currentHeight","curr","revalidate","shiftTop","scrollResult","onScrolledImpl","onScrolled","shiftLast","currentDelta","shiftFirst","currentFirstRow","NONE","toadd","SOME","toaddBottom","ALL","SOME_TOP","SOME_BOTTOM","manipulate","toRecycle","toAdd","toRecycle_1","anyelem","__transform__","assignStyles","plain","hyphen","setProperty","tableIds","tableId","thead","tbody","tr","th","td","tableCSSClasses","ids","style_GridStyleManager","GridStyleManager","cssClasses","headerScroller","measureScrollbar","updateRule","borderRight","frozenShift","selectors","updateColumns","deleteRule","rules","ruleNames","cssSelectors","thStyles","tdStyles","StyleManager","testVerifyTimeout","createTextNode","verifySheet","sheet","cssRules","selectorText","rule","insertRule","cssRule","getSheetRule","addRule","stored","table_MultiTableRowRenderer","MultiTableRowRenderer","htmlId","sections","columnPadding","main","isGoingRight","onScrolledHorizontally","scrollEnd","headerFooter","bodyFooter","maxHeight","pushTable","extras","pushSeparator","section","widthChanged","DialogManager","escKeyListener","which","removeLast","openDialogs","setHighlight","mask","clipPath","webkitClipPath","clearHighlight","takeDown","setUp","mixin_PrefetchMixin","PrefetchMixin","prefetchTimeout","cleanupTimeout","prefetchRows","cleanUpRows","prefetchDown","nextLast","prefetchUp","syncFrozen","triggerPrefetch","prefetchDownPossible","prefetchUpPossible","isLast","cleanUpTop","newFirst","cleanUpBottom","newLast","triggerCleanUp","internal_ACellAdapter","ACellAdapter","mixinClasses","cellPool","visibleColumns","visibleFirstColumnPos","horizontallyShifted","columnAdapter","createColumnAdapter","columnMixins","columnFragment","leftShift","addColumnMixin","addColumnAtStart","addColumnAtEnd","removeColumnFromStart","removeColumnFromEnd","updateColumnOffset","onScrolledHorizontallyImpl","removeCellFromStart","recycleCell","removeCellFromEnd","removeFrozenCells","columnIndices","columnIndices_1","columnIndex","removeFrozenColumns","removeAllColumns","includingFrozen","removeAllCells","frozen_1","frozen_2","selectProxyCell","columnObj","pooled","updateCell","createCell","updateShiftedState","handleCellReady","selectCell","rowIndex","addCellAtStart","cell","insertFrozenCells","columnIndices_2","insertFrozenColumns","addCellAtEnd","verifyRows","verifyRow","updateHeaders","fragment_1","document_1","ids_1","firstColumnPos","changed","id_1","mergeColumns","updateImpl","cell_1","byId","updateShiftedStates","shifted","headers","bodies","headers_1","bodies_1","headers_2","bodies_2","shiftingChanged","colObjs","ACellTableSection_ACellTableSection","ACellTableSection","LocalCell","hidden","onVisibilityChanged","updateShifts","_left","_visible","wasHidden","updateColumnWidths","oldLeft","toGroupLookup","item2groupIndex","group2firstItemIndex","toKey","lineupAnimation","previousData","currentData","prevHelper","currHelper","currentRowIndex","referenceIndex","appearPosition","_previousFinder","previousRowIndex","removePosition","RenderColumn","singleRenderer","singleTemplate","cloneNode","singleId","groupTemplate","groupId","summaryTemplate","summaryId","isGroup","oldRenderer","currentRenderer","oldGroup","getGroup","chainAbortAble","renderCell","mapper","mapped","EMode","MultiLevelRenderColumn","mc","updateNested","matchChildren","cc","updateWidthRule","gridTemplateColumns","sub","ui_RenderColumn","ui_SelectionManager","SelectionManager","hr","showHint","startNode","elementFromPoint","clientY","endNode","xShift","yShift","EVENT_SELECT_RANGE","startIndex","endIndex","sy","ey","MIN_DISTANCE","selectRange","updateState","selectedDataIndices","EngineRanking_RankingEvents","RankingEvents","EVENT_UPDATE_DATA","EVENT_RECREATE","PASSIVE","ui_EngineRanking","EngineRanking","roptions","loadingCanvas","highlight","canvasPool","canvasMouseHandler","hoveredRows","unhover","enter","leave","updateHoveredRow","isCanvasRenderedRow","highlightHandler","delayedUpdate","updateBody","delayedUpdateAll","updateAll","delayedUpdateColumnWidths","createCol","reindex","disableListener","_oldValue","renderCtx","ui_MultiLevelRenderColumn","createRenderer","visibility","_document","createCellHandled","initCellClasses","selectCanvas","rowFlags","rowany","__lu__","visibleRenderedWidth","pushLazyRedraw","renderRow","imageSmoothingEnabled","domColumns","renderCellImpl","visibleElements","firstDOM","updateCellImpl","domColumns_1","updateCanvasCell","me","me_1","needDOM","updateHeaderOf","toRowMeta","agg","hoverLod","computedLod","wasLow","wasGroup","recycleCanvas","canvas2","updateCanvasBody","level_1","enable","hover","updateSelection","updateColumn","after","groupData","pushItem","ordered","gparent","rowContext","findNearest","lookFor","firstBeforePos","firstAfterPos","nearestPos","scrollIntoView","regular","posOf","scrollHeight","found","getHighlight","debounceUpdate","replacement","SlopeGraph_ItemSlope","ItemSlope","SlopeGraph_GroupSlope","GroupSlope","SlopeGraph","leftSlopes","rightSlopes","chosenSelectionOnly","ITEM","BAND","initHeader","scroll","rebuild","leftRanking","leftContext","rightRanking","rightContext","prepareRightSlopes","computeSlopes","fakeGroups","padded","slopes","gr","heightPerRow","fakeGroup","createFakeGroup","intersection","filterIndices","chooseSelection","leftVisibleFirst","leftVisibleLast","rightVisibleFirst","rightVisibleLast","alreadyVisible","selectionLookup","updatePath","__data__","selectionSlopes","ownerSVGElement","matchLength","addPath","openDataIndices","paths_2","ss_1","paths_1","ui_EngineRenderer","EngineRenderer","slopeGraphs","updateAbles","zoomFactor","enabledHighlightListening","helper","dialogs_DialogManager","chooseRenderer","chooseGroupRenderer","chooseSummaryRenderer","toDisable","initProvider","zoomOut","updateZoomFactor","zoomIn","fontSize","pushUpdateAble","updateAble","takeDownProvider","addRanking","setHighlightToNearest","updateHist","rankings_1","updateUpdateAbles","ui_SlopeGraph","updateRotatedHeaderState","slope","round2","impl_1","f_1","defaultHeight","heightsFor","rankings_2","updateSlopeGraphs","ChooseRankingDialog","panel_SearchBox","SearchBox","formatItem","placeholder","onfocus","onblur","blur","onkeydown","handleKey","itemTemplate","buildDialog","li","isItem","onmouseenter","highlighted","KEYS","click","highlightPrevious","highlightNext","filterResults","empty","ul","allChildrenHidden","RenameRankingDialog","MoreRankingOptionsDialog","dialogs_RenameRankingDialog","AddonDialog","Hierarchy","groupAdder","groupSortAdder","sortAdder","renderSorting","renderGroupSorting","toColumn","addonKey","onChange","prevent","customize","addGroupAdder","addSortAdder","addGroupSortAdder","addAdder","adder","onSelect","used","dialogs_AddonDialog","SidePanelEntryVis","summaryUpdater","recreateSummary","appendSummary","updateSummary","SidePanelRanking","dropdown","dialogs_MoreRankingOptionsDialog","panel_Hierarchy","updateHierarchy","updateList","panel_SidePanelEntryVis","isWrapper","SidePanel","additionalDescs","chooser","collapseable","descs","dialogs_ChooseRankingDialog","initChooser","changeDataStorage","panel","wrapDesc","updateChooser","updateStats","createEntry","makeActive","panel_SidePanelRanking","updateRanking","resetButton","groupByType","LineUp","panel_SidePanel","spaceFillingRule","availableHeight","visibleHeight","groupSeparators","violation","itemHeight","taggle_TaggleRenderer","TaggleRenderer","isDynamicLeafHeight","resizeListener","violationChanged","switchRule","Taggle","_rule","setViolation","spaceFilling","spaceFilling_1","updateLodRules","ERemoteStatiticsType","ListIterator","youngest","LRUCache","maxSize","removeFromList","appendToList","oldest","toRankingDump","CustomAbortSignal","onabort","internal_MultiAbortSignal","MultiAbortSignal","CallDebouncer","debounceKeys","debouncedCall","signal_1","resolve_1","promise","resolveImpl","DEBOUNCE_DELAY","dummyRawNormalizedStatistics","dummyRawNormalizedAdvancedBoxPlotData","fixNullNaN","keys_1","fixDateInstance","parser","isComputeAble","toComputeAbleType","RemoteTaskExecutor_suffix","RemoteTaskExecutor","server","cacheLoading","debouncer","isDummyRanking","totalNumberOfRows","cleanCaches","deleteKey","preComputeBoxPlot","precomputeBoxPlotStats","computeAble","computeAbleBoxPlot","preComputeDataImpl","toLoadSummary","toLoadBoxPlotSummary","computeRankingStats","computeAble_1","computeAbleBoxPlot_1","toLoadGroup","toLoadBoxPlotGroup","computeGroupStats","columns_1","preComputeColGiven","toLoadData","toLoadBoxPlotData","computeDataStats","copyData2SummaryCol","groupStats","summaryStats","force","dataStats","dummyFactory","rankingDump","viewRows","RemoteDataProvider","maxCacheSize","loadNeighbors","sortAborter","currentSort","internal_LRUCache","remote_RemoteTaskExecutor","missingResolve","missingReject","missingLoader","missingIndex","load","guessRowsToLoad","startRank","endRank","toLoad","ColumnBuilder","_color","asArray","asMap","buildColumn","LineUpBuilder","rotation","registerRenderer","registerToolbarAction","registerToolbarDialogAddon","groupRowHeight","disableAdvancedRankingFeatures","disableAdvancedModelFeatures","disableAdvancedUIFeatures","RankingBuilder_RankingBuilder","RankingBuilder","groupSort","supportTypes","allColumns","impose","colorColumn","scripted","mixed_1","weightedSum","numberColumn","numberColumn1","weight1","numberColumn2","weight2","numberColumnAndWeights","post","operation","numberColumns","ALL_MAGIC_FLAG","addColumn","col2","sorts_1","sorts_2","builder_RankingBuilder","buildRanking","CategoricalColumnBuilder_CategoricalColumnBuilder","CategoricalColumnBuilder","asOrdinal","asSet","derive","isSet","val","column_ColumnBuilder","buildCategoricalColumn","NumberColumnBuilder_NumberColumnBuilder","NumberColumnBuilder","asBoxPlot","ext","buildNumberColumn","StringColumnBuilder_StringColumnBuilder","StringColumnBuilder","editable","buildStringColumn","DateColumnBuilder_DateColumnBuilder","DateColumnBuilder","buildDateColumn","HierarchyColumnBuilder_HierarchyColumnBuilder","HierarchyColumnBuilder","buildHierarchicalColumn","ActionsColumnBuilder_ActionsColumnBuilder","ActionsColumnBuilder","groupAction","buildActionsColumn","BooleanColumnBuilder_BooleanColumnBuilder","BooleanColumnBuilder","marker","falseMarker","buildBooleanColumn","DataBuilder_ADataBuilder","ADataBuilder","rankBuilders","_deriveColors","providerOptions","registerColumnType","defaultRanking","addSupportTypes","buildData","columnData","oldPos","createProvider","ui_LineUp","buildTaggle","taggle_Taggle","builder_LineUpBuilder","DataBuilder_LocalDataBuilder","LocalDataBuilder","scheduledTaskExecutor","provider_LocalDataProvider","deriveColumns","DataBuilder_RemoteDataBuilder","RemoteDataBuilder","neighbors","remote_RemoteDataProvider","DataBuilder_builder","remote","sampleData","asTaggle","asLineUp","column_build","ranking_buildRanking","si","pick","utils_isSame","lineupOptions","lineup_Adapter","Adapter","prevRankings","prevColumns","prevHighlight","onSelectionChanged","onHighlightChanged","componentDidMount","buildProvider","createInstance","resolveColumnDescs","columnDescs","deriveColumnNames","resolveRankings","builders","rankingBuilders","buildColumns","derived_1","buildRankings","updateLineUp","changeDetector","providerChanged","changedLineUpOptions","updateProvider","columnsChanged","componentDidUpdate","componentWillUnmount","builderAdapter","buildString","buildNumber","buildHierarchy","buildDate","buildCategorical","missingCategory","buildActions","buildGeneric","buildWeightedSumRanking","buildSupportRanking","buildScriptRanking","buildReduceRanking","buildNestedRanking","buildImposeRanking","buildAllColumnsRanking","isSame","isTypeInstance","superClass","defineColumn","functions","CustomColumn","_args","createLocalDataProvider","createLineUp","createTaggle","__webpack_exports__","buildId","license"],"mappings":"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CA,sEACAoC,IAAM6mB,KCESgU,GAAAJ,GAZE,IAAAz/B,MAAA,GAAA4C,OACjB,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAoC,IAAM6mB,KCESiU,GAAAL,GAZE,IAAAz/B,MAAA,GAAA4C,OACjB,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAoC,IAAM6mB,KCESkU,GAAAN,GAZE,IAAAz/B,MAAA,GAAA4C,OACjB,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAoC,IAAM6mB,KCESmU,GAAAP,GAZE,IAAAz/B,MAAA,GAAA4C,OACjB,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAoC,IAAM6mB,KCESoU,GAAAR,GAZE,IAAAz/B,MAAA,GAAA4C,OACjB,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAoC,IAAM6mB,KCESqU,GAAAT,GAZE,IAAAz/B,MAAA,GAAA4C,OACjB,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAoC,IAAM6mB,KCESsU,GAAAV,GAZE,IAAAz/B,MAAA,GAAA4C,OACjB,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAoC,IAAM6mB,KCASuU,GAAAX,GAVE,IAAAz/B,MAAA,GAAA4C,OACjB,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAoC,IAAM6mB,KCESwU,GAAAZ,GAVE,IAAAz/B,MAAA,GAAA4C,OACjB,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAoC,IAAM6mB,KCESyU,GAAAb,GAVE,IAAAz/B,MAAA,GAAA4C,OACjB,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAoC,IAAM6mB,KCES0U,GAAAd,GAVE,IAAAz/B,MAAA,GAAA4C,OACjB,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAoC,IAAM6mB,KCES2U,GAAAf,GAVE,IAAAz/B,MAAA,GAAA4C,OACjB,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAoC,IAAM6mB,KCES4U,GAAAhB,GAVE,IAAAz/B,MAAA,GAAA4C,OACjB,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAoC,IAAM6mB,KCES6U,GAAAjB,GAVE,IAAAz/B,MAAA,GAAA4C,OACjB,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAoC,IAAM6mB,KCES8U,GAAAlB,GAVE,IAAAz/B,MAAA,GAAA4C,OACjB,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAoC,IAAM6mB,KCES+U,GAAAnB,GAVE,IAAAz/B,MAAA,GAAA4C,OACjB,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAoC,IAAM6mB,KCESgV,GAAApB,GAVE,IAAAz/B,MAAA,GAAA4C,OACjB,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAoC,IAAM6mB,KCESiV,GAAArB,GAVE,IAAAz/B,MAAA,GAAA4C,OACjB,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAoC,IAAM6mB,KCESkV,GAAAtB,GAVE,IAAAz/B,MAAA,GAAA4C,OACjB,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAoC,IAAM6mB,KCESmV,GAAAvB,GAVE,IAAAz/B,MAAA,GAAA4C,OACjB,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAoC,IAAM6mB,KCESoV,GAAAxB,GAVE,IAAAz/B,MAAA,GAAA4C,OACjB,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAoC,IAAM6mB,KCESqV,GAAAzB,GAVE,IAAAz/B,MAAA,GAAA4C,OACjB,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAoC,IAAM6mB,KCESsV,GAAA1B,GAVE,IAAAz/B,MAAA,GAAA4C,OACjB,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAoC,IAAM6mB,KCESuV,GAAA3B,GAVE,IAAAz/B,MAAA,GAAA4C,OACjB,qBACA,2BACA,iCACA,uCACA,6CACA,mDA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","file":"LineUpJS.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"LineUpJS\"] = factory();\n\telse\n\t\troot[\"LineUpJS\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n","'use strict';\n\nvar isArray = Array.isArray;\nvar keyList = Object.keys;\nvar hasProp = Object.prototype.hasOwnProperty;\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    var arrA = isArray(a)\n      , arrB = isArray(b)\n      , i\n      , length\n      , key;\n\n    if (arrA && arrB) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n    if (arrA != arrB) return false;\n\n    var dateA = a instanceof Date\n      , dateB = b instanceof Date;\n    if (dateA != dateB) return false;\n    if (dateA && dateB) return a.getTime() == b.getTime();\n\n    var regexpA = a instanceof RegExp\n      , regexpB = b instanceof RegExp;\n    if (regexpA != regexpB) return false;\n    if (regexpA && regexpB) return a.toString() == b.toString();\n\n    var keys = keyList(a);\n    length = keys.length;\n\n    if (length !== keyList(b).length)\n      return false;\n\n    for (i = length; i-- !== 0;)\n      if (!hasProp.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      key = keys[i];\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  return a!==a && b!==b;\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar BrowserInfo = /** @class */ (function () {\n    function BrowserInfo(name, version, os) {\n        this.name = name;\n        this.version = version;\n        this.os = os;\n    }\n    return BrowserInfo;\n}());\nexports.BrowserInfo = BrowserInfo;\nvar NodeInfo = /** @class */ (function () {\n    function NodeInfo(version) {\n        this.version = version;\n        this.name = 'node';\n        this.os = process.platform;\n    }\n    return NodeInfo;\n}());\nexports.NodeInfo = NodeInfo;\nvar BotInfo = /** @class */ (function () {\n    function BotInfo() {\n        this.bot = true; // NOTE: deprecated test name instead\n        this.name = 'bot';\n        this.version = null;\n        this.os = null;\n    }\n    return BotInfo;\n}());\nexports.BotInfo = BotInfo;\n// tslint:disable-next-line:max-line-length\nvar SEARCHBOX_UA_REGEX = /alexa|bot|crawl(er|ing)|facebookexternalhit|feedburner|google web preview|nagios|postrank|pingdom|slurp|spider|yahoo!|yandex/;\nvar SEARCHBOT_OS_REGEX = /(nuhk)|(Googlebot)|(Yammybot)|(Openbot)|(Slurp)|(MSNBot)|(Ask Jeeves\\/Teoma)|(ia_archiver)/;\nvar REQUIRED_VERSION_PARTS = 3;\nvar userAgentRules = [\n    ['aol', /AOLShield\\/([0-9\\._]+)/],\n    ['edge', /Edge\\/([0-9\\._]+)/],\n    ['yandexbrowser', /YaBrowser\\/([0-9\\._]+)/],\n    ['vivaldi', /Vivaldi\\/([0-9\\.]+)/],\n    ['kakaotalk', /KAKAOTALK\\s([0-9\\.]+)/],\n    ['samsung', /SamsungBrowser\\/([0-9\\.]+)/],\n    ['silk', /\\bSilk\\/([0-9._-]+)\\b/],\n    ['miui', /MiuiBrowser\\/([0-9\\.]+)$/],\n    ['beaker', /BeakerBrowser\\/([0-9\\.]+)/],\n    ['edge-chromium', /Edg\\/([0-9\\.]+)/],\n    ['chromium-webview', /(?!Chrom.*OPR)wv\\).*Chrom(?:e|ium)\\/([0-9\\.]+)(:?\\s|$)/],\n    ['chrome', /(?!Chrom.*OPR)Chrom(?:e|ium)\\/([0-9\\.]+)(:?\\s|$)/],\n    ['phantomjs', /PhantomJS\\/([0-9\\.]+)(:?\\s|$)/],\n    ['crios', /CriOS\\/([0-9\\.]+)(:?\\s|$)/],\n    ['firefox', /Firefox\\/([0-9\\.]+)(?:\\s|$)/],\n    ['fxios', /FxiOS\\/([0-9\\.]+)/],\n    ['opera-mini', /Opera Mini.*Version\\/([0-9\\.]+)/],\n    ['opera', /Opera\\/([0-9\\.]+)(?:\\s|$)/],\n    ['opera', /OPR\\/([0-9\\.]+)(:?\\s|$)/],\n    ['ie', /Trident\\/7\\.0.*rv\\:([0-9\\.]+).*\\).*Gecko$/],\n    ['ie', /MSIE\\s([0-9\\.]+);.*Trident\\/[4-7].0/],\n    ['ie', /MSIE\\s(7\\.0)/],\n    ['bb10', /BB10;\\sTouch.*Version\\/([0-9\\.]+)/],\n    ['android', /Android\\s([0-9\\.]+)/],\n    ['ios', /Version\\/([0-9\\._]+).*Mobile.*Safari.*/],\n    ['safari', /Version\\/([0-9\\._]+).*Safari/],\n    ['facebook', /FBAV\\/([0-9\\.]+)/],\n    ['instagram', /Instagram\\s([0-9\\.]+)/],\n    ['ios-webview', /AppleWebKit\\/([0-9\\.]+).*Mobile/],\n    ['ios-webview', /AppleWebKit\\/([0-9\\.]+).*Gecko\\)$/],\n    ['searchbot', SEARCHBOX_UA_REGEX],\n];\nvar operatingSystemRules = [\n    ['iOS', /iP(hone|od|ad)/],\n    ['Android OS', /Android/],\n    ['BlackBerry OS', /BlackBerry|BB10/],\n    ['Windows Mobile', /IEMobile/],\n    ['Amazon OS', /Kindle/],\n    ['Windows 3.11', /Win16/],\n    ['Windows 95', /(Windows 95)|(Win95)|(Windows_95)/],\n    ['Windows 98', /(Windows 98)|(Win98)/],\n    ['Windows 2000', /(Windows NT 5.0)|(Windows 2000)/],\n    ['Windows XP', /(Windows NT 5.1)|(Windows XP)/],\n    ['Windows Server 2003', /(Windows NT 5.2)/],\n    ['Windows Vista', /(Windows NT 6.0)/],\n    ['Windows 7', /(Windows NT 6.1)/],\n    ['Windows 8', /(Windows NT 6.2)/],\n    ['Windows 8.1', /(Windows NT 6.3)/],\n    ['Windows 10', /(Windows NT 10.0)/],\n    ['Windows ME', /Windows ME/],\n    ['Open BSD', /OpenBSD/],\n    ['Sun OS', /SunOS/],\n    ['Chrome OS', /CrOS/],\n    ['Linux', /(Linux)|(X11)/],\n    ['Mac OS', /(Mac_PowerPC)|(Macintosh)/],\n    ['QNX', /QNX/],\n    ['BeOS', /BeOS/],\n    ['OS/2', /OS\\/2/],\n    ['Search Bot', SEARCHBOT_OS_REGEX],\n];\nfunction detect() {\n    if (typeof navigator !== 'undefined') {\n        return parseUserAgent(navigator.userAgent);\n    }\n    return getNodeVersion();\n}\nexports.detect = detect;\nfunction parseUserAgent(ua) {\n    // opted for using reduce here rather than Array#first with a regex.test call\n    // this is primarily because using the reduce we only perform the regex\n    // execution once rather than once for the test and for the exec again below\n    // probably something that needs to be benchmarked though\n    var matchedRule = ua !== '' &&\n        userAgentRules.reduce(function (matched, _a) {\n            var browser = _a[0], regex = _a[1];\n            if (matched) {\n                return matched;\n            }\n            var uaMatch = regex.exec(ua);\n            return !!uaMatch && [browser, uaMatch];\n        }, false);\n    if (!matchedRule) {\n        return null;\n    }\n    var name = matchedRule[0], match = matchedRule[1];\n    if (name === 'searchbot') {\n        return new BotInfo();\n    }\n    var versionParts = match[1] && match[1].split(/[._]/).slice(0, 3);\n    if (versionParts) {\n        if (versionParts.length < REQUIRED_VERSION_PARTS) {\n            versionParts = versionParts.concat(createVersionParts(REQUIRED_VERSION_PARTS - versionParts.length));\n        }\n    }\n    else {\n        versionParts = [];\n    }\n    return new BrowserInfo(name, versionParts.join('.'), detectOS(ua));\n}\nexports.parseUserAgent = parseUserAgent;\nfunction detectOS(ua) {\n    for (var ii = 0, count = operatingSystemRules.length; ii < count; ii++) {\n        var _a = operatingSystemRules[ii], os = _a[0], regex = _a[1];\n        var match = regex.test(ua);\n        if (match) {\n            return os;\n        }\n    }\n    return null;\n}\nexports.detectOS = detectOS;\nfunction getNodeVersion() {\n    var isNode = typeof process !== 'undefined' && process.version;\n    return isNode ? new NodeInfo(process.version.slice(1)) : null;\n}\nexports.getNodeVersion = getNodeVersion;\nfunction createVersionParts(count) {\n    var output = [];\n    for (var ii = 0; ii < count; ii++) {\n        output.push('0');\n    }\n    return output;\n}\n","/*! *****************************************************************************\nCopyright (C) Microsoft. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\nvar Reflect;\n(function (Reflect) {\n    // Metadata Proposal\n    // https://rbuckton.github.io/reflect-metadata/\n    (function (factory) {\n        var root = typeof global === \"object\" ? global :\n            typeof self === \"object\" ? self :\n                typeof this === \"object\" ? this :\n                    Function(\"return this;\")();\n        var exporter = makeExporter(Reflect);\n        if (typeof root.Reflect === \"undefined\") {\n            root.Reflect = Reflect;\n        }\n        else {\n            exporter = makeExporter(root.Reflect, exporter);\n        }\n        factory(exporter);\n        function makeExporter(target, previous) {\n            return function (key, value) {\n                if (typeof target[key] !== \"function\") {\n                    Object.defineProperty(target, key, { configurable: true, writable: true, value: value });\n                }\n                if (previous)\n                    previous(key, value);\n            };\n        }\n    })(function (exporter) {\n        var hasOwn = Object.prototype.hasOwnProperty;\n        // feature test for Symbol support\n        var supportsSymbol = typeof Symbol === \"function\";\n        var toPrimitiveSymbol = supportsSymbol && typeof Symbol.toPrimitive !== \"undefined\" ? Symbol.toPrimitive : \"@@toPrimitive\";\n        var iteratorSymbol = supportsSymbol && typeof Symbol.iterator !== \"undefined\" ? Symbol.iterator : \"@@iterator\";\n        var supportsCreate = typeof Object.create === \"function\"; // feature test for Object.create support\n        var supportsProto = { __proto__: [] } instanceof Array; // feature test for __proto__ support\n        var downLevel = !supportsCreate && !supportsProto;\n        var HashMap = {\n            // create an object in dictionary mode (a.k.a. \"slow\" mode in v8)\n            create: supportsCreate\n                ? function () { return MakeDictionary(Object.create(null)); }\n                : supportsProto\n                    ? function () { return MakeDictionary({ __proto__: null }); }\n                    : function () { return MakeDictionary({}); },\n            has: downLevel\n                ? function (map, key) { return hasOwn.call(map, key); }\n                : function (map, key) { return key in map; },\n            get: downLevel\n                ? function (map, key) { return hasOwn.call(map, key) ? map[key] : undefined; }\n                : function (map, key) { return map[key]; },\n        };\n        // Load global or shim versions of Map, Set, and WeakMap\n        var functionPrototype = Object.getPrototypeOf(Function);\n        var usePolyfill = typeof process === \"object\" && process.env && process.env[\"REFLECT_METADATA_USE_MAP_POLYFILL\"] === \"true\";\n        var _Map = !usePolyfill && typeof Map === \"function\" && typeof Map.prototype.entries === \"function\" ? Map : CreateMapPolyfill();\n        var _Set = !usePolyfill && typeof Set === \"function\" && typeof Set.prototype.entries === \"function\" ? Set : CreateSetPolyfill();\n        var _WeakMap = !usePolyfill && typeof WeakMap === \"function\" ? WeakMap : CreateWeakMapPolyfill();\n        // [[Metadata]] internal slot\n        // https://rbuckton.github.io/reflect-metadata/#ordinary-object-internal-methods-and-internal-slots\n        var Metadata = new _WeakMap();\n        /**\n         * Applies a set of decorators to a property of a target object.\n         * @param decorators An array of decorators.\n         * @param target The target object.\n         * @param propertyKey (Optional) The property key to decorate.\n         * @param attributes (Optional) The property descriptor for the target key.\n         * @remarks Decorators are applied in reverse order.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     Example = Reflect.decorate(decoratorsArray, Example);\n         *\n         *     // property (on constructor)\n         *     Reflect.decorate(decoratorsArray, Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     Reflect.decorate(decoratorsArray, Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     Object.defineProperty(Example, \"staticMethod\",\n         *         Reflect.decorate(decoratorsArray, Example, \"staticMethod\",\n         *             Object.getOwnPropertyDescriptor(Example, \"staticMethod\")));\n         *\n         *     // method (on prototype)\n         *     Object.defineProperty(Example.prototype, \"method\",\n         *         Reflect.decorate(decoratorsArray, Example.prototype, \"method\",\n         *             Object.getOwnPropertyDescriptor(Example.prototype, \"method\")));\n         *\n         */\n        function decorate(decorators, target, propertyKey, attributes) {\n            if (!IsUndefined(propertyKey)) {\n                if (!IsArray(decorators))\n                    throw new TypeError();\n                if (!IsObject(target))\n                    throw new TypeError();\n                if (!IsObject(attributes) && !IsUndefined(attributes) && !IsNull(attributes))\n                    throw new TypeError();\n                if (IsNull(attributes))\n                    attributes = undefined;\n                propertyKey = ToPropertyKey(propertyKey);\n                return DecorateProperty(decorators, target, propertyKey, attributes);\n            }\n            else {\n                if (!IsArray(decorators))\n                    throw new TypeError();\n                if (!IsConstructor(target))\n                    throw new TypeError();\n                return DecorateConstructor(decorators, target);\n            }\n        }\n        exporter(\"decorate\", decorate);\n        // 4.1.2 Reflect.metadata(metadataKey, metadataValue)\n        // https://rbuckton.github.io/reflect-metadata/#reflect.metadata\n        /**\n         * A default metadata decorator factory that can be used on a class, class member, or parameter.\n         * @param metadataKey The key for the metadata entry.\n         * @param metadataValue The value for the metadata entry.\n         * @returns A decorator function.\n         * @remarks\n         * If `metadataKey` is already defined for the target and target key, the\n         * metadataValue for that key will be overwritten.\n         * @example\n         *\n         *     // constructor\n         *     @Reflect.metadata(key, value)\n         *     class Example {\n         *     }\n         *\n         *     // property (on constructor, TypeScript only)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         static staticProperty;\n         *     }\n         *\n         *     // property (on prototype, TypeScript only)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         property;\n         *     }\n         *\n         *     // method (on constructor)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         static staticMethod() { }\n         *     }\n         *\n         *     // method (on prototype)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         method() { }\n         *     }\n         *\n         */\n        function metadata(metadataKey, metadataValue) {\n            function decorator(target, propertyKey) {\n                if (!IsObject(target))\n                    throw new TypeError();\n                if (!IsUndefined(propertyKey) && !IsPropertyKey(propertyKey))\n                    throw new TypeError();\n                OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\n            }\n            return decorator;\n        }\n        exporter(\"metadata\", metadata);\n        /**\n         * Define a unique metadata entry on the target.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param metadataValue A value that contains attached metadata.\n         * @param target The target object on which to define metadata.\n         * @param propertyKey (Optional) The property key for the target.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example);\n         *\n         *     // property (on constructor)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"method\");\n         *\n         *     // decorator factory as metadata-producing annotation.\n         *     function MyAnnotation(options): Decorator {\n         *         return (target, key?) => Reflect.defineMetadata(\"custom:annotation\", options, target, key);\n         *     }\n         *\n         */\n        function defineMetadata(metadataKey, metadataValue, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\n        }\n        exporter(\"defineMetadata\", defineMetadata);\n        /**\n         * Gets a value indicating whether the target object or its prototype chain has the provided metadata key defined.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata key was defined on the target object or its prototype chain; otherwise, `false`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function hasMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryHasMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"hasMetadata\", hasMetadata);\n        /**\n         * Gets a value indicating whether the target object has the provided metadata key defined.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata key was defined on the target object; otherwise, `false`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function hasOwnMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryHasOwnMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"hasOwnMetadata\", hasOwnMetadata);\n        /**\n         * Gets the metadata value for the provided metadata key on the target object or its prototype chain.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function getMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryGetMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"getMetadata\", getMetadata);\n        /**\n         * Gets the metadata value for the provided metadata key on the target object.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function getOwnMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryGetOwnMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"getOwnMetadata\", getOwnMetadata);\n        /**\n         * Gets the metadata keys defined on the target object or its prototype chain.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns An array of unique metadata keys.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getMetadataKeys(Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getMetadataKeys(Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getMetadataKeys(Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getMetadataKeys(Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getMetadataKeys(Example.prototype, \"method\");\n         *\n         */\n        function getMetadataKeys(target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryMetadataKeys(target, propertyKey);\n        }\n        exporter(\"getMetadataKeys\", getMetadataKeys);\n        /**\n         * Gets the unique metadata keys defined on the target object.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns An array of unique metadata keys.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getOwnMetadataKeys(Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getOwnMetadataKeys(Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getOwnMetadataKeys(Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"method\");\n         *\n         */\n        function getOwnMetadataKeys(target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryOwnMetadataKeys(target, propertyKey);\n        }\n        exporter(\"getOwnMetadataKeys\", getOwnMetadataKeys);\n        /**\n         * Deletes the metadata entry from the target object with the provided key.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata entry was found and deleted; otherwise, false.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function deleteMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            var metadataMap = GetOrCreateMetadataMap(target, propertyKey, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return false;\n            if (!metadataMap.delete(metadataKey))\n                return false;\n            if (metadataMap.size > 0)\n                return true;\n            var targetMetadata = Metadata.get(target);\n            targetMetadata.delete(propertyKey);\n            if (targetMetadata.size > 0)\n                return true;\n            Metadata.delete(target);\n            return true;\n        }\n        exporter(\"deleteMetadata\", deleteMetadata);\n        function DecorateConstructor(decorators, target) {\n            for (var i = decorators.length - 1; i >= 0; --i) {\n                var decorator = decorators[i];\n                var decorated = decorator(target);\n                if (!IsUndefined(decorated) && !IsNull(decorated)) {\n                    if (!IsConstructor(decorated))\n                        throw new TypeError();\n                    target = decorated;\n                }\n            }\n            return target;\n        }\n        function DecorateProperty(decorators, target, propertyKey, descriptor) {\n            for (var i = decorators.length - 1; i >= 0; --i) {\n                var decorator = decorators[i];\n                var decorated = decorator(target, propertyKey, descriptor);\n                if (!IsUndefined(decorated) && !IsNull(decorated)) {\n                    if (!IsObject(decorated))\n                        throw new TypeError();\n                    descriptor = decorated;\n                }\n            }\n            return descriptor;\n        }\n        function GetOrCreateMetadataMap(O, P, Create) {\n            var targetMetadata = Metadata.get(O);\n            if (IsUndefined(targetMetadata)) {\n                if (!Create)\n                    return undefined;\n                targetMetadata = new _Map();\n                Metadata.set(O, targetMetadata);\n            }\n            var metadataMap = targetMetadata.get(P);\n            if (IsUndefined(metadataMap)) {\n                if (!Create)\n                    return undefined;\n                metadataMap = new _Map();\n                targetMetadata.set(P, metadataMap);\n            }\n            return metadataMap;\n        }\n        // 3.1.1.1 OrdinaryHasMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasmetadata\n        function OrdinaryHasMetadata(MetadataKey, O, P) {\n            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\n            if (hasOwn)\n                return true;\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (!IsNull(parent))\n                return OrdinaryHasMetadata(MetadataKey, parent, P);\n            return false;\n        }\n        // 3.1.2.1 OrdinaryHasOwnMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasownmetadata\n        function OrdinaryHasOwnMetadata(MetadataKey, O, P) {\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return false;\n            return ToBoolean(metadataMap.has(MetadataKey));\n        }\n        // 3.1.3.1 OrdinaryGetMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarygetmetadata\n        function OrdinaryGetMetadata(MetadataKey, O, P) {\n            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\n            if (hasOwn)\n                return OrdinaryGetOwnMetadata(MetadataKey, O, P);\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (!IsNull(parent))\n                return OrdinaryGetMetadata(MetadataKey, parent, P);\n            return undefined;\n        }\n        // 3.1.4.1 OrdinaryGetOwnMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarygetownmetadata\n        function OrdinaryGetOwnMetadata(MetadataKey, O, P) {\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return undefined;\n            return metadataMap.get(MetadataKey);\n        }\n        // 3.1.5.1 OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarydefineownmetadata\n        function OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P) {\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ true);\n            metadataMap.set(MetadataKey, MetadataValue);\n        }\n        // 3.1.6.1 OrdinaryMetadataKeys(O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarymetadatakeys\n        function OrdinaryMetadataKeys(O, P) {\n            var ownKeys = OrdinaryOwnMetadataKeys(O, P);\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (parent === null)\n                return ownKeys;\n            var parentKeys = OrdinaryMetadataKeys(parent, P);\n            if (parentKeys.length <= 0)\n                return ownKeys;\n            if (ownKeys.length <= 0)\n                return parentKeys;\n            var set = new _Set();\n            var keys = [];\n            for (var _i = 0, ownKeys_1 = ownKeys; _i < ownKeys_1.length; _i++) {\n                var key = ownKeys_1[_i];\n                var hasKey = set.has(key);\n                if (!hasKey) {\n                    set.add(key);\n                    keys.push(key);\n                }\n            }\n            for (var _a = 0, parentKeys_1 = parentKeys; _a < parentKeys_1.length; _a++) {\n                var key = parentKeys_1[_a];\n                var hasKey = set.has(key);\n                if (!hasKey) {\n                    set.add(key);\n                    keys.push(key);\n                }\n            }\n            return keys;\n        }\n        // 3.1.7.1 OrdinaryOwnMetadataKeys(O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryownmetadatakeys\n        function OrdinaryOwnMetadataKeys(O, P) {\n            var keys = [];\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return keys;\n            var keysObj = metadataMap.keys();\n            var iterator = GetIterator(keysObj);\n            var k = 0;\n            while (true) {\n                var next = IteratorStep(iterator);\n                if (!next) {\n                    keys.length = k;\n                    return keys;\n                }\n                var nextValue = IteratorValue(next);\n                try {\n                    keys[k] = nextValue;\n                }\n                catch (e) {\n                    try {\n                        IteratorClose(iterator);\n                    }\n                    finally {\n                        throw e;\n                    }\n                }\n                k++;\n            }\n        }\n        // 6 ECMAScript Data Typ0es and Values\n        // https://tc39.github.io/ecma262/#sec-ecmascript-data-types-and-values\n        function Type(x) {\n            if (x === null)\n                return 1 /* Null */;\n            switch (typeof x) {\n                case \"undefined\": return 0 /* Undefined */;\n                case \"boolean\": return 2 /* Boolean */;\n                case \"string\": return 3 /* String */;\n                case \"symbol\": return 4 /* Symbol */;\n                case \"number\": return 5 /* Number */;\n                case \"object\": return x === null ? 1 /* Null */ : 6 /* Object */;\n                default: return 6 /* Object */;\n            }\n        }\n        // 6.1.1 The Undefined Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-undefined-type\n        function IsUndefined(x) {\n            return x === undefined;\n        }\n        // 6.1.2 The Null Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-null-type\n        function IsNull(x) {\n            return x === null;\n        }\n        // 6.1.5 The Symbol Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-symbol-type\n        function IsSymbol(x) {\n            return typeof x === \"symbol\";\n        }\n        // 6.1.7 The Object Type\n        // https://tc39.github.io/ecma262/#sec-object-type\n        function IsObject(x) {\n            return typeof x === \"object\" ? x !== null : typeof x === \"function\";\n        }\n        // 7.1 Type Conversion\n        // https://tc39.github.io/ecma262/#sec-type-conversion\n        // 7.1.1 ToPrimitive(input [, PreferredType])\n        // https://tc39.github.io/ecma262/#sec-toprimitive\n        function ToPrimitive(input, PreferredType) {\n            switch (Type(input)) {\n                case 0 /* Undefined */: return input;\n                case 1 /* Null */: return input;\n                case 2 /* Boolean */: return input;\n                case 3 /* String */: return input;\n                case 4 /* Symbol */: return input;\n                case 5 /* Number */: return input;\n            }\n            var hint = PreferredType === 3 /* String */ ? \"string\" : PreferredType === 5 /* Number */ ? \"number\" : \"default\";\n            var exoticToPrim = GetMethod(input, toPrimitiveSymbol);\n            if (exoticToPrim !== undefined) {\n                var result = exoticToPrim.call(input, hint);\n                if (IsObject(result))\n                    throw new TypeError();\n                return result;\n            }\n            return OrdinaryToPrimitive(input, hint === \"default\" ? \"number\" : hint);\n        }\n        // 7.1.1.1 OrdinaryToPrimitive(O, hint)\n        // https://tc39.github.io/ecma262/#sec-ordinarytoprimitive\n        function OrdinaryToPrimitive(O, hint) {\n            if (hint === \"string\") {\n                var toString_1 = O.toString;\n                if (IsCallable(toString_1)) {\n                    var result = toString_1.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n                var valueOf = O.valueOf;\n                if (IsCallable(valueOf)) {\n                    var result = valueOf.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n            }\n            else {\n                var valueOf = O.valueOf;\n                if (IsCallable(valueOf)) {\n                    var result = valueOf.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n                var toString_2 = O.toString;\n                if (IsCallable(toString_2)) {\n                    var result = toString_2.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n            }\n            throw new TypeError();\n        }\n        // 7.1.2 ToBoolean(argument)\n        // https://tc39.github.io/ecma262/2016/#sec-toboolean\n        function ToBoolean(argument) {\n            return !!argument;\n        }\n        // 7.1.12 ToString(argument)\n        // https://tc39.github.io/ecma262/#sec-tostring\n        function ToString(argument) {\n            return \"\" + argument;\n        }\n        // 7.1.14 ToPropertyKey(argument)\n        // https://tc39.github.io/ecma262/#sec-topropertykey\n        function ToPropertyKey(argument) {\n            var key = ToPrimitive(argument, 3 /* String */);\n            if (IsSymbol(key))\n                return key;\n            return ToString(key);\n        }\n        // 7.2 Testing and Comparison Operations\n        // https://tc39.github.io/ecma262/#sec-testing-and-comparison-operations\n        // 7.2.2 IsArray(argument)\n        // https://tc39.github.io/ecma262/#sec-isarray\n        function IsArray(argument) {\n            return Array.isArray\n                ? Array.isArray(argument)\n                : argument instanceof Object\n                    ? argument instanceof Array\n                    : Object.prototype.toString.call(argument) === \"[object Array]\";\n        }\n        // 7.2.3 IsCallable(argument)\n        // https://tc39.github.io/ecma262/#sec-iscallable\n        function IsCallable(argument) {\n            // NOTE: This is an approximation as we cannot check for [[Call]] internal method.\n            return typeof argument === \"function\";\n        }\n        // 7.2.4 IsConstructor(argument)\n        // https://tc39.github.io/ecma262/#sec-isconstructor\n        function IsConstructor(argument) {\n            // NOTE: This is an approximation as we cannot check for [[Construct]] internal method.\n            return typeof argument === \"function\";\n        }\n        // 7.2.7 IsPropertyKey(argument)\n        // https://tc39.github.io/ecma262/#sec-ispropertykey\n        function IsPropertyKey(argument) {\n            switch (Type(argument)) {\n                case 3 /* String */: return true;\n                case 4 /* Symbol */: return true;\n                default: return false;\n            }\n        }\n        // 7.3 Operations on Objects\n        // https://tc39.github.io/ecma262/#sec-operations-on-objects\n        // 7.3.9 GetMethod(V, P)\n        // https://tc39.github.io/ecma262/#sec-getmethod\n        function GetMethod(V, P) {\n            var func = V[P];\n            if (func === undefined || func === null)\n                return undefined;\n            if (!IsCallable(func))\n                throw new TypeError();\n            return func;\n        }\n        // 7.4 Operations on Iterator Objects\n        // https://tc39.github.io/ecma262/#sec-operations-on-iterator-objects\n        function GetIterator(obj) {\n            var method = GetMethod(obj, iteratorSymbol);\n            if (!IsCallable(method))\n                throw new TypeError(); // from Call\n            var iterator = method.call(obj);\n            if (!IsObject(iterator))\n                throw new TypeError();\n            return iterator;\n        }\n        // 7.4.4 IteratorValue(iterResult)\n        // https://tc39.github.io/ecma262/2016/#sec-iteratorvalue\n        function IteratorValue(iterResult) {\n            return iterResult.value;\n        }\n        // 7.4.5 IteratorStep(iterator)\n        // https://tc39.github.io/ecma262/#sec-iteratorstep\n        function IteratorStep(iterator) {\n            var result = iterator.next();\n            return result.done ? false : result;\n        }\n        // 7.4.6 IteratorClose(iterator, completion)\n        // https://tc39.github.io/ecma262/#sec-iteratorclose\n        function IteratorClose(iterator) {\n            var f = iterator[\"return\"];\n            if (f)\n                f.call(iterator);\n        }\n        // 9.1 Ordinary Object Internal Methods and Internal Slots\n        // https://tc39.github.io/ecma262/#sec-ordinary-object-internal-methods-and-internal-slots\n        // 9.1.1.1 OrdinaryGetPrototypeOf(O)\n        // https://tc39.github.io/ecma262/#sec-ordinarygetprototypeof\n        function OrdinaryGetPrototypeOf(O) {\n            var proto = Object.getPrototypeOf(O);\n            if (typeof O !== \"function\" || O === functionPrototype)\n                return proto;\n            // TypeScript doesn't set __proto__ in ES5, as it's non-standard.\n            // Try to determine the superclass constructor. Compatible implementations\n            // must either set __proto__ on a subclass constructor to the superclass constructor,\n            // or ensure each class has a valid `constructor` property on its prototype that\n            // points back to the constructor.\n            // If this is not the same as Function.[[Prototype]], then this is definately inherited.\n            // This is the case when in ES6 or when using __proto__ in a compatible browser.\n            if (proto !== functionPrototype)\n                return proto;\n            // If the super prototype is Object.prototype, null, or undefined, then we cannot determine the heritage.\n            var prototype = O.prototype;\n            var prototypeProto = prototype && Object.getPrototypeOf(prototype);\n            if (prototypeProto == null || prototypeProto === Object.prototype)\n                return proto;\n            // If the constructor was not a function, then we cannot determine the heritage.\n            var constructor = prototypeProto.constructor;\n            if (typeof constructor !== \"function\")\n                return proto;\n            // If we have some kind of self-reference, then we cannot determine the heritage.\n            if (constructor === O)\n                return proto;\n            // we have a pretty good guess at the heritage.\n            return constructor;\n        }\n        // naive Map shim\n        function CreateMapPolyfill() {\n            var cacheSentinel = {};\n            var arraySentinel = [];\n            var MapIterator = /** @class */ (function () {\n                function MapIterator(keys, values, selector) {\n                    this._index = 0;\n                    this._keys = keys;\n                    this._values = values;\n                    this._selector = selector;\n                }\n                MapIterator.prototype[\"@@iterator\"] = function () { return this; };\n                MapIterator.prototype[iteratorSymbol] = function () { return this; };\n                MapIterator.prototype.next = function () {\n                    var index = this._index;\n                    if (index >= 0 && index < this._keys.length) {\n                        var result = this._selector(this._keys[index], this._values[index]);\n                        if (index + 1 >= this._keys.length) {\n                            this._index = -1;\n                            this._keys = arraySentinel;\n                            this._values = arraySentinel;\n                        }\n                        else {\n                            this._index++;\n                        }\n                        return { value: result, done: false };\n                    }\n                    return { value: undefined, done: true };\n                };\n                MapIterator.prototype.throw = function (error) {\n                    if (this._index >= 0) {\n                        this._index = -1;\n                        this._keys = arraySentinel;\n                        this._values = arraySentinel;\n                    }\n                    throw error;\n                };\n                MapIterator.prototype.return = function (value) {\n                    if (this._index >= 0) {\n                        this._index = -1;\n                        this._keys = arraySentinel;\n                        this._values = arraySentinel;\n                    }\n                    return { value: value, done: true };\n                };\n                return MapIterator;\n            }());\n            return /** @class */ (function () {\n                function Map() {\n                    this._keys = [];\n                    this._values = [];\n                    this._cacheKey = cacheSentinel;\n                    this._cacheIndex = -2;\n                }\n                Object.defineProperty(Map.prototype, \"size\", {\n                    get: function () { return this._keys.length; },\n                    enumerable: true,\n                    configurable: true\n                });\n                Map.prototype.has = function (key) { return this._find(key, /*insert*/ false) >= 0; };\n                Map.prototype.get = function (key) {\n                    var index = this._find(key, /*insert*/ false);\n                    return index >= 0 ? this._values[index] : undefined;\n                };\n                Map.prototype.set = function (key, value) {\n                    var index = this._find(key, /*insert*/ true);\n                    this._values[index] = value;\n                    return this;\n                };\n                Map.prototype.delete = function (key) {\n                    var index = this._find(key, /*insert*/ false);\n                    if (index >= 0) {\n                        var size = this._keys.length;\n                        for (var i = index + 1; i < size; i++) {\n                            this._keys[i - 1] = this._keys[i];\n                            this._values[i - 1] = this._values[i];\n                        }\n                        this._keys.length--;\n                        this._values.length--;\n                        if (key === this._cacheKey) {\n                            this._cacheKey = cacheSentinel;\n                            this._cacheIndex = -2;\n                        }\n                        return true;\n                    }\n                    return false;\n                };\n                Map.prototype.clear = function () {\n                    this._keys.length = 0;\n                    this._values.length = 0;\n                    this._cacheKey = cacheSentinel;\n                    this._cacheIndex = -2;\n                };\n                Map.prototype.keys = function () { return new MapIterator(this._keys, this._values, getKey); };\n                Map.prototype.values = function () { return new MapIterator(this._keys, this._values, getValue); };\n                Map.prototype.entries = function () { return new MapIterator(this._keys, this._values, getEntry); };\n                Map.prototype[\"@@iterator\"] = function () { return this.entries(); };\n                Map.prototype[iteratorSymbol] = function () { return this.entries(); };\n                Map.prototype._find = function (key, insert) {\n                    if (this._cacheKey !== key) {\n                        this._cacheIndex = this._keys.indexOf(this._cacheKey = key);\n                    }\n                    if (this._cacheIndex < 0 && insert) {\n                        this._cacheIndex = this._keys.length;\n                        this._keys.push(key);\n                        this._values.push(undefined);\n                    }\n                    return this._cacheIndex;\n                };\n                return Map;\n            }());\n            function getKey(key, _) {\n                return key;\n            }\n            function getValue(_, value) {\n                return value;\n            }\n            function getEntry(key, value) {\n                return [key, value];\n            }\n        }\n        // naive Set shim\n        function CreateSetPolyfill() {\n            return /** @class */ (function () {\n                function Set() {\n                    this._map = new _Map();\n                }\n                Object.defineProperty(Set.prototype, \"size\", {\n                    get: function () { return this._map.size; },\n                    enumerable: true,\n                    configurable: true\n                });\n                Set.prototype.has = function (value) { return this._map.has(value); };\n                Set.prototype.add = function (value) { return this._map.set(value, value), this; };\n                Set.prototype.delete = function (value) { return this._map.delete(value); };\n                Set.prototype.clear = function () { this._map.clear(); };\n                Set.prototype.keys = function () { return this._map.keys(); };\n                Set.prototype.values = function () { return this._map.values(); };\n                Set.prototype.entries = function () { return this._map.entries(); };\n                Set.prototype[\"@@iterator\"] = function () { return this.keys(); };\n                Set.prototype[iteratorSymbol] = function () { return this.keys(); };\n                return Set;\n            }());\n        }\n        // naive WeakMap shim\n        function CreateWeakMapPolyfill() {\n            var UUID_SIZE = 16;\n            var keys = HashMap.create();\n            var rootKey = CreateUniqueKey();\n            return /** @class */ (function () {\n                function WeakMap() {\n                    this._key = CreateUniqueKey();\n                }\n                WeakMap.prototype.has = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? HashMap.has(table, this._key) : false;\n                };\n                WeakMap.prototype.get = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? HashMap.get(table, this._key) : undefined;\n                };\n                WeakMap.prototype.set = function (target, value) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ true);\n                    table[this._key] = value;\n                    return this;\n                };\n                WeakMap.prototype.delete = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? delete table[this._key] : false;\n                };\n                WeakMap.prototype.clear = function () {\n                    // NOTE: not a real clear, just makes the previous data unreachable\n                    this._key = CreateUniqueKey();\n                };\n                return WeakMap;\n            }());\n            function CreateUniqueKey() {\n                var key;\n                do\n                    key = \"@@WeakMap@@\" + CreateUUID();\n                while (HashMap.has(keys, key));\n                keys[key] = true;\n                return key;\n            }\n            function GetOrCreateWeakMapTable(target, create) {\n                if (!hasOwn.call(target, rootKey)) {\n                    if (!create)\n                        return undefined;\n                    Object.defineProperty(target, rootKey, { value: HashMap.create() });\n                }\n                return target[rootKey];\n            }\n            function FillRandomBytes(buffer, size) {\n                for (var i = 0; i < size; ++i)\n                    buffer[i] = Math.random() * 0xff | 0;\n                return buffer;\n            }\n            function GenRandomBytes(size) {\n                if (typeof Uint8Array === \"function\") {\n                    if (typeof crypto !== \"undefined\")\n                        return crypto.getRandomValues(new Uint8Array(size));\n                    if (typeof msCrypto !== \"undefined\")\n                        return msCrypto.getRandomValues(new Uint8Array(size));\n                    return FillRandomBytes(new Uint8Array(size), size);\n                }\n                return FillRandomBytes(new Array(size), size);\n            }\n            function CreateUUID() {\n                var data = GenRandomBytes(UUID_SIZE);\n                // mark as random - RFC 4122 § 4.4\n                data[6] = data[6] & 0x4f | 0x40;\n                data[8] = data[8] & 0xbf | 0x80;\n                var result = \"\";\n                for (var offset = 0; offset < UUID_SIZE; ++offset) {\n                    var byte = data[offset];\n                    if (offset === 4 || offset === 6 || offset === 8)\n                        result += \"-\";\n                    if (byte < 16)\n                        result += \"0\";\n                    result += byte.toString(16).toLowerCase();\n                }\n                return result;\n            }\n        }\n        // uses a heuristic used by v8 and chakra to force an object into dictionary mode.\n        function MakeDictionary(obj) {\n            obj.__ = undefined;\n            delete obj.__;\n            return obj;\n        }\n    });\n})(Reflect || (Reflect = {}));\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","\nexport interface IForEachAble<T> extends Iterable<T> {\n  forEach(callback: (v: T, i: number) => void): void;\n}\n\n/**\n * @internal\n */\nexport function isForEachAble<T>(v: IForEachAble<T> | any): v is IForEachAble<T> {\n  return typeof v.forEach === 'function';\n}\n\n/**\n * generalized version of Array function similar to Scala ISeq\n */\nexport interface ISequence<T> extends IForEachAble<T> {\n  readonly length: number;\n  filter(callback: (v: T, i: number) => boolean): ISequence<T>;\n  map<U>(callback: (v: T, i: number) => U): ISequence<U>;\n\n  some(callback: (v: T, i: number) => boolean): boolean;\n  every(callback: (v: T, i: number) => boolean): boolean;\n  reduce<U>(callback: (acc: U, v: T, i: number) => U, initial: U): U;\n}\n\n/**\n * @internal\n */\nexport function isSeqEmpty(seq: ISequence<any>) {\n  return seq.every(() => false); // more efficent than counting length\n}\n\n/**\n * helper function for faster access to avoid function calls\n * @internal\n */\nexport function isIndicesAble<T>(it: Iterable<T>): it is ArrayLike<T> & Iterable<T> {\n  return Array.isArray(it) || it instanceof Uint8Array || it instanceof Uint16Array || it instanceof Uint32Array || it instanceof Float32Array || it instanceof Int8Array || it instanceof Int16Array || it instanceof Int32Array || it instanceof Float64Array;\n}\n\ndeclare type ISequenceBase<T> = ISequence<T> | (ArrayLike<T> & Iterable<T>);\n\n/**\n * sequence implementation that does the operation lazily on the fly\n */\nclass LazyFilter<T> implements ISequence<T> {\n  private _length = -1;\n\n  constructor(private readonly it: ISequenceBase<T>, private readonly filters: ((v: T, i: number) => boolean)[]) {\n\n  }\n\n  get length() {\n    // cached\n    if (this._length >= 0) {\n      return this._length;\n    }\n    let l = 0;\n    this.forEach(() => l++);\n    this._length = l;\n    return l;\n  }\n\n  filter(callback: (v: T, i: number) => boolean): ISequence<T> {\n    // propagate filter\n    return new LazyFilter(this.it, this.filters.concat(callback));\n  }\n\n  map<U>(callback: (v: T, i: number) => U): ISequence<U> {\n    // create lazy map out of myself\n    return new LazyMap1(this, callback);\n  }\n\n  forEach(callback: (v: T, i: number) => void) {\n    if (isIndicesAble(this.it)) {\n      // fast array version\n      outer: for (let i = 0; i < this.it.length; ++i) {\n        const v = this.it[i];\n        for (const f of this.filters) {\n          if (!f(v, i)) {\n            continue outer;\n          }\n        }\n        callback(v, i);\n      }\n      return;\n    }\n\n    // iterator version\n    let valid = 0;\n    const it = this.it[Symbol.iterator]();\n    let v = it.next();\n    let i = 0;\n    outer: while (!v.done) {\n      for (const f of this.filters) {\n        if (f(v.value, i)) {\n          continue;\n        }\n        v = it.next();\n        i++;\n        continue outer;\n      }\n      callback(v.value, valid++);\n      v = it.next();\n      i++;\n    }\n  }\n\n  [Symbol.iterator]() {\n    const it = this.it[Symbol.iterator]();\n    const next = () => {\n      let v = it.next();\n      let i = -1;\n      outer: while (!v.done) {\n        i++;\n        for (const f of this.filters) {\n          if (f(v.value, i)) {\n            continue;\n          }\n          // invalid go to next\n          v = it.next();\n          continue outer;\n        }\n        return v;\n      }\n      return v;\n    };\n    return {next};\n  }\n\n  some(callback: (v: T, i: number) => boolean) {\n    if (isIndicesAble(this.it)) {\n      // fast array version\n      outer: for (let i = 0; i < this.it.length; ++i) {\n        const v = this.it[i];\n        for (const f of this.filters) {\n          if (!f(v, i)) {\n            continue outer;\n          }\n        }\n        if (callback(v, i)) {\n          return true;\n        }\n      }\n      return false;\n    }\n\n    let valid = 0;\n    const it = this.it[Symbol.iterator]();\n    let v = it.next();\n    let i = 0;\n    outer: while (!v.done) {\n      for (const f of this.filters) {\n        if (f(v.value, i)) {\n          continue;\n        }\n        v = it.next();\n        i++;\n        continue outer;\n      }\n      if (callback(v.value, valid++)) {\n        return true;\n      }\n      v = it.next();\n      i++;\n    }\n    return false;\n  }\n\n  every(callback: (v: T, i: number) => boolean) {\n    if (isIndicesAble(this.it)) {\n      // fast array version\n      outer: for (let i = 0; i < this.it.length; ++i) {\n        const v = this.it[i];\n        for (const f of this.filters) {\n          if (!f(v, i)) {\n            continue outer;\n          }\n        }\n        if (!callback(v, i)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    let valid = 0;\n    const it = this.it[Symbol.iterator]();\n    let v = it.next();\n    let i = 0;\n    outer: while (!v.done) {\n      for (const f of this.filters) {\n        if (f(v.value, i)) {\n          continue;\n        }\n        v = it.next();\n        i++;\n        continue outer;\n      }\n      if (!callback(v.value, valid++)) {\n        return false;\n      }\n      v = it.next();\n      i++;\n    }\n    return true;\n  }\n\n  reduce<U>(callback: (acc: U, v: T, i: number) => U, initial: U) {\n    if (isIndicesAble(this.it)) {\n      // fast array version\n      let acc = initial;\n      let j = 0;\n      outer: for (let i = 0; i < this.it.length; ++i) {\n        const v = this.it[i];\n        for (const f of this.filters) {\n          if (!f(v, i)) {\n            continue outer;\n          }\n        }\n        acc = callback(acc, v, j++);\n      }\n      return acc;\n    }\n\n    let valid = 0;\n    const it = this.it[Symbol.iterator]();\n    let v = it.next();\n    let i = 0;\n    let r = initial;\n    outer: while (!v.done) {\n      for (const f of this.filters) {\n        if (f(v.value, i)) {\n          continue;\n        }\n        v = it.next();\n        i++;\n        continue outer;\n      }\n      r = callback(r, v.value, valid++);\n      v = it.next();\n      i++;\n    }\n    return r;\n  }\n}\n\n/**\n * lazy mapping operation\n */\nabstract class ALazyMap<T, T2> implements ISequence<T2> {\n  constructor(protected readonly it: ISequenceBase<T>) {\n\n  }\n\n  get length() {\n    return this.it.length;\n  }\n\n  filter(callback: (v: T2, i: number) => boolean): ISequence<T2> {\n    return new LazyFilter(this, [callback]);\n  }\n\n  abstract map<U>(callback: (v: T2, i: number) => U): ISequence<U>;\n  protected abstract mapV(v: T, i: number): T2;\n\n\n  forEach(callback: (v: T2, i: number) => void) {\n    if (isIndicesAble(this.it)) {\n      for (let i = 0; i < this.it.length; ++i) {\n        callback(this.mapV(this.it[i], i), i);\n      }\n      return;\n    }\n    const it = this.it[Symbol.iterator]();\n    for (let v = it.next(), i = 0; !v.done; v = it.next(), i++) {\n      callback(this.mapV(v.value, i), i);\n    }\n  }\n\n  [Symbol.iterator]() {\n    const it = this.it[Symbol.iterator]();\n    let i = 0;\n    const next = () => {\n      const v = it.next();\n      if (v.done) {\n        return {\n          value: <T2><any>undefined,\n          done: true\n        };\n      }\n      const value = this.mapV(v.value, i);\n      i++;\n      return {\n        value,\n        done: false\n      };\n    };\n    return {next};\n  }\n\n  some(callback: (v: T2, i: number) => boolean) {\n    if (isIndicesAble(this.it)) {\n      for (let i = 0; i < this.it.length; ++i) {\n        if (callback(this.mapV(this.it[i], i), i)) {\n          return true;\n        }\n      }\n      return false;\n    }\n\n    const it = this.it[Symbol.iterator]();\n    for (let v = it.next(), i = 0; !v.done; v = it.next(), i++) {\n      if (callback(this.mapV(v.value, i), i)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  every(callback: (v: T2, i: number) => boolean) {\n    if (isIndicesAble(this.it)) {\n      for (let i = 0; i < this.it.length; ++i) {\n        if (!callback(this.mapV(this.it[i], i), i)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    const it = this.it[Symbol.iterator]();\n    for (let v = it.next(), i = 0; !v.done; v = it.next(), i++) {\n      if (!callback(this.mapV(v.value, i), i)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  reduce<U>(callback: (acc: U, v: T2, i: number) => U, initial: U) {\n    if (isIndicesAble(this.it)) {\n      let acc = initial;\n      for (let i = 0; i < this.it.length; ++i) {\n        acc = callback(acc, this.mapV(this.it[i], i), i);\n      }\n      return acc;\n    }\n\n    const it = this.it[Symbol.iterator]();\n    let acc = initial;\n    for (let v = it.next(), i = 0; !v.done; v = it.next(), i++) {\n      acc = callback(acc, this.mapV(v.value, i), i);\n    }\n    return acc;\n  }\n}\n\nclass LazyMap1<T1, T2> extends ALazyMap<T1, T2> implements ISequence<T2> {\n  constructor(it: ISequenceBase<T1>, protected readonly map12: (v: T1, i: number) => T2) {\n    super(it);\n  }\n\n  protected mapV(v: T1, i: number) {\n    return this.map12(v, i);\n  }\n\n  map<U>(callback: (v: T2, i: number) => U): ISequence<U> {\n    return new LazyMap2(this.it, this.map12, callback);\n  }\n}\n\nclass LazyMap2<T1, T2, T3> extends ALazyMap<T1, T3> implements ISequence<T3> {\n  constructor(it: ISequenceBase<T1>, private readonly map12: (v: T1, i: number) => T2, private readonly map23: (v: T2, i: number) => T3) {\n    super(it);\n  }\n\n  map<U>(callback: (v: T3, i: number) => U): ISequence<U> {\n    return new LazyMap3(this.it, this.map12, this.map23, callback);\n  }\n\n  protected mapV(v: T1, i: number) {\n    return this.map23(this.map12(v, i), i);\n  }\n}\n\n\nclass LazyMap3<T1, T2, T3, T4> extends ALazyMap<T1, T4> implements ISequence<T4> {\n  constructor(it: ISequenceBase<T1>, private readonly map12: (v: T1, i: number) => T2, private readonly map23: (v: T2, i: number) => T3, private readonly map34: (v: T3, i: number) => T4) {\n    super(it);\n  }\n\n  map<U>(callback: (v: T4, i: number) => U): ISequence<U> {\n    const map1U = (v: T1, i: number) => callback(this.map34(this.map23(this.map12(v, i), i), i), i);\n    return new LazyMap1(this.it, map1U);\n  }\n\n  protected mapV(v: T1, i: number) {\n    return this.map34(this.map23(this.map12(v, i), i), i);\n  }\n}\n\nclass LazySeq<T> implements ISequence<T> {\n  private _arr: ISequenceBase<T> | null = null;\n\n  constructor(private readonly iterable: Iterable<T>) {\n\n  }\n\n  get arr() {\n    if (this._arr) {\n      return this._arr;\n    }\n    if (isIndicesAble(this.iterable)) {\n      this._arr = this.iterable;\n    } else {\n      this._arr = Array.from(this.iterable);\n    }\n    return this._arr!;\n  }\n\n  [Symbol.iterator]() {\n    return this.iterable[Symbol.iterator]();\n  }\n\n  filter(callback: (v: T, i: number) => boolean) {\n    return new LazyFilter(this.arr, [callback]);\n  }\n\n  map<U>(callback: (v: T, i: number) => U) {\n    return new LazyMap1(this.arr, callback);\n  }\n\n  forEach(callback: (v: T, i: number) => void) {\n    if (isIndicesAble(this.iterable)) {\n      for (let i = 0; i < this.iterable.length; ++i) {\n        callback(this.iterable[i], i);\n      }\n      return;\n    }\n    const it = this[Symbol.iterator]();\n    for (let v = it.next(), i = 0; !v.done; v = it.next(), i++) {\n      callback(v.value, i);\n    }\n  }\n\n  some(callback: (v: T, i: number) => boolean) {\n    if (isIndicesAble(this.iterable)) {\n      for (let i = 0; i < this.iterable.length; ++i) {\n        if (callback(this.iterable[i], i)) {\n          return true;\n        }\n      }\n      return false;\n    }\n\n    const it = this[Symbol.iterator]();\n    for (let v = it.next(), i = 0; !v.done; v = it.next(), i++) {\n      if (callback(v.value, i)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  every(callback: (v: T, i: number) => boolean) {\n    if (isIndicesAble(this.iterable)) {\n      for (let i = 0; i < this.iterable.length; ++i) {\n        if (!callback(this.iterable[i], i)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    const it = this[Symbol.iterator]();\n    for (let v = it.next(), i = 0; !v.done; v = it.next(), i++) {\n      if (!callback(v.value, i)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  reduce<U>(callback: (acc: U, v: T, i: number) => U, initial: U) {\n    if (isIndicesAble(this.iterable)) {\n      let acc = initial;\n      for (let i = 0; i < this.iterable.length; ++i) {\n        acc = callback(acc, this.iterable[i], i);\n      }\n      return acc;\n    }\n\n    const it = this[Symbol.iterator]();\n    let acc = initial;\n    for (let v = it.next(), i = 0; !v.done; v = it.next(), i++) {\n      acc = callback(acc, v.value, i);\n    }\n    return acc;\n  }\n\n  get length() {\n    const it = this.iterable;\n    if (isIndicesAble(it)) {\n      return it.length;\n    }\n    if (it instanceof Set || it instanceof Map) {\n      return it.size;\n    }\n    return this.arr.length;\n  }\n}\n\n/**\n * @internal\n */\nexport function lazySeq<T>(iterable: Iterable<T>): ISequence<T> {\n  return new LazySeq(iterable);\n}\n\n\nclass ConcatSequence<T> implements ISequence<T> {\n  constructor(private readonly seqs: ISequence<ISequence<T>>) {\n    //\n  }\n\n  [Symbol.iterator]() {\n    const seqs = Array.from(this.seqs);\n    let it = seqs.shift()![Symbol.iterator]();\n    const next = (): {value: T, done: boolean} => {\n      const v = it.next();\n      if (!v.done) {\n        return v;\n      }\n      if (seqs.length === 0) {\n        // last last\n        return v;\n      }\n      // next iterator and compute next element\n      it = seqs.shift()![Symbol.iterator]();\n      return next();\n    };\n    return {next};\n  }\n\n  filter(callback: (v: T, i: number) => boolean): ISequence<T> {\n    return new LazyFilter(this, [callback]);\n  }\n\n  map<U>(callback: (v: T, i: number) => U): ISequence<U> {\n    return new LazyMap1(this, callback);\n  }\n\n  forEach(callback: (v: T, i: number) => void) {\n    this.seqs.forEach((s) => s.forEach(callback));\n  }\n\n  some(callback: (v: T, i: number) => boolean) {\n    return this.seqs.some((s) => s.some(callback));\n  }\n\n  every(callback: (v: T, i: number) => boolean) {\n    return this.seqs.every((s) => s.every(callback));\n  }\n\n  reduce<U>(callback: (acc: U, v: T, i: number) => U, initial: U) {\n    return this.seqs.reduce((acc, s) => s.reduce(callback, acc), initial);\n  }\n\n  get length() {\n    return this.seqs.reduce((a, b) => a + b.length, 0);\n  }\n}\n\n/**\n * @internal\n */\nexport function concatSeq<T>(seqs: ISequence<ISequence<T>>): ISequence<T>;\nexport function concatSeq<T>(seq1: ISequence<T>, seq2: ISequence<T>, ...seqs: ISequence<T>[]): ISequence<T>;\nexport function concatSeq<T>(seq1: ISequence<T>[] | ISequence<T>, seq2?: ISequence<T>, ...seqs: ISequence<T>[]): ISequence<T> {\n  if (seq2) {\n    return new ConcatSequence([<ISequence<T>>seq1, seq2].concat(seqs));\n  }\n  return new ConcatSequence(<ISequence<T>[]>seq1);\n}\n","import {IWorkerMessage, INumberStatsMessageRequest, IAdvancedBoxPlotData, ICategoricalStatistics, IDateStatistics, IStatistics, ICategoricalStatsMessageRequest, IDateStatsMessageRequest, IBoxPlotStatsMessageRequest} from './';\nimport {UIntTypedArray, IndicesArray} from '../model';\n\n/**\n * @internal\n */\nexport interface IPoorManWorkerScopeEventMap {\n  message: MessageEvent;\n  error: ErrorEvent;\n}\n\ndeclare type IPoorManTransferAble = ArrayBuffer | MessagePort | ImageBitmap;\n\n/**\n * @internal\n */\nexport interface IPoorManWorkerScope {\n  onmessage: ((this: IPoorManWorkerScope, ev: MessageEvent) => any) | null;\n  onerror: ((this: IPoorManWorkerScope, ev: ErrorEvent) => any) | null;\n  close(): void;\n  postMessage(message: any, transfer?: IPoorManTransferAble[]): void;\n  addEventListener<K extends keyof IPoorManWorkerScopeEventMap>(type: K, listener: (this: IPoorManWorkerScope, ev: IPoorManWorkerScopeEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n  removeEventListener<K extends keyof IPoorManWorkerScopeEventMap>(type: K, listener: (this: IPoorManWorkerScope, ev: IPoorManWorkerScopeEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n}\n\n// function workerMain(self: IPoorManWorkerScope) {\n//   self.addEventListener('message', (evt) => {\n//     self.postMessage(`Worker: ${evt.data} - Polo`);\n//   });\n// }\n\n/**\n * @internal\n */\nexport function toFunctionBody(f: Function) {\n  const source = f.toString();\n  return source.slice(source.indexOf('{') + 1, source.lastIndexOf('}'));\n}\n\n/**\n * create a blob out of the given function or string\n * @internal\n */\nexport function createWorkerCodeBlob(fs: (string | Function)[]) {\n  const sources = fs.map((d) => d.toString()).join('\\n\\n');\n\n  const blob = new Blob([sources], {type: 'application/javascript'});\n  return URL.createObjectURL(blob);\n}\n\nconst MIN_WORKER_THREADS = 1;\nconst MAX_WORKER_THREADS = Math.max(navigator.hardwareConcurrency - 1, 1); // keep one for the ui\n\nconst THREAD_CLEANUP_TIME = 10000; // 10s\n\ninterface ITaskWorker {\n  /**\n   * worker index\n   */\n  index: number;\n  /**\n   * worker itself\n   */\n  worker: Worker;\n  /**\n   * set of active task numbers\n   */\n  tasks: Set<number>;\n  /**\n   * list of references that are stored on this worker\n   */\n  refs: Set<string>;\n}\n\n/**\n * task scheduler based on web worker\n * @internal\n */\nexport class WorkerTaskScheduler {\n  private readonly workers: ITaskWorker[] = [];\n  private cleanUpWorkerTimer: number = -1;\n  /**\n   * worker task id\n   */\n  private workerTaskCounter = 0;\n\n  constructor(private readonly blob: string) {\n    for (let i = 0; i < MIN_WORKER_THREADS; ++i) {\n      const w = new Worker(blob);\n      this.workers.push({worker: w, tasks: new Set(), refs: new Set(), index: i});\n    }\n  }\n\n  terminate() {\n    this.workers.splice(0, this.workers.length).forEach((w) => w.worker.terminate());\n  }\n\n  private readonly cleanUpWorker = () => {\n    // delete workers when they are not needed anymore and empty\n    while(this.workers.length > MIN_WORKER_THREADS) {\n      const toFree = this.workers.findIndex((d) => d.tasks.size === 0);\n      if (toFree < 0) {\n        break;\n      }\n      const w = this.workers.splice(toFree, 1)[0]!;\n      w.worker.terminate();\n    }\n    // maybe reschedule\n    this.finshedTask();\n  }\n\n  private checkOutWorker() {\n    if (this.cleanUpWorkerTimer >= 0) {\n      clearTimeout(this.cleanUpWorkerTimer);\n      this.cleanUpWorkerTimer = -1;\n    }\n\n    const emptyWorker = this.workers.find((d) => d.tasks.size === 0);\n\n    if (emptyWorker) {\n      return emptyWorker;\n    }\n\n    if (this.workers.length >= MAX_WORKER_THREADS) {\n      // find the one with the fewest tasks\n      return this.workers.reduce((a, b) => a == null || a.tasks.size > b.tasks.size ? b : a, <ITaskWorker | null>null)!;\n    }\n\n    // create new one\n    const r: ITaskWorker = {\n      worker: new Worker(this.blob),\n      tasks: new Set<number>(),\n      refs: new Set(),\n      index: this.workers.length,\n    };\n    this.workers.push(r);\n    return r;\n  }\n\n  private finshedTask() {\n    if (this.cleanUpWorkerTimer === -1 && this.workers.length > MIN_WORKER_THREADS) {\n      this.cleanUpWorkerTimer = self.setTimeout(this.cleanUpWorker, THREAD_CLEANUP_TIME);\n    }\n  }\n\n  pushStats(type: 'numberStats', args: Partial<INumberStatsMessageRequest>, refData: string, data: Float32Array, refIndices?: string, indices?: IndicesArray): Promise<IStatistics>;\n  pushStats(type: 'boxplotStats', args: Partial<IBoxPlotStatsMessageRequest>, refData: string, data: Float32Array, refIndices?: string, indices?: IndicesArray): Promise<IAdvancedBoxPlotData>;\n  pushStats(type: 'categoricalStats', args: Partial<ICategoricalStatsMessageRequest>, refData: string, data: UIntTypedArray, refIndices?: string, indices?: IndicesArray): Promise<ICategoricalStatistics>;\n  pushStats(type: 'dateStats', args: Partial<IDateStatsMessageRequest>, refData: string, data: Float64Array, refIndices?: string, indices?: IndicesArray): Promise<IDateStatistics>;\n  pushStats(type: 'numberStats' | 'boxplotStats' | 'categoricalStats' | 'dateStats', args: any, refData: string, data: Float32Array | UIntTypedArray | Float64Array, refIndices?: string, indices?: IndicesArray) {\n    return new Promise((resolve) => {\n      const uid = this.workerTaskCounter++;\n      const {worker, tasks, refs} = this.checkOutWorker();\n\n      const receiver = (msg: MessageEvent) => {\n        const r = <IWorkerMessage>msg.data;\n        if (r.uid !== uid || r.type !== type) {\n          return;\n        }\n        // console.log('worker', index, uid, 'finish', r);\n        worker.removeEventListener('message', receiver);\n        tasks.delete(uid);\n        this.finshedTask();\n        resolve((<any>r).stats);\n      };\n\n      worker.addEventListener('message', receiver);\n\n      tasks.add(uid);\n\n      const msg: any = Object.assign({\n        type,\n        uid,\n        refData,\n        refIndices: refIndices || null\n      }, args);\n\n      if (!refData || !refs.has(refData)) {\n        // need to transfer to worker\n        msg.data = data;\n        if (refData) { // save that this worker has this ref\n          refs.add(refData);\n        }\n        // console.log(index, 'set ref (i)', refData);\n      }\n      if (indices && (!refIndices || !refs.has(refIndices))) {\n        // need to transfer\n        msg.indices = indices!;\n        if (refIndices) {\n          refs.add(refIndices);\n        }\n        // console.log(index, 'set ref (i)', refIndices);\n      }\n      // console.log('worker', index, uid, msg);\n\n      worker.postMessage(msg);\n    });\n  }\n\n  push<M, R>(type: string, args: M, transferAbles: ArrayBuffer[]): Promise<R>;\n  push<M, R, T>(type: string, args: M, transferAbles: ArrayBuffer[], toResult: (r: R) => T): Promise<T>;\n  push<M, R, T>(type: string, args: M, transferAbles: ArrayBuffer[], toResult?: (r: R) => T): Promise<T> {\n    return new Promise<T>((resolve) => {\n      const uid = this.workerTaskCounter++;\n      const {worker, tasks} = this.checkOutWorker();\n\n      const receiver = (msg: MessageEvent) => {\n        const r = <IWorkerMessage>msg.data;\n        if (r.uid !== uid || r.type !== type) {\n          return;\n        }\n        // console.log('worker', index, uid, 'finish', r);\n        worker.removeEventListener('message', receiver);\n        tasks.delete(uid);\n        this.finshedTask();\n        resolve(toResult ? toResult(<any>r) : <any>r);\n      };\n\n      worker.addEventListener('message', receiver);\n      tasks.add(uid);\n      const msg = Object.assign({\n        type,\n        uid\n      }, args);\n      // console.log('worker', index, uid, msg);\n\n      worker.postMessage(msg, transferAbles);\n    });\n  }\n\n  setRef(ref: string, data: Float32Array | UIntTypedArray | Int32Array | Float64Array | IndicesArray) {\n    for (const w of this.workers) {\n      w.refs.add(ref);\n    }\n    this.broadCast('setRef', {\n      ref,\n      data\n    });\n  }\n\n  deleteRef(ref: string, startsWith = false) {\n    const uid = this.workerTaskCounter++;\n    const msg = {\n      type: 'deleteRef',\n      uid,\n      ref,\n      startsWith\n    };\n    for (const w of this.workers) {\n      // console.log(w.index, 'delete ref', ref, startsWith);\n      w.worker.postMessage(msg);\n      if (!startsWith) {\n        w.refs.delete(ref);\n        continue;\n      }\n      for (const r of Array.from(w.refs)) {\n        if (r.startsWith(ref)) {\n          w.refs.delete(r);\n        }\n      }\n    }\n  }\n\n  deleteRefs() {\n    const uid = this.workerTaskCounter++;\n    const msg = {\n      type: 'deleteRef',\n      uid,\n      ref: '',\n      startsWith: true\n    };\n    for (const w of this.workers) {\n      // console.log(w.index, 'delete refs');\n      w.worker.postMessage(msg);\n      w.refs.clear();\n    }\n  }\n\n  broadCast<T>(type: string, args: T) {\n    const uid = this.workerTaskCounter++;\n    // don't store in tasks queue since there is no response\n    const msg = Object.assign({\n      type,\n      uid\n    }, args);\n    // console.log('broadcast', msg);\n    for (const w of this.workers) {\n      w.worker.postMessage(msg);\n    }\n  }\n\n}\n","import {ICategory, IndicesArray, UIntTypedArray} from '../model';\nimport {IForEachAble, ISequence, isIndicesAble} from './interable';\nimport {createWorkerCodeBlob, IPoorManWorkerScope, toFunctionBody} from './worker';\nimport {IAdvancedBoxPlotData, IStatistics, INumberBin, IDateBin, IDateStatistics, ICategoricalStatistics, ICategoricalBin, IDateHistGranularity} from './mathInterfaces';\n\n\n/**\n * computes the optimal number of bins for a given array length\n * @internal\n * @param {number} length\n * @returns {number}\n */\nexport function getNumberOfBins(length: number) {\n  if (length === 0) {\n    return 1;\n  }\n  // as by default used in d3 the Sturges' formula\n  return Math.ceil(Math.log(length) / Math.LN2) + 1;\n}\n\n/**\n * @internal\n */\nexport function min(values: number[]): number;\nexport function min<T>(values: T[], acc: (v: T) => number): number;\nexport function min<T>(values: T[], acc?: (v: T) => number) {\n  let min = Number.POSITIVE_INFINITY;\n  for (const d of values) {\n    const v = acc ? acc(d) : <number><any>d;\n    if (v < min) {\n      min = v;\n    }\n  }\n  return min;\n}\n\n/**\n * @internal\n */\nexport function max(values: number[]): number;\nexport function max<T>(values: T[], acc: (v: T) => number): number;\nexport function max<T>(values: T[], acc?: (v: T) => number) {\n  let max = Number.NEGATIVE_INFINITY;\n  for (const d of values) {\n    const v = acc ? acc(d) : <number><any>d;\n    if (v > max) {\n      max = v;\n    }\n  }\n  return max;\n}\n\n/**\n * @internal\n */\nexport function extent(values: number[]): [number, number];\nexport function extent<T>(values: T[], acc: (v: T) => number): [number, number];\nexport function extent<T>(values: T[], acc?: (v: T) => number) {\n  let max = Number.NEGATIVE_INFINITY;\n  let min = Number.POSITIVE_INFINITY;\n  for (const d of values) {\n    const v = acc ? acc(d) : <number><any>d;\n    if (v < min) {\n      min = v;\n    }\n    if (v > max) {\n      max = v;\n    }\n  }\n  return [min, max];\n}\n\n/**\n * @internal\n */\nexport function range(length: number) {\n  const r: number[] = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    r[i] = i;\n  }\n  return r;\n}\n\n/**\n * an empty range\n * @internal\n */\nexport function empty(length: number) {\n  const r: null[] = new Array(length);\n  r.fill(null);\n  return r;\n}\n\n/**\n * computes the X quantile assumes the values are sorted\n * @internal\n */\nexport function quantile(values: ArrayLike<number>, quantile: number, length = values.length) {\n  if (length === 0) {\n    return NaN;\n  }\n  const target = (length - 1) * quantile;\n  const index = Math.floor(target);\n  if (index === target) {\n    return values[index];\n  }\n  const v = values[index];\n  const vAfter = values[index + 1];\n  return v + (vAfter - v) * (target - index); // shift by change\n}\n\n/**\n * @internal\n */\nexport function median(values: number[]): number;\nexport function median<T>(values: T[], acc: (v: T) => number): number;\nexport function median<T>(values: T[], acc?: (v: T) => number) {\n  const arr = acc ? values.map(acc) : (<number[]><any>values).slice();\n  arr.sort((a, b) => (a < b ? -1 : (a > b ? 1 : 0)));\n  return quantile(arr, 0.5);\n}\n\nfunction pushAll<T>(push: (v: T) => void) {\n  return (vs: IForEachAble<T>) => {\n    if (!isIndicesAble(vs)) {\n      vs.forEach(push);\n      return;\n    }\n    // tslint:disable-next-line:prefer-for-of\n    for (let j = 0; j < vs.length; ++j) {\n      push(vs[j]);\n    }\n  };\n}\n\n/**\n * common interface for a bulider pattern\n * @internal\n */\nexport interface IBuilder<T, R> {\n  /**\n   * push an entry\n   */\n  push(v: T): void;\n  /**\n   * push multiple values at once\n   */\n  pushAll(vs: IForEachAble<T>): void;\n\n  /**\n   * build the result\n   */\n  build(): R;\n}\n\n/**\n * @internal\n */\nexport function dummyBoxPlot(): IAdvancedBoxPlotData {\n  return {\n    min: NaN,\n    max: NaN,\n    mean: NaN,\n    missing: 0,\n    count: 0,\n    whiskerHigh: NaN,\n    whiskerLow: NaN,\n    outlier: [],\n    median: NaN,\n    q1: NaN,\n    q3: NaN\n  };\n}\n\n/**\n * @internal\n */\nexport function boxplotBuilder(fixedLength?: number): IBuilder<number, IAdvancedBoxPlotData> & {buildArr: (s: Float32Array) => IAdvancedBoxPlotData} {\n  let min = Number.POSITIVE_INFINITY;\n  let max = Number.NEGATIVE_INFINITY;\n  let sum = 0;\n  let length = 0;\n  let missing = 0;\n\n  // if fixed size use the typed array else a regular array\n  const values: number[] = [];\n  const vs: Float32Array | null = fixedLength != null ? new Float32Array(fixedLength) : null;\n\n  const push = (v: number) => {\n    length += 1;\n    if (v == null || isNaN(v)) {\n      missing += 1;\n      return;\n    }\n    if (v < min) {\n      min = v;\n    }\n    if (v > max) {\n      max = v;\n    }\n    sum += v;\n  };\n\n  const pushAndSave = (v: number) => {\n    push(v);\n    if (vs) {\n      vs[length] = v;\n    } else {\n      values.push(v);\n    }\n  };\n\n\n  const invalid = Object.assign(dummyBoxPlot(), {missing, count: length});\n\n  const buildImpl = (s: ArrayLike<number>) => {\n    const valid = length - missing;\n    const median = quantile(s, 0.5, valid)!;\n    const q1 = quantile(s, 0.25, valid)!;\n    const q3 = quantile(s, 0.75, valid)!;\n\n    const iqr = q3 - q1;\n    const left = q1 - 1.5 * iqr;\n    const right = q3 + 1.5 * iqr;\n\n    let outlier: number[] = [];\n    // look for the closests value which is bigger than the computed left\n    let whiskerLow = left;\n    // tslint:disable-next-line:prefer-for-of\n    for (let i = 0; i < valid; ++i) {\n      const v = s[i];\n      if (left < v) {\n        whiskerLow = v;\n        break;\n      }\n      // outlier\n      outlier.push(v);\n    }\n    // look for the closests value which is smaller than the computed right\n    let whiskerHigh = right;\n    const reversedOutliers: number[] = [];\n    for (let i = valid - 1; i >= 0; --i) {\n      const v = s[i];\n      if (v < right) {\n        whiskerHigh = v;\n        break;\n      }\n      // outlier\n      reversedOutliers.push(v);\n    }\n\n    outlier = outlier.concat(reversedOutliers.reverse());\n\n    return {\n      min,\n      max,\n      count: length,\n      missing,\n      mean: sum / valid,\n      whiskerHigh,\n      whiskerLow,\n      outlier,\n      median,\n      q1,\n      q3\n    };\n  };\n\n  const build = () => {\n    const valid = length - missing;\n\n    if (valid === 0) {\n      return invalid;\n    }\n\n    const s = vs ? vs.sort() : Float32Array.from(values).sort();\n    return buildImpl(s);\n  };\n\n  const buildArr = (vs: Float32Array) => {\n    const s = vs.slice().sort();\n    // tslint:disable-next-line:prefer-for-of\n    for (let j = 0; j < vs.length; ++j) {\n      push(vs[j]);\n    }\n    // missing are the last\n    return buildImpl(s);\n  };\n\n  return {\n    push: pushAndSave,\n    build,\n    buildArr,\n    pushAll: pushAll(pushAndSave)\n  };\n}\n\n\n/**\n * @internal\n */\nexport function dummyStatistics(): IStatistics {\n  return {\n    min: NaN,\n    max: NaN,\n    mean: NaN,\n    missing: 0,\n    count: 0,\n    hist: [],\n    maxBin: 0\n  };\n}\n\n/**\n * @internal\n */\nexport function normalizedStatsBuilder(numberOfBins: number): IBuilder<number, IStatistics> {\n\n  const hist: INumberBin[] = [];\n\n  let x0 = 0;\n  const binWidth = 1. / numberOfBins;\n  for (let i = 0; i < numberOfBins; ++i, x0 += binWidth) {\n    hist.push({\n      x0,\n      x1: x0 + binWidth,\n      count: 0\n    });\n  }\n\n  const bin1 = 0 + binWidth;\n  const binN = 1 - binWidth;\n\n  const toBin = (v: number) => {\n    if (v < bin1) {\n      return 0;\n    }\n    if (v >= binN) {\n      return numberOfBins - 1;\n    }\n    if (numberOfBins === 3) {\n      return 1;\n    }\n    let low = 1;\n    let high = numberOfBins - 1;\n    // binary search\n    while (low < high) {\n      const center = Math.floor((high + low) / 2);\n      if (v < hist[center].x1) {\n        high = center;\n      } else {\n        low = center + 1;\n      }\n    }\n    return low;\n  };\n\n  // filter out NaN\n  let min = Number.POSITIVE_INFINITY;\n  let max = Number.NEGATIVE_INFINITY;\n  let sum = 0;\n  let length = 0;\n  let missing = 0;\n\n  const push = (v: number) => {\n    length += 1;\n    if (v == null || isNaN(v)) {\n      missing += 1;\n      return;\n    }\n    if (v < min) {\n      min = v;\n    }\n    if (v > max) {\n      max = v;\n    }\n    sum += v;\n\n    hist[toBin(v)].count++;\n  };\n\n  const build = () => {\n    const valid = length - missing;\n    if (valid === 0) {\n      return {\n        count: missing,\n        missing,\n        min: NaN,\n        max: NaN,\n        mean: NaN,\n        hist,\n        maxBin: 0\n      };\n    }\n    return {\n      count: length,\n      min,\n      max,\n      mean: sum / valid,\n      missing,\n      hist,\n      maxBin: hist.reduce((a, b) => Math.max(a, b.count), 0)\n    };\n  };\n\n  return {push, build, pushAll: pushAll(push)};\n}\n\n/**\n * guesses the histogram granularity to use based on min and max date\n */\nfunction computeGranularity(min: Date | null, max: Date | null): {histGranularity: IDateHistGranularity, hist: IDateBin[]} {\n  if (min == null || max == null) {\n    return {histGranularity: 'year', hist: []};\n  }\n  const hist: IDateBin[] = [];\n\n  if (max.getFullYear() - min.getFullYear() >= 2) {\n    // more than two years difference\n    const minYear = min.getFullYear();\n    const maxYear = max.getFullYear();\n    for (let i = minYear; i <= maxYear; ++i) {\n      hist.push({\n        x0: new Date(i, 0, 1),\n        x1: new Date(i + 1, 0, 1),\n        count: 0\n      });\n    }\n    return {hist, histGranularity: 'year'};\n  }\n\n  if ((max.getTime() - min.getTime()) <= 1000 * 60 * 60 * 24 * 31) {\n    // less than a month use day\n    let x0 = new Date(min.getFullYear(), min.getMonth(), min.getDay());\n    while (x0 <= max) {\n      const x1 = new Date(x0);\n      x1.setDate(x1.getDate() + 1);\n      hist.push({\n        x0,\n        x1,\n        count: 0\n      });\n      x0 = x1;\n    }\n    return {hist, histGranularity: 'day'};\n  }\n\n  // by month\n  let x0 = new Date(min.getFullYear(), min.getMonth(), 1);\n  while (x0 <= max) {\n    const x1 = new Date(x0);\n    x1.setMonth(x1.getMonth() + 1);\n    hist.push({\n      x0,\n      x1,\n      count: 0\n    });\n    x0 = x1;\n  }\n  return {hist, histGranularity: 'month'};\n}\n\nfunction pushDateHist(hist: IDateBin[], v: Date, count: number = 1) {\n  if (v < hist[0].x1) {\n    hist[0].count += count;\n    return;\n  }\n  const l = hist.length - 1;\n  if (v > hist[l].x0) {\n    hist[l].count += count;\n    return;\n  }\n  if (l === 2) {\n    hist[1].count += count;\n    return;\n  }\n\n  let low = 1;\n  let high = l;\n  // binary search\n  while (low < high) {\n    const center = Math.floor((high + low) / 2);\n    if (v < hist[center].x1) {\n      high = center;\n    } else {\n      low = center + 1;\n    }\n  }\n  hist[low].count += count;\n}\n\n/**\n * @internal\n */\nexport function dummyDateStatistics(): IDateStatistics {\n  return {\n    min: null,\n    max: null,\n    missing: 0,\n    count: 0,\n    hist: [],\n    maxBin: 0,\n    histGranularity: 'year'\n  };\n}\n\n\n/**\n * @internal\n */\nexport function dateStatsBuilder(template?: IDateStatistics): IBuilder<Date | null, IDateStatistics> {\n  let min: Date | null = null;\n  let max: Date | null = null;\n  let count = 0;\n  let missing = 0;\n\n  // yyyymmdd, count\n  const byDay = new Map<number, {x: Date, count: number}>();\n  const templateHist = template ? template.hist.map((d) => ({x0: d.x0, x1: d.x1, count: 0})) : null;\n\n  const push = (v: Date | null) => {\n    count += 1;\n    if (!v || v == null) {\n      missing += 1;\n      return;\n    }\n    if (min == null || v < min) {\n      min = v;\n    }\n    if (max == null || v > max) {\n      max = v;\n    }\n    if (templateHist) {\n      pushDateHist(templateHist, v, 1);\n      return;\n    }\n    const key = v.getFullYear() * 10000 + v.getMonth() * 100 + v.getDate();\n    if (byDay.has(key)) {\n      byDay.get(key)!.count++;\n    } else {\n      byDay.set(key, {count: 1, x: v});\n    }\n  };\n\n  const build = () => {\n    if (templateHist) {\n      return {\n        min,\n        max,\n        missing,\n        count,\n        maxBin: templateHist.reduce((acc, h) => Math.max(acc, h.count), 0),\n        hist: templateHist,\n        histGranularity: template!.histGranularity\n      };\n    }\n    // copy template else derive\n    const {histGranularity, hist} = computeGranularity(min, max);\n\n    byDay.forEach((v) => pushDateHist(hist, v.x, v.count));\n\n    return {\n      min,\n      max,\n      missing,\n      count,\n      maxBin: hist.reduce((acc, h) => Math.max(acc, h.count), 0),\n      hist,\n      histGranularity\n    };\n  };\n\n  return {push, build, pushAll: pushAll(push)};\n}\n\n\n/**\n * @internal\n */\nexport function dummyCategoricalStatistics(categories: {name: string}[]): ICategoricalStatistics {\n  return {\n    missing: 0,\n    count: 0,\n    hist: categories.map((cat) => ({cat: cat.name, count: 0})),\n    maxBin: 0,\n  };\n}\n\n/**\n * @internal\n */\nexport function dummyCategoricalStatisticsBuilder(categories: {name: string}[]) {\n  return () => dummyCategoricalStatistics(categories);\n}\n\n/**\n * computes a categorical histogram\n * @param arr the data array\n * @param categories the list of known categories\n * @returns {{hist: {cat: string, y: number}[]}}\n * @internal\n */\nexport function categoricalStatsBuilder(categories: {name: string}[]): IBuilder<{name: string} | null, ICategoricalStatistics> {\n  const m = new Map<string, number>();\n  categories.forEach((cat) => m.set(cat.name, 0));\n\n  let missing = 0;\n  let count = 0;\n\n  const push = (v: ICategory | null) => {\n    count += 1;\n    if (v == null) {\n      missing += 1;\n    } else {\n      m.set(v.name, (m.get(v.name) || 0) + 1);\n    }\n  };\n\n  const build = () => {\n    const entries: ICategoricalBin[] = categories.map((d) => ({cat: d.name, count: m.get(d.name)!}));\n    const maxBin = entries.reduce((a, b) => Math.max(a, b.count), Number.NEGATIVE_INFINITY);\n\n    return {\n      maxBin,\n      hist: entries,\n      count,\n      missing\n    };\n  };\n\n  return {push, build, pushAll: pushAll(push)};\n}\n\n/**\n * round to the given commas similar to d3.round\n * @param {number} v\n * @param {number} precision\n * @returns {number}\n * @internal\n */\nexport function round(v: number, precision: number = 0) {\n  if (precision === 0) {\n    return Math.round(v);\n  }\n  const scale = Math.pow(10, precision);\n  return Math.round(v * scale) / scale;\n}\n\n/**\n * compares two number whether they are similar up to delta\n * @param {number} a first numbre\n * @param {number} b second number\n * @param {number} delta\n * @returns {boolean} a and b are similar\n * @internal\n */\nexport function similar(a: number, b: number, delta = 0.5) {\n  if (a === b) {\n    return true;\n  }\n  return Math.abs(a - b) < delta;\n}\n\n\n/**\n * @internal\n */\nexport function isPromiseLike<T>(value: any): value is PromiseLike<T> {\n  return value instanceof Promise || typeof value.then === 'function';\n}\n\n\n/**\n * @internal\n */\nexport function createIndexArray(length: number, dataSize = length) {\n  if (dataSize <= 255) {\n    return new Uint8Array(length);\n  }\n  if (dataSize <= 65535) {\n    return new Uint16Array(length);\n  }\n  return new Uint32Array(length);\n}\n\n/**\n * @internal\n */\nexport function toIndexArray(arr: ISequence<number> | IndicesArray, maxDataIndex?: number): UIntTypedArray {\n  if (arr instanceof Uint8Array || arr instanceof Uint16Array || arr instanceof Uint32Array) {\n    return arr.slice();\n  }\n  const l = maxDataIndex != null ? maxDataIndex : arr.length;\n  if (l <= 255) {\n    return Uint8Array.from(arr);\n  }\n  if (l <= 65535) {\n    return Uint16Array.from(arr);\n  }\n  return Uint32Array.from(arr);\n}\n\nfunction createLike(template: IndicesArray, total: number, maxDataIndex?: number) {\n  if (template instanceof Uint8Array) {\n    return new Uint8Array(total);\n  }\n  if (template instanceof Uint16Array) {\n    return new Uint16Array(total);\n  }\n  if (template instanceof Uint32Array) {\n    return new Uint32Array(total);\n  }\n  return createIndexArray(total, maxDataIndex);\n}\n\n/**\n * @internal\n */\nexport function joinIndexArrays(groups: IndicesArray[], maxDataIndex?: number) {\n  switch (groups.length) {\n    case 0:\n      return [];\n    case 1:\n      return groups[0];\n    default:\n      const total = groups.reduce((a, b) => a + b.length, 0);\n      const r = createLike(groups[0], total, maxDataIndex);\n      let shift = 0;\n      for (const g of groups) {\n        r.set(g, shift);\n        shift += g.length;\n      }\n      return r;\n  }\n}\n\n\nfunction asc(a: any, b: any) {\n  return a < b ? -1 : ((a > b) ? 1 : 0);\n}\n\nfunction desc(a: any, b: any) {\n  return a < b ? 1 : ((a > b) ? -1 : 0);\n}\n\n\nexport declare type ILookUpArray = Uint8Array | Uint16Array | Uint32Array | Int8Array | Int16Array | Int32Array | string[] | Float32Array | Float64Array;\n\n/**\n * sort the given index array based on the lookup array\n * @internal\n */\nexport function sortComplex(indices: UIntTypedArray | number[], comparators: {asc: boolean, lookup: ILookUpArray}[]) {\n  if (indices.length < 2) {\n    return indices;\n  }\n\n  switch (comparators.length) {\n    case 0:\n      // sort by indices\n      return indices.sort();\n    case 1:\n      const c = comparators[0]!.asc ? asc : desc;\n      const cLookup = comparators[0]!.lookup;\n      return indices.sort((a, b) => {\n        const r = c(cLookup[a]!, cLookup[b]!);\n        return r !== 0 ? r : a - b;\n      });\n    case 2:\n      const c1 = comparators[0]!.asc ? asc : desc;\n      const c1Lookup = comparators[0]!.lookup;\n      const c2 = comparators[1]!.asc ? asc : desc;\n      const c2Lookup = comparators[1]!.lookup;\n      return indices.sort((a, b) => {\n        let r = c1(c1Lookup[a], c1Lookup[b]);\n        r = r !== 0 ? r : c2(c2Lookup[a], c2Lookup[b]);\n        return r !== 0 ? r : a - b;\n      });\n    default:\n      const l = comparators.length;\n      const fs = comparators.map((d) => d.asc ? asc : desc);\n      return indices.sort((a, b) => {\n        for (let i = 0; i < l; ++i) {\n          const l = comparators[i].lookup;\n          const r = fs[i](l[a], l[b]);\n          if (r !== 0) {\n            return r;\n          }\n        }\n        return a - b;\n      });\n  }\n}\n\n// note the whole worker thing is in this one file to be able to copy the code\n\n/**\n * base worker message\n * @internal\n */\nexport interface IWorkerMessage {\n  type: string;\n  uid: number;\n}\n\n/**\n * @internal\n */\nexport interface IStatsWorkerMessage extends IWorkerMessage {\n  /**\n   * reference key for the indices array\n   */\n  refIndices: string | null;\n  indices?: UIntTypedArray;\n\n  /**\n   * reference key for the data indices\n   */\n  refData: string;\n  data?: UIntTypedArray | Float32Array | Int32Array | Float64Array;\n}\n\n/**\n * @internal\n */\nexport interface ISortMessageRequest {\n  type: 'sort';\n  uid: number;\n\n  ref: string;\n  indices: UIntTypedArray;\n  sortOrders?: {asc: boolean, lookup: ILookUpArray}[];\n}\n\n/**\n * @internal\n */\nexport interface ISortMessageResponse {\n  type: 'sort';\n\n  ref: string;\n  order: IndicesArray;\n}\n\n/**\n * @internal\n */\nexport interface IDeleteRefMessageRequest {\n  type: 'deleteRef';\n\n  ref: string;\n  startsWith?: boolean;\n}\n\n/**\n * @internal\n */\nexport interface ISetRefMessageRequest {\n  type: 'setRef';\n  uid: number;\n\n  ref: string;\n  data: UIntTypedArray | Float32Array | Int32Array | Float64Array | null;\n}\n\n/**\n * @internal\n */\nexport interface IDateStatsMessageRequest {\n  type: 'dateStats';\n  uid: number;\n\n  refIndices: string | null;\n  indices?: UIntTypedArray;\n\n  refData: string;\n  data?: UIntTypedArray;\n\n  template?: IDateStatistics;\n}\n\n/**\n * @internal\n */\nexport interface IDateStatsMessageResponse {\n  type: 'dateStats';\n  uid: number;\n\n  stats: IDateStatistics;\n}\n\n/**\n * @internal\n */\nexport interface INumberStatsMessageRequest {\n  type: 'numberStats';\n  uid: number;\n\n  refIndices: string | null;\n  indices?: UIntTypedArray;\n\n  refData: string;\n  data?: Float32Array;\n\n  numberOfBins: number;\n}\n\n/**\n * @internal\n */\nexport interface INumberStatsMessageResponse {\n  type: 'numberStats';\n  uid: number;\n\n  stats: IStatistics;\n}\n\n/**\n * @internal\n */\nexport interface IBoxPlotStatsMessageRequest {\n  type: 'boxplotStats';\n  uid: number;\n\n  refIndices: string | null;\n  indices?: UIntTypedArray;\n\n  refData: string;\n  data?: Float32Array;\n}\n\n/**\n * @internal\n */\nexport interface IBoxPlotStatsMessageResponse {\n  type: 'boxplotStats';\n  uid: number;\n\n  stats: IAdvancedBoxPlotData;\n}\n\n/**\n * @internal\n */\nexport interface ICategoricalStatsMessageRequest {\n  type: 'categoricalStats';\n  uid: number;\n\n  refIndices: string | null;\n  indices?: UIntTypedArray;\n\n  refData: string;\n  data?: UIntTypedArray;\n\n  categories: string[];\n}\n\n/**\n * @internal\n */\nexport interface ICategoricalStatsMessageResponse {\n  type: 'categoricalStats';\n  uid: number;\n\n  stats: ICategoricalStatistics;\n}\n\n/**\n * helper to build a value cache for dates, use dateValueCache2Value to convert back\n * @internal\n */\nexport function dateValueCacheBuilder(length: number) {\n  const vs = new Float64Array(length);\n  let i = 0;\n  return {\n    push: (d: Date | null) => vs[i++] = d == null ? NaN : d.getTime(),\n    cache: vs\n  };\n}\n\n/**\n * @internal\n */\nexport function dateValueCache2Value(v: number) {\n  return isNaN(v) ? null : new Date(v);\n}\n\n/**\n * @internal\n */\nexport function categoricalValueCacheBuilder(length: number, categories: {name: string}[]) {\n  const vs = createIndexArray(length, categories.length + 1);\n  const name2index = new Map<string, number>();\n  for (let i = 0; i < categories.length; ++i) {\n    name2index.set(categories[i].name, i + 1); // shift by one for missing = 0\n  }\n  let i = 0;\n  return {\n    push: (d: {name: string} | null) => vs[i++] = d == null ? 0 : name2index.get(d.name) || 0,\n    cache: vs\n  };\n}\n\n/**\n * @internal\n */\nexport function categoricalValueCache2Value<T extends {name: string}>(v: number, categories: T[]) {\n  return v === 0 ? null : categories[v - 1];\n}\n\n\nfunction sortWorkerMain() {\n  const wself = <IPoorManWorkerScope><any>self;\n\n  // stored refs to avoid duplicate copy\n  const refs = new Map<string, UIntTypedArray | Float32Array | Int32Array | Float64Array>();\n\n  const sort = (r: ISortMessageRequest) => {\n    if (r.sortOrders) {\n      sortComplex(r.indices, r.sortOrders);\n    }\n    const order = r.indices;\n\n    wself.postMessage(<ISortMessageResponse>{\n      type: r.type,\n      uid: r.uid,\n      ref: r.ref,\n      order\n    }, [r.indices.buffer]);\n  };\n\n  const setRef = (r: ISetRefMessageRequest) => {\n    if (r.data) {\n      refs.set(r.ref, r.data);\n    } else {\n      refs.delete(r.ref);\n    }\n  };\n\n  const deleteRef = (r: IDeleteRefMessageRequest) => {\n    if (!r.startsWith) {\n      refs.delete(r.ref);\n      return;\n    }\n\n    for (const key of Array.from(refs.keys())) {\n      if (key.startsWith(r.ref)) {\n        refs.delete(key);\n      }\n    }\n  };\n\n  const resolveRefs = <T extends UIntTypedArray | Float32Array | Int32Array>(r: IStatsWorkerMessage) => {\n    // resolve refs or save the new data\n\n    const data: T = r.data ? <T><any>r.data : <T><any>refs.get(r.refData)!;\n    const indices = r.indices ? r.indices : (r.refIndices ? <UIntTypedArray>refs.get(r.refIndices)! : undefined);\n    if (r.refData) {\n      refs.set(r.refData, data);\n    }\n    if (r.refIndices) {\n      refs.set(r.refIndices, indices!);\n    }\n    return {data, indices};\n  };\n\n  const dateStats = (r: IDateStatsMessageRequest) => {\n    const {data, indices} = resolveRefs<Int32Array>(r);\n\n    const b = dateStatsBuilder(r.template);\n    if (indices) {\n      // tslint:disable-next-line:prefer-for-of\n      for (let ii = 0; ii < indices.length; ++ii) {\n        const v = data[indices[ii]];\n        b.push(dateValueCache2Value(v));\n      }\n    } else {\n      // tslint:disable-next-line:prefer-for-of\n      for (let i = 0; i < data.length; ++i) {\n        b.push(dateValueCache2Value(data[i]));\n      }\n    }\n    wself.postMessage(<IDateStatsMessageResponse>{\n      type: r.type,\n      uid: r.uid,\n      stats: b.build()\n    });\n  };\n\n  const categoricalStats = (r: ICategoricalStatsMessageRequest) => {\n    const {data, indices} = resolveRefs<UIntTypedArray>(r);\n\n    const cats = r.categories.map((name) => ({name}));\n    const b = categoricalStatsBuilder(cats);\n    if (indices) {\n      // tslint:disable-next-line:prefer-for-of\n      for (let ii = 0; ii < indices.length; ++ii) {\n        b.push(categoricalValueCache2Value(data[indices[ii]], cats));\n      }\n    } else {\n      // tslint:disable-next-line:prefer-for-of\n      for (let i = 0; i < data.length; ++i) {\n        b.push(categoricalValueCache2Value(data[i], cats));\n      }\n    }\n\n    wself.postMessage(<ICategoricalStatsMessageResponse>{\n      type: r.type,\n      uid: r.uid,\n      stats: b.build()\n    });\n  };\n\n  const numberStats = (r: INumberStatsMessageRequest) => {\n    const {data, indices} = resolveRefs<Float32Array>(r);\n\n    const b = normalizedStatsBuilder(r.numberOfBins);\n\n    if (indices) {\n      // tslint:disable-next-line:prefer-for-of\n      for (let ii = 0; ii < indices.length; ++ii) {\n        b.push(data[indices[ii]]);\n      }\n    } else {\n      // tslint:disable-next-line:prefer-for-of\n      for (let i = 0; i < data.length; ++i) {\n        b.push(data[i]);\n      }\n    }\n\n    wself.postMessage(<INumberStatsMessageResponse>{\n      type: r.type,\n      uid: r.uid,\n      stats: b.build()\n    });\n  };\n\n  const boxplotStats = (r: IBoxPlotStatsMessageRequest) => {\n    const {data, indices} = resolveRefs<Float32Array>(r);\n\n    const b = boxplotBuilder(indices ? indices.length : undefined);\n\n    let stats: IAdvancedBoxPlotData;\n    if (!indices) {\n      stats = b.buildArr(data);\n    } else {\n      // tslint:disable-next-line:prefer-for-of\n      for (let ii = 0; ii < indices.length; ++ii) {\n        b.push(data[indices[ii]]);\n      }\n      stats = b.build();\n    }\n\n    wself.postMessage(<IBoxPlotStatsMessageResponse>{\n      type: r.type,\n      uid: r.uid,\n      stats\n    });\n  };\n\n  // message type to handler function\n  const msgHandlers: {[key: string]: (r: any) => void} = {\n    sort,\n    setRef,\n    deleteRef,\n    dateStats,\n    categoricalStats,\n    numberStats,\n    boxplotStats\n  };\n\n  wself.addEventListener('message', (evt) => {\n    const r = evt.data;\n    if (typeof r.uid !== 'number' || typeof r.type !== 'string') {\n      return;\n    }\n    const h = msgHandlers[r.type];\n    if (h) {\n      h(r);\n    }\n  });\n}\n\n/**\n * copy source code of a worker and create a blob out of it\n * to avoid webpack imports all the code functions need to be in this file\n * @internal\n */\nexport function createWorkerBlob() {\n  return createWorkerCodeBlob([\n    pushAll.toString(),\n    quantile.toString(),\n    normalizedStatsBuilder.toString(),\n    boxplotBuilder.toString(),\n    computeGranularity.toString(),\n    pushDateHist.toString(),\n    dateStatsBuilder.toString(),\n    categoricalStatsBuilder.toString(),\n    createIndexArray.toString(),\n    asc.toString(),\n    desc.toString(),\n    sortComplex.toString(),\n    dateValueCache2Value.toString(),\n    categoricalValueCache2Value.toString(),\n    toFunctionBody(sortWorkerMain)\n  ]);\n}\n","\n/** @internal */\nexport function equalArrays<T>(a: T[], b: T[]) {\n  if (a.length !== b.length) {\n    return false;\n  }\n  return a.every((ai, i) => ai === b[i]);\n}\n\n\n/**\n * converts a given id to css compatible one\n * @param id\n * @return {string|void}\n * @internal\n */\nexport function fixCSS(id: string) {\n  return id.replace(/[\\s!#$%&'()*+,.\\/:;<=>?@\\[\\\\\\]^`{|}~]+/g, '_'); //replace non css stuff to _\n}\n\n/**\n * clear node clearing\n * @param node\n * @internal\n */\nexport function clear<T extends Node>(node: T) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n  return node;\n}\n\n/**\n * @internal\n * to avoid [].concat(...) which doesn't work for large arrays\n * @param arrs\n */\nexport function concat<T>(arrs: (T[] | T)[]): T[] {\n  const r: T[] = [];\n  for (const a of arrs) {\n    if (!Array.isArray(a)) {\n      r.push(a);\n      continue;\n    }\n    for (const ai of a) {\n      r.push(ai);\n    }\n  }\n  return r;\n}\n","var noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nexport default dispatch;\n","import {dispatch, Dispatch} from 'd3-dispatch';\n\n/**\n * helper function to suffix the given event types\n * @internal\n */\nexport function suffix(suffix: string, ...prefix: string[]) {\n  return prefix.map((p) => `${p}${suffix}`);\n}\n\nexport interface IEventContext {\n  /**\n   * who is sending this event\n   */\n  readonly source: AEventDispatcher;\n\n  /**\n   * who was sending this event in case of forwarding\n   */\n  readonly origin: AEventDispatcher;\n  /**\n   * the event type\n   */\n  readonly type: string;\n  /**\n   * in case of multi propagation the 'main' event type, aka the first one\n   */\n  readonly primaryType: string;\n  /**\n   * the arguments to the listener\n   */\n  readonly args: any[];\n}\n\nexport interface IEventListener {\n  (this: IEventContext, ...args: any[]): any;\n}\n\nexport interface IEventHandler {\n  on(type: string | string[], listener: IEventListener | null): this;\n}\n\nconst __DEBUG = false;\n\n/**\n * base class for event dispatching using d3 event mechanism, thus .suffix is supported for multiple registrations\n */\nexport default class AEventDispatcher implements IEventHandler {\n  private readonly listeners: Dispatch<any>;\n  private readonly listenerEvents: Set<string>;\n  private readonly forwarder: (...args: any[]) => void;\n\n  constructor() {\n    const events = this.createEventList();\n    this.listenerEvents = new Set(events);\n    this.listeners = dispatch(...events);\n\n    const that = this;\n    this.forwarder = function (this: IEventContext, ...args: any[]) {\n      that.fireImpl(this.type, this.primaryType, this.origin, ...args);\n    };\n  }\n\n  on(type: string | string[], listener: IEventListener | null): this {\n    if (Array.isArray(type)) {\n      type.forEach((d) => {\n        if (this.listenerEvents.has(d.split('.')[0])) {\n          this.listenersChanged(d, Boolean(listener!));\n          this.listeners.on(d, listener!);\n        } else if (__DEBUG && !d.includes('.')) {\n          console.warn(this, 'invalid event type', d);\n        }\n      });\n    } else if (this.listenerEvents.has((<string>type).split('.')[0])) {\n      this.listenersChanged(<string>type, Boolean(listener!));\n      this.listeners.on(<string>type, listener!);\n    } else if (__DEBUG && !type.includes('.')) {\n      console.warn(this, 'invalid event type', type);\n    }\n    return this;\n  }\n\n  /**\n   * helper function that will be called upon a listener has changed\n   * @param _type event type\n   * @param _active registered or deregistered\n   */\n  protected listenersChanged(_type: string, _active: boolean) {\n    // hook\n  }\n\n  /**\n   * return the list of events to be able to dispatch\n   * @return {Array} by default no events\n   */\n  protected createEventList(): string[] {\n    return [];\n  }\n\n  protected fire(type: string | string[], ...args: any[]) {\n    const primaryType = Array.isArray(type) ? type[0] : type;\n    this.fireImpl(type, primaryType, this, ...args);\n  }\n\n  private fireImpl(type: string | string[], primaryType: string, origin: AEventDispatcher, ...args: any[]) {\n    const fireImpl = (t: string) => {\n      if (!this.listenerEvents.has(t)) {\n        if (__DEBUG) {\n          console.warn(this, 'invalid event type', t);\n        }\n        return;\n      }\n      //local context per event, set a this argument\n      const context: IEventContext = {\n        source: this, //who is sending this event,\n        origin,\n        type: t, //the event type\n        primaryType, //in case of multi propagation the 'main' event type\n        args //the arguments to the listener\n      };\n      this.listeners.apply(t, context, args);\n    };\n    if (Array.isArray(type)) {\n      type.forEach(fireImpl);\n    } else {\n      fireImpl(<string>type);\n    }\n  }\n\n  /**\n   * forwards one or more events from a given dispatcher to the current one\n   * i.e. when one of the given events is fired in 'from' it will be forwarded to all my listeners\n   * @param {IEventHandler} from the event dispatcher to forward from\n   * @param {string[]} types the event types to forward\n   */\n  protected forward(from: IEventHandler, ...types: string[]) {\n    from.on(types, this.forwarder);\n  }\n\n  /**\n   * removes the forwarding declarations\n   * @param {IEventHandler} from the originated dispatcher\n   * @param {string[]} types event types to forward\n   */\n  protected unforward(from: IEventHandler, ...types: string[]) {\n    from.on(types, null);\n  }\n}\n","import Column from './Column';\nimport Ranking from './Ranking';\nimport CompositeColumn from './CompositeColumn';\nimport {IColorMappingFunction, IMappingFunction} from './INumberColumn';\nimport {ICategoricalColorMappingFunction, ICategory} from './ICategoricalColumn';\nimport {IScriptMappingFunctionType} from './MappingFunction';\n\n\nexport interface IColumnConstructor {\n  new(id: string, desc: Readonly<IColumnDesc> & any, factory: ITypeFactory): Column;\n}\n\nexport interface IStyleColumn {\n  /**\n   * column description\n   */\n  description: string;\n\n  /**\n   * color of this column\n   * @deprecated not used anymore\n   */\n  color: string;\n\n  /**\n   * frozen column\n   * @default isSupportType\n   */\n  frozen: boolean;\n\n  /**\n   * whether the column can be removed or not\n   * @default false\n   */\n  fixed: boolean;\n\n  /**\n   * default renderer to use\n   */\n  renderer: string;\n\n  /**\n   * default group renderer to use\n   */\n  groupRenderer: string;\n\n  /**\n   * default summary renderer to use\n   */\n  summaryRenderer: string;\n\n  /**\n   * initial width of the column\n   * @default 100 or 200 for strings\n   */\n  width: number;\n\n  /**\n   * is this column visible by default\n   * @default true\n   */\n  visible: boolean;\n}\n\n/**\n * default color that should be used\n * @type {string}\n */\nexport const DEFAULT_COLOR = '#C1C1C1';\n\n\nexport interface IColumnDesc extends Partial<IStyleColumn> {\n  /**\n   * label of the column\n   */\n  label: string;\n  /**\n   * the column type\n   */\n  type: string;\n}\n\nexport interface IValueColumnDesc<T> extends IColumnDesc {\n  /**\n   * is the data lazy loaded and not yet available\n   * @default false\n   */\n  lazyLoaded?: boolean;\n\n  /**\n   * value accessor of this column\n   * @param row the current row\n   * @param desc the description of this column\n   */\n  accessor?(row: IDataRow, desc: Readonly<IValueColumnDesc<T>>): T;\n}\n\nexport interface IFlatColumn {\n  readonly col: Column;\n  readonly offset: number;\n  readonly width: number;\n}\n\nexport interface IColumnParent {\n  remove(col: Column): boolean;\n\n  insert(col: Column, index?: number): Column | null;\n\n  insertAfter(col: Column, reference: Column): Column | null;\n\n  move(col: Column, index?: number): Column | null;\n\n  moveAfter(col: Column, reference: Column): Column | null;\n\n  findMyRanker(): Ranking | null;\n\n  readonly fqid: string;\n\n  indexOf(col: Column): number;\n\n  at(index: number): Column;\n\n  readonly fqpath: string;\n\n}\n\n\nexport interface IColumnMetaData {\n  label: string;\n  description: string;\n}\n\nexport declare type ICompareValue = string | number | null;\n\n\n/**\n * a data row for rendering\n */\nexport interface IDataRow {\n  /**\n   * the value\n   */\n  readonly v: any;\n  /**\n   * the underlying data index\n   */\n  readonly i: number;\n}\n\n\nexport interface IGroup {\n  name: string;\n  color: string;\n  parent?: Readonly<IGroupParent> | null;\n}\n\nexport declare type IndicesArray = (number[] | UIntTypedArray) & ArrayLike<number>;\n\nexport interface IOrderedGroup extends IGroup {\n  order: IndicesArray;\n}\n\nexport const defaultGroup: IGroup = {\n  name: 'Default',\n  color: 'gray'\n};\n\nexport const othersGroup: IGroup = {\n  name: 'Others',\n  color: 'gray'\n};\n\n\nexport interface IGroupParent extends IGroup {\n  subGroups: (Readonly<IGroupParent> | Readonly<IGroup>)[];\n}\n\nexport interface IGroupItem {\n  readonly dataIndex: number;\n  readonly group: Readonly<IOrderedGroup>;\n  readonly relativeIndex: number;\n}\n\nexport declare type IGroupData = Readonly<IOrderedGroup>;\n\nexport function isGroup(item: IGroupData | IGroupItem): item is IGroupData {\n  return item && (<IGroupItem>item).group == null; // use .group as separator\n}\n\nexport declare type UIntTypedArray = Uint8Array | Uint16Array | Uint32Array;\n\nexport enum ECompareValueType {\n  BINARY,\n  COUNT, // count max to the number of rows\n  UINT8,\n  UINT16,\n  UINT32,\n  INT8,\n  INT16,\n  INT32,\n  FLOAT,\n  FLOAT_ASC,\n  DOUBLE,\n  DOUBLE_ASC,\n  STRING\n}\n\n\nexport interface ITypedDump {\n  readonly type: string;\n  [key: string]: any;\n}\n\n\nexport interface IColumnDump {\n  id: string;\n  width?: number;\n  desc: any;\n  label?: string;\n  renderer?: string;\n  /**\n   * @deprecated\n   */\n  rendererType?: string;\n  groupRenderer?: string;\n  summaryRenderer?: string;\n\n  // type specific\n  [key: string]: any;\n}\n\nexport interface IRankingDump {\n  /**\n   * columsn of this ranking\n   */\n  columns?: IColumnDump[];\n\n  /**\n   * sort criteria\n   */\n  sortCriteria?: {asc: boolean, sortBy: string}[];\n\n  /**\n   * group sort criteria\n   */\n  groupSortCriteria?: {asc: boolean, sortBy: string}[];\n\n  /**\n   * uids of group columns\n   */\n  groupColumns?: string[];\n\n  /**\n   * compatability\n   * @deprecated\n   */\n  sortColumn?: {sortBy: string, asc: boolean};\n}\n\nexport interface ITypeFactory {\n  (dump: IColumnDump): Column;\n\n  colorMappingFunction(dump?: ITypedDump | string | ((v: number) => string)): IColorMappingFunction;\n  mappingFunction(dump?: ITypedDump | IScriptMappingFunctionType): IMappingFunction;\n  categoricalColorMappingFunction(dump: ITypedDump | undefined, categories: ICategory[]): ICategoricalColorMappingFunction;\n}\n\nexport interface IMultiLevelColumn extends CompositeColumn {\n  getCollapsed(): boolean;\n\n  setCollapsed(value: boolean): void;\n}\n\nexport function isMultiLevelColumn(col: Column): col is IMultiLevelColumn {\n  return typeof ((<IMultiLevelColumn>col).getCollapsed) === 'function';\n}\n\nexport interface ISortCriteria {\n  readonly col: Column;\n  readonly asc: boolean;\n}\n","import {AEventDispatcher, ISequence, similar, fixCSS, IEventListener} from '../internal';\nimport {isSortingAscByDefault} from './annotations';\nimport {IColumnDump, ISortCriteria, defaultGroup, ECompareValueType, IColumnDesc, IDataRow, IGroup, IColumnParent, IColumnMetaData, IFlatColumn, ICompareValue, DEFAULT_COLOR, ITypeFactory} from './interfaces';\nimport Ranking from './Ranking';\n\n/**\n * emitted when the width property changes\n * @asMemberOf Column\n * @event\n */\nexport declare function widthChanged(previous: number, current: number): void;\n\n/**\n * emitted when the label property changes\n * @asMemberOf Column\n * @event\n */\nexport declare function labelChanged(previous: string, current: string): void;\n\n/**\n * emitted when the meta data property changes\n * @asMemberOf Column\n * @event\n */\nexport declare function metaDataChanged(previous: IColumnMetaData, current: IColumnMetaData): void;\n\n/**\n * emitted when state of the column is dirty\n * @asMemberOf Column\n * @event\n */\nexport declare function dirty(): void;\n\n/**\n * emitted when state of the column related to its header is dirty\n * @asMemberOf Column\n * @event\n */\nexport declare function dirtyHeader(): void;\n\n/**\n * emitted when state of the column related to its values is dirty\n * @asMemberOf Column\n * @event\n */\nexport declare function dirtyValues(): void;\n\n/**\n * emitted when state of the column related to cached values (hist, compare, ...) is dirty\n * @asMemberOf Column\n * @event\n */\nexport declare function dirtyCaches(): void;\n\n/**\n * emitted when the renderer type property changes\n * @asMemberOf Column\n * @event\n */\nexport declare function rendererTypeChanged(previous: string, current: string): void;\n\n/**\n * emitted when the group renderer property changes\n * @asMemberOf Column\n * @event\n */\nexport declare function groupRendererChanged(previous: string, current: string): void;\n\n/**\n * emitted when the pattern property changes\n * @asMemberOf Column\n * @event\n */\nexport declare function summaryRendererChanged(previous: string, current: string): void;\n\n/**\n * emitted when the visibility of this column changes\n * @asMemberOf Column\n * @event\n */\nexport declare function visibilityChanged(previous: boolean, current: boolean): void;\n\n/**\n * a column in LineUp\n */\nexport default class Column extends AEventDispatcher {\n  /**\n   * magic variable for showing all columns\n   * @type {number}\n   */\n  static readonly FLAT_ALL_COLUMNS = -1;\n\n  static readonly EVENT_WIDTH_CHANGED = 'widthChanged';\n  static readonly EVENT_LABEL_CHANGED = 'labelChanged';\n  static readonly EVENT_METADATA_CHANGED = 'metaDataChanged';\n  static readonly EVENT_DIRTY = 'dirty';\n  static readonly EVENT_DIRTY_HEADER = 'dirtyHeader';\n  static readonly EVENT_DIRTY_VALUES = 'dirtyValues';\n  static readonly EVENT_DIRTY_CACHES = 'dirtyCaches';\n  static readonly EVENT_RENDERER_TYPE_CHANGED = 'rendererTypeChanged';\n  static readonly EVENT_GROUP_RENDERER_TYPE_CHANGED = 'groupRendererChanged';\n  static readonly EVENT_SUMMARY_RENDERER_TYPE_CHANGED = 'summaryRendererChanged';\n  static readonly EVENT_VISIBILITY_CHANGED = 'visibilityChanged';\n\n  /**\n   * the id of this column\n   */\n  private uid: string;\n\n  /**\n   * width of the column\n   * @type {number}\n   * @private\n   */\n  private width: number = 100;\n\n  /**\n   * parent column of this column, set when added to a ranking or combined column\n   */\n  parent: Readonly<IColumnParent> | null = null;\n\n  private metadata: Readonly<IColumnMetaData>;\n  private renderer: string;\n  private groupRenderer: string;\n  private summaryRenderer: string;\n  private visible: boolean;\n\n  constructor(id: string, public readonly desc: Readonly<IColumnDesc>) {\n    super();\n    this.uid = fixCSS(id);\n    this.renderer = this.desc.renderer || this.desc.type;\n    this.groupRenderer = this.desc.groupRenderer || this.desc.type;\n    this.summaryRenderer = this.desc.summaryRenderer || this.desc.type;\n    this.width = this.desc.width != null && this.desc.width > 0 ? this.desc.width : 100;\n    this.visible = this.desc.visible !== false;\n\n    this.metadata = {\n      label: desc.label || this.id,\n      description: desc.description || ''\n    };\n  }\n\n  get fixed() {\n    return Boolean(this.desc.fixed);\n  }\n\n  get frozen() {\n    return Boolean(this.desc.frozen);\n  }\n\n  get id() {\n    return this.uid;\n  }\n\n  assignNewId(idGenerator: () => string) {\n    this.uid = fixCSS(idGenerator());\n  }\n\n  get label() {\n    return this.metadata.label;\n  }\n\n  get description() {\n    return this.metadata.description;\n  }\n\n  /**\n   * returns the fully qualified id i.e. path the parent\n   * @returns {string}\n   */\n  get fqid() {\n    return this.parent ? `${this.parent.fqid}_${this.id}` : this.id;\n  }\n\n  get fqpath() {\n    return this.parent ? `${this.parent.fqpath}@${this.parent.indexOf(this)}` : '';\n  }\n\n  protected createEventList() {\n    return super.createEventList().concat([Column.EVENT_WIDTH_CHANGED,\n    Column.EVENT_LABEL_CHANGED, Column.EVENT_METADATA_CHANGED, Column.EVENT_VISIBILITY_CHANGED, Column.EVENT_SUMMARY_RENDERER_TYPE_CHANGED,\n    Column.EVENT_RENDERER_TYPE_CHANGED, Column.EVENT_GROUP_RENDERER_TYPE_CHANGED,\n    Column.EVENT_DIRTY, Column.EVENT_DIRTY_HEADER, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY_CACHES]);\n  }\n\n  on(type: typeof Column.EVENT_WIDTH_CHANGED, listener: typeof widthChanged | null): this;\n  on(type: typeof Column.EVENT_LABEL_CHANGED, listener: typeof labelChanged | null): this;\n  on(type: typeof Column.EVENT_METADATA_CHANGED, listener: typeof metaDataChanged | null): this;\n  on(type: typeof Column.EVENT_DIRTY, listener: typeof dirty | null): this;\n  on(type: typeof Column.EVENT_DIRTY_HEADER, listener: typeof dirtyHeader | null): this;\n  on(type: typeof Column.EVENT_DIRTY_VALUES, listener: typeof dirtyValues | null): this;\n  on(type: typeof Column.EVENT_DIRTY_CACHES, listener: typeof dirtyCaches | null): this;\n  on(type: typeof Column.EVENT_RENDERER_TYPE_CHANGED, listener: typeof rendererTypeChanged | null): this;\n  on(type: typeof Column.EVENT_GROUP_RENDERER_TYPE_CHANGED, listener: typeof groupRendererChanged | null): this;\n  on(type: typeof Column.EVENT_SUMMARY_RENDERER_TYPE_CHANGED, listener: typeof summaryRendererChanged | null): this;\n  on(type: typeof Column.EVENT_VISIBILITY_CHANGED, listener: typeof visibilityChanged | null): this;\n  on(type: string | string[], listener: IEventListener | null): this; // required for correct typings in *.d.ts\n  on(type: string | string[], listener: IEventListener | null): this {\n    return super.on(type, listener);\n  }\n\n  getWidth() {\n    return this.width;\n  }\n\n  hide() {\n    this.setVisible(false);\n  }\n\n  show() {\n    this.setVisible(true);\n  }\n\n  isVisible() {\n    return this.visible;\n  }\n\n  getVisible() {\n    return this.isVisible();\n  }\n\n  setVisible(value: boolean) {\n    if (this.visible === value) {\n      return;\n    }\n    this.fire([Column.EVENT_VISIBILITY_CHANGED, Column.EVENT_DIRTY_HEADER, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY], this.visible, this.visible = value);\n  }\n\n  /**\n   * visitor pattern for flattening the columns\n   * @param {IFlatColumn} r the result array\n   * @param {number} offset left offset\n   * @param {number} _levelsToGo how many levels down\n   * @param {number} _padding padding between columns\n   * @returns {number} the used width by this column\n   */\n  flatten(r: IFlatColumn[], offset: number, _levelsToGo = 0, _padding = 0): number {\n    const w = this.getWidth();\n    r.push({col: this, offset, width: w});\n    return w;\n  }\n\n  setWidth(value: number) {\n    if (similar(this.width, value, 0.5)) {\n      return;\n    }\n    this.fire([Column.EVENT_WIDTH_CHANGED, Column.EVENT_DIRTY_HEADER, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY], this.width, this.width = value);\n  }\n\n  setWidthImpl(value: number) {\n    this.width = value;\n  }\n\n  setMetaData(value: Readonly<IColumnMetaData>) {\n    if (value.label === this.label && this.description === value.description) {\n      return;\n    }\n    const bak = this.getMetaData();\n    //copy to avoid reference\n    this.metadata = {\n      label: value.label,\n      description: value.description\n    };\n\n    this.fire([Column.EVENT_LABEL_CHANGED, Column.EVENT_METADATA_CHANGED, Column.EVENT_DIRTY_HEADER, Column.EVENT_DIRTY], bak, this.getMetaData());\n  }\n\n  getMetaData(): Readonly<IColumnMetaData> {\n    return Object.assign({}, this.metadata);\n  }\n\n  /**\n   * triggers that the ranking is sorted by this column\n   * @param ascending ascending order?\n   * @param priority sorting priority\n   * @returns {boolean} was successful\n   */\n  sortByMe(ascending = isSortingAscByDefault(this), priority = 0) {\n    const r = this.findMyRanker();\n    if (r) {\n      return r.sortBy(this, ascending, priority);\n    }\n    return false;\n  }\n\n  groupByMe(): boolean {\n    const r = this.findMyRanker();\n    if (r) {\n      return r.toggleGrouping(this);\n    }\n    return false;\n  }\n\n  /**\n   *\n   * @return {number}\n   */\n  isGroupedBy(): number {\n    const r = this.findMyRanker();\n    if (!r) {\n      return -1;\n    }\n    return r.getGroupCriteria().indexOf(this);\n  }\n\n  /**\n   * toggles the sorting order of this column in the ranking\n   * @returns {boolean} was successful\n   */\n  toggleMySorting() {\n    const r = this.findMyRanker();\n    if (r) {\n      return r.toggleSorting(this);\n    }\n    return false;\n  }\n\n  private isSortedByMeImpl(selector: ((r: Ranking) => ISortCriteria[])): {asc: 'asc' | 'desc' | undefined, priority: number | undefined} {\n    const ranker = this.findMyRanker();\n    if (!ranker) {\n      return {asc: undefined, priority: undefined};\n    }\n    const criterias = selector(ranker);\n    const index = criterias.findIndex((c) => c.col === this);\n    if (index < 0) {\n      return {asc: undefined, priority: undefined};\n    }\n    return {\n      asc: criterias[index].asc ? 'asc' : 'desc',\n      priority: index\n    };\n  }\n\n  isSortedByMe() {\n    return this.isSortedByMeImpl((r) => r.getSortCriteria());\n  }\n\n  groupSortByMe(ascending = isSortingAscByDefault(this), priority = 0) {\n    const r = this.findMyRanker();\n    if (r) {\n      return r.groupSortBy(this, ascending, priority);\n    }\n    return false;\n  }\n\n  toggleMyGroupSorting() {\n    const r = this.findMyRanker();\n    if (r) {\n      return r.toggleGroupSorting(this);\n    }\n    return false;\n  }\n\n  isGroupSortedByMe() {\n    return this.isSortedByMeImpl((r) => r.getGroupSortCriteria());\n  }\n\n  /**\n   * removes the column from the ranking\n   * @returns {boolean} was successful\n   */\n  removeMe() {\n    if (this.fixed) {\n      return false;\n    }\n    if (this.parent) {\n      return this.parent.remove(this);\n    }\n    return false;\n  }\n\n  /**\n   * called when the columns added to a ranking\n   */\n  attach(parent: IColumnParent) {\n    this.parent = parent;\n  }\n\n  /**\n   * called when the column is removed from the ranking\n   */\n  detach() {\n    this.parent = null;\n  }\n\n  /**\n   * inserts the given column after itself\n   * @param col the column to insert\n   * @returns {boolean} was successful\n   */\n  insertAfterMe(col: Column) {\n    if (this.parent) {\n      return this.parent.insertAfter(col, this) != null;\n    }\n    return false;\n  }\n\n  /**\n   * finds the underlying ranking column\n   * @returns {Ranking|null} my current ranking\n   */\n  findMyRanker(): Ranking | null {\n    if (this.parent) {\n      return this.parent.findMyRanker();\n    }\n    return null;\n  }\n\n  /**\n   * dumps this column to JSON compatible format\n   * @param toDescRef helper mapping function\n   * @returns {any} dump of this column\n   */\n  dump(toDescRef: (desc: any) => any): any {\n    const r: IColumnDump = {\n      id: this.id,\n      desc: toDescRef(this.desc),\n      width: this.width\n    };\n    if (this.label !== (this.desc.label || this.id)) {\n      r.label = this.label;\n    }\n    if (this.getRenderer() !== this.desc.type) {\n      r.renderer = this.getRenderer();\n    }\n    if (this.getGroupRenderer() !== this.desc.type) {\n      r.groupRenderer = this.getGroupRenderer();\n    }\n    if (this.getSummaryRenderer() !== this.desc.type) {\n      r.summaryRenderer = this.getSummaryRenderer();\n    }\n    return r;\n  }\n\n  /**\n   * restore the column content from a dump\n   * @param dump column dump\n   * @param _factory helper for creating columns\n   */\n  restore(dump: IColumnDump, _factory: ITypeFactory) {\n    this.width = dump.width || this.width;\n    this.metadata = {\n      label: dump.label || this.label,\n      description: this.description\n    };\n    if (dump.renderer || dump.rendererType) {\n      this.renderer = dump.renderer || dump.rendererType || this.renderer;\n    }\n    if (dump.groupRenderer) {\n      this.groupRenderer = dump.groupRenderer;\n    }\n    if (dump.summaryRenderer) {\n      this.summaryRenderer = dump.summaryRenderer;\n    }\n  }\n\n  /**\n   * return the label of a given row for the current column\n   * @param row the current row\n   * @return {string} the label of this column at the specified row\n   */\n  getLabel(row: IDataRow): string {\n    const v = this.getValue(row);\n    return v == null ? '' : String(v);\n  }\n\n  /**\n   * return the value of a given row for the current column\n   * @param _row the current row\n   * @return the value of this column at the specified row\n   */\n  getValue(_row: IDataRow): any | null {\n    return ''; //no value\n  }\n\n  /**\n   * returns the value to be used when exporting\n   * @param format format hint\n   */\n  getExportValue(row: IDataRow, format: 'text' | 'json'): any {\n    return format === 'text' ? this.getLabel(row) : this.getValue(row);\n  }\n\n  getColor(_row: IDataRow) {\n    return DEFAULT_COLOR;\n  }\n\n  toCompareValue(_row: IDataRow, _valueCache?: any): ICompareValue | ICompareValue[] {\n    return 0;\n  }\n\n  toCompareValueType(): ECompareValueType | ECompareValueType[] {\n    return ECompareValueType.UINT8;\n  }\n\n  /**\n   * group the given row into a bin/group\n   * @param _row\n   * @return {IGroup}\n   */\n  group(_row: IDataRow, _valueCache?: any): IGroup {\n    return Object.assign({}, defaultGroup);\n  }\n\n  toCompareGroupValue(_rows: ISequence<IDataRow>, group: IGroup, _valueCache?: ISequence<any>): ICompareValue | ICompareValue[] {\n    return group.name.toLowerCase();\n  }\n\n  toCompareGroupValueType(): ECompareValueType | ECompareValueType[] {\n    return ECompareValueType.STRING;\n  }\n\n  /**\n   * flag whether any filter is applied\n   * @return {boolean}\n   */\n  isFiltered() {\n    return false;\n  }\n\n  /**\n   * clear the filter\n   * @return {boolean} whether the filtered needed to be reseted\n   */\n  clearFilter() {\n    // hook to clear the filter\n    return false;\n  }\n\n  /**\n   * predicate whether the current row should be included\n   * @param row\n   * @return {boolean}\n   */\n  filter(row: IDataRow, _valueCache?: any) {\n    return row != null;\n  }\n\n  /**\n   * determines the renderer type that should be used to render this column. By default the same type as the column itself\n   * @return {string}\n   */\n  getRenderer(): string {\n    return this.renderer;\n  }\n\n  getGroupRenderer(): string {\n    return this.groupRenderer;\n  }\n\n  getSummaryRenderer(): string {\n    return this.summaryRenderer;\n  }\n\n  setRenderer(renderer: string) {\n    if (renderer === this.renderer) {\n      // nothing changes\n      return;\n    }\n    this.fire([Column.EVENT_RENDERER_TYPE_CHANGED, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY], this.renderer, this.renderer = renderer);\n  }\n\n  protected setDefaultRenderer(renderer: string) {\n    if (this.renderer !== this.desc.type || this.desc.renderer) {\n      return;\n    }\n    return this.setRenderer(renderer);\n  }\n\n  setGroupRenderer(renderer: string) {\n    if (renderer === this.groupRenderer) {\n      // nothing changes\n      return;\n    }\n    this.fire([Column.EVENT_GROUP_RENDERER_TYPE_CHANGED, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY], this.groupRenderer, this.groupRenderer = renderer);\n  }\n\n  protected setDefaultGroupRenderer(renderer: string) {\n    if (this.groupRenderer !== this.desc.type || this.desc.groupRenderer) {\n      return;\n    }\n    return this.setGroupRenderer(renderer);\n  }\n\n  setSummaryRenderer(renderer: string) {\n    if (renderer === this.summaryRenderer) {\n      // nothing changes\n      return;\n    }\n    this.fire([Column.EVENT_SUMMARY_RENDERER_TYPE_CHANGED, Column.EVENT_DIRTY_HEADER, Column.EVENT_DIRTY], this.summaryRenderer, this.summaryRenderer = renderer);\n  }\n\n  protected setDefaultSummaryRenderer(renderer: string) {\n    if (this.summaryRenderer !== this.desc.type || this.desc.summaryRenderer) {\n      return;\n    }\n    return this.setSummaryRenderer(renderer);\n  }\n\n  protected setDefaultWidth(width: number) {\n    if (this.width !== 100 || this.desc.width) {\n      return;\n    }\n    return this.setWidthImpl(width);\n  }\n\n  /**\n   * marks the header, values, or both as dirty such that the values are reevaluated\n   * @param type specify in more detail what is dirty, by default whole column\n   */\n  markDirty(type: 'header' | 'values' | 'all' = 'all') {\n    switch (type) {\n      case 'header':\n        return this.fire([Column.EVENT_DIRTY_HEADER, Column.EVENT_DIRTY]);\n      case 'values':\n        return this.fire([Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY_CACHES, Column.EVENT_DIRTY]);\n      default:\n        return this.fire([Column.EVENT_DIRTY_HEADER, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY_CACHES, Column.EVENT_DIRTY]);\n    }\n  }\n}\n","import 'reflect-metadata';\nimport Column from './Column';\nimport {IColumnDesc, IColumnConstructor} from './interfaces';\n\nconst supportType = Symbol.for('SupportType');\nconst category = Symbol.for('Category');\n\nexport function SupportType() {\n  return Reflect.metadata(supportType, true);\n}\n\nexport function SortByDefault(order: 'ascending'|'descending' = 'ascending') {\n  if (order === 'descending') {\n    return Reflect.metadata(Symbol.for('sortDescendingByDefault'), true);\n  }\n  return (d: any) => d;\n}\n\nexport function isSortingAscByDefault(col: Column) {\n  const clazz = (<any>col).constructor;\n  return !Reflect.hasMetadata(Symbol.for('sortDescendingByDefault'), clazz);\n}\n\nexport class Categories {\n  readonly string = {label: 'label', order: 1, name: 'string', featureLevel: 'basic'};\n  readonly categorical = {label: 'categorical', order: 2, name: 'categorical', featureLevel: 'basic'};\n  readonly number = {label: 'numerical', order: 3, name: 'number', featureLevel: 'basic'};\n  readonly date = {label: 'date', order: 4, name: 'date', featureLevel: 'basic'};\n  readonly array = {label: 'matrix', order: 5, name: 'array', featureLevel: 'advanced'};\n  readonly map = {label: 'map', order: 6, name: 'map', featureLevel: 'advanced'};\n  readonly composite = {label: 'combined', order: 7, name: 'composite', featureLevel: 'advanced'};\n  readonly support = {label: 'support', order: 8, name: 'support', featureLevel: 'advanced'};\n  readonly other = {label: 'others', order: 9, name: 'other', featureLevel: 'advanced'};\n}\n\nexport const categories = new Categories();\n\nexport function Category(cat: keyof Categories) {\n  return Reflect.metadata(category, cat);\n}\n\nexport function getSortType(col: Column): 'abc'|'num'|undefined {\n  const cat = categoryOf(col);\n  const type = col.desc.type;\n  if (cat === categories.string || cat === categories.categorical) {\n    return 'abc';\n  }\n  if (cat === categories.number || type === 'rank' || isSortingAscByDefault(col)) {\n    return 'num';\n  }\n  const numbers = new Set(['rank', 'number', 'numbers', 'ordinal', 'boxplot', 'script', 'reduce', 'stack']);\n  return numbers.has(type) ? 'num' : undefined;\n}\n\nexport function toolbar(...keys: string[]) {\n  return Reflect.metadata(Symbol.for('toolbarIcon'), keys);\n}\n\nexport function dialogAddons(key: string, ...keys: string[]) {\n  return Reflect.metadata(Symbol.for(`toolbarDialogAddon${key}`), keys);\n}\n\nexport function isSupportType(col: Column) {\n  const clazz = (<any>col).constructor;\n  return Reflect.hasMetadata(supportType, clazz);\n}\n\nexport interface IColumnCategory {\n  label: string;\n  name: string;\n  order: number;\n  featureLevel: 'basic' | 'advanced';\n}\n\nexport function categoryOf(col: IColumnConstructor | Column): IColumnCategory {\n  const cat = <keyof Categories>Reflect.getMetadata(category, col instanceof Column ? Object.getPrototypeOf(col).constructor : col) || 'other';\n  return <IColumnCategory>categories[cat] || categories.other;\n}\n\nexport function categoryOfDesc(col: IColumnDesc | string, models: { [key: string]: IColumnConstructor }): IColumnCategory {\n  const type = typeof col === 'string' ? col : col.type;\n  const clazz = models[type];\n  return clazz ? categoryOf(clazz) : <IColumnCategory>categories.other;\n}\n","import {IAdvancedBoxPlotData, IBoxPlotData, IForEachAble} from '../internal';\nimport Column from './Column';\nimport {IArrayColumn} from './IArrayColumn';\nimport {IColumnDesc, IDataRow, ITypedDump, ITypeFactory} from './interfaces';\n\n\nexport interface IColorMappingFunction {\n  apply(v: number): string;\n\n  toJSON(): ITypedDump | string;\n\n  clone(): IColorMappingFunction;\n\n  eq(other: IColorMappingFunction): boolean;\n}\n\nexport interface IColorMappingFunctionConstructor {\n  new(dump: ITypedDump | string, factory: ITypeFactory): IColorMappingFunction;\n}\n\nexport interface IMappingFunction {\n  //new(domain: number[]);\n\n  apply(v: number): number;\n\n  toJSON(): ITypedDump;\n\n  domain: number[];\n\n  clone(): IMappingFunction;\n\n  eq(other: IMappingFunction): boolean;\n\n  getRange(formatter: (v: number) => string): [string, string];\n}\n\nexport interface IMappingFunctionConstructor {\n  new(dump: ITypedDump): IMappingFunction;\n}\n\n\nexport interface IMapAbleDesc {\n  /**\n   * dump of mapping function\n   */\n  map?: ITypedDump;\n  /**\n   * either map or domain should be available\n   */\n  domain?: [number, number];\n  /**\n   * @default [0,1]\n   */\n  range?: [number, number];\n\n  /**\n   * @deprecated use colorMapping instead\n   */\n  color?: string;\n\n  /**\n   * color mapping\n   */\n  colorMapping?: string | ((v: number) => string) | ITypedDump;\n}\n\n\nexport interface IMapAbleColumn extends INumberColumn {\n  getOriginalMapping(): IMappingFunction;\n\n  getMapping(): IMappingFunction;\n\n  setMapping(mapping: IMappingFunction): void;\n\n  getColorMapping(): IColorMappingFunction;\n\n  setColorMapping(mapping: IColorMappingFunction): void;\n\n  getFilter(): INumberFilter;\n\n  setFilter(value: INumberFilter | null): void;\n\n  getRange(): [string, string];\n}\n\nexport function isMapAbleColumn(col: Column): col is IMapAbleColumn;\nexport function isMapAbleColumn(col: IColumnDesc): col is IMapAbleDesc & IColumnDesc;\nexport function isMapAbleColumn(col: Column | IColumnDesc) {\n  return (col instanceof Column && typeof (<IMapAbleColumn>col).getMapping === 'function' || (!(col instanceof Column) && isNumberColumn(col) && ((<IColumnDesc>col).type.startsWith('number') || (<IColumnDesc>col).type.startsWith('boxplot'))));\n}\n\n\nexport interface INumberColumn extends Column {\n  getNumber(row: IDataRow): number;\n\n  getRawNumber(row: IDataRow): number;\n\n  iterNumber(row: IDataRow): IForEachAble<number>;\n  iterRawNumber(row: IDataRow): IForEachAble<number>;\n\n  getNumberFormat(): (v: number) => string;\n}\n\nexport interface INumberDesc extends IMapAbleDesc {\n  /**\n   * d3 formatting option\n   * @default .3n\n   */\n  numberFormat?: string;\n}\n\n/**\n * checks whether the given column or description is a number column, i.e. the value is a number\n * @param col\n * @returns {boolean}\n */\nexport function isNumberColumn(col: Column): col is INumberColumn;\nexport function isNumberColumn(col: IColumnDesc): col is INumberDesc & IColumnDesc;\nexport function isNumberColumn(col: Column | IColumnDesc) {\n  return (col instanceof Column && typeof (<INumberColumn>col).getNumber === 'function' || (!(col instanceof Column) && (<IColumnDesc>col).type.match(/(number|stack|ordinal)/) != null));\n}\n\n\nexport enum ESortMethod {\n  min = 'min',\n  max = 'max',\n  median = 'median',\n  q1 = 'q1',\n  q3 = 'q3'\n}\n\nexport interface IBoxPlotColumn extends INumberColumn, IMapAbleColumn {\n  getBoxPlotData(row: IDataRow): IBoxPlotData | null;\n\n  getMapping(): IMappingFunction;\n\n  getRawBoxPlotData(row: IDataRow): IBoxPlotData | null;\n\n  getSortMethod(): string;\n\n  setSortMethod(sortMethod: string): void;\n}\n\nexport function isBoxPlotColumn(col: Column): col is IBoxPlotColumn {\n  return typeof (<IBoxPlotColumn>col).getBoxPlotData === 'function';\n}\n\nexport enum EAdvancedSortMethod {\n  min = 'min',\n  max = 'max',\n  median = 'median',\n  q1 = 'q1',\n  q3 = 'q3',\n  mean = 'mean'\n}\n\nexport interface IAdvancedBoxPlotColumn extends IBoxPlotColumn {\n  getBoxPlotData(row: IDataRow): IAdvancedBoxPlotData | null;\n\n  getRawBoxPlotData(row: IDataRow): IAdvancedBoxPlotData | null;\n}\n\nexport interface INumbersColumn extends IAdvancedBoxPlotColumn, IArrayColumn<number> {\n  getNumbers(row: IDataRow): number[];\n\n  getRawNumbers(row: IDataRow): number[];\n}\n\nexport function isNumbersColumn(col: Column): col is INumbersColumn {\n  return isBoxPlotColumn(col) && typeof (<INumbersColumn>col).getNumbers === 'function';\n}\n\n\nexport interface INumberFilter {\n  min: number;\n  max: number;\n  filterMissing: boolean;\n}\n","import Column, {widthChanged, labelChanged, metaDataChanged, dirty, dirtyHeader, dirtyValues, dirtyCaches, rendererTypeChanged, groupRendererChanged, summaryRendererChanged, visibilityChanged} from './Column';\nimport {IValueColumnDesc, IDataRow, ITypeFactory} from './interfaces';\nimport {IEventListener} from '../internal';\n\n/**\n * emitted when the data of this column has been loaded\n * @asMemberOf ValueColumn\n * @event\n */\nexport declare function dataLoaded(previous: boolean, current: boolean): void;\n\n/**\n * a column having an accessor to get the cell value\n */\nexport default class ValueColumn<T> extends Column {\n  static readonly EVENT_DATA_LOADED = 'dataLoaded';\n\n  static readonly RENDERER_LOADING = 'loading';\n\n  private readonly accessor: (row: IDataRow, desc: Readonly<IValueColumnDesc<T>>) => T;\n\n  /**\n   * is the data available\n   * @type {boolean}\n   */\n  private loaded: boolean;\n\n  constructor(id: string, desc: Readonly<IValueColumnDesc<T>>) {\n    super(id, desc);\n    //find accessor\n    this.accessor = desc.accessor! || (() => null);\n    this.loaded = desc.lazyLoaded !== true;\n  }\n\n  protected createEventList() {\n    return super.createEventList().concat([ValueColumn.EVENT_DATA_LOADED]);\n  }\n\n  on(type: typeof ValueColumn.EVENT_DATA_LOADED, listener: typeof dataLoaded | null): this;\n  on(type: typeof Column.EVENT_WIDTH_CHANGED, listener: typeof widthChanged | null): this;\n  on(type: typeof Column.EVENT_LABEL_CHANGED, listener: typeof labelChanged | null): this;\n  on(type: typeof Column.EVENT_METADATA_CHANGED, listener: typeof metaDataChanged | null): this;\n  on(type: typeof Column.EVENT_DIRTY, listener: typeof dirty | null): this;\n  on(type: typeof Column.EVENT_DIRTY_HEADER, listener: typeof dirtyHeader | null): this;\n  on(type: typeof Column.EVENT_DIRTY_VALUES, listener: typeof dirtyValues | null): this;\n  on(type: typeof Column.EVENT_DIRTY_CACHES, listener: typeof dirtyCaches | null): this;\n  on(type: typeof Column.EVENT_RENDERER_TYPE_CHANGED, listener: typeof rendererTypeChanged | null): this;\n  on(type: typeof Column.EVENT_GROUP_RENDERER_TYPE_CHANGED, listener: typeof groupRendererChanged | null): this;\n  on(type: typeof Column.EVENT_SUMMARY_RENDERER_TYPE_CHANGED, listener: typeof summaryRendererChanged | null): this;\n  on(type: typeof Column.EVENT_VISIBILITY_CHANGED, listener: typeof visibilityChanged | null): this;\n  on(type: string | string[], listener: IEventListener | null): this; // required for correct typings in *.d.ts\n  on(type: string | string[], listener: IEventListener | null): this {\n    return super.on(<any>type, listener);\n  }\n\n\n  getLabel(row: IDataRow) {\n    if (!this.isLoaded()) {\n      return '';\n    }\n    const v = this.getValue(row);\n    return v == null ? '' : String(v);\n  }\n\n  getRaw(row: IDataRow): T | null {\n    if (!this.isLoaded()) {\n      return null;\n    }\n    return this.accessor(row, this.desc);\n  }\n\n  getValue(row: IDataRow): T | null {\n    return this.getRaw(row);\n  }\n\n  isLoaded() {\n    return this.loaded;\n  }\n\n  setLoaded(loaded: boolean) {\n    if (this.loaded === loaded) {\n      return;\n    }\n    this.fire([ValueColumn.EVENT_DATA_LOADED, Column.EVENT_DIRTY_HEADER, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY_CACHES, Column.EVENT_DIRTY], this.loaded, this.loaded = loaded);\n  }\n\n  getRenderer(): string {\n    if (!this.isLoaded()) {\n      return ValueColumn.RENDERER_LOADING;\n    }\n    return super.getRenderer();\n  }\n\n  /**\n   * patch the dump such that the loaded attribute is defined (for lazy loading columns)\n   * @param toDescRef\n   * @returns {any}\n   */\n  dump(toDescRef: (desc: any) => any): any {\n    const r = super.dump(toDescRef);\n    r.loaded = this.loaded;\n\n    if (!this.loaded && r.renderer === ValueColumn.RENDERER_LOADING) {\n      delete r.renderer;\n    }\n    return r;\n  }\n\n  restore(dump: any, factory: ITypeFactory) {\n    if (dump.loaded !== undefined) {\n      this.loaded = dump.loaded;\n    }\n    super.restore(dump, factory);\n  }\n}\n","import {suffix, IEventListener} from '../internal';\nimport Column, {widthChanged, labelChanged, metaDataChanged, dirty, dirtyHeader, dirtyValues, rendererTypeChanged, groupRendererChanged, summaryRendererChanged, visibilityChanged, dirtyCaches} from './Column';\nimport {Category, toolbar} from './annotations';\nimport {IDataRow, IColumnParent, IFlatColumn, ITypeFactory} from './interfaces';\nimport {isNumberColumn} from './INumberColumn';\nimport ValueColumn from './ValueColumn';\n\n/**\n * emitted when the filter property changes\n * @asMemberOf CompositeColumn\n * @event\n */\nexport declare function filterChanged(previous: any | null, current: any | null): void;\n\n/**\n * emitted when a column has been added\n * @asMemberOf CompositeColumn\n * @event\n */\nexport declare function addColumn(col: Column, index: number): void;\n\n/**\n * emitted when a column has been moved within this composite columm\n * @asMemberOf CompositeColumn\n * @event\n */\nexport declare function moveColumn(col: Column, index: number, oldIndex: number): void;\n\n/**\n * emitted when a column has been removed\n * @asMemberOf CompositeColumn\n * @event\n */\nexport declare function removeColumn(col: Column, index: number): void;\n\n/**\n * implementation of a combine column, standard operations how to select\n */\n@toolbar('compositeContained', 'splitCombined')\n@Category('composite')\nexport default class CompositeColumn extends Column implements IColumnParent {\n  static readonly EVENT_FILTER_CHANGED = 'filterChanged';\n  static readonly EVENT_ADD_COLUMN = 'addColumn';\n  static readonly EVENT_MOVE_COLUMN = 'moveColumn';\n  static readonly EVENT_REMOVE_COLUMN = 'removeColumn';\n\n  protected readonly _children: Column[] = [];\n\n  protected createEventList() {\n    return super.createEventList().concat([CompositeColumn.EVENT_FILTER_CHANGED, CompositeColumn.EVENT_ADD_COLUMN, CompositeColumn.EVENT_MOVE_COLUMN, CompositeColumn.EVENT_REMOVE_COLUMN]);\n  }\n\n  on(type: typeof CompositeColumn.EVENT_FILTER_CHANGED, listener: typeof filterChanged | null): this;\n  on(type: typeof CompositeColumn.EVENT_ADD_COLUMN, listener: typeof addColumn | null): this;\n  on(type: typeof CompositeColumn.EVENT_MOVE_COLUMN, listener: typeof moveColumn | null): this;\n  on(type: typeof CompositeColumn.EVENT_REMOVE_COLUMN, listener: typeof removeColumn | null): this;\n  on(type: typeof Column.EVENT_WIDTH_CHANGED, listener: typeof widthChanged | null): this;\n  on(type: typeof Column.EVENT_LABEL_CHANGED, listener: typeof labelChanged | null): this;\n  on(type: typeof Column.EVENT_METADATA_CHANGED, listener: typeof metaDataChanged | null): this;\n  on(type: typeof Column.EVENT_DIRTY, listener: typeof dirty | null): this;\n  on(type: typeof Column.EVENT_DIRTY_HEADER, listener: typeof dirtyHeader | null): this;\n  on(type: typeof Column.EVENT_DIRTY_VALUES, listener: typeof dirtyValues | null): this;\n  on(type: typeof Column.EVENT_DIRTY_CACHES, listener: typeof dirtyCaches | null): this;\n  on(type: typeof Column.EVENT_RENDERER_TYPE_CHANGED, listener: typeof rendererTypeChanged | null): this;\n  on(type: typeof Column.EVENT_GROUP_RENDERER_TYPE_CHANGED, listener: typeof groupRendererChanged | null): this;\n  on(type: typeof Column.EVENT_SUMMARY_RENDERER_TYPE_CHANGED, listener: typeof summaryRendererChanged | null): this;\n  on(type: typeof Column.EVENT_VISIBILITY_CHANGED, listener: typeof visibilityChanged | null): this;\n  on(type: string | string[], listener: IEventListener | null): this; // required for correct typings in *.d.ts\n  on(type: string | string[], listener: IEventListener | null): this {\n    return super.on(type, listener);\n  }\n\n  assignNewId(idGenerator: () => string) {\n    super.assignNewId(idGenerator);\n    this._children.forEach((c) => c.assignNewId(idGenerator));\n  }\n\n  get children() {\n    return this._children.slice();\n  }\n\n  get length() {\n    return this._children.length;\n  }\n\n  flatten(r: IFlatColumn[], offset: number, levelsToGo = 0, padding = 0) {\n    let w = 0;\n    //no more levels or just this one\n    if (levelsToGo === 0 || levelsToGo <= Column.FLAT_ALL_COLUMNS) {\n      w = this.getWidth();\n      r.push({col: this, offset, width: w});\n      if (levelsToGo === 0) {\n        return w;\n      }\n    }\n    //push children\n    this._children.forEach((c) => {\n      if (c.isVisible() && levelsToGo <= Column.FLAT_ALL_COLUMNS) {\n        c.flatten(r, offset, levelsToGo - 1, padding);\n      }\n    });\n    return w;\n  }\n\n  dump(toDescRef: (desc: any) => any) {\n    const r = super.dump(toDescRef);\n    r.children = this._children.map((d) => d.dump(toDescRef));\n    return r;\n  }\n\n  restore(dump: any, factory: ITypeFactory) {\n    dump.children.map((child: any) => {\n      const c = factory(child);\n      if (c) {\n        this.push(c);\n      }\n    });\n    super.restore(dump, factory);\n  }\n\n  /**\n   * inserts a column at a the given position\n   * @param col\n   * @param index\n   * @returns {any}\n   */\n  insert(col: Column, index: number): Column | null {\n    if (!isNumberColumn(col) && this.canJustAddNumbers) { //indicator it is a number type\n      return null;\n    }\n    this._children.splice(index, 0, col);\n    //listen and propagate events\n    return this.insertImpl(col, index);\n  }\n\n  move(col: Column, index: number): Column | null {\n    if (col.parent !== this) { //not moving\n      return null;\n    }\n    const old = this._children.indexOf(col);\n    if (index === old) {\n      // no move needed\n      return col;\n    }\n    //delete first\n    this._children.splice(old, 1);\n    // adapt target index based on previous index, i.e shift by one\n    this._children.splice(old < index ? index - 1 : index, 0, col);\n    //listen and propagate events\n    return this.moveImpl(col, index, old);\n  }\n\n  protected insertImpl(col: Column, index: number) {\n    col.attach(this);\n    this.forward(col, ...suffix('.combine', Column.EVENT_DIRTY_HEADER, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY_CACHES, Column.EVENT_DIRTY, CompositeColumn.EVENT_FILTER_CHANGED, Column.EVENT_RENDERER_TYPE_CHANGED, Column.EVENT_GROUP_RENDERER_TYPE_CHANGED));\n    this.fire([CompositeColumn.EVENT_ADD_COLUMN, Column.EVENT_DIRTY_HEADER, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY_CACHES, Column.EVENT_DIRTY], col, index);\n    return col;\n  }\n\n  protected moveImpl(col: Column, index: number, oldIndex: number) {\n    this.fire([CompositeColumn.EVENT_MOVE_COLUMN, Column.EVENT_DIRTY_HEADER, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY_CACHES, Column.EVENT_DIRTY, Column.EVENT_RENDERER_TYPE_CHANGED, Column.EVENT_GROUP_RENDERER_TYPE_CHANGED], col, index, oldIndex);\n    return col;\n  }\n\n  push(col: Column) {\n    return this.insert(col, this._children.length);\n  }\n\n  at(index: number) {\n    return this._children[index];\n  }\n\n  indexOf(col: Column) {\n    return this._children.indexOf(col);\n  }\n\n  insertAfter(col: Column, ref: Column) {\n    const i = this.indexOf(ref);\n    if (i < 0) {\n      return null;\n    }\n    return this.insert(col, i + 1);\n  }\n\n  moveAfter(col: Column, ref: Column) {\n    const i = this.indexOf(ref);\n    if (i < 0) {\n      return null;\n    }\n    return this.move(col, i + 1);\n  }\n\n\n  remove(col: Column) {\n    const i = this._children.indexOf(col);\n    if (i < 0) {\n      return false;\n    }\n    this._children.splice(i, 1); //remove and deregister listeners\n    return this.removeImpl(col, i);\n  }\n\n  protected removeImpl(col: Column, index: number) {\n    col.detach();\n    this.unforward(col, ...suffix('.combine', Column.EVENT_DIRTY_HEADER, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY_CACHES, Column.EVENT_DIRTY, CompositeColumn.EVENT_FILTER_CHANGED));\n    this.fire([CompositeColumn.EVENT_REMOVE_COLUMN, Column.EVENT_DIRTY_HEADER, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY_CACHES, Column.EVENT_DIRTY], col, index);\n    return true;\n  }\n\n  isFiltered() {\n    return this._children.some((d) => d.isFiltered());\n  }\n\n  clearFilter() {\n    return this._children.map((d) => d.clearFilter()).some((d) => d);\n  }\n\n  filter(row: IDataRow) {\n    return this._children.every((d) => d.filter(row));\n  }\n\n  isLoaded(): boolean {\n    return this._children.every((c) => !(c instanceof ValueColumn || c instanceof CompositeColumn) || (<ValueColumn<any> | CompositeColumn>c).isLoaded());\n  }\n\n  get canJustAddNumbers() {\n    return false;\n  }\n}\n","export default function(specifier) {\n  var n = specifier.length / 6 | 0, colors = new Array(n), i = 0;\n  while (i < n) colors[i] = \"#\" + specifier.slice(i * 6, ++i * 6);\n  return colors;\n}\n","import colors from \"../colors\";\n\nexport default colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n","import colors from \"../colors\";\n\nexport default colors(\"7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666\");\n","import colors from \"../colors\";\n\nexport default colors(\"1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666\");\n","import colors from \"../colors\";\n\nexport default colors(\"fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2\");\n","import colors from \"../colors\";\n\nexport default colors(\"a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928\");\n","import colors from \"../colors\";\n\nexport default colors(\"b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc\");\n","import colors from \"../colors\";\n\nexport default colors(\"e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999\");\n","import colors from \"../colors\";\n\nexport default colors(\"66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3\");\n","import colors from \"../colors\";\n\nexport default colors(\"8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f\");\n","export default function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nexport function extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n","import define, {extend} from \"./define\";\n\nexport function Color() {}\n\nexport var darker = 0.7;\nexport var brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex3 = /^#([0-9a-f]{3})$/,\n    reHex6 = /^#([0-9a-f]{6})$/,\n    reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\"),\n    reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\"),\n    reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\"),\n    reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\"),\n    reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\"),\n    reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  hex: function() {\n    return this.rgb().hex();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nexport default function color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nexport function rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nexport function rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nexport function Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  hex: function() {\n    return \"#\" + hex(this.r) + hex(this.g) + hex(this.b);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hex(value) {\n  value = Math.max(0, Math.min(255, Math.round(value) || 0));\n  return (value < 16 ? \"0\" : \"\") + value.toString(16);\n}\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nexport function hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nexport function hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n","export var deg2rad = Math.PI / 180;\nexport var rad2deg = 180 / Math.PI;\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\n// https://beta.observablehq.com/@mbostock/lab-and-rgb\nvar K = 18,\n    Xn = 0.96422,\n    Yn = 1,\n    Zn = 0.82521,\n    t0 = 4 / 29,\n    t1 = 6 / 29,\n    t2 = 3 * t1 * t1,\n    t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    if (isNaN(o.h)) return new Lab(o.l, 0, 0, o.opacity);\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = rgb2lrgb(o.r),\n      g = rgb2lrgb(o.g),\n      b = rgb2lrgb(o.b),\n      y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn), x, z;\n  if (r === g && g === b) x = z = y; else {\n    x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);\n    z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);\n  }\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nexport function gray(l, opacity) {\n  return new Lab(l, 0, 0, opacity == null ? 1 : opacity);\n}\n\nexport default function lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nexport function Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    x = Xn * lab2xyz(x);\n    y = Yn * lab2xyz(y);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      lrgb2rgb( 3.1338561 * x - 1.6168667 * y - 0.4906146 * z),\n      lrgb2rgb(-0.9787684 * x + 1.9161415 * y + 0.0334540 * z),\n      lrgb2rgb( 0.0719453 * x - 0.2289914 * y + 1.4052427 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction lrgb2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2lrgb(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  if (o.a === 0 && o.b === 0) return new Hcl(NaN, 0, o.l, o.opacity);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nexport function lch(l, c, h, opacity) {\n  return arguments.length === 1 ? hclConvert(l) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + K * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - K * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb, darker, brighter} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\nvar A = -0.14861,\n    B = +1.78277,\n    C = -0.29227,\n    D = -0.90649,\n    E = +1.97294,\n    ED = E * D,\n    EB = E * B,\n    BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nexport default function cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nexport function Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n","export function basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nexport default function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import constant from \"./constant\";\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nexport function hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n}\n\nexport function gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n  };\n}\n\nexport default function nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n}\n","import {rgb as colorRgb} from \"d3-color\";\nimport basis from \"./basis\";\nimport basisClosed from \"./basisClosed\";\nimport nogamma, {gamma} from \"./color\";\n\nexport default (function rgbGamma(y) {\n  var color = gamma(y);\n\n  function rgb(start, end) {\n    var r = color((start = colorRgb(start)).r, (end = colorRgb(end)).r),\n        g = color(start.g, end.g),\n        b = color(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb.gamma = rgbGamma;\n\n  return rgb;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color;\n    for (i = 0; i < n; ++i) {\n      color = colorRgb(colors[i]);\n      r[i] = color.r || 0;\n      g[i] = color.g || 0;\n      b[i] = color.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color.opacity = 1;\n    return function(t) {\n      color.r = r(t);\n      color.g = g(t);\n      color.b = b(t);\n      return color + \"\";\n    };\n  };\n}\n\nexport var rgbBasis = rgbSpline(basis);\nexport var rgbBasisClosed = rgbSpline(basisClosed);\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n}\n","import {basis} from \"./basis\";\n\nexport default function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","import number from \"./number\";\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n    reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nexport default function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: number(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n}\n","import decompose, {identity} from \"./decompose\";\n\nvar cssNode,\n    cssRoot,\n    cssView,\n    svgNode;\n\nexport function parseCss(value) {\n  if (value === \"none\") return identity;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nexport function parseSvg(value) {\n  if (value == null) return identity;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n","import {color} from \"d3-color\";\nimport rgb from \"./rgb\";\nimport array from \"./array\";\nimport date from \"./date\";\nimport number from \"./number\";\nimport object from \"./object\";\nimport string from \"./string\";\nimport constant from \"./constant\";\n\nexport default function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant(b)\n      : (t === \"number\" ? number\n      : t === \"string\" ? ((c = color(b)) ? (b = c, rgb) : string)\n      : b instanceof color ? rgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : number)(a, b);\n}\n","export default function(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n}\n","import value from \"./value\";\n\nexport default function(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(na),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n}\n","import value from \"./value\";\n\nexport default function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = value(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n}\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n}\n","var degrees = 180 / Math.PI;\n\nexport var identity = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nexport default function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n","import number from \"../number\";\nimport {parseCss, parseSvg} from \"./parse\";\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nexport var interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nexport var interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n","var rho = Math.SQRT2,\n    rho2 = 2,\n    rho4 = 4,\n    epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nexport default function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    }\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    }\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n}\n","import {hsl as colorHsl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hsl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHsl(start)).h, (end = colorHsl(end)).h),\n        s = color(start.s, end.s),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hsl(hue);\nexport var hslLong = hsl(color);\n","import {hcl as colorHcl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hcl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHcl(start)).h, (end = colorHcl(end)).h),\n        c = color(start.c, end.c),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hcl(hue);\nexport var hclLong = hcl(color);\n","import {cubehelix as colorCubehelix} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction cubehelix(hue) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix(start, end) {\n      var h = hue((start = colorCubehelix(start)).h, (end = colorCubehelix(end)).h),\n          s = color(start.s, end.s),\n          l = color(start.l, end.l),\n          opacity = color(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix.gamma = cubehelixGamma;\n\n    return cubehelix;\n  })(1);\n}\n\nexport default cubehelix(hue);\nexport var cubehelixLong = cubehelix(color);\n","export default function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n}\n","import {interpolateRgbBasis} from \"d3-interpolate\";\n\nexport default function(scheme) {\n  return interpolateRgbBasis(scheme[scheme.length - 1]);\n}\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"d8b365f5f5f55ab4ac\",\n  \"a6611adfc27d80cdc1018571\",\n  \"a6611adfc27df5f5f580cdc1018571\",\n  \"8c510ad8b365f6e8c3c7eae55ab4ac01665e\",\n  \"8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e\",\n  \"8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e\",\n  \"8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e\",\n  \"5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30\",\n  \"5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"af8dc3f7f7f77fbf7b\",\n  \"7b3294c2a5cfa6dba0008837\",\n  \"7b3294c2a5cff7f7f7a6dba0008837\",\n  \"762a83af8dc3e7d4e8d9f0d37fbf7b1b7837\",\n  \"762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837\",\n  \"762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837\",\n  \"762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837\",\n  \"40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b\",\n  \"40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e9a3c9f7f7f7a1d76a\",\n  \"d01c8bf1b6dab8e1864dac26\",\n  \"d01c8bf1b6daf7f7f7b8e1864dac26\",\n  \"c51b7de9a3c9fde0efe6f5d0a1d76a4d9221\",\n  \"c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221\",\n  \"c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221\",\n  \"c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221\",\n  \"8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419\",\n  \"8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"998ec3f7f7f7f1a340\",\n  \"5e3c99b2abd2fdb863e66101\",\n  \"5e3c99b2abd2f7f7f7fdb863e66101\",\n  \"542788998ec3d8daebfee0b6f1a340b35806\",\n  \"542788998ec3d8daebf7f7f7fee0b6f1a340b35806\",\n  \"5427888073acb2abd2d8daebfee0b6fdb863e08214b35806\",\n  \"5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806\",\n  \"2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08\",\n  \"2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62f7f7f767a9cf\",\n  \"ca0020f4a58292c5de0571b0\",\n  \"ca0020f4a582f7f7f792c5de0571b0\",\n  \"b2182bef8a62fddbc7d1e5f067a9cf2166ac\",\n  \"b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac\",\n  \"b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac\",\n  \"b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac\",\n  \"67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061\",\n  \"67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62ffffff999999\",\n  \"ca0020f4a582bababa404040\",\n  \"ca0020f4a582ffffffbababa404040\",\n  \"b2182bef8a62fddbc7e0e0e09999994d4d4d\",\n  \"b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d\",\n  \"b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d\",\n  \"b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d\",\n  \"67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a\",\n  \"67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91bfdb\",\n  \"d7191cfdae61abd9e92c7bb6\",\n  \"d7191cfdae61ffffbfabd9e92c7bb6\",\n  \"d73027fc8d59fee090e0f3f891bfdb4575b4\",\n  \"d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4\",\n  \"d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4\",\n  \"d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4\",\n  \"a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695\",\n  \"a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91cf60\",\n  \"d7191cfdae61a6d96a1a9641\",\n  \"d7191cfdae61ffffbfa6d96a1a9641\",\n  \"d73027fc8d59fee08bd9ef8b91cf601a9850\",\n  \"d73027fc8d59fee08bffffbfd9ef8b91cf601a9850\",\n  \"d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850\",\n  \"d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850\",\n  \"a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837\",\n  \"a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf99d594\",\n  \"d7191cfdae61abdda42b83ba\",\n  \"d7191cfdae61ffffbfabdda42b83ba\",\n  \"d53e4ffc8d59fee08be6f59899d5943288bd\",\n  \"d53e4ffc8d59fee08bffffbfe6f59899d5943288bd\",\n  \"d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd\",\n  \"d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd\",\n  \"9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2\",\n  \"9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5f999d8c92ca25f\",\n  \"edf8fbb2e2e266c2a4238b45\",\n  \"edf8fbb2e2e266c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e0ecf49ebcda8856a7\",\n  \"edf8fbb3cde38c96c688419d\",\n  \"edf8fbb3cde38c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e0f3dba8ddb543a2ca\",\n  \"f0f9e8bae4bc7bccc42b8cbe\",\n  \"f0f9e8bae4bc7bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee8c8fdbb84e34a33\",\n  \"fef0d9fdcc8afc8d59d7301f\",\n  \"fef0d9fdcc8afc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ece2f0a6bddb1c9099\",\n  \"f6eff7bdc9e167a9cf02818a\",\n  \"f6eff7bdc9e167a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ece7f2a6bddb2b8cbe\",\n  \"f1eef6bdc9e174a9cf0570b0\",\n  \"f1eef6bdc9e174a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e7e1efc994c7dd1c77\",\n  \"f1eef6d7b5d8df65b0ce1256\",\n  \"f1eef6d7b5d8df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fde0ddfa9fb5c51b8a\",\n  \"feebe2fbb4b9f768a1ae017e\",\n  \"feebe2fbb4b9f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"edf8b17fcdbb2c7fb8\",\n  \"ffffcca1dab441b6c4225ea8\",\n  \"ffffcca1dab441b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"f7fcb9addd8e31a354\",\n  \"ffffccc2e69978c679238443\",\n  \"ffffccc2e69978c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fff7bcfec44fd95f0e\",\n  \"ffffd4fed98efe9929cc4c02\",\n  \"ffffd4fed98efe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ffeda0feb24cf03b20\",\n  \"ffffb2fecc5cfd8d3ce31a1c\",\n  \"ffffb2fecc5cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"deebf79ecae13182bd\",\n  \"eff3ffbdd7e76baed62171b5\",\n  \"eff3ffbdd7e76baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5e0a1d99b31a354\",\n  \"edf8e9bae4b374c476238b45\",\n  \"edf8e9bae4b374c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"f0f0f0bdbdbd636363\",\n  \"f7f7f7cccccc969696525252\",\n  \"f7f7f7cccccc969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"efedf5bcbddc756bb1\",\n  \"f2f0f7cbc9e29e9ac86a51a3\",\n  \"f2f0f7cbc9e29e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee0d2fc9272de2d26\",\n  \"fee5d9fcae91fb6a4acb181d\",\n  \"fee5d9fcae91fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee6cefdae6be6550d\",\n  \"feeddefdbe85fd8d3cd94701\",\n  \"feeddefdbe85fd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704\"\n).map(colors);\n\nexport default ramp(scheme);\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport default interpolateCubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport var warm = interpolateCubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nexport var cool = interpolateCubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar c = cubehelix();\n\nexport default function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  c.h = 360 * t - 100;\n  c.s = 1.5 - 1.5 * ts;\n  c.l = 0.8 - 0.9 * ts;\n  return c + \"\";\n}\n","import {rgb} from \"d3-color\";\n\nvar c = rgb(),\n    pi_1_3 = Math.PI / 3,\n    pi_2_3 = Math.PI * 2 / 3;\n\nexport default function(t) {\n  var x;\n  t = (0.5 - t) * Math.PI;\n  c.r = 255 * (x = Math.sin(t)) * x;\n  c.g = 255 * (x = Math.sin(t + pi_1_3)) * x;\n  c.b = 255 * (x = Math.sin(t + pi_2_3)) * x;\n  return c + \"\";\n}\n","import colors from \"../colors\";\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nexport default ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nexport var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nexport var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nexport var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n","/**\n * a set that preserves the insertion order\n * @internal\n */\nexport default class OrderedSet<T> implements Iterable<T> {\n  readonly [Symbol.toStringTag] = Symbol('OrderedSet');\n  private readonly set = new Set<T>();\n  private readonly list = <T[]>[];\n\n  constructor(values: Iterable<T> = []) {\n    this.addAll(Array.isArray(values) ? values : Array.from(values));\n  }\n\n  get size() {\n    return this.set.size;\n  }\n\n  clear() {\n    this.set.clear();\n    this.list.splice(0, this.list.length);\n  }\n\n  addAll(values: T[]) {\n    values.forEach((v) => this.add(v));\n    return this;\n  }\n\n  add(value: T) {\n    if (this.set.has(value)) {\n      return this;\n    }\n    this.set.add(value);\n    this.list.push(value);\n    return this;\n  }\n\n  has(value: T) {\n    return this.set.has(value);\n  }\n\n  delete(value: T) {\n    const r = this.set.delete(value);\n    if (!r) {\n      return false;\n    }\n    const index = this.list.indexOf(value);\n    console.assert(index >= 0);\n    this.list.splice(index, 1);\n    return true;\n  }\n\n  deleteAll(values: T[]) {\n    return values.reduce((acc, act) => this.delete(act) && acc, true);\n  }\n\n  forEach(callbackfn: (value: T, value2: T, set: Set<T>) => void, thisArg?: any) {\n    this.list.forEach(function (this: any, v: T) {\n      callbackfn.call(this, v, v, <any>this);\n    }, thisArg);\n  }\n\n  [Symbol.iterator]() {\n    return this.list[Symbol.iterator]();\n  }\n}\n","import {schemeCategory10, schemeSet3} from 'd3-scale-chromatic';\nimport Column, {defaultGroup, IGroup, IGroupParent, IndicesArray, IOrderedGroup, ECompareValueType} from '.';\nimport {OrderedSet} from '../internal';\nimport {DEFAULT_COLOR} from './interfaces';\n\n\n/** @internal */\nexport function patternFunction(pattern: string, ...args: string[]) {\n  return new Function('value', ...args, `\n  const escapedValue = encodeURIComponent(String(value));\n  return \\`${pattern}\\`;\n `);\n}\n\n\n/** @internal */\nexport function joinGroups(groups: IGroup[]): IGroup {\n  if (groups.length === 0) {\n    return {...defaultGroup}; //copy\n  }\n  if (groups.length === 1 && !groups[0].parent) {\n    return {...groups[0]}; //copy\n  }\n  // create a chain\n  const parents: IGroupParent[] = [];\n  for (const group of groups) {\n    const gparents: IGroupParent[] = [];\n    let g = group;\n    while (g.parent) {\n      // add all parents of this groups\n      gparents.unshift(g.parent);\n      g = g.parent;\n    }\n    parents.push(...gparents);\n    parents.push(Object.assign({subGroups: []}, group));\n  }\n  parents.slice(1).forEach((g, i) => {\n    g.parent = parents[i];\n    g.name = `${parents[i].name} ∩ ${g.name}`;\n    g.color = g.color !== DEFAULT_COLOR ? g.color : g.parent.color;\n    parents[i].subGroups = [g];\n  });\n\n  return parents[parents.length - 1];\n}\n\nexport function duplicateGroup<T extends IOrderedGroup | IGroupParent>(group: T) {\n  const clone = <T>Object.assign({}, group);\n  delete (<IOrderedGroup>clone).order;\n  if (isGroupParent(<any>clone)) {\n    (<any>clone).subGroups = [];\n  }\n  if (clone.parent) {\n    clone.parent = duplicateGroup(clone.parent);\n    clone.parent!.subGroups.push(clone);\n  }\n  return clone;\n}\n\n/** @internal */\nexport function toGroupID(group: IGroup) {\n  return group.name;\n}\n\n/** @internal */\nexport function isOrderedGroup(g: IOrderedGroup | Readonly<IGroupParent>): g is IOrderedGroup {\n  return (<IOrderedGroup>g).order != null;\n}\n\n\n/** @internal */\nfunction isGroupParent(g: IOrderedGroup | Readonly<IGroupParent>): g is IGroupParent {\n  return (<IGroupParent>g).subGroups != null;\n}\n\n/**\n * unify the parents of the given groups by reusing the same group parent if possible\n * @param groups\n */\nexport function unifyParents<T extends IOrderedGroup>(groups: T[]) {\n  if (groups.length <= 1) {\n    return groups;\n  }\n\n  const toPath = (group: T) => {\n    const path: (IGroupParent | T)[] = [group];\n    let p = group.parent;\n    while (p) {\n      path.unshift(p);\n      p = p.parent;\n    }\n    return path;\n  };\n  const paths = groups.map(toPath);\n\n  const isSame = (a: IGroupParent, b: (IGroupParent | T)) => {\n    return (b.name === a.name && b.parent === a.parent && isGroupParent(b) && b.subGroups.length > 0);\n  };\n\n  const removeDuplicates = (level: (IGroupParent | T)[], i: number) => {\n    const real: (IGroupParent | T)[] = [];\n    while (level.length > 0) {\n      const node = level.shift()!;\n      if (!isGroupParent(node) || node.subGroups.length === 0) { // cannot share leaves\n        real.push(node);\n        continue;\n      }\n      const root = {...node};\n      real.push(root);\n      // remove duplicates that directly follow\n      while (level.length > 0 && isSame(root, level[0]!)) {\n        root.subGroups.push(...(<IGroupParent>level.shift()!).subGroups);\n      }\n      for (const child of root.subGroups) {\n        (<(IGroupParent | T)>child).parent = root;\n      }\n      // cleanup children duplicates\n      root.subGroups = removeDuplicates(<(IGroupParent | T)[]>root.subGroups, i + 1);\n    }\n    return real;\n  };\n\n  removeDuplicates(paths.map((p) => p[0]), 0);\n\n  return groups;\n}\n\n/** @internal */\nexport function groupRoots(groups: IOrderedGroup[]) {\n  const roots = new OrderedSet<IOrderedGroup | Readonly<IGroupParent>>();\n  for (const group of groups) {\n    let root: IOrderedGroup | Readonly<IGroupParent> = group;\n    while (root.parent) {\n      root = root.parent;\n    }\n    roots.add(root);\n  }\n  return Array.from(roots);\n}\n\n\n// based on https://github.com/d3/d3-scale-chromatic#d3-scale-chromatic\nconst colors = schemeCategory10.concat(schemeSet3);\n\n/** @internal */\nexport const MAX_COLORS = colors.length;\n\n/** @internal */\nexport function colorPool() {\n  let act = 0;\n  return () => colors[(act++) % colors.length];\n}\n\n\n/**\n * @internal\n */\nexport function mapIndices<T>(arr: IndicesArray, callback: (value: number, i: number) => T): T[] {\n  const r: T[] = [];\n  for (let i = 0; i < arr.length; ++i) {\n    r.push(callback(arr[i], i));\n  }\n  return r;\n}\n\n/**\n * @internal\n */\nexport function everyIndices(arr: IndicesArray, callback: (value: number, i: number) => boolean): boolean {\n  for (let i = 0; i < arr.length; ++i) {\n    if (!callback(arr[i], i)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @internal\n */\nexport function filterIndices(arr: IndicesArray, callback: (value: number, i: number) => boolean): number[] {\n  const r: number[] = [];\n  for (let i = 0; i < arr.length; ++i) {\n    if (callback(arr[i], i)) {\n      r.push(arr[i]);\n    }\n  }\n  return r;\n}\n\n\n/**\n * @internal\n */\nexport function forEachIndices(arr: IndicesArray, callback: (value: number, i: number) => void) {\n  for (let i = 0; i < arr.length; ++i) {\n    callback(arr[i], i);\n  }\n}\n\n/**\n * @internal\n */\nexport function chooseUIntByDataLength(dataLength?: number | null) {\n  if (dataLength == null || typeof dataLength !== 'number' && !isNaN(dataLength)) {\n    return ECompareValueType.UINT32; // worst case\n  }\n  if (length <= 255) {\n    return ECompareValueType.UINT8;\n  }\n  if (length <= 65535) {\n    return ECompareValueType.UINT16;\n  }\n  return ECompareValueType.UINT32;\n}\n\n\n// side effect\nconst cache = new Map<string, string[]>();\n\n\nexport function getAllToolbarActions(col: Column) {\n  if (cache.has(col.desc.type)) {\n    return cache.get(col.desc.type)!;\n  }\n  const actions = new OrderedSet<string>();\n\n  // walk up the prototype chain\n  let obj = <any>col;\n  const toolbarIcon = Symbol.for('toolbarIcon');\n  do {\n    const m = <string[]>Reflect.getOwnMetadata(toolbarIcon, obj.constructor);\n    if (m) {\n      for (const mi of m) {\n        actions.add(mi);\n      }\n    }\n    obj = Object.getPrototypeOf(obj);\n  } while (obj);\n  const arr = Array.from(actions);\n  cache.set(col.desc.type, arr);\n  return arr;\n}\n\n\nexport function getAllToolbarDialogAddons(col: Column, key: string) {\n  const cacheKey = `${col.desc.type}@${key}`;\n  if (cache.has(cacheKey)) {\n    return cache.get(cacheKey)!;\n  }\n  const actions = new OrderedSet<string>();\n\n  // walk up the prototype chain\n  let obj = <any>col;\n  const symbol = Symbol.for(`toolbarDialogAddon${key}`);\n  do {\n    const m = <string[]>Reflect.getOwnMetadata(symbol, obj.constructor);\n    if (m) {\n      for (const mi of m) {\n        actions.add(mi);\n      }\n    }\n    obj = Object.getPrototypeOf(obj);\n  } while (obj);\n  cache.set(cacheKey, Array.from(actions));\n  const arr = Array.from(actions);\n  cache.set(cacheKey, arr);\n  return arr;\n}\n","import {equalArrays, fixCSS, IEventListener, suffix, joinIndexArrays, AEventDispatcher} from '../internal';\nimport {isSortingAscByDefault} from './annotations';\nimport Column, {dirty, dirtyCaches, dirtyHeader, dirtyValues, labelChanged, visibilityChanged, widthChanged} from './Column';\nimport CompositeColumn from './CompositeColumn';\nimport {IRankingDump, defaultGroup, IndicesArray, IOrderedGroup, IDataRow, IColumnParent, IFlatColumn, ISortCriteria, UIntTypedArray, IGroupParent, ITypeFactory} from './interfaces';\nimport {groupRoots} from './internal';\n\nexport enum EDirtyReason {\n  UNKNOWN = 'unknown',\n  FILTER_CHANGED = 'filter',\n  SORT_CRITERIA_CHANGED = 'sort_changed',\n  SORT_CRITERIA_DIRTY = 'sort_dirty',\n  GROUP_CRITERIA_CHANGED = 'group_changed',\n  GROUP_CRITERIA_DIRTY = 'group_dirty',\n  GROUP_SORT_CRITERIA_CHANGED = 'group_sort_changed',\n  GROUP_SORT_CRITERIA_DIRTY = 'group_sort_dirty'\n}\n\n\n/**\n * emitted when a column has been added\n * @asMemberOf Ranking\n * @event\n */\nexport declare function addColumn(col: Column, index: number): void;\n\n/**\n * emitted when a column has been moved within this composite columm\n * @asMemberOf Ranking\n * @event\n */\nexport declare function moveColumn(col: Column, index: number, oldIndex: number): void;\n\n/**\n * emitted when a column has been removed\n * @asMemberOf Ranking\n * @event\n */\nexport declare function removeColumn(col: Column, index: number): void;\n/**\n * emitted when the sort criteria propery changes\n * @asMemberOf Ranking\n * @event\n */\nexport declare function sortCriteriaChanged(previous: ISortCriteria[], current: ISortCriteria[]): void;\n/**\n * emitted when the sort criteria propery changes\n * @asMemberOf Ranking\n * @event\n */\nexport declare function groupCriteriaChanged(previous: Column[], current: Column[]): void;\n/**\n * emitted when the sort criteria propery changes\n * @asMemberOf Ranking\n * @event\n */\nexport declare function groupSortCriteriaChanged(previous: ISortCriteria[], current: ISortCriteria[]): void;\n/**\n * emitted when the sort criteria propery changes\n * @asMemberOf Ranking\n * @event\n */\nexport declare function dirtyOrder(reason?: EDirtyReason[]): void;\n/**\n * @asMemberOf Ranking\n * @event\n */\nexport declare function orderChanged(previous: number[], current: number[], previousGroups: IOrderedGroup[], currentGroups: IOrderedGroup[], dirtyReason: EDirtyReason[]): void;\n/**\n * @asMemberOf Ranking\n * @event\n */\nexport declare function groupsChanged(previous: number[], current: number[], previousGroups: IOrderedGroup[], currentGroups: IOrderedGroup[]): void;\n\n/**\n * emitted when the filter property changes\n * @asMemberOf NumberColumn\n * @event\n */\nexport declare function filterChanged(previous: any | null, current: any | null): void;\n/**\n * a ranking\n */\nexport default class Ranking extends AEventDispatcher implements IColumnParent {\n  static readonly EVENT_WIDTH_CHANGED = Column.EVENT_WIDTH_CHANGED;\n  static readonly EVENT_FILTER_CHANGED = 'filterChanged';\n  static readonly EVENT_LABEL_CHANGED = Column.EVENT_LABEL_CHANGED;\n  static readonly EVENT_ADD_COLUMN = CompositeColumn.EVENT_ADD_COLUMN;\n  static readonly EVENT_MOVE_COLUMN = CompositeColumn.EVENT_MOVE_COLUMN;\n  static readonly EVENT_REMOVE_COLUMN = CompositeColumn.EVENT_REMOVE_COLUMN;\n  static readonly EVENT_DIRTY = Column.EVENT_DIRTY;\n  static readonly EVENT_DIRTY_HEADER = Column.EVENT_DIRTY_HEADER;\n  static readonly EVENT_DIRTY_VALUES = Column.EVENT_DIRTY_VALUES;\n  static readonly EVENT_DIRTY_CACHES = Column.EVENT_DIRTY_CACHES;\n  static readonly EVENT_COLUMN_VISIBILITY_CHANGED = Column.EVENT_VISIBILITY_CHANGED;\n  static readonly EVENT_SORT_CRITERIA_CHANGED = 'sortCriteriaChanged';\n  static readonly EVENT_GROUP_CRITERIA_CHANGED = 'groupCriteriaChanged';\n  static readonly EVENT_GROUP_SORT_CRITERIA_CHANGED = 'groupSortCriteriaChanged';\n  static readonly EVENT_DIRTY_ORDER = 'dirtyOrder';\n  static readonly EVENT_ORDER_CHANGED = 'orderChanged';\n  static readonly EVENT_GROUPS_CHANGED = 'groupsChanged';\n\n  private static readonly FORWARD_COLUMN_EVENTS = suffix('.ranking', Column.EVENT_VISIBILITY_CHANGED, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY_CACHES, Column.EVENT_DIRTY_HEADER, Column.EVENT_DIRTY, Column.EVENT_VISIBILITY_CHANGED, Ranking.EVENT_FILTER_CHANGED);\n  private static readonly COLUMN_GROUP_SORT_DIRTY = suffix('.groupOrder', Column.EVENT_DIRTY_CACHES, 'sortMethodChanged');\n  private static readonly COLUMN_SORT_DIRTY = suffix('.order', Column.EVENT_DIRTY_CACHES);\n  private static readonly COLUMN_GROUP_DIRTY = suffix('.group', Column.EVENT_DIRTY_CACHES, 'groupingChanged');\n\n\n  private label: string;\n\n  private readonly sortCriteria: ISortCriteria[] = [];\n  private readonly groupColumns: Column[] = [];\n  private readonly groupSortCriteria: ISortCriteria[] = [];\n\n  /**\n   * columns of this ranking\n   * @type {Array}\n   * @private\n   */\n  private readonly columns: Column[] = [];\n\n  readonly dirtyOrder = (reason?: EDirtyReason[]) => {\n    this.fire([Ranking.EVENT_DIRTY_ORDER, Ranking.EVENT_DIRTY_VALUES, Ranking.EVENT_DIRTY], reason);\n  };\n  private readonly dirtyOrderSortDirty = () => this.dirtyOrder([EDirtyReason.SORT_CRITERIA_DIRTY]);\n  private readonly dirtyOrderGroupDirty = () => this.dirtyOrder([EDirtyReason.GROUP_CRITERIA_DIRTY]);\n  private readonly dirtyOrderGroupSortDirty = () => this.dirtyOrder([EDirtyReason.GROUP_SORT_CRITERIA_DIRTY]);\n  private readonly dirtyOrderFiltering = () => this.dirtyOrder([EDirtyReason.FILTER_CHANGED]);\n\n  /**\n   * the current ordering as an sorted array of indices\n   * @type {Array}\n   */\n  private groups: IOrderedGroup[] = [Object.assign({order: <number[]>[]}, defaultGroup)];\n  private order: IndicesArray = [];\n  private index2pos: IndicesArray = [];\n\n  constructor(public id: string) {\n    super();\n    this.id = fixCSS(id);\n    this.label = `Ranking ${id.startsWith('rank') ? id.slice(4) : id}`;\n  }\n\n  protected createEventList() {\n    return super.createEventList().concat([\n      Ranking.EVENT_WIDTH_CHANGED, Ranking.EVENT_FILTER_CHANGED,\n      Ranking.EVENT_LABEL_CHANGED, Ranking.EVENT_GROUPS_CHANGED,\n      Ranking.EVENT_ADD_COLUMN, Ranking.EVENT_REMOVE_COLUMN, Ranking.EVENT_GROUP_CRITERIA_CHANGED, Ranking.EVENT_MOVE_COLUMN,\n      Ranking.EVENT_DIRTY, Ranking.EVENT_DIRTY_HEADER, Ranking.EVENT_DIRTY_VALUES, Ranking.EVENT_DIRTY_CACHES,\n      Ranking.EVENT_GROUP_SORT_CRITERIA_CHANGED, Ranking.EVENT_COLUMN_VISIBILITY_CHANGED,\n      Ranking.EVENT_SORT_CRITERIA_CHANGED, Ranking.EVENT_DIRTY_ORDER, Ranking.EVENT_ORDER_CHANGED]);\n  }\n\n  on(type: typeof Ranking.EVENT_WIDTH_CHANGED, listener: typeof widthChanged | null): this;\n  on(type: typeof Ranking.EVENT_FILTER_CHANGED, listener: typeof filterChanged | null): this;\n  on(type: typeof Ranking.EVENT_LABEL_CHANGED, listener: typeof labelChanged | null): this;\n  on(type: typeof Ranking.EVENT_ADD_COLUMN, listener: typeof addColumn | null): this;\n  on(type: typeof Ranking.EVENT_MOVE_COLUMN, listener: typeof moveColumn | null): this;\n  on(type: typeof Ranking.EVENT_REMOVE_COLUMN, listener: typeof removeColumn | null): this;\n  on(type: typeof Ranking.EVENT_DIRTY, listener: typeof dirty | null): this;\n  on(type: typeof Ranking.EVENT_DIRTY_HEADER, listener: typeof dirtyHeader | null): this;\n  on(type: typeof Ranking.EVENT_DIRTY_VALUES, listener: typeof dirtyValues | null): this;\n  on(type: typeof Ranking.EVENT_DIRTY_CACHES, listener: typeof dirtyCaches | null): this;\n  on(type: typeof Ranking.EVENT_COLUMN_VISIBILITY_CHANGED, listener: typeof visibilityChanged | null): this;\n  on(type: typeof Ranking.EVENT_SORT_CRITERIA_CHANGED, listener: typeof sortCriteriaChanged | null): this;\n  on(type: typeof Ranking.EVENT_GROUP_CRITERIA_CHANGED, listener: typeof groupCriteriaChanged | null): this;\n  on(type: typeof Ranking.EVENT_GROUP_SORT_CRITERIA_CHANGED, listener: typeof groupSortCriteriaChanged | null): this;\n  on(type: typeof Ranking.EVENT_DIRTY_ORDER, listener: typeof dirtyOrder | null): this;\n  on(type: typeof Ranking.EVENT_ORDER_CHANGED, listener: typeof orderChanged | null): this;\n  on(type: typeof Ranking.EVENT_GROUPS_CHANGED, listener: typeof groupsChanged | null): this;\n  on(type: string | string[], listener: IEventListener | null): this; // required for correct typings in *.d.ts\n  on(type: string | string[], listener: IEventListener | null): this {\n    return super.on(type, listener);\n  }\n\n  assignNewId(idGenerator: () => string) {\n    this.id = fixCSS(idGenerator());\n    this.columns.forEach((c) => c.assignNewId(idGenerator));\n  }\n\n  getLabel() {\n    return this.label;\n  }\n\n  setLabel(value: string) {\n    if (value === this.label) {\n      return;\n    }\n    this.fire(Ranking.EVENT_LABEL_CHANGED, this.label, this.label = value);\n  }\n\n  setGroups(groups: IOrderedGroup[], index2pos: IndicesArray, dirtyReason: EDirtyReason[]) {\n    const old = this.order;\n    const oldGroups = this.groups;\n    this.groups = groups;\n    this.index2pos = index2pos;\n    this.order = joinIndexArrays(groups.map((d) => d.order));\n    // replace with subarrays to save memory\n    if (groups.length > 1) {\n      this.unifyGroups(groups);\n    } else if (groups.length === 1) {\n      // propagate to the top\n      let p = groups[0].parent;\n      while (p) {\n        (<IOrderedGroup><any>p).order = this.order;\n        p = p.parent;\n      }\n    }\n    this.fire([Ranking.EVENT_ORDER_CHANGED, Ranking.EVENT_GROUPS_CHANGED, Ranking.EVENT_DIRTY_VALUES, Ranking.EVENT_DIRTY], old, this.order, oldGroups, groups, dirtyReason);\n  }\n\n  private unifyGroups(groups: IOrderedGroup[]) {\n    let offset = 0;\n    const order = <UIntTypedArray>this.order;\n    const offsets = new Map<Readonly<IGroupParent> | IOrderedGroup, {\n      offset: number;\n      size: number;\n    }>();\n    for (const group of groups) {\n      const size = group.order.length;\n      group.order = order.subarray(offset, offset + size);\n      offsets.set(group, {offset, size});\n      offset += size;\n    }\n    // propgate also to the top with views\n    const roots = groupRoots(groups);\n    const resolve = (g: Readonly<IGroupParent> | IOrderedGroup): {\n      offset: number;\n      size: number;\n    } => {\n      if (offsets.has(g)) { // leaf\n        return offsets.get(g)!;\n      }\n      const subs = (<IGroupParent>g).subGroups.map((gi) => resolve(<Readonly<IGroupParent> | IOrderedGroup>gi));\n      const offset = subs.length > 0 ? subs[0].offset : 0;\n      const size = subs.reduce((a, b) => a + b.size, 0);\n      const r = {offset, size};\n      offsets.set(g, r);\n      (<IOrderedGroup><any>g).order = order.subarray(offset, offset + size);\n      return r;\n    };\n    for (const root of roots) {\n      resolve(root);\n    }\n  }\n\n  getRank(dataIndex: number) {\n    if (dataIndex < 0 || dataIndex > this.index2pos.length) {\n      return -1;\n    }\n    const v = this.index2pos[dataIndex];\n    return v != null && !isNaN(v) && v > 0 ? v : -1;\n  }\n\n  getOrder() {\n    return this.order;\n  }\n\n  getOrderLength() {\n    return this.order.length;\n  }\n\n  getGroups() {\n    return this.groups.slice();\n  }\n\n  dump(toDescRef: (desc: any) => any): IRankingDump {\n    const r: IRankingDump = {};\n    r.columns = this.columns.map((d) => d.dump(toDescRef));\n    r.sortCriteria = this.sortCriteria.map((s) => ({asc: s.asc, sortBy: s.col!.id}));\n    r.groupSortCriteria = this.groupSortCriteria.map((s) => ({asc: s.asc, sortBy: s.col!.id}));\n    r.groupColumns = this.groupColumns.map((d) => d.id);\n    return r;\n  }\n\n  restore(dump: IRankingDump, factory: ITypeFactory) {\n    this.clear();\n    (dump.columns || []).map((child: any) => {\n      const c = factory(child);\n      if (c) {\n        this.push(c);\n      }\n    });\n    // compatibility case\n    if (dump.sortColumn && dump.sortColumn.sortBy) {\n      const help = this.columns.find((d) => d.id === dump.sortColumn!.sortBy);\n      if (help) {\n        this.sortBy(help, dump.sortColumn.asc);\n      }\n    }\n    if (dump.groupColumns) {\n      const groupColumns = <Column[]>dump.groupColumns.map((id: string) => this.columns.find((d) => d.id === id)).filter((d) => d != null);\n      this.setGroupCriteria(groupColumns);\n    }\n\n    const restoreSortCriteria = (dumped: any) => {\n      return dumped.map((s: {asc: boolean, sortBy: string}) => {\n        return {\n          asc: s.asc,\n          col: this.columns.find((d) => d.id === s.sortBy) || null\n        };\n      }).filter((s: any) => s.col);\n    };\n\n    if (dump.sortCriteria) {\n      this.setSortCriteria(restoreSortCriteria(dump.sortCriteria));\n    }\n\n    if (dump.groupSortCriteria) {\n      this.setGroupSortCriteria(restoreSortCriteria(dump.groupSortCriteria));\n    }\n  }\n\n  flatten(r: IFlatColumn[], offset: number, levelsToGo = 0, padding = 0) {\n    let acc = offset; // + this.getWidth() + padding;\n    if (levelsToGo > 0 || levelsToGo <= Column.FLAT_ALL_COLUMNS) {\n      this.columns.forEach((c) => {\n        if (c.getVisible() && levelsToGo <= Column.FLAT_ALL_COLUMNS) {\n          acc += c.flatten(r, acc, levelsToGo - 1, padding) + padding;\n        }\n      });\n    }\n    return acc - offset;\n  }\n\n  getPrimarySortCriteria(): ISortCriteria | null {\n    if (this.sortCriteria.length === 0) {\n      return null;\n    }\n    return this.sortCriteria[0];\n  }\n\n  getSortCriteria(): ISortCriteria[] {\n    return this.sortCriteria.map((d) => Object.assign({}, d));\n  }\n\n  getGroupSortCriteria(): ISortCriteria[] {\n    return this.groupSortCriteria.map((d) => Object.assign({}, d));\n  }\n\n  toggleSorting(col: Column) {\n    return this.setSortCriteria(this.toggleSortingLogic(col, this.sortCriteria));\n  }\n\n  private toggleSortingLogic(col: Column, sortCriteria: ISortCriteria[]) {\n    const newSort = sortCriteria.slice();\n    const current = newSort.findIndex((d) => d.col === col);\n    const defaultAsc = isSortingAscByDefault(col);\n\n    if (current < 0) {\n      newSort.splice(0, newSort.length, {col, asc: defaultAsc});\n    } else if (newSort[current].asc === defaultAsc) {\n      // asc -> desc, or desc -> asc\n      newSort.splice(current, 1, {col, asc: !defaultAsc});\n    } else {\n      // remove\n      newSort.splice(current, 1);\n    }\n    return newSort;\n  }\n\n  toggleGrouping(col: Column) {\n    const old = this.groupColumns.indexOf(col);\n    if (old >= 0) {\n      const newGroupings = this.groupColumns.slice();\n      newGroupings.splice(old, 1);\n      return this.setGroupCriteria(newGroupings);\n    }\n    return this.setGroupCriteria([col]);\n  }\n\n  getGroupCriteria() {\n    return this.groupColumns.slice();\n  }\n\n  /**\n   * replaces, moves, or remove the given column in the sorting hierarchy\n   * @param col {Column}\n   * @param priority {number} when priority < 0 remove the column only else replace at the given priority\n   */\n  sortBy(col: Column, ascending: boolean = false, priority: number = 0) {\n    if (col.findMyRanker() !== this) {\n      return false; //not one of mine\n    }\n    return this.setSortCriteria(this.hierarchyLogic(this.sortCriteria, this.sortCriteria.findIndex((d) => d.col === col), {col, asc: ascending}, priority));\n  }\n\n  /**\n   * replaces, moves, or remove the given column in the group sorting hierarchy\n   * @param col {Column}\n   * @param priority {number} when priority < 0 remove the column only else replace at the given priority\n   */\n  groupSortBy(col: Column, ascending: boolean = false, priority: number = 0) {\n    if (col.findMyRanker() !== this) {\n      return false; //not one of mine\n    }\n    return this.setGroupSortCriteria(this.hierarchyLogic(this.groupSortCriteria, this.groupSortCriteria.findIndex((d) => d.col === col), {col, asc: ascending}, priority));\n  }\n\n  private hierarchyLogic<T>(entries: T[], index: number, entry: T, priority: number) {\n    entries = entries.slice();\n    if (index >= 0) {\n      // move at the other position\n      entries.splice(index, 1);\n      if (priority >= 0) {\n        entries.splice(Math.min(priority, entries.length), 0, entry);\n      }\n    } else if (priority >= 0) {\n      entries[Math.min(priority, entries.length)] = entry;\n    }\n    return entries;\n  }\n\n  /**\n   * replaces, moves, or remove the given column in the grouping hierarchy\n   * @param col {Column}\n   * @param priority {number} when priority < 0 remove the column only else replace at the given priority\n   */\n  groupBy(col: Column, priority: number = 0): boolean {\n    if (col.findMyRanker() !== this) {\n      return false; //not one of mine\n    }\n    return this.setGroupCriteria(this.hierarchyLogic(this.groupColumns, this.groupColumns.indexOf(col), col, priority));\n  }\n\n  setSortCriteria(value: ISortCriteria | ISortCriteria[]) {\n    const values = Array.isArray(value) ? value.slice() : [value];\n    const bak = this.sortCriteria.slice();\n\n    if (equalCriteria(values, bak)) {\n      return false;\n    }\n\n    // update listener\n    bak.forEach((d) => {\n      d.col.on(Ranking.COLUMN_SORT_DIRTY, null!);\n    });\n\n    values.forEach((d) => {\n      d.col.on(Ranking.COLUMN_SORT_DIRTY, this.dirtyOrderSortDirty);\n    });\n    this.sortCriteria.splice(0, this.sortCriteria.length, ...values.slice());\n    this.triggerResort(bak);\n    return true;\n  }\n\n  setGroupCriteria(column: Column[] | Column) {\n    const cols = Array.isArray(column) ? column : [column];\n\n    if (equalArrays(this.groupColumns, cols)) {\n      return true; //same\n    }\n    this.groupColumns.forEach((groupColumn) => {\n      groupColumn.on(Ranking.COLUMN_GROUP_DIRTY, null);\n    });\n\n    const bak = this.groupColumns.slice();\n    this.groupColumns.splice(0, this.groupColumns.length, ...cols);\n\n    this.groupColumns.forEach((groupColumn) => {\n      groupColumn.on(Ranking.COLUMN_GROUP_DIRTY, this.dirtyOrderGroupDirty);\n    });\n\n    this.fire([Ranking.EVENT_GROUP_CRITERIA_CHANGED, Ranking.EVENT_DIRTY_ORDER, Ranking.EVENT_DIRTY_HEADER,\n    Ranking.EVENT_DIRTY_VALUES, Ranking.EVENT_DIRTY_CACHES, Ranking.EVENT_DIRTY], bak, this.getGroupCriteria());\n    return true;\n  }\n\n  toggleGroupSorting(col: Column) {\n    return this.setGroupSortCriteria(this.toggleSortingLogic(col, this.groupSortCriteria));\n  }\n\n  setGroupSortCriteria(value: ISortCriteria | ISortCriteria[]) {\n    const values = Array.isArray(value) ? value.slice() : [value];\n    const bak = this.groupSortCriteria.slice();\n\n    if (equalCriteria(values, bak)) {\n      return false;\n    }\n\n    bak.forEach((d) => {\n      d.col.on(Ranking.COLUMN_GROUP_SORT_DIRTY, null!);\n    });\n\n    values.forEach((d) => {\n      d.col.on(Ranking.COLUMN_GROUP_SORT_DIRTY, this.dirtyOrderGroupSortDirty);\n    });\n    this.groupSortCriteria.splice(0, this.groupSortCriteria.length, ...values.slice());\n    this.triggerGroupResort(bak);\n    return true;\n  }\n\n  private triggerGroupResort(bak: ISortCriteria | ISortCriteria[] | null) {\n    const sortCriterias = this.getGroupSortCriteria();\n    const bakMulti = Array.isArray(bak) ? bak : sortCriterias;\n    this.fire([Ranking.EVENT_GROUP_SORT_CRITERIA_CHANGED, Ranking.EVENT_DIRTY_ORDER, Ranking.EVENT_DIRTY_HEADER,\n    Ranking.EVENT_DIRTY_VALUES, Ranking.EVENT_DIRTY], bakMulti, sortCriterias);\n  }\n\n  private triggerResort(bak: ISortCriteria | ISortCriteria[] | null) {\n    const sortCriterias = this.getSortCriteria();\n    const bakMulti = Array.isArray(bak) ? bak : sortCriterias;\n    this.fire([Ranking.EVENT_SORT_CRITERIA_CHANGED, Ranking.EVENT_DIRTY_ORDER, Ranking.EVENT_DIRTY_HEADER,\n    Ranking.EVENT_DIRTY_VALUES, Ranking.EVENT_DIRTY], bakMulti, sortCriterias);\n  }\n\n  get children() {\n    return this.columns.slice();\n  }\n\n  get length() {\n    return this.columns.length;\n  }\n\n  insert(col: Column, index: number = this.columns.length) {\n    this.columns.splice(index, 0, col);\n    col.attach(this);\n    this.forward(col, ...Ranking.FORWARD_COLUMN_EVENTS);\n    col.on(`${Ranking.EVENT_FILTER_CHANGED}.order`, this.dirtyOrderFiltering);\n    col.on(`${Column.EVENT_VISIBILITY_CHANGED}.ranking`, (oldValue, newValue) => this.fire([Ranking.EVENT_COLUMN_VISIBILITY_CHANGED, Ranking.EVENT_DIRTY_HEADER, Ranking.EVENT_DIRTY_VALUES, Ranking.EVENT_DIRTY], col, oldValue, newValue));\n\n    this.fire([Ranking.EVENT_ADD_COLUMN, Ranking.EVENT_DIRTY_HEADER, Ranking.EVENT_DIRTY_VALUES, Ranking.EVENT_DIRTY], col, index);\n\n    if (col.isFiltered()) {\n      this.dirtyOrderFiltering();\n    }\n    return col;\n  }\n\n  move(col: Column, index: number = this.columns.length) {\n    if (col.parent !== this) {\n      // not a move operation!\n      console.error('invalid move operation: ', col);\n      return null;\n    }\n    const old = this.columns.indexOf(col);\n    if (index === old) {\n      // no move needed\n      return col;\n    }\n    //delete first\n    this.columns.splice(old, 1);\n    // adapt target index based on previous index, i.e shift by one\n    this.columns.splice(old < index ? index - 1 : index, 0, col);\n\n    this.fire([Ranking.EVENT_MOVE_COLUMN, Ranking.EVENT_DIRTY_HEADER, Ranking.EVENT_DIRTY_VALUES, Ranking.EVENT_DIRTY], col, index, old);\n    return col;\n  }\n\n  moveAfter(col: Column, reference: Column) {\n    const i = this.columns.indexOf(reference);\n    if (i < 0) {\n      return null;\n    }\n    return this.move(col, i + 1);\n  }\n\n  get fqpath() {\n    return '';\n  }\n\n  findByPath(fqpath: string): Column {\n    let p: IColumnParent | Column = <any>this;\n    const indices = fqpath.split('@').map(Number).slice(1); //ignore the first entry = ranking\n    while (indices.length > 0) {\n      const i = indices.shift()!;\n      p = (<IColumnParent>p).at(i);\n    }\n    return <Column>p;\n  }\n\n  indexOf(col: Column) {\n    return this.columns.indexOf(col);\n  }\n\n  at(index: number) {\n    return this.columns[index];\n  }\n\n  insertAfter(col: Column, ref: Column) {\n    const i = this.columns.indexOf(ref);\n    if (i < 0) {\n      return null;\n    }\n    return this.insert(col, i + 1);\n  }\n\n  push(col: Column) {\n    return this.insert(col);\n  }\n\n  remove(col: Column) {\n    const i = this.columns.indexOf(col);\n    if (i < 0) {\n      return false;\n    }\n\n    this.unforward(col, ...Ranking.FORWARD_COLUMN_EVENTS);\n\n    const isSortCriteria = this.sortCriteria.findIndex((d) => d.col === col);\n    const sortCriteriaChanged = isSortCriteria >= 0;\n    if (sortCriteriaChanged) {\n      this.sortCriteria.splice(isSortCriteria, 1);\n    }\n\n    const isGroupSortCriteria = this.groupSortCriteria.findIndex((d) => d.col === col);\n    const groupSortCriteriaChanged = isGroupSortCriteria >= 0;\n    if (groupSortCriteriaChanged) {\n      this.groupSortCriteria.splice(isGroupSortCriteria, 1);\n    }\n\n    let newGrouping: Column[] | null = null;\n    const isGroupColumn = this.groupColumns.indexOf(col);\n    if (isGroupColumn >= 0) { // was my grouping criteria\n      newGrouping = this.groupColumns.slice();\n      newGrouping.splice(isGroupColumn, 1);\n    }\n\n    col.detach();\n    this.columns.splice(i, 1);\n\n    this.fire([Ranking.EVENT_REMOVE_COLUMN, Ranking.EVENT_DIRTY_HEADER, Ranking.EVENT_DIRTY_VALUES, Ranking.EVENT_DIRTY], col, i);\n\n    if (newGrouping) {\n      this.setGroupCriteria(newGrouping);\n    } else if (sortCriteriaChanged) {\n      this.triggerResort(null);\n    } else if (groupSortCriteriaChanged) {\n      this.triggerGroupResort(null);\n    } else if (col.isFiltered()) {\n      this.dirtyOrderFiltering();\n    }\n\n    return true;\n  }\n\n  clear() {\n    if (this.columns.length === 0) {\n      return;\n    }\n    this.sortCriteria.forEach((d) => {\n      d.col.on(`${Column.EVENT_DIRTY_CACHES}.order`, null!);\n    });\n    this.sortCriteria.splice(0, this.sortCriteria.length);\n    this.groupSortCriteria.forEach((d) => {\n      d.col.on(Ranking.COLUMN_GROUP_SORT_DIRTY, null!);\n    });\n    this.groupSortCriteria.splice(0, this.groupSortCriteria.length);\n\n    this.groupColumns.forEach((d) => {\n      d.on(Ranking.COLUMN_GROUP_DIRTY, null!);\n    });\n    this.groupColumns.splice(0, this.groupColumns.length);\n\n    this.columns.forEach((col) => {\n      this.unforward(col, ...Ranking.FORWARD_COLUMN_EVENTS);\n      col.detach();\n    });\n    const removed = this.columns.splice(0, this.columns.length);\n    this.fire([Ranking.EVENT_REMOVE_COLUMN, Ranking.EVENT_DIRTY_ORDER, Ranking.EVENT_DIRTY_HEADER, Ranking.EVENT_DIRTY_VALUES, Ranking.EVENT_DIRTY], removed);\n  }\n\n  get flatColumns(): Column[] {\n    const r: IFlatColumn[] = [];\n    this.flatten(r, 0, Column.FLAT_ALL_COLUMNS);\n    return r.map((d) => d.col);\n  }\n\n  find(idOrFilter: string | ((col: Column) => boolean)) {\n    const filter = typeof (idOrFilter) === 'string' ? (col: Column) => col.id === idOrFilter : idOrFilter;\n    const r = this.flatColumns;\n    for (const v of r) {\n      if (filter(v)) {\n        return v;\n      }\n    }\n    return null;\n  }\n\n  isFiltered() {\n    return this.columns.some((d) => d.isFiltered());\n  }\n\n  filter(row: IDataRow) {\n    return this.columns.every((d) => d.filter(row));\n  }\n\n  clearFilters() {\n    return this.columns.map((d) => d.clearFilter()).some((d) => d);\n  }\n\n  findMyRanker() {\n    return this;\n  }\n\n  get fqid() {\n    return this.id;\n  }\n\n  /**\n   * marks the header, values, or both as dirty such that the values are reevaluated\n   * @param type specify in more detail what is dirty, by default whole column\n   */\n  markDirty(type: 'header' | 'values' | 'all' = 'all') {\n    switch (type) {\n      case 'header':\n        return this.fire([Column.EVENT_DIRTY_HEADER, Column.EVENT_DIRTY]);\n      case 'values':\n        return this.fire([Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY]);\n      default:\n        return this.fire([Column.EVENT_DIRTY_HEADER, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY_CACHES, Column.EVENT_DIRTY]);\n    }\n  }\n}\n\nfunction equalCriteria(a: ISortCriteria[], b: ISortCriteria[]) {\n  if (a.length !== b.length) {\n    return false;\n  }\n  return a.every((ai, i) => {\n    const bi = b[i];\n    return ai.col === bi.col && ai.asc === bi.asc;\n  });\n}\n","/**\n * @internal\n */\nexport interface IDebounceContext {\n  /**\n   * aka this\n   */\n  self: any;\n  args: any[];\n}\n\n/**\n * create a delayed call, can be called multiple times but only the last one at most delayed by timeToDelay will be executed\n * @param {(...args: any[]) => void} callback the callback to call\n * @param {number} timeToDelay delay the call in milliseconds\n * @param choose optional function to merge call context\n * @return {(...args: any[]) => any} a function that can be called with the same interface as the callback but delayed\n * @internal\n */\nexport default function debounce(callback: (...args: any[]) => void, timeToDelay = 100, choose?: (current: IDebounceContext, next: IDebounceContext) => IDebounceContext) {\n  let tm = -1;\n  let ctx: IDebounceContext | null = null;\n\n  return function (this: any, ...args: any[]) {\n    if (tm >= 0) {\n      clearTimeout(tm);\n      tm = -1;\n    }\n\n    const next = {self: this, args};\n    // compute current context\n    ctx = ctx && choose ? choose(ctx, next) : next;\n\n    tm = self.setTimeout(() => {\n      console.assert(ctx != null);\n      callback.apply(ctx!.self, ctx!.args);\n      ctx = null;\n    }, timeToDelay);\n  };\n}\n","import {Category, SupportType} from './annotations';\nimport Column from './Column';\nimport {IDataRow, IColumnDesc} from './interfaces';\n\n\n/**\n * factory for creating a description creating a rank column\n * @param label\n * @returns {{type: string, label: string}}\n */\nexport function createRankDesc(label: string = 'Rank') {\n  return {type: 'rank', label};\n}\n\n/**\n * a rank column\n */\n@SupportType()\n@Category('support')\nexport default class RankColumn extends Column {\n\n  constructor(id: string, desc: IColumnDesc) {\n    super(id, desc);\n    this.setDefaultWidth(50);\n  }\n\n  getLabel(row: IDataRow) {\n    return String(this.getValue(row));\n  }\n\n  getRaw(row: IDataRow) {\n    const ranking = this.findMyRanker();\n    if (!ranking) {\n      return -1;\n    }\n    return ranking.getRank(row.i);\n  }\n\n  getValue(row: IDataRow) {\n    const r = this.getRaw(row);\n    return r === -1 ? null : r;\n  }\n\n  get frozen() {\n    return this.desc.frozen !== false;\n  }\n}\n","import {Category, SupportType, toolbar} from './annotations';\nimport Column, {widthChanged, labelChanged, metaDataChanged, dirty, dirtyHeader, dirtyValues, rendererTypeChanged, groupRendererChanged, summaryRendererChanged, visibilityChanged, dirtyCaches} from './Column';\nimport {IGroup, IColumnDesc} from './interfaces';\nimport Ranking from './Ranking';\nimport {IEventListener} from '../internal';\n\n\nexport enum EAggregationState {\n  COLLAPSE = 'collapse',\n  EXPAND = 'expand',\n  EXPAND_TOP_N = 'expand_top'\n}\n\n/**\n * factory for creating a description creating a rank column\n * @param label\n * @returns {{type: string, label: string}}\n */\nexport function createAggregateDesc(label: string = 'Aggregate Groups') {\n  return {type: 'aggregate', label, fixed: true};\n}\n\nexport interface IAggregateGroupColumnDesc extends IColumnDesc {\n  isAggregated(ranking: Ranking, group: IGroup): EAggregationState;\n\n  setAggregated(ranking: Ranking, group: IGroup, value: EAggregationState): void;\n}\n\n/**\n * emitted upon changing of the aggregate attribute\n * @aparam value -1 = no, 0 = fully aggregated, N = show top N\n * @asMemberOf AggregateGroupColumn\n * @event\n */\nexport declare function aggregate(ranking: Ranking, group: IGroup, value: boolean, state: EAggregationState): void;\n\n/**\n * a checkbox column for selections\n */\n@toolbar('setShowTopN')\n@SupportType()\n@Category('support')\nexport default class AggregateGroupColumn extends Column {\n  static readonly EVENT_AGGREGATE = 'aggregate';\n\n  constructor(id: string, desc: Readonly<IAggregateGroupColumnDesc>) {\n    super(id, desc);\n    this.setDefaultWidth(40);\n  }\n\n  get frozen() {\n    return this.desc.frozen !== false;\n  }\n\n  protected createEventList() {\n    return super.createEventList().concat([AggregateGroupColumn.EVENT_AGGREGATE]);\n  }\n\n  on(type: typeof AggregateGroupColumn.EVENT_AGGREGATE, listener: typeof aggregate | null): this;\n  on(type: typeof Column.EVENT_WIDTH_CHANGED, listener: typeof widthChanged | null): this;\n  on(type: typeof Column.EVENT_LABEL_CHANGED, listener: typeof labelChanged | null): this;\n  on(type: typeof Column.EVENT_METADATA_CHANGED, listener: typeof metaDataChanged | null): this;\n  on(type: typeof Column.EVENT_DIRTY, listener: typeof dirty | null): this;\n  on(type: typeof Column.EVENT_DIRTY_HEADER, listener: typeof dirtyHeader | null): this;\n  on(type: typeof Column.EVENT_DIRTY_VALUES, listener: typeof dirtyValues | null): this;\n  on(type: typeof Column.EVENT_DIRTY_CACHES, listener: typeof dirtyCaches | null): this;\n  on(type: typeof Column.EVENT_RENDERER_TYPE_CHANGED, listener: typeof rendererTypeChanged | null): this;\n  on(type: typeof Column.EVENT_GROUP_RENDERER_TYPE_CHANGED, listener: typeof groupRendererChanged | null): this;\n  on(type: typeof Column.EVENT_SUMMARY_RENDERER_TYPE_CHANGED, listener: typeof summaryRendererChanged | null): this;\n  on(type: typeof Column.EVENT_VISIBILITY_CHANGED, listener: typeof visibilityChanged | null): this;\n  on(type: string | string[], listener: IEventListener | null): this; // required for correct typings in *.d.ts\n  on(type: string | string[], listener: IEventListener | null): this {\n    return super.on(<any>type, listener);\n  }\n\n  isAggregated(group: IGroup) {\n    const ranking = this.findMyRanker()!;\n    if ((<IAggregateGroupColumnDesc>this.desc).isAggregated) {\n      return (<IAggregateGroupColumnDesc>this.desc).isAggregated(ranking, group);\n    }\n    return false;\n  }\n\n  setAggregated(group: IGroup, value: boolean | EAggregationState) {\n    const n: EAggregationState = typeof value === 'boolean' ? (value ? EAggregationState.EXPAND : EAggregationState.COLLAPSE): value;\n    const ranking = this.findMyRanker()!;\n    const current = ((<IAggregateGroupColumnDesc>this.desc).isAggregated) && (<IAggregateGroupColumnDesc>this.desc).isAggregated(ranking, group);\n    if (current === n) {\n      return true;\n    }\n\n    if ((<IAggregateGroupColumnDesc>this.desc).setAggregated) {\n      (<IAggregateGroupColumnDesc>this.desc).setAggregated(ranking, group, n);\n    }\n    this.fire(AggregateGroupColumn.EVENT_AGGREGATE, ranking, group, n !== EAggregationState.COLLAPSE, n);\n    return false;\n  }\n}\n","import {Category, SupportType, toolbar} from './annotations';\nimport {IndicesArray, IDataRow, IGroup, ECompareValueType, IValueColumnDesc} from './interfaces';\nimport Column, {widthChanged, labelChanged, metaDataChanged, dirty, dirtyHeader, dirtyValues, rendererTypeChanged, groupRendererChanged, summaryRendererChanged, visibilityChanged, dirtyCaches} from './Column';\nimport ValueColumn, {dataLoaded} from './ValueColumn';\nimport {IEventListener} from '../internal';\n\n/**\n * factory for creating a description creating a rank column\n * @param label\n * @returns {{type: string, label: string}}\n */\nexport function createSelectionDesc(label: string = 'Selection Checkboxes') {\n  return {type: 'selection', label, fixed: true};\n}\n\nexport interface ISelectionColumnDesc extends IValueColumnDesc<boolean> {\n  /**\n   * setter for selecting/deselecting the given row\n   */\n  setter(index: number, value: boolean): void;\n\n  /**\n   * setter for selecting/deselecting the given row\n   */\n  setterAll(indices: IndicesArray, value: boolean): void;\n}\n\n\n/**\n * emitted when rows are selected\n * @asMemberOf SelectionColumn\n * @param dataIndex the (de)seleced row\n * @param value true if selected else false\n * @param dataIndices in case of multiple rows are selected\n * @event\n */\nexport declare function select_SC(dataIndex: number, value: boolean, dataIndices?: IndicesArray): void;\n\n/**\n * a checkbox column for selections\n */\n@SupportType()\n@toolbar('sort', 'sortBy', 'group', 'groupBy', 'invertSelection')\n@Category('support')\nexport default class SelectionColumn extends ValueColumn<boolean> {\n  private static SELECTED_GROUP: IGroup = {\n    name: 'Selected',\n    color: 'orange'\n  };\n  private static NOT_SELECTED_GROUP: IGroup = {\n    name: 'Unselected',\n    color: 'gray'\n  };\n  static readonly EVENT_SELECT = 'select';\n\n  constructor(id: string, desc: Readonly<ISelectionColumnDesc>) {\n    super(id, desc);\n    this.setDefaultWidth(20);\n  }\n\n  get frozen() {\n    return this.desc.frozen !== false;\n  }\n\n  protected createEventList() {\n    return super.createEventList().concat([SelectionColumn.EVENT_SELECT]);\n  }\n\n  on(type: typeof SelectionColumn.EVENT_SELECT, listener: typeof select_SC | null): this;\n  on(type: typeof ValueColumn.EVENT_DATA_LOADED, listener: typeof dataLoaded | null): this;\n  on(type: typeof Column.EVENT_WIDTH_CHANGED, listener: typeof widthChanged | null): this;\n  on(type: typeof Column.EVENT_LABEL_CHANGED, listener: typeof labelChanged | null): this;\n  on(type: typeof Column.EVENT_METADATA_CHANGED, listener: typeof metaDataChanged | null): this;\n  on(type: typeof Column.EVENT_DIRTY, listener: typeof dirty | null): this;\n  on(type: typeof Column.EVENT_DIRTY_HEADER, listener: typeof dirtyHeader | null): this;\n  on(type: typeof Column.EVENT_DIRTY_VALUES, listener: typeof dirtyValues | null): this;\n  on(type: typeof Column.EVENT_DIRTY_CACHES, listener: typeof dirtyCaches | null): this;\n  on(type: typeof Column.EVENT_RENDERER_TYPE_CHANGED, listener: typeof rendererTypeChanged | null): this;\n  on(type: typeof Column.EVENT_GROUP_RENDERER_TYPE_CHANGED, listener: typeof groupRendererChanged | null): this;\n  on(type: typeof Column.EVENT_SUMMARY_RENDERER_TYPE_CHANGED, listener: typeof summaryRendererChanged | null): this;\n  on(type: typeof Column.EVENT_VISIBILITY_CHANGED, listener: typeof visibilityChanged | null): this;\n  on(type: string | string[], listener: IEventListener | null): this; // required for correct typings in *.d.ts\n  on(type: string | string[], listener: IEventListener | null): this {\n    return super.on(<any>type, listener);\n  }\n\n  setValue(row: IDataRow, value: boolean) {\n    const old = this.getValue(row);\n    if (old === value) {\n      return true;\n    }\n    return this.setImpl(row, value);\n  }\n\n  setValues(rows: IndicesArray, value: boolean) {\n    if (rows.length === 0) {\n      return;\n    }\n    if ((<ISelectionColumnDesc>this.desc).setterAll) {\n      (<ISelectionColumnDesc>this.desc).setterAll(rows, value);\n    }\n    this.fire(SelectionColumn.EVENT_SELECT, rows[0], value, rows);\n    return true;\n  }\n\n  private setImpl(row: IDataRow, value: boolean) {\n    if ((<ISelectionColumnDesc>this.desc).setter) {\n      (<ISelectionColumnDesc>this.desc).setter(row.i, value);\n    }\n    this.fire(SelectionColumn.EVENT_SELECT, row.i, value);\n    return true;\n  }\n\n  toggleValue(row: IDataRow) {\n    const old = this.getValue(row);\n    this.setImpl(row, !old);\n    return !old;\n  }\n\n  toCompareValue(row: IDataRow) {\n    const v = this.getValue(row) === true;\n    return v ? 1 : 0;\n  }\n\n  toCompareValueType() {\n    return ECompareValueType.BINARY;\n  }\n\n  group(row: IDataRow) {\n    const isSelected = this.getValue(row);\n    return Object.assign({}, isSelected ? SelectionColumn.SELECTED_GROUP : SelectionColumn.NOT_SELECTED_GROUP);\n  }\n}\n","import {Category, SupportType} from './annotations';\nimport {IDataRow, IColumnDesc, IGroup} from './interfaces';\nimport Column from './Column';\n\nexport interface IAction {\n  name: string;\n  icon?: string;\n  className?: string;\n\n  action(row: IDataRow): void;\n}\n\nexport interface IGroupAction {\n  name: string;\n  icon?: string;\n  className?: string;\n\n  action(group: IGroup, rows: IDataRow[]): void;\n}\n\n/**\n * utility for creating an action description with optional label\n * @param label\n * @param actions\n * @param groupActions\n * @returns {{type: string, label: string}}\n */\nexport function createActionDesc(label = 'actions', actions: Readonly<IAction>[] = [], groupActions: Readonly<IGroupAction>[] = []) {\n  return {type: 'actions', label, actions, groupActions, fixed: true};\n}\n\nexport interface IActionDesc {\n  actions?: Readonly<IAction>[];\n  groupActions?: Readonly<IGroupAction>[];\n}\n\nexport declare type IActionColumnDesc = IColumnDesc & IActionDesc;\n\n/**\n * a default column with no values\n */\n@SupportType()\n@Category('support')\nexport default class ActionColumn extends Column {\n\n  readonly actions: IAction[];\n  readonly groupActions: IGroupAction[];\n\n  constructor(id: string, desc: Readonly<IActionColumnDesc>) {\n    super(id, desc);\n\n    this.actions = desc.actions || [];\n    this.groupActions = desc.groupActions || [];\n  }\n\n  getLabel() {\n    return '';\n  }\n\n  getValue() {\n    return '';\n  }\n\n  compare() {\n    return 0; //can't compare\n  }\n}\n","import {IGroup} from './interfaces';\n\n\nexport function isMissingValue(v: any): boolean {\n  if(v == null || v === undefined || v === '' || v === 'NA' || v === 'na' || v === 'Na' || v === 'nA' || v === 'NaN' || (typeof v === 'number' && isNaN(v))) {\n    return true;\n  }\n  if (!Array.isArray(v)) {\n    return false;\n  }\n  for (const vi of v) {\n    if (!isMissingValue(vi)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function isUnknown(v?: number | null) {\n  return v == null || v === undefined || isNaN(v);\n}\n\nexport const FIRST_IS_NAN = -1;\nexport const FIRST_IS_MISSING = 1;\n\n\nexport const missingGroup: IGroup = {\n  name: 'Missing values',\n  color: 'gray'\n};\n","import {Category, toolbar, dialogAddons} from './annotations';\nimport Column, {widthChanged, labelChanged, metaDataChanged, dirty, dirtyHeader, dirtyValues, rendererTypeChanged, groupRendererChanged, summaryRendererChanged, visibilityChanged, dirtyCaches} from './Column';\nimport {defaultGroup, IDataRow, IGroup, ECompareValueType, IValueColumnDesc, othersGroup, ITypeFactory} from './interfaces';\nimport {missingGroup, isMissingValue} from './missing';\nimport ValueColumn, {dataLoaded} from './ValueColumn';\nimport {equal, IEventListener} from '../internal';\n\nexport enum EAlignment {\n  left = 'left',\n  center = 'center',\n  right = 'right'\n}\n\nexport interface IStringDesc {\n  /**\n   * column alignment: left, center, right\n   * @default left\n   */\n  alignment?: EAlignment;\n\n  /**\n   * escape html tags\n   */\n  escape?: boolean;\n}\n\n\nexport declare type IStringColumnDesc = IStringDesc & IValueColumnDesc<string>;\n\n/**\n * emitted when the filter property changes\n * @asMemberOf StringColumn\n * @event\n */\nexport declare function filterChanged_SC(previous: string | RegExp | null, current: string | RegExp | null): void;\n\n\n/**\n * emitted when the grouping property changes\n * @asMemberOf StringColumn\n * @event\n */\nexport declare function groupingChanged_SC(previous: (RegExp | string)[][], current: (RegExp | string)[][]): void;\n\n/**\n * a string column with optional alignment\n */\n@toolbar('search', 'groupBy', 'filterString')\n@dialogAddons('group', 'groupString')\n@Category('string')\nexport default class StringColumn extends ValueColumn<string> {\n  static readonly EVENT_FILTER_CHANGED = 'filterChanged';\n  static readonly EVENT_GROUPING_CHANGED = 'groupingChanged';\n\n  //magic key for filtering missing ones\n  static readonly FILTER_MISSING = '__FILTER_MISSING';\n  private currentFilter: string | RegExp | null = null;\n\n  readonly alignment: EAlignment;\n  readonly escape: boolean;\n\n  private currentGroupCriteria: (RegExp | string)[] = [];\n\n  constructor(id: string, desc: Readonly<IStringColumnDesc>) {\n    super(id, desc);\n    this.setDefaultWidth(200); //by default 200\n    this.alignment = <any>desc.alignment || EAlignment.left;\n    this.escape = desc.escape !== false;\n  }\n\n\n  protected createEventList() {\n    return super.createEventList().concat([StringColumn.EVENT_GROUPING_CHANGED, StringColumn.EVENT_FILTER_CHANGED]);\n  }\n\n  on(type: typeof StringColumn.EVENT_FILTER_CHANGED, listener: typeof filterChanged_SC | null): this;\n  on(type: typeof ValueColumn.EVENT_DATA_LOADED, listener: typeof dataLoaded | null): this;\n  on(type: typeof StringColumn.EVENT_GROUPING_CHANGED, listener: typeof groupingChanged_SC | null): this;\n  on(type: typeof Column.EVENT_WIDTH_CHANGED, listener: typeof widthChanged | null): this;\n  on(type: typeof Column.EVENT_LABEL_CHANGED, listener: typeof labelChanged | null): this;\n  on(type: typeof Column.EVENT_METADATA_CHANGED, listener: typeof metaDataChanged | null): this;\n  on(type: typeof Column.EVENT_DIRTY, listener: typeof dirty | null): this;\n  on(type: typeof Column.EVENT_DIRTY_HEADER, listener: typeof dirtyHeader | null): this;\n  on(type: typeof Column.EVENT_DIRTY_VALUES, listener: typeof dirtyValues | null): this;\n  on(type: typeof Column.EVENT_DIRTY_CACHES, listener: typeof dirtyCaches | null): this;\n  on(type: typeof Column.EVENT_RENDERER_TYPE_CHANGED, listener: typeof rendererTypeChanged | null): this;\n  on(type: typeof Column.EVENT_GROUP_RENDERER_TYPE_CHANGED, listener: typeof groupRendererChanged | null): this;\n  on(type: typeof Column.EVENT_SUMMARY_RENDERER_TYPE_CHANGED, listener: typeof summaryRendererChanged | null): this;\n  on(type: typeof Column.EVENT_VISIBILITY_CHANGED, listener: typeof visibilityChanged | null): this;\n  on(type: string | string[], listener: IEventListener | null): this; // required for correct typings in *.d.ts\n  on(type: string | string[], listener: IEventListener | null): this {\n    return super.on(<any>type, listener);\n  }\n\n  getValue(row: IDataRow): string | null {\n    const v: any = super.getValue(row);\n    return isMissingValue(v) ? null : String(v);\n  }\n\n  getLabel(row: IDataRow) {\n    return this.getValue(row) || '';\n  }\n\n  dump(toDescRef: (desc: any) => any): any {\n    const r = super.dump(toDescRef);\n    if (this.currentFilter instanceof RegExp) {\n      r.filter = `REGEX:${(<RegExp>this.currentFilter).source}`;\n    } else {\n      r.filter = this.currentFilter;\n    }\n    if (this.currentGroupCriteria) {\n      r.groupCriteria = this.currentGroupCriteria.map((d) => typeof d === 'string' ? d : `REGEX:${d.source}`);\n    }\n    return r;\n  }\n\n  restore(dump: any, factory: ITypeFactory) {\n    super.restore(dump, factory);\n    if (dump.filter && (<string>dump.filter).startsWith('REGEX:')) {\n      this.currentFilter = new RegExp(dump.filter.slice(6), 'gm');\n    } else {\n      this.currentFilter = dump.filter || null;\n    }\n    if (dump.groupCriteria) {\n      this.currentGroupCriteria = dump.groupCriteria.map((d: string) => d.startsWith('REGEX:') ? new RegExp(d.slice(6), 'gm') : d);\n    }\n  }\n\n  isFiltered() {\n    return this.currentFilter != null;\n  }\n\n  filter(row: IDataRow) {\n    if (!this.isFiltered()) {\n      return true;\n    }\n    const r = this.getLabel(row);\n    const filter = this.currentFilter;\n\n    if (filter === StringColumn.FILTER_MISSING) { //filter empty\n      return r != null && r.trim() !== '';\n    }\n    if (typeof filter === 'string' && filter.length > 0) {\n      return r !== '' && r.toLowerCase().indexOf(filter.toLowerCase()) >= 0;\n    }\n    if (filter instanceof RegExp) {\n      return r !== '' && filter.test(r);\n    }\n    return true;\n  }\n\n  getFilter() {\n    return this.currentFilter;\n  }\n\n  setFilter(filter: string | RegExp | null) {\n    if (filter === '') {\n      filter = null;\n    }\n    if (this.currentFilter === filter) {\n      return;\n    }\n    this.fire([StringColumn.EVENT_FILTER_CHANGED, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY], this.currentFilter, this.currentFilter = filter);\n  }\n\n  clearFilter() {\n    const was = this.isFiltered();\n    this.setFilter(null);\n    return was;\n  }\n\n  getGroupCriteria() {\n    return this.currentGroupCriteria.slice();\n  }\n\n  setGroupCriteria(value: (string | RegExp)[]) {\n    if (equal(this.currentGroupCriteria, value)) {\n      return;\n    }\n    const bak = this.getGroupCriteria();\n    this.currentGroupCriteria = value.slice();\n    this.fire([StringColumn.EVENT_GROUPING_CHANGED, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY], bak, value);\n  }\n\n  group(row: IDataRow): IGroup {\n    if (this.getValue(row) == null) {\n      return Object.assign({}, missingGroup);\n    }\n\n    if (this.currentGroupCriteria.length === 0) {\n      return Object.assign({}, othersGroup);\n    }\n    const value = this.getLabel(row);\n\n    if (!value) {\n      return Object.assign({}, missingGroup);\n    }\n\n    for (const criteria of this.currentGroupCriteria) {\n      if (!((criteria instanceof RegExp && criteria.test(value)) || (typeof criteria === 'string' && value.startsWith(criteria)))) {\n        continue;\n      }\n      return {\n        name: typeof criteria === 'string' ? criteria : criteria.source,\n        color: defaultGroup.color\n      };\n    }\n    return Object.assign({}, othersGroup);\n  }\n\n\n  toCompareValue(row: IDataRow) {\n    const v = this.getValue(row);\n    return v === '' || v == null ? null : v.toLowerCase();\n  }\n\n  toCompareValueType() {\n    return ECompareValueType.STRING;\n  }\n}\n\n","import * as equalImpl from 'fast-deep-equal';\n\n// keep here to have a \"real\" export for webpack not just interfaces\n\n/**\n * deep equal comparison\n */\nexport const equal: (a: any, b: any) => boolean = (typeof equalImpl === 'function' ? equalImpl : (<any>equalImpl).default);\n\nexport interface IBin<T> {\n  /**\n   * bin start\n   */\n  x0: T;\n  /**\n   * bin end\n   */\n  x1: T;\n  /**\n   * bin count\n   */\n  count: number;\n}\n\nexport declare type INumberBin = IBin<number>;\n\nexport interface IBoxPlotData {\n  readonly min: number;\n  readonly max: number;\n  readonly median: number;\n  readonly q1: number;\n  readonly q3: number;\n  readonly outlier?: number[];\n  readonly whiskerLow?: number;\n  readonly whiskerHigh?: number;\n}\n\nexport interface IAdvancedBoxPlotData extends IBoxPlotData {\n  readonly mean: number;\n\n  readonly missing: number;\n  readonly count: number;\n}\n\nexport interface IHistogramStats<T> {\n  readonly min: T | null;\n  readonly max: T | null;\n\n  readonly missing: number;\n  readonly count: number;\n\n  readonly maxBin: number;\n  readonly hist: ReadonlyArray<IBin<T>>;\n}\n\nexport interface IStatistics extends IHistogramStats<number> {\n  readonly mean: number;\n}\n\nexport interface ICategoricalBin {\n  cat: string;\n  count: number;\n}\n\nexport declare type IDateBin = IBin<Date>;\n\nexport interface ICategoricalStatistics {\n  readonly missing: number;\n  readonly count: number;\n\n  readonly maxBin: number;\n  readonly hist: ReadonlyArray<ICategoricalBin>;\n}\n\nexport declare type IDateHistGranularity = 'year' | 'month' | 'day';\n\nexport interface IDateStatistics extends IHistogramStats<Date> {\n  readonly histGranularity: IDateHistGranularity;\n}\n","import Column, {widthChanged, labelChanged, metaDataChanged, dirty, dirtyHeader, dirtyValues, rendererTypeChanged, groupRendererChanged, summaryRendererChanged, visibilityChanged, dirtyCaches} from './Column';\nimport {IDataRow, ITypeFactory} from './interfaces';\nimport StringColumn from './StringColumn';\nimport {IEventListener} from '../internal';\nimport ValueColumn, {dataLoaded} from './ValueColumn';\n\n\n/**\n * emitted when the filter property changes\n * @asMemberOf AnnotateColumn\n * @event\n */\nexport declare function filterChanged_AC(previous: string | RegExp | null, current: string | RegExp | null): void;\n\n\n/**\n * emitted when the grouping property changes\n * @asMemberOf AnnotateColumn\n * @event\n */\nexport declare function groupingChanged_AC(previous: (RegExp | string)[][], current: (RegExp | string)[][]): void;\n\n/**\n * emitted when the value of a row changes\n * @asMemberOf AnnotateColumn\n * @event\n */\nexport declare function valueChanged(dataIndex: number, previous: string, current: string): void;\n\n/**\n * a string column in which the values can be edited locally\n */\nexport default class AnnotateColumn extends StringColumn {\n  static readonly EVENT_VALUE_CHANGED = 'valueChanged';\n\n  private readonly annotations = new Map<number, string>();\n\n  protected createEventList() {\n    return super.createEventList().concat([AnnotateColumn.EVENT_VALUE_CHANGED]);\n  }\n\n  on(type: typeof AnnotateColumn.EVENT_VALUE_CHANGED, listener: typeof valueChanged | null): this;\n  on(type: typeof StringColumn.EVENT_FILTER_CHANGED, listener: typeof filterChanged_AC | null): this;\n  on(type: typeof StringColumn.EVENT_GROUPING_CHANGED, listener: typeof groupingChanged_AC | null): this;\n  on(type: typeof ValueColumn.EVENT_DATA_LOADED, listener: typeof dataLoaded | null): this;\n  on(type: typeof Column.EVENT_WIDTH_CHANGED, listener: typeof widthChanged | null): this;\n  on(type: typeof Column.EVENT_LABEL_CHANGED, listener: typeof labelChanged | null): this;\n  on(type: typeof Column.EVENT_METADATA_CHANGED, listener: typeof metaDataChanged | null): this;\n  on(type: typeof Column.EVENT_DIRTY, listener: typeof dirty | null): this;\n  on(type: typeof Column.EVENT_DIRTY_HEADER, listener: typeof dirtyHeader | null): this;\n  on(type: typeof Column.EVENT_DIRTY_VALUES, listener: typeof dirtyValues | null): this;\n  on(type: typeof Column.EVENT_DIRTY_CACHES, listener: typeof dirtyCaches | null): this;\n  on(type: typeof Column.EVENT_RENDERER_TYPE_CHANGED, listener: typeof rendererTypeChanged | null): this;\n  on(type: typeof Column.EVENT_GROUP_RENDERER_TYPE_CHANGED, listener: typeof groupRendererChanged | null): this;\n  on(type: typeof Column.EVENT_SUMMARY_RENDERER_TYPE_CHANGED, listener: typeof summaryRendererChanged | null): this;\n  on(type: typeof Column.EVENT_VISIBILITY_CHANGED, listener: typeof visibilityChanged | null): this;\n  on(type: string | string[], listener: IEventListener | null): this; // required for correct typings in *.d.ts\n  on(type: string | string[], listener: IEventListener | null): this {\n    return super.on(<any>type, listener);\n  }\n\n  getValue(row: IDataRow) {\n    if (this.annotations.has(row.i)) {\n      return this.annotations.get(row.i)!;\n    }\n    return super.getValue(row);\n  }\n\n  dump(toDescRef: (desc: any) => any): any {\n    const r = super.dump(toDescRef);\n    r.annotations = {};\n    this.annotations.forEach((v, k) => {\n      r.annotations[k] = v;\n    });\n    return r;\n  }\n\n  restore(dump: any, factory: ITypeFactory) {\n    super.restore(dump, factory);\n    if (!dump.annotations) {\n      return;\n    }\n    Object.keys(dump.annotations).forEach((k) => {\n      this.annotations.set(Number(k), dump.annotations[k]);\n    });\n  }\n\n  setValue(row: IDataRow, value: string) {\n    const old = this.getValue(row);\n    if (old === value) {\n      return true;\n    }\n    if (value === '' || value == null) {\n      this.annotations.delete(row.i);\n    } else {\n      this.annotations.set(row.i, value);\n    }\n    this.fire([AnnotateColumn.EVENT_VALUE_CHANGED, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY_CACHES, Column.EVENT_DIRTY], row.i, old, value);\n    return true;\n  }\n}\n","import {ICategory, ICategoricalColorMappingFunction} from '.';\nimport {DEFAULT_COLOR, ITypedDump} from './interfaces';\n\n\nexport const DEFAULT_CATEGORICAL_COLOR_FUNCTION: ICategoricalColorMappingFunction = {\n  apply: (v) => v ? v.color : DEFAULT_COLOR,\n  toJSON: () => null,\n  clone: () => DEFAULT_CATEGORICAL_COLOR_FUNCTION,\n  eq: (other) => other === DEFAULT_CATEGORICAL_COLOR_FUNCTION\n};\n\nexport class ReplacmentColorMappingFunction implements ICategoricalColorMappingFunction {\n  public readonly map: ReadonlyMap<string, string>;\n  constructor(map: Map<ICategory | string, string>) {\n    this.map = new Map(Array.from(map.entries()).map(([k, v]) => <[string, string]>[typeof k === 'string' ? k : k.name, v]));\n  }\n\n  apply(v: ICategory) {\n    return this.map.has(v.name) ? this.map.get(v.name)! : DEFAULT_CATEGORICAL_COLOR_FUNCTION.apply(v);\n  }\n\n  toJSON() {\n    const r: any = {};\n    this.map.forEach((v, k) => r[k] = v);\n    return {\n      type: 'replace',\n      map: r\n    };\n  }\n\n  clone() {\n    return new ReplacmentColorMappingFunction(new Map(this.map.entries()));\n  }\n\n  eq(other: ICategoricalColorMappingFunction): boolean {\n    if (!(other instanceof ReplacmentColorMappingFunction)) {\n      return false;\n    }\n    if (other.map.size !== this.map.size) {\n      return false;\n    }\n    return Array.from(this.map.keys()).every((k) => this.map.get(k) === other.map.get(k));\n  }\n\n  static restore(dump: any, categories: ICategory[]) {\n    if (dump.type === 'replace') { // new dump format\n      dump = dump.map;\n    }\n    const lookup = new Map(categories.map((d) => <[string, ICategory]>[d.name, d]));\n    const r = new Map<ICategory, string>();\n    for (const key of Object.keys(dump)) {\n      if (lookup.has(key)) {\n        r.set(lookup.get(key)!, dump[key]);\n      }\n    }\n    return new ReplacmentColorMappingFunction(r);\n  }\n}\n\n/**\n * @internal\n */\nexport function restoreCategoricalColorMapping(dump: ITypedDump | null | undefined, categories: ICategory[]): ICategoricalColorMappingFunction {\n  if (!dump) {\n    return DEFAULT_CATEGORICAL_COLOR_FUNCTION;\n  }\n  return ReplacmentColorMappingFunction.restore(dump, categories);\n}\n","import {ISequence, isSeqEmpty, empty} from '../internal';\nimport {FIRST_IS_MISSING, IDataRow, ECompareValueType, ICompareValue, ICategory, ICategoricalColumn, ICategoricalDesc, ICategoricalFilter} from '.';\nimport {colorPool} from './internal';\nimport {DEFAULT_COLOR} from './interfaces';\nimport {ICategoricalsColumn} from './ICategoricalColumn';\n\n/** @internal */\nexport function toCategory(cat: (string | Partial<ICategory>), value: number, nextColor: () => string = () => DEFAULT_COLOR) {\n  if (typeof cat === 'string') {\n    //just the category value\n    return {name: cat, label: cat, color: nextColor(), value};\n  }\n  const name = cat.name == null ? String(cat.value) : cat.name;\n  return {\n    name,\n    label: cat.label || name,\n    color: cat.color || nextColor(),\n    value: cat.value != null ? cat.value : value\n  };\n}\n\n\n/** @internal */\nexport function toCompareCategoryValue(v: ICategory | null) {\n  if (v == null) {\n    return NaN;\n  }\n  return v.value;\n}\n\nexport const COMPARE_CATEGORY_VALUE_TYPES = ECompareValueType.FLOAT_ASC;\n\nfunction findMostFrequent(rows: ISequence<ICategory | null>, valueCache?: ISequence<ICategory | null>): {cat: ICategory | null, count: number} {\n  const hist = new Map<ICategory | null, number>();\n\n  if (valueCache) {\n    valueCache.forEach((cat) => {\n      hist.set(cat, (hist.get(cat) || 0) + 1);\n    });\n  } else {\n    rows.forEach((cat) => {\n      hist.set(cat, (hist.get(cat) || 0) + 1);\n    });\n  }\n\n  if (hist.size === 0) {\n    return {\n      cat: null,\n      count: 0\n    };\n  }\n  let topCat: ICategory | null = null;\n  let topCount = 0;\n  hist.forEach((count, cat) => {\n    if (count > topCount) {\n      topCat = cat;\n      topCount = count;\n    }\n  });\n  return {\n    cat: topCat,\n    count: topCount\n  };\n}\n\n/** @internal */\nexport function toMostFrequentCategoricals(rows: ISequence<IDataRow>, col: ICategoricalsColumn): (ICategory | null)[] {\n  if (isSeqEmpty(rows)) {\n    return empty(col.dataLength!);\n  }\n  const maps = empty(col.dataLength!).map(() => new Map<ICategory | null, number>());\n  rows.forEach((row) => {\n    const vs = col.getCategories(row);\n    if (!vs) {\n      return;\n    }\n    for (let i = 0; i < maps.length; ++i) {\n      const hist = maps[i];\n      const cat = vs[i] || null;\n      hist.set(cat, (hist.get(cat) || 0) + 1);\n    }\n  });\n\n  return maps.map((hist) => {\n    if (hist.size === 0) {\n      return null;\n    }\n    let topCat: ICategory | null = null;\n    let topCount = 0;\n    hist.forEach((count, cat) => {\n      if (count > topCount) {\n        topCat = cat;\n        topCount = count;\n      }\n    });\n    return topCat;\n  });\n}\n\n/** @internal */\nexport function toGroupCompareCategoryValue(rows: ISequence<IDataRow>, col: ICategoricalColumn, valueCache?: ISequence<ICategory | null>): ICompareValue[] {\n  if (isSeqEmpty(rows)) {\n    return [NaN, 0];\n  }\n  const mostFrequent = findMostFrequent(rows.map((d) => col.getCategory(d)), valueCache);\n  if (mostFrequent.cat == null) {\n    return [NaN, 0];\n  }\n  return [mostFrequent.cat.value, mostFrequent.count];\n}\n\nexport const COMPARE_GROUP_CATEGORY_VALUE_TYPES = [ECompareValueType.FLOAT, ECompareValueType.COUNT];\n\n/** @internal */\nfunction compareCategory(a: ICategory | null, b: ICategory | null) {\n  const aNull = a == null || isNaN(a.value);\n  const bNull = b == null || isNaN(b.value);\n  if (aNull || a == null) {\n    return bNull ? 0 : FIRST_IS_MISSING;\n  }\n  if (bNull || b == null) {\n    return -FIRST_IS_MISSING;\n  }\n  if (a.value === b.value) {\n    return a.label.toLowerCase().localeCompare(b.label.toLowerCase());\n  }\n  return a.value - b.value;\n}\n\n/** @internal */\nexport function toCategories(desc: ICategoricalDesc) {\n  if (!desc.categories) {\n    return [];\n  }\n  const nextColor = colorPool();\n  const l = desc.categories.length - 1;\n  const cats = desc.categories.map((cat, i) => toCategory(cat, i / l, nextColor));\n  return cats.sort(compareCategory);\n}\n\n/** @internal */\nfunction isEmptyFilter(f: ICategoricalFilter | null) {\n  return f == null || (!f.filterMissing && (f.filter == null || f.filter === ''));\n}\n\n/** @internal */\nexport function isEqualCategoricalFilter(a: ICategoricalFilter | null, b: ICategoricalFilter | null) {\n  if (a === b) {\n    return true;\n  }\n  if (a == null || b == null) {\n    return isEmptyFilter(a) === isEmptyFilter(b);\n  }\n  if (a.filterMissing !== b.filterMissing || (typeof a.filter !== typeof b.filter)) {\n    return false;\n  }\n  if (Array.isArray(a.filter)) {\n    return arrayEquals(<string[]>a.filter, <string[]>b.filter);\n  }\n  return String(a.filter) === String(b.filter);\n}\n\nfunction arrayEquals<T>(a: T[], b: T[]) {\n  const al = a != null ? a.length : 0;\n  const bl = b != null ? b.length : 0;\n  if (al !== bl) {\n    return false;\n  }\n  if (al === 0) {\n    return true;\n  }\n  return a.every((ai, i) => ai === b[i]);\n}\n\n/** @internal */\nexport function isCategoryIncluded(filter: ICategoricalFilter | null, category: ICategory | null) {\n  if (filter == null) {\n    return true;\n  }\n  if (category == null || isNaN(category.value)) {\n    return !filter.filterMissing;\n  }\n  const filterObj = filter.filter;\n  if (Array.isArray(filterObj)) { //array mode\n    return filterObj.includes(category.name);\n  }\n  if (typeof filterObj === 'string' && filterObj.length > 0) { //search mode\n    return category.name.toLowerCase().includes(filterObj.toLowerCase());\n  }\n  if (filterObj instanceof RegExp) { //regex match mode\n    return filterObj.test(category.name);\n  }\n  return true;\n}\n","import {IEventListener, ISequence} from '../internal';\nimport {Category, toolbar} from './annotations';\nimport {DEFAULT_CATEGORICAL_COLOR_FUNCTION} from './CategoricalColorMappingFunction';\nimport Column, {dirty, dirtyCaches, dirtyHeader, dirtyValues, groupRendererChanged, labelChanged, metaDataChanged, rendererTypeChanged, summaryRendererChanged, visibilityChanged, widthChanged} from './Column';\nimport {ICategoricalColumn, ICategoricalColumnDesc, ICategoricalFilter, ICategory, ICategoricalColorMappingFunction} from './ICategoricalColumn';\nimport {IDataRow, IGroup, ICompareValue, DEFAULT_COLOR, ITypeFactory, ECompareValueType} from './interfaces';\nimport {missingGroup} from './missing';\nimport ValueColumn, {dataLoaded} from './ValueColumn';\nimport {toCategories, isCategoryIncluded, isEqualCategoricalFilter, toCompareCategoryValue, COMPARE_CATEGORY_VALUE_TYPES, toGroupCompareCategoryValue, COMPARE_GROUP_CATEGORY_VALUE_TYPES} from './internalCategorical';\n\n\n/**\n * emitted when the color mapping property changes\n * @asMemberOf CategoricalColumn\n * @event\n */\nexport declare function colorMappingChanged_CC(previous: ICategoricalColorMappingFunction, current: ICategoricalColorMappingFunction): void;\n\n\n/**\n * emitted when the filter property changes\n * @asMemberOf CategoricalColumn\n * @event\n */\nexport declare function filterChanged_CC(previous: ICategoricalFilter | null, current: ICategoricalFilter | null): void;\n\n/**\n * column for categorical values\n */\n@toolbar('group', 'groupBy', 'sortGroupBy', 'filterCategorical', 'colorMappedCategorical')\n@Category('categorical')\nexport default class CategoricalColumn extends ValueColumn<string> implements ICategoricalColumn {\n  static readonly EVENT_FILTER_CHANGED = 'filterChanged';\n  static readonly EVENT_COLOR_MAPPING_CHANGED = 'colorMappingChanged';\n\n  readonly categories: ICategory[];\n\n  private colorMapping: ICategoricalColorMappingFunction;\n\n  private readonly lookup = new Map<string, Readonly<ICategory>>();\n  /**\n   * set of categories to show\n   * @type {null}\n   * @private\n   */\n  private currentFilter: ICategoricalFilter | null = null;\n\n  constructor(id: string, desc: Readonly<ICategoricalColumnDesc>) {\n    super(id, desc);\n    this.categories = toCategories(desc);\n    this.categories.forEach((d) => this.lookup.set(d.name, d));\n    this.colorMapping = DEFAULT_CATEGORICAL_COLOR_FUNCTION;\n  }\n\n  protected createEventList() {\n    return super.createEventList().concat([CategoricalColumn.EVENT_FILTER_CHANGED, CategoricalColumn.EVENT_COLOR_MAPPING_CHANGED]);\n  }\n\n  on(type: typeof CategoricalColumn.EVENT_FILTER_CHANGED, listener: typeof filterChanged_CC | null): this;\n  on(type: typeof CategoricalColumn.EVENT_COLOR_MAPPING_CHANGED, listener: typeof colorMappingChanged_CC | null): this;\n  on(type: typeof ValueColumn.EVENT_DATA_LOADED, listener: typeof dataLoaded | null): this;\n  on(type: typeof Column.EVENT_WIDTH_CHANGED, listener: typeof widthChanged | null): this;\n  on(type: typeof Column.EVENT_LABEL_CHANGED, listener: typeof labelChanged | null): this;\n  on(type: typeof Column.EVENT_METADATA_CHANGED, listener: typeof metaDataChanged | null): this;\n  on(type: typeof Column.EVENT_DIRTY, listener: typeof dirty | null): this;\n  on(type: typeof Column.EVENT_DIRTY_HEADER, listener: typeof dirtyHeader | null): this;\n  on(type: typeof Column.EVENT_DIRTY_VALUES, listener: typeof dirtyValues | null): this;\n  on(type: typeof Column.EVENT_DIRTY_CACHES, listener: typeof dirtyCaches | null): this;\n  on(type: typeof Column.EVENT_RENDERER_TYPE_CHANGED, listener: typeof rendererTypeChanged | null): this;\n  on(type: typeof Column.EVENT_GROUP_RENDERER_TYPE_CHANGED, listener: typeof groupRendererChanged | null): this;\n  on(type: typeof Column.EVENT_SUMMARY_RENDERER_TYPE_CHANGED, listener: typeof summaryRendererChanged | null): this;\n  on(type: typeof Column.EVENT_VISIBILITY_CHANGED, listener: typeof visibilityChanged | null): this;\n  on(type: string | string[], listener: IEventListener | null): this; // required for correct typings in *.d.ts\n  on(type: string | string[], listener: IEventListener | null): this {\n    return super.on(<any>type, listener);\n  }\n\n  getValue(row: IDataRow) {\n    const v = this.getCategory(row);\n    return v ? v.name : null;\n  }\n\n  getCategory(row: IDataRow) {\n    const v = super.getValue(row);\n    if (!v) {\n      return null;\n    }\n    const vs = String(v);\n    return this.lookup.has(vs) ? this.lookup.get(vs)! : null;\n  }\n\n  get dataLength() {\n    return this.categories.length;\n  }\n\n  get labels() {\n    return this.categories.map((d) => d.label);\n  }\n\n  getLabel(row: IDataRow) {\n    const v = this.getCategory(row);\n    return v ? v.label : '';\n  }\n\n  getCategories(row: IDataRow) {\n    const v = this.getCategory(row);\n    return [v];\n  }\n\n  getValues(row: IDataRow) {\n    const v = this.getCategory(row);\n    return this.categories.map((d) => d === v);\n  }\n\n  getLabels(row: IDataRow) {\n    return this.getValues(row).map(String);\n  }\n\n  getMap(row: IDataRow) {\n    const cats = this.categories;\n    return this.getValues(row).map((value, i) => ({key: cats[i].label, value}));\n  }\n\n  getMapLabel(row: IDataRow) {\n    const cats = this.categories;\n    return this.getLabels(row).map((value, i) => ({key: cats[i].label, value}));\n  }\n\n  getSet(row: IDataRow) {\n    const cat = this.getCategory(row);\n    const r = new Set<ICategory>();\n    if (cat) {\n      r.add(cat);\n    }\n    return r;\n  }\n\n  iterCategory(row: IDataRow) {\n    return [this.getCategory(row)];\n  }\n\n  dump(toDescRef: (desc: any) => any): any {\n    const r = super.dump(toDescRef);\n    r.filter = this.currentFilter;\n    r.colorMapping = this.colorMapping.toJSON();\n    return r;\n  }\n\n  restore(dump: any, factory: ITypeFactory) {\n    super.restore(dump, factory);\n\n    this.colorMapping = factory.categoricalColorMappingFunction(dump.colorMapping, this.categories);\n\n    if ('filter' in dump) {\n      this.currentFilter = null;\n      return;\n    }\n    const bak = dump.filter;\n    if (typeof bak === 'string' || Array.isArray(bak)) {\n      this.currentFilter = {filter: bak, filterMissing: false};\n    } else {\n      this.currentFilter = bak;\n    }\n  }\n\n  getColor(row: IDataRow) {\n    const v = this.getCategory(row);\n    return v ? this.colorMapping.apply(v) : DEFAULT_COLOR;\n  }\n\n  getColorMapping() {\n    return this.colorMapping.clone();\n  }\n\n  setColorMapping(mapping: ICategoricalColorMappingFunction) {\n    if (this.colorMapping.eq(mapping)) {\n      return;\n    }\n    this.fire([CategoricalColumn.EVENT_COLOR_MAPPING_CHANGED, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY_CACHES, Column.EVENT_DIRTY_HEADER, Column.EVENT_DIRTY], this.colorMapping.clone(), this.colorMapping = mapping);\n  }\n\n  isFiltered() {\n    return this.currentFilter != null;\n  }\n\n  filter(row: IDataRow, valueCache?: any): boolean {\n    return isCategoryIncluded(this.currentFilter, valueCache !== undefined ? valueCache : this.getCategory(row));\n  }\n\n  getFilter() {\n    return this.currentFilter == null ? null : Object.assign({}, this.currentFilter);\n  }\n\n  setFilter(filter: ICategoricalFilter | null) {\n    if (isEqualCategoricalFilter(this.currentFilter, filter)) {\n      return;\n    }\n    this.fire([CategoricalColumn.EVENT_FILTER_CHANGED, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY], this.currentFilter, this.currentFilter = filter);\n  }\n\n  clearFilter() {\n    const was = this.isFiltered();\n    this.setFilter(null);\n    return was;\n  }\n\n  toCompareValue(row: IDataRow, valueCache?: any) {\n    return toCompareCategoryValue(valueCache !== undefined ? valueCache : this.getCategory(row));\n  }\n\n  toCompareValueType(): ECompareValueType {\n    return COMPARE_CATEGORY_VALUE_TYPES;\n  }\n\n  group(row: IDataRow, valueCache?: any): IGroup {\n    const cat = valueCache !== undefined ? valueCache : this.getCategory(row);\n    if (!cat) {\n      return Object.assign({}, missingGroup);\n    }\n    return {name: cat.label, color: cat.color};\n  }\n\n  toCompareGroupValue(rows: ISequence<IDataRow>, _group: IGroup, valueCache?: ISequence<any>): ICompareValue[] {\n    return toGroupCompareCategoryValue(rows, this, valueCache);\n  }\n\n  toCompareGroupValueType() {\n    return COMPARE_GROUP_CATEGORY_VALUE_TYPES;\n  }\n\n  getGroupRenderer() {\n    const current = super.getGroupRenderer();\n    if (current === this.desc.type && this.isGroupedBy() >= 0) {\n      // still the default and the stratification criteria\n      return 'catdistributionbar';\n    }\n    return current;\n  }\n}\n","import {Category, toolbar} from './annotations';\nimport CategoricalColumn from './CategoricalColumn';\nimport Column, {widthChanged, labelChanged, metaDataChanged, dirty, dirtyHeader, dirtyValues, rendererTypeChanged, groupRendererChanged, summaryRendererChanged, visibilityChanged, dirtyCaches} from './Column';\nimport ValueColumn, {dataLoaded} from './ValueColumn';\nimport {ICategoricalColumn, ICategory, ICategoricalColorMappingFunction} from './ICategoricalColumn';\nimport {IDataRow, ECompareValueType, IValueColumnDesc, ITypeFactory} from './interfaces';\nimport {IEventListener} from '../internal';\nimport {DEFAULT_CATEGORICAL_COLOR_FUNCTION} from './CategoricalColorMappingFunction';\n\nexport interface IBooleanDesc {\n  /**\n   * string to show for true\n   * @default ✓\n   */\n  trueMarker?: string;\n  /**\n   * strint to show for false\n   * @default (empty)\n   */\n  falseMarker?: string;\n}\n\nexport declare type IBooleanColumnDesc = IValueColumnDesc<boolean> & IBooleanDesc;\n\n/**\n * emitted when the color mapping property changes\n * @asMemberOf BooleanColumn\n * @event\n */\nexport declare function colorMappingChanged_BC(previous: ICategoricalColorMappingFunction, current: ICategoricalColorMappingFunction): void;\n\n/**\n * emitted when the filter property changes\n * @asMemberOf BooleanColumn\n * @event\n */\nexport declare function filterChanged_BC(previous: boolean | null, current: boolean | null): void;\n\n/**\n * a string column with optional alignment\n */\n@toolbar('group', 'groupBy', 'filterBoolean', 'colorMappedCategorical')\n@Category('categorical')\nexport default class BooleanColumn extends ValueColumn<boolean> implements ICategoricalColumn {\n  static readonly EVENT_FILTER_CHANGED = 'filterChanged';\n  static readonly EVENT_COLOR_MAPPING_CHANGED = 'colorMappingChanged';\n\n  static readonly GROUP_TRUE = {name: 'True', color: 'black'};\n  static readonly GROUP_FALSE = {name: 'False', color: 'white'};\n\n  private currentFilter: boolean | null = null;\n\n  private colorMapping: ICategoricalColorMappingFunction;\n  readonly categories: ICategory[];\n\n  constructor(id: string, desc: Readonly<IBooleanColumnDesc>) {\n    super(id, desc);\n    this.setWidthImpl(30);\n    this.categories = [\n      {\n        name: desc.trueMarker || '✓',\n        color: BooleanColumn.GROUP_TRUE.color,\n        label: BooleanColumn.GROUP_TRUE.name,\n        value: 0\n      },\n      {\n        name: desc.trueMarker || '',\n        color: BooleanColumn.GROUP_FALSE.color,\n        label: BooleanColumn.GROUP_FALSE.name,\n        value: 1\n      }\n    ];\n    this.colorMapping = DEFAULT_CATEGORICAL_COLOR_FUNCTION;\n  }\n\n  protected createEventList() {\n    return super.createEventList().concat([BooleanColumn.EVENT_COLOR_MAPPING_CHANGED, BooleanColumn.EVENT_FILTER_CHANGED]);\n  }\n\n  on(type: typeof BooleanColumn.EVENT_FILTER_CHANGED, listener: typeof filterChanged_BC | null): this;\n  on(type: typeof BooleanColumn.EVENT_COLOR_MAPPING_CHANGED, listener: typeof colorMappingChanged_BC | null): this;\n  on(type: typeof ValueColumn.EVENT_DATA_LOADED, listener: typeof dataLoaded | null): this;\n  on(type: typeof Column.EVENT_WIDTH_CHANGED, listener: typeof widthChanged | null): this;\n  on(type: typeof Column.EVENT_LABEL_CHANGED, listener: typeof labelChanged | null): this;\n  on(type: typeof Column.EVENT_METADATA_CHANGED, listener: typeof metaDataChanged | null): this;\n  on(type: typeof Column.EVENT_DIRTY, listener: typeof dirty | null): this;\n  on(type: typeof Column.EVENT_DIRTY_HEADER, listener: typeof dirtyHeader | null): this;\n  on(type: typeof Column.EVENT_DIRTY_VALUES, listener: typeof dirtyValues | null): this;\n  on(type: typeof Column.EVENT_DIRTY_CACHES, listener: typeof dirtyCaches | null): this;\n  on(type: typeof Column.EVENT_RENDERER_TYPE_CHANGED, listener: typeof rendererTypeChanged | null): this;\n  on(type: typeof Column.EVENT_GROUP_RENDERER_TYPE_CHANGED, listener: typeof groupRendererChanged | null): this;\n  on(type: typeof Column.EVENT_SUMMARY_RENDERER_TYPE_CHANGED, listener: typeof summaryRendererChanged | null): this;\n  on(type: typeof Column.EVENT_VISIBILITY_CHANGED, listener: typeof visibilityChanged | null): this;\n  on(type: string | string[], listener: IEventListener | null): this; // required for correct typings in *.d.ts\n  on(type: string | string[], listener: IEventListener | null): this {\n    return super.on(<any>type, listener);\n  }\n\n\n  get dataLength() {\n    return this.categories.length;\n  }\n\n  get labels() {\n    return this.categories.map((d) => d.label);\n  }\n\n  getValue(row: IDataRow) {\n    const v: any = super.getValue(row);\n    if (typeof (v) === 'undefined' || v == null) {\n      return false;\n    }\n    return v === true || v === 'true' || v === 'yes' || v === 'x';\n  }\n\n  getCategory(row: IDataRow) {\n    const v = this.getValue(row);\n    return this.categories[v ? 0 : 1];\n  }\n\n  getCategories(row: IDataRow) {\n    return [this.getCategory(row)];\n  }\n\n  iterCategory(row: IDataRow) {\n    return [this.getCategory(row)];\n  }\n\n  getColor(row: IDataRow) {\n    return CategoricalColumn.prototype.getColor.call(this, row);\n  }\n\n  getLabel(row: IDataRow) {\n    return CategoricalColumn.prototype.getLabel.call(this, row);\n  }\n\n  getLabels(row: IDataRow) {\n    return CategoricalColumn.prototype.getLabels.call(this, row);\n  }\n\n  getValues(row: IDataRow) {\n    return CategoricalColumn.prototype.getValues.call(this, row);\n  }\n\n  getMap(row: IDataRow) {\n    return CategoricalColumn.prototype.getMap.call(this, row);\n  }\n\n  getMapLabel(row: IDataRow) {\n    return CategoricalColumn.prototype.getMapLabel.call(this, row);\n  }\n\n  getSet(row: IDataRow) {\n    const v = this.getValue(row);\n    const r = new Set<ICategory>();\n    r.add(this.categories[v ? 0 : 1]);\n    return r;\n  }\n\n  dump(toDescRef: (desc: any) => any): any {\n    const r = super.dump(toDescRef);\n    r.colorMapping = this.colorMapping.toJSON();\n    if (this.currentFilter != null) {\n      r.filter = this.currentFilter;\n    }\n    return r;\n  }\n\n  restore(dump: any, factory: ITypeFactory) {\n    super.restore(dump, factory);\n    this.colorMapping = factory.categoricalColorMappingFunction(dump.colorMapping, this.categories);\n    if (typeof dump.filter !== 'undefined') {\n      this.currentFilter = dump.filter;\n    }\n  }\n\n  getColorMapping() {\n    return this.colorMapping.clone();\n  }\n\n  setColorMapping(mapping: ICategoricalColorMappingFunction) {\n    if (this.colorMapping.eq(mapping)) {\n      return;\n    }\n    this.fire([CategoricalColumn.EVENT_COLOR_MAPPING_CHANGED, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY_CACHES, Column.EVENT_DIRTY_HEADER, Column.EVENT_DIRTY], this.colorMapping.clone(), this.colorMapping = mapping);\n  }\n\n  isFiltered() {\n    return this.currentFilter != null;\n  }\n\n  filter(row: IDataRow) {\n    if (!this.isFiltered()) {\n      return true;\n    }\n    const r = this.getValue(row);\n    return r === this.currentFilter;\n  }\n\n  getFilter() {\n    return this.currentFilter;\n  }\n\n  setFilter(filter: boolean | null) {\n    if (this.currentFilter === filter) {\n      return;\n    }\n    this.fire([BooleanColumn.EVENT_FILTER_CHANGED, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY], this.currentFilter, this.currentFilter = filter);\n  }\n\n  clearFilter() {\n    const was = this.isFiltered();\n    this.setFilter(null);\n    return was;\n  }\n\n  toCompareValue(row: IDataRow) {\n    const v = this.getValue(row);\n    if (v == null) {\n      return NaN;\n    }\n    return v ? 1 : 0;\n  }\n\n  toCompareValueType(): ECompareValueType {\n    return ECompareValueType.BINARY;\n  }\n\n  group(row: IDataRow) {\n    const enabled = this.getValue(row);\n    return Object.assign({}, enabled ? BooleanColumn.GROUP_TRUE : BooleanColumn.GROUP_FALSE);\n  }\n}\n","import {Category} from './annotations';\nimport ValueColumn from './ValueColumn';\nimport {empty} from '../internal';\nimport {IArrayColumn, IArrayDesc} from './IArrayColumn';\nimport {IDataRow, IValueColumnDesc} from './interfaces';\n\n\nexport interface IArrayColumnDesc<T> extends IArrayDesc, IValueColumnDesc<T[]> {\n  // dummy\n}\n\n\n@Category('array')\nexport default class ArrayColumn<T> extends ValueColumn<T[]> implements IArrayColumn<T> {\n  private readonly _dataLength: number | null;\n\n  private readonly originalLabels: string[];\n\n  constructor(id: string, desc: Readonly<IArrayColumnDesc<T>>) {\n    super(id, desc);\n    this._dataLength = desc.dataLength == null || isNaN(desc.dataLength) ? null : desc.dataLength;\n    this.originalLabels = desc.labels || (empty(this._dataLength == null ? 0 : this._dataLength).map((_d, i) => `Column ${i}`));\n  }\n\n\n  get labels() {\n    return this.originalLabels;\n  }\n\n  get dataLength() {\n    return this._dataLength;\n  }\n\n  getValue(row: IDataRow) {\n    const r = this.getValues(row);\n    return r.every((d) => d === null) ? null : r;\n  }\n\n  getValues(row: IDataRow) {\n    const r = super.getValue(row);\n    return r == null ? [] : r;\n  }\n\n  getLabels(row: IDataRow) {\n    return this.getValues(row).map(String);\n  }\n\n  getLabel(row: IDataRow): string {\n    const v = this.getLabels(row);\n    if (v.length === 0) {\n      return '';\n    }\n    return v.toString();\n  }\n\n  getMap(row: IDataRow) {\n    const labels = this.labels;\n    return this.getValues(row).map((value, i) => ({key: labels[i], value}));\n  }\n\n  getMapLabel(row: IDataRow) {\n    const labels = this.labels;\n    return this.getLabels(row).map((value, i) => ({key: labels[i], value}));\n  }\n}\n\n","import ArrayColumn, {IArrayColumnDesc} from './ArrayColumn';\nimport {ISetColumn, ICategoricalColorMappingFunction} from './ICategoricalColumn';\nimport {IDataRow, DEFAULT_COLOR, ITypeFactory, ECompareValueType} from './interfaces';\nimport CategoricalColumn from './CategoricalColumn';\nimport {DEFAULT_CATEGORICAL_COLOR_FUNCTION} from './CategoricalColorMappingFunction';\nimport ValueColumn, {dataLoaded} from './ValueColumn';\nimport Column, {labelChanged, metaDataChanged, dirty, dirtyHeader, dirtyValues, rendererTypeChanged, groupRendererChanged, summaryRendererChanged, visibilityChanged, widthChanged, dirtyCaches} from './Column';\nimport {IEventListener} from '../internal';\nimport {chooseUIntByDataLength} from './internal';\nimport {toCategory} from './internalCategorical';\n\n\nexport declare type IBooleansColumnDesc = IArrayColumnDesc<boolean>;\n\n/**\n * emitted when the color mapping property changes\n * @asMemberOf BooleansColumn\n * @event\n */\nexport declare function colorMappingChanged_BCS(previous: ICategoricalColorMappingFunction, current: ICategoricalColorMappingFunction): void;\n\n\nexport default class BooleansColumn extends ArrayColumn<boolean> implements ISetColumn {\n  static readonly EVENT_COLOR_MAPPING_CHANGED = CategoricalColumn.EVENT_COLOR_MAPPING_CHANGED;\n\n  private colorMapping: ICategoricalColorMappingFunction;\n\n  constructor(id: string, desc: Readonly<IBooleansColumnDesc>) {\n    super(id, desc);\n    this.setDefaultRenderer('upset');\n    this.colorMapping = DEFAULT_CATEGORICAL_COLOR_FUNCTION;\n  }\n\n  get categories() {\n    return this.labels.map((d, i) => toCategory(d, i));\n  }\n\n  getSet(row: IDataRow) {\n    const vs = this.getValues(row);\n    return new Set(this.categories.filter((_, i) => vs[i]));\n  }\n\n  toCompareValue(row: IDataRow) {\n    const v = this.getValue(row);\n    if (v == null) {\n      return NaN;\n    }\n    return v.reduce((a, b) => a + (b ? 1 : 0), 0);\n  }\n\n  toCompareValueType(): ECompareValueType {\n    return chooseUIntByDataLength(this.dataLength);\n  }\n\n  getCategories(row: IDataRow) {\n    const categories = this.categories;\n    return super.getValues(row).map((v, i) => {\n      return v ? categories[i]! : null;\n    });\n  }\n\n  iterCategory(row: IDataRow) {\n    return this.getCategories(row);\n  }\n\n  getColors(row: IDataRow) {\n    return this.getCategories(row).map((d) => d ? this.colorMapping.apply(d) : DEFAULT_COLOR);\n  }\n\n\n  protected createEventList() {\n    return super.createEventList().concat([BooleansColumn.EVENT_COLOR_MAPPING_CHANGED]);\n  }\n\n  on(type: typeof BooleansColumn.EVENT_COLOR_MAPPING_CHANGED, listener: typeof colorMappingChanged_BCS | null): this;\n  on(type: typeof ValueColumn.EVENT_DATA_LOADED, listener: typeof dataLoaded | null): this;\n  on(type: typeof Column.EVENT_WIDTH_CHANGED, listener: typeof widthChanged | null): this;\n  on(type: typeof Column.EVENT_LABEL_CHANGED, listener: typeof labelChanged | null): this;\n  on(type: typeof Column.EVENT_METADATA_CHANGED, listener: typeof metaDataChanged | null): this;\n  on(type: typeof Column.EVENT_DIRTY, listener: typeof dirty | null): this;\n  on(type: typeof Column.EVENT_DIRTY_HEADER, listener: typeof dirtyHeader | null): this;\n  on(type: typeof Column.EVENT_DIRTY_VALUES, listener: typeof dirtyValues | null): this;\n  on(type: typeof Column.EVENT_DIRTY_CACHES, listener: typeof dirtyCaches | null): this;\n  on(type: typeof Column.EVENT_RENDERER_TYPE_CHANGED, listener: typeof rendererTypeChanged | null): this;\n  on(type: typeof Column.EVENT_GROUP_RENDERER_TYPE_CHANGED, listener: typeof groupRendererChanged | null): this;\n  on(type: typeof Column.EVENT_SUMMARY_RENDERER_TYPE_CHANGED, listener: typeof summaryRendererChanged | null): this;\n  on(type: typeof Column.EVENT_VISIBILITY_CHANGED, listener: typeof visibilityChanged | null): this;\n  on(type: string | string[], listener: IEventListener | null): this; // required for correct typings in *.d.ts\n  on(type: string | string[], listener: IEventListener | null): this {\n    return super.on(<any>type, listener);\n  }\n\n  getColorMapping() {\n    return this.colorMapping.clone();\n  }\n\n  setColorMapping(mapping: ICategoricalColorMappingFunction) {\n    return CategoricalColumn.prototype.setColorMapping.call(this, mapping);\n  }\n\n  dump(toDescRef: (desc: any) => any): any {\n    const r = super.dump(toDescRef);\n    r.colorMapping = this.colorMapping.toJSON();\n    return r;\n  }\n\n  restore(dump: any, factory: ITypeFactory) {\n    super.restore(dump, factory);\n    this.colorMapping = factory.categoricalColorMappingFunction(dump.colorMapping, this.categories);\n  }\n}\n","// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nexport default function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport default function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n}\n","// [[fill]align][sign][symbol][0][width][,][.precision][~][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?(~)?([a-z%])?$/i;\n\nexport default function formatSpecifier(specifier) {\n  return new FormatSpecifier(specifier);\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n  var match;\n  this.fill = match[1] || \" \";\n  this.align = match[2] || \">\";\n  this.sign = match[3] || \"-\";\n  this.symbol = match[4] || \"\";\n  this.zero = !!match[5];\n  this.width = match[6] && +match[6];\n  this.comma = !!match[7];\n  this.precision = match[8] && +match[8].slice(1);\n  this.trim = !!match[9];\n  this.type = match[10] || \"\";\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + (this.trim ? \"~\" : \"\")\n      + this.type;\n};\n","// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.\nexport default function(s) {\n  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (s[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      default: if (i0 > 0) { if (!+s[i]) break out; i0 = 0; } break;\n    }\n  }\n  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport var prefixExponent;\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n}\n","import formatLocale from \"./locale\";\n\nvar locale;\nexport var format;\nexport var formatPrefix;\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  format = locale.format;\n  formatPrefix = locale.formatPrefix;\n  return locale;\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n}\n","import formatPrefixAuto from \"./formatPrefixAuto\";\nimport formatRounded from \"./formatRounded\";\n\nexport default {\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n","export default function(x) {\n  return x;\n}\n","import exponent from \"./exponent\";\nimport formatGroup from \"./formatGroup\";\nimport formatNumerals from \"./formatNumerals\";\nimport formatSpecifier from \"./formatSpecifier\";\nimport formatTrim from \"./formatTrim\";\nimport formatTypes from \"./formatTypes\";\nimport {prefixExponent} from \"./formatPrefixAuto\";\nimport identity from \"./identity\";\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nexport default function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity,\n      currency = locale.currency,\n      decimal = locale.decimal,\n      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity,\n      percent = locale.percent || \"%\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        trim = specifier.trim,\n        type = specifier.type;\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === \"n\") comma = true, type = \"g\";\n\n    // The \"\" type, and any invalid type, is an alias for \".12~g\".\n    else if (!formatTypes[type]) precision == null && (precision = 12), trim = true, type = \"g\";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? 6\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Perform the initial formatting.\n        var valueNegative = value < 0;\n        value = formatType(Math.abs(value), precision);\n\n        // Trim insignificant zeros.\n        if (trim) value = formatTrim(value);\n\n        // If a negative value rounds to zero during formatting, treat as positive.\n        if (valueNegative && +value === 0) valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + valueSuffix + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n}\n","export default function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n}\n","export default function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n}\n","import exponent from \"./exponent\";\n\nexport default function(step) {\n  return Math.max(0, -exponent(Math.abs(step)));\n}\n","export default function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import ascending from \"./ascending\";\n\nexport default function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n","import ascending from \"./ascending\";\nimport bisector from \"./bisector\";\n\nvar ascendingBisect = bisector(ascending);\nexport var bisectRight = ascendingBisect.right;\nexport var bisectLeft = ascendingBisect.left;\nexport default bisectRight;\n","var array = Array.prototype;\n\nexport var slice = array.slice;\nexport var map = array.map;\n","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nexport default function(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n","export function initRange(domain, range) {\n  switch (arguments.length) {\n    case 0: break;\n    case 1: this.range(domain); break;\n    default: this.range(range).domain(domain); break;\n  }\n  return this;\n}\n\nexport function initInterpolator(domain, interpolator) {\n  switch (arguments.length) {\n    case 0: break;\n    case 1: this.interpolator(domain); break;\n    default: this.interpolator(interpolator).domain(domain); break;\n  }\n  return this;\n}\n","import {initRange} from \"./init\";\n\nexport const implicit = Symbol(\"implicit\");\n\nexport default function ordinal() {\n  var index = new Map(),\n      domain = [],\n      range = [],\n      unknown = implicit;\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = new Map();\n    for (const value of _) {\n      const key = value + \"\";\n      if (index.has(key)) continue;\n      index.set(key, domain.push(value));\n    }\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = Array.from(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal(domain, range).unknown(unknown);\n  };\n\n  initRange.apply(scale, arguments);\n\n  return scale;\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(x) {\n  return +x;\n}\n","import {bisect} from \"d3-array\";\nimport {interpolate as interpolateValue, interpolateNumber, interpolateRound} from \"d3-interpolate\";\nimport constant from \"./constant\";\nimport number from \"./number\";\n\nvar unit = [0, 1];\n\nexport function identity(x) {\n  return x;\n}\n\nfunction normalize(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant(isNaN(b) ? NaN : 0.5);\n}\n\nfunction clamper(domain) {\n  var a = domain[0], b = domain[domain.length - 1], t;\n  if (a > b) t = a, a = b, b = t;\n  return function(x) { return Math.max(a, Math.min(b, x)); };\n}\n\n// normalize(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// interpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding range value x in [a,b].\nfunction bimap(domain, range, interpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n  if (d1 < d0) d0 = normalize(d1, d0), r0 = interpolate(r1, r0);\n  else d0 = normalize(d0, d1), r0 = interpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range, interpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = normalize(domain[i], domain[i + 1]);\n    r[i] = interpolate(range[i], range[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisect(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nexport function copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp())\n      .unknown(source.unknown());\n}\n\nexport function transformer() {\n  var domain = unit,\n      range = unit,\n      interpolate = interpolateValue,\n      transform,\n      untransform,\n      unknown,\n      clamp = identity,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return isNaN(x = +x) ? unknown : (output || (output = piecewise(domain.map(transform), range, interpolate)))(transform(clamp(x)));\n  }\n\n  scale.invert = function(y) {\n    return clamp(untransform((input || (input = piecewise(range, domain.map(transform), interpolateNumber)))(y)));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = Array.from(_, number), clamp === identity || (clamp = clamper(domain)), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = Array.from(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = Array.from(_), interpolate = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = _ ? clamper(domain) : identity, scale) : clamp !== identity;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, rescale()) : interpolate;\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  return function(t, u) {\n    transform = t, untransform = u;\n    return rescale();\n  };\n}\n\nexport default function continuous(transform, untransform) {\n  return transformer()(transform, untransform);\n}\n","import {tickStep} from \"d3-array\";\nimport {format, formatPrefix, formatSpecifier, precisionFixed, precisionPrefix, precisionRound} from \"d3-format\";\n\nexport default function(start, stop, count, specifier) {\n  var step = tickStep(start, stop, count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return format(specifier);\n}\n","import exponent from \"./exponent\";\n\nexport default function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n}\n","import exponent from \"./exponent\";\n\nexport default function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent(max) - exponent(step)) + 1;\n}\n","import {ticks, tickIncrement} from \"d3-array\";\nimport continuous, {copy, identity} from \"./continuous\";\nimport {initRange} from \"./init\";\nimport tickFormat from \"./tickFormat\";\n\nexport function linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    var d = domain();\n    return tickFormat(d[0], d[d.length - 1], count == null ? 10 : count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain(),\n        i0 = 0,\n        i1 = d.length - 1,\n        start = d[i0],\n        stop = d[i1],\n        step;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n\n    step = tickIncrement(start, stop, count);\n\n    if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n      step = tickIncrement(start, stop, count);\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n      step = tickIncrement(start, stop, count);\n    }\n\n    if (step > 0) {\n      d[i0] = Math.floor(start / step) * step;\n      d[i1] = Math.ceil(stop / step) * step;\n      domain(d);\n    } else if (step < 0) {\n      d[i0] = Math.ceil(start * step) / step;\n      d[i1] = Math.floor(stop * step) / step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nexport default function linear() {\n  var scale = continuous(identity, identity);\n\n  scale.copy = function() {\n    return copy(scale, linear());\n  };\n\n  initRange.apply(scale, arguments);\n\n  return linearish(scale);\n}\n","export default function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n}\n","import {ticks} from \"d3-array\";\nimport {format} from \"d3-format\";\nimport nice from \"./nice\";\nimport {copy, transformer} from \"./continuous\";\nimport {initRange} from \"./init\";\n\nfunction transformLog(x) {\n  return Math.log(x);\n}\n\nfunction transformExp(x) {\n  return Math.exp(x);\n}\n\nfunction transformLogn(x) {\n  return -Math.log(-x);\n}\n\nfunction transformExpn(x) {\n  return -Math.exp(-x);\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nexport function loggish(transform) {\n  var scale = transform(transformLog, transformExp),\n      domain = scale.domain,\n      base = 10,\n      logs,\n      pows;\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) {\n      logs = reflect(logs), pows = reflect(pows);\n      transform(transformLogn, transformExpn);\n    } else {\n      transform(transformLog, transformExp);\n    }\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  return scale;\n}\n\nexport default function log() {\n  var scale = loggish(transformer()).domain([1, 10]);\n\n  scale.copy = function() {\n    return copy(scale, log()).base(scale.base());\n  };\n\n  initRange.apply(scale, arguments);\n\n  return scale;\n}\n","import {linearish} from \"./linear\";\nimport {copy, identity, transformer} from \"./continuous\";\nimport {initRange} from \"./init\";\n\nfunction transformPow(exponent) {\n  return function(x) {\n    return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n  };\n}\n\nfunction transformSqrt(x) {\n  return x < 0 ? -Math.sqrt(-x) : Math.sqrt(x);\n}\n\nfunction transformSquare(x) {\n  return x < 0 ? -x * x : x * x;\n}\n\nexport function powish(transform) {\n  var scale = transform(identity, identity),\n      exponent = 1;\n\n  function rescale() {\n    return exponent === 1 ? transform(identity, identity)\n        : exponent === 0.5 ? transform(transformSqrt, transformSquare)\n        : transform(transformPow(exponent), transformPow(1 / exponent));\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, rescale()) : exponent;\n  };\n\n  return linearish(scale);\n}\n\nexport default function pow() {\n  var scale = powish(transformer());\n\n  scale.copy = function() {\n    return copy(scale, pow()).exponent(scale.exponent());\n  };\n\n  initRange.apply(scale, arguments);\n\n  return scale;\n}\n\nexport function sqrt() {\n  return pow.apply(null, arguments).exponent(0.5);\n}\n","var t0 = new Date,\n    t1 = new Date;\n\nexport default function newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [], previous;\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n    while (previous < start && start < stop);\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n","import interval from \"./interval\";\n\nvar millisecond = interval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return interval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nexport default millisecond;\nexport var milliseconds = millisecond.range;\n","export var durationSecond = 1e3;\nexport var durationMinute = 6e4;\nexport var durationHour = 36e5;\nexport var durationDay = 864e5;\nexport var durationWeek = 6048e5;\n","import interval from \"./interval\";\nimport {durationSecond} from \"./duration\";\n\nvar second = interval(function(date) {\n  date.setTime(date - date.getMilliseconds());\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond);\n}, function(start, end) {\n  return (end - start) / durationSecond;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nexport default second;\nexport var seconds = second.range;\n","import interval from \"./interval\";\nimport {durationMinute, durationSecond} from \"./duration\";\n\nvar minute = interval(function(date) {\n  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getMinutes();\n});\n\nexport default minute;\nexport var minutes = minute.range;\n","import interval from \"./interval\";\nimport {durationHour, durationMinute, durationSecond} from \"./duration\";\n\nvar hour = interval(function(date) {\n  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond - date.getMinutes() * durationMinute);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getHours();\n});\n\nexport default hour;\nexport var hours = hour.range;\n","import interval from \"./interval\";\nimport {durationDay, durationMinute} from \"./duration\";\n\nvar day = interval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nexport default day;\nexport var days = day.range;\n","import interval from \"./interval\";\nimport {durationMinute, durationWeek} from \"./duration\";\n\nfunction weekday(i) {\n  return interval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nexport var sunday = weekday(0);\nexport var monday = weekday(1);\nexport var tuesday = weekday(2);\nexport var wednesday = weekday(3);\nexport var thursday = weekday(4);\nexport var friday = weekday(5);\nexport var saturday = weekday(6);\n\nexport var sundays = sunday.range;\nexport var mondays = monday.range;\nexport var tuesdays = tuesday.range;\nexport var wednesdays = wednesday.range;\nexport var thursdays = thursday.range;\nexport var fridays = friday.range;\nexport var saturdays = saturday.range;\n","import interval from \"./interval\";\n\nvar month = interval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nexport default month;\nexport var months = month.range;\n","import interval from \"./interval\";\n\nvar year = interval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nexport default year;\nexport var years = year.range;\n","import interval from \"./interval\";\nimport {durationMinute} from \"./duration\";\n\nvar utcMinute = interval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nexport default utcMinute;\nexport var utcMinutes = utcMinute.range;\n","import interval from \"./interval\";\nimport {durationHour} from \"./duration\";\n\nvar utcHour = interval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nexport default utcHour;\nexport var utcHours = utcHour.range;\n","import interval from \"./interval\";\nimport {durationDay} from \"./duration\";\n\nvar utcDay = interval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nexport default utcDay;\nexport var utcDays = utcDay.range;\n","import interval from \"./interval\";\nimport {durationWeek} from \"./duration\";\n\nfunction utcWeekday(i) {\n  return interval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek;\n  });\n}\n\nexport var utcSunday = utcWeekday(0);\nexport var utcMonday = utcWeekday(1);\nexport var utcTuesday = utcWeekday(2);\nexport var utcWednesday = utcWeekday(3);\nexport var utcThursday = utcWeekday(4);\nexport var utcFriday = utcWeekday(5);\nexport var utcSaturday = utcWeekday(6);\n\nexport var utcSundays = utcSunday.range;\nexport var utcMondays = utcMonday.range;\nexport var utcTuesdays = utcTuesday.range;\nexport var utcWednesdays = utcWednesday.range;\nexport var utcThursdays = utcThursday.range;\nexport var utcFridays = utcFriday.range;\nexport var utcSaturdays = utcSaturday.range;\n","import interval from \"./interval\";\n\nvar utcMonth = interval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nexport default utcMonth;\nexport var utcMonths = utcMonth.range;\n","import interval from \"./interval\";\n\nvar utcYear = interval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nexport default utcYear;\nexport var utcYears = utcYear.range;\n","import {\n  timeDay,\n  timeSunday,\n  timeMonday,\n  timeThursday,\n  timeYear,\n  utcDay,\n  utcSunday,\n  utcMonday,\n  utcThursday,\n  utcYear\n} from \"d3-time\";\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nexport default function formatLocale(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"f\": formatMicroseconds,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatSeconds,\n    \"u\": formatWeekdayNumberMonday,\n    \"U\": formatWeekNumberSunday,\n    \"V\": formatWeekNumberISO,\n    \"w\": formatWeekdayNumberSunday,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"f\": formatUTCMicroseconds,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatUTCSeconds,\n    \"u\": formatUTCWeekdayNumberMonday,\n    \"U\": formatUTCWeekNumberSunday,\n    \"V\": formatUTCWeekNumberISO,\n    \"w\": formatUTCWeekdayNumberSunday,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"f\": parseMicroseconds,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"Q\": parseUnixTimestamp,\n    \"s\": parseUnixTimestampSeconds,\n    \"S\": parseSeconds,\n    \"u\": parseWeekdayNumberMonday,\n    \"U\": parseWeekNumberSunday,\n    \"V\": parseWeekNumberISO,\n    \"w\": parseWeekdayNumberSunday,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0),\n          week, day;\n      if (i != string.length) return null;\n\n      // If a UNIX timestamp is specified, return it.\n      if (\"Q\" in d) return new Date(d.Q);\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"V\" in d) {\n        if (d.V < 1 || d.V > 53) return null;\n        if (!(\"w\" in d)) d.w = 1;\n        if (\"Z\" in d) {\n          week = utcDate(newYear(d.y)), day = week.getUTCDay();\n          week = day > 4 || day === 0 ? utcMonday.ceil(week) : utcMonday(week);\n          week = utcDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getUTCFullYear();\n          d.m = week.getUTCMonth();\n          d.d = week.getUTCDate() + (d.w + 6) % 7;\n        } else {\n          week = newDate(newYear(d.y)), day = week.getDay();\n          week = day > 4 || day === 0 ? timeMonday.ceil(week) : timeMonday(week);\n          week = timeDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getFullYear();\n          d.m = week.getMonth();\n          d.d = week.getDate() + (d.w + 6) % 7;\n        }\n      } else if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"u\" in d ? d.u % 7 : \"W\" in d ? 1 : 0;\n        day = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"},\n    numberRe = /^\\s*\\d+/, // note: ignores next directive\n    percentRe = /^%/,\n    requoteRe = /[\\\\^$*+?|[\\]().{}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekdayNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.u = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberISO(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.V = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?::?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMicroseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 6));\n  return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction parseUnixTimestamp(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseUnixTimestampSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = (+n[0]) * 1000, i + n[0].length) : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + timeDay.count(timeYear(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMicroseconds(d, p) {\n  return formatMilliseconds(d, p) + \"000\";\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekdayNumberMonday(d) {\n  var day = d.getDay();\n  return day === 0 ? 7 : day;\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(timeSunday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatWeekNumberISO(d, p) {\n  var day = d.getDay();\n  d = (day >= 4 || day === 0) ? timeThursday(d) : timeThursday.ceil(d);\n  return pad(timeThursday.count(timeYear(d), d) + (timeYear(d).getDay() === 4), p, 2);\n}\n\nfunction formatWeekdayNumberSunday(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(timeMonday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMicroseconds(d, p) {\n  return formatUTCMilliseconds(d, p) + \"000\";\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekdayNumberMonday(d) {\n  var dow = d.getUTCDay();\n  return dow === 0 ? 7 : dow;\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekNumberISO(d, p) {\n  var day = d.getUTCDay();\n  d = (day >= 4 || day === 0) ? utcThursday(d) : utcThursday.ceil(d);\n  return pad(utcThursday.count(utcYear(d), d) + (utcYear(d).getUTCDay() === 4), p, 2);\n}\n\nfunction formatUTCWeekdayNumberSunday(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nfunction formatUnixTimestamp(d) {\n  return +d;\n}\n\nfunction formatUnixTimestampSeconds(d) {\n  return Math.floor(+d / 1000);\n}\n","import formatLocale from \"./locale\";\n\nvar locale;\nexport var timeFormat;\nexport var timeParse;\nexport var utcFormat;\nexport var utcParse;\n\ndefaultLocale({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  timeFormat = locale.format;\n  timeParse = locale.parse;\n  utcFormat = locale.utcFormat;\n  utcParse = locale.utcParse;\n  return locale;\n}\n","import {utcFormat} from \"./defaultLocale\";\n\nexport var isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : utcFormat(isoSpecifier);\n\nexport default formatIso;\n","import {isoSpecifier} from \"./isoFormat\";\nimport {utcParse} from \"./defaultLocale\";\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : utcParse(isoSpecifier);\n\nexport default parseIso;\n","import {scaleLinear, scaleLog, scalePow, scaleSqrt} from 'd3-scale';\nimport {similar} from '../internal';\nimport {IMappingFunction, IMapAbleDesc} from '.';\nimport {ITypeFactory, ITypedDump} from './interfaces';\nimport {IMappingFunctionConstructor} from './INumberColumn';\n\n/**\n * interface of a d3 scale\n */\nexport interface IScale {\n  (v: number): number;\n\n  invert(r: number): number;\n\n  domain(): number[];\n\n  domain(domain: number[]): this;\n\n  range(): number[];\n\n  range(range: number[]): this;\n}\n\nfunction toScale(type = 'linear'): IScale {\n  switch (type) {\n    case 'log':\n      return scaleLog().clamp(true);\n    case 'sqrt':\n      return scaleSqrt().clamp(true);\n    case 'pow1.1':\n      return scalePow().exponent(1.1).clamp(true);\n    case 'pow2':\n      return scalePow().exponent(2).clamp(true);\n    case 'pow3':\n      return scalePow().exponent(3).clamp(true);\n    default:\n      return scaleLinear().clamp(true);\n  }\n}\n\nfunction isSame(a: number[], b: number[]) {\n  if (a.length !== b.length) {\n    return false;\n  }\n  return a.every((ai, i) => similar(ai, b[i], 0.0001));\n}\n\n\nfunction fixDomain(domain: number[], type: string) {\n  if (type === 'log' && domain[0] === 0) {\n    domain[0] = 0.0000001; //0 is bad\n  }\n  return domain;\n}\n\n/**\n * a mapping function based on a d3 scale (linear, sqrt, log)\n */\nexport class ScaleMappingFunction implements IMappingFunction {\n  private s: IScale;\n  private readonly type: string;\n\n  constructor();\n  constructor(dump: ITypedDump);\n  constructor(domain: number[], type: string, range: number[]);\n  constructor(domain: ITypedDump|number[] = [0, 1], type = 'linear', range: number[] = [0, 1]) {\n    if (!domain || Array.isArray(domain)) {\n      this.type = type;\n      this.s = toScale(type).domain(fixDomain(domain || [0, 1], this.type)).range(range);\n    } else {\n      const dump = domain;\n      this.type = dump.type;\n      this.s = toScale(dump.type).domain(dump.domain).range(dump.range);\n    }\n  }\n\n  get domain() {\n    return this.s.domain();\n  }\n\n  set domain(domain: number[]) {\n    this.s.domain(fixDomain(domain, this.type));\n  }\n\n  get range() {\n    return this.s.range();\n  }\n\n  set range(range: number[]) {\n    this.s.range(range);\n  }\n\n  getRange(format: (v: number) => string): [string, string] {\n    return [format(this.invert(0)), format(this.invert(1))];\n  }\n\n  apply(v: number): number {\n    return this.s(v);\n  }\n\n  invert(r: number) {\n    return this.s.invert(r);\n  }\n\n  get scaleType() {\n    return this.type;\n  }\n\n  toJSON() {\n    return {\n      type: this.type,\n      domain: this.domain,\n      range: this.range\n    };\n  }\n\n  eq(other: IMappingFunction): boolean {\n    if (!(other instanceof ScaleMappingFunction)) {\n      return false;\n    }\n    const that = <ScaleMappingFunction>other;\n    return that.type === this.type && isSame(this.domain, that.domain) && isSame(this.range, that.range);\n  }\n\n  clone() {\n    return new ScaleMappingFunction(this.domain, this.type, this.range);\n  }\n}\n\nexport interface IScriptMappingFunctionContext {\n  value_min: number;\n  value_max: number;\n  value_range: number;\n  value_domain: number[];\n  linear(v: number, min: number, max: number): number;\n}\n\nexport interface IScriptMappingFunctionType {\n  (this: IScriptMappingFunctionContext, value: number): number;\n}\n\n/**\n * a mapping function based on a custom user function using 'value' as the current value\n */\nexport class ScriptMappingFunction implements IMappingFunction {\n  private readonly f: IScriptMappingFunctionType;\n  public domain: number[];\n  public readonly code: string;\n\n  constructor();\n  constructor(dump: ITypedDump);\n  constructor(domain: number[], code?: string | IScriptMappingFunctionType);\n  constructor(domain: ITypedDump | number[] = [0, 1], code: string | IScriptMappingFunctionType = 'return this.linear(value,this.value_min,this.value_max);') {\n    if (!domain || Array.isArray(domain)) {\n      this.domain = domain || [0, 1];\n    } else {\n      const dump = domain;\n      this.domain = dump.domain;\n      code = dump.code;\n    }\n    this.code = typeof code === 'string' ? code : code.toString();\n    this.f = typeof code === 'function' ? code : <any>(new Function('value', code));\n  }\n\n  getRange(): [string, string] {\n    return ['?', '?'];\n  }\n\n  apply(v: number): number {\n    const min = this.domain[0],\n      max = this.domain[this.domain.length - 1];\n    const r = this.f.call({\n      value_min: min,\n      value_max: max,\n      value_range: max - min,\n      value_domain: this.domain.slice(),\n      linear: (v: number, mi: number, ma: number) => (v - mi) / (ma - mi)\n    }, v);\n\n    if (typeof r === 'number') {\n      return Math.max(Math.min(r, 1), 0);\n    }\n    return NaN;\n  }\n\n  toJSON() {\n    return {\n      type: 'script',\n      code: this.code,\n      domain: this.domain\n    };\n  }\n\n  eq(other: IMappingFunction): boolean {\n    if (!(other instanceof ScriptMappingFunction)) {\n      return false;\n    }\n    const that = <ScriptMappingFunction>other;\n    return that.code === this.code || that.f === this.f;\n  }\n\n  clone() {\n    return new ScriptMappingFunction(this.domain, this.f);\n  }\n}\n\n/**\n * @internal\n */\nexport function createMappingFunction(types: {[key: string]: IMappingFunctionConstructor}) {\n  return (dump: ITypedDump | IScriptMappingFunctionType): IMappingFunction => {\n    if (typeof dump === 'function') {\n      return new ScriptMappingFunction([0, 1], dump);\n    }\n    if (!dump || !dump.type) {\n      return new ScaleMappingFunction();\n    }\n    const type = types[dump.type];\n    if (!type) {\n      console.warn('invalid mapping type dump', dump);\n      return new ScaleMappingFunction(dump.domain || [0, 1], 'linear', dump.range || [0, 1]);\n    }\n    return new type(dump);\n  };\n}\n\n/** @internal */\nexport function restoreMapping(desc: IMapAbleDesc, factory: ITypeFactory): IMappingFunction {\n  if (desc.map) {\n    return factory.mappingFunction(desc.map);\n  }\n  return new ScaleMappingFunction(desc.domain || [0, 1], 'linear', desc.range || [0, 1]);\n}\n\n\nexport function mappingFunctions() {\n  return {\n    script: ScriptMappingFunction,\n    linear: ScaleMappingFunction,\n    log: ScaleMappingFunction,\n    'pow1.1': ScaleMappingFunction,\n    pow2: ScaleMappingFunction,\n    pow3: ScaleMappingFunction\n  };\n}\n","import {format} from 'd3-format';\nimport {IBoxPlotData, similar, ISequence, IAdvancedBoxPlotData, boxplotBuilder} from '../internal';\nimport {FIRST_IS_NAN, IDataRow, IBoxPlotColumn, INumberFilter, INumberColumn} from '.';\n\n\n/** @internal */\nexport const DEFAULT_FORMATTER = format('.3n');\n\n/** @internal */\nexport function compareBoxPlot(col: IBoxPlotColumn, a: IDataRow, b: IDataRow) {\n  const aVal = col.getBoxPlotData(a);\n  const bVal = col.getBoxPlotData(b);\n  const method = <keyof IBoxPlotData>col.getSortMethod();\n  if (aVal == null) {\n    return bVal == null ? 0 : FIRST_IS_NAN;\n  }\n  if (bVal == null) {\n    return FIRST_IS_NAN * -1;\n  }\n  return numberCompare(<number>aVal[method], <number>bVal[method]);\n}\n\nexport function toCompareBoxPlotValue(col: IBoxPlotColumn, row: IDataRow) {\n  const v = col.getBoxPlotData(row);\n  const method = <keyof IBoxPlotData>col.getSortMethod();\n  return v == null ? NaN : <number>v[method];\n}\n\nexport function getBoxPlotNumber(col: IBoxPlotColumn, row: IDataRow, mode: 'raw' | 'normalized'): number {\n  const data = mode === 'normalized' ? col.getBoxPlotData(row) : col.getRawBoxPlotData(row);\n  if (data == null) {\n    return NaN;\n  }\n  return <number>data[<keyof IBoxPlotData>col.getSortMethod()];\n}\n/**\n * save number comparison\n * @param a\n * @param b\n * @param aMissing\n * @param bMissing\n * @return {number}\n * @internal\n */\nexport function numberCompare(a: number | null, b: number | null, aMissing = false, bMissing = false) {\n  aMissing = aMissing || a == null || isNaN(a);\n  bMissing = bMissing || b == null || isNaN(b);\n  if (aMissing) { //NaN are smaller\n    return bMissing ? 0 : FIRST_IS_NAN;\n  }\n  if (bMissing) {\n    return FIRST_IS_NAN * -1;\n  }\n  return a! - b!;\n}\n\n/** @internal */\nexport function noNumberFilter() {\n  return ({min: -Infinity, max: Infinity, filterMissing: false});\n}\n\n/** @internal */\nexport function isEqualNumberFilter(a: INumberFilter, b: INumberFilter) {\n  return similar(a.min, b.min, 0.001) && similar(a.max, b.max, 0.001) && a.filterMissing === b.filterMissing;\n}\n\n/** @internal */\nexport function isNumberIncluded(filter: INumberFilter | null, value: number) {\n  if (!filter) {\n    return true;\n  }\n  if (isNaN(value)) {\n    return !filter.filterMissing;\n  }\n  return !((isFinite(filter.min) && value < filter.min) || (isFinite(filter.max) && value > filter.max));\n}\n\n/** @internal */\nexport function isDummyNumberFilter(filter: INumberFilter) {\n  return !filter.filterMissing && !isFinite(filter.min) && !isFinite(filter.max);\n}\n\n/** @internal */\nexport function restoreNumberFilter(v: INumberFilter): INumberFilter {\n  return {\n    min: v.min != null && isFinite(v.min) ? v.min : -Infinity,\n    max: v.max != null && isFinite(v.max) ? v.max : +Infinity,\n    filterMissing: v.filterMissing\n  };\n}\n\n\n/** @internal */\nexport function medianIndex(rows: ISequence<IDataRow>, col: INumberColumn) {\n  //return the median row\n  const data = rows.map((r, i) => ({r, i, v: col.getNumber(r)}));\n  const sorted = Array.from(data.filter((r) => !isNaN(r.v))).sort((a, b) => numberCompare(a.v, b.v));\n  const index = sorted[Math.floor(sorted.length / 2.0)];\n  if (index === undefined) {\n    return {index: 0, row: sorted[0]!.r}; //error case\n  }\n  return {index: index.i, row: index.r};\n}\n\n/** @internal */\nexport function toCompareGroupValue(rows: ISequence<IDataRow>, col: INumberColumn, sortMethod: keyof IAdvancedBoxPlotData, valueCache?: ISequence<number>) {\n  const b = boxplotBuilder();\n  if (valueCache) {\n    b.pushAll(valueCache);\n  } else {\n    b.pushAll(rows.map((d) => col.getNumber(d)));\n  }\n  const vs = b.build();\n  return <number>vs[sortMethod];\n}\n","import {format} from 'd3-format';\nimport {equalArrays, IEventListener, ISequence} from '../internal';\nimport {Category, dialogAddons, SortByDefault, toolbar} from './annotations';\nimport Column, {dirty, dirtyCaches, dirtyHeader, dirtyValues, groupRendererChanged, labelChanged, metaDataChanged, rendererTypeChanged, summaryRendererChanged, visibilityChanged, widthChanged} from './Column';\nimport {IDataRow, IGroup, ECompareValueType, IValueColumnDesc, DEFAULT_COLOR, ITypeFactory} from './interfaces';\nimport {INumberColumn, EAdvancedSortMethod, INumberDesc, INumberFilter, IMappingFunction, IColorMappingFunction, IMapAbleColumn} from './INumberColumn';\nimport {restoreMapping, ScaleMappingFunction} from './MappingFunction';\nimport {isMissingValue, isUnknown, missingGroup} from './missing';\nimport ValueColumn, {dataLoaded} from './ValueColumn';\nimport {noNumberFilter, isDummyNumberFilter, restoreNumberFilter, toCompareGroupValue, isEqualNumberFilter, isNumberIncluded} from './internalNumber';\n\nexport declare type INumberColumnDesc = INumberDesc & IValueColumnDesc<number>;\n\n\n/**\n * emitted when the mapping property changes\n * @asMemberOf NumberColumn\n * @event\n */\nexport declare function mappingChanged_NC(previous: IMappingFunction, current: IMappingFunction): void;\n\n/**\n * emitted when the color mapping property changes\n * @asMemberOf NumberColumn\n * @event\n */\nexport declare function colorMappingChanged_NC(previous: IColorMappingFunction, current: IColorMappingFunction): void;\n\n/**\n * emitted when the filter property changes\n * @asMemberOf NumberColumn\n * @event\n */\nexport declare function filterChanged_NC(previous: INumberFilter | null, current: INumberFilter | null): void;\n\n/**\n * emitted when the sort method property changes\n * @asMemberOf NumberColumn\n * @event\n */\nexport declare function sortMethodChanged_NC(previous: EAdvancedSortMethod, current: EAdvancedSortMethod): void;\n\n/**\n * emitted when the grouping property changes\n * @asMemberOf NumberColumn\n * @event\n */\nexport declare function groupingChanged_NC(previous: number[], current: number[]): void;\n\n/**\n * a number column mapped from an original input scale to an output range\n */\n@toolbar('groupBy', 'sortGroupBy', 'filterNumber', 'colorMapped', 'editMapping')\n@dialogAddons('sortGroup', 'sortNumber')\n@dialogAddons('group', 'groupNumber')\n@Category('number')\n@SortByDefault('descending')\nexport default class NumberColumn extends ValueColumn<number> implements INumberColumn, IMapAbleColumn {\n  static readonly EVENT_MAPPING_CHANGED = 'mappingChanged';\n  static readonly EVENT_COLOR_MAPPING_CHANGED = 'colorMappingChanged';\n  static readonly EVENT_FILTER_CHANGED = 'filterChanged';\n  static readonly EVENT_SORTMETHOD_CHANGED = 'sortMethodChanged';\n  static readonly EVENT_GROUPING_CHANGED = 'groupingChanged';\n\n  private mapping: IMappingFunction;\n  private colorMapping: IColorMappingFunction;\n  private original: IMappingFunction;\n\n  /**\n   * currently active filter\n   * @type {{min: number, max: number}}\n   * @private\n   */\n  private currentFilter: INumberFilter = noNumberFilter();\n\n  private readonly numberFormat: (n: number) => string = format('.2f');\n\n  private currentGroupThresholds: number[] = [];\n  private groupSortMethod: EAdvancedSortMethod = EAdvancedSortMethod.median;\n\n  constructor(id: string, desc: INumberColumnDesc, factory: ITypeFactory) {\n    super(id, desc);\n\n    this.mapping = restoreMapping(desc, factory);\n    this.original = this.mapping.clone();\n    this.colorMapping = factory.colorMappingFunction(desc.colorMapping || desc.color);\n\n    if (desc.numberFormat) {\n      this.numberFormat = format(desc.numberFormat);\n    }\n\n    this.setDefaultGroupRenderer('boxplot');\n    this.setDefaultSummaryRenderer('histogram');\n  }\n\n  getNumberFormat() {\n    return this.numberFormat;\n  }\n\n  dump(toDescRef: (desc: any) => any) {\n    const r = super.dump(toDescRef);\n    r.map = this.mapping.toJSON();\n    r.colorMapping = this.colorMapping.toJSON();\n    r.filter = isDummyNumberFilter(this.currentFilter) ? null : this.currentFilter;\n    r.groupSortMethod = this.groupSortMethod;\n    if (this.currentGroupThresholds) {\n      r.stratifyThreshholds = this.currentGroupThresholds;\n    }\n    return r;\n  }\n\n  restore(dump: any, factory: ITypeFactory) {\n    super.restore(dump, factory);\n    if (dump.map) {\n      this.mapping = factory.mappingFunction(dump.map);\n    } else if (dump.domain) {\n      this.mapping = new ScaleMappingFunction(dump.domain, 'linear', dump.range || [0, 1]);\n    }\n    if (dump.colorMapping) {\n      this.colorMapping = factory.colorMappingFunction(dump.colorMapping);\n    }\n    if (dump.groupSortMethod) {\n      this.groupSortMethod = dump.groupSortMethod;\n    }\n    if (dump.filter) {\n      this.currentFilter = restoreNumberFilter(dump.filter);\n    }\n    if (dump.stratifyThreshholds) {\n      this.currentGroupThresholds = dump.stratifyThresholds;\n    }\n  }\n\n  protected createEventList() {\n    return super.createEventList().concat([NumberColumn.EVENT_MAPPING_CHANGED, NumberColumn.EVENT_COLOR_MAPPING_CHANGED, NumberColumn.EVENT_FILTER_CHANGED, NumberColumn.EVENT_SORTMETHOD_CHANGED, NumberColumn.EVENT_GROUPING_CHANGED]);\n  }\n\n  on(type: typeof NumberColumn.EVENT_MAPPING_CHANGED, listener: typeof mappingChanged_NC | null): this;\n  on(type: typeof NumberColumn.EVENT_COLOR_MAPPING_CHANGED, listener: typeof colorMappingChanged_NC | null): this;\n  on(type: typeof NumberColumn.EVENT_FILTER_CHANGED, listener: typeof filterChanged_NC | null): this;\n  on(type: typeof NumberColumn.EVENT_SORTMETHOD_CHANGED, listener: typeof sortMethodChanged_NC | null): this;\n  on(type: typeof NumberColumn.EVENT_GROUPING_CHANGED, listener: typeof groupingChanged_NC | null): this;\n  on(type: typeof ValueColumn.EVENT_DATA_LOADED, listener: typeof dataLoaded | null): this;\n  on(type: typeof Column.EVENT_WIDTH_CHANGED, listener: typeof widthChanged | null): this;\n  on(type: typeof Column.EVENT_LABEL_CHANGED, listener: typeof labelChanged | null): this;\n  on(type: typeof Column.EVENT_METADATA_CHANGED, listener: typeof metaDataChanged | null): this;\n  on(type: typeof Column.EVENT_DIRTY, listener: typeof dirty | null): this;\n  on(type: typeof Column.EVENT_DIRTY_HEADER, listener: typeof dirtyHeader | null): this;\n  on(type: typeof Column.EVENT_DIRTY_VALUES, listener: typeof dirtyValues | null): this;\n  on(type: typeof Column.EVENT_DIRTY_CACHES, listener: typeof dirtyCaches | null): this;\n  on(type: typeof Column.EVENT_RENDERER_TYPE_CHANGED, listener: typeof rendererTypeChanged | null): this;\n  on(type: typeof Column.EVENT_GROUP_RENDERER_TYPE_CHANGED, listener: typeof groupRendererChanged | null): this;\n  on(type: typeof Column.EVENT_SUMMARY_RENDERER_TYPE_CHANGED, listener: typeof summaryRendererChanged | null): this;\n  on(type: typeof Column.EVENT_VISIBILITY_CHANGED, listener: typeof visibilityChanged | null): this;\n  on(type: string | string[], listener: IEventListener | null): this; // required for correct typings in *.d.ts\n  on(type: string | string[], listener: IEventListener | null): this {\n    return super.on(<any>type, listener);\n  }\n\n  getLabel(row: IDataRow) {\n    if ((<any>this.desc).numberFormat) {\n      const raw = this.getRawValue(row);\n      //if a dedicated format and a number use the formatter in any case\n      if (isNaN(raw)) {\n        return 'NaN';\n      }\n      if (!isFinite(raw)) {\n        return raw.toString();\n      }\n      return this.numberFormat(raw);\n    }\n    const v = super.getValue(row);\n    //keep non number if it is not a number else convert using formatter\n    if (typeof v === 'number') {\n      return this.numberFormat(+v);\n    }\n    return String(v);\n  }\n\n  getRange() {\n    return this.mapping.getRange(this.numberFormat);\n  }\n\n  getRawValue(row: IDataRow) {\n    const v: any = super.getValue(row);\n    if (isMissingValue(v)) {\n      return NaN;\n    }\n    return +v;\n  }\n\n  getExportValue(row: IDataRow, format: 'text' | 'json'): any {\n    return format === 'json' ? this.getRawValue(row) : super.getExportValue(row, format);\n  }\n\n  getValue(row: IDataRow) {\n    const v = this.getNumber(row);\n    if (isNaN(v)) {\n      return null;\n    }\n    return v;\n  }\n\n  getNumber(row: IDataRow) {\n    const v = this.getRawValue(row);\n    if (isNaN(v)) {\n      return NaN;\n    }\n    return this.mapping.apply(v);\n  }\n\n  iterNumber(row: IDataRow) {\n    return [this.getNumber(row)];\n  }\n\n  iterRawNumber(row: IDataRow) {\n    return [this.getRawNumber(row)];\n  }\n\n  getRawNumber(row: IDataRow) {\n    return this.getRawValue(row);\n  }\n\n  toCompareValue(row: IDataRow, valueCache?: any) {\n    return valueCache != null ? valueCache : this.getNumber(row);\n  }\n\n  toCompareValueType() {\n    return ECompareValueType.FLOAT;\n  }\n\n  toCompareGroupValue(rows: ISequence<IDataRow>, _group: IGroup, valueCache?: ISequence<any>): number {\n    return toCompareGroupValue(rows, this, <any>this.groupSortMethod, valueCache);\n  }\n\n  toCompareGroupValueType() {\n    return ECompareValueType.FLOAT;\n  }\n\n  getOriginalMapping() {\n    return this.original.clone();\n  }\n\n  getMapping() {\n    return this.mapping.clone();\n  }\n\n  setMapping(mapping: IMappingFunction) {\n    if (this.mapping.eq(mapping)) {\n      return;\n    }\n    this.fire([NumberColumn.EVENT_MAPPING_CHANGED, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY_CACHES, Column.EVENT_DIRTY_HEADER, Column.EVENT_DIRTY], this.mapping.clone(), this.mapping = mapping);\n  }\n\n  getColor(row: IDataRow) {\n    const v = this.getNumber(row);\n    if (isNaN(v)) {\n      return DEFAULT_COLOR;\n    }\n    return this.colorMapping.apply(v);\n  }\n\n  getColorMapping() {\n    return this.colorMapping.clone();\n  }\n\n  setColorMapping(mapping: IColorMappingFunction) {\n    if (this.colorMapping.eq(mapping)) {\n      return;\n    }\n    this.fire([NumberColumn.EVENT_COLOR_MAPPING_CHANGED, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY_HEADER, Column.EVENT_DIRTY], this.colorMapping.clone(), this.colorMapping = mapping);\n  }\n\n  isFiltered() {\n    return !isDummyNumberFilter(this.currentFilter);\n  }\n\n  getFilter(): INumberFilter {\n    return Object.assign({}, this.currentFilter);\n  }\n\n  setFilter(value: INumberFilter | null) {\n    value = value || {min: -Infinity, max: +Infinity, filterMissing: false};\n    if (isEqualNumberFilter(value, this.currentFilter)) {\n      return;\n    }\n    const bak = this.getFilter();\n    this.currentFilter.min = isUnknown(value.min) ? -Infinity : value.min;\n    this.currentFilter.max = isUnknown(value.max) ? Infinity : value.max;\n    this.currentFilter.filterMissing = value.filterMissing;\n    this.fire([NumberColumn.EVENT_FILTER_CHANGED, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY], bak, this.getFilter());\n  }\n\n  /**\n   * filter the current row if any filter is set\n   * @param row\n   * @returns {boolean}\n   */\n  filter(row: IDataRow) {\n    return isNumberIncluded(this.currentFilter, this.getRawNumber(row));\n  }\n\n  clearFilter() {\n    const was = this.isFiltered();\n    this.setFilter(null);\n    return was;\n  }\n\n  getGroupThresholds() {\n    return this.currentGroupThresholds.slice();\n  }\n\n  setGroupThresholds(value: number[]) {\n    if (equalArrays(this.currentGroupThresholds, value)) {\n      return;\n    }\n    const bak = this.getGroupThresholds();\n    this.currentGroupThresholds = value.slice();\n    this.fire([NumberColumn.EVENT_GROUPING_CHANGED, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY], bak, value);\n  }\n\n\n  group(row: IDataRow): IGroup {\n    const value = this.getRawNumber(row);\n    if (isNaN(value)) {\n      return Object.assign({}, missingGroup);\n    }\n\n    let threshold = this.currentGroupThresholds;\n    if (threshold.length === 0) {\n      // default threshold\n      const d = this.mapping.domain;\n      threshold = [(d[1] - d[0]) / 2];\n    }\n\n    const treshholdIndex = threshold.findIndex((t) => value <= t);\n    // group by thresholds / bins\n    switch (treshholdIndex) {\n      case -1:\n        //bigger than the last threshold\n        return {\n          name: `${this.label} > ${this.numberFormat(threshold[threshold.length - 1])}`,\n          color: this.colorMapping.apply(1)\n        };\n      case 0:\n        //smallest\n        return {\n          name: `${this.label} <= ${this.numberFormat(threshold[0])}`,\n          color: this.colorMapping.apply(0)\n        };\n      default:\n        return {\n          name: `${this.numberFormat(threshold[treshholdIndex - 1])} <= ${this.label} <= ${this.numberFormat(threshold[treshholdIndex])}`,\n          color: this.colorMapping.apply(this.mapping.apply((threshold[treshholdIndex - 1] + threshold[treshholdIndex]) / 2))\n        };\n    }\n  }\n\n  getSortMethod() {\n    return this.groupSortMethod;\n  }\n\n  setSortMethod(sortMethod: EAdvancedSortMethod) {\n    if (this.groupSortMethod === sortMethod) {\n      return;\n    }\n    this.fire([NumberColumn.EVENT_SORTMETHOD_CHANGED], this.groupSortMethod, this.groupSortMethod = sortMethod);\n    // sort by me if not already sorted by me\n    if (!this.isGroupSortedByMe().asc) {\n      this.toggleMyGroupSorting();\n    }\n  }\n}\n","import {format} from 'd3-format';\nimport {IBoxPlotData, IEventListener} from '../internal';\nimport {Category, dialogAddons, SortByDefault, toolbar} from './annotations';\nimport Column, {dirty, dirtyCaches, dirtyHeader, dirtyValues, groupRendererChanged, labelChanged, metaDataChanged, rendererTypeChanged, summaryRendererChanged, visibilityChanged, widthChanged} from './Column';\nimport {IDataRow, ECompareValueType, IValueColumnDesc, ITypeFactory} from './interfaces';\nimport {ESortMethod, IBoxPlotColumn, INumberDesc, INumberFilter, IColorMappingFunction, IMappingFunction} from './INumberColumn';\nimport {restoreMapping} from './MappingFunction';\nimport NumberColumn from './NumberColumn';\nimport ValueColumn, {dataLoaded} from './ValueColumn';\nimport {DEFAULT_FORMATTER, noNumberFilter, toCompareBoxPlotValue, getBoxPlotNumber, isDummyNumberFilter, restoreNumberFilter} from './internalNumber';\n\n\nexport interface IBoxPlotDesc extends INumberDesc {\n  sort?: ESortMethod;\n}\n\nexport declare type IBoxPlotColumnDesc = IBoxPlotDesc & IValueColumnDesc<IBoxPlotData>;\n\n\n/**\n * emitted when the sort method property changes\n * @asMemberOf BoxPlotColumn\n * @event\n */\nexport declare function sortMethodChanged_BPC(previous: ESortMethod, current: ESortMethod): void;\n\n/**\n * emitted when the mapping property changes\n * @asMemberOf BoxPlotColumn\n * @event\n */\nexport declare function mappingChanged_BPC(previous: IMappingFunction, current: IMappingFunction): void;\n\n/**\n * emitted when the color mapping property changes\n * @asMemberOf BoxPlotColumn\n * @event\n */\nexport declare function colorMappingChanged_BPC(previous: IColorMappingFunction, current: IColorMappingFunction): void;\n\n/**\n * emitted when the filter property changes\n * @asMemberOf BoxPlotColumn\n * @event\n */\nexport declare function filterChanged_BPC(previous: INumberFilter | null, current: INumberFilter | null): void;\n\n\n@toolbar('filterNumber', 'colorMapped', 'editMapping')\n@dialogAddons('sort', 'sortBoxPlot')\n@Category('array')\n@SortByDefault('descending')\nexport default class BoxPlotColumn extends ValueColumn<IBoxPlotData> implements IBoxPlotColumn {\n  static readonly EVENT_MAPPING_CHANGED = NumberColumn.EVENT_MAPPING_CHANGED;\n  static readonly EVENT_COLOR_MAPPING_CHANGED = NumberColumn.EVENT_COLOR_MAPPING_CHANGED;\n  static readonly EVENT_SORTMETHOD_CHANGED = NumberColumn.EVENT_SORTMETHOD_CHANGED;\n  static readonly EVENT_FILTER_CHANGED = NumberColumn.EVENT_FILTER_CHANGED;\n\n  private readonly numberFormat: (n: number) => string = DEFAULT_FORMATTER;\n\n  private sort: ESortMethod;\n\n  private mapping: IMappingFunction;\n  private colorMapping: IColorMappingFunction;\n\n  private original: Readonly<IMappingFunction>;\n  /**\n   * currently active filter\n   * @type {{min: number, max: number}}\n   * @private\n   */\n  private currentFilter: INumberFilter = noNumberFilter();\n\n\n  constructor(id: string, desc: Readonly<IBoxPlotColumnDesc>, factory: ITypeFactory) {\n    super(id, desc);\n    this.mapping = restoreMapping(desc, factory);\n    this.original = this.mapping.clone();\n    this.colorMapping = factory.colorMappingFunction(desc.colorMapping);\n\n    if (desc.numberFormat) {\n      this.numberFormat = format(desc.numberFormat);\n    }\n\n    this.sort = desc.sort || ESortMethod.min;\n  }\n\n  getNumberFormat() {\n    return this.numberFormat;\n  }\n\n  toCompareValue(row: IDataRow): number {\n    return toCompareBoxPlotValue(this, row);\n  }\n\n  toCompareValueType() {\n    return ECompareValueType.FLOAT;\n  }\n\n  getBoxPlotData(row: IDataRow): IBoxPlotData | null {\n    return this.getValue(row);\n  }\n\n  getRange() {\n    return this.mapping.getRange(this.numberFormat);\n  }\n\n  getRawBoxPlotData(row: IDataRow): IBoxPlotData | null {\n    return this.getRawValue(row);\n  }\n\n  getRawValue(row: IDataRow) {\n    return super.getValue(row);\n  }\n\n  getExportValue(row: IDataRow, format: 'text' | 'json'): any {\n    return format === 'json' ? this.getRawValue(row) : super.getExportValue(row, format);\n  }\n\n  getValue(row: IDataRow) {\n    const v = this.getRawValue(row);\n    if (v == null) {\n      return null;\n    }\n    const r: IBoxPlotData = {\n      min: this.mapping.apply(v.min),\n      max: this.mapping.apply(v.max),\n      median: this.mapping.apply(v.median),\n      q1: this.mapping.apply(v.q1),\n      q3: this.mapping.apply(v.q3)\n    };\n    if (v.outlier) {\n      Object.assign(r, {\n        outlier: v.outlier.map((d) => this.mapping.apply(d))\n      });\n    }\n    if (v.whiskerLow != null) {\n      Object.assign(r, {\n        whiskerLow: this.mapping.apply(v.whiskerLow)\n      });\n    }\n    if (v.whiskerHigh != null) {\n      Object.assign(r, {\n        whiskerHigh: this.mapping.apply(v.whiskerHigh)\n      });\n    }\n    return r;\n  }\n\n  getNumber(row: IDataRow): number {\n    return getBoxPlotNumber(this, row, 'normalized');\n  }\n\n  getRawNumber(row: IDataRow): number {\n    return getBoxPlotNumber(this, row, 'raw');\n  }\n\n  iterNumber(row: IDataRow) {\n    return [this.getNumber(row)];\n  }\n\n  iterRawNumber(row: IDataRow) {\n    return [this.getRawNumber(row)];\n  }\n\n  getLabel(row: IDataRow): string {\n    const v = this.getRawValue(row);\n    if (v == null) {\n      return '';\n    }\n    const f = this.numberFormat;\n    return `BoxPlot(min = ${f(v.min)}, q1 = ${f(v.q1)}, median = ${f(v.median)}, q3 = ${f(v.q3)}, max = ${f(v.max)})`;\n  }\n\n  getSortMethod() {\n    return this.sort;\n  }\n\n  setSortMethod(sort: ESortMethod) {\n    if (this.sort === sort) {\n      return;\n    }\n    this.fire(BoxPlotColumn.EVENT_SORTMETHOD_CHANGED, this.sort, this.sort = sort);\n    // sort by me if not already sorted by me\n    if (!this.isSortedByMe().asc) {\n      this.sortByMe();\n    }\n  }\n\n  dump(toDescRef: (desc: any) => any): any {\n    const r = super.dump(toDescRef);\n    r.sortMethod = this.getSortMethod();\n    r.filter = !isDummyNumberFilter(this.currentFilter) ? this.currentFilter : null;\n    r.map = this.mapping.toJSON();\n    r.colorMapping = this.colorMapping.toJSON();\n    return r;\n  }\n\n  restore(dump: any, factory: ITypeFactory) {\n    super.restore(dump, factory);\n    if (dump.sortMethod) {\n      this.sort = dump.sortMethod;\n    }\n    if (dump.filter) {\n      this.currentFilter = restoreNumberFilter(dump.filter);\n    }\n    if (dump.map || dump.domain) {\n      this.mapping = restoreMapping(dump, factory);\n    }\n    if (dump.colorMapping) {\n      this.colorMapping = factory.colorMappingFunction(dump.colorMapping);\n    }\n  }\n\n  protected createEventList() {\n    return super.createEventList().concat([BoxPlotColumn.EVENT_SORTMETHOD_CHANGED, BoxPlotColumn.EVENT_COLOR_MAPPING_CHANGED, BoxPlotColumn.EVENT_MAPPING_CHANGED, BoxPlotColumn.EVENT_FILTER_CHANGED]);\n  }\n\n  on(type: typeof BoxPlotColumn.EVENT_COLOR_MAPPING_CHANGED, listener: typeof colorMappingChanged_BPC | null): this;\n  on(type: typeof BoxPlotColumn.EVENT_MAPPING_CHANGED, listener: typeof mappingChanged_BPC | null): this;\n  on(type: typeof BoxPlotColumn.EVENT_SORTMETHOD_CHANGED, listener: typeof sortMethodChanged_BPC | null): this;\n  on(type: typeof BoxPlotColumn.EVENT_FILTER_CHANGED, listener: typeof filterChanged_BPC | null): this;\n  on(type: typeof ValueColumn.EVENT_DATA_LOADED, listener: typeof dataLoaded | null): this;\n  on(type: typeof Column.EVENT_WIDTH_CHANGED, listener: typeof widthChanged | null): this;\n  on(type: typeof Column.EVENT_LABEL_CHANGED, listener: typeof labelChanged | null): this;\n  on(type: typeof Column.EVENT_METADATA_CHANGED, listener: typeof metaDataChanged | null): this;\n  on(type: typeof Column.EVENT_DIRTY, listener: typeof dirty | null): this;\n  on(type: typeof Column.EVENT_DIRTY_HEADER, listener: typeof dirtyHeader | null): this;\n  on(type: typeof Column.EVENT_DIRTY_VALUES, listener: typeof dirtyValues | null): this;\n  on(type: typeof Column.EVENT_DIRTY_CACHES, listener: typeof dirtyCaches | null): this;\n  on(type: typeof Column.EVENT_RENDERER_TYPE_CHANGED, listener: typeof rendererTypeChanged | null): this;\n  on(type: typeof Column.EVENT_GROUP_RENDERER_TYPE_CHANGED, listener: typeof groupRendererChanged | null): this;\n  on(type: typeof Column.EVENT_SUMMARY_RENDERER_TYPE_CHANGED, listener: typeof summaryRendererChanged | null): this;\n  on(type: typeof Column.EVENT_VISIBILITY_CHANGED, listener: typeof visibilityChanged | null): this;\n  on(type: string | string[], listener: IEventListener | null): this; // required for correct typings in *.d.ts\n  on(type: string | string[], listener: IEventListener | null): this {\n    return super.on(<any>type, listener);\n  }\n\n  getOriginalMapping() {\n    return this.original.clone();\n  }\n\n  getMapping() {\n    return this.mapping.clone();\n  }\n\n  setMapping(mapping: IMappingFunction) {\n    if (this.mapping.eq(mapping)) {\n      return;\n    }\n    this.fire([BoxPlotColumn.EVENT_MAPPING_CHANGED, Column.EVENT_DIRTY_HEADER, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY_CACHES, Column.EVENT_DIRTY], this.mapping.clone(), this.mapping = mapping);\n  }\n\n  getColor(row: IDataRow) {\n    return NumberColumn.prototype.getColor.call(this, row);\n  }\n\n  getColorMapping() {\n    return this.colorMapping.clone();\n  }\n\n  setColorMapping(mapping: IColorMappingFunction) {\n    if (this.colorMapping.eq(mapping)) {\n      return;\n    }\n    this.fire([BoxPlotColumn.EVENT_COLOR_MAPPING_CHANGED, Column.EVENT_DIRTY_HEADER, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY_CACHES, Column.EVENT_DIRTY], this.colorMapping.clone(), this.colorMapping = mapping);\n  }\n\n  isFiltered() {\n    return NumberColumn.prototype.isFiltered.call(this);\n  }\n\n  getFilter(): INumberFilter {\n    return NumberColumn.prototype.getFilter.call(this);\n  }\n\n  setFilter(value: INumberFilter | null) {\n    NumberColumn.prototype.setFilter.call(this, value);\n  }\n\n  filter(row: IDataRow) {\n    return NumberColumn.prototype.filter.call(this, row);\n  }\n\n  clearFilter() {\n    return NumberColumn.prototype.clearFilter.call(this);\n  }\n}\n\n","import {Category} from './annotations';\nimport {IKeyValue, IMapColumn} from './IArrayColumn';\nimport {IDataRow, IValueColumnDesc} from './interfaces';\nimport ValueColumn from './ValueColumn';\n\nexport interface IMapColumnDesc<T> extends IValueColumnDesc<IKeyValue<T>[]> {\n  // dummy\n}\n\n@Category('map')\nexport default class MapColumn<T> extends ValueColumn<IKeyValue<T>[]> implements IMapColumn<T> {\n\n  constructor(id: string, desc: Readonly<IMapColumnDesc<T>>) {\n    super(id, desc);\n    this.setDefaultWidth(200); //by default 200\n  }\n\n  getValue(row: IDataRow) {\n    const r = this.getMap(row);\n    return r.length === 0 ? null : r;\n  }\n\n  getLabels(row: IDataRow): IKeyValue<string>[] {\n    const v = this.getMap(row);\n    return v.map(({key, value}) => ({key, value: String(value)}));\n  }\n\n  getMap(row: IDataRow) {\n    return toKeyValue<T>(<any>super.getValue(row));\n  }\n\n  getMapLabel(row: IDataRow) {\n    return this.getLabels(row);\n  }\n\n  getLabel(row: IDataRow) {\n    const v = this.getLabels(row);\n    return `{${v.map(({key, value}) => `${key}: ${value}`).join(', ')}}`;\n  }\n}\n\nfunction byKey(a: IKeyValue<any>, b: IKeyValue<any>) {\n  if (a === b) {\n    return 0;\n  }\n  return a.key.localeCompare(b.key);\n}\n\nfunction toKeyValue<T>(v?: Map<string, T> | { [key: string]: T } | IKeyValue<T>[]): IKeyValue<T>[] {\n  if (!v) {\n    return [];\n  }\n  if (v instanceof Map) {\n    return Array.from(v.entries()).map(([key, value]) => ({key, value})).sort(byKey);\n  }\n  if (Array.isArray(v)) {\n    return v; // keep original order\n  }\n  // object\n  return Object.keys(v).map((key) => ({key, value: v[key]})).sort(byKey);\n}\n","import {ICategoricalDesc, ICategory, ICategoricalLikeColumn, ICategoricalColorMappingFunction} from './ICategoricalColumn';\nimport {IDataRow, DEFAULT_COLOR, ITypeFactory} from './interfaces';\nimport MapColumn, {IMapColumnDesc} from './MapColumn';\nimport {DEFAULT_CATEGORICAL_COLOR_FUNCTION} from './CategoricalColorMappingFunction';\nimport CategoricalColumn from './CategoricalColumn';\nimport ValueColumn, {dataLoaded} from './ValueColumn';\nimport Column, {labelChanged, metaDataChanged, dirty, dirtyHeader, dirtyValues, rendererTypeChanged, groupRendererChanged, summaryRendererChanged, visibilityChanged, widthChanged, dirtyCaches} from './Column';\nimport {IEventListener} from '../internal';\nimport {toolbar} from './annotations';\nimport {toCategories} from './internalCategorical';\n\n\nexport declare type ICategoricalMapColumnDesc = ICategoricalDesc & IMapColumnDesc<string | null>;\n\n/**\n * emitted when the color mapping property changes\n * @asMemberOf CategoricalMapColumn\n * @event\n */\nexport declare function colorMappingChanged_CMC(previous: ICategoricalColorMappingFunction, current: ICategoricalColorMappingFunction): void;\n\n@toolbar('colorMappedCategorical')\nexport default class CategoricalMapColumn extends MapColumn<string | null> implements ICategoricalLikeColumn {\n  static readonly EVENT_COLOR_MAPPING_CHANGED = CategoricalColumn.EVENT_COLOR_MAPPING_CHANGED;\n\n  readonly categories: ICategory[];\n\n  private readonly lookup = new Map<string, Readonly<ICategory>>();\n\n  private colorMapping: ICategoricalColorMappingFunction;\n\n  constructor(id: string, desc: Readonly<ICategoricalMapColumnDesc>) {\n    super(id, desc);\n    this.categories = toCategories(desc);\n    this.categories.forEach((d) => this.lookup.set(d.name, d));\n    this.colorMapping = DEFAULT_CATEGORICAL_COLOR_FUNCTION;\n  }\n  protected createEventList() {\n    return super.createEventList().concat([CategoricalMapColumn.EVENT_COLOR_MAPPING_CHANGED]);\n  }\n\n  on(type: typeof CategoricalMapColumn.EVENT_COLOR_MAPPING_CHANGED, listener: typeof colorMappingChanged_CMC | null): this;\n  on(type: typeof ValueColumn.EVENT_DATA_LOADED, listener: typeof dataLoaded | null): this;\n  on(type: typeof Column.EVENT_WIDTH_CHANGED, listener: typeof widthChanged | null): this;\n  on(type: typeof Column.EVENT_LABEL_CHANGED, listener: typeof labelChanged | null): this;\n  on(type: typeof Column.EVENT_METADATA_CHANGED, listener: typeof metaDataChanged | null): this;\n  on(type: typeof Column.EVENT_DIRTY, listener: typeof dirty | null): this;\n  on(type: typeof Column.EVENT_DIRTY_HEADER, listener: typeof dirtyHeader | null): this;\n  on(type: typeof Column.EVENT_DIRTY_VALUES, listener: typeof dirtyValues | null): this;\n  on(type: typeof Column.EVENT_DIRTY_CACHES, listener: typeof dirtyCaches | null): this;\n  on(type: typeof Column.EVENT_RENDERER_TYPE_CHANGED, listener: typeof rendererTypeChanged | null): this;\n  on(type: typeof Column.EVENT_GROUP_RENDERER_TYPE_CHANGED, listener: typeof groupRendererChanged | null): this;\n  on(type: typeof Column.EVENT_SUMMARY_RENDERER_TYPE_CHANGED, listener: typeof summaryRendererChanged | null): this;\n  on(type: typeof Column.EVENT_VISIBILITY_CHANGED, listener: typeof visibilityChanged | null): this;\n  on(type: string | string[], listener: IEventListener | null): this; // required for correct typings in *.d.ts\n  on(type: string | string[], listener: IEventListener | null): this {\n    return super.on(<any>type, listener);\n  }\n\n\n  private parseValue(v: any) {\n    if (!v) {\n      return null;\n    }\n    const vs = String(v);\n    return this.lookup.has(vs) ? this.lookup.get(vs)! : null;\n  }\n\n  getCategoryMap(row: IDataRow) {\n    return super.getMap(row).map(({key, value}) => ({\n      key,\n      value: this.parseValue(value)\n    }));\n  }\n\n  getCategories(row: IDataRow) {\n    return this.getCategoryMap(row).map((d) => d.value);\n  }\n\n  getColors(row: IDataRow) {\n    return this.getCategoryMap(row).map(({key, value}) => ({key, value: value ? this.colorMapping.apply(value) : DEFAULT_COLOR}));\n  }\n\n  getValue(row: IDataRow) {\n    const r = this.getCategoryMap(row);\n    return r.length === 0 ? null : r.map(({key, value}) => ({\n      key,\n      value: value ? value.name : null\n    }));\n  }\n\n  getLabels(row: IDataRow) {\n    return this.getCategoryMap(row).map(({key, value}) => ({\n      key,\n      value: value ? value.label : ''\n    }));\n  }\n\n  getColorMapping() {\n    return this.colorMapping.clone();\n  }\n\n  setColorMapping(mapping: ICategoricalColorMappingFunction) {\n    return CategoricalColumn.prototype.setColorMapping.call(this, mapping);\n  }\n\n  dump(toDescRef: (desc: any) => any): any {\n    const r = super.dump(toDescRef);\n    r.colorMapping = this.colorMapping.toJSON();\n    return r;\n  }\n\n  restore(dump: any, factory: ITypeFactory) {\n    super.restore(dump, factory);\n    this.colorMapping = factory.categoricalColorMappingFunction(dump.colorMapping, this.categories);\n  }\n\n  iterCategory(row: IDataRow) {\n    return this.getCategories(row);\n  }\n}\n","import ArrayColumn, {IArrayColumnDesc} from './ArrayColumn';\nimport {ICategoricalDesc, ICategory, ICategoricalColorMappingFunction, ICategoricalsColumn} from './ICategoricalColumn';\nimport {IDataRow, DEFAULT_COLOR, ITypeFactory} from './interfaces';\nimport {toolbar} from './annotations';\nimport CategoricalColumn from './CategoricalColumn';\nimport {DEFAULT_CATEGORICAL_COLOR_FUNCTION} from './CategoricalColorMappingFunction';\nimport ValueColumn, {dataLoaded} from './ValueColumn';\nimport Column, {labelChanged, metaDataChanged, dirty, dirtyHeader, dirtyValues, rendererTypeChanged, groupRendererChanged, summaryRendererChanged, visibilityChanged, widthChanged, dirtyCaches} from './Column';\nimport {IEventListener} from '../internal';\nimport {toCategories} from './internalCategorical';\n\nexport declare type ICategoricalsColumnDesc = ICategoricalDesc & IArrayColumnDesc<string | null>;\n\n/**\n * emitted when the color mapping property changes\n * @asMemberOf CategoricalsColumn\n * @event\n */\nexport declare function colorMappingChanged_CCS(previous: ICategoricalColorMappingFunction, current: ICategoricalColorMappingFunction): void;\n\n/**\n * a string column with optional alignment\n */\n@toolbar('colorMappedCategorical')\nexport default class CategoricalsColumn extends ArrayColumn<string | null> implements ICategoricalsColumn {\n  static readonly EVENT_COLOR_MAPPING_CHANGED = CategoricalColumn.EVENT_COLOR_MAPPING_CHANGED;\n\n  readonly categories: ICategory[];\n\n  private readonly lookup = new Map<string, Readonly<ICategory>>();\n\n  private colorMapping: ICategoricalColorMappingFunction;\n\n  constructor(id: string, desc: Readonly<ICategoricalsColumnDesc>) {\n    super(id, desc);\n    this.categories = toCategories(desc);\n    this.categories.forEach((d) => this.lookup.set(d.name, d));\n    this.colorMapping = DEFAULT_CATEGORICAL_COLOR_FUNCTION;\n  }\n\n  protected createEventList() {\n    return super.createEventList().concat([CategoricalsColumn.EVENT_COLOR_MAPPING_CHANGED]);\n  }\n\n  on(type: typeof CategoricalsColumn.EVENT_COLOR_MAPPING_CHANGED, listener: typeof colorMappingChanged_CCS | null): this;\n  on(type: typeof ValueColumn.EVENT_DATA_LOADED, listener: typeof dataLoaded | null): this;\n  on(type: typeof Column.EVENT_WIDTH_CHANGED, listener: typeof widthChanged | null): this;\n  on(type: typeof Column.EVENT_LABEL_CHANGED, listener: typeof labelChanged | null): this;\n  on(type: typeof Column.EVENT_METADATA_CHANGED, listener: typeof metaDataChanged | null): this;\n  on(type: typeof Column.EVENT_DIRTY, listener: typeof dirty | null): this;\n  on(type: typeof Column.EVENT_DIRTY_HEADER, listener: typeof dirtyHeader | null): this;\n  on(type: typeof Column.EVENT_DIRTY_VALUES, listener: typeof dirtyValues | null): this;\n  on(type: typeof Column.EVENT_DIRTY_CACHES, listener: typeof dirtyCaches | null): this;\n  on(type: typeof Column.EVENT_RENDERER_TYPE_CHANGED, listener: typeof rendererTypeChanged | null): this;\n  on(type: typeof Column.EVENT_GROUP_RENDERER_TYPE_CHANGED, listener: typeof groupRendererChanged | null): this;\n  on(type: typeof Column.EVENT_SUMMARY_RENDERER_TYPE_CHANGED, listener: typeof summaryRendererChanged | null): this;\n  on(type: typeof Column.EVENT_VISIBILITY_CHANGED, listener: typeof visibilityChanged | null): this;\n  on(type: string | string[], listener: IEventListener | null): this; // required for correct typings in *.d.ts\n  on(type: string | string[], listener: IEventListener | null): this {\n    return super.on(<any>type, listener);\n  }\n\n  getCategories(row: IDataRow) {\n    return super.getValues(row).map((v) => {\n      if (!v) {\n        return null;\n      }\n      const vs = String(v);\n      return this.lookup.has(vs) ? this.lookup.get(vs)! : null;\n    });\n  }\n\n  getColors(row: IDataRow) {\n    return this.getCategories(row).map((d) => d ? this.colorMapping.apply(d) : DEFAULT_COLOR);\n  }\n\n  iterCategory(row: IDataRow) {\n    return this.getCategories(row);\n  }\n\n  getValues(row: IDataRow) {\n    return this.getCategories(row).map((v) => v ? v.name : null);\n  }\n\n  getLabels(row: IDataRow) {\n    return this.getCategories(row).map((v) => v ? v.label : '');\n  }\n\n  getColorMapping() {\n    return this.colorMapping.clone();\n  }\n\n  setColorMapping(mapping: ICategoricalColorMappingFunction) {\n    return CategoricalColumn.prototype.setColorMapping.call(this, mapping);\n  }\n\n  dump(toDescRef: (desc: any) => any): any {\n    const r = super.dump(toDescRef);\n    r.colorMapping = this.colorMapping.toJSON();\n    return r;\n  }\n\n  restore(dump: any, factory: ITypeFactory) {\n    super.restore(dump, factory);\n    this.colorMapping = factory.categoricalColorMappingFunction(dump.colorMapping, this.categories);\n  }\n}\n","import {timeDay, timeHour, timeMinute, timeMonth, timeSecond, timeWeek} from 'd3-time';\nimport {timeFormat} from 'd3-time-format';\nimport {equal, ISequence, isSeqEmpty} from '../internal';\nimport {INumberFilter, IDateGrouper, IDataRow, IDateColumn} from '.';\nimport {isNumberIncluded} from './internalNumber';\n\n/** @internal */\nexport {isDummyNumberFilter as isDummyDateFilter, isEqualNumberFilter as isEqualDateFilter, noNumberFilter as noDateFilter, restoreNumberFilter as restoreDateFilter} from './internalNumber';\n\n\n/** @internal */\nexport function isDateIncluded(filter: INumberFilter | null, value: Date | null) {\n  if (!filter) {\n    return true;\n  }\n  if (value == null || !(value instanceof Date)) {\n    return !filter.filterMissing;\n  }\n  return isNumberIncluded(filter, value!.getTime());\n}\n\n/**\n * shifts the given date such that it is on 23:59:59, or 00:00:00\n * @internal\n */\nexport function shiftFilterDateDay(date: number, type: 'min' | 'max') {\n  const d = new Date(date);\n  if (type === 'max') {\n    d.setHours(23);\n    d.setMinutes(59);\n    d.setSeconds(59);\n    d.setMilliseconds(999);\n  } else {\n    d.setHours(0);\n    d.setMinutes(0);\n    d.setSeconds(0);\n    d.setMilliseconds(0);\n  }\n  return d.getTime();\n}\n\n/**\n * @internal\n */\nexport function defaultDateGrouper(): IDateGrouper {\n  return {granularity: 'month', circular: false};\n}\n\n/**\n * @internal\n */\nexport function isDefaultDateGrouper(grouper: IDateGrouper) {\n  return equal(defaultDateGrouper(), grouper);\n}\n\n/**\n * convert the given date to the desired grouper\n * @internal\n */\nexport function toDateGroup(grouper: IDateGrouper, value: Date): {value: number, name: string} {\n  switch (grouper.granularity) {\n    case 'century':\n      const centuryP = Math.floor(value.getFullYear() / 100);\n      if (grouper.circular) {\n        const century = centuryP % 10;\n        return {\n          value: century,\n          name: `*${century}00`\n        };\n      }\n      return {\n        value: centuryP,\n        name: `${centuryP}00`\n      };\n    case 'decade':\n      const decadeP = Math.floor(value.getFullYear() / 10);\n      if (grouper.circular) {\n        const decade = decadeP % 10;\n        return {\n          value: decade,\n          name: `**${decade}0`\n        };\n      }\n      return {\n        value: decadeP,\n        name: `${decadeP}0`\n      };\n    case 'year':\n      if (grouper.circular) {\n        const year = value.getFullYear() % 10;\n        return {\n          value: year,\n          name: `***${year}`\n        };\n      }\n      return {\n        value: value.getFullYear(),\n        name: String(value.getFullYear())\n      };\n    case 'month':\n      if (grouper.circular) {\n        return {\n          value: value.getMonth(),\n          name: timeFormat('%B')(value)\n        };\n      }\n      return {\n        value: timeMonth(value).getTime(),\n        name: timeFormat('%B %Y')(value)\n      };\n    case 'week':\n      if (grouper.circular) {\n        return {\n          value: value.getMonth(),\n          name: timeFormat('%W')(value)\n        };\n      }\n      return {\n        value: timeWeek(value).getTime(),\n        name: timeFormat('%W %Y')(value)\n      };\n    case 'day_of_week':\n      if (grouper.circular) {\n        return {\n          value: value.getDay(),\n          name: timeFormat('%A')(value)\n        };\n      }\n      return {\n        value: timeDay(value).getTime(),\n        name: timeFormat('%x')(value)\n      };\n    case 'day_of_month':\n      if (grouper.circular) {\n        return {\n          value: value.getDate(),\n          name: timeFormat('%d')(value)\n        };\n      }\n      return {\n        value: timeDay(value).getTime(),\n        name: timeFormat('%x')(value)\n      };\n    case 'day_of_year':\n      if (grouper.circular) {\n        // %j = day of year\n        const v = timeFormat('%j')(value);\n        return {\n          value: parseInt(v, 10),\n          name: v\n        };\n      }\n      return {\n        value: timeDay(value).getTime(),\n        name: timeFormat('%x')(value)\n      };\n    case 'hour':\n      if (grouper.circular) {\n        return {\n          value: value.getHours(),\n          name: timeFormat('%A')(value)\n        };\n      }\n      return {\n        value: timeHour(value).getTime(),\n        name: timeFormat('%x')(value)\n      };\n    case 'minute':\n      if (grouper.circular) {\n        return {\n          value: value.getMinutes(),\n          name: timeFormat('%A')(value)\n        };\n      }\n      return {\n        value: timeMinute(value).getTime(),\n        name: timeFormat('%x')(value)\n      };\n    case 'second':\n      if (grouper.circular) {\n        return {\n          value: value.getSeconds(),\n          name: timeFormat('%A')(value)\n        };\n      }\n      return {\n        value: timeSecond(value).getTime(),\n        name: timeFormat('%x')(value)\n      };\n  }\n\n  return {\n    value: value.getTime(),\n    name: value.toString()\n  };\n}\n\n\n/**\n * @internal\n */\nexport function chooseAggregatedDate(rows: ISequence<IDataRow>, grouper: IDateGrouper | null, col: IDateColumn, valueCache?: ISequence<Date | null>): {value: number | null, name: string} {\n  const vs = <ISequence<Date>>(valueCache ? valueCache : rows.map((d) => col.getDate(d))).filter((d) => d instanceof Date);\n  if (isSeqEmpty(vs)) {\n    return {value: null, name: ''};\n  }\n  const median = trueMedian(vs.map((d) => d.getTime()))!;\n  if (!grouper) {\n    return {value: median, name: (new Date(median)).toString()};\n  }\n  return toDateGroup(grouper, new Date(median));\n}\n\nfunction trueMedian(dates: ISequence<number>) {\n  // to avoid interpolating between the centers do it manually\n  const s = Float64Array.from(dates);\n  if (s.length === 1) {\n    return s[0];\n  }\n\n  s.sort();\n  return s[Math.floor(s.length / 2)];\n}\n","import {timeFormat, timeParse} from 'd3-time-format';\nimport {ISequence, equal, IEventListener} from '../internal';\nimport {Category, dialogAddons, toolbar} from './annotations';\nimport Column, {dirty, dirtyCaches, dirtyHeader, dirtyValues, groupRendererChanged, labelChanged, metaDataChanged, rendererTypeChanged, summaryRendererChanged, visibilityChanged, widthChanged} from './Column';\nimport {IDateColumn, IDateDesc, IDateFilter, IDateGrouper} from './IDateColumn';\nimport {defaultGroup, IDataRow, IGroup, ECompareValueType, IValueColumnDesc, DEFAULT_COLOR, ITypeFactory} from './interfaces';\nimport {isMissingValue, isUnknown, missingGroup} from './missing';\nimport ValueColumn, {dataLoaded} from './ValueColumn';\nimport {noDateFilter, defaultDateGrouper, isDummyDateFilter, isDefaultDateGrouper, restoreDateFilter, isEqualDateFilter, isDateIncluded, toDateGroup, chooseAggregatedDate} from './internalDate';\n\n\nexport declare type IDateColumnDesc = IValueColumnDesc<Date> & IDateDesc;\n\n/**\n * emitted when the filter property changes\n * @asMemberOf DateColumn\n * @event\n */\nexport declare function filterChanged_DC(previous: IDateFilter | null, current: IDateFilter | null): void;\n\n/**\n * emitted when the grouping property changes\n * @asMemberOf DateColumn\n * @event\n */\nexport declare function groupingChanged_DC(previous: IDateGrouper | null, current: IDateGrouper | null): void;\n\n@toolbar('groupBy', 'sortGroupBy', 'filterDate')\n@dialogAddons('group', 'groupDate')\n@Category('date')\nexport default class DateColumn extends ValueColumn<Date> implements IDateColumn {\n  static readonly EVENT_FILTER_CHANGED = 'filterChanged';\n  static readonly EVENT_GROUPING_CHANGED = 'groupingChanged';\n\n  static readonly DEFAULT_DATE_FORMAT = '%x';\n\n  private readonly format: (date: Date | null) => string;\n  private readonly parse: (date: string) => Date | null;\n\n  /**\n   * currently active filter\n   * @type {{min: number, max: number}}\n   * @private\n   */\n  private currentFilter: IDateFilter = noDateFilter();\n  private currentGrouper: IDateGrouper = defaultDateGrouper();\n\n  constructor(id: string, desc: Readonly<IDateColumnDesc>) {\n    super(id, desc);\n    const f = timeFormat(desc.dateFormat || DateColumn.DEFAULT_DATE_FORMAT);\n    this.format = (v) => (v instanceof Date) ? f(v) : '';\n    this.parse = desc.dateParse ? timeParse(desc.dateParse) : timeParse(desc.dateFormat || DateColumn.DEFAULT_DATE_FORMAT);\n    this.setDefaultGroupRenderer('datehistogram');\n    this.setDefaultSummaryRenderer('datehistogram');\n  }\n\n  getFormatter() {\n    return this.format;\n  }\n\n  getParser() {\n    return this.parse;\n  }\n\n  dump(toDescRef: (desc: any) => any) {\n    const r = super.dump(toDescRef);\n    r.filter = isDummyDateFilter(this.currentFilter) ? null : this.currentFilter;\n    if (this.currentGrouper && !isDefaultDateGrouper(this.currentGrouper)) {\n      r.grouper = this.currentGrouper;\n    }\n    return r;\n  }\n\n  restore(dump: any, factory: ITypeFactory) {\n    super.restore(dump, factory);\n    if (dump.filter) {\n      this.currentFilter = restoreDateFilter(dump.filter);\n    }\n    if (dump.grouper) {\n      this.currentGrouper = dump.grouper;\n    }\n  }\n\n  protected createEventList() {\n    return super.createEventList().concat([DateColumn.EVENT_FILTER_CHANGED, DateColumn.EVENT_GROUPING_CHANGED]);\n  }\n\n  on(type: typeof DateColumn.EVENT_FILTER_CHANGED, listener: typeof filterChanged_DC | null): this;\n  on(type: typeof DateColumn.EVENT_GROUPING_CHANGED, listener: typeof groupingChanged_DC | null): this;\n  on(type: typeof ValueColumn.EVENT_DATA_LOADED, listener: typeof dataLoaded | null): this;\n  on(type: typeof Column.EVENT_WIDTH_CHANGED, listener: typeof widthChanged | null): this;\n  on(type: typeof Column.EVENT_LABEL_CHANGED, listener: typeof labelChanged | null): this;\n  on(type: typeof Column.EVENT_METADATA_CHANGED, listener: typeof metaDataChanged | null): this;\n  on(type: typeof Column.EVENT_DIRTY, listener: typeof dirty | null): this;\n  on(type: typeof Column.EVENT_DIRTY_HEADER, listener: typeof dirtyHeader | null): this;\n  on(type: typeof Column.EVENT_DIRTY_VALUES, listener: typeof dirtyValues | null): this;\n  on(type: typeof Column.EVENT_DIRTY_CACHES, listener: typeof dirtyCaches | null): this;\n  on(type: typeof Column.EVENT_RENDERER_TYPE_CHANGED, listener: typeof rendererTypeChanged | null): this;\n  on(type: typeof Column.EVENT_GROUP_RENDERER_TYPE_CHANGED, listener: typeof groupRendererChanged | null): this;\n  on(type: typeof Column.EVENT_SUMMARY_RENDERER_TYPE_CHANGED, listener: typeof summaryRendererChanged | null): this;\n  on(type: typeof Column.EVENT_VISIBILITY_CHANGED, listener: typeof visibilityChanged | null): this;\n  on(type: string | string[], listener: IEventListener | null): this; // required for correct typings in *.d.ts\n  on(type: string | string[], listener: IEventListener | null): this {\n    return super.on(<any>type, listener);\n  }\n\n  getValue(row: IDataRow): Date | null {\n    return this.getDate(row);\n  }\n\n  getDate(row: IDataRow) {\n    const v = super.getValue(row);\n    if (isMissingValue(v)) {\n      return null;\n    }\n    if (v instanceof Date) {\n      return v;\n    }\n    return this.parse(String(v));\n  }\n\n  iterDate(row: IDataRow) {\n    return [this.getDate(row)];\n  }\n\n  getLabel(row: IDataRow) {\n    const v = this.getValue(row);\n    return this.format(v);\n  }\n\n  isFiltered() {\n    return !isDummyDateFilter(this.currentFilter);\n  }\n\n  clearFilter() {\n    const was = this.isFiltered();\n    this.setFilter(null);\n    return was;\n  }\n\n  getFilter(): IDateFilter {\n    return Object.assign({}, this.currentFilter);\n  }\n\n  setFilter(value: IDateFilter | null) {\n    value = value || {min: -Infinity, max: +Infinity, filterMissing: false};\n    if (isEqualDateFilter(value, this.currentFilter)) {\n      return;\n    }\n    const bak = this.getFilter();\n    this.currentFilter.min = isUnknown(value.min) ? -Infinity : value.min;\n    this.currentFilter.max = isUnknown(value.max) ? Infinity : value.max;\n    this.currentFilter.filterMissing = value.filterMissing;\n    this.fire([DateColumn.EVENT_FILTER_CHANGED, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY], bak, this.getFilter());\n  }\n\n  /**\n   * filter the current row if any filter is set\n   * @param row\n   * @returns {boolean}\n   */\n  filter(row: IDataRow, valueCache?: any) {\n    return isDateIncluded(this.currentFilter, valueCache !== undefined ? valueCache : this.getDate(row));\n  }\n\n  toCompareValue(row: IDataRow, valueCache?: any) {\n    const v = valueCache !== undefined ? valueCache : this.getValue(row);\n    if (!(v instanceof Date)) {\n      return NaN;\n    }\n    return v.getTime();\n  }\n\n  toCompareValueType() {\n    return ECompareValueType.DOUBLE_ASC;\n  }\n\n  getDateGrouper() {\n    return Object.assign({}, this.currentGrouper);\n  }\n\n  setDateGrouper(value: IDateGrouper) {\n    if (equal(this.currentGrouper, value)) {\n      return;\n    }\n    const bak = this.getDateGrouper();\n    this.currentGrouper = Object.assign({}, value);\n    this.fire([DateColumn.EVENT_GROUPING_CHANGED, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY], bak, value);\n  }\n\n  group(row: IDataRow, valueCache?: any): IGroup {\n    const v = valueCache !== undefined ? valueCache : this.getDate(row);\n    if (!v || !(v instanceof Date)) {\n      return Object.assign({}, missingGroup);\n    }\n    if (!this.currentGrouper) {\n      return Object.assign({}, defaultGroup);\n    }\n    const g = toDateGroup(this.currentGrouper, v);\n    return {\n      name: g.name,\n      color: DEFAULT_COLOR\n    };\n  }\n\n  toCompareGroupValue(rows: ISequence<IDataRow>, _group: IGroup, valueCache?: ISequence<any>): number {\n    const v = chooseAggregatedDate(rows, this.currentGrouper, this, valueCache).value;\n    return v == null ? NaN : v;\n  }\n\n  toCompareGroupValueType() {\n    return ECompareValueType.DOUBLE_ASC;\n  }\n}\n","import {timeFormat, timeParse} from 'd3-time-format';\nimport {median, min, max, IEventListener} from '../internal';\nimport {dialogAddons, toolbar} from './annotations';\nimport ArrayColumn, {IArrayColumnDesc} from './ArrayColumn';\nimport Column, {widthChanged, labelChanged, metaDataChanged, dirty, dirtyHeader, dirtyValues, rendererTypeChanged, groupRendererChanged, summaryRendererChanged, visibilityChanged, dirtyCaches} from './Column';\nimport ValueColumn, {dataLoaded} from './ValueColumn';\nimport {IDateDesc, IDatesColumn, IDateFilter} from './IDateColumn';\nimport {IDataRow, ECompareValueType, ITypeFactory} from './interfaces';\nimport {isMissingValue} from './missing';\nimport DateColumn from './DateColumn';\nimport {noDateFilter, isDummyDateFilter, restoreDateFilter} from './internalDate';\nimport {chooseUIntByDataLength} from './internal';\n\nexport enum EDateSort {\n  min = 'min',\n  max = 'max',\n  median = 'median'\n}\n\nexport interface IDatesDesc extends IDateDesc {\n  sort?: EDateSort;\n}\n\nexport declare type IDatesColumnDesc = IDatesDesc & IArrayColumnDesc<Date>;\n\n/**\n * emitted when the sort method property changes\n * @asMemberOf DatesColumn\n * @event\n */\nexport declare function sortMethodChanged_DCS(previous: EDateSort, current: EDateSort): void;\n\n/**\n * emitted when the filter property changes\n * @asMemberOf DatesColumn\n * @event\n */\nexport declare function filterChanged_DCS(previous: IDateFilter | null, current: IDateFilter | null): void;\n\n@toolbar('filterDate')\n@dialogAddons('sort', 'sortDates')\nexport default class DatesColumn extends ArrayColumn<Date | null> implements IDatesColumn {\n  static readonly EVENT_SORTMETHOD_CHANGED = 'sortMethodChanged';\n  static readonly EVENT_FILTER_CHANGED = DateColumn.EVENT_FILTER_CHANGED;\n\n  private readonly format: (date: Date | null) => string;\n  private readonly parse: (date: string) => Date | null;\n  private sort: EDateSort;\n  private currentFilter: IDateFilter = noDateFilter();\n\n  constructor(id: string, desc: Readonly<IDatesColumnDesc>) {\n    super(id, desc);\n    const f = timeFormat(desc.dateFormat || DateColumn.DEFAULT_DATE_FORMAT);\n    this.format = (v) => (v instanceof Date) ? f(v) : '';\n    this.parse = desc.dateParse ? timeParse(desc.dateParse) : timeParse(desc.dateFormat || DateColumn.DEFAULT_DATE_FORMAT);\n    this.sort = desc.sort || EDateSort.median;\n    this.setDefaultRenderer('datehistogram');\n    this.setDefaultGroupRenderer('datehistogram');\n    this.setDefaultSummaryRenderer('datehistogram');\n  }\n\n  getFormatter() {\n    return this.format;\n  }\n\n  getParser() {\n    return this.parse;\n  }\n\n  protected createEventList() {\n    return super.createEventList().concat([DatesColumn.EVENT_SORTMETHOD_CHANGED, DatesColumn.EVENT_FILTER_CHANGED]);\n  }\n\n  on(type: typeof DatesColumn.EVENT_SORTMETHOD_CHANGED, listener: typeof sortMethodChanged_DCS | null): this;\n  on(type: typeof DatesColumn.EVENT_FILTER_CHANGED, listener: typeof filterChanged_DCS | null): this;\n  on(type: typeof ValueColumn.EVENT_DATA_LOADED, listener: typeof dataLoaded | null): this;\n  on(type: typeof Column.EVENT_WIDTH_CHANGED, listener: typeof widthChanged | null): this;\n  on(type: typeof Column.EVENT_LABEL_CHANGED, listener: typeof labelChanged | null): this;\n  on(type: typeof Column.EVENT_METADATA_CHANGED, listener: typeof metaDataChanged | null): this;\n  on(type: typeof Column.EVENT_DIRTY, listener: typeof dirty | null): this;\n  on(type: typeof Column.EVENT_DIRTY_HEADER, listener: typeof dirtyHeader | null): this;\n  on(type: typeof Column.EVENT_DIRTY_VALUES, listener: typeof dirtyValues | null): this;\n  on(type: typeof Column.EVENT_DIRTY_CACHES, listener: typeof dirtyCaches | null): this;\n  on(type: typeof Column.EVENT_RENDERER_TYPE_CHANGED, listener: typeof rendererTypeChanged | null): this;\n  on(type: typeof Column.EVENT_GROUP_RENDERER_TYPE_CHANGED, listener: typeof groupRendererChanged | null): this;\n  on(type: typeof Column.EVENT_SUMMARY_RENDERER_TYPE_CHANGED, listener: typeof summaryRendererChanged | null): this;\n  on(type: typeof Column.EVENT_VISIBILITY_CHANGED, listener: typeof visibilityChanged | null): this;\n  on(type: string | string[], listener: IEventListener | null): this; // required for correct typings in *.d.ts\n  on(type: string | string[], listener: IEventListener | null): this {\n    return super.on(<any>type, listener);\n  }\n\n  getValue(row: IDataRow): (Date | null)[] | null {\n    const r = this.getDates(row);\n    return r.every((d) => d == null) ? null : r;\n  }\n\n  getLabels(row: IDataRow) {\n    return this.getDates(row).map((v) => (v instanceof Date) ? this.format(v) : '');\n  }\n\n  getDates(row: IDataRow): (Date | null)[] {\n    return super.getValues(row).map((v) => {\n      if (isMissingValue(v)) {\n        return null;\n      }\n      if (v instanceof Date) {\n        return v;\n      }\n      return this.parse(String(v));\n    });\n  }\n\n  getDate(row: IDataRow) {\n    const av = <Date[]>this.getDates(row).filter(Boolean);\n    if (av.length === 0) {\n      return null;\n    }\n    return new Date(compute(av, this.sort));\n  }\n\n  iterDate(row: IDataRow) {\n    return this.getDates(row);\n  }\n\n  getSortMethod() {\n    return this.sort;\n  }\n\n  setSortMethod(sort: EDateSort) {\n    if (this.sort === sort) {\n      return;\n    }\n    this.fire([DatesColumn.EVENT_SORTMETHOD_CHANGED], this.sort, this.sort = sort);\n    // sort by me if not already sorted by me\n    if (!this.isSortedByMe().asc) {\n      this.sortByMe();\n    }\n  }\n\n  dump(toDescRef: (desc: any) => any): any {\n    const r = super.dump(toDescRef);\n    r.sortMethod = this.getSortMethod();\n    r.filter = !isDummyDateFilter(this.currentFilter) ? this.currentFilter : null;\n    return r;\n  }\n\n  restore(dump: any, factory: ITypeFactory) {\n    super.restore(dump, factory);\n    if (dump.sortMethod) {\n      this.sort = dump.sortMethod;\n    }\n    if (dump.filter) {\n      this.currentFilter = restoreDateFilter(dump.filter);\n    }\n  }\n\n  toCompareValue(row: IDataRow) {\n    const vs = <Date[]>this.getDates(row).filter(Boolean);\n    if (!vs) {\n      return [0, 0];\n    }\n    return [vs.length, compute(vs, this.sort)];\n  }\n\n  toCompareValueType() {\n    return [chooseUIntByDataLength(this.dataLength), ECompareValueType.DOUBLE_ASC];\n  }\n\n  isFiltered() {\n    return DateColumn.prototype.isFiltered.call(this);\n  }\n\n  getFilter(): IDateFilter {\n    return DateColumn.prototype.getFilter.call(this);\n  }\n\n  setFilter(value: IDateFilter | null) {\n    DateColumn.prototype.setFilter.call(this, value);\n  }\n\n  filter(row: IDataRow) {\n    return DateColumn.prototype.filter.call(this, row);\n  }\n\n  clearFilter() {\n    return DateColumn.prototype.clearFilter.call(this);\n  }\n}\n\nfunction compute(arr: Date[], sort: EDateSort) {\n  switch (sort) {\n    case EDateSort.min:\n      return min(arr, (d) => d.getTime())!;\n    case EDateSort.max:\n      return max(arr, (d) => d.getTime())!;\n    case EDateSort.median:\n      return median(arr, (d) => d.getTime())!;\n  }\n}\n","import {timeFormat, timeParse} from 'd3-time-format';\nimport {IDateColumn, IDateFilter} from './IDateColumn';\nimport {IKeyValue} from './IArrayColumn';\nimport {IDataRow, ITypeFactory} from './interfaces';\nimport MapColumn, {IMapColumnDesc} from './MapColumn';\nimport {isMissingValue} from './missing';\nimport DatesColumn, {EDateSort, IDatesDesc} from './DatesColumn';\nimport DateColumn from './DateColumn';\nimport {dialogAddons, toolbar} from './annotations';\nimport Column, {widthChanged, labelChanged, metaDataChanged, dirty, dirtyHeader, dirtyValues, rendererTypeChanged, groupRendererChanged, summaryRendererChanged, visibilityChanged, dirtyCaches} from './Column';\nimport ValueColumn, {dataLoaded} from './ValueColumn';\nimport {IEventListener} from '../internal';\nimport {noDateFilter, isDummyDateFilter, restoreDateFilter} from './internalDate';\n\nexport declare type IDateMapColumnDesc = IDatesDesc & IMapColumnDesc<Date | null>;\n\n/**\n * emitted when the sort method property changes\n * @asMemberOf DatesMapColumn\n * @event\n */\nexport declare function sortMethodChanged_DMC(previous: EDateSort, current: EDateSort): void;\n\n/**\n * emitted when the filter property changes\n * @asMemberOf DatesMapColumn\n * @event\n */\nexport declare function filterChanged_DMC(previous: IDateFilter | null, current: IDateFilter | null): void;\n\n\n@toolbar('filterDate')\n@dialogAddons('sort', 'sortDates')\nexport default class DatesMapColumn extends MapColumn<Date | null> implements IDateColumn {\n  static readonly EVENT_SORTMETHOD_CHANGED = DatesColumn.EVENT_SORTMETHOD_CHANGED;\n  static readonly EVENT_FILTER_CHANGED = DateColumn.EVENT_FILTER_CHANGED;\n\n  private readonly format: (date: Date | null) => string;\n  private readonly parse: (date: string) => Date | null;\n  private sort: EDateSort;\n  private currentFilter: IDateFilter = noDateFilter();\n\n  constructor(id: string, desc: Readonly<IDateMapColumnDesc>) {\n    super(id, desc);\n    const f = timeFormat(desc.dateFormat || DateColumn.DEFAULT_DATE_FORMAT);\n    this.format = (v) => (v instanceof Date) ? f(v) : '';\n    this.parse = desc.dateParse ? timeParse(desc.dateParse) : timeParse(desc.dateFormat || DateColumn.DEFAULT_DATE_FORMAT);\n    this.sort = desc.sort || EDateSort.median;\n    this.setDefaultRenderer('default');\n  }\n\n  getFormatter() {\n    return this.format;\n  }\n\n  getParser() {\n    return this.parse;\n  }\n\n  protected createEventList() {\n    return super.createEventList().concat([DatesMapColumn.EVENT_SORTMETHOD_CHANGED, DatesMapColumn.EVENT_FILTER_CHANGED]);\n  }\n\n  on(type: typeof DatesMapColumn.EVENT_SORTMETHOD_CHANGED, listener: typeof sortMethodChanged_DMC | null): this;\n  on(type: typeof DatesMapColumn.EVENT_FILTER_CHANGED, listener: typeof filterChanged_DMC | null): this;\n  on(type: typeof ValueColumn.EVENT_DATA_LOADED, listener: typeof dataLoaded | null): this;\n  on(type: typeof Column.EVENT_WIDTH_CHANGED, listener: typeof widthChanged | null): this;\n  on(type: typeof Column.EVENT_LABEL_CHANGED, listener: typeof labelChanged | null): this;\n  on(type: typeof Column.EVENT_METADATA_CHANGED, listener: typeof metaDataChanged | null): this;\n  on(type: typeof Column.EVENT_DIRTY, listener: typeof dirty | null): this;\n  on(type: typeof Column.EVENT_DIRTY_HEADER, listener: typeof dirtyHeader | null): this;\n  on(type: typeof Column.EVENT_DIRTY_VALUES, listener: typeof dirtyValues | null): this;\n  on(type: typeof Column.EVENT_DIRTY_CACHES, listener: typeof dirtyCaches | null): this;\n  on(type: typeof Column.EVENT_RENDERER_TYPE_CHANGED, listener: typeof rendererTypeChanged | null): this;\n  on(type: typeof Column.EVENT_GROUP_RENDERER_TYPE_CHANGED, listener: typeof groupRendererChanged | null): this;\n  on(type: typeof Column.EVENT_SUMMARY_RENDERER_TYPE_CHANGED, listener: typeof summaryRendererChanged | null): this;\n  on(type: typeof Column.EVENT_VISIBILITY_CHANGED, listener: typeof visibilityChanged | null): this;\n  on(type: string | string[], listener: IEventListener | null): this; // required for correct typings in *.d.ts\n  on(type: string | string[], listener: IEventListener | null): this {\n    return super.on(<any>type, listener);\n  }\n\n  private parseValue(v: any) {\n    if (isMissingValue(v)) {\n      return null;\n    }\n    if (v instanceof Date) {\n      return v;\n    }\n    return this.parse(String(v));\n  }\n\n  getDateMap(row: IDataRow) {\n    return super.getMap(row).map(({key, value}) => ({\n      key,\n      value: this.parseValue(value)\n    }));\n  }\n\n  iterDate(row: IDataRow) {\n    return this.getDates(row);\n  }\n\n  getValue(row: IDataRow) {\n    const r = this.getDateMap(row);\n\n    return r.every((d) => d == null) ? null : r;\n  }\n\n  getLabels(row: IDataRow): IKeyValue<string>[] {\n    return this.getDateMap(row).map(({key, value}) => ({\n      key,\n      value: (value instanceof Date) ? this.format(value) : ''\n    }));\n  }\n\n  getDates(row: IDataRow): (Date | null)[] {\n    return this.getDateMap(row).map((v) => v.value);\n  }\n\n  getDate(row: IDataRow) {\n    return DatesColumn.prototype.getDate.call(this, row);\n  }\n\n  getSortMethod() {\n    return this.sort;\n  }\n\n  setSortMethod(sort: EDateSort) {\n    return DatesColumn.prototype.setSortMethod.call(this, sort);\n  }\n\n  dump(toDescRef: (desc: any) => any): any {\n    const r = super.dump(toDescRef);\n    r.sortMethod = this.getSortMethod();\n    r.filter = !isDummyDateFilter(this.currentFilter) ? this.currentFilter : null;\n    return r;\n  }\n\n  restore(dump: any, factory: ITypeFactory) {\n    super.restore(dump, factory);\n    if (dump.sortMethod) {\n      this.sort = dump.sortMethod;\n    }\n    if (dump.filter) {\n      this.currentFilter = restoreDateFilter(dump.filter);\n    }\n  }\n\n  isFiltered() {\n    return DateColumn.prototype.isFiltered.call(this);\n  }\n\n  getFilter(): IDateFilter {\n    return DateColumn.prototype.getFilter.call(this);\n  }\n\n  setFilter(value: IDateFilter | null) {\n    DateColumn.prototype.setFilter.call(this, value);\n  }\n\n  filter(row: IDataRow) {\n    return DateColumn.prototype.filter.call(this, row);\n  }\n\n  clearFilter() {\n    return DateColumn.prototype.clearFilter.call(this);\n  }\n}\n","import {Category, SupportType, toolbar, dialogAddons} from './annotations';\nimport Column, {widthChanged, labelChanged, metaDataChanged, dirty, dirtyHeader, dirtyValues, rendererTypeChanged, groupRendererChanged, summaryRendererChanged, visibilityChanged, dirtyCaches} from './Column';\nimport {IDataRow, IGroup, ECompareValueType} from './interfaces';\nimport {missingGroup} from './missing';\nimport {IEventListener, ISequence} from '../internal';\n\nexport function createGroupDesc(label = 'Group Name') {\n  return {type: 'group', label};\n}\n\nexport enum EGroupSortMethod {\n  name = 'name',\n  count = 'count'\n}\n\n/**\n * emitted when the sort method property changes\n * @asMemberOf GroupColumn\n * @event\n */\nexport declare function sortMethodChanged(previous: EGroupSortMethod, current: EGroupSortMethod): void;\n\n\n@SupportType()\n@toolbar('sortGroupBy')\n@dialogAddons('sortGroup', 'sortGroups')\n@Category('support')\nexport default class GroupColumn extends Column {\n  static readonly EVENT_SORTMETHOD_CHANGED = 'sortMethodChanged';\n\n  private groupSortMethod: EGroupSortMethod = EGroupSortMethod.name;\n\n  get frozen() {\n    return this.desc.frozen !== false;\n  }\n\n  protected createEventList() {\n    return super.createEventList().concat([GroupColumn.EVENT_SORTMETHOD_CHANGED]);\n  }\n\n  on(type: typeof GroupColumn.EVENT_SORTMETHOD_CHANGED, listener: typeof sortMethodChanged | null): this;\n  on(type: typeof Column.EVENT_WIDTH_CHANGED, listener: typeof widthChanged | null): this;\n  on(type: typeof Column.EVENT_LABEL_CHANGED, listener: typeof labelChanged | null): this;\n  on(type: typeof Column.EVENT_METADATA_CHANGED, listener: typeof metaDataChanged | null): this;\n  on(type: typeof Column.EVENT_DIRTY, listener: typeof dirty | null): this;\n  on(type: typeof Column.EVENT_DIRTY_HEADER, listener: typeof dirtyHeader | null): this;\n  on(type: typeof Column.EVENT_DIRTY_VALUES, listener: typeof dirtyValues | null): this;\n  on(type: typeof Column.EVENT_DIRTY_CACHES, listener: typeof dirtyCaches | null): this;\n  on(type: typeof Column.EVENT_RENDERER_TYPE_CHANGED, listener: typeof rendererTypeChanged | null): this;\n  on(type: typeof Column.EVENT_GROUP_RENDERER_TYPE_CHANGED, listener: typeof groupRendererChanged | null): this;\n  on(type: typeof Column.EVENT_SUMMARY_RENDERER_TYPE_CHANGED, listener: typeof summaryRendererChanged | null): this;\n  on(type: typeof Column.EVENT_VISIBILITY_CHANGED, listener: typeof visibilityChanged | null): this;\n  on(type: string | string[], listener: IEventListener | null): this; // required for correct typings in *.d.ts\n  on(type: string | string[], listener: IEventListener | null): this {\n    return super.on(<any>type, listener);\n  }\n\n  getLabel() {\n    return '';\n  }\n\n  getValue() {\n    return '';\n  }\n\n  getSortMethod() {\n    return this.groupSortMethod;\n  }\n\n  setSortMethod(sortMethod: EGroupSortMethod) {\n    if (this.groupSortMethod === sortMethod) {\n      return;\n    }\n    this.fire(GroupColumn.EVENT_SORTMETHOD_CHANGED, this.groupSortMethod, this.groupSortMethod = sortMethod);\n    // sort by me if not already sorted by me\n    if (!this.isGroupSortedByMe().asc) {\n      this.toggleMyGroupSorting();\n    }\n  }\n\n  toCompareGroupValue(rows: ISequence<IDataRow>, group: IGroup) {\n    if (this.groupSortMethod === 'count') {\n      return rows.length;\n    }\n    return group.name === missingGroup.name ? null : group.name.toLowerCase();\n  }\n\n  toCompareGroupValueType() {\n    return this.groupSortMethod === 'count' ? ECompareValueType.COUNT : ECompareValueType.STRING;\n  }\n}\n","import {Category, toolbar} from './annotations';\nimport CategoricalColumn from './CategoricalColumn';\nimport Column, {widthChanged, labelChanged, metaDataChanged, dirty, dirtyHeader, dirtyValues, dirtyCaches, rendererTypeChanged, groupRendererChanged, summaryRendererChanged, visibilityChanged} from './Column';\nimport {ICategoricalColumn, ICategory, ICategoricalColorMappingFunction} from './ICategoricalColumn';\nimport {IDataRow, IGroup, IValueColumnDesc, DEFAULT_COLOR, ITypeFactory} from './interfaces';\nimport {colorPool} from './internal';\nimport {missingGroup} from './missing';\nimport ValueColumn, {dataLoaded} from './ValueColumn';\nimport {IEventListener} from '../internal';\nimport {DEFAULT_CATEGORICAL_COLOR_FUNCTION} from './CategoricalColorMappingFunction';\n\nexport interface ICategoryNode extends ICategory {\n  children: Readonly<ICategoryNode>[];\n}\n\nexport interface IPartialCategoryNode extends Partial<ICategory> {\n  children: IPartialCategoryNode[];\n}\n\nexport interface IHierarchyDesc {\n  hierarchy: IPartialCategoryNode;\n  hierarchySeparator?: string;\n}\n\nexport declare type IHierarchyColumnDesc = IHierarchyDesc & IValueColumnDesc<string>;\n\nexport interface ICategoryInternalNode extends ICategory {\n  path: string;\n  children: Readonly<ICategoryInternalNode>[];\n}\n\nexport interface ICutOffNode {\n  node: Readonly<ICategoryInternalNode>;\n  maxDepth: number;\n}\n\n/**\n * emitted when the color mapping property changes\n * @asMemberOf HierarchyColumn\n * @event\n */\nexport declare function colorMappingChanged_HC(previous: ICategoricalColorMappingFunction, current: ICategoricalColorMappingFunction): void;\n\n\n/**\n * emitted when the cut off property changes\n * @asMemberOf HierarchyColumn\n * @event\n */\nexport declare function cutOffChanged(previous: ICutOffNode, current: ICutOffNode): void;\n\n/**\n * column for hierarchical categorical values\n */\n@toolbar('cutoff', 'group', 'groupBy', 'colorMappedCategorical')\n@Category('categorical')\nexport default class HierarchyColumn extends ValueColumn<string> implements ICategoricalColumn {\n  static readonly EVENT_CUTOFF_CHANGED = 'cutOffChanged';\n  static readonly EVENT_COLOR_MAPPING_CHANGED = 'colorMappingChanged';\n\n  private readonly hierarchySeparator: string;\n  readonly hierarchy: Readonly<ICategoryInternalNode>;\n\n  private currentNode: Readonly<ICategoryInternalNode>;\n  private currentMaxDepth: number = Infinity;\n  private currentLeaves: Readonly<ICategoryInternalNode>[] = [];\n  private readonly currentLeavesNameCache = new Map<string, Readonly<ICategoryInternalNode>>();\n  private readonly currentLeavesPathCache = new Map<string, Readonly<ICategoryInternalNode>>();\n\n  private colorMapping: ICategoricalColorMappingFunction;\n\n  constructor(id: string, desc: Readonly<IHierarchyColumnDesc>) {\n    super(id, desc);\n    this.hierarchySeparator = desc.hierarchySeparator || '.';\n    this.hierarchy = this.initHierarchy(desc.hierarchy);\n    this.currentNode = this.hierarchy;\n    this.currentLeaves = computeLeaves(this.currentNode, this.currentMaxDepth);\n    this.updateCaches();\n\n    this.setDefaultRenderer('categorical');\n    this.colorMapping = DEFAULT_CATEGORICAL_COLOR_FUNCTION;\n  }\n\n  private initHierarchy(root: IPartialCategoryNode) {\n    const colors = colorPool();\n    const s = this.hierarchySeparator;\n    const add = (prefix: string, node: IPartialCategoryNode): ICategoryInternalNode => {\n      const name = node.name == null ? String(node.value) : node.name;\n      const children = (node.children || []).map((child: IPartialCategoryNode | string): ICategoryInternalNode => {\n        if (typeof child === 'string') {\n          const path = prefix + child;\n          return {\n            path,\n            name: child,\n            label: path,\n            color: colors(),\n            value: 0,\n            children: []\n          };\n        }\n        const r = add(`${prefix}${name}${s}`, child);\n        if (!r.color) {\n          //hack to inject the next color\n          (<any>r).color = colors();\n        }\n        return r;\n      });\n      const path = prefix + name;\n      const label = node.label ? node.label : path;\n      return {path, name, children, label, color: node.color!, value: 0};\n    };\n    return add('', root);\n  }\n\n  get categories() {\n    return this.currentLeaves;\n  }\n\n  protected createEventList() {\n    return super.createEventList().concat([HierarchyColumn.EVENT_COLOR_MAPPING_CHANGED, HierarchyColumn.EVENT_CUTOFF_CHANGED]);\n  }\n\n  on(type: typeof HierarchyColumn.EVENT_CUTOFF_CHANGED, listener: typeof cutOffChanged | null): this;\n  on(type: typeof HierarchyColumn.EVENT_COLOR_MAPPING_CHANGED, listener: typeof colorMappingChanged_HC | null): this;\n  on(type: typeof ValueColumn.EVENT_DATA_LOADED, listener: typeof dataLoaded | null): this;\n  on(type: typeof Column.EVENT_WIDTH_CHANGED, listener: typeof widthChanged | null): this;\n  on(type: typeof Column.EVENT_LABEL_CHANGED, listener: typeof labelChanged | null): this;\n  on(type: typeof Column.EVENT_METADATA_CHANGED, listener: typeof metaDataChanged | null): this;\n  on(type: typeof Column.EVENT_DIRTY, listener: typeof dirty | null): this;\n  on(type: typeof Column.EVENT_DIRTY_HEADER, listener: typeof dirtyHeader | null): this;\n  on(type: typeof Column.EVENT_DIRTY_VALUES, listener: typeof dirtyValues | null): this;\n  on(type: typeof Column.EVENT_DIRTY_CACHES, listener: typeof dirtyCaches | null): this;\n  on(type: typeof Column.EVENT_RENDERER_TYPE_CHANGED, listener: typeof rendererTypeChanged | null): this;\n  on(type: typeof Column.EVENT_GROUP_RENDERER_TYPE_CHANGED, listener: typeof groupRendererChanged | null): this;\n  on(type: typeof Column.EVENT_SUMMARY_RENDERER_TYPE_CHANGED, listener: typeof summaryRendererChanged | null): this;\n  on(type: typeof Column.EVENT_VISIBILITY_CHANGED, listener: typeof visibilityChanged | null): this;\n  on(type: string | string[], listener: IEventListener | null): this; // required for correct typings in *.d.ts\n  on(type: string | string[], listener: IEventListener | null): this {\n    return super.on(<any>type, listener);\n  }\n\n  dump(toDescRef: (desc: any) => any): any {\n    const r = super.dump(toDescRef);\n    r.colorMapping = this.colorMapping.toJSON();\n    if (isFinite(this.currentMaxDepth)) {\n      r.maxDepth = this.currentMaxDepth;\n    }\n    if (this.currentNode !== this.hierarchy) {\n      r.cutOffNode = this.currentNode.path;\n    }\n    return r;\n  }\n\n  restore(dump: any, factory: ITypeFactory) {\n    super.restore(dump, factory);\n    this.colorMapping = factory.categoricalColorMappingFunction(dump.colorMapping, this.categories);\n    if (typeof dump.maxDepth !== 'undefined') {\n      this.currentMaxDepth = dump.maxDepth;\n    }\n    if (typeof dump.cutOffNode !== 'undefined') {\n      const path = dump.cutOffNode.split(this.hierarchySeparator);\n      let node: Readonly<ICategoryInternalNode> | null = this.hierarchy;\n\n      let act = path.shift();\n      while (act && node) {\n        if (node.name !== act) {\n          node = null;\n          break;\n        }\n        const next = path.shift();\n        if (!next) {\n          break;\n        }\n        act = next;\n        node = node.children.find((d) => d.name === act) || null;\n      }\n      this.currentNode = node || this.hierarchy;\n    }\n\n    if (typeof dump.maxDepth !== 'undefined' || typeof dump.cutOffNode !== 'undefined') {\n      this.currentLeaves = computeLeaves(this.currentNode, this.currentMaxDepth);\n      this.updateCaches();\n    }\n  }\n\n  getColorMapping() {\n    return this.colorMapping.clone();\n  }\n\n  setColorMapping(mapping: ICategoricalColorMappingFunction) {\n    if (this.colorMapping.eq(mapping)) {\n      return;\n    }\n    this.fire([CategoricalColumn.EVENT_COLOR_MAPPING_CHANGED, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY_HEADER, Column.EVENT_DIRTY], this.colorMapping.clone(), this.colorMapping = mapping);\n  }\n\n  getCutOff(): ICutOffNode {\n    return {\n      node: this.currentNode,\n      maxDepth: this.currentMaxDepth\n    };\n  }\n\n  setCutOff(value: ICutOffNode) {\n    const maxDepth = value.maxDepth == null ? Infinity : value.maxDepth;\n    if (this.currentNode === value.node && this.currentMaxDepth === maxDepth) {\n      return;\n    }\n    const bak = this.getCutOff();\n    this.currentNode = value.node;\n    this.currentMaxDepth = maxDepth;\n    this.currentLeaves = computeLeaves(value.node, maxDepth);\n    this.updateCaches();\n    this.fire([HierarchyColumn.EVENT_CUTOFF_CHANGED, Column.EVENT_DIRTY_HEADER, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY], bak, this.getCutOff());\n  }\n\n  getCategory(row: IDataRow) {\n    let v = super.getValue(row);\n    if (v == null || v === '') {\n      return null;\n    }\n    v = v.trim();\n    if (this.currentLeavesNameCache.has(v)) {\n      return this.currentLeavesNameCache.get(v)!;\n    }\n    if (this.currentLeavesPathCache.has(v)) {\n      return this.currentLeavesPathCache.get(v)!;\n    }\n    return this.currentLeaves.find((n) => {\n      //direct hit or is a child of it\n      return n.path === v || n.name === v || v!.startsWith(n.path + this.hierarchySeparator);\n    }) || null;\n  }\n\n  get dataLength() {\n    return this.currentLeaves.length;\n  }\n\n  get labels() {\n    return this.currentLeaves.map((d) => d.label);\n  }\n\n  getValue(row: IDataRow) {\n    const v = this.getCategory(row);\n    return v ? v.name : null;\n  }\n\n  getCategories(row: IDataRow) {\n    return [this.getCategory(row)];\n  }\n\n  iterCategory(row: IDataRow) {\n    return [this.getCategory(row)];\n  }\n\n  getLabel(row: IDataRow) {\n    return CategoricalColumn.prototype.getLabel.call(this, row);\n  }\n\n  getColor(row: IDataRow) {\n    return CategoricalColumn.prototype.getColor.call(this, row);\n  }\n\n  getLabels(row: IDataRow) {\n    return CategoricalColumn.prototype.getLabels.call(this, row);\n  }\n\n  getValues(row: IDataRow) {\n    return CategoricalColumn.prototype.getValues.call(this, row);\n  }\n\n  getMap(row: IDataRow) {\n    return CategoricalColumn.prototype.getMap.call(this, row);\n  }\n\n  getMapLabel(row: IDataRow) {\n    return CategoricalColumn.prototype.getMapLabel.call(this, row);\n  }\n\n  getSet(row: IDataRow) {\n    return CategoricalColumn.prototype.getSet.call(this, row);\n  }\n\n  toCompareValue(row: IDataRow) {\n    return CategoricalColumn.prototype.toCompareValue.call(this, row);\n  }\n\n  toCompareValueType() {\n    return CategoricalColumn.prototype.toCompareValueType.call(this);\n  }\n\n  group(row: IDataRow): IGroup {\n    const base = this.getCategory(row);\n    if (!base) {\n      return Object.assign({}, missingGroup);\n    }\n    return {name: base.label, color: base.color};\n  }\n\n  private updateCaches() {\n    this.currentLeavesPathCache.clear();\n    this.currentLeavesNameCache.clear();\n\n    this.currentLeaves.forEach((n) => {\n      this.currentLeavesPathCache.set(n.path, n);\n      this.currentLeavesNameCache.set(n.name, n);\n    });\n  }\n}\n\nfunction computeLeaves(node: ICategoryInternalNode, maxDepth: number = Infinity) {\n  const leaves: ICategoryInternalNode[] = [];\n  //depth first\n  const visit = (node: ICategoryInternalNode, depth: number) => {\n    //hit or end\n    if (depth >= maxDepth || node.children.length === 0) {\n      leaves.push(node);\n    } else {\n      // go down\n      node.children.forEach((c) => visit(c, depth + 1));\n    }\n  };\n  visit(node, 0);\n  return leaves;\n}\n\nexport function resolveInnerNodes(node: ICategoryInternalNode) {\n  //breath first\n  const queue: ICategoryInternalNode[] = [node];\n  let index = 0;\n  while (index < queue.length) {\n    const next = queue[index++];\n    for (const n of next.children) {\n      queue.push(n);\n    }\n  }\n  return queue;\n}\n\nexport function isHierarchical(categories: (string | Partial<ICategory>)[]) {\n  if (categories.length === 0 || typeof categories[0] === 'string') {\n    return false;\n  }\n  // check if any has a given parent name\n  return categories.some((c) => (<any>c).parent != null);\n}\n\nexport function deriveHierarchy(categories: (Partial<ICategory> & {parent: string | null})[]) {\n  const lookup = new Map<string, ICategoryNode>();\n  categories.forEach((c) => {\n    const p = c.parent || '';\n    // set and fill up proxy\n    const item = Object.assign(<ICategoryNode>{\n      children: [],\n      label: c.name!,\n      name: c.name!,\n      color: DEFAULT_COLOR,\n      value: 0\n    }, lookup.get(c.name!) || {}, c);\n    lookup.set(c.name!, item);\n\n    if (!lookup.has(p)) {\n      // create proxy\n      lookup.set(p, {name: p, children: [], label: p, value: 0, color: DEFAULT_COLOR});\n    }\n    lookup.get(p)!.children.push(item);\n  });\n  const root = lookup.get('')!;\n  console.assert(root !== undefined, 'hierarchy with no root');\n  if (root.children.length === 1) {\n    return root.children[0];\n  }\n  return root;\n}\n","import {interpolateBlues, interpolateGreens, interpolateGreys, interpolateOranges, interpolatePurples, interpolateReds, interpolateCool, interpolateCubehelixDefault, interpolateWarm, interpolatePlasma, interpolateMagma, interpolateViridis, interpolateInferno, interpolateYlOrRd, interpolateYlOrBr, interpolateBuGn, interpolateBuPu, interpolateGnBu, interpolateOrRd, interpolatePuBuGn, interpolatePuBu, interpolatePuRd, interpolateRdPu, interpolateYlGnBu, interpolateYlGn, interpolateRainbow, interpolateBrBG, interpolatePRGn, interpolatePiYG, interpolatePuOr, interpolateRdBu, interpolateRdGy, interpolateRdYlBu, interpolateRdYlGn, interpolateSpectral} from 'd3-scale-chromatic';\nimport {equal} from '../internal';\nimport {scaleLinear} from 'd3-scale';\nimport {IColorMappingFunction} from '.';\nimport {DEFAULT_COLOR, ITypedDump, ITypeFactory} from './interfaces';\nimport {IColorMappingFunctionConstructor} from './INumberColumn';\n\nexport class SequentialColorFunction implements IColorMappingFunction {\n  public static readonly FUNCTIONS: {[key: string]: (v: number) => string} = {\n    interpolateBlues,\n    interpolateGreens,\n    interpolateGreys,\n    interpolateOranges,\n    interpolatePurples,\n    interpolateReds,\n    interpolateCool,\n    interpolateCubehelixDefault,\n    interpolateWarm,\n    interpolatePlasma,\n    interpolateMagma,\n    interpolateViridis,\n    interpolateInferno,\n    interpolateYlOrRd,\n    interpolateYlOrBr,\n    interpolateBuGn,\n    interpolateBuPu,\n    interpolateGnBu,\n    interpolateOrRd,\n    interpolatePuBuGn,\n    interpolatePuBu,\n    interpolatePuRd,\n    interpolateRdPu,\n    interpolateYlGnBu,\n    interpolateYlGn,\n    interpolateRainbow\n  };\n\n  public readonly apply: (v: number) => string;\n\n  constructor(public readonly name: string) {\n    this.apply = SequentialColorFunction.FUNCTIONS[name] || interpolateBlues;\n  }\n\n  toJSON() {\n    return this.name;\n  }\n\n  clone() {\n    return this; // no clone needed since not parameterized\n  }\n\n  eq(other: IColorMappingFunction): boolean {\n    return other instanceof SequentialColorFunction && other.name === this.name;\n  }\n}\n\nexport class DivergentColorFunction implements IColorMappingFunction {\n  public static readonly FUNCTIONS: {[key: string]: (v: number) => string} = {\n    interpolateBrBG,\n    interpolatePRGn,\n    interpolatePiYG,\n    interpolatePuOr,\n    interpolateRdBu,\n    interpolateRdGy,\n    interpolateRdYlBu,\n    interpolateRdYlGn,\n    interpolateSpectral\n  };\n\n  public readonly apply: (v: number) => string;\n\n  constructor(public readonly name: string) {\n    this.apply = DivergentColorFunction.FUNCTIONS[name] || interpolateBlues;\n  }\n\n  toJSON() {\n    return this.name;\n  }\n\n  clone() {\n    return this; // no clone needed since not parameterized\n  }\n\n  eq(other: IColorMappingFunction): boolean {\n    return other instanceof DivergentColorFunction && other.name === this.name;\n  }\n}\n\n\nexport class UnknownColorFunction implements IColorMappingFunction {\n  constructor(public readonly apply: (v: number) => string) {\n  }\n\n  toJSON() {\n    return this.apply.toString();\n  }\n\n  clone() {\n    return this; // no clone needed since not parameterized\n  }\n\n  eq(other: IColorMappingFunction): boolean {\n    return other instanceof UnknownColorFunction && other.apply === this.apply;\n  }\n}\n\nexport class SolidColorFunction implements IColorMappingFunction {\n  constructor(public readonly color: string) {\n\n  }\n\n  apply() {\n    return this.color;\n  }\n\n  toJSON() {\n    return this.color;\n  }\n\n  clone() {\n    return this; // no clone needed since not parameterized\n  }\n\n  eq(other: IColorMappingFunction): boolean {\n    return other instanceof SolidColorFunction && other.color === this.color;\n  }\n}\n\nexport class QuantizedColorFunction implements IColorMappingFunction {\n  public readonly base: IColorMappingFunction;\n  public readonly steps: number;\n\n  constructor(dump: ITypedDump, factory: ITypeFactory);\n  constructor(base: IColorMappingFunction, steps: number)\n  constructor(base: IColorMappingFunction | ITypedDump, steps: number | ITypeFactory) {\n    if (typeof (<any>base).apply === 'function') {\n      this.base = <IColorMappingFunction>base;\n      this.steps = steps == null ? 5 : <number>steps;\n    } else {\n      const dump = <ITypedDump>base;\n      this.base = (<ITypeFactory>steps).colorMappingFunction(dump.base);\n      this.steps = dump.steps;\n    }\n  }\n\n  apply(v: number) {\n    return this.base.apply(quantize(v, this.steps));\n  }\n\n  toJSON() {\n    return {\n      type: 'quantized',\n      base: this.base.toJSON(),\n      steps: this.steps\n    };\n  }\n\n  clone(): QuantizedColorFunction {\n    return new QuantizedColorFunction(this.base.clone(), this.steps);\n  }\n\n  eq(other: IColorMappingFunction): boolean {\n    return other instanceof QuantizedColorFunction && other.base.eq(this.base) && other.steps === this.steps;\n  }\n}\n\nexport class CustomColorMappingFunction implements IColorMappingFunction {\n  private readonly scale = scaleLinear<string>();\n  public readonly entries: {value: number, color: string}[];\n\n  constructor(dump: ITypedDump);\n  constructor(entries: {value: number, color: string}[]);\n  constructor(entries: ITypedDump | {value: number, color: string}[]) {\n    this.entries = Array.isArray(entries) ? entries : entries.entries;\n    this.scale\n      .domain(this.entries.map((d) => d.value))\n      .range(this.entries.map((d) => d.color))\n      .clamp(true);\n  }\n\n  apply(v: number) {\n    return this.scale(v);\n  }\n\n  toJSON() {\n    return {\n      type: 'custom',\n      entries: this.entries\n    };\n  }\n\n  clone() {\n    return new CustomColorMappingFunction(this.entries.slice());\n  }\n\n  eq(other: IColorMappingFunction): boolean {\n    return other instanceof CustomColorMappingFunction && equal(this.entries, other.entries);\n  }\n}\n\n/**\n * @internal\n */\nexport function quantize(v: number, steps: number) {\n  const perStep = 1 / steps;\n  if (v <= perStep) {\n    return 0;\n  }\n  if (v >= (1 - perStep)) {\n    return 1;\n  }\n  for (let acc = 0; acc < 1; acc += perStep) {\n    if (v < acc) {\n      return acc - perStep / 2; // center\n    }\n  }\n  return v;\n}\n\nexport function colorMappingFunctions() {\n  const types: any = {\n    [DEFAULT_COLOR]: SolidColorFunction,\n    quantized: QuantizedColorFunction,\n    custom: CustomColorMappingFunction\n  };\n  for (const key of Object.keys(SequentialColorFunction.FUNCTIONS)) {\n    types[key] = SequentialColorFunction;\n  }\n  for (const key of Object.keys(DivergentColorFunction.FUNCTIONS)) {\n    types[key] = DivergentColorFunction;\n  }\n  return types;\n}\n\nexport const DEFAULT_COLOR_FUNCTION = new SolidColorFunction(DEFAULT_COLOR);\n\n\n/**\n * @internal\n */\nexport function createColorMappingFunction(types: {[type: string]: IColorMappingFunctionConstructor}, factory: ITypeFactory) {\n  return (dump: ITypedDump | string | ((v: number) => string)): IColorMappingFunction => {\n    if (!dump) {\n      return DEFAULT_COLOR_FUNCTION;\n    }\n    if (typeof dump === 'function') {\n      return new UnknownColorFunction(dump);\n    }\n    const typeName = typeof dump === 'string' ? dump : dump.type;\n    const type = types[typeName];\n    if (type) {\n      return new type(dump, factory);\n    }\n    if (Array.isArray(dump)) {\n      return new CustomColorMappingFunction(dump);\n    }\n    return new SolidColorFunction(dump.toString());\n  };\n}\n","import {suffix, IEventListener, ISequence} from '../internal';\nimport {toolbar, SortByDefault} from './annotations';\nimport Column, {widthChanged, labelChanged, metaDataChanged, dirty, dirtyHeader, dirtyValues, rendererTypeChanged, groupRendererChanged, summaryRendererChanged, visibilityChanged, dirtyCaches} from './Column';\nimport CompositeColumn, {addColumn, filterChanged, moveColumn, removeColumn} from './CompositeColumn';\nimport {IDataRow, IGroup, IColumnDesc, DEFAULT_COLOR} from './interfaces';\nimport {isNumberColumn, INumberColumn, isMapAbleColumn, IColorMappingFunction, IMappingFunction, IMapAbleColumn, INumberFilter} from './INumberColumn';\nimport NumberColumn from './NumberColumn';\nimport {DEFAULT_FORMATTER, noNumberFilter} from './internalNumber';\nimport {ScaleMappingFunction} from './MappingFunction';\nimport {DEFAULT_COLOR_FUNCTION} from './ColorMappingFunction';\n\n\n/**\n *  factory for creating a description creating a max column\n * @param label\n * @returns {{type: string, label: string}}\n */\nexport function createImpositionDesc(label: string = 'Imposition') {\n  return {type: 'imposition', label};\n}\n\n/**\n * emitted when the mapping property changes\n * @asMemberOf ImpositionCompositeColumn\n * @event\n */\nexport declare function mappingChanged_ICC(previous: IMappingFunction, current: IMappingFunction): void;\n\n/**\n * emitted when the color mapping property changes\n * @asMemberOf ImpositionCompositeColumn\n * @event\n */\nexport declare function colorMappingChanged_ICC(previous: IColorMappingFunction, current: IColorMappingFunction): void;\n\n/**\n * implementation of a combine column, standard operations how to select\n */\n@toolbar('filterNumber', 'colorMapped', 'editMapping')\n@SortByDefault('descending')\nexport default class ImpositionCompositeColumn extends CompositeColumn implements INumberColumn, IMapAbleColumn {\n  static readonly EVENT_MAPPING_CHANGED = NumberColumn.EVENT_MAPPING_CHANGED;\n  static readonly EVENT_COLOR_MAPPING_CHANGED = NumberColumn.EVENT_COLOR_MAPPING_CHANGED;\n\n  constructor(id: string, desc: Readonly<IColumnDesc>) {\n    super(id, desc);\n\n    this.setDefaultRenderer('number');\n    this.setDefaultGroupRenderer('boxplot');\n    this.setDefaultSummaryRenderer('histogram');\n  }\n\n  get label() {\n    const l = super.getMetaData().label;\n    const c = this._children;\n    if (l !== 'Imposition' || c.length === 0) {\n      return l;\n    }\n    if (c.length === 1) {\n      return c[0].label;\n    }\n    const w = this.wrapper;\n    const rest = this.rest;\n    return `${w ? w.label : '?'} (${rest.map((c) => c.label).join(', ')})`;\n  }\n\n  private get wrapper(): INumberColumn | null {\n    return <INumberColumn>this._children.find(isNumberColumn) || null;\n  }\n\n  private get rest() {\n    const w = this.wrapper;\n    return this._children.filter((d) => d !== w);\n  }\n\n  protected createEventList() {\n    return super.createEventList().concat([ImpositionCompositeColumn.EVENT_MAPPING_CHANGED, ImpositionCompositeColumn.EVENT_COLOR_MAPPING_CHANGED]);\n  }\n\n  on(type: typeof ImpositionCompositeColumn.EVENT_COLOR_MAPPING_CHANGED, listener: typeof colorMappingChanged_ICC | null): this;\n  on(type: typeof ImpositionCompositeColumn.EVENT_MAPPING_CHANGED, listener: typeof mappingChanged_ICC | null): this;\n  on(type: typeof CompositeColumn.EVENT_FILTER_CHANGED, listener: typeof filterChanged | null): this;\n  on(type: typeof CompositeColumn.EVENT_ADD_COLUMN, listener: typeof addColumn | null): this;\n  on(type: typeof CompositeColumn.EVENT_MOVE_COLUMN, listener: typeof moveColumn | null): this;\n  on(type: typeof CompositeColumn.EVENT_REMOVE_COLUMN, listener: typeof removeColumn | null): this;\n  on(type: typeof Column.EVENT_WIDTH_CHANGED, listener: typeof widthChanged | null): this;\n  on(type: typeof Column.EVENT_LABEL_CHANGED, listener: typeof labelChanged | null): this;\n  on(type: typeof Column.EVENT_METADATA_CHANGED, listener: typeof metaDataChanged | null): this;\n  on(type: typeof Column.EVENT_DIRTY, listener: typeof dirty | null): this;\n  on(type: typeof Column.EVENT_DIRTY_HEADER, listener: typeof dirtyHeader | null): this;\n  on(type: typeof Column.EVENT_DIRTY_VALUES, listener: typeof dirtyValues | null): this;\n  on(type: typeof Column.EVENT_DIRTY_CACHES, listener: typeof dirtyCaches | null): this;\n  on(type: typeof Column.EVENT_RENDERER_TYPE_CHANGED, listener: typeof rendererTypeChanged | null): this;\n  on(type: typeof Column.EVENT_GROUP_RENDERER_TYPE_CHANGED, listener: typeof groupRendererChanged | null): this;\n  on(type: typeof Column.EVENT_SUMMARY_RENDERER_TYPE_CHANGED, listener: typeof summaryRendererChanged | null): this;\n  on(type: typeof Column.EVENT_VISIBILITY_CHANGED, listener: typeof visibilityChanged | null): this;\n  on(type: string | string[], listener: IEventListener | null): this; // required for correct typings in *.d.ts\n  on(type: string | string[], listener: IEventListener | null): this {\n    return super.on(type, listener);\n  }\n\n  getLabel(row: IDataRow) {\n    const c = this._children;\n    if (c.length === 0) {\n      return '';\n    }\n    if (c.length === 1) {\n      return c[0].getLabel(row);\n    }\n    const w = this.wrapper;\n    const rest = this.rest;\n    return `${w ? w.getLabel(row) : '?'} (${rest.map((c) => `${c.label} = ${c.getLabel(row)}`).join(', ')})`;\n  }\n\n  getColor(row: IDataRow) {\n    const c = this._children;\n    switch (c.length) {\n      case 0:\n        return DEFAULT_COLOR;\n      case 1:\n        return c[0].getColor(row);\n      default:\n        return this.rest[0].getColor(row);\n    }\n  }\n\n  getNumberFormat() {\n    const w = this.wrapper;\n    return w ? w.getNumberFormat() : DEFAULT_FORMATTER;\n  }\n\n  getValue(row: IDataRow) {\n    const w = this.wrapper;\n    return w ? w.getValue(row) : NaN;\n  }\n\n  getNumber(row: IDataRow) {\n    const w = this.wrapper;\n    return w ? w.getNumber(row) : NaN;\n  }\n\n  getRawNumber(row: IDataRow) {\n    const w = this.wrapper;\n    return w ? w.getRawNumber(row) : NaN;\n  }\n\n  iterNumber(row: IDataRow) {\n    return [this.getNumber(row)];\n  }\n\n  iterRawNumber(row: IDataRow) {\n    return [this.getRawNumber(row)];\n  }\n\n  getExportValue(row: IDataRow, format: 'text' | 'json'): any {\n    if (format === 'json') {\n      const value = this.getRawNumber(row);\n      if (isNaN(value)) {\n        return null;\n      }\n      return {\n        label: this.getLabel(row),\n        color: this.getColor(row),\n        value\n      };\n    }\n    return super.getExportValue(row, format);\n  }\n\n  getMapping() {\n    const w = this.wrapper;\n    return w && isMapAbleColumn(w) ? w.getMapping() : new ScaleMappingFunction();\n  }\n\n  getOriginalMapping() {\n    const w = this.wrapper;\n    return w && isMapAbleColumn(w) ? w.getOriginalMapping() : new ScaleMappingFunction();\n  }\n\n  setMapping(mapping: IMappingFunction): void {\n    const w = this.wrapper;\n    return w && isMapAbleColumn(w) ? w.setMapping(mapping) : undefined;\n  }\n\n  getColorMapping() {\n    const w = this.wrapper;\n    return w && isMapAbleColumn(w) ? w.getColorMapping() : DEFAULT_COLOR_FUNCTION;\n  }\n\n  setColorMapping(mapping: IColorMappingFunction) {\n    const w = this.wrapper;\n    return w && isMapAbleColumn(w) ? w.setColorMapping(mapping) : undefined;\n  }\n\n  getFilter() {\n    const w = this.wrapper;\n    return w && isMapAbleColumn(w) ? w.getFilter() : noNumberFilter();\n  }\n\n  setFilter(value: INumberFilter | null): void {\n    const w = this.wrapper;\n    return w && isMapAbleColumn(w) ? w.setFilter(value) : undefined;\n  }\n\n  getRange(): [string, string] {\n    const w = this.wrapper;\n    return w && isMapAbleColumn(w) ? w.getRange() : ['0', '1'];\n  }\n\n  toCompareValue(row: IDataRow) {\n    return NumberColumn.prototype.toCompareValue.call(this, row);\n  }\n\n  toCompareValueType() {\n    return NumberColumn.prototype.toCompareValueType.call(this);\n  }\n\n  toCompareGroupValue(rows: ISequence<IDataRow>, group: IGroup) {\n    return NumberColumn.prototype.toCompareGroupValue.call(this, rows, group);\n  }\n\n  toCompareGroupValueType() {\n    return NumberColumn.prototype.toCompareGroupValueType.call(this);\n  }\n\n  insert(col: Column, index: number): Column | null {\n    if (this._children.length === 1 && !this.wrapper && !isNumberColumn(col)) {\n      // at least one has to be a number column\n      return null;\n    }\n    if (this._children.length >= 2) {\n      // limit to two\n      return null;\n    }\n    return super.insert(col, index);\n  }\n\n  protected insertImpl(col: Column, index: number) {\n    if (isNumberColumn(col)) {\n      this.forward(col, ...suffix('.impose', NumberColumn.EVENT_MAPPING_CHANGED));\n    }\n    if (isMapAbleColumn(col)) {\n      this.forward(col, ...suffix('.impose', NumberColumn.EVENT_COLOR_MAPPING_CHANGED));\n    }\n    return super.insertImpl(col, index);\n  }\n\n  protected removeImpl(child: Column, index: number) {\n    if (isNumberColumn(child)) {\n      this.unforward(child, ...suffix('.impose', NumberColumn.EVENT_MAPPING_CHANGED));\n    }\n    if (isMapAbleColumn(child)) {\n      this.unforward(child, ...suffix('.impose', NumberColumn.EVENT_COLOR_MAPPING_CHANGED));\n    }\n    return super.removeImpl(child, index);\n  }\n}\n","import {format} from 'd3-format';\nimport {boxplotBuilder, IAdvancedBoxPlotData, IEventListener} from '../internal';\nimport {dialogAddons, SortByDefault, toolbar} from './annotations';\nimport ArrayColumn, {IArrayColumnDesc} from './ArrayColumn';\nimport Column, {dirty, dirtyCaches, dirtyHeader, dirtyValues, groupRendererChanged, labelChanged, metaDataChanged, rendererTypeChanged, summaryRendererChanged, visibilityChanged, widthChanged} from './Column';\nimport {IArrayDesc} from './IArrayColumn';\nimport {IDataRow, ECompareValueType, ITypeFactory} from './interfaces';\nimport {DEFAULT_FORMATTER, getBoxPlotNumber, isDummyNumberFilter, noNumberFilter, restoreNumberFilter, toCompareBoxPlotValue} from './internalNumber';\nimport {EAdvancedSortMethod, IColorMappingFunction, IMappingFunction, INumberDesc, INumberFilter, INumbersColumn} from './INumberColumn';\nimport {restoreMapping} from './MappingFunction';\nimport {isMissingValue} from './missing';\nimport NumberColumn from './NumberColumn';\nimport ValueColumn, {dataLoaded} from './ValueColumn';\n\n\nexport interface INumbersDesc extends IArrayDesc, INumberDesc {\n  readonly sort?: EAdvancedSortMethod;\n}\n\nexport declare type INumbersColumnDesc = INumbersDesc & IArrayColumnDesc<number>;\n\n/**\n * emitted when the mapping property changes\n * @asMemberOf NumbersColumn\n * @event\n */\nexport declare function mappingChanged_NCS(previous: IMappingFunction, current: IMappingFunction): void;\n/**\n * emitted when the color mapping property changes\n * @asMemberOf NumbersColumn\n * @event\n */\nexport declare function colorMappingChanged_NCS(previous: IColorMappingFunction, current: IColorMappingFunction): void;\n\n/**\n * emitted when the sort method property changes\n * @asMemberOf NumbersColumn\n * @event\n */\nexport declare function sortMethodChanged_NCS(previous: EAdvancedSortMethod, current: EAdvancedSortMethod): void;\n\n/**\n * emitted when the filter property changes\n * @asMemberOf NumbersColumn\n * @event\n */\nexport declare function filterChanged_NCS(previous: INumberFilter | null, current: INumberFilter | null): void;\n\n@toolbar('filterNumber', 'colorMapped', 'editMapping')\n@dialogAddons('sort', 'sortNumbers')\n@SortByDefault('descending')\nexport default class NumbersColumn extends ArrayColumn<number> implements INumbersColumn {\n  static readonly EVENT_MAPPING_CHANGED = NumberColumn.EVENT_MAPPING_CHANGED;\n  static readonly EVENT_COLOR_MAPPING_CHANGED = NumberColumn.EVENT_COLOR_MAPPING_CHANGED;\n  static readonly EVENT_SORTMETHOD_CHANGED = NumberColumn.EVENT_SORTMETHOD_CHANGED;\n  static readonly EVENT_FILTER_CHANGED = NumberColumn.EVENT_FILTER_CHANGED;\n\n  static readonly CENTER = 0;\n\n  private readonly numberFormat: (n: number) => string = DEFAULT_FORMATTER;\n\n  private sort: EAdvancedSortMethod;\n  private mapping: IMappingFunction;\n  private original: IMappingFunction;\n  private colorMapping: IColorMappingFunction;\n  /**\n   * currently active filter\n   * @type {{min: number, max: number}}\n   * @private\n   */\n  private currentFilter: INumberFilter = noNumberFilter();\n\n  constructor(id: string, desc: Readonly<INumbersColumnDesc>, factory: ITypeFactory) {\n    super(id, desc);\n    this.mapping = restoreMapping(desc, factory);\n    this.original = this.mapping.clone();\n    this.colorMapping = factory.colorMappingFunction(desc.colorMapping || desc.color);\n\n    if (desc.numberFormat) {\n      this.numberFormat = format(desc.numberFormat);\n    }\n\n    this.sort = desc.sort || EAdvancedSortMethod.median;\n\n    // better initialize the default with based on the data length\n    if (this.dataLength) {\n      this.setDefaultWidth(Math.min(Math.max(100, this.dataLength! * 10), 500));\n    }\n    this.setDefaultRenderer('heatmap');\n    this.setDefaultGroupRenderer('heatmap');\n    this.setDefaultSummaryRenderer('histogram');\n  }\n\n  getNumberFormat() {\n    return this.numberFormat;\n  }\n\n  toCompareValue(row: IDataRow): number {\n    return toCompareBoxPlotValue(this, row);\n  }\n\n  toCompareValueType() {\n    return ECompareValueType.FLOAT;\n  }\n\n  getRawNumbers(row: IDataRow) {\n    return this.getRawValue(row);\n  }\n\n  getBoxPlotData(row: IDataRow): IAdvancedBoxPlotData | null {\n    const data = this.getRawValue(row);\n    if (data == null) {\n      return null;\n    }\n    const b = boxplotBuilder();\n    for (const d of data) {\n      b.push(isMissingValue(d) ? NaN : this.mapping.apply(d));\n    }\n    return b.build();\n  }\n\n  getRange() {\n    return this.mapping.getRange(this.numberFormat);\n  }\n\n  getRawBoxPlotData(row: IDataRow): IAdvancedBoxPlotData | null {\n    const data = this.getRawValue(row);\n    if (data == null) {\n      return null;\n    }\n    const b = boxplotBuilder();\n    for (const d of data) {\n      b.push(isMissingValue(d) ? NaN : d);\n    }\n    return b.build();\n  }\n\n  getNumbers(row: IDataRow) {\n    return this.getValues(row);\n  }\n\n  getNumber(row: IDataRow): number {\n    return getBoxPlotNumber(this, row, 'normalized');\n  }\n\n  getRawNumber(row: IDataRow): number {\n    return getBoxPlotNumber(this, row, 'raw');\n  }\n\n  getValue(row: IDataRow) {\n    const v = this.getValues(row);\n    return v.every(isNaN) ? null : v;\n  }\n\n  getValues(row: IDataRow) {\n    return this.getRawValue(row).map((d) => isNaN(d) ? NaN : this.mapping.apply(d));\n  }\n\n  iterNumber(row: IDataRow) {\n    return this.getNumbers(row);\n  }\n\n  iterRawNumber(row: IDataRow) {\n    return this.getRawNumbers(row);\n  }\n\n  getRawValue(row: IDataRow) {\n    const r = super.getRaw(row);\n    return r == null ? [] : r.map((d) => isMissingValue(d) ? NaN : +d);\n  }\n\n  getExportValue(row: IDataRow, format: 'text' | 'json'): any {\n    return format === 'json' ? this.getRawValue(row) : super.getExportValue(row, format);\n  }\n\n  getLabels(row: IDataRow) {\n    return this.getValues(row).map(this.numberFormat);\n  }\n\n  getSortMethod() {\n    return this.sort;\n  }\n\n  setSortMethod(sort: EAdvancedSortMethod) {\n    if (this.sort === sort) {\n      return;\n    }\n    this.fire([NumbersColumn.EVENT_SORTMETHOD_CHANGED, NumberColumn.EVENT_DIRTY_HEADER, NumberColumn.EVENT_DIRTY_VALUES, NumbersColumn.EVENT_DIRTY_CACHES, NumberColumn.EVENT_DIRTY], this.sort, this.sort = sort);\n    // sort by me if not already sorted by me\n    if (!this.isSortedByMe().asc) {\n      this.sortByMe();\n    }\n  }\n\n  dump(toDescRef: (desc: any) => any): any {\n    const r = super.dump(toDescRef);\n    r.sortMethod = this.getSortMethod();\n    r.filter = !isDummyNumberFilter(this.currentFilter) ? this.currentFilter : null;\n    r.map = this.mapping.toJSON();\n    r.colorMapping = this.colorMapping.toJSON();\n    return r;\n  }\n\n  restore(dump: any, factory: ITypeFactory) {\n    super.restore(dump, factory);\n    if (dump.sortMethod) {\n      this.sort = dump.sortMethod;\n    }\n    if (dump.filter) {\n      this.currentFilter = restoreNumberFilter(dump.filter);\n    }\n    if (dump.map || dump.domain) {\n      this.mapping = restoreMapping(dump, factory);\n    }\n    if (dump.colorMapping) {\n      this.colorMapping = factory.colorMappingFunction(dump.colorMapping);\n    }\n  }\n\n  protected createEventList() {\n    return super.createEventList().concat([NumbersColumn.EVENT_COLOR_MAPPING_CHANGED, NumbersColumn.EVENT_MAPPING_CHANGED, NumbersColumn.EVENT_SORTMETHOD_CHANGED, NumbersColumn.EVENT_FILTER_CHANGED]);\n  }\n\n  on(type: typeof NumbersColumn.EVENT_COLOR_MAPPING_CHANGED, listener: typeof colorMappingChanged_NCS | null): this;\n  on(type: typeof NumbersColumn.EVENT_MAPPING_CHANGED, listener: typeof mappingChanged_NCS | null): this;\n  on(type: typeof NumbersColumn.EVENT_SORTMETHOD_CHANGED, listener: typeof sortMethodChanged_NCS | null): this;\n  on(type: typeof NumbersColumn.EVENT_FILTER_CHANGED, listener: typeof filterChanged_NCS | null): this;\n  on(type: typeof ValueColumn.EVENT_DATA_LOADED, listener: typeof dataLoaded | null): this;\n  on(type: typeof Column.EVENT_WIDTH_CHANGED, listener: typeof widthChanged | null): this;\n  on(type: typeof Column.EVENT_LABEL_CHANGED, listener: typeof labelChanged | null): this;\n  on(type: typeof Column.EVENT_METADATA_CHANGED, listener: typeof metaDataChanged | null): this;\n  on(type: typeof Column.EVENT_DIRTY, listener: typeof dirty | null): this;\n  on(type: typeof Column.EVENT_DIRTY_HEADER, listener: typeof dirtyHeader | null): this;\n  on(type: typeof Column.EVENT_DIRTY_VALUES, listener: typeof dirtyValues | null): this;\n  on(type: typeof Column.EVENT_DIRTY_CACHES, listener: typeof dirtyCaches | null): this;\n  on(type: typeof Column.EVENT_RENDERER_TYPE_CHANGED, listener: typeof rendererTypeChanged | null): this;\n  on(type: typeof Column.EVENT_GROUP_RENDERER_TYPE_CHANGED, listener: typeof groupRendererChanged | null): this;\n  on(type: typeof Column.EVENT_SUMMARY_RENDERER_TYPE_CHANGED, listener: typeof summaryRendererChanged | null): this;\n  on(type: typeof Column.EVENT_VISIBILITY_CHANGED, listener: typeof visibilityChanged | null): this;\n  on(type: string | string[], listener: IEventListener | null): this; // required for correct typings in *.d.ts\n  on(type: string | string[], listener: IEventListener | null): this {\n    return super.on(<any>type, listener);\n  }\n\n  getOriginalMapping() {\n    return this.original.clone();\n  }\n\n  getMapping() {\n    return this.mapping.clone();\n  }\n\n  setMapping(mapping: IMappingFunction) {\n    if (this.mapping.eq(mapping)) {\n      return;\n    }\n    this.fire([NumbersColumn.EVENT_MAPPING_CHANGED, Column.EVENT_DIRTY_HEADER, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY_CACHES, Column.EVENT_DIRTY], this.mapping.clone(), this.mapping = mapping);\n  }\n\n  getColor(row: IDataRow) {\n    return NumberColumn.prototype.getColor.call(this, row);\n  }\n\n  getColorMapping() {\n    return this.colorMapping.clone();\n  }\n\n  setColorMapping(mapping: IColorMappingFunction) {\n    if (this.colorMapping.eq(mapping)) {\n      return;\n    }\n    this.fire([NumbersColumn.EVENT_COLOR_MAPPING_CHANGED, Column.EVENT_DIRTY_HEADER, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY_CACHES, Column.EVENT_DIRTY], this.colorMapping.clone(), this.colorMapping = mapping);\n  }\n\n  isFiltered() {\n    return NumberColumn.prototype.isFiltered.call(this);\n  }\n\n  getFilter(): INumberFilter {\n    return NumberColumn.prototype.getFilter.call(this);\n  }\n\n  setFilter(value: INumberFilter | null) {\n    NumberColumn.prototype.setFilter.call(this, value);\n  }\n\n  filter(row: IDataRow) {\n    return NumberColumn.prototype.filter.call(this, row);\n  }\n\n  clearFilter() {\n    return NumberColumn.prototype.clearFilter.call(this);\n  }\n}\n\n","import {IBoxPlotData} from '../internal';\nimport {suffix, ISequence, IEventListener} from '../internal';\nimport {toolbar, SortByDefault, dialogAddons} from './annotations';\nimport BoxPlotColumn from './BoxPlotColumn';\nimport Column, {widthChanged, labelChanged, metaDataChanged, dirty, dirtyHeader, dirtyValues, rendererTypeChanged, groupRendererChanged, summaryRendererChanged, visibilityChanged, dirtyCaches} from './Column';\nimport CompositeColumn, {addColumn, filterChanged, moveColumn, removeColumn} from './CompositeColumn';\nimport {IDataRow, IGroup, IColumnDesc, DEFAULT_COLOR} from './interfaces';\nimport {ESortMethod, IBoxPlotColumn, INumberFilter, isBoxPlotColumn, IMappingFunction, IColorMappingFunction, isMapAbleColumn} from './INumberColumn';\nimport {ScaleMappingFunction} from './MappingFunction';\nimport NumbersColumn from './NumbersColumn';\nimport {DEFAULT_COLOR_FUNCTION} from './ColorMappingFunction';\nimport {DEFAULT_FORMATTER, noNumberFilter} from './internalNumber';\n\n\n/**\n *  factory for creating a description creating a max column\n * @param label\n * @returns {{type: string, label: string}}\n */\nexport function createImpositionBoxPlotDesc(label: string = 'Imposition') {\n  return {type: 'impositions', label};\n}\n\n/**\n * emitted when the mapping property changes\n * @asMemberOf ImpositionBoxPlotColumn\n * @event\n */\nexport declare function mappingChanged_IPBC(previous: IMappingFunction, current: IMappingFunction): void;\n\n/**\n * emitted when the color mapping property changes\n * @asMemberOf ImpositionBoxPlotColumn\n * @event\n */\nexport declare function colorMappingChanged_IPBC(previous: IColorMappingFunction, current: IColorMappingFunction): void;\n\n\n/**\n * implementation of a combine column, standard operations how to select\n */\n@toolbar('filterNumber', 'colorMapped', 'editMapping')\n@dialogAddons('sort', 'sortBoxPlot')\n@SortByDefault('descending')\nexport default class ImpositionBoxPlotColumn extends CompositeColumn implements IBoxPlotColumn {\n  static readonly EVENT_MAPPING_CHANGED = NumbersColumn.EVENT_MAPPING_CHANGED;\n  static readonly EVENT_COLOR_MAPPING_CHANGED = NumbersColumn.EVENT_COLOR_MAPPING_CHANGED;\n\n  constructor(id: string, desc: Readonly<IColumnDesc>) {\n    super(id, desc);\n\n    this.setDefaultRenderer('boxplot');\n    this.setDefaultGroupRenderer('boxplot');\n    this.setDefaultSummaryRenderer('boxplot');\n  }\n\n  get label() {\n    const l = super.getMetaData().label;\n    const c = this._children;\n    if (l !== 'Imposition' || c.length === 0) {\n      return l;\n    }\n    if (c.length === 1) {\n      return c[0].label;\n    }\n    const w = this.wrapper;\n    const rest = this.rest;\n    return `${w ? w.label : '?'} (${rest.map((c) => c.label).join(', ')})`;\n  }\n\n  private get wrapper(): IBoxPlotColumn | null {\n    return <IBoxPlotColumn>this._children.find(isBoxPlotColumn) || null;\n  }\n\n  private get rest() {\n    const w = this.wrapper;\n    return this._children.filter((d) => d !== w);\n  }\n\n  getLabel(row: IDataRow) {\n    const c = this._children;\n    if (c.length === 0) {\n      return '';\n    }\n    if (c.length === 1) {\n      return c[0].getLabel(row);\n    }\n    const w = this.wrapper;\n    const rest = this.rest;\n    return `${w ? w.getLabel(row) : '?'} (${rest.map((c) => `${c.label} = ${c.getLabel(row)}`)})`;\n  }\n\n  getColor(row: IDataRow) {\n    const c = this._children;\n    switch (c.length) {\n      case 0:\n        return DEFAULT_COLOR;\n      case 1:\n        return c[0].getColor(row);\n      default:\n        return this.rest[0].getColor(row);\n    }\n  }\n\n  protected createEventList() {\n    return super.createEventList().concat([ImpositionBoxPlotColumn.EVENT_MAPPING_CHANGED, ImpositionBoxPlotColumn.EVENT_COLOR_MAPPING_CHANGED]);\n  }\n\n  on(type: typeof ImpositionBoxPlotColumn.EVENT_COLOR_MAPPING_CHANGED, listener: typeof colorMappingChanged_IPBC | null): this;\n  on(type: typeof ImpositionBoxPlotColumn.EVENT_MAPPING_CHANGED, listener: typeof mappingChanged_IPBC | null): this;\n  on(type: typeof CompositeColumn.EVENT_FILTER_CHANGED, listener: typeof filterChanged | null): this;\n  on(type: typeof CompositeColumn.EVENT_ADD_COLUMN, listener: typeof addColumn | null): this;\n  on(type: typeof CompositeColumn.EVENT_MOVE_COLUMN, listener: typeof moveColumn | null): this;\n  on(type: typeof CompositeColumn.EVENT_REMOVE_COLUMN, listener: typeof removeColumn | null): this;\n  on(type: typeof Column.EVENT_WIDTH_CHANGED, listener: typeof widthChanged | null): this;\n  on(type: typeof Column.EVENT_LABEL_CHANGED, listener: typeof labelChanged | null): this;\n  on(type: typeof Column.EVENT_METADATA_CHANGED, listener: typeof metaDataChanged | null): this;\n  on(type: typeof Column.EVENT_DIRTY, listener: typeof dirty | null): this;\n  on(type: typeof Column.EVENT_DIRTY_HEADER, listener: typeof dirtyHeader | null): this;\n  on(type: typeof Column.EVENT_DIRTY_VALUES, listener: typeof dirtyValues | null): this;\n  on(type: typeof Column.EVENT_DIRTY_CACHES, listener: typeof dirtyCaches | null): this;\n  on(type: typeof Column.EVENT_RENDERER_TYPE_CHANGED, listener: typeof rendererTypeChanged | null): this;\n  on(type: typeof Column.EVENT_GROUP_RENDERER_TYPE_CHANGED, listener: typeof groupRendererChanged | null): this;\n  on(type: typeof Column.EVENT_SUMMARY_RENDERER_TYPE_CHANGED, listener: typeof summaryRendererChanged | null): this;\n  on(type: typeof Column.EVENT_VISIBILITY_CHANGED, listener: typeof visibilityChanged | null): this;\n  on(type: string | string[], listener: IEventListener | null): this; // required for correct typings in *.d.ts\n  on(type: string | string[], listener: IEventListener | null): this {\n    return super.on(type, listener);\n  }\n\n  getNumberFormat() {\n    const w = this.wrapper;\n    return w ? w.getNumberFormat() : DEFAULT_FORMATTER;\n  }\n\n  getValue(row: IDataRow) {\n    const w = this.wrapper;\n    return w ? w.getValue(row) : null;\n  }\n\n  getNumber(row: IDataRow) {\n    const w = this.wrapper;\n    return w ? w.getNumber(row) : NaN;\n  }\n\n  getRawNumber(row: IDataRow) {\n    const w = this.wrapper;\n    return w ? w.getRawNumber(row) : NaN;\n  }\n\n  iterNumber(row: IDataRow) {\n    return [this.getNumber(row)];\n  }\n\n  iterRawNumber(row: IDataRow) {\n    return [this.getRawNumber(row)];\n  }\n\n  getExportValue(row: IDataRow, format: 'text' | 'json'): any {\n    if (format === 'json') {\n      const value = this.getRawNumber(row);\n      if (isNaN(value)) {\n        return null;\n      }\n      return {\n        label: this.getLabel(row),\n        color: this.getColor(row),\n        value\n      };\n    }\n    return super.getExportValue(row, format);\n  }\n\n  getBoxPlotData(row: IDataRow): IBoxPlotData | null {\n    const w = this.wrapper;\n    return w ? w.getBoxPlotData(row) : null;\n  }\n\n  getRawBoxPlotData(row: IDataRow): IBoxPlotData | null {\n    const w = this.wrapper;\n    return w ? w.getRawBoxPlotData(row) : null;\n  }\n\n  getMapping() {\n    const w = this.wrapper;\n    return w ? w.getMapping() : new ScaleMappingFunction();\n  }\n\n  getOriginalMapping() {\n    const w = this.wrapper;\n    return w ? w.getOriginalMapping() : new ScaleMappingFunction();\n  }\n\n  getSortMethod() {\n    const w = this.wrapper;\n    return w ? w.getSortMethod() : ESortMethod.min;\n  }\n\n  setSortMethod(value: ESortMethod) {\n    const w = this.wrapper;\n    return w ? w.setSortMethod(value) : undefined;\n  }\n\n  setMapping(mapping: IMappingFunction): void {\n    const w = this.wrapper;\n    return w ? w.setMapping(mapping) : undefined;\n  }\n\n  getColorMapping() {\n    const w = this.wrapper;\n    return w ? w.getColorMapping() : DEFAULT_COLOR_FUNCTION;\n  }\n\n  setColorMapping(mapping: IColorMappingFunction) {\n    const w = this.wrapper;\n    return w ? w.setColorMapping(mapping) : undefined;\n  }\n\n  getFilter() {\n    const w = this.wrapper;\n    return w ? w.getFilter() : noNumberFilter();\n  }\n\n  setFilter(value: INumberFilter | null): void {\n    const w = this.wrapper;\n    return w ? w.setFilter(value) : undefined;\n  }\n\n  getRange(): [string, string] {\n    const w = this.wrapper;\n    return w ? w.getRange() : ['0', '1'];\n  }\n\n  toCompareValue(row: IDataRow) {\n    return BoxPlotColumn.prototype.toCompareValue.call(this, row);\n  }\n\n  toCompareValueType() {\n    return BoxPlotColumn.prototype.toCompareValueType.call(this);\n  }\n\n  group(row: IDataRow) {\n    return BoxPlotColumn.prototype.group.call(this, row);\n  }\n\n  toCompareGroupValue(rows: ISequence<IDataRow>, group: IGroup) {\n    return BoxPlotColumn.prototype.toCompareGroupValue.call(this, rows, group);\n  }\n\n  toCompareGroupValueType() {\n    return BoxPlotColumn.prototype.toCompareGroupValueType.call(this);\n  }\n\n  insert(col: Column, index: number): Column | null {\n    if (this._children.length === 1 && !this.wrapper && !isBoxPlotColumn(col)) {\n      // at least one has to be a number column\n      return null;\n    }\n    if (this._children.length >= 2) {\n      // limit to two\n      return null;\n    }\n    return super.insert(col, index);\n  }\n\n  protected insertImpl(col: Column, index: number) {\n    if (isBoxPlotColumn(col)) {\n      this.forward(col, ...suffix('.impose', BoxPlotColumn.EVENT_MAPPING_CHANGED, BoxPlotColumn.EVENT_COLOR_MAPPING_CHANGED));\n    } else if (isMapAbleColumn(col)) {\n      this.forward(col, ...suffix('.impose', BoxPlotColumn.EVENT_COLOR_MAPPING_CHANGED));\n    }\n    return super.insertImpl(col, index);\n  }\n\n  protected removeImpl(child: Column, index: number) {\n    if (isBoxPlotColumn(child)) {\n      this.unforward(child, ...suffix('.impose', BoxPlotColumn.EVENT_MAPPING_CHANGED, BoxPlotColumn.EVENT_COLOR_MAPPING_CHANGED));\n    } else if (isMapAbleColumn(child)) {\n      this.unforward(child, ...suffix('.impose', BoxPlotColumn.EVENT_COLOR_MAPPING_CHANGED));\n    }\n    return super.removeImpl(child, index);\n  }\n}\n","import {suffix, IEventListener, IAdvancedBoxPlotData} from '../internal';\nimport {toolbar, dialogAddons, SortByDefault} from './annotations';\nimport Column, {widthChanged, labelChanged, metaDataChanged, dirty, dirtyHeader, dirtyValues, rendererTypeChanged, groupRendererChanged, summaryRendererChanged, visibilityChanged, dirtyCaches} from './Column';\nimport CompositeColumn, {addColumn, filterChanged, moveColumn, removeColumn} from './CompositeColumn';\nimport {IKeyValue} from './IArrayColumn';\nimport {IDataRow, IGroup, IColumnDesc, DEFAULT_COLOR} from './interfaces';\nimport {EAdvancedSortMethod, INumberFilter, INumbersColumn, isNumbersColumn, IMappingFunction, IColorMappingFunction, isMapAbleColumn} from './INumberColumn';\nimport {ScaleMappingFunction} from './MappingFunction';\nimport NumbersColumn from './NumbersColumn';\nimport {DEFAULT_COLOR_FUNCTION} from './ColorMappingFunction';\nimport {DEFAULT_FORMATTER, noNumberFilter} from './internalNumber';\n\n\n/**\n *  factory for creating a description creating a max column\n * @param label\n * @returns {{type: string, label: string}}\n */\nexport function createImpositionsDesc(label: string = 'Imposition') {\n  return {type: 'impositions', label};\n}\n\n/**\n * emitted when the mapping property changes\n * @asMemberOf ImpositionCompositesColumn\n * @event\n */\nexport declare function mappingChanged_ICCS(previous: IMappingFunction, current: IMappingFunction): void;\n\n/**\n * emitted when the color mapping property changes\n * @asMemberOf ImpositionCompositesColumn\n * @event\n */\nexport declare function colorMappingChanged_ICCS(previous: IColorMappingFunction, current: IColorMappingFunction): void;\n\n/**\n * implementation of a combine column, standard operations how to select\n */\n@toolbar('filterNumber', 'colorMapped', 'editMapping')\n@dialogAddons('sort', 'sortNumbers')\n@SortByDefault('descending')\nexport default class ImpositionCompositesColumn extends CompositeColumn implements INumbersColumn {\n  static readonly EVENT_MAPPING_CHANGED = NumbersColumn.EVENT_MAPPING_CHANGED;\n  static readonly EVENT_COLOR_MAPPING_CHANGED = NumbersColumn.EVENT_COLOR_MAPPING_CHANGED;\n\n  constructor(id: string, desc: Readonly<IColumnDesc>) {\n    super(id, desc);\n\n    this.setDefaultRenderer('numbers');\n    this.setDefaultGroupRenderer('numbers');\n    this.setDefaultSummaryRenderer('histogram');\n  }\n\n  get label() {\n    const l = super.getMetaData().label;\n    const c = this._children;\n    if (l !== 'Imposition' || c.length === 0) {\n      return l;\n    }\n    if (c.length === 1) {\n      return c[0].label;\n    }\n    const w = this.wrapper;\n    const rest = this.rest;\n    return `${w ? w.label : '?'} (${rest.map((c) => c.label).join(', ')})`;\n  }\n\n  private get wrapper(): INumbersColumn | null {\n    return <INumbersColumn>this._children.find(isNumbersColumn) || null;\n  }\n\n  private get rest() {\n    const w = this.wrapper;\n    return this._children.filter((d) => d !== w);\n  }\n\n  getLabel(row: IDataRow) {\n    const c = this._children;\n    if (c.length === 0) {\n      return '';\n    }\n    if (c.length === 1) {\n      return c[0].getLabel(row);\n    }\n    const w = this.wrapper;\n    const rest = this.rest;\n    return `${w ? w.getLabel(row) : '?'} (${rest.map((c) => `${c.label} = ${c.getLabel(row)}`)})`;\n  }\n\n  getColor(row: IDataRow) {\n    const c = this._children;\n    switch (c.length) {\n      case 0:\n        return DEFAULT_COLOR;\n      case 1:\n        return c[0].getColor(row);\n      default:\n        return this.rest[0].getColor(row);\n    }\n  }\n\n  protected createEventList() {\n    return super.createEventList().concat([ImpositionCompositesColumn.EVENT_MAPPING_CHANGED, ImpositionCompositesColumn.EVENT_COLOR_MAPPING_CHANGED]);\n  }\n\n  on(type: typeof ImpositionCompositesColumn.EVENT_COLOR_MAPPING_CHANGED, listener: typeof colorMappingChanged_ICCS | null): this;\n  on(type: typeof ImpositionCompositesColumn.EVENT_MAPPING_CHANGED, listener: typeof mappingChanged_ICCS | null): this;\n  on(type: typeof CompositeColumn.EVENT_FILTER_CHANGED, listener: typeof filterChanged | null): this;\n  on(type: typeof CompositeColumn.EVENT_ADD_COLUMN, listener: typeof addColumn | null): this;\n  on(type: typeof CompositeColumn.EVENT_MOVE_COLUMN, listener: typeof moveColumn | null): this;\n  on(type: typeof CompositeColumn.EVENT_REMOVE_COLUMN, listener: typeof removeColumn | null): this;\n  on(type: typeof Column.EVENT_WIDTH_CHANGED, listener: typeof widthChanged | null): this;\n  on(type: typeof Column.EVENT_LABEL_CHANGED, listener: typeof labelChanged | null): this;\n  on(type: typeof Column.EVENT_METADATA_CHANGED, listener: typeof metaDataChanged | null): this;\n  on(type: typeof Column.EVENT_DIRTY, listener: typeof dirty | null): this;\n  on(type: typeof Column.EVENT_DIRTY_HEADER, listener: typeof dirtyHeader | null): this;\n  on(type: typeof Column.EVENT_DIRTY_VALUES, listener: typeof dirtyValues | null): this;\n  on(type: typeof Column.EVENT_DIRTY_CACHES, listener: typeof dirtyCaches | null): this;\n  on(type: typeof Column.EVENT_RENDERER_TYPE_CHANGED, listener: typeof rendererTypeChanged | null): this;\n  on(type: typeof Column.EVENT_GROUP_RENDERER_TYPE_CHANGED, listener: typeof groupRendererChanged | null): this;\n  on(type: typeof Column.EVENT_SUMMARY_RENDERER_TYPE_CHANGED, listener: typeof summaryRendererChanged | null): this;\n  on(type: typeof Column.EVENT_VISIBILITY_CHANGED, listener: typeof visibilityChanged | null): this;\n  on(type: string | string[], listener: IEventListener | null): this; // required for correct typings in *.d.ts\n  on(type: string | string[], listener: IEventListener | null): this {\n    return super.on(type, listener);\n  }\n\n  get labels() {\n    const w = this.wrapper;\n    return w ? w.labels : [];\n  }\n\n  get dataLength() {\n    const w = this.wrapper;\n    return w ? w.dataLength : null;\n  }\n\n  getNumberFormat() {\n    const w = this.wrapper;\n    return w ? w.getNumberFormat() : DEFAULT_FORMATTER;\n  }\n\n  getValue(row: IDataRow) {\n    const w = this.wrapper;\n    return w ? w.getValue(row) : [];\n  }\n\n  getNumber(row: IDataRow) {\n    const w = this.wrapper;\n    return w ? w.getNumber(row) : NaN;\n  }\n\n  getRawNumber(row: IDataRow) {\n    const w = this.wrapper;\n    return w ? w.getRawNumber(row) : NaN;\n  }\n\n  getExportValue(row: IDataRow, format: 'text' | 'json'): any {\n    if (format === 'json') {\n      const value = this.getRawNumber(row);\n      if (isNaN(value)) {\n        return null;\n      }\n      return {\n        label: this.getLabels(row),\n        color: this.getColor(row)\n      };\n    }\n    return super.getExportValue(row, format);\n  }\n\n  getNumbers(row: IDataRow) {\n    const w = this.wrapper;\n    return w ? w.getNumbers(row) : [];\n  }\n\n  getRawNumbers(row: IDataRow) {\n    const w = this.wrapper;\n    return w ? w.getRawNumbers(row) : [];\n  }\n\n  iterNumber(row: IDataRow) {\n    return this.getNumbers(row);\n  }\n\n  iterRawNumber(row: IDataRow) {\n    return this.getRawNumbers(row);\n  }\n\n  getBoxPlotData(row: IDataRow): IAdvancedBoxPlotData | null {\n    const w = this.wrapper;\n    return w ? w.getBoxPlotData(row) : null;\n  }\n\n  getRawBoxPlotData(row: IDataRow): IAdvancedBoxPlotData | null {\n    const w = this.wrapper;\n    return w ? w.getRawBoxPlotData(row) : null;\n  }\n\n  getMapping() {\n    const w = this.wrapper;\n    return w ? w.getMapping() : new ScaleMappingFunction();\n  }\n\n  getOriginalMapping() {\n    const w = this.wrapper;\n    return w ? w.getOriginalMapping() : new ScaleMappingFunction();\n  }\n\n  getSortMethod() {\n    const w = this.wrapper;\n    return w ? w.getSortMethod() : EAdvancedSortMethod.min;\n  }\n\n  setSortMethod(value: EAdvancedSortMethod) {\n    const w = this.wrapper;\n    return w ? w.setSortMethod(value) : undefined;\n  }\n\n  setMapping(mapping: IMappingFunction): void {\n    const w = this.wrapper;\n    return w ? w.setMapping(mapping) : undefined;\n  }\n\n  getColorMapping() {\n    const w = this.wrapper;\n    return w ? w.getColorMapping() : DEFAULT_COLOR_FUNCTION;\n  }\n\n  setColorMapping(mapping: IColorMappingFunction) {\n    const w = this.wrapper;\n    return w ? w.setColorMapping(mapping) : undefined;\n  }\n\n  getFilter() {\n    const w = this.wrapper;\n    return w ? w.getFilter() : noNumberFilter();\n  }\n\n  setFilter(value: INumberFilter | null): void {\n    const w = this.wrapper;\n    return w ? w.setFilter(value) : undefined;\n  }\n\n  getRange(): [string, string] {\n    const w = this.wrapper;\n    return w ? w.getRange() : ['0', '1'];\n  }\n\n  getMap(row: IDataRow): IKeyValue<number>[] {\n    const w = this.wrapper;\n    return w ? w.getMap(row) : [];\n  }\n\n  getMapLabel(row: IDataRow) {\n    const w = this.wrapper;\n    return w ? w.getMapLabel(row) : [];\n  }\n\n  getLabels(row: IDataRow): string[] {\n    const w = this.wrapper;\n    return w ? w.getLabels(row) : [];\n  }\n\n  getValues(row: IDataRow) {\n    const w = this.wrapper;\n    return w ? w.getValues(row) : [];\n  }\n\n  toCompareValue(row: IDataRow) {\n    return NumbersColumn.prototype.toCompareValue.call(this, row);\n  }\n\n  toCompareValueType() {\n    return NumbersColumn.prototype.toCompareValueType.call(this);\n  }\n\n  toCompareGroupValue(rows: IDataRow[], group: IGroup) {\n    return NumbersColumn.prototype.toCompareGroupValue.call(this, rows, group);\n  }\n\n  toCompareGroupValueType() {\n    return NumbersColumn.prototype.toCompareGroupValueType.call(this);\n  }\n\n  insert(col: Column, index: number): Column | null {\n    if (this._children.length === 1 && !this.wrapper && !isNumbersColumn(col)) {\n      // at least one has to be a number column\n      return null;\n    }\n    if (this._children.length >= 2) {\n      // limit to two\n      return null;\n    }\n    return super.insert(col, index);\n  }\n\n  protected insertImpl(col: Column, index: number) {\n    if (isNumbersColumn(col)) {\n      this.forward(col, ...suffix('.impose', NumbersColumn.EVENT_MAPPING_CHANGED));\n    }\n    if (isMapAbleColumn(col)) {\n      this.forward(col, ...suffix('.impose', NumbersColumn.EVENT_COLOR_MAPPING_CHANGED));\n    }\n    return super.insertImpl(col, index);\n  }\n\n  protected removeImpl(child: Column, index: number) {\n    if (isNumbersColumn(child)) {\n      this.unforward(child, ...suffix('.impose', NumbersColumn.EVENT_MAPPING_CHANGED));\n    }\n    if (isMapAbleColumn(child)) {\n      this.unforward(child, ...suffix('.impose', NumbersColumn.EVENT_COLOR_MAPPING_CHANGED));\n    }\n    return super.removeImpl(child, index);\n  }\n}\n","import {format} from 'd3-format';\nimport CompositeColumn from './CompositeColumn';\nimport {IDataRow, IGroup, IColumnDesc} from './interfaces';\nimport {isMissingValue} from './missing';\nimport NumberColumn from './NumberColumn';\nimport {SortByDefault} from './annotations';\nimport {ISequence} from '../internal';\nimport {INumberColumn} from './INumberColumn';\n\nexport interface ICompositeNumberDesc extends IColumnDesc {\n  /**\n   * d3 format number Format\n   * @default 0.3n\n   */\n  numberFormat?: string;\n}\n\nexport declare type ICompositeNumberColumnDesc = ICompositeNumberDesc & IColumnDesc;\n\n/**\n * implementation of a combine column, standard operations how to select\n */\n@SortByDefault('descending')\nexport default class CompositeNumberColumn extends CompositeColumn implements INumberColumn {\n  private readonly numberFormat: (n: number) => string = format('.3n');\n\n  constructor(id: string, desc: Readonly<ICompositeNumberColumnDesc>) {\n    super(id, desc);\n\n    if (desc.numberFormat) {\n      this.numberFormat = format(desc.numberFormat);\n    }\n  }\n\n  getNumberFormat() {\n    return this.numberFormat;\n  }\n\n  getLabel(row: IDataRow) {\n    if (!this.isLoaded()) {\n      return '';\n    }\n    const v = this.getValue(row);\n    //keep non number if it is not a number else convert using formatter\n    return String(typeof v === 'number' && !isNaN(v) && isFinite(v) ? this.numberFormat(v) : v);\n  }\n\n  getValue(row: IDataRow) {\n    if (!this.isLoaded()) {\n      return null;\n    }\n    //weighted sum\n    const v = this.compute(row);\n    if (isMissingValue(v)) {\n      return null;\n    }\n    return v;\n  }\n\n  protected compute(_row: IDataRow) {\n    return NaN;\n  }\n\n  getNumber(row: IDataRow) {\n    const r = this.getValue(row);\n    return r == null ? NaN : r;\n  }\n\n  getRawNumber(row: IDataRow) {\n    return this.getNumber(row);\n  }\n\n  iterNumber(row: IDataRow) {\n    return [this.getNumber(row)];\n  }\n\n  iterRawNumber(row: IDataRow) {\n    return [this.getRawNumber(row)];\n  }\n\n  getExportValue(row: IDataRow, format: 'text' | 'json'): any {\n    if (format === 'json') {\n      return {\n        value: this.getRawNumber(row),\n        children: this.children.map((d) => d.getExportValue(row, format))\n      };\n    }\n    return super.getExportValue(row, format);\n  }\n\n  toCompareValue(row: IDataRow) {\n    return NumberColumn.prototype.toCompareValue.call(this, row);\n  }\n\n  toCompareValueType() {\n    return NumberColumn.prototype.toCompareValueType.call(this);\n  }\n\n  toCompareGroupValue(rows: ISequence<IDataRow>, group: IGroup) {\n    return NumberColumn.prototype.toCompareGroupValue.call(this, rows, group);\n  }\n\n  toCompareGroupValueType() {\n    return NumberColumn.prototype.toCompareGroupValueType.call(this);\n  }\n\n  getRenderer(): string {\n    return NumberColumn.prototype.getRenderer.call(this);\n  }\n}\n","import {median, quantile, IEventListener} from '../internal';\nimport {toolbar} from './annotations';\nimport Column, {widthChanged, labelChanged, metaDataChanged, dirty, dirtyHeader, dirtyValues, rendererTypeChanged, groupRendererChanged, summaryRendererChanged, visibilityChanged, dirtyCaches} from './Column';\nimport CompositeColumn, {addColumn, filterChanged, moveColumn, removeColumn} from './CompositeColumn';\nimport CompositeNumberColumn, {ICompositeNumberColumnDesc} from './CompositeNumberColumn';\nimport {IDataRow, DEFAULT_COLOR, ITypeFactory} from './interfaces';\nimport {EAdvancedSortMethod} from './INumberColumn';\n\n/**\n *  factory for creating a description creating a max column\n * @param label\n * @returns {{type: string, label: string}}\n */\nexport function createReduceDesc(label: string = 'Reduce') {\n  return {type: 'reduce', label};\n}\n\nexport interface IReduceDesc {\n  readonly reduce?: EAdvancedSortMethod;\n}\n\n\nexport declare type IReduceColumnDesc = IReduceDesc & ICompositeNumberColumnDesc;\n\n/**\n * emitted when the mapping property changes\n * @asMemberOf ReduceColumn\n * @event\n */\nexport declare function reduceChanged(previous: EAdvancedSortMethod, current: EAdvancedSortMethod): void;\n\n/**\n * combines multiple columns by using the maximal value\n */\n@toolbar('reduce')\nexport default class ReduceColumn extends CompositeNumberColumn {\n  static readonly EVENT_REDUCE_CHANGED = 'reduceChanged';\n\n  private reduce: EAdvancedSortMethod;\n\n  constructor(id: string, desc: Readonly<IReduceColumnDesc>) {\n    super(id, desc);\n    this.reduce = desc.reduce || EAdvancedSortMethod.max;\n    this.setDefaultRenderer('interleaving');\n    this.setDefaultGroupRenderer('interleaving');\n    this.setDefaultSummaryRenderer('interleaving');\n  }\n\n  get label() {\n    const l = super.getMetaData().label;\n    if (l !== 'Reduce') {\n      return l;\n    }\n    return `${this.reduce[0].toUpperCase()}${this.reduce.slice(1)}(${this.children.map((d) => d.label).join(', ')})`;\n  }\n\n  getColor(row: IDataRow) {\n    //compute the index of the maximal one\n    const c = this._children;\n    if (c.length === 0 || this.reduce === EAdvancedSortMethod.q1 || this.reduce === EAdvancedSortMethod.q3 || this.reduce === EAdvancedSortMethod.mean) {\n      return DEFAULT_COLOR;\n    }\n    const v = this.compute(row);\n    const selected = c.find((c) => c.getValue(row) === v);\n    return selected ? selected.getColor(row) : DEFAULT_COLOR;\n  }\n\n  protected compute(row: IDataRow) {\n    const vs = this._children.map((d) => d.getValue(row)).filter((d) => !isNaN(d));\n    if (vs.length === 0) {\n      return NaN;\n    }\n    switch (this.reduce) {\n      case EAdvancedSortMethod.mean:\n        return vs.reduce((a, b) => a + b, 0) / vs.length;\n      case EAdvancedSortMethod.max:\n        return vs.reduce((a, b) => Math.max(a, b), Number.NEGATIVE_INFINITY);\n      case EAdvancedSortMethod.min:\n        return vs.reduce((a, b) => Math.min(a, b), Number.POSITIVE_INFINITY);\n      case EAdvancedSortMethod.median:\n        return median(vs)!;\n      case EAdvancedSortMethod.q1:\n        return quantile(vs.sort((a, b) => a - b), 0.25)!;\n      case EAdvancedSortMethod.q3:\n        return quantile(vs.sort((a, b) => a - b), 0.75)!;\n    }\n  }\n\n  protected createEventList() {\n    return super.createEventList().concat([ReduceColumn.EVENT_REDUCE_CHANGED]);\n  }\n\n  on(type: typeof ReduceColumn.EVENT_REDUCE_CHANGED, listener: typeof reduceChanged | null): this;\n  on(type: typeof CompositeColumn.EVENT_FILTER_CHANGED, listener: typeof filterChanged | null): this;\n  on(type: typeof CompositeColumn.EVENT_ADD_COLUMN, listener: typeof addColumn | null): this;\n  on(type: typeof CompositeColumn.EVENT_MOVE_COLUMN, listener: typeof moveColumn | null): this;\n  on(type: typeof CompositeColumn.EVENT_REMOVE_COLUMN, listener: typeof removeColumn | null): this;\n  on(type: typeof Column.EVENT_WIDTH_CHANGED, listener: typeof widthChanged | null): this;\n  on(type: typeof Column.EVENT_LABEL_CHANGED, listener: typeof labelChanged | null): this;\n  on(type: typeof Column.EVENT_METADATA_CHANGED, listener: typeof metaDataChanged | null): this;\n  on(type: typeof Column.EVENT_DIRTY, listener: typeof dirty | null): this;\n  on(type: typeof Column.EVENT_DIRTY_HEADER, listener: typeof dirtyHeader | null): this;\n  on(type: typeof Column.EVENT_DIRTY_VALUES, listener: typeof dirtyValues | null): this;\n  on(type: typeof Column.EVENT_DIRTY_CACHES, listener: typeof dirtyCaches | null): this;\n  on(type: typeof Column.EVENT_RENDERER_TYPE_CHANGED, listener: typeof rendererTypeChanged | null): this;\n  on(type: typeof Column.EVENT_GROUP_RENDERER_TYPE_CHANGED, listener: typeof groupRendererChanged | null): this;\n  on(type: typeof Column.EVENT_SUMMARY_RENDERER_TYPE_CHANGED, listener: typeof summaryRendererChanged | null): this;\n  on(type: typeof Column.EVENT_VISIBILITY_CHANGED, listener: typeof visibilityChanged | null): this;\n  on(type: string | string[], listener: IEventListener | null): this; // required for correct typings in *.d.ts\n  on(type: string | string[], listener: IEventListener | null): this {\n    return super.on(type, listener);\n  }\n\n  getReduce() {\n    return this.reduce;\n  }\n\n  setReduce(reduce: EAdvancedSortMethod) {\n    if (this.reduce === reduce) {\n      return;\n    }\n    this.fire([ReduceColumn.EVENT_REDUCE_CHANGED, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY_CACHES, Column.EVENT_DIRTY], this.reduce, this.reduce = reduce);\n  }\n\n  dump(toDescRef: (desc: any) => any) {\n    const r = super.dump(toDescRef);\n    r.reduce = this.reduce;\n    return r;\n  }\n\n  restore(dump: any, factory: ITypeFactory) {\n    this.reduce = dump.reduce || this.reduce;\n    super.restore(dump, factory);\n  }\n\n  get canJustAddNumbers() {\n    return true;\n  }\n\n  getExportValue(row: IDataRow, format: 'text' | 'json'): any {\n    if (format === 'json') {\n      return {\n        value: this.getRawNumber(row),\n        children: this.children.map((d) => d.getExportValue(row, format))\n      };\n    }\n    return super.getExportValue(row, format);\n  }\n}\n","import {round, IEventListener, similar} from '../internal';\nimport {toolbar} from './annotations';\nimport Column, {widthChanged, labelChanged, metaDataChanged, dirty, dirtyHeader, dirtyValues, rendererTypeChanged, groupRendererChanged, summaryRendererChanged, visibilityChanged, dirtyCaches} from './Column';\nimport CompositeColumn, {addColumn, filterChanged, moveColumn, removeColumn} from './CompositeColumn';\nimport CompositeNumberColumn, {ICompositeNumberDesc} from './CompositeNumberColumn';\nimport {IDataRow, IFlatColumn, IMultiLevelColumn, ITypeFactory} from './interfaces';\n\n/**\n * factory for creating a description creating a stacked column\n * @param label\n * @returns {{type: string, label: string}}\n */\nexport function createStackDesc(label: string = 'Weighted Sum') {\n  return {type: 'stack', label};\n}\n\n\n/**\n * emitted when the collapse property changes\n * @asMemberOf StackColumn\n * @event\n */\nexport declare function collapseChanged(previous: boolean, current: boolean): void;\n\n\n/**\n * emitted when the weights change\n * @asMemberOf StackColumn\n * @event\n */\nexport declare function weightsChanged(previous: number[], current: number[]): void;\n\n\n/**\n * emitted when the ratios between the children changes\n * @asMemberOf StackColumn\n * @event\n */\nexport declare function nestedChildRatio(previous: number[], current: number[]): void;\n\n/**\n * implementation of the stacked column\n */\n@toolbar('editWeights', 'compress', 'expand')\nexport default class StackColumn extends CompositeNumberColumn implements IMultiLevelColumn {\n  static readonly EVENT_COLLAPSE_CHANGED = 'collapseChanged';\n  static readonly EVENT_WEIGHTS_CHANGED = 'weightsChanged';\n  static readonly EVENT_MULTI_LEVEL_CHANGED = 'nestedChildRatio';\n\n  static readonly COLLAPSED_RENDERER = 'number';\n\n  private readonly adaptChange: (old: number, newValue: number) => void;\n\n  /**\n   * whether this stack column is collapsed i.e. just looks like an ordinary number column\n   * @type {boolean}\n   * @private\n   */\n  private collapsed = false;\n\n  constructor(id: string, desc: ICompositeNumberDesc) {\n    super(id, desc);\n\n    const that = this;\n    this.adaptChange = function (this: {source: Column}, oldValue, newValue) {\n      that.adaptWidthChange(this.source, oldValue, newValue);\n    };\n\n    this.setDefaultRenderer('stack');\n    this.setDefaultGroupRenderer('stack');\n    this.setDefaultSummaryRenderer('default');\n  }\n\n  get label() {\n    const l = super.getMetaData().label;\n    const c = this._children;\n    if (l !== 'Weighted Sum' || c.length === 0) {\n      return l;\n    }\n    const weights = this.getWeights();\n    return c.map((c, i) => `${c.label} (${round(100 * weights[i], 1)}%)`).join(' + ');\n  }\n\n  protected createEventList() {\n    return super.createEventList().concat([StackColumn.EVENT_COLLAPSE_CHANGED, StackColumn.EVENT_WEIGHTS_CHANGED, StackColumn.EVENT_MULTI_LEVEL_CHANGED]);\n  }\n\n  on(type: typeof StackColumn.EVENT_COLLAPSE_CHANGED, listener: typeof collapseChanged | null): this;\n  on(type: typeof StackColumn.EVENT_WEIGHTS_CHANGED, listener: typeof weightsChanged | null): this;\n  on(type: typeof StackColumn.EVENT_MULTI_LEVEL_CHANGED, listener: typeof nestedChildRatio | null): this;\n  on(type: typeof CompositeColumn.EVENT_FILTER_CHANGED, listener: typeof filterChanged | null): this;\n  on(type: typeof CompositeColumn.EVENT_ADD_COLUMN, listener: typeof addColumn | null): this;\n  on(type: typeof CompositeColumn.EVENT_MOVE_COLUMN, listener: typeof moveColumn | null): this;\n  on(type: typeof CompositeColumn.EVENT_REMOVE_COLUMN, listener: typeof removeColumn | null): this;\n  on(type: typeof Column.EVENT_WIDTH_CHANGED, listener: typeof widthChanged | null): this;\n  on(type: typeof Column.EVENT_LABEL_CHANGED, listener: typeof labelChanged | null): this;\n  on(type: typeof Column.EVENT_METADATA_CHANGED, listener: typeof metaDataChanged | null): this;\n  on(type: typeof Column.EVENT_DIRTY, listener: typeof dirty | null): this;\n  on(type: typeof Column.EVENT_DIRTY_HEADER, listener: typeof dirtyHeader | null): this;\n  on(type: typeof Column.EVENT_DIRTY_VALUES, listener: typeof dirtyValues | null): this;\n  on(type: typeof Column.EVENT_DIRTY_CACHES, listener: typeof dirtyCaches | null): this;\n  on(type: typeof Column.EVENT_RENDERER_TYPE_CHANGED, listener: typeof rendererTypeChanged | null): this;\n  on(type: typeof Column.EVENT_GROUP_RENDERER_TYPE_CHANGED, listener: typeof groupRendererChanged | null): this;\n  on(type: typeof Column.EVENT_SUMMARY_RENDERER_TYPE_CHANGED, listener: typeof summaryRendererChanged | null): this;\n  on(type: typeof Column.EVENT_VISIBILITY_CHANGED, listener: typeof visibilityChanged | null): this;\n  on(type: string | string[], listener: IEventListener | null): this; // required for correct typings in *.d.ts\n  on(type: string | string[], listener: IEventListener | null): this {\n    return super.on(type, listener);\n  }\n\n  setCollapsed(value: boolean) {\n    if (this.collapsed === value) {\n      return;\n    }\n    this.fire([StackColumn.EVENT_COLLAPSE_CHANGED, Column.EVENT_DIRTY_HEADER, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY], this.collapsed, this.collapsed = value);\n  }\n\n  getCollapsed() {\n    return this.collapsed;\n  }\n\n  get canJustAddNumbers() {\n    return true;\n  }\n\n  flatten(r: IFlatColumn[], offset: number, levelsToGo = 0, padding = 0) {\n    let self = null;\n    const children = levelsToGo <= Column.FLAT_ALL_COLUMNS ? this._children : this._children.filter((c) => c.isVisible());\n    //no more levels or just this one\n    if (levelsToGo === 0 || levelsToGo <= Column.FLAT_ALL_COLUMNS) {\n      let w = this.getWidth();\n      if (!this.collapsed) {\n        w += (children.length - 1) * padding;\n      }\n      r.push(self = {col: this, offset, width: w});\n      if (levelsToGo === 0) {\n        return w;\n      }\n    }\n    //push children\n    let acc = offset;\n    children.forEach((c) => {\n      acc += c.flatten(r, acc, levelsToGo - 1, padding) + padding;\n    });\n    if (self) { //nesting my even increase my width\n      self.width = acc - offset - padding;\n    }\n    return acc - offset - padding;\n  }\n\n  dump(toDescRef: (desc: any) => any) {\n    const r = super.dump(toDescRef);\n    r.collapsed = this.collapsed;\n    return r;\n  }\n\n  restore(dump: any, factory: ITypeFactory) {\n    this.collapsed = dump.collapsed === true;\n    super.restore(dump, factory);\n  }\n\n  /**\n   * inserts a column at a the given position\n   */\n  insert(col: Column, index: number, weight = NaN) {\n    if (!isNaN(weight)) {\n      col.setWidth((weight / (1 - weight) * this.getWidth()));\n    }\n    col.on(`${Column.EVENT_WIDTH_CHANGED}.stack`, this.adaptChange);\n    //increase my width\n    super.setWidth(this.length === 0 ? col.getWidth() : (this.getWidth() + col.getWidth()));\n\n    return super.insert(col, index);\n  }\n\n  push(col: Column, weight = NaN) {\n    return this.insert(col, this.length, weight);\n  }\n\n  insertAfter(col: Column, ref: Column, weight = NaN) {\n    const i = this.indexOf(ref);\n    if (i < 0) {\n      return null;\n    }\n    return this.insert(col, i + 1, weight);\n  }\n\n  /**\n   * adapts weights according to an own width change\n   * @param col\n   * @param oldValue\n   * @param newValue\n   */\n  private adaptWidthChange(col: Column, oldValue: number, newValue: number) {\n    if (similar(oldValue, newValue, 0.5)) {\n      return;\n    }\n    const bak = this.getWeights();\n    const full = this.getWidth(),\n      change = (newValue - oldValue) / full;\n    const oldWeight = oldValue / full;\n    const factor = (1 - oldWeight - change) / (1 - oldWeight);\n    const widths = this._children.map((c) => {\n      if (c === col) {\n        //c.weight += change;\n        return newValue;\n      }\n      const guess = c.getWidth() * factor;\n      const w = isNaN(guess) || guess < 1 ? 0 : guess;\n      c.setWidthImpl(w);\n      return w;\n    });\n    //adapt width if needed\n    super.setWidth(widths.reduce((a, b) => a + b, 0));\n\n    this.fire([StackColumn.EVENT_WEIGHTS_CHANGED, StackColumn.EVENT_MULTI_LEVEL_CHANGED, Column.EVENT_DIRTY_HEADER, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY_CACHES, Column.EVENT_DIRTY], bak, this.getWeights());\n  }\n\n  getWeights() {\n    const w = this.getWidth();\n    return this._children.map((d) => d.getWidth() / w);\n  }\n\n  setWeights(weights: number[]) {\n    const bak = this.getWeights();\n    const delta = weights.length - this.length;\n    let s: number;\n    if (delta < 0) {\n      s = weights.reduce((p, a) => p + a, 0);\n      if (s <= 1) {\n        for (let i = 0; i < -delta; ++i) {\n          weights.push((1 - s) * (1 / -delta));\n        }\n      } else if (s <= 100) {\n        for (let i = 0; i < -delta; ++i) {\n          weights.push((100 - s) * (1 / -delta));\n        }\n      }\n    }\n    weights = weights.slice(0, this.length);\n    s = weights.reduce((p, a) => p + a, 0) / this.getWidth();\n    weights = weights.map((d) => d / s);\n\n    this._children.forEach((c, i) => {\n      c.setWidthImpl(weights[i]);\n    });\n    this.fire([StackColumn.EVENT_WEIGHTS_CHANGED, StackColumn.EVENT_MULTI_LEVEL_CHANGED, Column.EVENT_DIRTY_HEADER, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY_CACHES, Column.EVENT_DIRTY], bak, weights);\n\n  }\n\n  removeImpl(child: Column, index: number) {\n    child.on(`${Column.EVENT_WIDTH_CHANGED}.stack`, null);\n    super.setWidth(this.length === 0 ? 100 : this.getWidth() - child.getWidth());\n    return super.removeImpl(child, index);\n  }\n\n  setWidth(value: number) {\n    const factor = value / this.getWidth();\n    this._children.forEach((child) => {\n      //disable since we change it\n      child.setWidthImpl(child.getWidth() * factor);\n    });\n    super.setWidth(value);\n  }\n\n  protected compute(row: IDataRow) {\n    const w = this.getWidth();\n    return this._children.reduce((acc, d) => acc + d.getValue(row) * (d.getWidth() / w), 0);\n  }\n\n  getRenderer() {\n    if (this.getCollapsed() && this.isLoaded()) {\n      return StackColumn.COLLAPSED_RENDERER;\n    }\n    return super.getRenderer();\n  }\n\n  getExportValue(row: IDataRow, format: 'text' | 'json'): any {\n    if (format === 'json') {\n      return {\n        value: this.getRawNumber(row),\n        children: this.children.map((d) => d.getExportValue(row, format))\n      };\n    }\n    return super.getExportValue(row, format);\n  }\n}\n","import {similar, IEventListener} from '../internal';\nimport {toolbar} from './annotations';\nimport Column, {widthChanged, labelChanged, metaDataChanged, dirty, dirtyHeader, dirtyValues, rendererTypeChanged, groupRendererChanged, summaryRendererChanged, visibilityChanged, dirtyCaches} from './Column';\nimport CompositeColumn, {addColumn, filterChanged, moveColumn, removeColumn} from './CompositeColumn';\nimport {IDataRow, IColumnDesc, IFlatColumn, IMultiLevelColumn, ITypeFactory} from './interfaces';\nimport StackColumn from './StackColumn';\n\n\n/**\n * emitted when the collapse property changes\n * @asMemberOf MultiLevelCompositeColumn\n * @event\n */\nexport declare function collapseChanged_MC(previous: boolean, current: boolean): void;\n\n/**\n * emitted when the ratios between the children changes\n * @asMemberOf MultiLevelCompositeColumn\n * @event\n */\nexport declare function nestedChildRatio_MC(previous: number, current: number): void;\n\n\n@toolbar('compress', 'expand')\nexport default class MultiLevelCompositeColumn extends CompositeColumn implements IMultiLevelColumn {\n  static readonly EVENT_COLLAPSE_CHANGED = StackColumn.EVENT_COLLAPSE_CHANGED;\n  static readonly EVENT_MULTI_LEVEL_CHANGED = StackColumn.EVENT_MULTI_LEVEL_CHANGED;\n\n  private readonly adaptChange: (old: number, newValue: number) => void;\n\n  /**\n   * whether this stack column is collapsed i.e. just looks like an ordinary number column\n   * @type {boolean}\n   * @private\n   */\n  private collapsed = false;\n\n  constructor(id: string, desc: Readonly<IColumnDesc>) {\n    super(id, desc);\n    const that = this;\n    this.adaptChange = function (old, newValue) {\n      that.adaptWidthChange(old, newValue);\n    };\n  }\n\n  protected createEventList() {\n    return super.createEventList().concat([MultiLevelCompositeColumn.EVENT_COLLAPSE_CHANGED, MultiLevelCompositeColumn.EVENT_MULTI_LEVEL_CHANGED]);\n  }\n\n  on(type: typeof MultiLevelCompositeColumn.EVENT_COLLAPSE_CHANGED, listener: typeof collapseChanged_MC | null): this;\n  on(type: typeof MultiLevelCompositeColumn.EVENT_MULTI_LEVEL_CHANGED, listener: typeof nestedChildRatio_MC | null): this;\n  on(type: typeof CompositeColumn.EVENT_FILTER_CHANGED, listener: typeof filterChanged | null): this;\n  on(type: typeof CompositeColumn.EVENT_ADD_COLUMN, listener: typeof addColumn | null): this;\n  on(type: typeof CompositeColumn.EVENT_MOVE_COLUMN, listener: typeof moveColumn | null): this;\n  on(type: typeof CompositeColumn.EVENT_REMOVE_COLUMN, listener: typeof removeColumn | null): this;\n  on(type: typeof Column.EVENT_WIDTH_CHANGED, listener: typeof widthChanged | null): this;\n  on(type: typeof Column.EVENT_LABEL_CHANGED, listener: typeof labelChanged | null): this;\n  on(type: typeof Column.EVENT_METADATA_CHANGED, listener: typeof metaDataChanged | null): this;\n  on(type: typeof Column.EVENT_DIRTY, listener: typeof dirty | null): this;\n  on(type: typeof Column.EVENT_DIRTY_HEADER, listener: typeof dirtyHeader | null): this;\n  on(type: typeof Column.EVENT_DIRTY_VALUES, listener: typeof dirtyValues | null): this;\n  on(type: typeof Column.EVENT_DIRTY_CACHES, listener: typeof dirtyCaches | null): this;\n  on(type: typeof Column.EVENT_RENDERER_TYPE_CHANGED, listener: typeof rendererTypeChanged | null): this;\n  on(type: typeof Column.EVENT_GROUP_RENDERER_TYPE_CHANGED, listener: typeof groupRendererChanged | null): this;\n  on(type: typeof Column.EVENT_SUMMARY_RENDERER_TYPE_CHANGED, listener: typeof summaryRendererChanged | null): this;\n  on(type: typeof Column.EVENT_VISIBILITY_CHANGED, listener: typeof visibilityChanged | null): this;\n  on(type: string | string[], listener: IEventListener | null): this; // required for correct typings in *.d.ts\n  on(type: string | string[], listener: IEventListener | null): this {\n    return super.on(type, listener);\n  }\n\n  setCollapsed(value: boolean) {\n    if (this.collapsed === value) {\n      return;\n    }\n    this.fire([StackColumn.EVENT_COLLAPSE_CHANGED, Column.EVENT_DIRTY_HEADER, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY], this.collapsed, this.collapsed = value);\n  }\n\n  getCollapsed() {\n    return this.collapsed;\n  }\n\n  dump(toDescRef: (desc: any) => any) {\n    const r = super.dump(toDescRef);\n    r.collapsed = this.collapsed;\n    return r;\n  }\n\n  restore(dump: any, factory: ITypeFactory) {\n    this.collapsed = dump.collapsed === true;\n    super.restore(dump, factory);\n  }\n\n  flatten(r: IFlatColumn[], offset: number, levelsToGo = 0, padding = 0) {\n    return StackColumn.prototype.flatten.call(this, r, offset, levelsToGo, padding);\n  }\n\n  /**\n   * inserts a column at a the given position\n   * @param col\n   * @param index\n   */\n  insert(col: Column, index: number) {\n    col.on(`${Column.EVENT_WIDTH_CHANGED}.stack`, this.adaptChange);\n    //increase my width\n    super.setWidth(this.length === 0 ? col.getWidth() : (this.getWidth() + col.getWidth()));\n\n    return super.insert(col, index);\n  }\n\n  /**\n   * adapts weights according to an own width change\n   * @param oldValue\n   * @param newValue\n   */\n  private adaptWidthChange(oldValue: number, newValue: number) {\n    if (similar(oldValue, newValue, 0.5)) {\n      return;\n    }\n    const act = this.getWidth();\n    const next = act + (newValue - oldValue);\n    this.fire([MultiLevelCompositeColumn.EVENT_MULTI_LEVEL_CHANGED, Column.EVENT_DIRTY_HEADER, Column.EVENT_DIRTY], act, next);\n    super.setWidth(next);\n  }\n\n  removeImpl(child: Column, index: number) {\n    child.on(`${Column.EVENT_WIDTH_CHANGED}.stack`, null);\n    super.setWidth(this.length === 0 ? 100 : this.getWidth() - child.getWidth());\n    return super.removeImpl(child, index);\n  }\n\n  setWidth(value: number) {\n    const act = this.getWidth();\n    const factor = value / act;\n    this._children.forEach((child) => {\n      //disable since we change it\n      child.setWidthImpl(child.getWidth() * factor);\n    });\n    if (!similar(act, value, 0.5)) {\n      this.fire([MultiLevelCompositeColumn.EVENT_MULTI_LEVEL_CHANGED, Column.EVENT_DIRTY_HEADER, Column.EVENT_DIRTY], act, value);\n    }\n    super.setWidth(value);\n  }\n\n  getRenderer() {\n    if (this.getCollapsed()) {\n      return MultiLevelCompositeColumn.EVENT_COLLAPSE_CHANGED;\n    }\n    return super.getRenderer();\n  }\n\n  getExportValue(row: IDataRow, format: 'text' | 'json'): any {\n    if (format === 'json') {\n      return {\n        children: this.children.map((d) => d.getExportValue(row, format))\n      };\n    }\n    return super.getExportValue(row, format);\n  }\n}\n","import {IDataRow, ECompareValueType} from './interfaces';\nimport MultiLevelCompositeColumn from './MultiLevelCompositeColumn';\nimport {concat} from '../internal';\n\n/**\n * factory for creating a description creating a mean column\n * @param label\n * @returns {{type: string, label: string}}\n */\nexport function createNestedDesc(label: string = 'Nested') {\n  return {type: 'nested', label};\n}\n\n/**\n * a nested column is a composite column where the sorting order is determined by the nested ordering of the children\n * i.e., sort by the first child if equal sort by the second child,...\n */\nexport default class NestedColumn extends MultiLevelCompositeColumn {\n\n  toCompareValue(row: IDataRow) {\n    return concat(this.children.map((d) => d.toCompareValue(row)));\n  }\n\n  toCompareValueType(): ECompareValueType[] {\n    return concat(this.children.map((d) => d.toCompareValueType()));\n  }\n\n  getLabel(row: IDataRow) {\n    return this.children.map((d) => d.getLabel(row)).join(';');\n  }\n\n  getValue(row: IDataRow) {\n    return this.children.map((d) => d.getValue(row)).join(';');\n  }\n}\n","import {toolbar, SortByDefault, dialogAddons} from './annotations';\nimport Column, {widthChanged, labelChanged, metaDataChanged, dirty, dirtyHeader, dirtyValues, rendererTypeChanged, groupRendererChanged, summaryRendererChanged, visibilityChanged, dirtyCaches} from './Column';\nimport ValueColumn, {dataLoaded} from './ValueColumn';\nimport {IKeyValue} from './IArrayColumn';\nimport {IDataRow, ECompareValueType, ITypeFactory} from './interfaces';\nimport {\n  EAdvancedSortMethod, IAdvancedBoxPlotColumn, INumberDesc,\n  INumberFilter,\n  IMappingFunction,\n  IColorMappingFunction} from './INumberColumn';\nimport MapColumn, {IMapColumnDesc} from './MapColumn';\nimport {restoreMapping} from './MappingFunction';\nimport {isMissingValue} from './missing';\nimport NumberColumn from './NumberColumn';\nimport {IEventListener, IAdvancedBoxPlotData, boxplotBuilder} from '../internal';\nimport {format} from 'd3-format';\nimport {DEFAULT_FORMATTER, noNumberFilter, toCompareBoxPlotValue, getBoxPlotNumber, isDummyNumberFilter, restoreNumberFilter} from './internalNumber';\n\n\nexport interface INumberMapDesc extends INumberDesc {\n  readonly sort?: EAdvancedSortMethod;\n}\n\nexport declare type INumberMapColumnDesc = INumberMapDesc & IMapColumnDesc<number>;\n\n/**\n * emitted when the mapping property changes\n * @asMemberOf NumberMapColumn\n * @event\n */\nexport declare function mappingChanged_NMC(previous: IMappingFunction, current: IMappingFunction): void;\n/**\n * emitted when the color mapping property changes\n * @asMemberOf NumberMapColumn\n * @event\n */\nexport declare function colorMappingChanged_NMC(previous: IColorMappingFunction, current: IColorMappingFunction): void;\n\n/**\n * emitted when the sort method property changes\n * @asMemberOf NumberMapColumn\n * @event\n */\nexport declare function sortMethodChanged_NMC(previous: EAdvancedSortMethod, current: EAdvancedSortMethod): void;\n\n/**\n * emitted when the filter property changes\n * @asMemberOf NumberMapColumn\n * @event\n */\nexport declare function filterChanged_NMC(previous: INumberFilter | null, current: INumberFilter | null): void;\n\n@toolbar('filterNumber', 'colorMapped', 'editMapping')\n@dialogAddons('sort', 'sortNumbers')\n@SortByDefault('descending')\nexport default class NumberMapColumn extends MapColumn<number> implements IAdvancedBoxPlotColumn {\n  static readonly EVENT_MAPPING_CHANGED = NumberColumn.EVENT_MAPPING_CHANGED;\n  static readonly EVENT_COLOR_MAPPING_CHANGED = NumberColumn.EVENT_COLOR_MAPPING_CHANGED;\n  static readonly EVENT_SORTMETHOD_CHANGED = NumberColumn.EVENT_SORTMETHOD_CHANGED;\n  static readonly EVENT_FILTER_CHANGED = NumberColumn.EVENT_FILTER_CHANGED;\n\n  private readonly numberFormat: (n: number) => string = DEFAULT_FORMATTER;\n\n  private sort: EAdvancedSortMethod;\n  private mapping: IMappingFunction;\n  private original: IMappingFunction;\n  private colorMapping: IColorMappingFunction;\n  /**\n   * currently active filter\n   * @type {{min: number, max: number}}\n   * @private\n   */\n  private currentFilter: INumberFilter = noNumberFilter();\n\n  constructor(id: string, desc: Readonly<INumberMapColumnDesc>, factory: ITypeFactory) {\n    super(id, desc);\n    this.mapping = restoreMapping(desc, factory);\n    this.original = this.mapping.clone();\n    this.colorMapping = factory.colorMappingFunction(desc.colorMapping || desc.color);\n    this.sort = desc.sort || EAdvancedSortMethod.median;\n\n    if (desc.numberFormat) {\n      this.numberFormat = format(desc.numberFormat);\n    }\n\n    this.setDefaultRenderer('mapbars');\n  }\n\n  getNumberFormat() {\n    return this.numberFormat;\n  }\n\n  toCompareValue(row: IDataRow): number {\n    return toCompareBoxPlotValue(this, row);\n  }\n\n  toCompareValueType() {\n    return ECompareValueType.FLOAT;\n  }\n\n  getBoxPlotData(row: IDataRow): IAdvancedBoxPlotData | null {\n    const data = this.getRawValue(row);\n    if (data == null) {\n      return null;\n    }\n    const b = boxplotBuilder();\n    for (const d of data) {\n      b.push(isMissingValue(d.value) ? NaN : this.mapping.apply(d.value));\n    }\n    return b.build();\n  }\n\n  getRange() {\n    return this.mapping.getRange(this.numberFormat);\n  }\n\n  getRawBoxPlotData(row: IDataRow): IAdvancedBoxPlotData | null {\n    const data = this.getRawValue(row);\n    if (data == null) {\n      return null;\n    }\n\n    const b = boxplotBuilder();\n    for (const d of data) {\n      b.push(isMissingValue(d.value) ? NaN : d.value);\n    }\n    return b.build();\n  }\n\n  getNumber(row: IDataRow): number {\n    return getBoxPlotNumber(this, row, 'normalized');\n  }\n\n  getRawNumber(row: IDataRow): number {\n    return getBoxPlotNumber(this, row, 'raw');\n  }\n\n  iterNumber(row: IDataRow) {\n    const r = this.getValue(row);\n    return r ? r.map((d) => d.value) : [NaN];\n  }\n\n  iterRawNumber(row: IDataRow) {\n    const r = this.getRawValue(row);\n    return r ? r.map((d) => d.value) : [NaN];\n  }\n\n  getValue(row: IDataRow) {\n    const values = this.getRawValue(row);\n    return values.length === 0 ? null : values.map(({key, value}) => ({key, value: isMissingValue(value) ? NaN : this.mapping.apply(value)}));\n  }\n\n  getRawValue(row: IDataRow): IKeyValue<number>[] {\n    const r = super.getValue(row);\n    return r == null ? [] : r;\n  }\n\n  getExportValue(row: IDataRow, format: 'text' | 'json'): any {\n    return format === 'json' ? this.getRawValue(row) : super.getExportValue(row, format);\n  }\n\n  getLabels(row: IDataRow) {\n    const v = this.getRawValue(row);\n    return v.map(({key, value}) => ({key, value: this.numberFormat(value)}));\n  }\n\n  getSortMethod() {\n    return this.sort;\n  }\n\n  setSortMethod(sort: EAdvancedSortMethod) {\n    if (this.sort === sort) {\n      return;\n    }\n    this.fire([NumberMapColumn.EVENT_SORTMETHOD_CHANGED], this.sort, this.sort = sort);\n    // sort by me if not already sorted by me\n    if (!this.isSortedByMe().asc) {\n      this.sortByMe();\n    }\n  }\n\n  dump(toDescRef: (desc: any) => any): any {\n    const r = super.dump(toDescRef);\n    r.sortMethod = this.getSortMethod();\n    r.filter = !isDummyNumberFilter(this.currentFilter) ? this.currentFilter : null;\n    r.map = this.mapping.toJSON();\n    r.colorMapping = this.colorMapping.toJSON();\n    return r;\n  }\n\n  restore(dump: any, factory: ITypeFactory) {\n    super.restore(dump, factory);\n    if (dump.sortMethod) {\n      this.sort = dump.sortMethod;\n    }\n    if (dump.filter) {\n      this.currentFilter = restoreNumberFilter(dump.filter);\n    }\n    if (dump.map || dump.domain) {\n      this.mapping = restoreMapping(dump, factory);\n    }\n    if (dump.colorMapping) {\n      this.colorMapping = factory.colorMappingFunction(dump.colorMapping);\n    }\n  }\n\n  protected createEventList() {\n    return super.createEventList().concat([NumberMapColumn.EVENT_COLOR_MAPPING_CHANGED, NumberMapColumn.EVENT_MAPPING_CHANGED, NumberMapColumn.EVENT_SORTMETHOD_CHANGED, NumberMapColumn.EVENT_FILTER_CHANGED]);\n  }\n\n  on(type: typeof NumberMapColumn.EVENT_COLOR_MAPPING_CHANGED, listener: typeof colorMappingChanged_NMC | null): this;\n  on(type: typeof NumberMapColumn.EVENT_MAPPING_CHANGED, listener: typeof mappingChanged_NMC | null): this;\n  on(type: typeof NumberMapColumn.EVENT_SORTMETHOD_CHANGED, listener: typeof sortMethodChanged_NMC | null): this;\n  on(type: typeof NumberMapColumn.EVENT_FILTER_CHANGED, listener: typeof filterChanged_NMC | null): this;\n  on(type: typeof ValueColumn.EVENT_DATA_LOADED, listener: typeof dataLoaded | null): this;\n  on(type: typeof Column.EVENT_WIDTH_CHANGED, listener: typeof widthChanged | null): this;\n  on(type: typeof Column.EVENT_LABEL_CHANGED, listener: typeof labelChanged | null): this;\n  on(type: typeof Column.EVENT_METADATA_CHANGED, listener: typeof metaDataChanged | null): this;\n  on(type: typeof Column.EVENT_DIRTY, listener: typeof dirty | null): this;\n  on(type: typeof Column.EVENT_DIRTY_HEADER, listener: typeof dirtyHeader | null): this;\n  on(type: typeof Column.EVENT_DIRTY_VALUES, listener: typeof dirtyValues | null): this;\n  on(type: typeof Column.EVENT_DIRTY_CACHES, listener: typeof dirtyCaches | null): this;\n  on(type: typeof Column.EVENT_RENDERER_TYPE_CHANGED, listener: typeof rendererTypeChanged | null): this;\n  on(type: typeof Column.EVENT_GROUP_RENDERER_TYPE_CHANGED, listener: typeof groupRendererChanged | null): this;\n  on(type: typeof Column.EVENT_SUMMARY_RENDERER_TYPE_CHANGED, listener: typeof summaryRendererChanged | null): this;\n  on(type: typeof Column.EVENT_VISIBILITY_CHANGED, listener: typeof visibilityChanged | null): this;\n  on(type: string | string[], listener: IEventListener | null): this; // required for correct typings in *.d.ts\n  on(type: string | string[], listener: IEventListener | null): this {\n    return super.on(<any>type, listener);\n  }\n\n  getOriginalMapping() {\n    return this.original.clone();\n  }\n\n  getMapping() {\n    return this.mapping.clone();\n  }\n\n  setMapping(mapping: IMappingFunction) {\n    if (this.mapping.eq(mapping)) {\n      return;\n    }\n    this.fire([NumberMapColumn.EVENT_MAPPING_CHANGED, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY], this.mapping.clone(), this.mapping = mapping);\n  }\n\n  getColor(row: IDataRow) {\n    return NumberColumn.prototype.getColor.call(this, row);\n  }\n\n  getColorMapping() {\n    return this.colorMapping.clone();\n  }\n\n  setColorMapping(mapping: IColorMappingFunction) {\n    if (this.colorMapping.eq(mapping)) {\n      return;\n    }\n    this.fire([NumberMapColumn.EVENT_COLOR_MAPPING_CHANGED, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY], this.colorMapping.clone(), this.colorMapping = mapping);\n  }\n\n  isFiltered() {\n    return NumberColumn.prototype.isFiltered.call(this);\n  }\n\n  getFilter(): INumberFilter {\n    return NumberColumn.prototype.getFilter.call(this);\n  }\n\n  setFilter(value: INumberFilter | null) {\n    NumberColumn.prototype.setFilter.call(this, value);\n  }\n\n  filter(row: IDataRow) {\n    return NumberColumn.prototype.filter.call(this, row);\n  }\n\n  clearFilter() {\n    return NumberColumn.prototype.clearFilter.call(this);\n  }\n}\n\n","import {equalArrays, extent, IEventListener} from '../internal';\nimport {Category, toolbar} from './annotations';\nimport {DEFAULT_CATEGORICAL_COLOR_FUNCTION} from './CategoricalColorMappingFunction';\nimport CategoricalColumn from './CategoricalColumn';\nimport Column, {dirty, dirtyCaches, dirtyHeader, dirtyValues, groupRendererChanged, labelChanged, metaDataChanged, rendererTypeChanged, summaryRendererChanged, visibilityChanged, widthChanged} from './Column';\nimport {ICategoricalColumn, ICategoricalDesc, ICategoricalFilter, ICategory, ICategoricalColorMappingFunction} from './ICategoricalColumn';\nimport {IDataRow, IValueColumnDesc, ITypeFactory} from './interfaces';\nimport NumberColumn from './NumberColumn';\nimport {INumberColumn} from './INumberColumn';\nimport ValueColumn, {dataLoaded} from './ValueColumn';\nimport {toCategories} from './internalCategorical';\nimport {DEFAULT_FORMATTER} from './internalNumber';\n\nexport declare type IOrdinalColumnDesc = ICategoricalDesc & IValueColumnDesc<number>;\n\n/**\n * emitted when the mapping property changes\n * @asMemberOf OrdinalColumn\n * @event\n */\nexport declare function mappingChanged_OC(previous: number[], current: number[]): void;\n\n/**\n * emitted when the color mapping property changes\n * @asMemberOf OrdinalColumn\n * @event\n */\nexport declare function colorMappingChanged_OC(previous: ICategoricalColorMappingFunction, current: ICategoricalColorMappingFunction): void;\n\n/**\n * emitted when the filter property changes\n * @asMemberOf OrdinalColumn\n * @event\n */\nexport declare function filterChanged_OC(previous: ICategoricalFilter | null, current: ICategoricalFilter | null): void;\n\n/**\n * similar to a categorical column but the categories are mapped to numbers\n */\n@toolbar('group', 'filterOrdinal', 'colorMappedCategorical')\n@Category('categorical')\nexport default class OrdinalColumn extends ValueColumn<number> implements INumberColumn, ICategoricalColumn {\n  static readonly EVENT_MAPPING_CHANGED = NumberColumn.EVENT_MAPPING_CHANGED;\n  static readonly EVENT_FILTER_CHANGED = CategoricalColumn.EVENT_FILTER_CHANGED;\n  static readonly EVENT_COLOR_MAPPING_CHANGED = CategoricalColumn.EVENT_COLOR_MAPPING_CHANGED;\n\n  readonly categories: ICategory[];\n\n  private colorMapping: ICategoricalColorMappingFunction;\n\n  private readonly lookup = new Map<string, Readonly<ICategory>>();\n\n  private currentFilter: ICategoricalFilter | null = null;\n\n\n  constructor(id: string, desc: Readonly<IOrdinalColumnDesc>) {\n    super(id, desc);\n    this.categories = toCategories(desc);\n    this.categories.forEach((d) => this.lookup.set(d.name, d));\n    this.setDefaultRenderer('number');\n    this.setDefaultGroupRenderer('boxplot');\n    this.colorMapping = DEFAULT_CATEGORICAL_COLOR_FUNCTION;\n  }\n\n  protected createEventList() {\n    return super.createEventList().concat([OrdinalColumn.EVENT_COLOR_MAPPING_CHANGED, OrdinalColumn.EVENT_MAPPING_CHANGED, OrdinalColumn.EVENT_FILTER_CHANGED]);\n  }\n\n  on(type: typeof OrdinalColumn.EVENT_MAPPING_CHANGED, listener: typeof mappingChanged_OC | null): this;\n  on(type: typeof OrdinalColumn.EVENT_COLOR_MAPPING_CHANGED, listener: typeof colorMappingChanged_OC | null): this;\n  on(type: typeof OrdinalColumn.EVENT_FILTER_CHANGED, listener: typeof filterChanged_OC | null): this;\n  on(type: typeof ValueColumn.EVENT_DATA_LOADED, listener: typeof dataLoaded | null): this;\n  on(type: typeof Column.EVENT_WIDTH_CHANGED, listener: typeof widthChanged | null): this;\n  on(type: typeof Column.EVENT_LABEL_CHANGED, listener: typeof labelChanged | null): this;\n  on(type: typeof Column.EVENT_METADATA_CHANGED, listener: typeof metaDataChanged | null): this;\n  on(type: typeof Column.EVENT_DIRTY, listener: typeof dirty | null): this;\n  on(type: typeof Column.EVENT_DIRTY_HEADER, listener: typeof dirtyHeader | null): this;\n  on(type: typeof Column.EVENT_DIRTY_VALUES, listener: typeof dirtyValues | null): this;\n  on(type: typeof Column.EVENT_DIRTY_CACHES, listener: typeof dirtyCaches | null): this;\n  on(type: typeof Column.EVENT_RENDERER_TYPE_CHANGED, listener: typeof rendererTypeChanged | null): this;\n  on(type: typeof Column.EVENT_GROUP_RENDERER_TYPE_CHANGED, listener: typeof groupRendererChanged | null): this;\n  on(type: typeof Column.EVENT_SUMMARY_RENDERER_TYPE_CHANGED, listener: typeof summaryRendererChanged | null): this;\n  on(type: typeof Column.EVENT_VISIBILITY_CHANGED, listener: typeof visibilityChanged | null): this;\n  on(type: string | string[], listener: IEventListener | null): this; // required for correct typings in *.d.ts\n  on(type: string | string[], listener: IEventListener | null): this {\n    return super.on(<any>type, listener);\n  }\n\n  getNumberFormat() {\n    return DEFAULT_FORMATTER;\n  }\n\n  get dataLength() {\n    return this.categories.length;\n  }\n\n  get labels() {\n    return this.categories.map((d) => d.label);\n  }\n\n  getValue(row: IDataRow) {\n    const v = this.getNumber(row);\n    return isNaN(v) ? null : v;\n  }\n\n  getCategory(row: IDataRow) {\n    const v = super.getValue(row);\n    if (!v) {\n      return null;\n    }\n    const vs = String(v);\n    return this.lookup.has(vs) ? this.lookup.get(vs)! : null;\n  }\n\n  getCategories(row: IDataRow) {\n    return [this.getCategory(row)];\n  }\n\n  iterCategory(row: IDataRow) {\n    return [this.getCategory(row)];\n  }\n\n  iterNumber(row: IDataRow) {\n    return [this.getNumber(row)];\n  }\n\n  iterRawNumber(row: IDataRow) {\n    return [this.getRawNumber(row)];\n  }\n\n  getColor(row: IDataRow) {\n    return CategoricalColumn.prototype.getColor.call(this, row);\n  }\n\n  getLabel(row: IDataRow) {\n    return CategoricalColumn.prototype.getLabel.call(this, row);\n  }\n\n  getLabels(row: IDataRow) {\n    return CategoricalColumn.prototype.getLabels.call(this, row);\n  }\n\n  getValues(row: IDataRow) {\n    return CategoricalColumn.prototype.getValues.call(this, row);\n  }\n\n  getMap(row: IDataRow) {\n    return CategoricalColumn.prototype.getMap.call(this, row);\n  }\n\n  getMapLabel(row: IDataRow) {\n    return CategoricalColumn.prototype.getMapLabel.call(this, row);\n  }\n\n  getSet(row: IDataRow) {\n    return CategoricalColumn.prototype.getSet.call(this, row);\n  }\n\n  getNumber(row: IDataRow) {\n    const v = this.getCategory(row);\n    return v ? v.value : NaN;\n  }\n\n  getRawNumber(row: IDataRow) {\n    return this.getNumber(row);\n  }\n\n  getExportValue(row: IDataRow, format: 'text' | 'json'): any {\n    if (format === 'json') {\n      const value = this.getNumber(row);\n      if (isNaN(value)) {\n        return null;\n      }\n      return {\n        name: this.getLabel(row),\n        value\n      };\n    }\n    return super.getExportValue(row, format);\n  }\n\n  dump(toDescRef: (desc: any) => any): any {\n    const r = CategoricalColumn.prototype.dump.call(this, toDescRef);\n    r.mapping = this.getMapping();\n    return r;\n  }\n\n  restore(dump: any, factory: ITypeFactory) {\n    CategoricalColumn.prototype.restore.call(this, dump, factory);\n    if (dump.mapping) {\n      this.setMapping(dump.mapping);\n    }\n  }\n\n  getMapping() {\n    return this.categories.map((d) => d.value);\n  }\n\n  setMapping(mapping: number[]) {\n    const r = extent(mapping);\n    mapping = mapping.map((d) => (d - r[0]!) / (r[1]! - r[0]!));\n    const bak = this.getMapping();\n    if (equalArrays(bak, mapping)) {\n      return;\n    }\n    this.categories.forEach((d, i) => d.value = mapping[i] || 0);\n    this.fire([OrdinalColumn.EVENT_MAPPING_CHANGED, Column.EVENT_DIRTY_HEADER, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY_CACHES, Column.EVENT_DIRTY], bak, this.getMapping());\n  }\n\n  getColorMapping() {\n    return this.colorMapping.clone();\n  }\n\n  setColorMapping(mapping: ICategoricalColorMappingFunction) {\n    return CategoricalColumn.prototype.setColorMapping.call(this, mapping);\n  }\n\n  isFiltered() {\n    return this.currentFilter != null;\n  }\n\n  filter(row: IDataRow): boolean {\n    return CategoricalColumn.prototype.filter.call(this, row);\n  }\n\n  group(row: IDataRow) {\n    return CategoricalColumn.prototype.group.call(this, row);\n  }\n\n  getFilter() {\n    return this.currentFilter;\n  }\n\n  setFilter(filter: ICategoricalFilter | null) {\n    return CategoricalColumn.prototype.setFilter.call(this, filter);\n  }\n\n  clearFilter() {\n    return CategoricalColumn.prototype.clearFilter.call(this);\n  }\n\n  toCompareValue(row: IDataRow) {\n    return CategoricalColumn.prototype.toCompareValue.call(this, row);\n  }\n\n  toCompareValueType() {\n    return CategoricalColumn.prototype.toCompareValueType.call(this);\n  }\n\n  getRenderer(): string {\n    return NumberColumn.prototype.getRenderer.call(this);\n  }\n}\n","import {NumberColumn} from '.';\nimport {IEventListener} from '../internal';\nimport {SortByDefault, toolbar} from './annotations';\nimport Column, {dirty, dirtyCaches, dirtyHeader, dirtyValues, groupRendererChanged, labelChanged, metaDataChanged, rendererTypeChanged, summaryRendererChanged, visibilityChanged, widthChanged} from './Column';\nimport CompositeColumn, {addColumn, moveColumn, removeColumn} from './CompositeColumn';\nimport CompositeNumberColumn, {ICompositeNumberDesc} from './CompositeNumberColumn';\nimport {IDataRow, ITypeFactory} from './interfaces';\nimport {isDummyNumberFilter, noNumberFilter, restoreNumberFilter} from './internalNumber';\nimport {IColorMappingFunction, IMapAbleColumn, IMapAbleDesc, IMappingFunction, INumberFilter, isNumberColumn} from './INumberColumn';\nimport {restoreMapping} from './MappingFunction';\n\nconst DEFAULT_SCRIPT = `let s = 0;\ncol.forEach((c) => s += c.v);\nreturn s / col.length`;\n\n/**\n * factory for creating a description creating a mean column\n * @param label\n * @returns {{type: string, label: string}}\n */\nexport function createScriptDesc(label: string = 'script') {\n  return {type: 'script', label, script: DEFAULT_SCRIPT};\n}\n\n\nfunction wrapWithContext(code: string) {\n  let clean = code.trim();\n  if (!clean.includes('return')) {\n    clean = `return (${clean});`;\n  }\n  return `\n  const max = function(arr) { return Math.max.apply(Math, arr); };\n  const min = function(arr) { return Math.min.apply(Math, arr); };\n  const extent = function(arr) { return [min(arr), max(arr)]; };\n  const clamp = function(v, minValue, maxValue) { return v < minValue ? minValue : (v > maxValue ? maxValue : v); };\n  const normalize = function(v, minMax, max) {\n    if (Array.isArray(minMax)) {\n      minMax = minMax[0];\n      max = minMax[1];\n    }\n    return (v - minMax) / (max - minMax);\n  };\n  const denormalize = function(v, minMax, max) {\n    if (Array.isArray(minMax)) {\n      minMax = minMax[0];\n      max = minMax[1];\n    }\n    return v * (max - minMax) + minMax;\n  };\n  const linear = function(v, source, target) {\n    target = target || [0, 1];\n    return denormalize(normalize(v, source), target);\n  };\n  const v = (function custom() {\n    ${clean}\n  })();\n\n  return typeof v === 'number' ? v : NaN`;\n}\n\ninterface IColumnWrapper {\n  v: any;\n  raw: number | null;\n  type: string;\n  name: string;\n  id: string;\n}\n\n/**\n * wrapper class for simpler column accessing\n */\nclass ColumnWrapper implements IColumnWrapper {\n  constructor(private readonly c: Column, public readonly v: any, public readonly raw: number | null) {\n\n  }\n\n  get type() {\n    return this.c.desc.type;\n  }\n\n  get name() {\n    return this.c.getMetaData().label;\n  }\n\n  get id() {\n    return this.c.id;\n  }\n}\n\nclass LazyColumnWrapper implements IColumnWrapper {\n  constructor(private readonly c: Column, private readonly row: IDataRow) {\n\n  }\n\n  get type() {\n    return this.c.desc.type;\n  }\n\n  get name() {\n    return this.c.getMetaData().label;\n  }\n\n  get id() {\n    return this.c.id;\n  }\n\n  get v() {\n    return this.c.getValue(this.row);\n  }\n\n  get raw() {\n    return isNumberColumn(this.c) ? this.c.getRawNumber(this.row) : null;\n  }\n}\n\n/**\n * helper context for accessing columns within a scripted columns\n */\nclass ColumnContext {\n  private readonly lookup = new Map<string, IColumnWrapper>();\n  private _all: ColumnContext | null = null;\n\n  constructor(private readonly children: IColumnWrapper[], private readonly allFactory?: () => ColumnContext) {\n    children.forEach((c) => {\n      this.lookup.set(`ID@${c.id}`, c);\n      this.lookup.set(`ID@${c.id.toLowerCase()}`, c);\n      this.lookup.set(`NAME@${c.name}`, c);\n      this.lookup.set(`NAME@${c.name.toLowerCase()}`, c);\n    });\n  }\n\n  /**\n   * get a column by name\n   * @param {string} name\n   * @return {IColumnWrapper}\n   */\n  byName(name: string) {\n    return this.lookup.get(`NAME@${name}`);\n  }\n\n  /**\n   * get a column by id\n   * @param {string} id\n   * @return {IColumnWrapper}\n   */\n  byID(id: string) {\n    return this.lookup.get(`ID@${id}`);\n  }\n\n  /**\n   * get a column by index\n   * @param {number} index\n   * @return {IColumnWrapper}\n   */\n  byIndex(index: number) {\n    return this.children[index];\n  }\n\n  forEach(callback: ((c: IColumnWrapper, index: number) => void)) {\n    return this.children.forEach(callback);\n  }\n\n  /**\n   * number of columns\n   * @return {number}\n   */\n  get length() {\n    return this.children.length;\n  }\n\n  /**\n   * get the all context, i.e one with all columns of this ranking\n   * @return {ColumnContext}\n   */\n  get all() {\n    if (this._all == null) {\n      this._all = this.allFactory ? this.allFactory() : null;\n    }\n    return this._all!;\n  }\n}\n\n\nexport interface IScriptDesc extends ICompositeNumberDesc, IMapAbleDesc {\n  /**\n   * the function to use, it has two parameters: children (current children) and values (their row values)\n   * @default 'return Math.max.apply(Math,values)'\n   */\n  script?: string;\n}\n\nexport declare type IScriptColumnDesc = IScriptDesc;\n\n/**\n * emitted when the script property changes\n * @asMemberOf ScriptColumn\n * @event\n */\nexport declare function scriptChanged(previous: string, current: string): void;\n\n/**\n * emitted when the mapping property changes\n * @asMemberOf ScriptColumn\n * @event\n */\nexport declare function mappingChanged(previous: IMappingFunction, current: IMappingFunction): void;\n/**\n * emitted when the color mapping property changes\n * @asMemberOf ScriptColumn\n * @event\n */\nexport declare function colorMappingChanged(previous: IColorMappingFunction, current: IColorMappingFunction): void;\n\n/**\n * emitted when the filter property changes\n * @asMemberOf ScriptColumn\n * @event\n */\nexport declare function filterChanged(previous: INumberFilter | null, current: INumberFilter | null): void;\n\n\n\n/**\n * column combiner which uses a custom JavaScript function to combined the values\n * The script iteslf can be any valid JavaScript code. It will be embedded in a function.\n * Therefore the last statement has to return a value.\n *\n * In case of a single line statement the code piece statement <code>return</code> will be automatically prefixed.\n *\n * The function signature is: <br><code>(row: any, index: number, children: Column[], values: any[], raws: (number|null)[]) => number</code>\n *  <dl>\n *    <dt>param: <code>row</code></dt>\n *    <dd>the row in the dataset to compute the value for</dd>\n *    <dt>param: <code>index</code></dt>\n *    <dd>the index of the row</dd>\n *    <dt>param: <code>children</code></dt>\n *    <dd>the list of LineUp columns that are part of this ScriptColumn</dd>\n *    <dt>param: <code>values</code></dt>\n *    <dd>the computed value of each column (see <code>children</code>) for the current row</dd>\n *    <dt>param: <code>raws</code></dt>\n *    <dd>similar to <code>values</code>. Numeric columns return by default the normalized value, this array gives access to the original \"raw\" values before mapping is applied</dd>\n *    <dt>returns:</dt>\n *    <dd>the computed number <strong>in the range [0, 1] or NaN</strong></dd>\n *  </dl>\n *\n * In addition to the standard JavaScript functions and objects (Math, ...) a couple of utility functions are available: </p>\n * <dl>\n *    <dt><code>max(arr: number[]) => number</code></dt>\n *    <dd>computes the maximum of the given array of numbers</dd>\n *    <dt><code>min(arr: number[]) => number</code></dt>\n *    <dd>computes the minimum of the given array of numbers</dd>\n *    <dt><code>extent(arr: number[]) => [number, number]</code></dt>\n *    <dd>computes both minimum and maximum and returning an array with the first element the minimum and the second the maximum</dd>\n *    <dt><code>clamp(v: number, min: number, max: number) => number</code></dt>\n *    <dd>ensures that the given value is within the given min/max value</dd>\n *    <dt><code>normalize(v: number, min: number, max: number) => number</code></dt>\n *    <dd>normalizes the given value <code>(v - min) / (max - min)</code></dd>\n *    <dt><code>denormalize(v: number, min: number, max: number) => number</code></dt>\n *    <dd>inverts a normalized value <code>v * (max - min) + min</code></dd>\n *    <dt><code>linear(v: number, input: [number, number], output: [number, number]) => number</code></dt>\n *    <dd>performs a linear mapping from input domain to output domain both given as an array of [min, max] values. <code>denormalize(normalize(v, input[0], input[1]), output[0], output[1])</code></dd>\n *  </dl>\n */\n@toolbar('script', 'filterNumber', 'colorMapped', 'editMapping')\n@SortByDefault('descending')\nexport default class ScriptColumn extends CompositeNumberColumn implements IMapAbleColumn {\n  static readonly EVENT_MAPPING_CHANGED = NumberColumn.EVENT_MAPPING_CHANGED;\n  static readonly EVENT_COLOR_MAPPING_CHANGED = NumberColumn.EVENT_COLOR_MAPPING_CHANGED;\n  static readonly EVENT_SCRIPT_CHANGED = 'scriptChanged';\n  static readonly DEFAULT_SCRIPT = DEFAULT_SCRIPT;\n\n  private script = ScriptColumn.DEFAULT_SCRIPT;\n  private f: Function | null = null;\n  private mapping: IMappingFunction;\n  private original: IMappingFunction;\n  private colorMapping: IColorMappingFunction;\n  /**\n   * currently active filter\n   * @type {{min: number, max: number}}\n   * @private\n   */\n  private currentFilter: INumberFilter = noNumberFilter();\n\n\n  constructor(id: string, desc: Readonly<IScriptColumnDesc>, factory: ITypeFactory) {\n    super(id, desc);\n    this.script = desc.script || this.script;\n    this.mapping = restoreMapping(desc, factory);\n    this.original = this.mapping.clone();\n    this.colorMapping = factory.colorMappingFunction(desc.colorMapping || desc.color);\n\n    this.setDefaultRenderer('number');\n    this.setDefaultGroupRenderer('boxplot');\n    this.setDefaultSummaryRenderer('histogram');\n  }\n\n  protected createEventList() {\n    return super.createEventList().concat([ScriptColumn.EVENT_SCRIPT_CHANGED, ScriptColumn.EVENT_COLOR_MAPPING_CHANGED, ScriptColumn.EVENT_MAPPING_CHANGED]);\n  }\n\n  on(type: typeof ScriptColumn.EVENT_COLOR_MAPPING_CHANGED, listener: typeof colorMappingChanged | null): this;\n  on(type: typeof ScriptColumn.EVENT_MAPPING_CHANGED, listener: typeof mappingChanged | null): this;\n  on(type: typeof ScriptColumn.EVENT_FILTER_CHANGED, listener: typeof filterChanged | null): this;\n  on(type: typeof ScriptColumn.EVENT_SCRIPT_CHANGED, listener: typeof scriptChanged | null): this;\n  on(type: typeof CompositeColumn.EVENT_FILTER_CHANGED, listener: typeof filterChanged | null): this;\n  on(type: typeof CompositeColumn.EVENT_ADD_COLUMN, listener: typeof addColumn | null): this;\n  on(type: typeof CompositeColumn.EVENT_MOVE_COLUMN, listener: typeof moveColumn | null): this;\n  on(type: typeof CompositeColumn.EVENT_REMOVE_COLUMN, listener: typeof removeColumn | null): this;\n  on(type: typeof Column.EVENT_WIDTH_CHANGED, listener: typeof widthChanged | null): this;\n  on(type: typeof Column.EVENT_LABEL_CHANGED, listener: typeof labelChanged | null): this;\n  on(type: typeof Column.EVENT_METADATA_CHANGED, listener: typeof metaDataChanged | null): this;\n  on(type: typeof Column.EVENT_DIRTY, listener: typeof dirty | null): this;\n  on(type: typeof Column.EVENT_DIRTY_HEADER, listener: typeof dirtyHeader | null): this;\n  on(type: typeof Column.EVENT_DIRTY_VALUES, listener: typeof dirtyValues | null): this;\n  on(type: typeof Column.EVENT_DIRTY_CACHES, listener: typeof dirtyCaches | null): this;\n  on(type: typeof Column.EVENT_RENDERER_TYPE_CHANGED, listener: typeof rendererTypeChanged | null): this;\n  on(type: typeof Column.EVENT_GROUP_RENDERER_TYPE_CHANGED, listener: typeof groupRendererChanged | null): this;\n  on(type: typeof Column.EVENT_SUMMARY_RENDERER_TYPE_CHANGED, listener: typeof summaryRendererChanged | null): this;\n  on(type: typeof Column.EVENT_VISIBILITY_CHANGED, listener: typeof visibilityChanged | null): this;\n  on(type: string | string[], listener: IEventListener | null): this; // required for correct typings in *.d.ts\n  on(type: string | string[], listener: IEventListener | null): this {\n    return super.on(type, listener);\n  }\n\n  setScript(script: string) {\n    if (this.script === script) {\n      return;\n    }\n    this.f = null;\n    this.fire([ScriptColumn.EVENT_SCRIPT_CHANGED, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY_CACHES, Column.EVENT_DIRTY], this.script, this.script = script);\n  }\n\n  getScript() {\n    return this.script;\n  }\n\n  dump(toDescRef: (desc: any) => any) {\n    const r = super.dump(toDescRef);\n    r.script = this.script;\n    r.filter = !isDummyNumberFilter(this.currentFilter) ? this.currentFilter : null;\n    r.map = this.mapping.toJSON();\n    r.colorMapping = this.colorMapping.toJSON();\n    return r;\n  }\n\n  restore(dump: any, factory: ITypeFactory) {\n    super.restore(dump, factory);\n\n    this.script = dump.script || this.script;\n    if (dump.filter) {\n      this.currentFilter = restoreNumberFilter(dump.filter);\n    }\n    if (dump.map || dump.domain) {\n      this.mapping = restoreMapping(dump.map, factory);\n    }\n    if (dump.colorMapping) {\n      this.colorMapping = factory.colorMappingFunction(dump.colorMapping);\n    }\n  }\n\n  protected compute(row: IDataRow) {\n    if (this.f == null) {\n      this.f = new Function('children', 'values', 'raws', 'col', 'row', 'index', wrapWithContext(this.script));\n    }\n    const children = this._children;\n    const values = this._children.map((d) => d.getValue(row));\n    const raws = <number[]>this._children.map((d) => isNumberColumn(d) ? d.getRawNumber(row) : null);\n    const col = new ColumnContext(children.map((c, i) => new ColumnWrapper(c, values[i], raws[i])), () => {\n      const cols = this.findMyRanker()!.flatColumns; // all except myself\n      return new ColumnContext(cols.map((c) => new LazyColumnWrapper(c, row)));\n    });\n    return this.f.call(this, children, values, raws, col, row.v, row.i);\n  }\n\n  getExportValue(row: IDataRow, format: 'text' | 'json'): any {\n    if (format === 'json') {\n      return {\n        value: this.getRawNumber(row),\n        children: this.children.map((d) => d.getExportValue(row, format))\n      };\n    }\n    return super.getExportValue(row, format);\n  }\n\n  getRange() {\n    return this.mapping.getRange(this.getNumberFormat());\n  }\n\n  getOriginalMapping() {\n    return this.original.clone();\n  }\n\n  getMapping() {\n    return this.mapping.clone();\n  }\n\n  setMapping(mapping: IMappingFunction) {\n    if (this.mapping.eq(mapping)) {\n      return;\n    }\n    this.fire([ScriptColumn.EVENT_MAPPING_CHANGED, Column.EVENT_DIRTY_HEADER, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY_CACHES, Column.EVENT_DIRTY], this.mapping.clone(), this.mapping = mapping);\n  }\n\n  getColor(row: IDataRow) {\n    return NumberColumn.prototype.getColor.call(this, row);\n  }\n\n  getColorMapping() {\n    return this.colorMapping.clone();\n  }\n\n  setColorMapping(mapping: IColorMappingFunction) {\n    if (this.colorMapping.eq(mapping)) {\n      return;\n    }\n    this.fire([ScriptColumn.EVENT_COLOR_MAPPING_CHANGED, Column.EVENT_DIRTY_HEADER, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY_CACHES, Column.EVENT_DIRTY], this.colorMapping.clone(), this.colorMapping = mapping);\n  }\n\n  isFiltered() {\n    return NumberColumn.prototype.isFiltered.call(this);\n  }\n\n  getFilter(): INumberFilter {\n    return NumberColumn.prototype.getFilter.call(this);\n  }\n\n  setFilter(value: INumberFilter | null) {\n    NumberColumn.prototype.setFilter.call(this, value);\n  }\n\n  filter(row: IDataRow) {\n    return NumberColumn.prototype.filter.call(this, row);\n  }\n\n  clearFilter() {\n    return NumberColumn.prototype.clearFilter.call(this);\n  }\n}\n","import {Category, toolbar} from './annotations';\nimport CategoricalColumn from './CategoricalColumn';\nimport Column, {labelChanged, metaDataChanged, dirty, widthChanged, dirtyHeader, dirtyValues, rendererTypeChanged, groupRendererChanged, summaryRendererChanged, visibilityChanged, dirtyCaches} from './Column';\nimport {IArrayColumn} from './IArrayColumn';\nimport {ICategoricalDesc, ICategoricalFilter, ICategory, ISetColumn, ICategoricalColorMappingFunction} from './ICategoricalColumn';\nimport {IDataRow, ECompareValueType, IValueColumnDesc, IGroup, DEFAULT_COLOR, ITypeFactory} from './interfaces';\nimport ValueColumn, {dataLoaded} from './ValueColumn';\nimport {IEventListener} from '../internal';\nimport {DEFAULT_CATEGORICAL_COLOR_FUNCTION} from './CategoricalColorMappingFunction';\nimport {toCategories, isCategoryIncluded} from './internalCategorical';\nimport {chooseUIntByDataLength} from './internal';\n\nexport interface ISetDesc extends ICategoricalDesc {\n  separator?: string;\n}\n\nexport declare type ISetColumnDesc = ISetDesc & IValueColumnDesc<string[]>;\n\n/**\n * emitted when the color mapping property changes\n * @asMemberOf SetColumn\n * @event\n */\nexport declare function colorMappingChanged_SSC(previous: ICategoricalColorMappingFunction, current: ICategoricalColorMappingFunction): void;\n\n\n/**\n * emitted when the filter property changes\n * @asMemberOf SetColumn\n * @event\n */\nexport declare function filterChanged_SSC(previous: ICategoricalFilter | null, current: ICategoricalFilter | null): void;\n\n/**\n * a string column with optional alignment\n */\n@toolbar('filterCategorical', 'colorMappedCategorical', 'group', 'groupBy')\n@Category('categorical')\nexport default class SetColumn extends ValueColumn<string[]> implements IArrayColumn<boolean>, ISetColumn {\n  static readonly EVENT_FILTER_CHANGED = CategoricalColumn.EVENT_FILTER_CHANGED;\n  static readonly EVENT_COLOR_MAPPING_CHANGED = CategoricalColumn.EVENT_COLOR_MAPPING_CHANGED;\n\n  readonly categories: ICategory[];\n\n  private readonly separator: RegExp;\n\n  private readonly lookup = new Map<string, Readonly<ICategory>>();\n\n  private colorMapping: ICategoricalColorMappingFunction;\n  /**\n   * set of categories to show\n   * @type {null}\n   * @private\n   */\n  private currentFilter: ICategoricalFilter | null = null;\n\n  constructor(id: string, desc: Readonly<ISetColumnDesc>) {\n    super(id, desc);\n    this.separator = new RegExp(desc.separator || ';');\n    this.categories = toCategories(desc);\n    this.categories.forEach((d) => this.lookup.set(d.name, d));\n    this.setDefaultRenderer('upset');\n    this.setDefaultGroupRenderer('upset');\n    this.setSummaryRenderer('categorical');\n    this.colorMapping = DEFAULT_CATEGORICAL_COLOR_FUNCTION;\n  }\n\n  protected createEventList() {\n    return super.createEventList().concat([SetColumn.EVENT_COLOR_MAPPING_CHANGED, SetColumn.EVENT_FILTER_CHANGED]);\n  }\n\n  on(type: typeof SetColumn.EVENT_FILTER_CHANGED, listener: typeof filterChanged_SSC | null): this;\n  on(type: typeof SetColumn.EVENT_COLOR_MAPPING_CHANGED, listener: typeof colorMappingChanged_SSC | null): this;\n  on(type: typeof ValueColumn.EVENT_DATA_LOADED, listener: typeof dataLoaded | null): this;\n  on(type: typeof Column.EVENT_WIDTH_CHANGED, listener: typeof widthChanged | null): this;\n  on(type: typeof Column.EVENT_LABEL_CHANGED, listener: typeof labelChanged | null): this;\n  on(type: typeof Column.EVENT_METADATA_CHANGED, listener: typeof metaDataChanged | null): this;\n  on(type: typeof Column.EVENT_DIRTY, listener: typeof dirty | null): this;\n  on(type: typeof Column.EVENT_DIRTY_HEADER, listener: typeof dirtyHeader | null): this;\n  on(type: typeof Column.EVENT_DIRTY_VALUES, listener: typeof dirtyValues | null): this;\n  on(type: typeof Column.EVENT_DIRTY_CACHES, listener: typeof dirtyCaches | null): this;\n  on(type: typeof Column.EVENT_RENDERER_TYPE_CHANGED, listener: typeof rendererTypeChanged | null): this;\n  on(type: typeof Column.EVENT_GROUP_RENDERER_TYPE_CHANGED, listener: typeof groupRendererChanged | null): this;\n  on(type: typeof Column.EVENT_SUMMARY_RENDERER_TYPE_CHANGED, listener: typeof summaryRendererChanged | null): this;\n  on(type: typeof Column.EVENT_VISIBILITY_CHANGED, listener: typeof visibilityChanged | null): this;\n  on(type: string | string[], listener: IEventListener | null): this; // required for correct typings in *.d.ts\n  on(type: string | string[], listener: IEventListener | null): this {\n    return super.on(<any>type, listener);\n  }\n\n  get labels() {\n    return this.categories.map((d) => d.label);\n  }\n\n  get dataLength() {\n    return this.categories.length;\n  }\n\n  getValue(row: IDataRow): string[] | null {\n    const v = this.getSortedSet(row);\n    if (v.length === 0) {\n      return null;\n    }\n    return v.map((d) => d.name);\n  }\n\n  getLabel(row: IDataRow) {\n    return `(${this.getSortedSet(row).map((d) => d.label).join(',')})`;\n  }\n\n  private normalize(v: any) {\n    if (typeof v === 'string') {\n      return v.split(this.separator).map((s) => s.trim());\n    }\n    if (Array.isArray(v)) {\n      return v.map((v) => String(v).trim());\n    }\n    if (v instanceof Set) {\n      return Array.from(v).map(String);\n    }\n    return [];\n  }\n\n  getSet(row: IDataRow) {\n    const sv = this.normalize(super.getValue(row));\n    const r = new Set<ICategory>();\n    sv.forEach((n) => {\n      const cat = this.lookup.get(n);\n      if (cat) {\n        r.add(cat);\n      }\n    });\n    return r;\n  }\n\n  getSortedSet(row: IDataRow) {\n    return Array.from(this.getSet(row)).sort((a, b) => a.value === b.value ? a.label.localeCompare(b.label) : a.value - b.value);\n  }\n\n  getCategories(row: IDataRow) {\n    return this.getSortedSet(row);\n  }\n\n  getColors(row: IDataRow) {\n    return this.getSortedSet(row).map((d) => this.colorMapping.apply(d));\n  }\n\n  getColorMapping() {\n    return this.colorMapping.clone();\n  }\n\n  setColorMapping(mapping: ICategoricalColorMappingFunction) {\n    return CategoricalColumn.prototype.setColorMapping.call(this, mapping);\n  }\n\n\n  getValues(row: IDataRow) {\n    const s = this.getSet(row);\n    return this.categories.map((d) => s.has(d));\n  }\n\n  getLabels(row: IDataRow) {\n    return this.getValues(row).map(String);\n  }\n\n  getMap(row: IDataRow) {\n    return this.getSortedSet(row).map((d) => ({key: d.label, value: true}));\n  }\n\n  getMapLabel(row: IDataRow) {\n    return this.getSortedSet(row).map((d) => ({key: d.label, value: 'true'}));\n  }\n\n  iterCategory(row: IDataRow) {\n    const r = this.getSet(row);\n    if (r.size > 0) {\n      return Array.from(r);\n    }\n    return [null];\n  }\n\n  dump(toDescRef: (desc: any) => any): any {\n    const r = super.dump(toDescRef);\n    r.filter = this.currentFilter;\n    r.colorMapping = this.colorMapping.toJSON();\n    return r;\n  }\n\n  restore(dump: any, factory: ITypeFactory) {\n    super.restore(dump, factory);\n    this.colorMapping = factory.categoricalColorMappingFunction(dump.colorMapping, this.categories);\n    if (!('filter' in dump)) {\n      this.currentFilter = null;\n      return;\n    }\n    const bak = dump.filter;\n    if (typeof bak === 'string' || Array.isArray(bak)) {\n      this.currentFilter = {filter: bak, filterMissing: false};\n    } else {\n      this.currentFilter = bak;\n    }\n  }\n\n  isFiltered() {\n    return this.currentFilter != null;\n  }\n\n  filter(row: IDataRow): boolean {\n    if (!this.currentFilter) {\n      return true;\n    }\n    const v = Array.from(this.getSet(row));\n    if (v.length === 0) {\n      return isCategoryIncluded(this.currentFilter, null);\n    }\n    return v.every((s) => isCategoryIncluded(this.currentFilter, s));\n  }\n\n  getFilter() {\n    return CategoricalColumn.prototype.getFilter.call(this);\n  }\n\n  setFilter(filter: ICategoricalFilter | null) {\n    return CategoricalColumn.prototype.setFilter.call(this, filter);\n  }\n\n  clearFilter() {\n    return CategoricalColumn.prototype.clearFilter.call(this);\n  }\n\n  toCompareValue(row: IDataRow) {\n    const v = this.getSet(row);\n\n    const vs = [v.size];\n    for (const cat of this.categories) {\n      vs.push(v.has(cat) ? 1 : 0);\n    }\n    return vs;\n  }\n\n  toCompareValueType() {\n    return [chooseUIntByDataLength(this.categories.length)].concat(this.categories.map(() => ECompareValueType.BINARY));\n  }\n\n  group(row: IDataRow): IGroup {\n    const v = this.getSet(row);\n    const cardinality = v.size;\n    const categories = this.categories.filter((c) => v.has(c));\n\n    // by cardinality and then by intersection\n\n    const g: IGroup = {\n      name: categories.length === 0 ? 'None' : categories.map((d) => d.name).join(', '),\n      color: categories.length === 1 ? categories[0].color : DEFAULT_COLOR\n    };\n\n    g.parent = {\n      name: `#${cardinality}`,\n      color: DEFAULT_COLOR,\n      subGroups: [g]\n    };\n\n    return g;\n  }\n}\n","import {toolbar} from './annotations';\nimport Column, {widthChanged, labelChanged, metaDataChanged, dirty, dirtyHeader, dirtyValues, rendererTypeChanged, groupRendererChanged, summaryRendererChanged, visibilityChanged, dirtyCaches} from './Column';\nimport ValueColumn, {dataLoaded} from './ValueColumn';\nimport {IDataRow} from './interfaces';\nimport MapColumn, {IMapColumnDesc} from './MapColumn';\nimport {EAlignment, IStringDesc} from './StringColumn';\nimport {IEventListener} from '../internal';\nimport {isMissingValue} from './missing';\n\nexport declare type IStringMapColumnDesc = IStringDesc & IMapColumnDesc<string>;\n\n/**\n * a string column with optional alignment\n */\n@toolbar('search')\nexport default class StringMapColumn extends MapColumn<string> {\n  readonly alignment: EAlignment;\n  readonly escape: boolean;\n\n  constructor(id: string, desc: Readonly<IStringMapColumnDesc>) {\n    super(id, desc);\n    this.setDefaultWidth(200); //by default 200\n    this.alignment = <any>desc.alignment || EAlignment.left;\n    this.escape = desc.escape !== false;\n    this.setDefaultRenderer('map');\n  }\n\n  on(type: typeof ValueColumn.EVENT_DATA_LOADED, listener: typeof dataLoaded | null): this;\n  on(type: typeof Column.EVENT_WIDTH_CHANGED, listener: typeof widthChanged | null): this;\n  on(type: typeof Column.EVENT_LABEL_CHANGED, listener: typeof labelChanged | null): this;\n  on(type: typeof Column.EVENT_METADATA_CHANGED, listener: typeof metaDataChanged | null): this;\n  on(type: typeof Column.EVENT_DIRTY, listener: typeof dirty | null): this;\n  on(type: typeof Column.EVENT_DIRTY_HEADER, listener: typeof dirtyHeader | null): this;\n  on(type: typeof Column.EVENT_DIRTY_VALUES, listener: typeof dirtyValues | null): this;\n  on(type: typeof Column.EVENT_DIRTY_CACHES, listener: typeof dirtyCaches | null): this;\n  on(type: typeof Column.EVENT_RENDERER_TYPE_CHANGED, listener: typeof rendererTypeChanged | null): this;\n  on(type: typeof Column.EVENT_GROUP_RENDERER_TYPE_CHANGED, listener: typeof groupRendererChanged | null): this;\n  on(type: typeof Column.EVENT_SUMMARY_RENDERER_TYPE_CHANGED, listener: typeof summaryRendererChanged | null): this;\n  on(type: typeof Column.EVENT_VISIBILITY_CHANGED, listener: typeof visibilityChanged | null): this;\n  on(type: string | string[], listener: IEventListener | null): this; // required for correct typings in *.d.ts\n  on(type: string | string[], listener: IEventListener | null): this {\n    return super.on(<any>type, listener);\n  }\n\n  getValue(row: IDataRow) {\n    const r = this.getMapValue(row);\n    return r.every((d) => d.value === '') ? null : r;\n  }\n\n  getMapValue(row: IDataRow) {\n    return super.getMap(row).map(({key, value}) => ({\n      key,\n      value: isMissingValue(value) ? '' : String(value)\n    }));\n  }\n}\n","import {toolbar} from './annotations';\nimport ArrayColumn, {IArrayColumnDesc} from './ArrayColumn';\nimport {IDataRow} from './interfaces';\nimport {EAlignment, IStringDesc} from './StringColumn';\nimport {isMissingValue} from './missing';\n\nexport declare type IStringsColumnDesc = IStringDesc & IArrayColumnDesc<string>;\n\n/**\n * a string column with optional alignment\n */\n@toolbar('search')\nexport default class StringsColumn extends ArrayColumn<string> {\n  readonly alignment: EAlignment;\n  readonly escape: boolean;\n\n  constructor(id: string, desc: Readonly<IStringsColumnDesc>) {\n    super(id, desc);\n    this.setDefaultWidth(200); //by default 200\n    this.alignment = <any>desc.alignment || EAlignment.left;\n    this.escape = desc.escape !== false;\n  }\n\n  getValues(row: IDataRow) {\n    return super.getValues(row).map((v) => {\n      return isMissingValue(v) ? '' : String(v);\n    });\n  }\n}\n","import {Category, toolbar, dialogAddons} from './annotations';\nimport Column, {widthChanged, labelChanged, metaDataChanged, dirty, dirtyHeader, dirtyValues, rendererTypeChanged, groupRendererChanged, summaryRendererChanged, visibilityChanged, dirtyCaches} from './Column';\nimport {IDataRow, IGroup, IValueColumnDesc, ITypeFactory} from './interfaces';\nimport {patternFunction} from './internal';\nimport ValueColumn, {dataLoaded} from './ValueColumn';\nimport {IEventListener, ISequence} from '../internal';\nimport {IStringDesc, EAlignment} from './StringColumn';\nimport StringColumn from './StringColumn';\n\nexport interface ILinkDesc extends IStringDesc {\n  /**\n   * replacement pattern, use use <code>${value}</code> for the current value, <code>${escapedValue}</code> for an url safe value and <code>${item}</code> for the whole item\n   */\n  pattern?: string;\n\n  /**\n   * optional list of pattern templates\n   */\n  patternTemplates?: string[];\n}\n\nexport interface ILink {\n  alt: string;\n  href: string;\n}\n\nexport declare type ILinkColumnDesc = ILinkDesc & IValueColumnDesc<string | ILink>;\n\n/**\n * emitted when the filter property changes\n * @asMemberOf LinkColumn\n * @event\n */\nexport declare function filterChanged_LC(previous: string | RegExp | null, current: string | RegExp | null): void;\n\n\n/**\n * emitted when the grouping property changes\n * @asMemberOf LinkColumn\n * @event\n */\nexport declare function groupingChanged_LC(previous: (RegExp | string)[][], current: (RegExp | string)[][]): void;\n\n/**\n * emitted when the pattern property changes\n * @asMemberOf LinkColumn\n * @event\n */\nexport declare function patternChanged_LC(previous: string, current: string): void;\n\n/**\n * a string column with optional alignment\n */\n@toolbar('search', 'groupBy', 'filterString', 'editPattern')\n@dialogAddons('group', 'groupString')\n@Category('string')\nexport default class LinkColumn extends ValueColumn<string | ILink> {\n  static readonly EVENT_FILTER_CHANGED = StringColumn.EVENT_FILTER_CHANGED;\n  static readonly EVENT_GROUPING_CHANGED = StringColumn.EVENT_GROUPING_CHANGED;\n  static readonly EVENT_PATTERN_CHANGED = 'patternChanged';\n\n  private pattern: string;\n  private patternFunction: Function | null = null;\n  readonly patternTemplates: string[];\n\n  private currentFilter: string | RegExp | null = null;\n  private currentGroupCriteria: (RegExp | string)[] = [];\n\n  readonly alignment: EAlignment;\n  readonly escape: boolean;\n\n  constructor(id: string, desc: Readonly<ILinkColumnDesc>) {\n    super(id, desc);\n    this.setDefaultWidth(200); //by default 200\n    this.alignment = <any>desc.alignment || EAlignment.left;\n    this.escape = desc.escape !== false;\n\n    this.pattern = desc.pattern || '';\n    this.patternTemplates = desc.patternTemplates || [];\n\n    if (this.pattern) {\n      this.setDefaultRenderer('link');\n      this.setDefaultGroupRenderer('link');\n    }\n  }\n\n  setPattern(pattern: string) {\n    if (pattern === this.pattern) {\n      return;\n    }\n    this.patternFunction = null; // reset cache\n    this.fire([LinkColumn.EVENT_PATTERN_CHANGED, Column.EVENT_DIRTY_HEADER, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY_CACHES, Column.EVENT_DIRTY], this.pattern, this.pattern = pattern);\n  }\n\n  getPattern() {\n    return this.pattern;\n  }\n\n  protected createEventList() {\n    return super.createEventList().concat([LinkColumn.EVENT_PATTERN_CHANGED, LinkColumn.EVENT_GROUPING_CHANGED, LinkColumn.EVENT_FILTER_CHANGED]);\n  }\n\n  on(type: typeof LinkColumn.EVENT_PATTERN_CHANGED, listener: typeof patternChanged_LC | null): this;\n  on(type: typeof LinkColumn.EVENT_FILTER_CHANGED, listener: typeof filterChanged_LC | null): this;\n  on(type: typeof ValueColumn.EVENT_DATA_LOADED, listener: typeof dataLoaded | null): this;\n  on(type: typeof LinkColumn.EVENT_GROUPING_CHANGED, listener: typeof groupingChanged_LC | null): this;\n  on(type: typeof Column.EVENT_WIDTH_CHANGED, listener: typeof widthChanged | null): this;\n  on(type: typeof Column.EVENT_LABEL_CHANGED, listener: typeof labelChanged | null): this;\n  on(type: typeof Column.EVENT_METADATA_CHANGED, listener: typeof metaDataChanged | null): this;\n  on(type: typeof Column.EVENT_DIRTY, listener: typeof dirty | null): this;\n  on(type: typeof Column.EVENT_DIRTY_HEADER, listener: typeof dirtyHeader | null): this;\n  on(type: typeof Column.EVENT_DIRTY_VALUES, listener: typeof dirtyValues | null): this;\n  on(type: typeof Column.EVENT_DIRTY_CACHES, listener: typeof dirtyCaches | null): this;\n  on(type: typeof Column.EVENT_RENDERER_TYPE_CHANGED, listener: typeof rendererTypeChanged | null): this;\n  on(type: typeof Column.EVENT_GROUP_RENDERER_TYPE_CHANGED, listener: typeof groupRendererChanged | null): this;\n  on(type: typeof Column.EVENT_SUMMARY_RENDERER_TYPE_CHANGED, listener: typeof summaryRendererChanged | null): this;\n  on(type: typeof Column.EVENT_VISIBILITY_CHANGED, listener: typeof visibilityChanged | null): this;\n  on(type: string | string[], listener: IEventListener | null): this; // required for correct typings in *.d.ts\n  on(type: string | string[], listener: IEventListener | null): this {\n    return super.on(<any>type, listener);\n  }\n\n  getValue(row: IDataRow) {\n    const l = this.getLink(row);\n    return l == null ? null : l.href;\n  }\n\n  getLink(row: IDataRow): ILink | null {\n    const v: string | null | ILink = super.getValue(row);\n    return this.transformValue(v, row);\n  }\n\n  private transformValue(v: any, row: IDataRow) {\n    if (v == null || v === '') {\n      return null;\n    }\n    if (typeof v === 'string') {\n      if (!this.pattern) {\n        return {\n          alt: v,\n          href: v\n        };\n      }\n      if (!this.patternFunction) {\n        this.patternFunction = patternFunction(this.pattern, 'item');\n      }\n      return {\n        alt: v,\n        href: this.patternFunction.call(this, v, row.v)\n      };\n    }\n    return v;\n  }\n\n  getLabel(row: IDataRow) {\n    const l = this.getLink(row);\n    return l == null ? '' : l.alt;\n  }\n\n  dump(toDescRef: (desc: any) => any): any {\n    const r = StringColumn.prototype.dump.call(this, toDescRef);\n    if (this.pattern !== (<any>this.desc).pattern) {\n      r.pattern = this.pattern;\n    }\n    return r;\n  }\n\n  restore(dump: any, factory: ITypeFactory) {\n    StringColumn.prototype.restore.call(this, dump, factory);\n    if (dump.pattern) {\n      this.pattern = dump.pattern;\n    }\n  }\n\n  isFiltered() {\n    return this.currentFilter != null;\n  }\n\n  filter(row: IDataRow) {\n    return StringColumn.prototype.filter.call(this, row);\n  }\n\n  getFilter() {\n    return this.currentFilter;\n  }\n\n  setFilter(filter: string | RegExp | null) {\n    return StringColumn.prototype.setFilter.call(this, filter);\n  }\n\n  clearFilter() {\n    return StringColumn.prototype.clearFilter.call(this);\n  }\n\n  getGroupCriteria() {\n    return this.currentGroupCriteria.slice();\n  }\n\n  setGroupCriteria(value: (string | RegExp)[]) {\n    return StringColumn.prototype.setGroupCriteria.call(this, value);\n  }\n\n  toCompareValue(a: IDataRow) {\n    return StringColumn.prototype.toCompareValue.call(this, a);\n  }\n\n  toCompareValueType() {\n    return StringColumn.prototype.toCompareValueType.call(this);\n  }\n\n  toCompareGroupValue(rows: ISequence<IDataRow>, group: IGroup) {\n    return StringColumn.prototype.toCompareGroupValue.call(this, rows, group);\n  }\n\n  toCompareGroupValueType() {\n    return StringColumn.prototype.toCompareGroupValueType.call(this);\n  }\n\n  group(row: IDataRow): IGroup {\n    return StringColumn.prototype.group.call(this, row);\n  }\n}\n\n","import {toolbar} from './annotations';\nimport Column, {widthChanged, labelChanged, metaDataChanged, dirty, dirtyHeader, dirtyValues, rendererTypeChanged, groupRendererChanged, summaryRendererChanged, visibilityChanged, dirtyCaches} from './Column';\nimport ValueColumn, {dataLoaded} from './ValueColumn';\nimport {IDataRow, ITypeFactory} from './interfaces';\nimport {patternFunction} from './internal';\nimport MapColumn, {IMapColumnDesc} from './MapColumn';\nimport LinkColumn, {ILinkDesc} from './LinkColumn';\nimport {IEventListener} from '../internal';\nimport {EAlignment} from './StringColumn';\nimport {IKeyValue} from './IArrayColumn';\nimport {ILink} from './LinkColumn';\n\nexport declare type ILinkMapColumnDesc = ILinkDesc & IMapColumnDesc<string>;\n\n/**\n * emitted when the pattern property changes\n * @asMemberOf LinkMapColumn\n * @event\n */\nexport declare function patternChanged_LMC(previous: string, current: string): void;\n\n/**\n * a string column with optional alignment\n */\n@toolbar('search', 'editPattern')\nexport default class LinkMapColumn extends MapColumn<string> {\n  static readonly EVENT_PATTERN_CHANGED = LinkColumn.EVENT_PATTERN_CHANGED;\n\n  readonly alignment: EAlignment;\n  readonly escape: boolean;\n  private pattern: string;\n  private patternFunction: Function | null = null;\n  readonly patternTemplates: string[];\n\n  constructor(id: string, desc: Readonly<ILinkMapColumnDesc>) {\n    super(id, desc);\n    this.setDefaultWidth(200); //by default 200\n    this.alignment = <any>desc.alignment || EAlignment.left;\n    this.escape = desc.escape !== false;\n    this.pattern = desc.pattern || '';\n    this.patternTemplates = desc.patternTemplates || [];\n    this.setDefaultRenderer('map');\n  }\n\n  setPattern(pattern: string) {\n    LinkColumn.prototype.setPattern.call(this, pattern);\n  }\n\n  getPattern() {\n    return this.pattern;\n  }\n\n  protected createEventList() {\n    return super.createEventList().concat([LinkColumn.EVENT_PATTERN_CHANGED]);\n  }\n\n  on(type: typeof LinkColumn.EVENT_PATTERN_CHANGED, listener: typeof patternChanged_LMC | null): this;\n  on(type: typeof ValueColumn.EVENT_DATA_LOADED, listener: typeof dataLoaded | null): this;\n  on(type: typeof Column.EVENT_WIDTH_CHANGED, listener: typeof widthChanged | null): this;\n  on(type: typeof Column.EVENT_LABEL_CHANGED, listener: typeof labelChanged | null): this;\n  on(type: typeof Column.EVENT_METADATA_CHANGED, listener: typeof metaDataChanged | null): this;\n  on(type: typeof Column.EVENT_DIRTY, listener: typeof dirty | null): this;\n  on(type: typeof Column.EVENT_DIRTY_HEADER, listener: typeof dirtyHeader | null): this;\n  on(type: typeof Column.EVENT_DIRTY_VALUES, listener: typeof dirtyValues | null): this;\n  on(type: typeof Column.EVENT_DIRTY_CACHES, listener: typeof dirtyCaches | null): this;\n  on(type: typeof Column.EVENT_RENDERER_TYPE_CHANGED, listener: typeof rendererTypeChanged | null): this;\n  on(type: typeof Column.EVENT_GROUP_RENDERER_TYPE_CHANGED, listener: typeof groupRendererChanged | null): this;\n  on(type: typeof Column.EVENT_SUMMARY_RENDERER_TYPE_CHANGED, listener: typeof summaryRendererChanged | null): this;\n  on(type: typeof Column.EVENT_VISIBILITY_CHANGED, listener: typeof visibilityChanged | null): this;\n  on(type: string | string[], listener: IEventListener | null): this; // required for correct typings in *.d.ts\n  on(type: string | string[], listener: IEventListener | null): this {\n    return super.on(<any>type, listener);\n  }\n\n  getValue(row: IDataRow) {\n    const r = this.getLinkMap(row);\n    return r.every((d) => d.value == null) ? null : r.map(({key, value}) => ({\n      key,\n      value: value ? value.href : ''\n    }));\n  }\n\n  getLabels(row: IDataRow) {\n    return this.getLinkMap(row).map(({key, value}) => ({\n      key,\n      value: value ? value.alt : ''\n    }));\n  }\n\n  getLinkMap(row: IDataRow): IKeyValue<ILink>[] {\n    return super.getMap(row).map(({key, value}) => ({\n      key,\n      value: this.transformValue(value, row, key)\n    }));\n  }\n\n  private transformValue(v: any, row: IDataRow, key: string) {\n    if (v == null || v === '') {\n      return null;\n    }\n    if (typeof v === 'string') {\n      if (!this.pattern) {\n        return {\n          alt: v,\n          href: v\n        };\n      }\n      if (!this.patternFunction) {\n        this.patternFunction = patternFunction(this.pattern, 'item', 'key');\n      }\n      return {\n        alt: v,\n        href: this.patternFunction.call(this, v, row.v, key)\n      };\n    }\n    return v;\n  }\n\n  dump(toDescRef: (desc: any) => any): any {\n    const r = super.dump(toDescRef);\n    if (this.pattern !== (<any>this.desc).pattern) {\n      r.pattern = this.pattern;\n    }\n    return r;\n  }\n\n  restore(dump: any, factory: ITypeFactory) {\n    if (dump.pattern) {\n      this.pattern = dump.pattern;\n    }\n    super.restore(dump, factory);\n  }\n}\n","import {toolbar} from './annotations';\nimport ArrayColumn, {IArrayColumnDesc} from './ArrayColumn';\nimport Column, {widthChanged, labelChanged, metaDataChanged, dirty, dirtyHeader, dirtyValues, rendererTypeChanged, groupRendererChanged, summaryRendererChanged, visibilityChanged, dirtyCaches} from './Column';\nimport ValueColumn, {dataLoaded} from './ValueColumn';\nimport {IDataRow, ITypeFactory} from './interfaces';\nimport {patternFunction} from './internal';\nimport {EAlignment} from './StringColumn';\nimport {IEventListener} from '../internal';\nimport LinkColumn, {ILink, ILinkDesc} from './LinkColumn';\n\nexport declare type ILinksColumnDesc = ILinkDesc & IArrayColumnDesc<string | ILink>;\n\n/**\n * emitted when the pattern property changes\n * @asMemberOf LinksColumn\n * @event\n */\nexport declare function patternChanged_LCS(previous: string, current: string): void;\n\n@toolbar('search', 'editPattern')\nexport default class LinksColumn extends ArrayColumn<string | ILink> {\n  static readonly EVENT_PATTERN_CHANGED = LinkColumn.EVENT_PATTERN_CHANGED;\n\n  readonly alignment: EAlignment;\n  readonly escape: boolean;\n  private pattern: string;\n  private patternFunction: Function | null = null;\n  readonly patternTemplates: string[];\n\n  constructor(id: string, desc: Readonly<ILinksColumnDesc>) {\n    super(id, desc);\n    this.setDefaultWidth(200); //by default 200\n    this.alignment = <any>desc.alignment || EAlignment.left;\n    this.escape = desc.escape !== false;\n    this.pattern = desc.pattern || '';\n    this.patternTemplates = desc.patternTemplates || [];\n  }\n\n  setPattern(pattern: string) {\n    return LinkColumn.prototype.setPattern.call(this, pattern);\n  }\n\n  getPattern() {\n    return this.pattern;\n  }\n\n  protected createEventList() {\n    return super.createEventList().concat([LinksColumn.EVENT_PATTERN_CHANGED]);\n  }\n\n  on(type: typeof LinksColumn.EVENT_PATTERN_CHANGED, listener: typeof patternChanged_LCS | null): this;\n  on(type: typeof ValueColumn.EVENT_DATA_LOADED, listener: typeof dataLoaded | null): this;\n  on(type: typeof Column.EVENT_WIDTH_CHANGED, listener: typeof widthChanged | null): this;\n  on(type: typeof Column.EVENT_LABEL_CHANGED, listener: typeof labelChanged | null): this;\n  on(type: typeof Column.EVENT_METADATA_CHANGED, listener: typeof metaDataChanged | null): this;\n  on(type: typeof Column.EVENT_DIRTY, listener: typeof dirty | null): this;\n  on(type: typeof Column.EVENT_DIRTY_HEADER, listener: typeof dirtyHeader | null): this;\n  on(type: typeof Column.EVENT_DIRTY_VALUES, listener: typeof dirtyValues | null): this;\n  on(type: typeof Column.EVENT_DIRTY_CACHES, listener: typeof dirtyCaches | null): this;\n  on(type: typeof Column.EVENT_RENDERER_TYPE_CHANGED, listener: typeof rendererTypeChanged | null): this;\n  on(type: typeof Column.EVENT_GROUP_RENDERER_TYPE_CHANGED, listener: typeof groupRendererChanged | null): this;\n  on(type: typeof Column.EVENT_SUMMARY_RENDERER_TYPE_CHANGED, listener: typeof summaryRendererChanged | null): this;\n  on(type: typeof Column.EVENT_VISIBILITY_CHANGED, listener: typeof visibilityChanged | null): this;\n  on(type: string | string[], listener: IEventListener | null): this; // required for correct typings in *.d.ts\n  on(type: string | string[], listener: IEventListener | null): this {\n    return super.on(<any>type, listener);\n  }\n\n  getValues(row: IDataRow) {\n    return this.getLinks(row).map((d) => d ? d.href : '');\n  }\n\n  getLabels(row: IDataRow) {\n    return this.getLinks(row).map((d) => d ? d.alt : '');\n  }\n\n  private transformValue(v: any, row: IDataRow, i: number) {\n    if (v == null || v === '') {\n      return null;\n    }\n    if (typeof v === 'string') {\n      if (!this.pattern) {\n        return {\n          alt: v,\n          href: v\n        };\n      }\n      if (!this.patternFunction) {\n        this.patternFunction = patternFunction(this.pattern, 'item', 'index');\n      }\n      return {\n        alt: v,\n        href: this.patternFunction.call(this, v, row.v, i)\n      };\n    }\n    return v;\n  }\n\n  getLinks(row: IDataRow): ILink[] {\n    return super.getValues(row).map((v, i) => {\n      return this.transformValue(v, row, i);\n    });\n  }\n\n  dump(toDescRef: (desc: any) => any): any {\n    const r = super.dump(toDescRef);\n    if (this.pattern !== (<any>this.desc).pattern) {\n      r.pattern = this.pattern;\n    }\n    return r;\n  }\n\n  restore(dump: any, factory: ITypeFactory) {\n    if (dump.pattern) {\n      this.pattern = dump.pattern;\n    }\n    super.restore(dump, factory);\n  }\n}\n","export function isPromiseLike(p) {\r\n    return p != null && p && typeof p.then === 'function';\r\n}\r\n/**\r\n * the symbol returned when the promise was aborted\r\n */\r\nexport var ABORTED = Symbol('aborted');\r\nfunction thenFactory(loader, isAborted, abort) {\r\n    function then(onfulfilled, _onrejected) {\r\n        var fullfiller = loader.then(function (loaded) {\r\n            var loadedOrAborted = isAborted() ? ABORTED : loaded;\r\n            var res = onfulfilled ? onfulfilled(loadedOrAborted) : loadedOrAborted;\r\n            if (isPromiseLike(res)) {\r\n                return res.then(function (r) {\r\n                    return isAborted() ? ABORTED : r;\r\n                });\r\n            }\r\n            return isAborted() ? ABORTED : res;\r\n        });\r\n        return {\r\n            then: thenFactory(fullfiller, isAborted, abort),\r\n            abort: abort,\r\n            isAborted: isAborted\r\n        };\r\n    }\r\n    return then;\r\n}\r\n/**\r\n * abort able Promise wrapper, returns a promise which can be aborted, and trying to avoid executing therefore the wrapped promise\r\n * @param {Promise<T>} loader\r\n * @returns {any}\r\n */\r\nexport default function abortAble(loader) {\r\n    var aborted = null;\r\n    var isAborted = function () { return aborted === null; };\r\n    var aborter = new Promise(function (resolve) { return aborted = resolve; });\r\n    var abort = function () {\r\n        if (aborted == null) {\r\n            return;\r\n        }\r\n        aborted(ABORTED);\r\n        aborted = null;\r\n    };\r\n    var race = Promise.race([aborter, loader]);\r\n    return {\r\n        then: thenFactory(race, isAborted, abort),\r\n        abort: abort,\r\n        isAborted: isAborted\r\n    };\r\n}\r\nexport function abortAbleFetch(input, init) {\r\n    var controller = new AbortController();\r\n    var race = new Promise(function (resolve, reject) {\r\n        var r = fetch(input, Object.assign({ signal: controller.signal }, init || {}));\r\n        r.then(resolve);\r\n        r.catch(function (error) {\r\n            if (error instanceof DOMException) {\r\n                resolve(ABORTED);\r\n            }\r\n            else {\r\n                reject(error);\r\n            }\r\n        });\r\n    });\r\n    var abort = controller.abort.bind(controller);\r\n    var isAborted = function () { return controller.signal.aborted; };\r\n    return {\r\n        then: thenFactory(race, isAborted, abort),\r\n        abort: abort,\r\n        isAborted: isAborted\r\n    };\r\n}\r\n/**\r\n * similar to Promise.all but for abortAble\r\n */\r\nexport function abortAbleAll(values) {\r\n    var loader = Promise.all(values);\r\n    var aborted = null;\r\n    var isAborted = function () { return aborted === null; };\r\n    var aborter = new Promise(function (resolve) { return aborted = resolve; });\r\n    var abort = function () {\r\n        if (aborted == null) {\r\n            return;\r\n        }\r\n        aborted(ABORTED);\r\n        for (var _i = 0, values_1 = values; _i < values_1.length; _i++) {\r\n            var v = values_1[_i];\r\n            if (isAbortAble(v)) {\r\n                v.abort();\r\n            }\r\n        }\r\n        aborted = null;\r\n    };\r\n    var race = Promise.race([aborter, loader]);\r\n    return {\r\n        then: thenFactory(race, isAborted, abort),\r\n        abort: abort,\r\n        isAborted: isAborted\r\n    };\r\n}\r\n/**\r\n * checked whether the given argument is an abortable Promise\r\n * @param {IAbortAblePromise<any> | any} abortAble\r\n * @returns {boolean}\r\n */\r\nexport function isAbortAble(abortAble) {\r\n    return abortAble != null && abortAble && typeof abortAble.then === 'function' && typeof abortAble.abort === 'function';\r\n}\r\nexport function isAsyncUpdate(update) {\r\n    return update !== undefined && update !== null && update && isAbortAble(update.ready);\r\n}\r\n/**\r\n * similar to Promise.resolve\r\n */\r\nexport function abortAbleResolveNow(value) {\r\n    function then(onfulfilled, _onrejected) {\r\n        var res = onfulfilled ? onfulfilled(value) : value;\r\n        if (isAbortAble(res)) {\r\n            return res;\r\n        }\r\n        if (isPromiseLike(res)) {\r\n            return abortAble(res);\r\n        }\r\n        return {\r\n            then: abortAbleResolveNow(res),\r\n            abort: function () { return undefined; },\r\n            isAborted: function () { return false; }\r\n        };\r\n    }\r\n    return {\r\n        then: then,\r\n        abort: function () { return undefined; },\r\n        isAborted: function () { return false; }\r\n    };\r\n}\r\n//# sourceMappingURL=abortAble.js.map","import {Column, Ranking, IColumnConstructor, IGroup, IndicesArray, IDataRow, IRankingDump, EAggregationState, INumberColumn, IColorMappingFunctionConstructor, IMappingFunctionConstructor, IColumnDesc} from '../model';\nimport {AEventDispatcher, ISequence} from '../internal';\nimport {IRenderTasks} from '../renderer';\nimport {IAbortAblePromise} from 'lineupengine';\n\nexport {ABORTED, abortAble, abortAbleAll, abortAbleResolveNow, isAbortAble, abortAbleFetch} from 'lineupengine';\nexport declare type IAbortAblePromise<T> = IAbortAblePromise<T>;\n\nexport declare type IAggregationStrategy = 'group' | 'item' | 'group+item' | 'group+top+item' | 'group+item+top';\n\nexport interface IDataProviderOptions {\n  columnTypes: {[columnType: string]: IColumnConstructor};\n  colorMappingFunctionTypes: {[colorMappingFunctionType: string]: IColorMappingFunctionConstructor};\n  mappingFunctionTypes: {[mappingFunctionType: string]: IMappingFunctionConstructor};\n\n\n  /**\n   * allow just single selected rows\n   * @default: false\n   */\n  singleSelection: boolean;\n\n  /**\n   * show top N rows as sample rows\n   * @default 10\n   */\n  showTopN: number;\n\n  /**\n   * aggregation strategy to show upon grouping, see also showTopN\n   * @default 'item'\n   */\n  aggregationStrategy: IAggregationStrategy;\n}\n\nexport interface IDataProvider extends AEventDispatcher {\n  readonly columnTypes: {[columnType: string]: IColumnConstructor};\n\n  getTotalNumberOfRows(): number;\n\n  getTaskExecutor(): IRenderTasks;\n\n  takeSnapshot(col: Column): void;\n\n  selectAllOf(ranking: Ranking): void;\n\n  getSelection(): number[];\n\n  setSelection(dataIndices: IndicesArray): void;\n\n  toggleSelection(i: number, additional?: boolean): boolean;\n\n  isSelected(i: number): boolean;\n\n  removeRanking(ranking: Ranking): void;\n\n  ensureOneRanking(): void;\n\n  find(id: string): Column | null;\n\n  clone(col: Column): Column;\n\n  create(desc: IColumnDesc): Column | null;\n\n  toDescRef(desc: IColumnDesc): any;\n\n  fromDescRef(ref: any): IColumnDesc;\n\n  mappingSample(col: INumberColumn): Promise<ISequence<number>> | ISequence<number>;\n\n  searchAndJump(search: string | RegExp, col: Column): void;\n\n  getRankings(): Ranking[];\n\n  getFirstRanking(): Ranking | null;\n  getLastRanking(): Ranking;\n\n  getColumns(): IColumnDesc[];\n\n  getAggregationStrategy(): IAggregationStrategy;\n\n  isAggregated(ranking: Ranking, group: IGroup): boolean;\n\n  setAggregationState(ranking: Ranking, group: IGroup, state: EAggregationState): void;\n\n  getAggregationState(ranking: Ranking, group: IGroup): EAggregationState;\n\n  aggregateAllOf(ranking: Ranking, aggregateAll: boolean | number | EAggregationState, groups?: IGroup[]): void;\n\n  getTopNAggregated(ranking: Ranking, group: IGroup): number;\n\n  setTopNAggregated(ranking: Ranking, group: IGroup, value: number): void;\n\n  setShowTopN(value: number): void;\n  getShowTopN(): number;\n\n  getRow(dataIndex: number): Promise<IDataRow> | IDataRow;\n\n  clearFilters(): void;\n}\n\n\n\nexport const SCHEMA_REF = `https://lineup.js.org/develop/schema.4.0.0.json`;\n\nexport interface IDataProviderDump {\n  '$schema'?: string;\n  /**\n   * base for generating new uids\n   */\n  uid?: number;\n\n  /**\n   * current selection\n   */\n  selection?: number[];\n\n  /**\n   * list of aggregated group paths\n   */\n  aggregations?: string[] | {[key: string]: number};\n  /**\n   * ranking dumps\n   */\n  rankings?: IRankingDump[];\n\n  /**\n   * custom show top N setting\n   */\n  showTopN?: number;\n}\n\n\n\nexport interface IDeriveOptions {\n  /**\n   * maximal percentage of unique values to be treated as a categorical column\n   */\n  categoricalThreshold: number | ((unique: number, total: number) => boolean);\n\n  columns: string[];\n\n  /**\n   * date pattern to check for string matching them\n   * @default %x\n   */\n  datePattern: string;\n}\n\n\nexport interface IExportOptions {\n  /**\n   * export separator, default: '\\t'\n   */\n  separator: string;\n  /**\n   * new line character, default: '\\n'\n   */\n  newline: string;\n  /**\n   * should a header be generated, default: true\n   */\n  header: boolean;\n  /**\n   * quote strings, default: false\n   */\n  quote: boolean;\n  /**\n   * quote string to use, default: '\"'\n   */\n  quoteChar: string;\n  /**\n   * filter specific column types, default: exclude all support types (selection, action, rank)\n   * @param col the column description to filter\n   */\n  filter: (col: Column) => boolean; //!isSupportType\n\n  /**\n   * whether the description should be part of the column header\n   */\n  verboseColumnHeaders: boolean;\n}\n","import {Ranking, isNumberColumn, Column, IColumnDesc, isSupportType, isMapAbleColumn, DEFAULT_COLOR} from '../model';\nimport {colorPool, MAX_COLORS} from '../model/internal';\nimport {concat, equal, extent, range} from '../internal';\nimport {timeParse} from 'd3-time-format';\nimport {IDataProvider, IDeriveOptions, IExportOptions} from './interfaces';\n\n\n/**\n * @internal\n */\nexport function cleanCategories(categories: Set<string>) {\n  // remove missing values\n  categories.delete(<any>null);\n  categories.delete(<any>undefined);\n  categories.delete('');\n  categories.delete('NA');\n  categories.delete('NaN');\n  categories.delete('na');\n\n  return Array.from(categories).map(String).sort();\n}\n\nfunction hasDifferentSizes(data: any[][]) {\n  if (data.length === 0) {\n    return false;\n  }\n  const base = data[0].length;\n\n  return data.some((d) => d != null && base !== (Array.isArray(d) ? d.length : -1));\n}\n\nfunction isEmpty(v: any) {\n  return v == null || (Array.isArray(v) && v.length === 0) || (v instanceof Set && v.size === 0) || (v instanceof Map && v.size === 0) || equal({}, v);\n}\n\nfunction deriveBaseType(value: any, all: () => any[], column: number | string, options: IDeriveOptions) {\n  if (value == null) {\n    console.warn('cannot derive from null value for column: ', column);\n    return null;\n  }\n  // primitive\n  if (typeof value === 'number') {\n    return {\n      type: 'number',\n      domain: extent(all())\n    };\n  }\n  if (typeof value === 'boolean') {\n    return {\n      type: 'boolean'\n    };\n  }\n\n  const dateParse = timeParse(options.datePattern);\n  if (value instanceof Date || dateParse(value) != null) {\n    return {\n      type: 'date'\n    };\n  }\n  const treatAsCategorical = typeof options.categoricalThreshold === 'function' ? options.categoricalThreshold : (u: number, t: number) => u < t * (<number>options.categoricalThreshold);\n\n  if (typeof value === 'string') {\n    //maybe a categorical\n    const values = all();\n    const categories = new Set(values);\n    if (treatAsCategorical(categories.size, values.length)) {\n      return {\n        type: 'categorical',\n        categories: cleanCategories(categories)\n      };\n    }\n    return {\n      type: 'string'\n    };\n  }\n\n  if (typeof value === 'object' && value.alt != null && value.href != null) {\n    return {\n      type: 'link'\n    };\n  }\n\n  return null;\n}\n\nfunction deriveType(label: string, value: any, column: number | string, all: () => any[], options: IDeriveOptions): IColumnDesc {\n  const base: any = {\n    type: 'string',\n    label,\n    column\n  };\n\n  const primitive = deriveBaseType(value, all, column, options);\n  if (primitive != null) {\n    return Object.assign(base, primitive);\n  }\n\n  // set\n  if (value instanceof Set) {\n    const cats = new Set<string>();\n    for (const value of all()) {\n      if (!(value instanceof Set)) {\n        continue;\n      }\n      value.forEach((vi) =>  {\n        cats.add(String(vi));\n      });\n    }\n    return Object.assign(base, {\n      type: 'set',\n      categories: cleanCategories(cats)\n    });\n  }\n\n  // map\n  if (value instanceof Map) {\n    const first = Array.from(value.values()).find((d) => !isEmpty(d));\n    const mapAll = () => {\n      const r: any[] = [];\n      for (const vi of all()) {\n        if (!(vi instanceof Map)) {\n          continue;\n        }\n        vi.forEach((vii) => {\n          if (!isEmpty(vii)) {\n            r.push(vii);\n          }\n        });\n      }\n      return r;\n    };\n    const p = deriveBaseType(first, mapAll, column, options);\n    return Object.assign(base, p || {}, {\n      type: p ? `${p.type}Map` : 'stringMap'\n    });\n  }\n\n  // array\n  if (Array.isArray(value)) {\n    const values = all();\n    const sameLength = !hasDifferentSizes(values);\n    if (sameLength) {\n      base.dataLength = value.length;\n    }\n    const first = value.find((v) => !isEmpty(v));\n    const p = deriveBaseType(first, () => concat(values).filter((d) => !isEmpty(d)), column, options);\n    if (p && p.type === 'categorical' && !sameLength) {\n      return Object.assign(base, p, {\n        type : 'set'\n      });\n    }\n    if (p || isEmpty(first)) {\n      return Object.assign(base, p || {}, {\n        type: p ? `${p.type}s` : 'strings'\n      });\n    }\n\n    if (typeof first === 'object' && first.key != null && first.value != null) {\n      // key,value pair map\n      const mapAll = () => {\n        const r: any[] = [];\n        for (const vi of values) {\n          if (!Array.isArray(vi)) {\n            continue;\n          }\n          for (const vii of vi) {\n            if (!isEmpty(vii)) {\n              r.push(vii);\n            }\n          }\n        }\n        return r;\n      };\n      const p = deriveBaseType(first.value, mapAll, column, options);\n      return Object.assign(base, p || {}, {\n        type: p ? `${p.type}Map` : 'stringMap'\n      });\n    }\n  }\n\n  // check boxplot\n  const bs = ['min', 'max', 'median', 'q1', 'q3'];\n  if (typeof value === 'object' && bs.every((b) => typeof value[b] === 'number')) {\n    //  boxplot\n    const vs = all();\n    return Object.assign(base, {\n      type: 'boxplot',\n      domain: [\n        vs.reduce((a, b) => Math.min(a, b.min), Number.POSITIVE_INFINITY),\n        vs.reduce((a, b) => Math.max(a, b.max), Number.NEGATIVE_INFINITY)\n      ]\n    });\n  }\n\n  if (typeof value === 'object') {\n    // object map\n    const first = Object.keys(value).map((k) => value[k]).filter((d) => !isEmpty(d));\n    const mapAll = () => {\n      const r: any[] = [];\n      for (const vi of all()) {\n        if (vi == null) {\n          continue;\n        }\n        Object.keys(vi).forEach((k) => {\n          const vii = vi[k];\n          if (!isEmpty(vii)) {\n            r.push(vii);\n          }\n        });\n      }\n      return r;\n    };\n    const p = deriveBaseType(first, mapAll, column, options);\n    return Object.assign(base, p || {}, {\n      type: p ? `${p.type}Map` : 'stringMap'\n    });\n  }\n\n  console.log('cannot infer type of column:', column);\n  //unknown type\n  return base;\n}\n\nfunction selectColumns(existing: string[], columns: string[]) {\n  const allNots = columns.every((d) => d.startsWith('-'));\n  if (!allNots) {\n    return columns;\n  }\n  // negate case, exclude columns that are given using -notation\n  const exclude = new Set(columns);\n  return existing.filter((d) => !exclude.has(`-${d}`));\n}\n\nfunction toLabel(key: string | number) {\n  if (typeof(key) === 'number') {\n    return `Col ${key + 1}`;\n  }\n  key = key.trim();\n  if (key.length === 0) {\n    return 'Unknown';\n  }\n  return key.split(/[\\s]+/gm).map((k) => k.length === 0 ? k : `${k[0]!.toUpperCase()}${k.slice(1)}`).join(' ');\n}\n\nexport function deriveColumnDescriptions(data: any[], options: Partial<IDeriveOptions> = {}) {\n  const config = Object.assign({\n    categoricalThreshold: (u: number, n: number) => u <= MAX_COLORS && u < n * 0.7, //70% unique and less equal to 22 categories\n    columns: [],\n    datePattern: '%x'\n  }, options);\n\n  const r: IColumnDesc[] = [];\n  if (data.length === 0) {\n    // no data to derive something from\n    return r;\n  }\n\n  const first = data[0];\n  const columns: (number|string)[] = Array.isArray(first) ? range(first.length) : (config.columns.length > 0 ? selectColumns(Object.keys(first), config.columns) : Object.keys(first));\n\n  return columns.map((key) => {\n    let v = first[key];\n    if (isEmpty(v)) {\n      // cannot derive something from null try other rows\n      const foundRow = data.find((row) => !isEmpty(row[key]));\n      v = foundRow ? foundRow[key] : null;\n    }\n    return deriveType(toLabel(key), v, key, () => data.map((d) => d[key]).filter((d) => !isEmpty(d)), config);\n  });\n}\n\n\n/**\n * assigns colors to columns if they are numbers and not yet defined\n * @param columns\n * @returns {IColumnDesc[]}\n */\nexport function deriveColors(columns: IColumnDesc[]) {\n  const colors = colorPool();\n  columns.forEach((col: IColumnDesc) => {\n    if (isMapAbleColumn(col)) {\n      col.colorMapping = col.colorMapping || col.color || colors() || DEFAULT_COLOR;\n    }\n  });\n  return columns;\n}\n\n\n/**\n * utility to export a ranking to a table with the given separator\n * @param ranking\n * @param data\n * @param options\n * @returns {Promise<string>}\n */\nexport function exportRanking(ranking: Ranking, data: any[], options: Partial<IExportOptions> = {}) {\n  const opts = <IExportOptions>Object.assign({\n    separator: '\\t',\n    newline: '\\n',\n    header: true,\n    quote: false,\n    quoteChar: '\"',\n    filter: (c: Column) => !isSupportType(c),\n    verboseColumnHeaders: false\n  }, options);\n\n  //optionally quote not numbers\n  const escape = new RegExp(`[${opts.quoteChar}]`, 'g');\n\n  function quote(v: any, c?: Column) {\n    const l = String(v);\n    if ((opts.quote || l.indexOf('\\n') >= 0) && (!c || !isNumberColumn(c))) {\n      return `${opts.quoteChar}${l.replace(escape, opts.quoteChar + opts.quoteChar)}${opts.quoteChar}`;\n    }\n    return l;\n  }\n\n  const columns = ranking.flatColumns.filter((c) => opts.filter(c));\n  const order = ranking.getOrder();\n\n  const r: string[] = [];\n  if (opts.header) {\n    r.push(columns.map((d) => quote(`${d.label}${opts.verboseColumnHeaders && d.description ? `\\n${d.description}` : ''}`)).join(opts.separator));\n  }\n  data.forEach((row, i) => {\n    r.push(columns.map((c) => quote(c.getExportValue({v: row, i: order[i]}, 'text'), c)).join(opts.separator));\n  });\n  return r.join(opts.newline);\n}\n\n\n/** @internal */\nexport function map2Object<T>(map: Map<string, T>) {\n  const r : { [key: string]: T} = {};\n  map.forEach((v, k) => r[k] = v);\n  return r;\n}\n\n/** @internal */\nexport function object2Map<T>(obj: { [key: string]: T}) {\n  const r = new Map<string, T>();\n  for (const k of Object.keys(obj)) {\n    r.set(k, obj[k]);\n  }\n  return r;\n}\n\n\n/** @internal */\nexport function rangeSelection(provider: IDataProvider, rankingId: string, dataIndex: number, relIndex: number, ctrlKey: boolean) {\n  const ranking = provider.getRankings().find((d) => d.id === rankingId);\n  if (!ranking) { // no known reference\n    return false;\n  }\n  const selection = provider.getSelection();\n  if (selection.length === 0 || selection.includes(dataIndex)) {\n    return false; // no other or deselect\n  }\n  const order = ranking.getOrder();\n  const lookup = new Map(Array.from(order).map((d, i) => <[number, number]>[d, i]));\n  const distances = selection.map((d) => {\n    const index = (lookup.has(d) ? lookup.get(d)! : Infinity);\n    return {s: d, index, distance: Math.abs(relIndex - index)};\n  });\n  const nearest = distances.sort((a, b) => a.distance - b.distance)[0]!;\n  if (!isFinite(nearest.distance)) {\n    return false; // all outside\n  }\n  if (!ctrlKey) {\n    selection.splice(0, selection.length);\n    selection.push(nearest.s);\n  }\n  if (nearest.index < relIndex) {\n    for (let i = nearest.index + 1; i <= relIndex; ++i) {\n      selection.push(order[i]);\n    }\n  } else {\n    for (let i = relIndex; i <= nearest.index; ++i) {\n      selection.push(order[i]);\n    }\n  }\n  provider.setSelection(selection);\n  return true;\n}\n","import {AEventDispatcher, debounce, ISequence, OrderedSet, IDebounceContext, IEventListener, suffix, IEventContext} from '../internal';\nimport {Column, IColumnConstructor, Ranking, AggregateGroupColumn, createAggregateDesc, IAggregateGroupColumnDesc, isSupportType, EDirtyReason, RankColumn, createRankDesc, createSelectionDesc, IColumnDesc, IDataRow, IGroup, IndicesArray, IOrderedGroup, ISelectionColumnDesc, EAggregationState, INumberColumn, IColumnDump, IRankingDump, IColorMappingFunctionConstructor, IMappingFunctionConstructor, ITypeFactory} from '../model';\nimport {models} from '../model/models';\nimport {forEachIndices, everyIndices, toGroupID, unifyParents} from '../model/internal';\nimport {IDataProvider, IDataProviderDump, IDataProviderOptions, SCHEMA_REF, IExportOptions} from './interfaces';\nimport {exportRanking, map2Object, object2Map} from './utils';\nimport {IRenderTasks} from '../renderer';\nimport {restoreCategoricalColorMapping} from '../model/CategoricalColorMappingFunction';\nimport {createColorMappingFunction, colorMappingFunctions} from '../model/ColorMappingFunction';\nimport {createMappingFunction, mappingFunctions} from '../model/MappingFunction';\n\n\n\n/**\n * emitted when a column has been added\n * @asMemberOf ADataProvider\n * @event\n */\nexport declare function addColumn(col: Column, index: number): void;\n\n/**\n * emitted when a column has been moved within this composite columm\n * @asMemberOf ADataProvider\n * @event\n */\nexport declare function moveColumn(col: Column, index: number, oldIndex: number): void;\n\n/**\n * emitted when a column has been removed\n * @asMemberOf ADataProvider\n * @event\n */\nexport declare function removeColumn(col: Column, index: number): void;\n/**\n * @asMemberOf ADataProvider\n * @event\n */\nexport declare function orderChanged(previous: number[], current: number[], previousGroups: IOrderedGroup[], currentGroups: IOrderedGroup[], dirtyReason: EDirtyReason[]): void;\n\n\n/**\n * emitted when state of the column is dirty\n * @asMemberOf ADataProvider\n * @event\n */\nexport declare function dirty(): void;\n\n/**\n * emitted when state of the column related to its header is dirty\n * @asMemberOf ADataProvider\n * @event\n */\nexport declare function dirtyHeader(): void;\n\n/**\n * emitted when state of the column related to its values is dirty\n * @asMemberOf ADataProvider\n * @event\n */\nexport declare function dirtyValues(): void;\n\n/**\n * emitted when state of the column related to cached values (hist, compare, ...) is dirty\n * @asMemberOf ADataProvider\n * @event\n */\nexport declare function dirtyCaches(): void;\n\n\n/**\n * emitted when the data changes\n * @asMemberOf ADataProvider\n * @param rows the new data rows\n * @event\n */\nexport declare function dataChanged(rows: IDataRow[]): void;\n\n/**\n * emitted when the selection changes\n * @asMemberOf ADataProvider\n * @param dataIndices the selected data indices\n * @event\n */\nexport declare function selectionChanged(dataIndices: number[]): void;\n/**\n * @asMemberOf ADataProvider\n * @event\n */\nexport declare function addRanking(ranking: Ranking, index: number): void;\n/**\n * @asMemberOf ADataProvider\n * @param ranking if null all rankings are removed else just the specific one\n * @event\n */\nexport declare function removeRanking(ranking: Ranking | null, index: number): void;\n\n/**\n * @asMemberOf ADataProvider\n * @event\n */\nexport declare function addDesc(desc: IColumnDesc): void;\n/**\n * @asMemberOf ADataProvider\n * @event\n */\nexport declare function clearDesc(): void;\n\n/**\n * @asMemberOf ADataProvider\n * @event\n */\nexport declare function showTopNChanged(previous: number, current: number): void;\n\n/**\n * emitted when the selection changes\n * @asMemberOf ADataProvider\n * @param dataIndices the selected data indices\n * @event\n */\nexport declare function jumpToNearest(dataIndices: number[]): void;\n/**\n * @asMemberOf ADataProvider\n * @event\n */\nexport declare function aggregate(ranking: Ranking, group: IGroup | IGroup[], value: boolean, state: EAggregationState): void;\n\n\n/**\n * @asMemberOf ADataProvider\n * @event\n */\nexport declare function busy(busy: boolean): void;\n\nfunction toDirtyReason(ctx: IEventContext) {\n  const primary = ctx.primaryType;\n  switch (primary || '') {\n    case Ranking.EVENT_DIRTY_ORDER:\n      return ctx.args[0] || [EDirtyReason.UNKNOWN];\n    case Ranking.EVENT_SORT_CRITERIA_CHANGED:\n      return [EDirtyReason.SORT_CRITERIA_CHANGED];\n    case Ranking.EVENT_GROUP_CRITERIA_CHANGED:\n      return [EDirtyReason.GROUP_CRITERIA_CHANGED];\n    case Ranking.EVENT_GROUP_SORT_CRITERIA_CHANGED:\n      return [EDirtyReason.GROUP_SORT_CRITERIA_CHANGED];\n    default:\n      return [EDirtyReason.UNKNOWN];\n  }\n}\n\nfunction mergeDirtyOrderContext(current: IDebounceContext, next: IDebounceContext) {\n  const currentReason = toDirtyReason(current.self);\n  const nextReason = toDirtyReason(next.self);\n  const combined = new Set(currentReason);\n  for (const r of nextReason) {\n    combined.add(r);\n  }\n  const args = [Array.from(combined)];\n  return {\n    self: {\n      primaryType: Ranking.EVENT_DIRTY_ORDER,\n      args\n    },\n    args\n  };\n}\n\n/**\n * a basic data provider holding the data and rankings\n */\nabstract class ADataProvider extends AEventDispatcher implements IDataProvider {\n  static readonly EVENT_SELECTION_CHANGED = 'selectionChanged';\n  static readonly EVENT_DATA_CHANGED = 'dataChanged';\n  static readonly EVENT_ADD_COLUMN = Ranking.EVENT_ADD_COLUMN;\n  static readonly EVENT_MOVE_COLUMN = Ranking.EVENT_MOVE_COLUMN;\n  static readonly EVENT_REMOVE_COLUMN = Ranking.EVENT_REMOVE_COLUMN;\n  static readonly EVENT_ADD_RANKING = 'addRanking';\n  static readonly EVENT_REMOVE_RANKING = 'removeRanking';\n  static readonly EVENT_DIRTY = Ranking.EVENT_DIRTY;\n  static readonly EVENT_DIRTY_HEADER = Ranking.EVENT_DIRTY_HEADER;\n  static readonly EVENT_DIRTY_VALUES = Ranking.EVENT_DIRTY_VALUES;\n  static readonly EVENT_DIRTY_CACHES = Ranking.EVENT_DIRTY_CACHES;\n  static readonly EVENT_ORDER_CHANGED = Ranking.EVENT_ORDER_CHANGED;\n  static readonly EVENT_SHOWTOPN_CHANGED = 'showTopNChanged';\n  static readonly EVENT_ADD_DESC = 'addDesc';\n  static readonly EVENT_CLEAR_DESC = 'clearDesc';\n  static readonly EVENT_JUMP_TO_NEAREST = 'jumpToNearest';\n  static readonly EVENT_GROUP_AGGREGATION_CHANGED = AggregateGroupColumn.EVENT_AGGREGATE;\n  static readonly EVENT_BUSY = 'busy';\n\n  private static readonly FORWARD_RANKING_EVENTS = suffix('.provider', Ranking.EVENT_ADD_COLUMN, Ranking.EVENT_REMOVE_COLUMN,\n    Ranking.EVENT_DIRTY, Ranking.EVENT_DIRTY_HEADER, Ranking.EVENT_MOVE_COLUMN,\n    Ranking.EVENT_ORDER_CHANGED, Ranking.EVENT_DIRTY_VALUES, Ranking.EVENT_DIRTY_CACHES);\n\n  /**\n   * all rankings\n   * @type {Array}\n   * @private\n   */\n  private readonly rankings: Ranking[] = [];\n\n  /**\n   * the current selected indices\n   * @type {OrderedSet}\n   */\n  private readonly selection = new OrderedSet<number>();\n\n  //Map<ranking.id@group.name, -1=expand,0=collapse,N=topN>\n  private readonly aggregations = new Map<string, number>(); // not part of = show all\n\n  private uid = 0;\n  private readonly typeFactory: ITypeFactory;\n\n  private readonly options: Readonly<IDataProviderOptions> = {\n    columnTypes: {},\n    colorMappingFunctionTypes: {},\n    mappingFunctionTypes: {},\n    singleSelection: false,\n    showTopN: 10,\n    aggregationStrategy: 'item'\n  };\n\n  /**\n   * lookup map of a column type to its column implementation\n   */\n  readonly columnTypes: {[columnType: string]: IColumnConstructor};\n  readonly colorMappingFunctionTypes: {[colorMappingFunctionType: string]: IColorMappingFunctionConstructor};\n  readonly mappingFunctionTypes: {[mappingFunctionType: string]: IMappingFunctionConstructor};\n\n  private showTopN: number;\n\n  constructor(options: Partial<IDataProviderOptions> = {}) {\n    super();\n    Object.assign(this.options, options);\n    this.columnTypes = Object.assign(models(), this.options.columnTypes);\n    this.colorMappingFunctionTypes = Object.assign(colorMappingFunctions(), this.options.colorMappingFunctionTypes);\n    this.mappingFunctionTypes = Object.assign(mappingFunctions(), this.options.mappingFunctionTypes);\n    this.showTopN = this.options.showTopN;\n\n    this.typeFactory = this.createTypeFactory();\n  }\n\n  private createTypeFactory() {\n    const factory = <ITypeFactory><any>((d: IColumnDump) => {\n      const desc = this.fromDescRef(d.desc);\n      if (!desc || !desc.type) {\n        console.warn('cannot restore column dump', d);\n        return new Column(d.id || '', d.desc || {});\n      }\n      this.fixDesc(desc);\n      const type = this.columnTypes[desc.type];\n      if (type == null) {\n        console.warn('invalid column type in column dump using column', d);\n        return new Column(d.id || '', desc);\n      }\n      const c = new type('', desc, factory);\n      c.restore(d, factory);\n      return c;\n    });\n    factory.colorMappingFunction = createColorMappingFunction(this.colorMappingFunctionTypes, factory);\n    factory.mappingFunction = createMappingFunction(this.mappingFunctionTypes);\n    factory.categoricalColorMappingFunction = restoreCategoricalColorMapping;\n    return factory;\n  }\n\n  /**\n   * events:\n   *  * column changes: addColumn, removeColumn\n   *  * ranking changes: addRanking, removeRanking\n   *  * dirty: dirty, dirtyHeder, dirtyValues\n   *  * selectionChanged\n   * @returns {string[]}\n   */\n  protected createEventList() {\n    return super.createEventList().concat([\n      ADataProvider.EVENT_DATA_CHANGED, ADataProvider.EVENT_BUSY,\n      ADataProvider.EVENT_SHOWTOPN_CHANGED,\n      ADataProvider.EVENT_ADD_COLUMN, ADataProvider.EVENT_REMOVE_COLUMN, ADataProvider.EVENT_MOVE_COLUMN,\n      ADataProvider.EVENT_ADD_RANKING, ADataProvider.EVENT_REMOVE_RANKING,\n      ADataProvider.EVENT_DIRTY, ADataProvider.EVENT_DIRTY_HEADER, ADataProvider.EVENT_DIRTY_VALUES, ADataProvider.EVENT_DIRTY_CACHES,\n      ADataProvider.EVENT_ORDER_CHANGED, ADataProvider.EVENT_SELECTION_CHANGED,\n      ADataProvider.EVENT_ADD_DESC, ADataProvider.EVENT_CLEAR_DESC,\n      ADataProvider.EVENT_JUMP_TO_NEAREST, ADataProvider.EVENT_GROUP_AGGREGATION_CHANGED]);\n  }\n\n  on(type: typeof ADataProvider.EVENT_BUSY, listener: typeof busy | null): this;\n  on(type: typeof ADataProvider.EVENT_DATA_CHANGED, listener: typeof dataChanged | null): this;\n  on(type: typeof ADataProvider.EVENT_SHOWTOPN_CHANGED, listener: typeof showTopNChanged | null): this;\n  on(type: typeof ADataProvider.EVENT_ADD_COLUMN, listener: typeof addColumn | null): this;\n  on(type: typeof ADataProvider.EVENT_MOVE_COLUMN, listener: typeof moveColumn | null): this;\n  on(type: typeof ADataProvider.EVENT_REMOVE_COLUMN, listener: typeof removeColumn | null): this;\n  on(type: typeof ADataProvider.EVENT_ADD_RANKING, listener: typeof addRanking | null): this;\n  on(type: typeof ADataProvider.EVENT_REMOVE_RANKING, listener: typeof removeRanking | null): this;\n  on(type: typeof ADataProvider.EVENT_DIRTY, listener: typeof dirty | null): this;\n  on(type: typeof ADataProvider.EVENT_DIRTY_HEADER, listener: typeof dirtyHeader | null): this;\n  on(type: typeof ADataProvider.EVENT_DIRTY_VALUES, listener: typeof dirtyValues | null): this;\n  on(type: typeof ADataProvider.EVENT_DIRTY_CACHES, listener: typeof dirtyCaches | null): this;\n  on(type: typeof ADataProvider.EVENT_ORDER_CHANGED, listener: typeof orderChanged | null): this;\n  on(type: typeof ADataProvider.EVENT_ADD_DESC, listener: typeof addDesc | null): this;\n  on(type: typeof ADataProvider.EVENT_CLEAR_DESC, listener: typeof clearDesc | null): this;\n  on(type: typeof ADataProvider.EVENT_JUMP_TO_NEAREST, listener: typeof jumpToNearest | null): this;\n  on(type: typeof ADataProvider.EVENT_GROUP_AGGREGATION_CHANGED, listener: typeof aggregate | null): this;\n  on(type: typeof ADataProvider.EVENT_SELECTION_CHANGED, listener: typeof selectionChanged | null): this;\n  on(type: string | string[], listener: IEventListener | null): this; // required for correct typings in *.d.ts\n  on(type: string | string[], listener: IEventListener | null): this {\n    return super.on(type, listener);\n  }\n\n  abstract getTotalNumberOfRows(): number;\n\n  /**\n   * returns a list of all known column descriptions\n   * @returns {Array}\n   */\n  abstract getColumns(): IColumnDesc[];\n\n  abstract getTaskExecutor(): IRenderTasks;\n\n  /**\n   * adds a new ranking\n   * @param existing an optional existing ranking to clone\n   * @return the new ranking\n   */\n  pushRanking(existing?: Ranking): Ranking {\n    const r = this.cloneRanking(existing);\n\n    this.insertRanking(r);\n    return r;\n  }\n\n  protected fireBusy(busy: boolean) {\n    this.fire(ADataProvider.EVENT_BUSY, busy);\n  }\n\n  takeSnapshot(col: Column): Ranking {\n    this.fireBusy(true);\n    const r = this.cloneRanking();\n    const ranking = col.findMyRanker();\n    // by convention copy all support types and the first string column\n    let hasString = col.desc.type === 'string';\n    let hasColumn = false;\n    const toClone = !ranking ? [col] : ranking.children.filter((c) => {\n      if (c === col) {\n        hasColumn = true;\n        return true;\n      }\n      if (!hasString && c.desc.type === 'string') {\n        hasString = true;\n        return true;\n      }\n      return isSupportType(c);\n    });\n\n    if (!hasColumn) {\n      // maybe a nested one thus not in the top level\n      toClone.push(col);\n    }\n\n    toClone.forEach((c) => {\n      const clone = this.clone(c);\n      r.push(clone);\n      if (c === col) {\n        clone.sortByMe();\n      }\n    });\n    this.insertRanking(r);\n    this.fireBusy(false);\n    return r;\n  }\n\n  insertRanking(r: Ranking, index = this.rankings.length) {\n    this.rankings.splice(index, 0, r);\n    this.forward(r, ...ADataProvider.FORWARD_RANKING_EVENTS);\n    //delayed reordering per ranking\n    const that = this;\n    r.on(`${Ranking.EVENT_DIRTY_ORDER}.provider`, debounce(function(this: IEventContext) {\n      that.triggerReorder(r, toDirtyReason(this));\n    }, 100, mergeDirtyOrderContext));\n    this.fire([ADataProvider.EVENT_ADD_RANKING, ADataProvider.EVENT_DIRTY_HEADER, ADataProvider.EVENT_DIRTY_VALUES, ADataProvider.EVENT_DIRTY], r, index);\n    this.triggerReorder(r);\n  }\n\n  private triggerReorder(ranking: Ranking, dirtyReason?: EDirtyReason[]) {\n    this.fireBusy(true);\n    const reason = dirtyReason || [EDirtyReason.UNKNOWN];\n    Promise.resolve(this.sort(ranking, reason)).then(({groups, index2pos}) => {\n      groups = unifyParents(groups);\n      this.initAggregateState(ranking, groups);\n      ranking.setGroups(groups, index2pos, reason);\n      this.fireBusy(false);\n    });\n  }\n\n  /**\n   * removes a ranking from this data provider\n   * @param ranking\n   * @returns {boolean}\n   */\n  removeRanking(ranking: Ranking) {\n    const i = this.rankings.indexOf(ranking);\n    if (i < 0) {\n      return false;\n    }\n    this.unforward(ranking, ...ADataProvider.FORWARD_RANKING_EVENTS);\n    this.rankings.splice(i, 1);\n    ranking.on(`${Ranking.EVENT_DIRTY_ORDER}.provider`, null);\n    this.cleanUpRanking(ranking);\n    this.fire([ADataProvider.EVENT_REMOVE_RANKING, ADataProvider.EVENT_DIRTY_HEADER, ADataProvider.EVENT_DIRTY_VALUES, ADataProvider.EVENT_DIRTY], ranking, i);\n    return true;\n  }\n\n  /**\n   * removes all rankings\n   */\n  clearRankings() {\n    this.rankings.forEach((ranking) => {\n      this.unforward(ranking, ...ADataProvider.FORWARD_RANKING_EVENTS);\n      ranking.on(`${Ranking.EVENT_DIRTY_ORDER}.provider`, null);\n      this.cleanUpRanking(ranking);\n    });\n    // clear\n    this.rankings.splice(0, this.rankings.length);\n    this.fire([ADataProvider.EVENT_REMOVE_RANKING, ADataProvider.EVENT_DIRTY_HEADER, ADataProvider.EVENT_DIRTY_VALUES, ADataProvider.EVENT_DIRTY], null, -1);\n  }\n\n  clearFilters() {\n    this.rankings.forEach((ranking) => ranking.clearFilters());\n  }\n\n  /**\n   * returns a list of all current rankings\n   * @returns {Ranking[]}\n   */\n  getRankings() {\n    return this.rankings.slice();\n  }\n\n  /**\n   * returns the last ranking for quicker access\n   * @returns {Ranking}\n   */\n  getFirstRanking() {\n    return this.rankings[0] || null;\n  }\n\n  /**\n   * returns the last ranking for quicker access\n   * @returns {Ranking}\n   */\n  getLastRanking() {\n    return this.rankings[this.rankings.length - 1];\n  }\n\n  ensureOneRanking() {\n    if (this.rankings.length === 0) {\n      const r = this.pushRanking();\n      this.push(r, createRankDesc());\n    }\n  }\n\n  destroy() {\n    // dummy\n  }\n\n  /**\n   * hook method for cleaning up a ranking\n   * @param _ranking\n   */\n  cleanUpRanking(_ranking: Ranking) {\n    // dummy\n  }\n\n  /**\n   * abstract method for cloning a ranking\n   * @param existing\n   * @returns {null}\n   */\n  abstract cloneRanking(existing?: Ranking): Ranking;\n\n  /**\n   * adds a column to a ranking described by its column description\n   * @param ranking the ranking to add the column to\n   * @param desc the description of the column\n   * @return {Column} the newly created column or null\n   */\n  push(ranking: Ranking, desc: IColumnDesc): Column | null {\n    const r = this.create(desc);\n    if (r) {\n      ranking.push(r);\n      return r;\n    }\n    return null;\n  }\n\n  /**\n   * adds a column to a ranking described by its column description\n   * @param ranking the ranking to add the column to\n   * @param index the position to insert the column\n   * @param desc the description of the column\n   * @return {Column} the newly created column or null\n   */\n  insert(ranking: Ranking, index: number, desc: IColumnDesc) {\n    const r = this.create(desc);\n    if (r) {\n      ranking.insert(r, index);\n      return r;\n    }\n    return null;\n  }\n\n  /**\n   * creates a new unique id for a column\n   * @returns {string}\n   */\n  private nextId() {\n    return `col${this.uid++}`;\n  }\n\n  private fixDesc(desc: IColumnDesc) {\n    //hacks for provider dependent descriptors\n    if (desc.type === 'selection') {\n      (<ISelectionColumnDesc>desc).accessor = (row: IDataRow) => this.isSelected(row.i);\n      (<ISelectionColumnDesc>desc).setter = (index: number, value: boolean) => value ? this.select(index) : this.deselect(index);\n      (<ISelectionColumnDesc>desc).setterAll = (indices: IndicesArray, value: boolean) => value ? this.selectAll(indices) : this.deselectAll(indices);\n    } else if (desc.type === 'aggregate') {\n      (<IAggregateGroupColumnDesc>desc).isAggregated = (ranking: Ranking, group: IGroup) => this.getAggregationState(ranking, group);\n      (<IAggregateGroupColumnDesc>desc).setAggregated = (ranking: Ranking, group: IGroup, value: EAggregationState) => this.setAggregationState(ranking, group, value);\n    }\n    return desc;\n  }\n\n  protected cleanDesc(desc: IColumnDesc) {\n    //hacks for provider dependent descriptors\n    if (desc.type === 'selection') {\n      delete (<ISelectionColumnDesc>desc).accessor;\n      delete (<ISelectionColumnDesc>desc).setter;\n      delete (<ISelectionColumnDesc>desc).setterAll;\n    } else if (desc.type === 'aggregate') {\n      delete (<IAggregateGroupColumnDesc>desc).isAggregated;\n      delete (<IAggregateGroupColumnDesc>desc).setAggregated;\n    }\n    return desc;\n  }\n\n  /**\n   * creates an internal column model out of the given column description\n   * @param desc\n   * @returns {Column} the new column or null if it can't be created\n   */\n  create(desc: IColumnDesc): Column | null {\n    this.fixDesc(desc);\n    //find by type and instantiate\n    const type = this.columnTypes[desc.type];\n    if (type) {\n      return new type(this.nextId(), desc, this.typeFactory);\n    }\n    return null;\n  }\n\n  /**\n   * clones a column by dumping and restoring\n   * @param col\n   * @returns {Column}\n   */\n  clone(col: Column) {\n    const dump = this.dumpColumn(col);\n    return this.restoreColumn(dump);\n  }\n\n  /**\n   * restores a column from a dump\n   * @param dump\n   * @returns {Column}\n   */\n  restoreColumn(dump: any): Column {\n    const c = this.typeFactory(dump);\n    c.assignNewId(this.nextId.bind(this));\n    return c;\n  }\n\n  /**\n   * finds a column in all rankings returning the first match\n   * @param idOrFilter by id or by a filter function\n   * @returns {Column}\n   */\n  find(idOrFilter: string | ((col: Column) => boolean)): Column | null {\n    //convert to function\n    const filter = typeof (idOrFilter) === 'string' ? (col: Column) => col.id === idOrFilter : idOrFilter;\n\n    for (const ranking of this.rankings) {\n      const r = ranking.find(filter);\n      if (r) {\n        return r;\n      }\n    }\n    return null;\n  }\n\n\n  /**\n   * dumps this whole provider including selection and the rankings\n   * @returns {{uid: number, selection: number[], rankings: *[]}}\n   */\n  dump(): IDataProviderDump {\n    return {\n      '$schema': SCHEMA_REF,\n      uid: this.uid,\n      selection: this.getSelection(),\n      aggregations: map2Object(this.aggregations),\n      rankings: this.rankings.map((r) => r.dump(this.toDescRef)),\n      showTopN: this.showTopN\n    };\n  }\n\n  /**\n   * dumps a specific column\n   */\n  dumpColumn(col: Column): IColumnDump {\n    return col.dump(this.toDescRef);\n  }\n\n  /**\n   * for better dumping describe reference, by default just return the description\n   */\n  toDescRef = (desc: any): any => desc;\n\n  /**\n   * inverse operation of toDescRef\n   */\n  fromDescRef = (descRef: any): any => descRef;\n\n  restoreRanking(dump: IRankingDump) {\n    const ranking = this.cloneRanking();\n    ranking.restore(dump, this.typeFactory);\n    const idGenerator = this.nextId.bind(this);\n    ranking.children.forEach((c) => c.assignNewId(idGenerator));\n    return ranking;\n  }\n\n  restore(dump: IDataProviderDump) {\n    //clean old\n    this.clearRankings();\n\n    //restore selection\n    this.uid = dump.uid || 0;\n    if (dump.selection) {\n      dump.selection.forEach((s: number) => this.selection.add(s));\n    }\n    if (dump.showTopN != null) {\n      this.showTopN = dump.showTopN;\n    }\n    if (dump.aggregations) {\n      this.aggregations.clear();\n      if (Array.isArray(dump.aggregations)) {\n        dump.aggregations.forEach((a: string) => this.aggregations.set(a, 0));\n      } else {\n        object2Map(dump.aggregations).forEach((v, k) => this.aggregations.set(k, v));\n      }\n    }\n\n\n    //restore rankings\n    if (dump.rankings) {\n      dump.rankings.forEach((r: any) => {\n        const ranking = this.cloneRanking();\n        ranking.restore(r, this.typeFactory);\n        //if no rank column add one\n        if (!ranking.children.some((d) => d instanceof RankColumn)) {\n          ranking.insert(this.create(createRankDesc())!, 0);\n        }\n        this.insertRanking(ranking);\n      });\n    }\n\n    //assign new ids\n    const idGenerator = this.nextId.bind(this);\n    this.rankings.forEach((r) => {\n      r.children.forEach((c) => c.assignNewId(idGenerator));\n    });\n  }\n\n  abstract findDesc(ref: string): IColumnDesc | null;\n\n  /**\n   * generates a default ranking by using all column descriptions ones\n   */\n  deriveDefault(addSupportType: boolean = true) {\n    const r = this.pushRanking();\n    if (addSupportType) {\n      r.push(this.create(createAggregateDesc())!);\n      r.push(this.create(createRankDesc())!);\n      if (this.options.singleSelection !== false) {\n        r.push(this.create(createSelectionDesc())!);\n      }\n    }\n    this.getColumns().forEach((col) => {\n      const c = this.create(col);\n      if (!c || isSupportType(c)) {\n        return;\n      }\n      r.push(c);\n    });\n    return r;\n  }\n\n  isAggregated(ranking: Ranking, group: IGroup) {\n    return this.getTopNAggregated(ranking, group) >= 0;\n  }\n\n  getAggregationState(ranking: Ranking, group: IGroup) {\n    const n = this.getTopNAggregated(ranking, group);\n    return n < 0 ? EAggregationState.EXPAND : (n === 0 ? EAggregationState.COLLAPSE : EAggregationState.EXPAND_TOP_N);\n  }\n\n  setAggregated(ranking: Ranking, group: IGroup, value: boolean) {\n    return this.setAggregationState(ranking, group, value ? EAggregationState.COLLAPSE : EAggregationState.EXPAND);\n  }\n\n  setAggregationState(ranking: Ranking, group: IGroup, value: EAggregationState) {\n    this.setTopNAggregated(ranking, group, value === EAggregationState.COLLAPSE ? 0 : (value === EAggregationState.EXPAND_TOP_N ? this.showTopN  : -1));\n  }\n\n  getTopNAggregated(ranking: Ranking, group: IGroup) {\n    let g: IGroup | undefined | null = group;\n    while (g) {\n      const key = `${ranking.id}@${toGroupID(g)}`;\n      if (this.aggregations.has(key)) {\n        // propagate to leaf\n        const v = this.aggregations.get(key)!;\n        this.aggregations.set(`${ranking.id}@${toGroupID(group)}`, v);\n        return v;\n      }\n      g = g.parent;\n    }\n    return -1;\n  }\n\n  private unaggregateParents(ranking: Ranking, group: IGroup) {\n    let g: IGroup | undefined | null = group.parent;\n    while (g) {\n      this.aggregations.delete(`${ranking.id}@${toGroupID(g)}`);\n      g = g.parent;\n    }\n  }\n\n  getAggregationStrategy() {\n    return this.options.aggregationStrategy;\n  }\n\n  private initAggregateState(ranking: Ranking, groups: IGroup[]) {\n    let initial = -1;\n    switch(this.getAggregationStrategy()) {\n      case 'group':\n        initial = 0;\n        break;\n      case 'item':\n      case 'group+item':\n      case 'group+item+top':\n        initial = -1;\n        break;\n      case 'group+top+item':\n        initial = this.showTopN;\n        break;\n    }\n\n    for (const group of groups) {\n      const key = `${ranking.id}@${toGroupID(group)}`;\n      if (!this.aggregations.has(key) && initial >= 0) {\n        this.aggregations.set(key, initial);\n      }\n    }\n  }\n\n  setTopNAggregated(ranking: Ranking, group: IGroup, value: number) {\n    this.unaggregateParents(ranking, group);\n    const key = `${ranking.id}@${toGroupID(group)}`;\n    const current = this.getTopNAggregated(ranking, group);\n    if (current === value) {\n      return;\n    }\n    if (value >= 0) {\n      this.aggregations.set(key, value);\n    } else {\n      this.aggregations.delete(key);\n    }\n    this.fire([ADataProvider.EVENT_GROUP_AGGREGATION_CHANGED, ADataProvider.EVENT_DIRTY_VALUES, ADataProvider.EVENT_DIRTY], ranking, group, value);\n  }\n\n  aggregateAllOf(ranking: Ranking, aggregateAll: boolean | number | EAggregationState, groups = ranking.getGroups()) {\n    let v: number;\n    if (typeof aggregateAll === 'boolean') {\n      v = aggregateAll ? 0 : -1;\n    } else if (aggregateAll === EAggregationState.COLLAPSE) {\n      v = 0;\n    } else if (aggregateAll === EAggregationState.EXPAND) {\n      v = -1;\n    } else if (aggregateAll === EAggregationState.EXPAND_TOP_N) {\n      v = this.showTopN;\n    } else {\n      v = aggregateAll;\n    }\n\n    for(const group of groups) {\n      this.unaggregateParents(ranking, group);\n      const current = this.getTopNAggregated(ranking, group);\n      if (current === v) {\n        continue;\n      }\n      const key = `${ranking.id}@${toGroupID(group)}`;\n      if (v >= 0) {\n        this.aggregations.set(key, v);\n      } else {\n        this.aggregations.delete(key);\n      }\n    }\n    this.fire([ADataProvider.EVENT_GROUP_AGGREGATION_CHANGED, ADataProvider.EVENT_DIRTY_VALUES, ADataProvider.EVENT_DIRTY], ranking, groups, v >= 0, v);\n  }\n\n  getShowTopN() {\n    return this.showTopN;\n  }\n\n  setShowTopN(value: number) {\n    if (this.showTopN === value) {\n      return;\n    }\n    // update entries\n    for (const [k, v] of Array.from(this.aggregations.entries())) {\n      if (v === this.showTopN) {\n        this.aggregations.set(k, value);\n      }\n    }\n    this.fire([ADataProvider.EVENT_SHOWTOPN_CHANGED, ADataProvider.EVENT_DIRTY_VALUES, ADataProvider.EVENT_DIRTY], this.showTopN, this.showTopN = value);\n  }\n\n  /**\n   * sorts the given ranking and eventually return a ordering of the data items\n   * @param ranking\n   * @return {Promise<any>}\n   */\n  abstract sort(ranking: Ranking, dirtyReason: EDirtyReason[]): Promise<{groups: IOrderedGroup[], index2pos: IndicesArray}> | {groups: IOrderedGroup[], index2pos: IndicesArray};\n\n  /**\n   * returns a view in the order of the given indices\n   * @param indices\n   * @return {Promise<any>}\n   */\n  abstract view(indices: IndicesArray): Promise<any[]> | any[];\n\n\n  abstract getRow(index: number): Promise<IDataRow> | IDataRow;\n\n  /**\n   * returns a data sample used for the mapping editor\n   * @param col\n   * @return {Promise<any>}\n   */\n  abstract mappingSample(col: INumberColumn): Promise<ISequence<number>> | ISequence<number>;\n\n  /**\n   * is the given row selected\n   * @param index\n   * @return {boolean}\n   */\n  isSelected(index: number) {\n    return this.selection.has(index);\n  }\n\n  /**\n   * also select the given row\n   * @param index\n   */\n  select(index: number) {\n    if (this.selection.has(index)) {\n      return; //no change\n    }\n    if (this.options.singleSelection === true && this.selection.size > 0) {\n      this.selection.clear();\n    }\n    this.selection.add(index);\n    this.fire(ADataProvider.EVENT_SELECTION_CHANGED, this.getSelection());\n  }\n\n  /**\n   * hook for selecting elements matching the given arguments\n   * @param search\n   * @param col\n   */\n  abstract searchAndJump(search: string | RegExp, col: Column): void;\n\n  jumpToNearest(indices: number[]) {\n    if (indices.length === 0) {\n      return;\n    }\n    this.fire(ADataProvider.EVENT_JUMP_TO_NEAREST, indices);\n  }\n\n  /**\n   * also select all the given rows\n   * @param indices\n   */\n  selectAll(indices: IndicesArray) {\n    if (everyIndices(indices, (i) => this.selection.has(i))) {\n      return; //no change\n    }\n    if (this.options.singleSelection === true) {\n      this.selection.clear();\n      if (indices.length > 0) {\n        this.selection.add(indices[0]);\n      }\n    } else {\n      forEachIndices(indices, (index) => {\n        this.selection.add(index);\n      });\n    }\n    this.fire(ADataProvider.EVENT_SELECTION_CHANGED, this.getSelection());\n  }\n\n  selectAllOf(ranking: Ranking) {\n    this.setSelection(Array.from(ranking.getOrder()));\n  }\n\n  /**\n   * set the selection to the given rows\n   * @param indices\n   */\n  setSelection(indices: number[]) {\n    if (indices.length === 0) {\n      return this.clearSelection();\n    }\n    if (this.selection.size === indices.length && indices.every((i) => this.selection.has(i))) {\n      return; //no change\n    }\n    this.selection.clear();\n    this.selectAll(indices);\n  }\n\n  /**\n   * toggles the selection of the given data index\n   * @param index\n   * @param additional just this element or all\n   * @returns {boolean} whether the index is currently selected\n   */\n  toggleSelection(index: number, additional = false) {\n    if (this.isSelected(index)) {\n      if (additional) {\n        this.deselect(index);\n      } else {\n        this.clearSelection();\n      }\n      return false;\n    }\n    if (additional) {\n      this.select(index);\n    } else {\n      this.setSelection([index]);\n    }\n    return true;\n  }\n\n  /**\n   * deselect the given row\n   * @param index\n   */\n  deselect(index: number) {\n    if (!this.selection.has(index)) {\n      return; //no change\n    }\n    this.selection.delete(index);\n    this.fire(ADataProvider.EVENT_SELECTION_CHANGED, this.getSelection());\n  }\n\n  /**\n   * also select all the given rows\n   * @param indices\n   */\n  deselectAll(indices: IndicesArray) {\n    if (everyIndices(indices, (i) => !this.selection.has(i))) {\n      return; //no change\n    }\n    forEachIndices(indices, (index) => {\n      this.selection.delete(index);\n    });\n    this.fire(ADataProvider.EVENT_SELECTION_CHANGED, this.getSelection());\n  }\n\n  /**\n   * returns a promise containing the selected rows\n   * @return {Promise<any[]>}\n   */\n  selectedRows(): Promise<any[]> | any[] {\n    if (this.selection.size === 0) {\n      return [];\n    }\n    return this.view(this.getSelection());\n  }\n\n  /**\n   * returns the currently selected indices\n   * @returns {Array}\n   */\n  getSelection() {\n    return Array.from(this.selection);\n  }\n\n  /**\n   * clears the selection\n   */\n  clearSelection() {\n    if (this.selection.size === 0) {\n      return; //no change\n    }\n    this.selection.clear();\n    this.fire(ADataProvider.EVENT_SELECTION_CHANGED, [], false);\n  }\n\n  /**\n   * utility to export a ranking to a table with the given separator\n   * @param ranking\n   * @param options\n   * @returns {Promise<string>}\n   */\n  exportTable(ranking: Ranking, options: Partial<IExportOptions> = {}) {\n    return Promise.resolve(this.view(ranking.getOrder())).then((data) => exportRanking(ranking, data, options));\n  }\n}\n\nexport default ADataProvider;\n","import {ActionColumn, AggregateGroupColumn, AnnotateColumn, BooleanColumn, BooleansColumn, BoxPlotColumn, CategoricalColumn, CategoricalMapColumn, CategoricalsColumn, DateColumn, DatesColumn, DatesMapColumn, GroupColumn, HierarchyColumn, ImpositionBoxPlotColumn, ImpositionCompositeColumn, ImpositionCompositesColumn, LinkColumn, LinkMapColumn, LinksColumn, NestedColumn, NumberColumn, NumberMapColumn, NumbersColumn, OrdinalColumn, RankColumn, ReduceColumn, ScriptColumn, SelectionColumn, SetColumn, StackColumn, StringColumn, StringMapColumn, StringsColumn} from './';\n\n/**\n * a map of all known column types\n */\nexport function models() {\n  return {\n    actions: ActionColumn,\n    aggregate: AggregateGroupColumn,\n    annotate: AnnotateColumn,\n    boolean: BooleanColumn,\n    booleans: BooleansColumn,\n    boxplot: BoxPlotColumn,\n    categorical: CategoricalColumn,\n    categoricalMap: CategoricalMapColumn,\n    categoricals: CategoricalsColumn,\n    date: DateColumn,\n    dateMap: DatesMapColumn,\n    dates: DatesColumn,\n    group: GroupColumn,\n    hierarchy: HierarchyColumn,\n    imposition: ImpositionCompositeColumn,\n    impositionBoxPlot: ImpositionBoxPlotColumn,\n    impositions: ImpositionCompositesColumn,\n    reduce: ReduceColumn,\n    nested: NestedColumn,\n    number: NumberColumn,\n    numbers: NumbersColumn,\n    numberMap: NumberMapColumn,\n    ordinal: OrdinalColumn,\n    rank: RankColumn,\n    script: ScriptColumn,\n    selection: SelectionColumn,\n    set: SetColumn,\n    stack: StackColumn,\n    string: StringColumn,\n    stringMap: StringMapColumn,\n    strings: StringsColumn,\n    link: LinkColumn,\n    linkMap: LinkMapColumn,\n    links: LinksColumn\n  };\n}\n","import {IDataRow} from '../model';\n\n\n/**\n * @internal\n */\nexport function isComplexAccessor(column: any) {\n  // something like a.b or a[4]\n  return typeof column === 'string' && column.includes('.');\n}\n\n\n/**\n * @internal\n */\nexport function rowComplexGetter(row: IDataRow, desc: any) {\n  const column = desc.column;\n  if (row.hasOwnProperty(column)) { // well complex but a direct hit\n    return row.v[column];\n  }\n  const resolve = (obj: any, col: string) => {\n    if (obj === undefined) {\n      return obj; // propagate invalid values\n    }\n    if (/\\d+/.test(col)) { // index\n      return obj[+col];\n    }\n    return obj[col];\n  };\n  return column.split('.').reduce(resolve, row.v);\n}\n\n\n/**\n * simple row getter\n * @internal\n */\nexport function rowGetter(row: IDataRow, desc: any) {\n  return row.v[desc.column];\n}\n\n\n/**\n * @internal\n */\nexport function rowGuessGetter(row: IDataRow, desc: any) {\n  const column = desc.column;\n  if (isComplexAccessor(column)) {\n    return rowComplexGetter(row, desc);\n  }\n  return rowGetter(row, desc);\n}\n\n","import {IColumnDesc, Ranking} from '../model';\nimport ADataProvider from './ADataProvider';\nimport {IDataProviderDump, IDataProviderOptions} from './interfaces';\nimport {isComplexAccessor, rowGetter, rowComplexGetter, rowGuessGetter} from './accessor';\n\n\nfunction injectAccessor(d: any) {\n  d.accessor = d.accessor || (d.column ? (isComplexAccessor(d.column) ? rowComplexGetter : rowGetter) : rowGuessGetter);\n  d.label = d.label || d.column;\n  return d;\n}\n\n/**\n * common base implementation of a DataProvider with a fixed list of column descriptions\n */\nabstract class ACommonDataProvider extends ADataProvider {\n\n  private rankingIndex = 0;\n\n  constructor(private columns: IColumnDesc[] = [], options: Partial<IDataProviderOptions> = {}) {\n    super(options);\n    //generate the accessor\n    columns.forEach(injectAccessor);\n  }\n\n  cloneRanking(existing?: Ranking) {\n    const id = this.nextRankingId();\n    const clone = new Ranking(id);\n\n    if (existing) { //copy the ranking of the other one\n      //TODO better cloning\n      existing.children.forEach((child) => {\n        this.push(clone, child.desc);\n      });\n    }\n\n    return clone;\n  }\n\n  /**\n   * adds another column description to this data provider\n   * @param column\n   */\n  pushDesc(column: IColumnDesc) {\n    injectAccessor(column);\n    this.columns.push(column);\n    this.fire(ADataProvider.EVENT_ADD_DESC, column);\n  }\n\n  clearColumns() {\n    this.clearRankings();\n    this.columns.splice(0, this.columns.length);\n    this.fire(ADataProvider.EVENT_CLEAR_DESC);\n  }\n\n  getColumns(): IColumnDesc[] {\n    return this.columns.slice();\n  }\n\n  findDesc(ref: string) {\n    return this.columns.filter((c) => (<any>c).column === ref)[0];\n  }\n\n  /**\n   * identify by the tuple type@columnname\n   * @param desc\n   * @returns {string}\n   */\n  toDescRef = (desc: any): any => {\n    return typeof desc.column !== 'undefined' ? `${desc.type}@${desc.column}` : this.cleanDesc(Object.assign(desc));\n  }\n\n  fromDescRef = (descRef: any): any => {\n    if (typeof (descRef) === 'string') {\n      return this.columns.find((d: any) => `${d.type}@${d.column}` === descRef || d.type === descRef);\n    }\n    const existing = this.columns.find((d) => descRef.column === (<any>d).column && descRef.label === d.label && descRef.type === d.type);\n    if (existing) {\n      return existing;\n    }\n    return descRef;\n  }\n\n  restore(dump: IDataProviderDump) {\n    super.restore(dump);\n    this.rankingIndex = 1 + Math.max(...this.getRankings().map((r) => +r.id.substring(4)));\n  }\n\n  nextRankingId() {\n    return `rank${this.rankingIndex++}`;\n  }\n}\n\nexport default ACommonDataProvider;\n","import {createIndexArray, ILookUpArray} from '../internal';\nimport {FIRST_IS_MISSING, FIRST_IS_NAN, ECompareValueType, ICompareValue, Column, UIntTypedArray, Ranking, IDataRow} from '../model';\n\n\nconst missingUInt8 = FIRST_IS_MISSING > 0 ? 255 : 0;\nconst missingBinary = missingUInt8;\nconst missingUInt16 = FIRST_IS_MISSING > 0 ? 65535 : 0; // max or 0\nconst missingUInt32 = FIRST_IS_MISSING > 0 ? 4294967295 : 0; // max or 0\nconst missingInt8 = FIRST_IS_MISSING > 0 ? 127 : -128; // max or min\nconst missingInt16 = FIRST_IS_MISSING > 0 ? 32767 : -32768; // max or min\nconst missingInt32 = FIRST_IS_MISSING > 0 ? 2147483647 : -2147483648; // max or min\nconst missingFloat = FIRST_IS_NAN > 0 ? Number.POSITIVE_INFINITY : Number.NEGATIVE_INFINITY;\nconst missingFloatAsc = FIRST_IS_MISSING > 0 ? Number.POSITIVE_INFINITY : Number.NEGATIVE_INFINITY;\nconst missingString = FIRST_IS_MISSING > 0 ? '\\uffff' : '\\u0000'; // first or last character\n\n\nfunction chooseMissingByLength(length: number) {\n  if (length <= 255) {\n    return missingBinary;\n  }\n  if (length <= 65535) {\n    return missingUInt16;\n  }\n  return missingUInt32;\n}\n\n\nfunction toCompareLookUp(rawLength: number, type: ECompareValueType): ILookUpArray {\n  switch (type) {\n    case ECompareValueType.COUNT:\n      return createIndexArray(rawLength + 1);\n    case ECompareValueType.BINARY:\n    case ECompareValueType.UINT8:\n      return new Uint8Array(rawLength);\n    case ECompareValueType.UINT16:\n      return new Uint16Array(rawLength);\n    case ECompareValueType.UINT32:\n      return new Uint32Array(rawLength);\n    case ECompareValueType.INT8:\n      return new Int8Array(rawLength);\n    case ECompareValueType.INT16:\n      return new Int16Array(rawLength);\n    case ECompareValueType.INT32:\n      return new Int32Array(rawLength);\n    case ECompareValueType.STRING:\n      return <string[]>[];\n    case ECompareValueType.FLOAT_ASC:\n    case ECompareValueType.FLOAT:\n      return new Float32Array(rawLength);\n    case ECompareValueType.DOUBLE_ASC:\n    case ECompareValueType.DOUBLE:\n      return new Float64Array(rawLength);\n  }\n}\n\nfunction createSetter(type: ECompareValueType, lookup: ILookUpArray, missingCount: number): ((index: number, v: ICompareValue) => void) {\n  switch (type) {\n    case ECompareValueType.BINARY: // just 0 or 1 -> convert to 0=-Ininity 1 2 255=+Infinity\n      return (index, v) => lookup[index] = v == null || isNaN(<number>v) ? missingBinary : (<number>v) + 1;\n    case ECompareValueType.COUNT: // uint32\n      return (index, v) => lookup[index] = v == null || isNaN(<number>v) ? missingCount : (<number>v) + 1;\n    case ECompareValueType.UINT8: // shift by one to have 0 for -Inf\n      return (index, v) => lookup[index] = v == null || isNaN(<number>v) ? missingInt8 : (<number>v) + 1;\n    case ECompareValueType.UINT16: // shift by one to have 0 for -Inf\n      return (index, v) => lookup[index] = v == null || isNaN(<number>v) ? missingInt16 : (<number>v) + 1;\n    case ECompareValueType.UINT32: // shift by one to have 0 for -Inf\n      return (index, v) => lookup[index] = v == null || isNaN(<number>v) ? missingInt32 : (<number>v) + 1;\n    case ECompareValueType.INT8:\n      return (index, v) => lookup[index] = v == null || isNaN(<number>v) ? missingInt8 : (<number>v);\n    case ECompareValueType.INT16:\n      return (index, v) => lookup[index] = v == null || isNaN(<number>v) ? missingInt16 : (<number>v);\n    case ECompareValueType.INT32:\n      return (index, v) => lookup[index] = v == null || isNaN(<number>v) ? missingInt32 : (<number>v);\n    case ECompareValueType.STRING:\n      return (index, v) => lookup[index] = v == null || v === '' ? missingString : v;\n    case ECompareValueType.FLOAT:\n    case ECompareValueType.DOUBLE:\n      return (index, v) => lookup[index] = v == null || isNaN(<number>v) ? missingFloat : v;\n    case ECompareValueType.FLOAT_ASC:\n    case ECompareValueType.DOUBLE_ASC:\n      return (index, v) => lookup[index] = v == null || isNaN(<number>v) ? missingFloatAsc : v;\n  }\n}\n\nexport class CompareLookup {\n  private readonly criteria: {col: Column, valueCache?(dataIndex: number): any}[] = [];\n  private readonly data: {asc: boolean, v: ECompareValueType, lookup: ILookUpArray, setter: (dataIndex: number, value: ICompareValue) => void}[] = [];\n\n  constructor(rawLength: number, isSorting: boolean, ranking: Ranking, valueCaches?: (col: Column) => (undefined | ((i: number) => any))) {\n    const missingCount = chooseMissingByLength(rawLength + 1); // + 1 for the value shift to have 0 as start\n\n    for (const c of (isSorting ? ranking.getSortCriteria() : ranking.getGroupSortCriteria())) {\n      const v = (isSorting ? c.col.toCompareValueType() : c.col.toCompareGroupValueType());\n      const valueCache = valueCaches ? valueCaches(c.col) : undefined;\n      this.criteria.push({col: c.col, valueCache});\n      if (!Array.isArray(v)) {\n        const lookup = toCompareLookUp(rawLength, v);\n        this.data.push({asc: c.asc, v, lookup, setter: createSetter(v, lookup, missingCount)});\n        continue;\n      }\n      for (const vi of v) {\n        const lookup = toCompareLookUp(rawLength, vi);\n        this.data.push({asc: c.asc, v: vi, lookup, setter: createSetter(vi, lookup, missingCount)});\n      }\n    }\n\n    if (isSorting) {\n      return;\n    }\n\n    {\n      const v = ECompareValueType.STRING;\n      const lookup = toCompareLookUp(rawLength, v);\n      this.data.push({asc: true, v, lookup, setter: createSetter(v, lookup, missingCount)});\n    }\n  }\n\n  get sortOrders() {\n    return this.data.map((d) => ({asc: d.asc, lookup: d.lookup}));\n  }\n\n  get transferAbles() {\n    // so a typed array\n    return this.data.map((d) => d.lookup).filter((d): d is UIntTypedArray | Float32Array => !Array.isArray(d)).map((d) => d.buffer);\n  }\n\n  push(row: IDataRow) {\n    let i = 0;\n    for (const c of this.criteria) {\n      const r = c.col.toCompareValue(row, c.valueCache ? c.valueCache(row.i) : undefined);\n      if (!Array.isArray(r)) {\n        this.data[i++].setter(row.i, r);\n        continue;\n      }\n      for (const ri of r) {\n        this.data[i++].setter(row.i, ri);\n      }\n    }\n  }\n\n  pushValues(dataIndex: number, vs: ICompareValue[]) {\n    for (let i = 0; i < vs.length; ++i) {\n      this.data[i].setter(dataIndex, vs[i]);\n    }\n  }\n\n  free() {\n    // free up to save memory\n    this.data.splice(0, this.data.length);\n  }\n}\n","import {IAbortAblePromise, ABORTED, IAbortAblePromiseBase} from 'lineupengine';\n\n/**\n * @internal\n */\nexport interface IPoorManIdleDeadline {\n  didTimeout: boolean;\n  timeRemaining(): number;\n}\n\n/**\n * helper since not part of the typings\n * @internal\n */\nexport interface IPoorManIdleCallback {\n  requestIdleCallback(callback: (deadline: IPoorManIdleDeadline) => void, options?: {timeout: number}): number;\n\n  clearIdleCallback(callbackId: number): void;\n}\n\n/**\n * @internal\n */\nexport interface ITask<T> {\n  /**\n   * external task id\n   */\n  id: string;\n  /**\n   * iterator for the incremental task, return null for another round\n   */\n  it: Iterator<T | PromiseLike<T> | null>;\n  /**\n   * function to the resolve the resulting promise\n   */\n  resolve(r: T | PromiseLike<T> | symbol): void;\n  /**\n   * the resulting promise\n   */\n  result: PromiseLike<T | symbol>;\n\n  /**\n   * aborts this task\n   */\n  abort: () => void;\n\n  isAborted: boolean;\n}\n\n/**\n * iterator result for another round\n * @internal\n */\nexport const ANOTHER_ROUND = {\n  value: null,\n  done: false\n};\n\n/**\n * iterator for just one entry\n * @internal\n */\nexport function oneShotIterator<T>(calc: () => T): Iterator<T> {\n  return {\n    next: () => ({done: true, value: calc()})\n  };\n}\n\n\nfunction thenFactory<T>(wrappee: PromiseLike<T>, abort: () => void, isAborted: () => boolean) {\n  function then<TResult1 = T | symbol, TResult2 = never>(onfulfilled?: ((value: T | symbol) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): IAbortAblePromiseBase<TResult1 | TResult2> {\n    const r = wrappee.then(onfulfilled, onrejected);\n    return {\n      then: <any>thenFactory(r, abort, isAborted),\n      abort,\n      isAborted\n    };\n  }\n  return then;\n}\n\n/**\n * task scheduler for running tasks in idle callbacks\n * @internal\n */\nexport default class TaskScheduler {\n  private tasks: ITask<any>[] = [];\n  // idle callback id\n  private taskId: number = -1;\n\n  private runTasks = (deadline: IPoorManIdleDeadline) => {\n    // while more tasks and not timed out\n    while (this.tasks.length > 0 && (deadline.didTimeout || deadline.timeRemaining() > 0)) {\n      const task = this.tasks.shift()!;\n\n      let r = task.it.next();\n      // call next till done or ran out of time\n      while (!r.done && (deadline.didTimeout || deadline.timeRemaining() > 0)) {\n        r = task.it.next();\n      }\n\n      if (r.done) {\n        // resolve async\n        requestAnimationFrame(() => task.resolve(r.value));\n      } else {\n        // reschedule again\n        this.tasks.unshift(task);\n      }\n    }\n\n    this.taskId = -1;\n    this.reSchedule();\n  }\n\n  private reSchedule() {\n    if (this.tasks.length === 0 || this.taskId > -1) {\n      return;\n    }\n\n    const ww = (<IPoorManIdleCallback><any>self);\n    if (ww.requestIdleCallback) {\n      this.taskId = ww.requestIdleCallback(this.runTasks);\n    } else {\n      this.taskId = self.setTimeout(this.runTasks, 1);\n    }\n  }\n\n  /**\n   * pushes a task with multi hops using an iterator\n   * @param id task id\n   * @param it iterator to execute\n   */\n  pushMulti<T>(id: string, it: Iterator<T | PromiseLike<T> | null>, abortAble = true): IAbortAblePromise<T> {\n    // abort task with the same id\n    const abort = () => {\n      const index = this.tasks.findIndex((d) => d.id === id);\n      if (index < 0) {\n        return; // too late or none\n      }\n      const task = this.tasks[index];\n      this.tasks.splice(index, 1);\n\n      task.isAborted = true;\n      task.resolve(ABORTED);\n    };\n\n    {\n      // abort existing\n      const index = this.tasks.findIndex((d) => d.id === id);\n      if (index >= 0) {\n        const task = this.tasks[index];\n        task.abort();\n      }\n    }\n\n    let resolve: (value: T | symbol) => void;\n\n    const p = new Promise<T | symbol>((r) => {\n      // called during constructor\n      resolve = r;\n    });\n\n    const task: ITask<T> = {\n      id,\n      it,\n      result: p,\n      abort,\n      isAborted: false,\n      resolve: resolve!\n    };\n    const isAborted = () => task.isAborted;\n\n    this.tasks.push(task);\n\n    this.reSchedule();\n\n    const abortOrDummy = abortAble ? abort : () => undefined;\n    const isAbortedOrDummy = abortAble ? isAborted : () => false;\n\n    return {\n      then: thenFactory(p, abortOrDummy, isAbortedOrDummy),\n      abort: abortOrDummy,\n      isAborted: isAbortedOrDummy\n    };\n  }\n\n  /**\n   * pushes a simple task\n   * @param id task id\n   * @param calc task function\n   */\n  push<T>(id: string, calc: () => T | PromiseLike<T>): IAbortAblePromise<T> {\n    return this.pushMulti(id, oneShotIterator(calc));\n  }\n\n  /**\n   * abort a task with the given id\n   * @param id task id\n   */\n  abort(id: string) {\n    const index = this.tasks.findIndex((d) => d.id === id);\n    if (index < 0) {\n      return false; // too late or none\n    }\n    const task = this.tasks[index];\n    task.abort();\n    return true;\n  }\n\n  abortAll(filter: (task: ITask<any>) => boolean) {\n    const abort = this.tasks.filter(filter);\n    if (abort.length === 0) {\n      return;\n    }\n    this.tasks = this.tasks.filter((d) => !filter(d));\n    for (const task of abort) {\n      task.resolve(ABORTED);\n      task.abort();\n    }\n  }\n\n  clear() {\n    if (this.taskId === -1) {\n      return;\n    }\n    const ww = (<IPoorManIdleCallback><any>self);\n    if (ww.requestIdleCallback) {\n      ww.clearIdleCallback(this.taskId);\n    } else {\n      self.clearTimeout(this.taskId);\n    }\n    this.taskId = -1;\n\n    this.tasks.splice(0, this.tasks.length).forEach((d) => {\n      d.resolve(ABORTED);\n      d.abort();\n    });\n  }\n}\n","import {abortAbleAll, IAbortAblePromise, ABORTED} from 'lineupengine';\nimport {ANOTHER_ROUND} from '../internal/scheduler';\nimport {IForEachAble, lazySeq, boxplotBuilder, categoricalStatsBuilder, categoricalValueCacheBuilder, dateStatsBuilder, dateValueCacheBuilder, IAdvancedBoxPlotData, ICategoricalStatistics, IDateStatistics, IStatistics, normalizedStatsBuilder, dateValueCache2Value, categoricalValueCache2Value, joinIndexArrays, IBuilder, ISequence} from '../internal';\nimport {CategoricalColumn, Column, ICompareValue, DateColumn, ICategoricalLikeColumn, IDataRow, IDateColumn, IGroup, ImpositionCompositeColumn, IndicesArray, INumberColumn, NumberColumn, OrdinalColumn, Ranking, UIntTypedArray, ICategory} from '../model';\nimport {IRenderTask, IRenderTasks} from '../renderer';\nimport {CompareLookup} from './sort';\n\n\n/**\n * a render task that is already resolved\n */\nexport class TaskNow<T> implements IRenderTask<T> {\n  constructor(public readonly v: T | symbol) {\n\n  }\n\n  then<U = void>(onfullfilled: (value: T | symbol) => U) {\n    return onfullfilled(this.v);\n  }\n}\n\n/**\n * factory function for\n */\nexport function taskNow<T>(v: T) {\n  return new TaskNow(v);\n}\n\n\nexport function abortedTask<T>(): IRenderTask<T> {\n  return new TaskNow<T>(ABORTED);\n}\n\n/**\n * a render task based on an abortable promise\n */\nexport class TaskLater<T> implements IRenderTask<T> {\n  constructor(public readonly v: IAbortAblePromise<T>) {\n\n  }\n\n  then<U = void>(onfullfilled: (value: T | symbol) => U): IAbortAblePromise<U> {\n    return this.v.then(onfullfilled, () => onfullfilled(ABORTED));\n  }\n}\n\nexport function taskLater<T>(v: IAbortAblePromise<T>) {\n  return new TaskLater(v);\n}\n\n/**\n * similar to Promise.all\n */\nexport function tasksAll<T>(tasks: IRenderTask<T>[]): IRenderTask<T[]> {\n  if ((<(TaskNow<T> | TaskLater<T>)[]>tasks).some((d) => d.v === ABORTED)) {\n    return abortedTask();\n  }\n  if (tasks.every((t) => t instanceof TaskNow)) {\n    return taskNow(tasks.map((d) => <T>(<TaskNow<T>>d).v));\n  }\n  return taskLater(abortAbleAll((<(TaskNow<T> | TaskLater<T>)[]>tasks).map((d) => <T>d.v)));\n}\n\n\n\nexport interface IRenderTaskExecutor extends IRenderTasks {\n  setData(data: IDataRow[]): void;\n\n  dirtyColumn(col: Column, type: 'data' | 'summary' | 'group'): void;\n  dirtyRanking(ranking: Ranking, type: 'data' | 'summary' | 'group'): void;\n\n  groupCompare(ranking: Ranking, group: IGroup, rows: IndicesArray): IRenderTask<ICompareValue[]>;\n\n  preCompute(ranking: Ranking, groups: {rows: IndicesArray, group: IGroup}[], maxDataIndex: number): void;\n  preComputeCol(col: Column): void;\n  preComputeData(ranking: Ranking): void;\n  copyData2Summary(ranking: Ranking): void;\n  copyCache(col: Column, from: Column): void;\n\n  sort(ranking: Ranking, group: IGroup, indices: IndicesArray, singleCall: boolean, maxDataIndex: number, lookups?: CompareLookup): Promise<IndicesArray>;\n\n  terminate(): void;\n\n  valueCache(col: Column): undefined | ((dataIndex: number) => any);\n}\n\nexport class MultiIndices {\n  private _joined: IndicesArray | null = null;\n\n  constructor(public readonly indices: IndicesArray[], private readonly maxDataIndex: number) {\n\n  }\n\n  get joined() {\n    if (this.indices.length === 1) {\n      return this.indices[0];\n    }\n    if (this.indices.length === 0) {\n      return new Uint8Array(0);\n    }\n    if (this._joined) {\n      return this._joined;\n    }\n    return this._joined = joinIndexArrays(this.indices, this.maxDataIndex);\n  }\n}\n\n/**\n * number of data points to build per iteration / chunk\n */\nconst CHUNK_SIZE = 100;\n\n\nexport class ARenderTasks {\n  protected readonly valueCacheData = new Map<string, Float32Array | UIntTypedArray | Int32Array | Float64Array>();\n\n  protected readonly byIndex = (i: number) => this.data[i];\n\n  constructor(protected data: IDataRow[] = []) {\n\n  }\n\n\n  protected byOrder(indices: IndicesArray): ISequence<IDataRow> {\n    return lazySeq(indices).map(this.byIndex);\n  }\n\n  protected byOrderAcc<T>(indices: IndicesArray, acc: (row: IDataRow) => T) {\n    return lazySeq(indices).map((i) => acc(this.data[i]));\n  }\n\n  /**\n   * builder factory to create an iterator that can be used to schedule\n   * @param builder the builder to use\n   * @param order the order to iterate over\n   * @param acc the accessor to get the value out of the data\n   * @param build optional build mapper\n   */\n  private builder<T, BR, B extends {push: (v: T) => void, build: () => BR}, R = BR>(builder: B, order: IndicesArray | null | MultiIndices, acc: (dataIndex: number) => T, build?: (r: BR) => R): Iterator<R | null> {\n    let i = 0;\n\n    // no indices given over the whole data\n    const nextData = (currentChunkSize: number = CHUNK_SIZE) => {\n      let chunkCounter = currentChunkSize;\n      const data = this.data;\n      for (; i < data.length && chunkCounter > 0; ++i, --chunkCounter) {\n        builder.push(acc(i));\n      }\n      if (i < data.length) { // need another round\n        return ANOTHER_ROUND;\n      }\n      // done\n      return {\n        done: true,\n        value: build ? build(builder.build()) : <R><any>builder.build()\n      };\n    };\n\n    let o = 0;\n    const orders = order instanceof MultiIndices ? order.indices : [order];\n\n    const nextOrder = (currentChunkSize: number = CHUNK_SIZE) => {\n      let chunkCounter = currentChunkSize;\n\n      while (o < orders.length) {\n        const actOrder = orders[o]!;\n        for (; i < actOrder.length && chunkCounter > 0; ++i, --chunkCounter) {\n          builder.push(acc(actOrder[i]));\n        }\n        if (i < actOrder.length) { // need another round\n          return ANOTHER_ROUND;\n        }\n        // done with this order\n        o++;\n        i = 0;\n      }\n      return {\n        done: true,\n        value: build ? build(builder.build()) : <R><any>builder.build()\n      };\n    };\n    return {next: order == null ? nextData : nextOrder};\n  }\n\n  private builderForEach<T, BR, B extends {pushAll: (v: IForEachAble<T>) => void, build: () => BR}, R = BR>(builder: B, order: IndicesArray | null | MultiIndices, acc: (dataIndex: number) => IForEachAble<T>, build?: (r: BR) => R): Iterator<R | null> {\n    return this.builder({\n      push: builder.pushAll,\n      build: builder.build\n    }, order, acc, build);\n  }\n\n  protected boxplotBuilder<R = IAdvancedBoxPlotData>(order: IndicesArray | null | MultiIndices, col: INumberColumn, raw?: boolean, build?: (stat: IAdvancedBoxPlotData) => R) {\n    const b = boxplotBuilder();\n    return this.numberStatsBuilder(b, order, col, raw, build);\n  }\n\n  protected normalizedStatsBuilder<R = IStatistics>(order: IndicesArray | null | MultiIndices, col: INumberColumn, numberOfBins: number, raw?: boolean, build?: (stat: IStatistics) => R) {\n    const b = normalizedStatsBuilder(numberOfBins);\n    return this.numberStatsBuilder(b, order, col, raw, build);\n  }\n\n  private numberStatsBuilder<R, B extends IBuilder<number, BR>, BR>(b: B, order: IndicesArray | null | MultiIndices, col: INumberColumn, raw?: boolean, build?: (stat: BR) => R) {\n    if (col instanceof NumberColumn || col instanceof OrdinalColumn || col instanceof ImpositionCompositeColumn) {\n      const key = raw ? `${col.id}:r` : col.id;\n      const dacc: (i: number) => number = raw ? (i) => col.getRawNumber(this.data[i]) : (i) => col.getNumber(this.data[i]);\n\n      if (order == null && !this.valueCacheData.has(key)) {\n        // build and valueCache\n        const vs = new Float32Array(this.data.length);\n        let i = 0;\n        return this.builder({\n          push: (v) => {\n            b.push(v);\n            vs[i++] = v;\n          },\n          build: () => {\n            this.setValueCacheData(key, vs);\n            return b.build();\n          }\n        }, null, dacc, build);\n      }\n\n      const cache = this.valueCacheData.get(key);\n      const acc: (i: number) => number = cache ? (i) => cache[i] : dacc;\n      return this.builder(b, order, acc, build);\n    }\n    const acc: (i: number) => IForEachAble<number> = raw ? (i) => col.iterRawNumber(this.data[i]) : (i) => col.iterNumber(this.data[i]);\n    return this.builderForEach(b, order, acc, build);\n  }\n\n  protected dateStatsBuilder<R = IDateStatistics>(order: IndicesArray | null | MultiIndices, col: IDateColumn, template?: IDateStatistics, build?: (stat: IDateStatistics) => R) {\n    const b = dateStatsBuilder(template);\n    if (col instanceof DateColumn) {\n      if (order == null) {\n        // build and valueCache\n        const vs = dateValueCacheBuilder(this.data.length);\n        return this.builder({\n          push: (v) => {\n            b.push(v);\n            vs.push(v);\n          },\n          build: () => {\n            this.setValueCacheData(col.id, vs.cache);\n            return b.build();\n          }\n        }, null, (i: number) => col.getDate(this.data[i]), build);\n      }\n      const cache = this.valueCacheData.get(col.id);\n      const acc: (i: number) => Date | null = cache ? (i) => dateValueCache2Value(cache[i]) : (i) => col.getDate(this.data[i]);\n      return this.builder(b, order, acc, build);\n    }\n    return this.builderForEach(b, order, (i: number) => col.iterDate(this.data[i]), build);\n  }\n\n  protected categoricalStatsBuilder<R = ICategoricalStatistics>(order: IndicesArray | null | MultiIndices, col: ICategoricalLikeColumn, build?: (stat: ICategoricalStatistics) => R) {\n    const b = categoricalStatsBuilder(col.categories);\n    if (col instanceof CategoricalColumn || col instanceof OrdinalColumn) {\n      if (order == null) {\n        // build and valueCache\n        const vs = categoricalValueCacheBuilder(this.data.length, col.categories);\n        return this.builder({\n          push: (v) => {\n            b.push(v);\n            vs.push(v);\n          },\n          build: () => {\n            this.setValueCacheData(col.id, vs.cache);\n            return b.build();\n          }\n        }, null, (i: number) => col.getCategory(this.data[i]), build);\n      }\n      const cache = this.valueCacheData.get(col.id);\n      const acc: (i: number) => ICategory | null = cache ? (i) => categoricalValueCache2Value(cache[i], col.categories) : (i) => col.getCategory(this.data[i]);\n      return this.builder(b, order, acc, build);\n    }\n    return this.builderForEach(b, order, (i: number) => col.iterCategory(this.data[i]), build);\n  }\n\n  dirtyColumn(col: Column, type: 'data' | 'summary' | 'group') {\n    if (type !== 'data') {\n      return;\n    }\n    this.valueCacheData.delete(col.id);\n    this.valueCacheData.delete(`${col.id}:r`);\n  }\n\n  protected setValueCacheData(key: string, value: Float32Array | UIntTypedArray | Int32Array | Float64Array | null) {\n    if (value == null) {\n      this.valueCacheData.delete(key);\n    } else {\n      this.valueCacheData.set(key, value);\n    }\n  }\n\n  valueCache(col: Column) {\n    const v = this.valueCacheData.get(col.id);\n    if (!v) {\n      return undefined;\n    }\n    if (col instanceof DateColumn) {\n      return (dataIndex: number) => dateValueCache2Value(v[dataIndex]);\n    }\n    if (col instanceof CategoricalColumn || col instanceof OrdinalColumn) {\n      return (dataIndex: number) => categoricalValueCache2Value(v[dataIndex], col.categories);\n    }\n    return (dataIndex: number) => v[dataIndex];\n  }\n}\n","/**\n * number of bins before switching to dense mode\n * @internal\n */\nexport const DENSE_HISTOGRAM = 19;\n/**\n * minimal witdh of a column to show the label in the header\n * @internal\n */\nexport const MIN_LABEL_WIDTH = 30;\n/**\n * number of milliseconds to wait before a hovered canvas row will be replaced with a DOM one\n * @type {number}\n * @internal\n */\nexport const HOVER_DELAY_SHOW_DETAIL = 500;\n\nexport const GUESSED_ROW_HEIGHT = 18;\nexport const GUESSES_GROUP_HEIGHT = 40;\n\nexport const NUM_OF_EXAMPLE_ROWS = 5;\n","import Column, {IDataRow, Ranking, IndicesArray, IGroup, IOrderedGroup, INumberColumn, IDateColumn, ICategoricalLikeColumn, ICompareValue} from '../model';\nimport {ARenderTasks, IRenderTaskExecutor, taskNow} from './tasks';\nimport {ISequence, toIndexArray, sortComplex, getNumberOfBins} from '../internal';\nimport {CompareLookup} from './sort';\nimport {NUM_OF_EXAMPLE_ROWS} from '../constants';\nimport {IRenderTask} from '..';\n\n/**\n * @internal\n */\nexport function sortDirect(indices: IndicesArray, maxDataIndex: number, lookups?: CompareLookup) {\n  const order = toIndexArray(indices, maxDataIndex);\n  if (lookups) {\n    sortComplex(order, lookups.sortOrders);\n  }\n  return order;\n}\n\n/**\n * @internal\n */\nexport class DirectRenderTasks extends ARenderTasks implements IRenderTaskExecutor {\n\n  protected readonly cache = new Map<string, any>();\n\n  setData(data: IDataRow[]) {\n    this.data = data;\n    this.cache.clear();\n    this.valueCacheData.clear();\n  }\n\n\n  dirtyColumn(col: Column, type: 'data' | 'summary' | 'group') {\n    super.dirtyColumn(col, type);\n\n    if (type === 'group') {\n      return; // not cached\n    }\n    this.cache.delete(`${col.id}:summary`);\n    this.cache.delete(`${col.id}:summary:raw`);\n    this.cache.delete(`${col.id}:summary:b`);\n    this.cache.delete(`${col.id}:summary:braw`);\n\n    if (type === 'summary') {\n      return;\n    }\n    this.cache.delete(`${col.id}:data`);\n    this.cache.delete(`${col.id}:data:raw`);\n    this.cache.delete(`${col.id}:data:b`);\n    this.cache.delete(`${col.id}:data:braw`);\n  }\n\n  dirtyRanking(ranking: Ranking, type: 'data' | 'summary' | 'group') {\n    for (const col of ranking.flatColumns) {\n      this.dirtyColumn(col, type);\n    }\n  }\n\n  preCompute() {\n    // dummy\n  }\n\n  preComputeData() {\n    // dummy\n  }\n\n  preComputeCol() {\n    // dummy\n  }\n\n  copyData2Summary() {\n    // dummy\n  }\n\n  copyCache(col: Column, from: Column) {\n    const fromPrefix = `${from.id}:`;\n\n    for (const key of Array.from(this.cache.keys()).sort()) {\n      if (!key.startsWith(fromPrefix)) {\n        continue;\n      }\n      const tkey = `${col.id}:${key.slice(fromPrefix.length)}`;\n      this.cache.set(tkey, this.cache.get(key)!);\n    }\n  }\n\n  sort(_ranking: Ranking, _group: IGroup, indices: IndicesArray, _singleCall: boolean, maxDataIndex: number, lookups?: CompareLookup) {\n    return Promise.resolve(sortDirect(indices, maxDataIndex, lookups));\n  }\n\n  groupCompare(ranking: Ranking, group: IGroup, rows: IndicesArray): IRenderTask<ICompareValue[]> {\n    const rg = ranking.getGroupSortCriteria();\n    if (rg.length === 0) {\n      return taskNow([group.name.toLowerCase()]);\n    }\n    const o = this.byOrder(rows);\n    const vs: ICompareValue[] = [];\n    for (const s of rg) {\n      const r = s.col.toCompareGroupValue(o, group);\n      if (Array.isArray(r)) {\n        vs.push(...r);\n      } else {\n        vs.push(r);\n      }\n    }\n    vs.push(group.name.toLowerCase());\n    return taskNow(vs);\n  }\n\n  groupRows<T>(_col: Column, group: IOrderedGroup, _key: string, compute: (rows: ISequence<IDataRow>) => T): IRenderTask<T> {\n    return taskNow(compute(this.byOrder(group.order)));\n  }\n\n  groupExampleRows<T>(_col: Column, group: IOrderedGroup, _key: string, compute: (rows: ISequence<IDataRow>) => T): IRenderTask<T> {\n    return taskNow(compute(this.byOrder(group.order.slice(0, NUM_OF_EXAMPLE_ROWS))));\n  }\n\n  groupBoxPlotStats(col: Column & INumberColumn, group: IOrderedGroup, raw?: boolean) {\n    const {summary, data} = this.summaryBoxPlotStatsD(col, raw);\n    return taskNow({group: this.boxplotBuilder(group.order, col, raw).next(Infinity).value!, summary, data});\n  }\n\n  groupNumberStats(col: Column & INumberColumn, group: IOrderedGroup, raw?: boolean) {\n    const {summary, data} = this.summaryNumberStatsD(col, raw);\n    return taskNow({group: this.normalizedStatsBuilder(group.order, col, summary.hist.length, raw).next(Infinity).value!, summary, data});\n  }\n\n  groupCategoricalStats(col: Column & ICategoricalLikeColumn, group: IOrderedGroup) {\n    const {summary, data} = this.summaryCategoricalStatsD(col);\n    return taskNow({group: this.categoricalStatsBuilder(group.order, col).next(Infinity).value!, summary, data});\n  }\n\n  groupDateStats(col: Column & IDateColumn, group: IOrderedGroup) {\n    const {summary, data} = this.summaryDateStatsD(col);\n    return taskNow({group: this.dateStatsBuilder(group.order, col, summary).next(Infinity).value!, summary, data});\n  }\n\n  summaryBoxPlotStats(col: Column & INumberColumn, raw?: boolean) {\n    return taskNow(this.summaryBoxPlotStatsD(col, raw));\n  }\n\n  summaryNumberStats(col: Column & INumberColumn, raw?: boolean) {\n    return taskNow(this.summaryNumberStatsD(col, raw));\n  }\n\n  summaryCategoricalStats(col: Column & ICategoricalLikeColumn) {\n    return taskNow(this.summaryCategoricalStatsD(col));\n  }\n\n  summaryDateStats(col: Column & IDateColumn) {\n    return taskNow(this.summaryDateStatsD(col));\n  }\n\n  private summaryNumberStatsD(col: Column & INumberColumn, raw?: boolean) {\n    return this.cached('summary', col, () => {\n      const ranking = col.findMyRanker()!.getOrder();\n      const data = this.dataNumberStats(col, raw);\n      return {summary: this.normalizedStatsBuilder(ranking, col, data.hist.length, raw).next(Infinity).value!, data};\n    }, raw ? ':raw' : '', col.findMyRanker()!.getOrderLength() === 0);\n  }\n\n  private summaryBoxPlotStatsD(col: Column & INumberColumn, raw?: boolean) {\n    return this.cached('summary', col, () => {\n      const ranking = col.findMyRanker()!.getOrder();\n      const data = this.dataBoxPlotStats(col, raw);\n      return {summary: this.boxplotBuilder(ranking, col, raw).next(Infinity).value!, data};\n    }, raw ? ':braw' : ':b' , col.findMyRanker()!.getOrderLength() === 0);\n  }\n\n  private summaryCategoricalStatsD(col: Column & ICategoricalLikeColumn) {\n    return this.cached('summary', col, () => {\n      const ranking = col.findMyRanker()!.getOrder();\n      const data = this.dataCategoricalStats(col);\n      return {summary: this.categoricalStatsBuilder(ranking, col).next(Infinity).value!, data};\n    }, '', col.findMyRanker()!.getOrderLength() === 0);\n  }\n\n  private summaryDateStatsD(col: Column & IDateColumn) {\n    return this.cached('summary', col, () => {\n      const ranking = col.findMyRanker()!.getOrder();\n      const data = this.dataDateStats(col);\n      return {summary: this.dateStatsBuilder(ranking, col, data).next(Infinity).value!, data};\n    }, '', col.findMyRanker()!.getOrderLength() === 0);\n  }\n\n  private cached<T>(prefix: string, col: Column, creator: () => T, suffix: string = '', dontCache = false): T {\n    const key = `${col.id}:${prefix}${suffix}`;\n    if (this.cache.has(key)) {\n      return this.cache.get(key)!;\n    }\n    const s = creator();\n    if (!dontCache) {\n      this.cache.set(key, s);\n    }\n    return s;\n  }\n\n  dataBoxPlotStats(col: Column & INumberColumn, raw?: boolean) {\n    return this.cached('data', col, () => this.boxplotBuilder(null, col, raw).next(Infinity).value!, raw ? ':braw' : ':b');\n  }\n\n  dataNumberStats(col: Column & INumberColumn, raw?: boolean) {\n    return this.cached('data', col, () => this.normalizedStatsBuilder(null, col, getNumberOfBins(this.data.length), raw).next(Infinity).value!, raw ? ':raw' : '');\n  }\n\n  dataCategoricalStats(col: Column & ICategoricalLikeColumn) {\n    return this.cached('data', col, () => this.categoricalStatsBuilder(null, col).next(Infinity).value!);\n  }\n\n  dataDateStats(col: Column & IDateColumn) {\n    return this.cached('data', col, () => this.dateStatsBuilder(null, col).next(Infinity).value!);\n  }\n\n  terminate() {\n    this.cache.clear();\n  }\n}\n\n\n","import Column from './Column';\nimport {IDataRow, IColumnDesc} from './interfaces';\n\n\nexport interface IArrayDesc {\n  dataLength?: number;\n  labels?: string[];\n}\n\nexport interface IKeyValue<T> {\n  key: string;\n  value: T;\n}\n\nexport interface IMapColumn<T> extends Column {\n  getMap(row: IDataRow): IKeyValue<T>[];\n\n  getMapLabel(row: IDataRow): IKeyValue<string>[];\n}\n\nexport function isMapColumn(col: Column): col is IMapColumn<any>;\nexport function isMapColumn(col: IColumnDesc): boolean;\nexport function isMapColumn(col: Column | IColumnDesc) {\n  return (col instanceof Column && typeof (<IMapColumn<any>>col).getMap === 'function' && typeof (<IMapColumn<any>>col).getMapLabel === 'function') || (!(col instanceof Column) && (<IColumnDesc>col).type.endsWith('Map'));\n}\n\nexport interface IArrayColumn<T> extends IMapColumn<T> {\n  readonly labels: string[];\n  readonly dataLength: number | null;\n\n  getLabels(row: IDataRow): string[];\n\n  getValues(row: IDataRow): T[];\n}\n\nexport function isArrayColumn(col: Column): col is IArrayColumn<any>;\nexport function isArrayColumn(col: IColumnDesc): col is IArrayDesc & IColumnDesc;\nexport function isArrayColumn(col: Column | IColumnDesc) {\n  return (col instanceof Column && typeof (<IArrayColumn<any>>col).getLabels === 'function' && typeof (<IArrayColumn<any>>col).getValues === 'function' && isMapColumn(col) || (!(col instanceof Column) && (<IColumnDesc>col).type.endsWith('s') && (<IColumnDesc>col).type !== 'actions'));\n}\n","import {IForEachAble} from '../internal';\nimport Column from './Column';\nimport {IArrayColumn, isArrayColumn} from './IArrayColumn';\nimport {IValueColumnDesc, IColumnDesc, IDataRow, ITypedDump} from './interfaces';\n\nexport interface ICategoricalDesc {\n  categories: (string | Partial<ICategory>)[];\n}\n\nexport declare type ICategoricalColumnDesc = IValueColumnDesc<string> & ICategoricalDesc;\n\nexport interface ICategoricalColorMappingFunction {\n  apply(v: ICategory): string;\n\n  toJSON(): ITypedDump | null;\n\n  clone(): ICategoricalColorMappingFunction;\n\n  eq(other: ICategoricalColorMappingFunction): boolean;\n}\n\nexport interface ICategoricalColorMappingFunctionConstructor {\n  new(dump: ITypedDump): ICategoricalColorMappingFunction;\n}\n\nexport interface ICategoricalLikeColumn extends Column {\n  readonly categories: ICategory[];\n\n  getColorMapping(): ICategoricalColorMappingFunction;\n  setColorMapping(mapping: ICategoricalColorMappingFunction): void;\n\n  iterCategory(row: IDataRow): IForEachAble<ICategory | null>;\n\n  getCategories(row: IDataRow): (ICategory | null)[];\n}\n\nexport function isCategoricalLikeColumn(col: Column): col is ICategoricalLikeColumn {\n  return typeof (<ICategoricalLikeColumn>col).categories !== 'undefined' && typeof (<ICategoricalLikeColumn>col).iterCategory === 'function';\n}\n\nexport interface ISetColumn extends IArrayColumn<boolean>, ICategoricalLikeColumn {\n  getSet(row: IDataRow): Set<ICategory>;\n}\n\nexport function isSetColumn(col: Column): col is ISetColumn {\n  return isCategoricalLikeColumn(col) && typeof (<ISetColumn>col).getSet === 'function';\n}\n\nexport interface ICategoricalColumn extends ISetColumn {\n  getCategory(row: IDataRow): ICategory | null;\n}\n\nexport interface ICategory {\n  readonly name: string;\n\n  /**\n   * optional label of this category (the one to render)\n   */\n  readonly label: string;\n  /**\n   * category color\n   * @default next in d3 color 10 range\n   */\n  readonly color: string;\n\n  value: number;\n}\n/**\n * checks whether the given column or description is a categorical column, i.e. the value is a list of categories\n * @param col\n * @returns {boolean}\n */\nexport function isCategoricalColumn(col: Column): col is ICategoricalColumn;\nexport function isCategoricalColumn(col: IColumnDesc): col is ICategoricalColumnDesc & IColumnDesc;\nexport function isCategoricalColumn(col: Column | IColumnDesc) {\n  return (col instanceof Column && typeof (<ICategoricalColumn>col).getCategory === 'function' || (!(col instanceof Column) && (<IColumnDesc>col).type.match(/(categorical|ordinal|hierarchy)/) != null));\n}\n\nexport declare type ICategoricalsColumn = ICategoricalLikeColumn & IArrayColumn<string | null>;\n\nexport function isCategoricalsColumn(col: Column): col is ICategoricalsColumn {\n  return isCategoricalLikeColumn(col) && isArrayColumn(col) && !isSetColumn(col);\n}\n\n\nexport interface ICategoricalFilter {\n  filter: string[] | string | RegExp;\n  filterMissing: boolean;\n}\n\n\nexport function isCategory(v: any): v is ICategory {\n  return typeof v.name === 'string' && typeof v.label === 'string' && typeof v.color === 'string' && typeof v.value === 'number';\n}\n","import {IForEachAble} from '../internal';\nimport Column from './Column';\nimport {IColumnDesc, IDataRow} from './interfaces';\nimport {INumberFilter} from './INumberColumn';\nimport {IArrayColumn} from './IArrayColumn';\n\nexport interface IDateColumn extends Column {\n  getFormatter(): (v: Date | null) => string;\n  getParser(): (v: string) => Date | null;\n\n  getDate(row: IDataRow): Date | null;\n\n  iterDate(row: IDataRow): IForEachAble<Date | null>;\n\n  getFilter(): IDateFilter;\n  setFilter(value: IDateFilter | null): void;\n}\n\nexport interface IDatesColumn extends IDateColumn, IArrayColumn<Date | null> {\n  getDates(row: IDataRow): (Date | null)[];\n}\n\nexport interface IDateDesc {\n  /**\n   * d3 formatting option\n   * @default %x\n   */\n  dateFormat?: string;\n\n  /**\n   * d3 formation option\n   * @dfeault dateFormat\n   */\n  dateParse?: string;\n}\n\n\n/**\n * checks whether the given column or description is a date column, i.e. the value is a date\n * @param col\n * @returns {boolean}\n */\nexport function isDateColumn(col: Column): col is IDateColumn;\nexport function isDateColumn(col: IColumnDesc): col is IDateDesc & IColumnDesc;\nexport function isDateColumn(col: Column | IColumnDesc) {\n  return (col instanceof Column && typeof (<IDateColumn>col).getDate === 'function' || (!(col instanceof Column) && (<IColumnDesc>col).type.startsWith('date')));\n}\n\nexport function isDatesColumn(col: Column): col is IDatesColumn {\n  return typeof (<IDatesColumn>col).getDates === 'function';\n}\n\nexport declare type IDateFilter = INumberFilter;\n\nexport declare type IDateGranularity = 'century' | 'decade' | 'year' | 'month' | 'week' | 'day_of_week' | 'day_of_month' | 'day_of_year' | 'hour' | 'minute' | 'second';\n\nexport interface IDateGrouper {\n  /**\n   * granuality level for the grouping\n   */\n  granularity: IDateGranularity;\n  /**\n   * whether circular occurrences should be in the same bin\n   * e.g. granularity = month\n   * circular: 01.2018 == 01.2017\n   * not circular: 01.2018 != 01.2017\n   */\n  circular: boolean;\n}\n","import {abortAble, ABORTED} from 'lineupengine';\nimport {getNumberOfBins, IAdvancedBoxPlotData, ICategoricalStatistics, IDateStatistics, ISequence, ISortMessageResponse, IStatistics, lazySeq, toIndexArray, WorkerTaskScheduler, createWorkerBlob} from '../internal';\nimport TaskScheduler, {oneShotIterator} from '../internal/scheduler';\nimport Column, {ICategoricalLikeColumn, ICompareValue, IDataRow, IDateColumn, IGroup, IndicesArray, INumberColumn, IOrderedGroup, isCategoricalLikeColumn, isDateColumn, isNumberColumn, Ranking, UIntTypedArray} from '../model';\nimport {IRenderTask} from '../renderer';\nimport {sortDirect} from './DirectRenderTasks';\nimport {CompareLookup} from './sort';\nimport {ARenderTasks, IRenderTaskExecutor, MultiIndices, taskLater, TaskLater, taskNow, TaskNow} from './tasks';\nimport {NUM_OF_EXAMPLE_ROWS} from '../constants';\n\nexport class ScheduleRenderTasks extends ARenderTasks implements IRenderTaskExecutor {\n\n  private readonly cache = new Map<string, IRenderTask<any>>();\n  private readonly tasks = new TaskScheduler();\n  private readonly workers = new WorkerTaskScheduler(createWorkerBlob());\n\n  setData(data: IDataRow[]) {\n    this.data = data;\n    this.cache.clear();\n    this.tasks.clear();\n    this.valueCacheData.clear();\n    this.workers.deleteRefs();\n  }\n\n  dirtyColumn(col: Column, type: 'data' | 'group' | 'summary') {\n    super.dirtyColumn(col, type);\n    // order designed such that first groups, then summaries, then data is deleted\n\n    for (const key of Array.from(this.cache.keys()).sort()) {\n      // data = all\n      // summary = summary + group\n      // group = group only\n      if ((type === 'data' && key.startsWith(`${col.id}:`) ||\n        (type === 'summary' && key.startsWith(`${col.id}:b:summary:`)) ||\n        (key.startsWith(`${col.id}:a:group`)))) {\n        this.cache.delete(key);\n        this.tasks.abort(key);\n      }\n    }\n\n    if (type !== 'data') {\n      return;\n    }\n\n    this.valueCacheData.delete(col.id);\n    this.workers.deleteRef(col.id);\n  }\n\n  dirtyRanking(ranking: Ranking, type: 'data' | 'group' | 'summary') {\n    const cols = ranking.flatColumns;\n\n    let checker: ((key: string) => boolean)[];\n    switch (type) {\n      case 'group':\n        checker = cols.map((col) => (key: string) => key.startsWith(`${col.id}:a:group`));\n        break;\n      case 'summary':\n        checker = cols.map((col) => (key: string) => key.startsWith(`${col.id}:b:summary`) || key.startsWith(`${col.id}:a:group`));\n        break;\n      case 'data':\n      default:\n        checker = cols.map((col) => (key: string) => key.startsWith(`${col.id}:`));\n        break;\n    }\n    for (const key of Array.from(this.cache.keys()).sort()) {\n      if (checker.some((f) => f(key))) {\n        this.cache.delete(key);\n        this.tasks.abort(key);\n      }\n    }\n    // group compare tasks\n    this.tasks.abortAll((t) => t.id.startsWith(`r${ranking.id}:`));\n\n    // delete remote caches\n    this.workers.deleteRef(ranking.id, true);\n\n    if (type !== 'data') {\n      return;\n    }\n\n    for (const col of cols) {\n      super.dirtyColumn(col, type);\n      this.workers.deleteRef(col.id);\n    }\n  }\n\n  preCompute(ranking: Ranking, groups: {rows: IndicesArray, group: IGroup}[], maxDataIndex: number) {\n    if (groups.length === 0) {\n      return;\n    }\n    const cols = ranking.flatColumns;\n    if (groups.length === 1) {\n      const {group, rows} = groups[0];\n      const multi = new MultiIndices([rows], maxDataIndex);\n      for (const col of cols) {\n        if (isCategoricalLikeColumn(col)) {\n          this.summaryCategoricalStats(col, multi);\n        } else if (isNumberColumn(col)) {\n          this.summaryNumberStats(col, false, multi);\n          this.summaryNumberStats(col, true, multi);\n        } else if (isDateColumn(col)) {\n          this.summaryDateStats(col, multi);\n        } else {\n          continue;\n        }\n        // copy from summary to group and create proper structure\n        this.chainCopy(`${col.id}:a:group:${group.name}`, this.cache.get(`${col.id}:b:summary`)!, (v: {summary: any, data: any}) => ({group: v.summary, summary: v.summary, data: v.data}));\n        if (isNumberColumn(col)) {\n          this.chainCopy(`${col.id}:a:group:${group.name}:raw`, this.cache.get(`${col.id}:b:summary:raw`)!, (v: {summary: any, data: any}) => ({group: v.summary, summary: v.summary, data: v.data}));\n        }\n      }\n      return;\n    }\n\n    const ogroups = groups.map(({rows, group}) => Object.assign({order: rows}, group));\n    const full = new MultiIndices(groups.map((d) => d.rows), maxDataIndex);\n    for (const col of cols) {\n      if (isCategoricalLikeColumn(col)) {\n        this.summaryCategoricalStats(col, full);\n        for (const g of ogroups) {\n          this.groupCategoricalStats(col, g);\n        }\n      } else if (isDateColumn(col)) {\n        this.summaryDateStats(col, full);\n        for (const g of ogroups) {\n          this.groupDateStats(col, g);\n        }\n      } else if (isNumberColumn(col)) {\n        this.summaryNumberStats(col, false, full);\n        this.summaryNumberStats(col, true, full);\n        for (const g of ogroups) {\n          this.groupNumberStats(col, g, false);\n          this.groupNumberStats(col, g, true);\n        }\n      }\n    }\n  }\n\n  preComputeData(ranking: Ranking) {\n    for (const col of ranking.flatColumns) {\n      if (isCategoricalLikeColumn(col)) {\n        this.dataCategoricalStats(col);\n      } else if (isNumberColumn(col)) {\n        this.dataNumberStats(col, false);\n        this.dataNumberStats(col, true);\n      } else if (isDateColumn(col)) {\n        this.dataDateStats(col);\n      }\n    }\n  }\n\n  preComputeCol(col: Column) {\n    const ranking = col.findMyRanker();\n\n    if (isCategoricalLikeColumn(col)) {\n      this.dataCategoricalStats(col);\n      if (!ranking) {\n        return;\n      }\n      this.summaryCategoricalStats(col);\n      for (const group of ranking.getGroups()) {\n        this.groupCategoricalStats(col, group);\n      }\n      return;\n    }\n\n    if (isNumberColumn(col)) {\n      this.dataNumberStats(col, false);\n      this.dataNumberStats(col, true);\n\n      if (!ranking) {\n        return;\n      }\n      this.summaryNumberStats(col, false);\n      this.summaryNumberStats(col, true);\n      for (const group of ranking.getGroups()) {\n        this.groupNumberStats(col, group, false);\n        this.groupNumberStats(col, group, true);\n      }\n      return;\n    }\n\n    if (!isDateColumn(col)) {\n      return;\n    }\n\n    this.dataDateStats(col);\n\n    if (!ranking) {\n      return;\n    }\n    this.summaryDateStats(col);\n    for (const group of ranking.getGroups()) {\n      this.groupDateStats(col, group);\n    }\n  }\n\n  copyData2Summary(ranking: Ranking) {\n    for (const col of ranking.flatColumns) {\n      if (isCategoricalLikeColumn(col)) {\n        this.dataCategoricalStats(col);\n      } else if (isNumberColumn(col)) {\n        this.dataNumberStats(col, false);\n        this.dataNumberStats(col, true);\n      } else if (isDateColumn(col)) {\n        this.dataDateStats(col);\n      } else {\n        continue;\n      }\n      // copy from data to summary and create proper structure\n      this.chainCopy(`${col.id}:b:summary`, this.cache.get(`${col.id}:c:data`)!, (data: any) => ({summary: data, data}));\n      if (isNumberColumn(col)) {\n        this.chainCopy(`${col.id}:b:summary:raw`, this.cache.get(`${col.id}:c:data:raw`)!, (data: any) => ({summary: data, data}));\n      }\n    }\n  }\n\n  copyCache(col: Column, from: Column) {\n    const fromPrefix = `${from.id}:`;\n\n    for (const key of Array.from(this.cache.keys()).sort()) {\n      if (!key.startsWith(fromPrefix)) {\n        continue;\n      }\n      const tkey = `${col.id}:${key.slice(fromPrefix.length)}`;\n      this.chainCopy(tkey, this.cache.get(key)!, (data: any) => data);\n    }\n  }\n\n  groupCompare(ranking: Ranking, group: IGroup, rows: IndicesArray) {\n    return taskLater(this.tasks.push(`r${ranking.id}:${group.name}`, () => {\n      const rg = ranking.getGroupSortCriteria();\n      if (rg.length === 0) {\n        return [group.name.toLowerCase()];\n      }\n      const o = this.byOrder(rows);\n      const vs: ICompareValue[] = [];\n      for (const s of rg) {\n        const cache = this.valueCache(s.col);\n        const r = s.col.toCompareGroupValue(o, group, cache ? lazySeq(rows).map((d) => cache(d)) : undefined);\n        if (Array.isArray(r)) {\n          vs.push(...r);\n        } else {\n          vs.push(r);\n        }\n      }\n      vs.push(group.name.toLowerCase());\n      return vs;\n    }));\n  }\n\n  groupRows<T>(col: Column, group: IOrderedGroup, key: string, compute: (rows: ISequence<IDataRow>) => T) {\n    return this.cached(`${col.id}:a:group:${group.name}:${key}`, true, oneShotIterator(() => compute(this.byOrder(group.order))));\n  }\n\n  groupExampleRows<T>(_col: Column, group: IOrderedGroup, _key: string, compute: (rows: ISequence<IDataRow>) => T) {\n    return taskNow(compute(this.byOrder(group.order.slice(0, NUM_OF_EXAMPLE_ROWS))));\n  }\n\n  groupBoxPlotStats(col: Column & INumberColumn, group: IOrderedGroup, raw?: boolean) {\n    return this.chain(`${col.id}:a:group:${group.name}${raw ? ':braw' : ':b'}`, this.summaryBoxPlotStats(col, raw), ({summary, data}) => {\n      const ranking = col.findMyRanker()!;\n      const key = raw ? `${col.id}:r` : col.id;\n      if (this.valueCacheData.has(key) && group.order.length > 0) {\n        // web worker version\n        return () => this.workers.pushStats('boxplotStats', {}, key, <Float32Array>this.valueCacheData.get(key), `${ranking.id}:${group.name}`, group.order)\n          .then((group) => ({group, summary, data}));\n      }\n      return this.boxplotBuilder(group.order, col, raw, (group) => ({group, summary, data}));\n    });\n  }\n\n  groupNumberStats(col: Column & INumberColumn, group: IOrderedGroup, raw?: boolean) {\n    return this.chain(`${col.id}:a:group:${group.name}${raw ? ':raw' : ''}`, this.summaryNumberStats(col, raw), ({summary, data}) => {\n      const ranking = col.findMyRanker()!;\n      const key = raw ? `${col.id}:r` : col.id;\n      if (this.valueCacheData.has(key) && group.order.length > 0) {\n        // web worker version\n        return () => this.workers.pushStats('numberStats', {numberOfBins: summary.hist.length}, key, <Float32Array>this.valueCacheData.get(key), `${ranking.id}:${group.name}`, group.order)\n          .then((group) => ({group, summary, data}));\n      }\n      return this.normalizedStatsBuilder(group.order, col, summary.hist.length, raw, (group) => ({group, summary, data}));\n    });\n  }\n\n  groupCategoricalStats(col: Column & ICategoricalLikeColumn, group: IOrderedGroup) {\n    return this.chain(`${col.id}:a:group:${group.name}`, this.summaryCategoricalStats(col), ({summary, data}) => {\n      const ranking = col.findMyRanker()!;\n      if (this.valueCacheData.has(col.id) && group.order.length > 0) {\n        // web worker version\n        return () => this.workers.pushStats('categoricalStats', {categories: col.categories.map((d) => d.name)}, col.id, <UIntTypedArray>this.valueCacheData.get(col.id), `${ranking.id}:${group.name}`, group.order)\n          .then((group) => ({group, summary, data}));\n      }\n      return this.categoricalStatsBuilder(group.order, col, (group) => ({group, summary, data}));\n    });\n  }\n\n  groupDateStats(col: Column & IDateColumn, group: IOrderedGroup) {\n    const key = `${col.id}:a:group:${group.name}`;\n    return this.chain(key, this.summaryDateStats(col), ({summary, data}) => {\n      const ranking = col.findMyRanker()!;\n      if (this.valueCacheData.has(col.id) && group.order.length > 0) {\n        // web worker version\n        return () => this.workers.pushStats('dateStats', {template: summary}, col.id, <Float64Array>this.valueCacheData.get(col.id), `${ranking.id}:${group.name}`, group.order)\n          .then((group) => ({group, summary, data}));\n      }\n      return this.dateStatsBuilder(group.order, col, summary, (group) => ({group, summary, data}));\n    });\n  }\n\n  summaryBoxPlotStats(col: Column & INumberColumn, raw?: boolean, order?: MultiIndices) {\n    return this.chain(`${col.id}:b:summary${raw ? ':braw' : ':b'}`, this.dataBoxPlotStats(col, raw), (data) => {\n      const ranking = col.findMyRanker()!;\n      const key = raw ? `${col.id}:r` : col.id;\n      if (this.valueCacheData.has(key)) {\n        // web worker version\n        return () => this.workers.pushStats('boxplotStats', {}, key, <Float32Array>this.valueCacheData.get(key), ranking.id, order ? order.joined : ranking.getOrder())\n          .then((summary) => ({summary, data}));\n      }\n      return this.boxplotBuilder(order ? order : ranking.getOrder(), col, raw, (summary) => ({summary, data}));\n    });\n  }\n\n  summaryNumberStats(col: Column & INumberColumn, raw?: boolean, order?: MultiIndices) {\n    return this.chain(`${col.id}:b:summary${raw ? ':raw' : ''}`, this.dataNumberStats(col, raw), (data) => {\n      const ranking = col.findMyRanker()!;\n      const key = raw ? `${col.id}:r` : col.id;\n      if (this.valueCacheData.has(key)) {\n        // web worker version\n        return () => this.workers.pushStats('numberStats', {numberOfBins: data.hist.length}, key, <Float32Array>this.valueCacheData.get(key), ranking.id, order ? order.joined : ranking.getOrder())\n          .then((summary) => ({summary, data}));\n      }\n      return this.normalizedStatsBuilder(order ? order : ranking.getOrder(), col, data.hist.length, raw, (summary) => ({summary, data}));\n    });\n  }\n\n  summaryCategoricalStats(col: Column & ICategoricalLikeColumn, order?: MultiIndices) {\n    return this.chain(`${col.id}:b:summary`, this.dataCategoricalStats(col), (data) => {\n      const ranking = col.findMyRanker()!;\n      if (this.valueCacheData.has(col.id)) {\n        // web worker version\n        return () => this.workers.pushStats('categoricalStats', {categories: col.categories.map((d) => d.name)}, col.id, <UIntTypedArray>this.valueCacheData.get(col.id), ranking.id, order ? order.joined : ranking.getOrder())\n          .then((summary) => ({summary, data}));\n      }\n      return this.categoricalStatsBuilder(order ? order : ranking.getOrder(), col, (summary) => ({summary, data}));\n    });\n  }\n\n  summaryDateStats(col: Column & IDateColumn, order?: MultiIndices) {\n    return this.chain(`${col.id}:b:summary`, this.dataDateStats(col), (data) => {\n      const ranking = col.findMyRanker()!;\n      if (this.valueCacheData.has(col.id)) {\n        // web worker version\n        return () => this.workers.pushStats('dateStats', {template: data}, col.id, <Float64Array>this.valueCacheData.get(col.id), ranking.id, order ? order.joined : ranking.getOrder())\n          .then((summary) => ({summary, data}));\n      }\n      return this.dateStatsBuilder(order ? order : ranking.getOrder(), col, data, (summary) => ({summary, data}));\n    });\n  }\n\n  private cached<T>(key: string, canAbort: boolean, it: Iterator<T | null> | (() => Promise<T>)): IRenderTask<T> {\n    const dontCache = this.data.length === 0;\n\n    if (this.isValidCacheEntry(key) && !dontCache) {\n      return this.cache.get(key)!;\n    }\n\n    const task = typeof it === 'function' ? abortAble(it()) : this.tasks.pushMulti(key, it, canAbort);\n    const s = taskLater(task);\n    if (!dontCache) {\n      this.cache.set(key, s);\n    }\n    task.then((r) => {\n      if (this.cache.get(key) !== s) {\n        return;\n      }\n      if (typeof r === 'symbol') {\n        this.cache.delete(key);\n      } else {\n        this.cache.set(key, taskNow(r));\n      }\n    });\n    return s;\n  }\n\n  private chain<T, U>(key: string, task: IRenderTask<T>, creator: (data: T) => Iterator<U | null> | (() => Promise<U>)): IRenderTask<U> {\n    if (this.isValidCacheEntry(key)) {\n      return this.cache.get(key)!;\n    }\n    if (task instanceof TaskNow) {\n      if (typeof task.v === 'symbol') {\n        // aborted\n        return taskNow(ABORTED);\n      }\n      return this.cached(key, true, creator(task.v));\n    }\n\n    const v = (<TaskLater<T>>task).v;\n    const subTask = v.then((data) => {\n      if (typeof data === 'symbol') {\n        return ABORTED;\n      }\n      const created = creator(data);\n      if (typeof created === 'function') {\n        // promise\n        return created();\n      }\n      return this.tasks.pushMulti(key, created);\n    });\n    const s = taskLater(subTask);\n    this.cache.set(key, s);\n    subTask.then((r) => {\n      if (this.cache.get(key) !== s) {\n        return;\n      }\n      if (typeof r === 'symbol') {\n        this.cache.delete(key);\n      } else {\n        this.cache.set(key, taskNow(r));\n      }\n    });\n    return s;\n  }\n\n  private isValidCacheEntry(key: string) {\n    if (!this.cache.has(key)) {\n      return false;\n    }\n    const v = this.cache.get(key);\n    // not an aborted task\n    return !((v instanceof TaskNow) && typeof v.v === 'symbol') && !(v instanceof TaskLater && v.v.isAborted());\n  }\n\n  private chainCopy<T, U>(key: string, task: IRenderTask<T>, creator: (data: T) => U): IRenderTask<U> {\n    if (this.isValidCacheEntry(key)) {\n      return this.cache.get(key)!;\n    }\n    if (task instanceof TaskNow) {\n      if (typeof task.v === 'symbol') {\n        // aborted\n        return taskNow(ABORTED);\n      }\n      const subTask = taskNow(creator(task.v));\n      this.cache.set(key, subTask);\n      return subTask;\n    }\n\n    const v = (<TaskLater<T>>task).v;\n    const subTask = v.then((data) => {\n      if (typeof data === 'symbol') {\n        return ABORTED;\n      }\n      return creator(data);\n    });\n    const s = taskLater(subTask);\n    this.cache.set(key, s);\n    subTask.then((r) => {\n      if (this.cache.get(key) !== s) {\n        return;\n      }\n      if (typeof r === 'symbol') {\n        this.cache.delete(key);\n      } else {\n        this.cache.set(key, taskNow(r));\n      }\n    });\n    return s;\n  }\n\n  dataBoxPlotStats(col: Column & INumberColumn, raw?: boolean) {\n    const key = `${col.id}:c:data${raw ? ':braw' : ':b'}`;\n    const valueCacheKey = raw ? `${col.id}:r` : col.id;\n    if (this.valueCacheData.has(valueCacheKey) && this.data.length > 0) {\n      // use webworker\n      return this.cached(key, false, () => this.workers.pushStats('boxplotStats', {}, valueCacheKey, <Float32Array>this.valueCacheData.get(valueCacheKey)!));\n    }\n    return this.cached(key, false, this.boxplotBuilder<IAdvancedBoxPlotData>(null, col, raw));\n  }\n\n  dataNumberStats(col: Column & INumberColumn, raw?: boolean) {\n    return this.cached(`${col.id}:c:data${raw ? ':raw' : ''}`, false, this.normalizedStatsBuilder<IStatistics>(null, col, getNumberOfBins(this.data.length), raw));\n  }\n\n  dataCategoricalStats(col: Column & ICategoricalLikeColumn) {\n    return this.cached(`${col.id}:c:data`, false, this.categoricalStatsBuilder<ICategoricalStatistics>(null, col));\n  }\n\n  dataDateStats(col: Column & IDateColumn) {\n    return this.cached(`${col.id}:c:data`, false, this.dateStatsBuilder<IDateStatistics>(null, col));\n  }\n\n  sort(ranking: Ranking, group: IGroup, indices: IndicesArray, singleCall: boolean, maxDataIndex: number, lookups?: CompareLookup) {\n    if (!lookups || indices.length < 1000) {\n      // no thread needed\n      const order = sortDirect(indices, maxDataIndex, lookups);\n      return Promise.resolve(order);\n    }\n\n    const indexArray = toIndexArray(indices, maxDataIndex);\n    const toTransfer = [indexArray.buffer];\n\n    if (singleCall) {\n      // can transfer otherwise need to copy\n      toTransfer.push(...lookups.transferAbles);\n    }\n\n    return this.workers.push('sort', {\n      ref: `${ranking.id}:${group.name}`,\n      indices: indexArray,\n      sortOrders: lookups.sortOrders\n    }, toTransfer, (r: ISortMessageResponse) => r.order);\n  }\n\n  terminate() {\n    this.workers.terminate();\n    this.cache.clear();\n    this.valueCacheData.clear();\n  }\n}\n","import {IAggregationStrategy} from './interfaces';\nimport {IOrderedGroup, IGroup, IGroupParent, IGroupData, IGroupItem, isGroup} from '../model';\nimport {createIndexArray} from '../internal';\n\nexport function isAlwaysShowingGroupStrategy(strategy: IAggregationStrategy) {\n  return strategy === 'group+item' || strategy === 'group+item+top' || strategy === 'group+top+item';\n}\n\nexport function hasTopNStrategy(strategy: IAggregationStrategy) {\n  return strategy === 'group+item+top' || strategy === 'group+top+item';\n}\n\nexport declare type IGroupMeta = 'first' | 'last' | 'first last' | null;\n\nexport function toItemMeta(relativeIndex: number, group: IOrderedGroup, topN: number): IGroupMeta {\n  if (relativeIndex === 0) {\n    return group.order.length === 1 ? 'first last' : 'first';\n  }\n  if ((relativeIndex === (group.order.length - 1)) || (topN > 0 && relativeIndex === (topN - 1))) {\n    return 'last';\n  }\n  return null;\n}\n\nexport function groupParents(group: IGroup, meta: IGroupMeta) {\n  const parents: {group: IGroup, meta: IGroupMeta}[] = [{group, meta}];\n\n  let prev = group;\n  let prevMeta = meta;\n  let parent: IGroupParent | undefined | null = group.parent;\n\n  while (parent) {\n    if (parent.subGroups.length === 1 && (prevMeta === 'first last')) {\n      meta = 'first last';\n    } else if (parent.subGroups[0] === prev && (prevMeta === 'first last' || prevMeta === 'first')) {\n      meta = 'first';\n    } else if (parent.subGroups[parent.subGroups.length - 1] === prev && (prevMeta === 'last' || prevMeta === 'first last')) {\n      meta = 'last';\n    } else {\n      meta = null;\n    }\n    parents.unshift({group: parent, meta});\n\n    prev = parent;\n    prevMeta = meta;\n    parent = parent.parent;\n  }\n  return parents;\n}\n\nexport interface ITopNGetter {\n  (item: IGroup): number;\n}\n\n/**\n * number of group levels this items ends\n */\nexport function groupEndLevel(item: IGroupData | IGroupItem, topNGetter: ITopNGetter) {\n  const group: IGroup = isGroup(item) ? item : item.group;\n  const last = isGroup(item) ? 'first last' : toItemMeta(item.relativeIndex, item.group, topNGetter(group));\n  if (last !== 'last' && last !== 'first last') {\n    return 0;\n  }\n\n  let prev = group;\n  let parent: IGroupParent | undefined | null = group.parent;\n  let i = 1;\n\n  while (parent) {\n    if (!(parent.subGroups.length === 1 || (parent.subGroups[parent.subGroups.length - 1] === prev))) {\n      // not last of group - end\n      return i;\n    }\n    ++i;\n    prev = parent;\n    parent = parent.parent;\n  }\n\n  return i;\n}\n\nexport function isSummaryGroup(group: IGroup, strategy: IAggregationStrategy, topNGetter: ITopNGetter) {\n  const topN = topNGetter(group);\n  return isAlwaysShowingGroupStrategy(strategy) && topN !== 0;\n}\n\nexport function toRowMeta(item: IGroupData | IGroupItem, strategy: IAggregationStrategy, topNGetter: ITopNGetter): string | null {\n  if (isGroup(item)) {\n    if (isSummaryGroup(item, strategy, topNGetter)) {\n      return 'first';\n    }\n    const level = groupEndLevel(item, topNGetter);\n    if (level === 0) {\n      return 'first';\n    }\n    return `first last${level === 1 ? '' : level - 1}`;\n  }\n\n  const last =  toItemMeta(item.relativeIndex, item.group, topNGetter(item.group));\n  if (last == null) {\n    return null;\n  }\n  const level = groupEndLevel(item, topNGetter);\n  if (level === 0) {\n    return null;\n  }\n  return `last${level === 1 ? '' : level - 1}`;\n}\n\nexport function index2pos(groups: IOrderedGroup[], maxDataIndex: number) {\n  const total = groups.reduce((a, b) => a + b.order.length, 1);\n  const index2pos = createIndexArray(maxDataIndex + 1, total);\n  let offset = 1;\n  for (const g of groups) {\n    // tslint:disable-next-line\n    for (let i = 0; i < g.order.length; i++ , offset++) {\n      index2pos[g.order[i]] = offset;\n    }\n  }\n\n  return {groups, index2pos};\n}\n","import {createIndexArray, sortComplex, ISequence, lazySeq, IEventContext} from '../internal';\nimport {Column, EDirtyReason, Ranking, defaultGroup, IColumnDesc, ICompareValue, IDataRow, IGroup, IndicesArray, INumberColumn, IOrderedGroup, CompositeColumn} from '../model';\nimport ACommonDataProvider from './ACommonDataProvider';\nimport ADataProvider from './ADataProvider';\nimport {IDataProviderOptions} from './interfaces';\nimport {CompareLookup} from './sort';\nimport {IRenderTaskExecutor} from './tasks';\nimport {DirectRenderTasks} from './DirectRenderTasks';\nimport {ScheduleRenderTasks} from './ScheduledTasks';\nimport {joinGroups, mapIndices, duplicateGroup} from '../model/internal';\nimport {index2pos} from './internal';\n\n\nexport interface ILocalDataProviderOptions {\n  /**\n   * whether the filter should be applied to all rankings regardless where they are\n   * default: false\n   */\n  filterGlobally: boolean;\n  /**\n   * jump to search results such that they are visible\n   * default: false\n   */\n  jumpToSearchResult: boolean;\n\n  /**\n   * specify the task executor to use direct = no delay, scheduled = run when idle\n   */\n  taskExecutor: 'direct' | 'scheduled';\n}\n\ninterface ISortHelper {\n  group: IGroup;\n  rows: IndicesArray;\n}\n\n/**\n * a data provider based on an local array\n */\nexport default class LocalDataProvider extends ACommonDataProvider {\n  private readonly ooptions: ILocalDataProviderOptions = {\n    /**\n     * whether the filter should be applied to all rankings regardless where they are\n     */\n    filterGlobally: false,\n\n    jumpToSearchResult: false,\n\n    taskExecutor: 'direct'\n  };\n\n  private readonly reorderAll: () => void;\n\n  private _dataRows: IDataRow[];\n  private filter: ((row: IDataRow) => boolean) | null = null;\n  private readonly tasks: IRenderTaskExecutor;\n\n  constructor(private _data: any[], columns: IColumnDesc[] = [], options: Partial<ILocalDataProviderOptions & IDataProviderOptions> = {}) {\n    super(columns, options);\n    Object.assign(this.ooptions, options);\n    this._dataRows = toRows(_data);\n    this.tasks = this.ooptions.taskExecutor === 'direct' ? new DirectRenderTasks() : new ScheduleRenderTasks();\n    this.tasks.setData(this._dataRows);\n\n    const that = this;\n    this.reorderAll = function (this: {source?: Ranking, type: string}) {\n      //fire for all other rankings a dirty order event, too\n      const ranking = this.source;\n      const type = this.type;\n      for (const r of that.getRankings()) {\n        if (r !== ranking) {\n          r.dirtyOrder(type === Ranking.EVENT_FILTER_CHANGED ? [EDirtyReason.FILTER_CHANGED] : [EDirtyReason.UNKNOWN]);\n        }\n      }\n    };\n  }\n\n  /**\n   * set a globally applied filter to all data without changing the data source itself\n   * @param {((row: IDataRow) => boolean) | null} filter\n   */\n  setFilter(filter: ((row: IDataRow) => boolean) | null) {\n    this.filter = filter;\n    this.reorderAll.call({type: Ranking.EVENT_FILTER_CHANGED});\n  }\n\n  getFilter() {\n    return this.filter;\n  }\n\n  getTotalNumberOfRows() {\n    return this.data.length;\n  }\n\n  getTaskExecutor() {\n    return this.tasks;\n  }\n\n  get data() {\n    return this._data;\n  }\n\n  destroy() {\n    super.destroy();\n    this.tasks.terminate();\n  }\n\n  /**\n   * replaces the dataset rows with a new one\n   * @param data\n   */\n  setData(data: any[]) {\n    this._data = data;\n    this._dataRows = toRows(data);\n    this.dataChanged();\n  }\n\n  private dataChanged() {\n    this.tasks.setData(this._dataRows);\n\n    for (const ranking of this.getRankings()) {\n      this.tasks.preComputeData(ranking);\n    }\n\n    this.fire(ADataProvider.EVENT_DATA_CHANGED, this._dataRows);\n    this.reorderAll.call({type: Ranking.EVENT_FILTER_CHANGED});\n\n  }\n\n  clearData() {\n    this.setData([]);\n  }\n\n  /**\n   * append rows to the dataset\n   * @param data\n   */\n  appendData(data: any[]) {\n    for (const d of data) {\n      this._data.push(d);\n      this._dataRows.push({v: d, i: this._dataRows.length});\n    }\n    this.dataChanged();\n  }\n\n  cloneRanking(existing?: Ranking) {\n    const ranking = super.cloneRanking(existing);\n\n    if (this.ooptions.filterGlobally) {\n      ranking.on(`${Ranking.EVENT_FILTER_CHANGED}.reorderAll`, this.reorderAll);\n    }\n\n    this.trackRanking(ranking, existing);\n    return ranking;\n  }\n\n  private trackRanking(ranking: Ranking, existing?: Ranking) {\n\n    const that = this;\n    ranking.on(`${Column.EVENT_DIRTY_CACHES}.cache`, function (this: IEventContext) {\n      let col: any = this.origin;\n      while (col instanceof Column) {\n        // console.log(col.label, 'dirty data');\n        that.tasks.dirtyColumn(col, 'data');\n        that.tasks.preComputeCol(col);\n        col = col.parent;\n      }\n    });\n\n    const cols = ranking.flatColumns;\n    const addKey = `${Ranking.EVENT_ADD_COLUMN}.cache`;\n    const removeKey = `${Ranking.EVENT_REMOVE_COLUMN}.cache`;\n\n    const removeCol = (col: Column) => {\n      this.tasks.dirtyColumn(col, 'data');\n      if (col instanceof CompositeColumn) {\n        col.on(addKey, null);\n        col.on(removeKey, null);\n      }\n    };\n\n    const addCol = (col: Column) => {\n      this.tasks.preComputeCol(col);\n      if (col instanceof CompositeColumn) {\n        col.on(addKey, addCol);\n        col.on(removeKey, removeCol);\n      }\n    };\n\n\n    ranking.on(addKey, addCol);\n    ranking.on(removeKey, removeCol);\n    for (const col of cols) {\n      if (col instanceof CompositeColumn) {\n        col.on(addKey, addCol);\n        col.on(removeKey, removeCol);\n      }\n    }\n\n    if (existing) {\n      const copy = existing.flatColumns;\n      for (let i = 0; i < cols.length; ++i) {\n        this.tasks.copyCache(cols[i], copy[i]);\n      }\n    }\n\n    this.tasks.preComputeData(ranking);\n  }\n\n  cleanUpRanking(ranking: Ranking) {\n    if (this.ooptions.filterGlobally) {\n      ranking.on(`${Ranking.EVENT_FILTER_CHANGED}.reorderAll`, null);\n    }\n\n\n    const cols = ranking.flatColumns;\n    const addKey = `${Ranking.EVENT_ADD_COLUMN}.cache`;\n    const removeKey = `${Ranking.EVENT_REMOVE_COLUMN}.cache`;\n    ranking.on(addKey, null);\n    ranking.on(removeKey, null);\n    for (const col of cols) {\n      if (col instanceof CompositeColumn) {\n        col.on(addKey, null);\n        col.on(removeKey, null);\n      }\n    }\n\n    this.tasks.dirtyRanking(ranking, 'data');\n\n    super.cleanUpRanking(ranking);\n  }\n\n  private resolveFilter(ranking: Ranking) {\n    //do the optional filtering step\n    const filter: (Column | ((d: IDataRow) => boolean))[] = [];\n\n    if (this.ooptions.filterGlobally) {\n      for (const r of this.getRankings()) {\n        if (r.isFiltered()) {\n          filter.push(...r.flatColumns.filter((d) => d.isFiltered()));\n        }\n      }\n    } else if (ranking.isFiltered()) {\n      filter.push(...ranking.flatColumns.filter((d) => d.isFiltered()));\n    }\n\n    if (this.filter) {\n      filter.push(this.filter);\n    }\n    return filter;\n  }\n\n  private noSorting(ranking: Ranking) {\n    // initial no sorting required just index mapping\n    const l = this._data.length;\n    const order = createIndexArray(l, l - 1);\n    const index2pos = order.slice();\n    for (let i = 0; i < l; ++i) {\n      order[i] = i;\n      index2pos[i] = i + 1; // shift since default is 0\n    }\n\n    this.tasks.preCompute(ranking, [{rows: order, group: defaultGroup}], l - 1);\n    return {groups: [Object.assign({order}, defaultGroup)], index2pos};\n  }\n\n  private createSorter(ranking: Ranking, filter: (Column | ((d: IDataRow) => boolean))[], needsFiltering: boolean, needsGrouping: boolean, needsSorting: boolean) {\n    const groups = new Map<string, ISortHelper>();\n    const groupOrder: ISortHelper[] = [];\n    let maxDataIndex = -1;\n\n    const groupCriteria = ranking.getGroupCriteria();\n    const lookups = needsSorting ? new CompareLookup(this._data.length, true, ranking, this.tasks.valueCache.bind(this.tasks)) : undefined;\n\n    const pushGroup = (group: IGroup, r: IDataRow) => {\n      const groupKey = group.name.toLowerCase();\n      if (groups.has(groupKey)) {\n        (<number[]>groups.get(groupKey)!.rows).push(r.i);\n        return;\n      }\n      const s = {group, rows: [r.i]};\n      groups.set(groupKey, s);\n      groupOrder.push(s);\n    };\n\n    const groupCaches = groupCriteria.map((c) => this.tasks.valueCache(c));\n    const filterCaches = filter.map((c) => typeof c === 'function' ? undefined : this.tasks.valueCache(c));\n\n    const toGroup = groupCriteria.length === 1 ?\n      (r: IDataRow) => joinGroups([groupCriteria[0].group(r, groupCaches[0] ? groupCaches[0]!(r.i) : undefined)]) :\n      (r: IDataRow) => joinGroups(groupCriteria.map((c, i) => c.group(r, groupCaches[i] ? groupCaches[i]!(r.i) : undefined)));\n\n    if (needsFiltering) {\n      // filter, group, sort\n      outer: for (const r of this._dataRows) {\n        for (let f = 0; f < filter.length; ++f) {\n          const fc = filter[f];\n          const c = filterCaches[f];\n          if ((typeof fc === 'function' && !fc(r)) || (fc instanceof Column && !fc.filter(r, c ? c(r.i) : undefined))) {\n            continue outer;\n          }\n        }\n        if (maxDataIndex < r.i) {\n          maxDataIndex = r.i;\n        }\n        if (lookups) {\n          lookups.push(r);\n        }\n        pushGroup(toGroup(r), r);\n      }\n\n      // some default sorting\n      groupOrder.sort((a, b) => a.group.name.toLowerCase().localeCompare(b.group.name.toLowerCase()));\n      return {maxDataIndex, lookups, groupOrder};\n    }\n\n    // reuse the existing groups\n\n    for (const before of ranking.getGroups()) {\n      const order = before.order;\n      if (!needsGrouping) {\n        const clone = duplicateGroup(before);\n        // reuse in full\n        groupOrder.push({group: clone, rows: order});\n\n        if (!lookups) {\n          maxDataIndex = (<ReadonlyArray<number>>order).reduce((a, b) => Math.max(a, b), maxDataIndex);\n          continue;\n        }\n        // sort\n        // tslint:disable-next-line:prefer-for-of\n        for (let o = 0; o < order.length; ++o) {\n          const i = order[o];\n          if (maxDataIndex < i) {\n            maxDataIndex = i;\n          }\n          lookups.push(this._dataRows[i]);\n        }\n        continue;\n      }\n\n      // group, [sort]\n      // tslint:disable-next-line:prefer-for-of\n      for (let o = 0; o < order.length; ++o) {\n        const i = order[o];\n        if (maxDataIndex < i) {\n          maxDataIndex = i;\n        }\n        const r = this._dataRows[i];\n        if (lookups) {\n          lookups.push(r);\n        }\n        pushGroup(toGroup(r), r);\n      }\n    }\n\n    if (needsGrouping) {\n      // some default sorting\n      groupOrder.sort((a, b) => a.group.name.toLowerCase().localeCompare(b.group.name.toLowerCase()));\n    }\n    return {maxDataIndex, lookups, groupOrder};\n  }\n\n  private sortGroup(g: ISortHelper, i: number, ranking: Ranking, lookups: CompareLookup | undefined, groupLookup: CompareLookup | undefined, singleGroup: boolean, maxDataIndex: number): Promise<IOrderedGroup> {\n    const group = g.group;\n\n    const sortTask = this.tasks.sort(ranking, group, g.rows, singleGroup, maxDataIndex, lookups);\n\n    // compute sort group value as task\n    const groupSortTask = groupLookup ? this.tasks.groupCompare(ranking, group, g.rows).then((r) => r) : <ICompareValue[]>[];\n\n    // trigger task for groups to compute for this group\n\n\n    return Promise.all([sortTask, groupSortTask]).then(([order, groupC]) => {\n      if (groupLookup && Array.isArray(groupC)) {\n        groupLookup.pushValues(i, groupC);\n      }\n      return Object.assign(group, {order});\n    });\n  }\n\n  private sortGroups(groups: IOrderedGroup[], groupLookup: CompareLookup | undefined) {\n    // sort groups\n    if (groupLookup) {\n      const groupIndices = groups.map((_, i) => i);\n      sortComplex(groupIndices, groupLookup.sortOrders);\n      return groupIndices.map((i) => groups[i]);\n    }\n    return groups.sort((a, b) => a.name.localeCompare(b.name));\n  }\n\n  sort(ranking: Ranking, dirtyReason: EDirtyReason[]) {\n    const reasons = new Set(dirtyReason);\n\n    if (this._data.length === 0) {\n      return {groups: [], index2pos: []};\n    }\n\n    // console.log(dirtyReason);\n\n    const filter = this.resolveFilter(ranking);\n\n    const needsFiltering = reasons.has(EDirtyReason.UNKNOWN) || reasons.has(EDirtyReason.FILTER_CHANGED);\n    const needsGrouping = needsFiltering || reasons.has(EDirtyReason.GROUP_CRITERIA_CHANGED) || reasons.has(EDirtyReason.GROUP_CRITERIA_DIRTY);\n    const needsSorting = needsGrouping || reasons.has(EDirtyReason.SORT_CRITERIA_CHANGED) || reasons.has(EDirtyReason.SORT_CRITERIA_DIRTY);\n    const needsGroupSorting = needsGrouping || reasons.has(EDirtyReason.GROUP_SORT_CRITERIA_CHANGED) || reasons.has(EDirtyReason.GROUP_SORT_CRITERIA_DIRTY);\n\n    if (needsFiltering) {\n      this.tasks.dirtyRanking(ranking, 'summary');\n    } else if (needsGrouping) {\n      this.tasks.dirtyRanking(ranking, 'group');\n    }\n    // otherwise the summary and group summaries should still be valid\n\n    if (filter.length === 0) {\n      // all rows so summary = data\n      this.tasks.copyData2Summary(ranking);\n    }\n\n    const isGroupedBy = ranking.getGroupCriteria().length > 0;\n    const isSortedBy = ranking.getSortCriteria().length > 0;\n    const isGroupedSortedBy = ranking.getGroupSortCriteria().length > 0;\n\n    if (!isGroupedBy && !isSortedBy && filter.length === 0) {\n      return this.noSorting(ranking);\n    }\n\n    const {maxDataIndex, lookups, groupOrder} = this.createSorter(ranking, filter, needsFiltering, needsGrouping, needsSorting);\n\n    if (groupOrder.length === 0) {\n      return {groups: [], index2pos: []};\n    }\n\n    this.tasks.preCompute(ranking, groupOrder, maxDataIndex);\n\n\n    if (groupOrder.length === 1) {\n      const g = groupOrder[0]!;\n\n      // not required if: group sort criteria changed -> lookups will be none\n      return this.sortGroup(g, 0, ranking, lookups, undefined, true, maxDataIndex).then((group) => {\n        return index2pos([group], maxDataIndex);\n      });\n    }\n\n    const groupLookup = isGroupedSortedBy && needsGroupSorting ? new CompareLookup(groupOrder.length, false, ranking) : undefined;\n\n    return Promise.all(groupOrder.map((g, i) => {\n      // not required if: group sort criteria changed -> lookups will be none\n      return this.sortGroup(g, i, ranking, lookups, groupLookup, false, maxDataIndex);\n    })).then((groups) => {\n      // not required if: sort criteria changed -> groupLookup will be none\n      const sortedGroups = this.sortGroups(groups, groupLookup);\n      return index2pos(sortedGroups, maxDataIndex);\n    });\n  }\n\n  getRow(index: number) {\n    return this._dataRows[index];\n  }\n\n  view(indices: IndicesArray) {\n    return mapIndices(indices, (i) => this._data[i] || {});\n  }\n\n  mappingSample(col: INumberColumn): ISequence<number> {\n    const MAX_SAMPLE = 120; //at most 120 sample lines\n    const l = this._dataRows.length;\n    if (l <= MAX_SAMPLE) {\n      return lazySeq(this._dataRows).map((v) => col.getRawNumber(v));\n    }\n    //randomly select 500 elements\n    const indices = new Set<number>();\n\n    for (let i = 0; i < MAX_SAMPLE; ++i) {\n      let j = Math.floor(Math.random() * (l - 1));\n      while (indices.has(j)) {\n        j = Math.floor(Math.random() * (l - 1));\n      }\n      indices.add(j);\n    }\n    return lazySeq(Array.from(indices)).map((i) => col.getRawNumber(this._dataRows[i]));\n  }\n\n  searchAndJump(search: string | RegExp, col: Column) {\n    //case insensitive search\n    search = typeof search === 'string' ? search.toLowerCase() : search;\n    const f = typeof search === 'string' ? (v: string) => v.toLowerCase().indexOf((<string>search)) >= 0 : (<RegExp>search).test.bind(search);\n    const indices = <number[]>[];\n    for (let i = 0; i < this._dataRows.length; ++i) {\n      if (f(col.getLabel(this._dataRows[i]))) {\n        indices.push(i);\n      }\n    }\n    this.jumpToNearest(indices);\n  }\n\n}\n\nfunction toRows(data: any[]) {\n  return data.map((v, i) => ({v, i}));\n}\n","import {IAbortAblePromise} from 'lineupengine';\nimport {Column, IDataRow, IOrderedGroup, INumberColumn, ICategoricalLikeColumn, IDateColumn} from '../model';\nimport {IDataProvider} from '../provider';\nimport DialogManager from '../ui/dialogs/DialogManager';\nimport {ISequence, IDateStatistics, ICategoricalStatistics, IAdvancedBoxPlotData, IStatistics} from '../internal';\n\n\nexport interface IImposer {\n  color?(row: IDataRow | null, valueHint?: number): string | null;\n}\n\nexport declare type IRenderCallback = (ctx: CanvasRenderingContext2D) => void;\n\n/**\n * a cell renderer for rendering a cell of specific column\n */\nexport interface ICellRenderer {\n  /**\n   * template as a basis for the update\n   */\n  readonly template: string;\n\n  /**\n   * update a given node (create using the template) with the given data\n   * @param node the node to update\n   * @param d the data item\n   * @param i the order relative index\n   * @param group the group this row is part of\n   */\n  update(node: HTMLElement, d: IDataRow, i: number, group: IOrderedGroup): void | IAbortAblePromise<void> | null;\n\n  /**\n   * render a low detail canvas row\n   * @return true if a dom element is needed\n   */\n  render?(ctx: CanvasRenderingContext2D, d: IDataRow, i: number, group: IOrderedGroup): void | IAbortAblePromise<IRenderCallback> | boolean | null;\n}\n\n/**\n * a cell renderer for rendering a cell of specific column\n */\nexport interface IGroupCellRenderer {\n  /**\n   * template as a basis for the update\n   */\n  readonly template: string;\n\n  /**\n   * update a given node (create using the template) with the given data\n   * @param node the node to update\n   * @param group the group to render\n   */\n  update(node: HTMLElement, group: IOrderedGroup): void | IAbortAblePromise<void> | null;\n}\n\nexport interface ISummaryRenderer {\n  /**\n   * template as a basis for the update\n   */\n  readonly template: string;\n\n  update(node: HTMLElement): void | IAbortAblePromise<void> | null;\n}\n\n\nexport interface IRenderTask<T> {\n  then<U = void>(onfullfilled: (value: T | symbol) => U): U | IAbortAblePromise<U>;\n}\n\nexport interface IRenderTasks {\n  groupRows<T>(col: Column, group: IOrderedGroup, key: string, compute: (rows: ISequence<IDataRow>) => T): IRenderTask<T>;\n  groupExampleRows<T>(col: Column, group: IOrderedGroup, key: string, compute: (rows: ISequence<IDataRow>) => T): IRenderTask<T>;\n\n  groupBoxPlotStats(col: Column & INumberColumn, group: IOrderedGroup, raw?: boolean): IRenderTask<{group: IAdvancedBoxPlotData, summary: IAdvancedBoxPlotData, data: IAdvancedBoxPlotData}>;\n  groupNumberStats(col: Column & INumberColumn, group: IOrderedGroup, raw?: boolean): IRenderTask<{group: IStatistics, summary: IStatistics, data: IStatistics}>;\n  groupCategoricalStats(col: Column & ICategoricalLikeColumn, group: IOrderedGroup): IRenderTask<{group: ICategoricalStatistics, summary: ICategoricalStatistics, data: ICategoricalStatistics}>;\n  groupDateStats(col: Column & IDateColumn, group: IOrderedGroup): IRenderTask<{group: IDateStatistics, summary: IDateStatistics, data: IDateStatistics}>;\n\n  summaryBoxPlotStats(col: Column & INumberColumn, raw?: boolean): IRenderTask<{summary: IAdvancedBoxPlotData, data: IAdvancedBoxPlotData}>;\n  summaryNumberStats(col: Column & INumberColumn, raw?: boolean): IRenderTask<{summary: IStatistics, data: IStatistics}>;\n  summaryCategoricalStats(col: Column & ICategoricalLikeColumn): IRenderTask<{summary: ICategoricalStatistics, data: ICategoricalStatistics}>;\n  summaryDateStats(col: Column & IDateColumn): IRenderTask<{summary: IDateStatistics, data: IDateStatistics}>;\n}\n\n/**\n * context for rendering, wrapped as an object for easy extensibility\n */\nexport interface IRenderContext {\n  readonly tasks: IRenderTasks;\n  /**\n   * render a column\n   * @param col\n   */\n  renderer(col: Column, imposer?: IImposer): ICellRenderer;\n\n  /**\n   * render a column\n   * @param col\n   */\n  groupRenderer(col: Column, imposer?: IImposer): IGroupCellRenderer;\n\n  summaryRenderer(co: Column, interactive: boolean, imposer?: IImposer): ISummaryRenderer;\n\n  /**\n   * prefix used for all generated id names\n   */\n  readonly idPrefix: string;\n\n  asElement(html: string): HTMLElement;\n\n  colWidth(col: Column): number;\n\n  readonly provider: IDataProvider;\n  readonly dialogManager: DialogManager;\n}\n\nexport enum ERenderMode {\n  CELL, GROUP, SUMMARY\n}\n\n\nexport interface ICellRendererFactory {\n  readonly title: string;\n  readonly groupTitle?: string;\n  readonly summaryTitle?: string;\n\n  canRender(col: Column, mode: ERenderMode): boolean;\n\n  create?(col: Column, context: IRenderContext, imposer?: IImposer): ICellRenderer;\n\n  createGroup?(col: Column, context: IRenderContext, imposer?: IImposer): IGroupCellRenderer;\n\n  createSummary?(col: Column, context: IRenderContext, interactive: boolean, imposer?: IImposer): ISummaryRenderer;\n}\n","\nconst styles = new Map<string, string>();\n// {\n//   const r = /^[$]([\\w]+): ([\\w #.()'\\/,-]+)( !default)?;/gmi;\n//   const s = String(vars);\n\n//   let m: RegExpMatchArray | null = r.exec(s);\n//   while (m != null) {\n//     styles.set(m[1], m[2]);\n//     m = r.exec(s);\n//   }\n// }\n\n/** @internal */\nexport default function getStyle(key: string, defaultValue = '') {\n  if (key[0] === '$') {\n    key = key.slice(1);\n  }\n  if (styles.has(key)) {\n    return styles.get(key)!;\n  }\n  return defaultValue;\n}\n\n/** @internal */\nexport const COLUMN_PADDING = parseInt(getStyle('lu_engine_grip_gap', '5px'), 10);\n/** @internal */\nexport const FILTERED_OPACITY = parseFloat(getStyle('lu_filtered_opacity', '0.2'));\n/** @internal */\nexport const DASH = {\n  width: parseInt(getStyle('lu_missing_dash_width', '3px'), 10),\n  height: parseInt(getStyle('lu_missing_dash_height', '10px'), 10),\n  color: getStyle('lu_missing_dash_color', 'gray')\n};\n/** @internal */\nexport const UPSET = {\n  color: getStyle('lu_renderer_upset_color'),\n  inactive: parseFloat(getStyle('lu_renderer_upset_inactive_opacity', '0.1'))\n};\n/** @internal */\nexport const DOT = {\n  color: getStyle('lu_renderer_dot_color', 'gray'),\n  size: parseInt(getStyle('lu_renderer_dot_size', '5px'), 10),\n  opacity: parseFloat(getStyle('lu_renderer_dot_opacity', '0.5'))\n};\n/** @internal */\nexport const BOX_PLOT = {\n  box: getStyle('lu_renderer_boxplot_box', '#e0e0e0'),\n  stroke: getStyle('lu_renderer_boxplot_stroke', 'black'),\n  sort: getStyle('lu_renderer_boxplot_sort_indicator', '#ffa500'),\n  outlier: getStyle('lu_renderer_boxplot_outlier', '#e0e0e0')\n};\n/** @internal */\nexport const AGGREGATE = {\n  width: parseInt(getStyle('lu_aggregate_square_bracket_width', '4px'), 10),\n  strokeWidth: parseInt(getStyle('lu_aggregate_square_bracket_stroke_width', '2px'), 10),\n  color: getStyle('lu_aggregate_square_bracket_stroke_color', '#000'),\n  levelOffset: parseInt(getStyle('lu_aggregate_level_offset', '2px'), 10),\n  levelWidth: parseInt(getStyle('lu_aggregate_level_width', '22px'), 10)\n};\n/** @internal */\nexport const SLOPEGRAPH_WIDTH = parseInt(getStyle('lu_slope_width', '200px'), 10);\n/** @internal */\nexport const CANVAS_HEIGHT = 4;\n\n/** @internal */\nexport const CSS_PREFIX = getStyle('lu_css_prefix', 'lu');\n/** @internal */\nexport const ENGINE_CSS_PREFIX = 'le';\n\n/** @internal */\nexport function cssClass(suffix?: string) {\n  return suffix? `${CSS_PREFIX}-${suffix}` : CSS_PREFIX;\n}\n/** @internal */\nexport function engineCssClass(suffix?: string) {\n  return suffix? `${ENGINE_CSS_PREFIX}-${suffix}` : ENGINE_CSS_PREFIX;\n}\n\n/** @internal */\nexport function aria(text: string) {\n  return `<span class=\"${cssClass('aria')}\" aria-hidden=\"true\">${text}</span>`;\n}\n","import {MIN_LABEL_WIDTH} from '../constants';\nimport {Column, IArrayColumn, IDataRow, ICategoricalLikeColumn, isMapAbleColumn, DEFAULT_COLOR} from '../model';\nimport {hsl} from 'd3-color';\nimport {cssClass} from '../styles';\nimport {IRenderContext} from '.';\nimport {ISequence} from '../internal';\n\n/** @internal */\nexport function noop() {\n  // no op\n}\n\n/** @internal */\nexport const noRenderer = {\n  template: `<div></div>`,\n  update: noop\n};\n\n/** @internal */\nexport function setText<T extends Node>(node: T, text?: string): T {\n  if (text === undefined) {\n    return node;\n  }\n  //no performance boost if setting the text node directly\n  //const textNode = <Text>node.firstChild;\n  //if (textNode == null) {\n  //  node.appendChild(node.ownerDocument!.createTextNode(text));\n  //} else {\n  //  textNode.data = text;\n  //}\n  if (node.textContent !== text) {\n    node.textContent = text;\n  }\n  return node;\n}\n\n/**\n * for each item matching the selector execute the callback\n * @param node\n * @param selector\n * @param callback\n * @internal\n */\nexport function forEach<T extends Element>(node: Element, selector: string, callback: (d: T, i: number) => void) {\n  (<T[]>Array.from(node.querySelectorAll(selector))).forEach(callback);\n}\n\n/** @internal */\nexport function forEachChild<T extends Element>(node: Element, callback: (d: T, i: number) => void) {\n  (<T[]>Array.from(node.children)).forEach(callback);\n}\n\n/**\n * matches the columns and the dom nodes representing them\n * @param {HTMLElement} node row\n * @param columns columns to check\n * @internal\n */\nexport function matchColumns(node: HTMLElement, columns: {column: Column, template: string, rendererId: string}[], ctx: IRenderContext) {\n  if (node.childElementCount === 0) {\n    // initial call fast method\n    node.innerHTML = columns.map((c) => c.template).join('');\n    const children = Array.from(node.children);\n    columns.forEach((col, i) => {\n      const cnode = <HTMLElement>children[i];\n      // set attribute for finding again\n      cnode.dataset.columnId = col.column.id;\n      // store current renderer\n      cnode.dataset.renderer = col.rendererId;\n      cnode.classList.add(cssClass(`renderer-${col.rendererId}`));\n    });\n    return;\n  }\n\n  function matches(c: {column: Column, rendererId: string}, i: number) {\n    //do both match?\n    const n = <HTMLElement>node.children[i];\n    return n != null && n.dataset.columnId === c.column.id && n.dataset.renderer === c.rendererId;\n  }\n\n  if (columns.every(matches)) {\n    return; //nothing to do\n  }\n\n  const idsAndRenderer = new Set(columns.map((c) => `${c.column.id}@${c.rendererId}`));\n  //remove all that are not existing anymore\n  forEachChild(node, (n: HTMLElement) => {\n    const id = n.dataset.columnId;\n    const renderer = n.dataset.renderer;\n    const idAndRenderer = `${id}@${renderer}`;\n    if (!idsAndRenderer.has(idAndRenderer)) {\n      node.removeChild(n);\n    }\n  });\n  columns.forEach((col) => {\n    let cnode = <HTMLElement>node.querySelector(`[data-column-id=\"${col.column.id}\"]`);\n    if (!cnode) {\n      cnode = ctx.asElement(col.template);\n      cnode.dataset.columnId = col.column.id;\n      cnode.dataset.renderer = col.rendererId;\n      cnode.classList.add(cssClass(`renderer-${col.rendererId}`));\n    }\n    node.appendChild(cnode);\n  });\n}\n\n/** @internal */\nexport function wideEnough(col: IArrayColumn<any>, length: number = col.labels.length) {\n  const w = col.getWidth();\n  return w / length > MIN_LABEL_WIDTH; // at least 30 pixel\n}\n\n/** @internal */\nexport function wideEnoughCat(col: ICategoricalLikeColumn) {\n  const w = col.getWidth();\n  return w / col.categories.length > MIN_LABEL_WIDTH; // at least 30 pixel\n}\n\n\n\n// side effect\nconst adaptColorCache: {[bg: string]: string} = {};\n/**\n * Adapts the text color for a given background color\n * @param {string} bgColor as `#ff0000`\n * @returns {string} returns `black` or `white` for best contrast\n * @internal\n */\nexport function adaptTextColorToBgColor(bgColor: string): string {\n  const bak = adaptColorCache[bgColor];\n  if (bak) {\n    return bak;\n  }\n  return adaptColorCache[bgColor] = hsl(bgColor).l > 0.5 ? 'black' : 'white';\n}\n\n\n/**\n *\n * Adapts the text color for a given background color\n * @param {HTMLElement} node the node containing the text\n * @param {string} bgColor as `#ff0000`\n * @param {string} title the title to render\n * @param {number} width for which percentages of the cell this background applies (0..1)\n * @internal\n */\nexport function adaptDynamicColorToBgColor(node: HTMLElement, bgColor: string, title: string, width: number) {\n  const adapt = adaptTextColorToBgColor(bgColor);\n  if ((width <= 0.05 || adapt === 'black') || width > 0.9) { // almost empty or full\n    node.style.color = adapt === 'black' || width <= 0.05 ? null : adapt; // null = black\n    // node.classList.remove('lu-gradient-text');\n    // node.style.backgroundImage = null;\n    return;\n  }\n\n  node.style.color = null;\n  node.innerText = title;\n\n  const span = node.ownerDocument!.createElement('span');\n  span.classList.add(cssClass('gradient-text'));\n  span.style.color = adapt;\n  span.innerText = title;\n  node.appendChild(span);\n}\n\n\n/** @internal */\nexport const uniqueId: (prefix: string) => string = (function () {\n  // side effect but just within the function itself, so good for the library\n  let idCounter = 0;\n  return (prefix: string) => `${prefix}${(idCounter++).toString(36)}`;\n})();\n\n\nconst NUM_EXAMPLE_VALUES = 5;\n\n/** @internal */\nexport function exampleText(col: Column, rows: ISequence<IDataRow>) {\n  const examples = <string[]>[];\n  rows.every((row) => {\n    if (col.getValue(row) == null) {\n      return true;\n    }\n    const v = col.getLabel(row);\n    examples.push(v);\n    return examples.length < NUM_EXAMPLE_VALUES;\n  });\n  return `${examples.join(', ')}${examples.length < rows.length ? ', ...' : ''}`;\n}\n\n\n/** @internal */\nexport function multiLevelGridCSSClass(idPrefix: string, column: Column) {\n  return cssClass(`stacked-${idPrefix}-${column.id}`);\n}\n\n\n/** @internal */\nexport function colorOf(col: Column) {\n  if (isMapAbleColumn(col)) {\n    return col.getColorMapping().apply(0);\n  }\n  return DEFAULT_COLOR;\n}\n","import {IDataRow, IOrderedGroup, ActionColumn, Column} from '../model';\nimport {IRenderContext, ERenderMode, ICellRendererFactory} from './interfaces';\nimport {forEachChild, noRenderer} from './utils';\nimport {cssClass} from '../styles';\n\n/** @internal */\nexport default class ActionRenderer implements ICellRendererFactory {\n  readonly title = 'Default';\n\n  canRender(col: Column, mode: ERenderMode) {\n    return col instanceof ActionColumn && mode !== ERenderMode.SUMMARY;\n  }\n\n  create(col: ActionColumn) {\n    const actions = col.actions;\n    return {\n      template: `<div class=\"${cssClass('actions')} ${cssClass('hover-only')}\">${actions.map((a) => `<span title='${a.name}' class='${a.className || ''}'>${a.icon || ''}</span>`).join('')}</div>`,\n      update: (n: HTMLElement, d: IDataRow) => {\n        forEachChild(n, (ni: HTMLSpanElement, i: number) => {\n          ni.onclick = function (event) {\n            event.preventDefault();\n            event.stopPropagation();\n            setTimeout(() => actions[i].action(d), 1); // async\n          };\n        });\n      }\n    };\n  }\n\n  createGroup(col: ActionColumn, context: IRenderContext) {\n    const actions = col.groupActions;\n    return {\n      template: `<div class=\"${cssClass('actions')} ${cssClass('hover-only')}\">${actions.map((a) => `<span title='${a.name}' class='${a.className || ''}'>${a.icon || ''}</span>`).join('')}</div>`,\n      update: (n: HTMLElement, group: IOrderedGroup) => {\n        forEachChild(n, (ni: HTMLSpanElement, i: number) => {\n          ni.onclick = function (event) {\n            event.preventDefault();\n            event.stopPropagation();\n            context.tasks.groupRows(col, group, 'identity', (r) => r).then((rows) => {\n              if (typeof rows === 'symbol') {\n                return;\n              }\n              setTimeout(() => actions[i].action(group, Array.from(rows)), 1); // async\n            });\n          };\n        });\n      }\n    };\n  }\n\n  createSummary() {\n    return noRenderer;\n  }\n}\n","import {IDataRow, Column, AggregateGroupColumn, EAggregationState, IOrderedGroup, IGroupParent, IGroup, defaultGroup} from '../model';\nimport {AGGREGATE, CANVAS_HEIGHT, cssClass} from '../styles';\nimport {IRenderContext, ICellRendererFactory} from './interfaces';\nimport {IDataProvider} from '../provider';\nimport {groupParents, toItemMeta, isAlwaysShowingGroupStrategy, hasTopNStrategy, isSummaryGroup} from '../provider/internal';\n\nfunction preventDefault(event: Event) {\n  event.preventDefault();\n  event.stopPropagation();\n}\n\nfunction matchNodes(node: HTMLElement, length: number, clazz = 'agg-level', addTopN = false) {\n  const doc = node.ownerDocument!;\n  const children = <HTMLElement[]>Array.from(node.children);\n  if (addTopN) { // top N buttons\n    length = length + 1;\n  }\n\n  // add missing\n  for (let i = children.length; i < length; ++i) {\n    const child = doc.createElement('div');\n    child.classList.add(cssClass(clazz));\n    children.push(child);\n    node.appendChild(child);\n  }\n  // remove too many\n  for (const r of children.splice(length, children.length - length)) {\n    r.remove();\n  }\n  if (addTopN) {\n    const last = children[children.length - 1];\n    last.classList.remove(cssClass(clazz));\n    last.classList.add(cssClass('agg-all'));\n  }\n  return children;\n}\n\nfunction renderGroups(node: HTMLElement, group: IOrderedGroup, relativeIndex: number, col: AggregateGroupColumn, provider: IDataProvider) {\n  const strategy = provider.getAggregationStrategy();\n  const ranking = col.findMyRanker()!;\n  const topNGetter = (group: IGroup) => provider.getTopNAggregated(ranking, group);\n\n  const isRow = relativeIndex >= 0;\n  const isLeafGroup = !(<IGroupParent><any>group).subGroups || (<IGroupParent><any>group).subGroups.length === 0;\n\n  const alwaysShowGroup = isAlwaysShowingGroupStrategy(strategy);\n  const isSummary = !isRow && isSummaryGroup(group, strategy, topNGetter);\n  const hasTopN = isSummary && isLeafGroup && hasTopNStrategy(strategy);\n\n  const parents = groupParents(group, relativeIndex >= 0 ? toItemMeta(relativeIndex, group, provider.getTopNAggregated(ranking, group)) : 'first last');\n  const children = matchNodes(node, parents.length, 'agg-level', hasTopN);\n\n  const lastParent = parents.length - 1;\n\n  for (let i = 0; i < parents.length; ++i) {\n    const parent = parents[i];\n    const child = children[i];\n    const state = provider.getAggregationState(ranking, parent.group);\n    const isLastGroup = i === lastParent;\n    child.dataset.level = String(parents.length - 1 - i); // count backwards\n\n    if (alwaysShowGroup && (isRow || i < lastParent)) {\n      // inner or last\n      if (!isSummary && (parent.meta === 'last' || parent.meta === 'first last')) {\n        child.dataset.meta = 'last';\n      } else {\n        delete child.dataset.meta;\n      }\n      child.classList.toggle(cssClass('agg-inner'), isRow && isLastGroup);\n      child.classList.remove(cssClass('agg-expand'), cssClass('agg-collapse'));\n      child.title = '';\n      delete child.onclick;\n      continue;\n    }\n\n    const isCollapsed = state === EAggregationState.COLLAPSE;\n    const isFirst = parent.meta === 'first' || parent.meta === 'first last';\n    const isShowAll = state === EAggregationState.EXPAND;\n    const childTopN = hasTopN && isLastGroup ? children[parents.length] : null;\n\n    let meta = parent.meta;\n    if (isSummary && parent.meta === 'first last') {\n      meta = 'first';\n    }\n\n    if (meta) {\n      child.dataset.meta = meta;\n    } else {\n      delete child.dataset.meta;\n    }\n\n    child.classList.toggle(cssClass('agg-expand'), isFirst);\n    child.classList.toggle(cssClass('agg-collapse'), isCollapsed);\n    child.title = isFirst ? (isCollapsed ? 'Expand Group' : 'Collapse Group') : '';\n\n    if (!isFirst) {\n      delete child.onclick;\n    } else {\n      child.onclick = (evt) => {\n        preventDefault(evt);\n        let nextState: EAggregationState;\n        switch (strategy) {\n          case 'group+top+item':\n            nextState = state === EAggregationState.COLLAPSE ? EAggregationState.EXPAND_TOP_N : EAggregationState.COLLAPSE;\n            break;\n          case 'group':\n          case 'item':\n          case 'group+item':\n          case 'group+item+top':\n          default:\n            nextState = state === EAggregationState.COLLAPSE ? EAggregationState.EXPAND : EAggregationState.COLLAPSE;\n            break;\n        }\n        col.setAggregated(parent.group, nextState);\n      };\n    }\n\n    if (!childTopN) {\n      continue;\n    }\n    childTopN.dataset.level = String(i); // count upwards\n    childTopN.classList.toggle(cssClass('agg-compress'), isShowAll);\n    childTopN.title = isShowAll ? `Show Top ${provider.getShowTopN()} Only` : 'Show All';\n    childTopN.onclick = (evt) => {\n      preventDefault(evt);\n      col.setAggregated(parent.group, state === EAggregationState.EXPAND ? EAggregationState.EXPAND_TOP_N : EAggregationState.EXPAND);\n    };\n  }\n}\n\nfunction isDummyGroup(group: IGroup) {\n  return group.parent == null && group.name === defaultGroup.name;\n}\n\n/** @internal */\nexport default class AggregateGroupRenderer implements ICellRendererFactory {\n  readonly title = 'Default';\n\n  canRender(col: Column) {\n    return col instanceof AggregateGroupColumn;\n  }\n\n  create(col: AggregateGroupColumn, context: IRenderContext) {\n    return {\n      template: `<div></div>`,\n      update(node: HTMLElement, _row: IDataRow, i: number, group: IOrderedGroup) {\n        if (isDummyGroup(group)) {\n          return;\n        }\n        renderGroups(node, group, i, col, context.provider);\n      },\n      render(ctx: CanvasRenderingContext2D, _row: IDataRow, i: number, group: IOrderedGroup) {\n        if (isDummyGroup(group)) {\n          return;\n        }\n        const parents = groupParents(group, toItemMeta(i, group, context.provider.getTopNAggregated(col.findMyRanker()!, group)));\n        ctx.fillStyle = AGGREGATE.color;\n        for (let i = 0; i < parents.length; ++i) {\n          ctx.fillRect(AGGREGATE.levelWidth * i + AGGREGATE.levelOffset, 0, AGGREGATE.strokeWidth, CANVAS_HEIGHT);\n        }\n        return parents.some((d) => d.meta != null);\n      }\n    };\n  }\n\n  createGroup(col: AggregateGroupColumn, context: IRenderContext) {\n    return {\n      template: `<div><div class=\"${cssClass('agg-level')}\"></div></div>`,\n      update(node: HTMLElement, group: IOrderedGroup) {\n        renderGroups(node, group, -1, col, context.provider);\n      }\n    };\n  }\n\n  createSummary(col: AggregateGroupColumn, context: IRenderContext) {\n    return {\n      template: `<div></div>`,\n      update: (node: HTMLElement) => {\n        const ranking = col.findMyRanker()!;\n        const groups = ranking.getGroups();\n        if (groups.length === 1 && groups[0].name === defaultGroup.name) {\n          return;\n        }\n\n        const gparents = groups.map((group) => groupParents(group, 'first last'));\n\n        const max = gparents.reduce((a, b) => Math.max(a, b.length), Number.NEGATIVE_INFINITY);\n        const children = matchNodes(node, max, 'agg-expand');\n\n        for (let i = 0; i < max; ++i) {\n          const child = children[i];\n          const subGroups = <IOrderedGroup[]>gparents.map((d) => d[i] ? d[i].group : null).filter((d) => d != null);\n\n          const isCollapsed = subGroups.every((d) => context.provider.getAggregationState(ranking, d) === EAggregationState.COLLAPSE);\n          child.classList.toggle(cssClass('agg-collapse'), isCollapsed);\n          child.title = isCollapsed ? 'Expand All Groups' : 'Collapse All Groups';\n\n          child.onclick = (evt) => {\n            preventDefault(evt);\n            context.provider.aggregateAllOf(ranking, isCollapsed ? EAggregationState.EXPAND : EAggregationState.COLLAPSE, subGroups);\n          };\n        }\n      }\n    };\n  }\n}\n","import {cssClass} from '../styles';\n\n/** @internal */\nexport const filterMissingText = 'Filter rows containing missing values';\n\n/** @internal */\nexport function filterMissingMarkup(bakMissing: boolean) {\n  return `<label class=\"${cssClass('checkbox')}\">\n    <input type=\"checkbox\" ${bakMissing ? 'checked=\"checked\"' : ''}>\n    <span class=\"${cssClass('filter-missing')}\">${filterMissingText}</span>\n  </label>`;\n}\n\n/** @internal */\nexport function filterMissingNumberMarkup(bakMissing: boolean, count: number) {\n  return `<label class=\"${cssClass('checkbox')}\">\n    <input type=\"checkbox\" ${bakMissing ? 'checked=\"checked\"' : ''} ${count === 0 ? 'disabled' : ''}>\n    <span class=\"${cssClass('filter-missing')} ${count === 0 ? cssClass('disabled') : ''}\">Filter ${count} missing value rows</span>\n  </label>`;\n}\n\n/** @internal */\nexport function findFilterMissing(node: HTMLElement) {\n  return <HTMLInputElement>(<HTMLElement>node.getElementsByClassName(cssClass('filter-missing'))[0]!).previousElementSibling!;\n}\n\n/** @internal */\nexport function updateFilterMissingNumberMarkup(element: HTMLElement, count: number) {\n  const checked = element.getElementsByTagName('input')![0];\n  checked.disabled = count === 0;\n  element.lastElementChild!.classList.toggle(cssClass('disabled'), count === 0);\n  element.lastElementChild!.textContent = `Filter ${count} missing value rows`;\n}\n","import {Column, IDataRow, isMissingValue} from '../model';\nimport {CANVAS_HEIGHT, DASH, cssClass} from '../styles';\n\nexport function renderMissingValue(ctx: CanvasRenderingContext2D, width: number, height: number, x = 0, y = 0) {\n\n  const dashX = Math.max(0, x + (width - DASH.width) / 2); // center horizontally\n  const dashY = Math.max(0, y + (height - DASH.height) / 2); // center vertically\n  ctx.fillStyle = DASH.color;\n  ctx.fillRect(dashX, dashY, Math.min(width, DASH.width), Math.min(height, DASH.height));\n}\n\nexport function renderMissingDOM(node: HTMLElement, col: Column, d: IDataRow) {\n  const missing = isMissingValue(col.getValue(d));\n  node.classList.toggle(cssClass('missing'), missing);\n  return missing;\n}\n\nexport function renderMissingCanvas(ctx: CanvasRenderingContext2D, col: Column, d: IDataRow, width: number, x = 0, y = 0) {\n  const missing = isMissingValue(col.getValue(d));\n  if (missing) {\n    renderMissingValue(ctx, width, CANVAS_HEIGHT, x, y);\n  }\n  return missing;\n}\n","import {StringColumn, Column, IDataRow, IOrderedGroup} from '../model';\nimport {filterMissingMarkup, findFilterMissing} from '../ui/missing';\nimport {IRenderContext, ICellRendererFactory} from './interfaces';\nimport {renderMissingDOM} from './missing';\nimport {setText, exampleText} from './utils';\nimport {cssClass} from '../styles';\n\n\n/**\n * renders a string with additional alignment behavior\n * one instance factory shared among strings\n * @internal\n */\nexport default class StringCellRenderer implements ICellRendererFactory {\n  readonly title = 'Default';\n\n  canRender(col: Column) {\n    return col instanceof StringColumn;\n  }\n\n  create(col: StringColumn) {\n    const align = col.alignment || 'left';\n    return {\n      template: `<div${align !== 'left' ? ` class=\"${cssClass(align)}\"` : ''}> </div>`,\n      update: (n: HTMLDivElement, d: IDataRow) => {\n        renderMissingDOM(n, col, d);\n        if (col.escape) {\n          setText(n, col.getLabel(d));\n        } else {\n          n.innerHTML = col.getLabel(d);\n        }\n      }\n    };\n  }\n\n\n  createGroup(col: StringColumn, context: IRenderContext) {\n    return {\n      template: `<div> </div>`,\n      update: (n: HTMLDivElement, group: IOrderedGroup) => {\n        return context.tasks.groupExampleRows(col, group, 'string', (rows) => exampleText(col, rows)).then((text) => {\n          if (typeof text === 'symbol') {\n            return;\n          }\n          if (col.escape) {\n            setText(n, text);\n          } else {\n            n.innerHTML = text;\n          }\n        });\n      }\n    };\n  }\n\n  private static interactiveSummary(col: StringColumn, node: HTMLElement) {\n    const form = <HTMLFormElement>node;\n    const filterMissing = findFilterMissing(node);\n    const input = <HTMLInputElement>node.querySelector('input[type=\"text\"]');\n    const isRegex = <HTMLInputElement>node.querySelector('input[type=\"checkbox\"]');\n\n    const update = () => {\n      input.disabled = filterMissing.checked;\n      isRegex.disabled = filterMissing.checked;\n\n      if (filterMissing.checked) {\n        col.setFilter(StringColumn.FILTER_MISSING);\n        return;\n      }\n      const valid = input.value.trim();\n      filterMissing.disabled = valid.length > 0;\n      if (valid.length <= 0) {\n        col.setFilter(null);\n        return;\n      }\n      col.setFilter(isRegex.checked ? new RegExp(input.value) : input.value);\n    };\n\n    filterMissing.onchange = update;\n    input.onchange = update;\n    isRegex.onchange = update;\n    form.onsubmit = (evt) => {\n      evt.preventDefault();\n      evt.stopPropagation();\n      update();\n      return false;\n    };\n\n    return (actCol: StringColumn) => {\n      col = actCol;\n      let bak = col.getFilter() || '';\n      const bakMissing = bak === StringColumn.FILTER_MISSING;\n      if (bakMissing) {\n        bak = '';\n      }\n      filterMissing.checked = bakMissing;\n      input.value = bak instanceof RegExp ? bak.source : bak;\n      isRegex.checked = bak instanceof RegExp;\n      filterMissing.disabled = input.value.trim().length > 0;\n      input.disabled = filterMissing.checked;\n      isRegex.disabled = filterMissing.checked;\n    };\n  }\n\n  createSummary(col: StringColumn, _context: IRenderContext, interactive: boolean) {\n    if (!interactive) {\n      return {\n        template: `<div></div>`,\n        update: (node: HTMLElement) => {\n          const filter = col.getFilter() || '';\n          node.textContent = toString(filter);\n        }\n      };\n    }\n    let bak = col.getFilter() || '';\n    const bakMissing = bak === StringColumn.FILTER_MISSING;\n    if (bakMissing) {\n      bak = '';\n    }\n    let update: (col: StringColumn) => void;\n    return {\n      template: `<form><input type=\"text\" placeholder=\"Filter ${col.desc.label}...\" autofocus value=\"${(bak instanceof RegExp) ? bak.source : bak}\">\n          <label class=\"${cssClass('checkbox')}\"><input type=\"checkbox\" ${(bak instanceof RegExp) ? 'checked=\"checked\"' : ''}><span>Use regular expressions</span></label>\n          ${filterMissingMarkup(bakMissing)}</form>`,\n      update: (node: HTMLElement) => {\n        if (!update) {\n          update = StringCellRenderer.interactiveSummary(col, node);\n        }\n        update(col);\n      }\n    };\n  }\n}\n\nfunction toString(filter: null | string | RegExp) {\n  if (filter == null || filter === '' || filter === StringColumn.FILTER_MISSING) {\n    return '';\n  }\n  if (filter instanceof RegExp) {\n    return filter.source;\n  }\n  return String(filter);\n}\n","import {IDataRow, AnnotateColumn, Column} from '../model';\nimport StringCellRenderer from './StringCellRenderer';\nimport {cssClass} from '../styles';\n\n/** @internal */\nexport default class AnnotationRenderer extends StringCellRenderer {\n  readonly title = 'Default';\n\n  canRender(col: Column) {\n    return super.canRender(col) && col instanceof AnnotateColumn;\n  }\n\n  create(col: AnnotateColumn) {\n    return {\n      template: `<div>\n        <span></span>\n        <input class=\"${cssClass('hover-only')} ${cssClass('annotate-input')}\">\n       </div>`,\n      update: (n: HTMLElement, d: IDataRow) => {\n        const label = <HTMLElement>n.firstElementChild!;\n        const input = <HTMLInputElement>n.lastElementChild!;\n        input.onchange = () => {\n          label.textContent = input.value;\n          col.setValue(d, input.value);\n        };\n        input.onclick = (event) => {\n          event.stopPropagation();\n        };\n        label.textContent = input.value = col.getLabel(d);\n      }\n    };\n  }\n}\n","import {Column, isMapAbleColumn, IDataRow, DEFAULT_COLOR} from '../model';\nimport {IImposer} from './interfaces';\n\nexport function colorOf(col: Column, row: IDataRow | null, imposer?: IImposer, valueHint?: number) {\n  if (imposer && imposer.color) {\n    return imposer.color(row, valueHint);\n  }\n  if (!row) {\n    if (isMapAbleColumn(col)) {\n      return col.getColorMapping().apply(valueHint != null ? valueHint : 0);\n    }\n    return DEFAULT_COLOR;\n  }\n  return col.getColor(row);\n}\n","import {round} from '../internal';\nimport {Column, isNumbersColumn, IDataRow, INumberColumn, isNumberColumn, DEFAULT_COLOR} from '../model';\nimport {setText, adaptDynamicColorToBgColor, noRenderer} from './utils';\nimport {CANVAS_HEIGHT, cssClass} from '../styles';\nimport {colorOf} from './impose';\nimport {IRenderContext, ERenderMode, ICellRendererFactory, IImposer} from './interfaces';\nimport {renderMissingCanvas, renderMissingDOM} from './missing';\n\n\n/** @internal */\nexport default class BarCellRenderer implements ICellRendererFactory {\n  readonly title = 'Bar';\n\n  /**\n   * flag to always render the value\n   * @type {boolean}\n   */\n\n  constructor(private readonly renderValue: boolean = false) {\n  }\n\n  canRender(col: Column, mode: ERenderMode) {\n    return mode === ERenderMode.CELL && isNumberColumn(col) && !isNumbersColumn(col);\n  }\n\n  create(col: INumberColumn, context: IRenderContext, imposer?: IImposer) {\n    const width = context.colWidth(col);\n    return {\n      template: `<div title=\"\">\n          <div class=\"${cssClass('bar-label')}\" style='background-color: ${DEFAULT_COLOR}'>\n            <span ${this.renderValue ? '' : `class=\"${cssClass('hover-only')}\"`}></span>\n          </div>\n        </div>`,\n      update: (n: HTMLDivElement, d: IDataRow) => {\n        const value = col.getNumber(d);\n        const missing = renderMissingDOM(n, col, d);\n        const w = isNaN(value) ? 0 : round(value * 100, 2);\n        const title = col.getLabel(d);\n        n.title = title;\n\n        const bar = <HTMLElement>n.firstElementChild!;\n        bar.style.width = missing ? '100%' : `${w}%`;\n        const color = colorOf(col, d, imposer, value);\n        bar.style.backgroundColor = missing ? null : color;\n        setText(bar.firstElementChild!, title);\n        const item = <HTMLElement>bar.firstElementChild!;\n        setText(item, title);\n        adaptDynamicColorToBgColor(item, color || DEFAULT_COLOR, title, w / 100);\n      },\n      render: (ctx: CanvasRenderingContext2D, d: IDataRow) => {\n        if (renderMissingCanvas(ctx, col, d, width)) {\n          return;\n        }\n        const value = col.getNumber(d);\n        ctx.fillStyle = colorOf(col, d, imposer, value) || DEFAULT_COLOR;\n        const w = width * value;\n        ctx.fillRect(0, 0, isNaN(w) ? 0 : w, CANVAS_HEIGHT);\n\n      }\n    };\n  }\n\n  createGroup() {\n    return noRenderer;\n  }\n\n  createSummary() {\n    return noRenderer;\n  }\n}\n","import {Column, IDataRow} from '../model';\nimport {ERenderMode, ICellRendererFactory, IGroupCellRenderer, ISummaryRenderer, ICellRenderer} from './interfaces';\nimport {renderMissingDOM} from './missing';\nimport {noRenderer, setText} from './utils';\n\n/**\n * default renderer instance rendering the value as a text\n * @internal\n */\nexport class DefaultCellRenderer implements ICellRendererFactory {\n  title = 'String';\n  groupTitle = 'None';\n  summaryTitle = 'None';\n\n  canRender(_col: Column, _mode: ERenderMode) {\n    return true;\n  }\n\n  create(col: Column): ICellRenderer {\n    return {\n      template: `<div> </div>`,\n      update: (n: HTMLDivElement, d: IDataRow) => {\n        renderMissingDOM(n, col, d);\n        setText(n, col.getLabel(d));\n      }\n    };\n  }\n\n  createGroup(_col: Column): IGroupCellRenderer {\n    return noRenderer;\n  }\n\n  createSummary(): ISummaryRenderer {\n    return noRenderer;\n  }\n}\n","import {Column, BooleanColumn} from '../model';\nimport {DefaultCellRenderer} from './DefaultCellRenderer';\nimport {ERenderMode} from './interfaces';\nimport {cssClass} from '../styles';\n\n/** @internal */\nexport default class BooleanCellRenderer extends DefaultCellRenderer {\n  readonly title = 'Default';\n\n  canRender(col: Column, mode: ERenderMode) {\n    return col instanceof BooleanColumn && mode === ERenderMode.CELL;\n  }\n\n  create(col: Column) {\n    const r = super.create(col);\n    (<any>r).template = `<div class=\"${cssClass('center')}\"> </div>`;\n    return r;\n  }\n}\n","import {IBoxPlotData, IAdvancedBoxPlotData, round} from '../internal';\nimport {NumberColumn, IBoxPlotColumn, INumberColumn, isBoxPlotColumn, Column, IDataRow, isNumberColumn, isMapAbleColumn, IOrderedGroup} from '../model';\nimport {BOX_PLOT, CANVAS_HEIGHT, DOT, cssClass} from '../styles';\nimport {colorOf} from './impose';\nimport {IRenderContext, ERenderMode, ICellRendererFactory, IImposer} from './interfaces';\nimport {renderMissingCanvas} from './missing';\nimport {tasksAll} from '../provider';\n\nconst BOXPLOT = `<div title=\"\">\n  <div class=\"${cssClass('boxplot-whisker')}\">\n    <div class=\"${cssClass('boxplot-box')}\"></div>\n    <div class=\"${cssClass('boxplot-median')}\"></div>\n    <div class=\"${cssClass('boxplot-mean')}\"></div>\n  </div>\n</div>`;\n\nconst MAPPED_BOXPLOT = `<div title=\"\">\n  <div class=\"${cssClass('boxplot-whisker')}\">\n    <div class=\"${cssClass('boxplot-box')}\"></div>\n    <div class=\"${cssClass('boxplot-median')}\"></div>\n    <div class=\"${cssClass('boxplot-mean')}\"></div>\n  </div>\n  <span class=\"${cssClass('mapping-hint')}\"></span><span class=\"${cssClass('mapping-hint')}\"></span>\n</div>`;\n\n\n\n/** @internal */\nexport function computeLabel(col: INumberColumn, v: IBoxPlotData | IAdvancedBoxPlotData) {\n  if (v == null) {\n    return '';\n  }\n  const f = col.getNumberFormat();\n  const mean = (<IAdvancedBoxPlotData>v).mean != null ? `mean = ${f((<IAdvancedBoxPlotData>v).mean)} (dashed line)\\n` : '';\n  return `min = ${f(v.min)}\\nq1 = ${f(v.q1)}\\nmedian = ${f(v.median)}\\n${mean}q3 = ${f(v.q3)}\\nmax = ${f(v.max)}`;\n}\n\n/** @internal */\nexport default class BoxplotCellRenderer implements ICellRendererFactory {\n  readonly title = 'Box Plot';\n\n  canRender(col: Column, mode: ERenderMode) {\n    return (isBoxPlotColumn(col) && mode === ERenderMode.CELL || (isNumberColumn(col) && mode !== ERenderMode.CELL));\n  }\n\n  create(col: IBoxPlotColumn, context: IRenderContext, imposer?: IImposer) {\n    const sortMethod = <keyof IBoxPlotData>col.getSortMethod();\n    const sortedByMe = col.isSortedByMe().asc !== undefined;\n    const width = context.colWidth(col);\n    return {\n      template: BOXPLOT,\n      update: (n: HTMLElement, d: IDataRow) => {\n        const data = col.getBoxPlotData(d);\n        if (!data) {\n          n.classList.add(cssClass('missing'));\n          return;\n        }\n        n.classList.remove(cssClass('missing'));\n        const label = col.getRawBoxPlotData(d)!;\n        renderDOMBoxPlot(col, n, data!, label, sortedByMe ? sortMethod : '', colorOf(col, d, imposer));\n      },\n      render: (ctx: CanvasRenderingContext2D, d: IDataRow) => {\n        if (renderMissingCanvas(ctx, col, d, width)) {\n          return;\n        }\n\n        // Rectangle\n        const data = col.getBoxPlotData(d);\n        if (!data) {\n          return;\n        }\n\n        const scaled = {\n          min: data.min * width,\n          median: data.median * width,\n          mean: (<IAdvancedBoxPlotData>data).mean != null ? (<IAdvancedBoxPlotData>data).mean * width : undefined,\n          q1: data.q1 * width,\n          q3: data.q3 * width,\n          max: data.max * width,\n          outlier: data.outlier ? data.outlier.map((d) => d * width) : undefined,\n          whiskerLow: data.whiskerLow != null ? data.whiskerLow * width : undefined,\n          whiskerHigh: data.whiskerHigh != null ? data.whiskerHigh * width : undefined\n        };\n        renderBoxPlot(ctx, scaled, sortedByMe ? sortMethod : '', colorOf(col, d, imposer), CANVAS_HEIGHT, 0);\n      }\n    };\n  }\n\n  createGroup(col: INumberColumn, context: IRenderContext, imposer?: IImposer) {\n    const sort = (col instanceof NumberColumn && col.isGroupSortedByMe().asc !== undefined) ? col.getSortMethod() : '';\n    return {\n      template: BOXPLOT,\n      update: (n: HTMLElement, group: IOrderedGroup) => {\n        return tasksAll([context.tasks.groupBoxPlotStats(col, group, false), context.tasks.groupBoxPlotStats(col, group, true)]).then((data) => {\n          if (typeof data === 'symbol') {\n            return;\n          }\n          // render\n          n.classList.toggle(cssClass('missing'), data === null);\n          if (data === null) {\n            return;\n          }\n          renderDOMBoxPlot(col, n, data[0].group, data[1].group, sort, colorOf(col, null, imposer));\n        });\n      }\n    };\n  }\n\n  createSummary(col: INumberColumn, context: IRenderContext, _interactive: boolean, imposer?: IImposer) {\n    return {\n      template: isMapAbleColumn(col) ? MAPPED_BOXPLOT : BOXPLOT,\n      update: (n: HTMLElement) => {\n        return context.tasks.summaryBoxPlotStats(col).then((data) => {\n          if (typeof data === 'symbol') {\n            return;\n          }\n          const {summary} = data;\n          if (summary == null) {\n            n.classList.add(cssClass('missing'));\n            return;\n          }\n          n.classList.remove(cssClass('missing'));\n          const sort = (col instanceof NumberColumn && col.isGroupSortedByMe().asc !== undefined) ? col.getSortMethod() : '';\n\n          if (isMapAbleColumn(col)) {\n            const range = col.getRange();\n            Array.from(n.getElementsByTagName('span')).forEach((d: HTMLElement, i) => d.textContent = range[i]);\n          }\n\n          renderDOMBoxPlot(col, n, summary, summary, sort, colorOf(col, null, imposer), isMapAbleColumn(col));\n        });\n      }\n    };\n  }\n}\n\nfunction renderDOMBoxPlot(col: INumberColumn, n: HTMLElement, data: IBoxPlotData | IAdvancedBoxPlotData, label: IBoxPlotData | IAdvancedBoxPlotData, sort: string, color: string | null, hasRange: boolean = false) {\n  n.title = computeLabel(col, label);\n\n  const whiskers = <HTMLElement>n.firstElementChild;\n  const box = <HTMLElement>whiskers.firstElementChild;\n  const median = <HTMLElement>box.nextElementSibling;\n  const mean = <HTMLElement>whiskers.lastElementChild;\n\n  const leftWhisker = data.whiskerLow != null ? data.whiskerLow : Math.max(data.q1 - 1.5 * (data.q3 - data.q1), data.min);\n  const rightWhisker = data.whiskerHigh != null ? data.whiskerHigh : Math.min(data.q3 + 1.5 * (data.q3 - data.q1), data.max);\n  whiskers.style.left = `${round(leftWhisker * 100, 2)}%`;\n  const range = rightWhisker - leftWhisker;\n  whiskers.style.width = `${round(range * 100, 2)}%`;\n\n  //relative within the whiskers\n  box.style.left = `${round((data.q1 - leftWhisker) / range * 100, 2)}%`;\n  box.style.width = `${round((data.q3 - data.q1) / range * 100, 2)}%`;\n  box.style.backgroundColor = color;\n\n  //relative within the whiskers\n  median.style.left = `${round((data.median - leftWhisker) / range * 100, 2)}%`;\n  if ((<IAdvancedBoxPlotData>data).mean != null) {\n    mean.style.left = `${round(((<IAdvancedBoxPlotData>data).mean - leftWhisker) / range * 100, 2)}%`;\n    mean.style.display = null;\n  } else {\n    mean.style.display = 'none';\n  }\n\n  // match lengths\n  const outliers = <HTMLElement[]>Array.from(n.children).slice(1, hasRange ? -2 : undefined);\n  const numOutliers = data.outlier ? data.outlier.length : 0;\n  outliers.splice(numOutliers, outliers.length - numOutliers).forEach((v) => v.remove());\n\n  whiskers.dataset.sort = sort;\n\n  if (!data.outlier || numOutliers === 0) {\n    return;\n  }\n\n  for (let i = outliers.length; i < numOutliers; ++i) {\n    const p = n.ownerDocument!.createElement('div');\n    p.classList.add(cssClass('boxplot-outlier'));\n    outliers.unshift(p);\n    whiskers.insertAdjacentElement('afterend', p);\n  }\n\n  data.outlier.forEach((v, i) => {\n    delete outliers[i].dataset.sort;\n    outliers[i].style.left = `${round(v * 100, 2)}%`;\n  });\n\n  if (sort === 'min' && data.outlier[0] <= leftWhisker) {\n    // first outliers is the min\n    whiskers.dataset.sort = '';\n    outliers[0].dataset.sort = 'min';\n    if (outliers.length > 1) {\n      // append at the end of the DOM to be on top\n      outliers[outliers.length - 1].insertAdjacentElement('afterend', outliers[0]);\n    }\n  } else if (sort === 'max' && data.outlier[outliers.length - 1] >= rightWhisker) {\n    // last outlier is the max\n    whiskers.dataset.sort = '';\n    outliers[outliers.length - 1].dataset.sort = 'max';\n  }\n}\n\nfunction renderBoxPlot(ctx: CanvasRenderingContext2D, box: IBoxPlotData, sort: string, color: string | null, height: number, topPadding: number) {\n  const left = box.whiskerLow != null ? box.whiskerLow : Math.max((box.q1 - 1.5 * (box.q3 - box.q1)), box.min);\n  const right = box.whiskerHigh != null ? box.whiskerHigh : Math.min((box.q3 + 1.5 * (box.q3 - box.q1)), box.max);\n\n  ctx.fillStyle = color || BOX_PLOT.box;\n  ctx.strokeStyle = BOX_PLOT.stroke;\n  ctx.beginPath();\n  ctx.rect(box.q1, 0, box.q3 - box.q1, height);\n  ctx.fill();\n  ctx.stroke();\n\n  //Line\n  const bottomPos = height - topPadding;\n  const middlePos = height / 2;\n\n  ctx.beginPath();\n  ctx.moveTo(left, middlePos);\n  ctx.lineTo(box.q1, middlePos);\n  ctx.moveTo(left, topPadding);\n  ctx.lineTo(left, bottomPos);\n  ctx.moveTo(box.median, 0);\n  ctx.lineTo(box.median, height);\n  ctx.moveTo(box.q3, middlePos);\n  ctx.lineTo(right, middlePos);\n  ctx.moveTo(right, topPadding);\n  ctx.lineTo(right, bottomPos);\n  ctx.stroke();\n  ctx.fill();\n\n  if (sort !== '') {\n    ctx.strokeStyle = BOX_PLOT.sort;\n    ctx.beginPath();\n    ctx.moveTo(<number>box[<keyof IBoxPlotData>sort], topPadding);\n    ctx.lineTo(<number>box[<keyof IBoxPlotData>sort], height - topPadding);\n    ctx.stroke();\n    ctx.fill();\n  }\n\n  if (!box.outlier) {\n    return;\n  }\n  ctx.fillStyle = BOX_PLOT.outlier;\n  box.outlier.forEach((v) => {\n    // currently dots with 3px\n    ctx.fillRect(Math.max(v - DOT.size / 2, 0), middlePos - DOT.size / 2, DOT.size, DOT.size);\n  });\n}\n","import {hsl} from 'd3-color';\nimport {Column, isNumbersColumn, IDataRow, INumberColumn, isNumberColumn, isMapAbleColumn, DEFAULT_COLOR, SolidColorFunction} from '../model';\nimport {CANVAS_HEIGHT, cssClass} from '../styles';\nimport {colorOf} from './impose';\nimport {IRenderContext, ERenderMode, ICellRendererFactory, IImposer} from './interfaces';\nimport {renderMissingCanvas, renderMissingDOM} from './missing';\nimport {noRenderer, setText} from './utils';\n\n/** @internal */\nexport function toHeatMapColor(v: number | null, row: IDataRow, col: INumberColumn, imposer?: IImposer) {\n  if (v == null || isNaN(v)) {\n    v = 1; // max = brightest\n  }\n  if (imposer || !isMapAbleColumn(col)) {\n    //hsl space encoding, encode in lightness\n    const color = hsl(colorOf(col, row, imposer, v) || DEFAULT_COLOR);\n    color.l = 1 - v; // largest value = darkest color\n    return color.toString();\n  }\n  const map = col.getColorMapping();\n  const valueColor = map.apply(v);\n  if (map instanceof SolidColorFunction) {\n    //hsl space encoding, encode in lightness\n    const color = hsl(valueColor);\n    color.l = 1 - v; // largest value = darkest color\n    return color.toString();\n  }\n  // some custom logic that maps to another value\n  return valueColor;\n}\n\n/** @internal */\nexport default class BrightnessCellRenderer implements ICellRendererFactory {\n  readonly title = 'Brightness';\n\n  canRender(col: Column, mode: ERenderMode) {\n    return isNumberColumn(col) && mode === ERenderMode.CELL && !isNumbersColumn(col);\n  }\n\n  create(col: INumberColumn, context: IRenderContext, imposer?: IImposer) {\n    const width = context.colWidth(col);\n    return {\n      template: `<div title=\"\">\n        <div class=\"${cssClass('cat-color')}\" style=\"background-color: ${DEFAULT_COLOR}\"></div><div class=\"${cssClass('cat-label')}\"> </div>\n      </div>`,\n      update: (n: HTMLElement, d: IDataRow) => {\n        const missing = renderMissingDOM(n, col, d);\n        n.title = col.getLabel(d);\n        (<HTMLDivElement>n.firstElementChild!).style.backgroundColor = missing ? null : toHeatMapColor(col.getNumber(d), d, col, imposer);\n        setText(<HTMLSpanElement>n.lastElementChild!, n.title);\n      },\n      render: (ctx: CanvasRenderingContext2D, d: IDataRow) => {\n        if (renderMissingCanvas(ctx, col, d, width)) {\n          return;\n        }\n        ctx.fillStyle = toHeatMapColor(col.getNumber(d), d, col, imposer);\n        ctx.fillRect(0, 0, width, CANVAS_HEIGHT);\n      }\n    };\n  }\n\n  createGroup() {\n    return noRenderer;\n  }\n\n  createSummary() {\n    return noRenderer;\n  }\n}\n","import {DENSE_HISTOGRAM} from '../constants';\nimport {ICategoricalStatistics, round} from '../internal';\nimport {OrdinalColumn, isCategoricalColumn, isCategoricalLikeColumn, ICategoricalLikeColumn, ICategory, Column, CategoricalColumn, ICategoricalColumn, IDataRow, IOrderedGroup, SetColumn} from '../model';\nimport {CANVAS_HEIGHT, cssClass, FILTERED_OPACITY} from '../styles';\nimport {filterMissingNumberMarkup, updateFilterMissingNumberMarkup} from '../ui/missing';\nimport {IRenderContext, ICellRendererFactory, ERenderMode} from './interfaces';\nimport {renderMissingCanvas, renderMissingDOM} from './missing';\nimport {setText, wideEnough, forEach} from './utils';\nimport {color} from 'd3-color';\n\n/** @internal */\nexport declare type HasCategoricalFilter = CategoricalColumn | OrdinalColumn | SetColumn;\n\n/** @internal */\nexport default class CategoricalCellRenderer implements ICellRendererFactory {\n  readonly title = 'Color';\n  readonly groupTitle = 'Histogram';\n\n  canRender(col: Column, mode: ERenderMode) {\n    return isCategoricalLikeColumn(col) && (mode !== ERenderMode.CELL || isCategoricalColumn(col));\n  }\n\n  create(col: ICategoricalColumn, context: IRenderContext) {\n    const width = context.colWidth(col);\n    return {\n      template: `<div>\n        <div class=\"${cssClass('cat-color')}\"></div><div class=\"${cssClass('cat-label')}\"></div>\n      </div>`,\n      update: (n: HTMLElement, d: IDataRow) => {\n        renderMissingDOM(n, col, d);\n        const v = col.getCategory(d);\n        (<HTMLDivElement>n.firstElementChild!).style.backgroundColor = v ? col.getColor(d) : null;\n        setText(<HTMLSpanElement>n.lastElementChild!, col.getLabel(d));\n      },\n      render: (ctx: CanvasRenderingContext2D, d: IDataRow) => {\n        if (renderMissingCanvas(ctx, col, d, width)) {\n          return;\n        }\n        const v = col.getCategory(d);\n        ctx.fillStyle = v ? col.getColor(d) : '';\n        ctx.fillRect(0, 0, width, CANVAS_HEIGHT);\n      }\n    };\n  }\n\n  createGroup(col: ICategoricalLikeColumn, context: IRenderContext) {\n    const {template, update} = hist(col, false);\n    return {\n      template: `${template}</div>`,\n      update: (n: HTMLElement, group: IOrderedGroup) => {\n        return context.tasks.groupCategoricalStats(col, group).then((data) => {\n          if (typeof data === 'symbol') {\n            return;\n          }\n          const {group} = data;\n          update(n, group);\n        });\n      }\n    };\n  }\n\n  createSummary(col: ICategoricalLikeColumn, context: IRenderContext, interactive: boolean) {\n    return (col instanceof CategoricalColumn || col instanceof OrdinalColumn || col instanceof SetColumn) ? interactiveSummary(col, context, interactive) : staticSummary(col, context, interactive);\n  }\n}\n\nfunction staticSummary(col: ICategoricalLikeColumn, context: IRenderContext, interactive: boolean) {\n  const {template, update} = hist(col, interactive);\n  return {\n    template: `${template}</div>`,\n    update: (n: HTMLElement) => {\n      return context.tasks.summaryCategoricalStats(col).then((r) => {\n        if (typeof r === 'symbol') {\n          return;\n        }\n        const {summary} = r;\n        n.classList.toggle(cssClass('missing'), !summary);\n        if (!summary) {\n          return;\n        }\n        update(n, summary);\n      });\n    }\n  };\n}\n\nfunction interactiveSummary(col: HasCategoricalFilter, context: IRenderContext, interactive: boolean) {\n  const {template, update} = hist(col, interactive || wideEnough(col));\n  let filterUpdate: (missing: number, col: HasCategoricalFilter) => void;\n  return {\n    template: `${template}${interactive ? filterMissingNumberMarkup(false, 0) : ''}</div>`,\n    update: (n: HTMLElement) => {\n      n.classList.toggle(cssClass('histogram-i'), interactive);\n\n      if (!filterUpdate) {\n        filterUpdate = interactiveHist(col, n);\n      }\n      return context.tasks.summaryCategoricalStats(col).then((r) => {\n        if (typeof r === 'symbol') {\n          return;\n        }\n        const {summary, data} = r;\n        filterUpdate((interactive && data) ? data.missing : (summary ? summary.missing : 0), col);\n\n        n.classList.toggle(cssClass('missing'), !summary);\n        if (!summary) {\n          return;\n        }\n        update(n, summary, interactive ? data : undefined);\n      });\n    }\n  };\n}\n\nfunction hist(col: ICategoricalLikeColumn, showLabels: boolean) {\n  const mapping = col.getColorMapping();\n  const bins = col.categories.map((c) => `<div class=\"${cssClass('histogram-bin')}\" title=\"${c.label}: 0\" data-cat=\"${c.name}\" ${showLabels ? `data-title=\"${c.label}\"` : ''}><div style=\"height: 0; background-color: ${mapping.apply(c)}\"></div></div>`).join('');\n  const template = `<div class=\"${cssClass('histogram')} ${col.categories.length! > DENSE_HISTOGRAM ? cssClass('dense') : ''}\">${bins}`; // no closing div to be able to append things\n\n\n  return {\n    template,\n    update: (n: HTMLElement, hist: ICategoricalStatistics, gHist?: ICategoricalStatistics) => {\n      const mapping = col.getColorMapping();\n\n      const selected = col.categories.map((d) => {\n        const c = color(mapping.apply(d))!;\n        c.opacity = FILTERED_OPACITY;\n        return c.toString();\n      });\n\n      const maxBin = gHist ? gHist.maxBin : hist.maxBin;\n      forEach(n, '[data-cat]', (d: HTMLElement, i) => {\n        const cat = col.categories[i];\n        const {count} = hist.hist[i];\n        const inner = <HTMLElement>d.firstElementChild!;\n        if (gHist) {\n          const {count: gCount} = gHist.hist[i];\n          d.title = `${cat.label}: ${count} of ${gCount}`;\n          inner.style.height = `${round(gCount * 100 / maxBin, 2)}%`;\n          const relY = 100 - round(count * 100 / gCount, 2);\n          inner.style.background = relY === 0 ? mapping.apply(cat) : (relY === 100 ? selected[i] : `linear-gradient(${selected[i]} ${relY}%, ${mapping.apply(cat)} ${relY}%, ${mapping.apply(cat)} 100%)`);\n        } else {\n          d.title = `${col.categories[i].label}: ${count}`;\n          const inner = <HTMLElement>d.firstElementChild!;\n          inner.style.height = `${Math.round(count * 100 / maxBin)}%`;\n          inner.style.background = mapping.apply(cat);\n        }\n      });\n    }\n  };\n}\n\n/** @internal */\nexport function interactiveHist(col: HasCategoricalFilter, node: HTMLElement) {\n  const bins = <HTMLElement[]>Array.from(node.querySelectorAll('[data-cat]'));\n\n  const markFilter = (bin: HTMLElement, cat: ICategory, value: boolean) => {\n    // update filter highlight eagerly for better user feedback\n    const inner = <HTMLElement>bin.firstElementChild!;\n    const base = col.getColorMapping().apply(cat);\n    if (value) {\n      inner.style.background = base;\n      return;\n    }\n    const c = color(base)!;\n    c.opacity = FILTERED_OPACITY;\n    inner.style.background = c.toString();\n  };\n\n  bins.forEach((bin, i) => {\n    const cat = col.categories[i];\n\n    bin.onclick = (evt) => {\n      evt.preventDefault();\n      evt.stopPropagation();\n\n      // toggle filter\n      const old = col.getFilter();\n      if (old == null || !Array.isArray(old.filter)) {\n        // deselect\n        markFilter(bin, cat, false);\n        const included = col.categories.slice();\n        included.splice(i, 1);\n        col.setFilter({\n          filterMissing: old ? old.filterMissing : false,\n          filter: included.map((d) => d.name)\n        });\n        return;\n      }\n      const filter = old.filter.slice();\n      const contained = filter.indexOf(cat.name);\n      if (contained >= 0) {\n        // remove\n        filter.splice(contained, 1);\n        markFilter(bin, cat, false);\n      } else {\n        // readd\n        filter.push(cat.name);\n        markFilter(bin, cat, true);\n      }\n      if (!old.filterMissing && filter.length === col.categories.length) {\n        // dummy filter\n        col.setFilter(null);\n        return;\n      }\n      col.setFilter({\n        filterMissing: old.filterMissing,\n        filter\n      });\n    };\n  });\n\n\n  const filterMissing = <HTMLInputElement>node.getElementsByTagName('input')[0]!;\n\n  if (filterMissing) {\n    filterMissing.onchange = () => {\n      // toggle filter\n      const v = filterMissing.checked;\n      const old = col.getFilter();\n      if (old == null) {\n        col.setFilter(v ? {filterMissing: v, filter: col.categories.map((d) => d.name)} : null);\n      } else if (!v && Array.isArray(old.filter) && old.filter.length === col.categories.length) {\n        // dummy\n        col.setFilter(null);\n      } else {\n        col.setFilter({filterMissing: v, filter: old.filter});\n      }\n    };\n  }\n\n\n  return (missing: number, actCol: HasCategoricalFilter) => {\n    col = actCol;\n    const f = col.getFilter();\n    if (filterMissing) {\n      filterMissing.checked = f != null && f.filterMissing;\n      updateFilterMissingNumberMarkup(<HTMLElement>filterMissing.parentElement, missing);\n    }\n  };\n}\n","import {Column, ICategoricalsColumn, ICategory, IDataRow, IOrderedGroup, isCategoricalsColumn} from '../model';\nimport {toMostFrequentCategoricals} from '../model/internalCategorical';\nimport {CANVAS_HEIGHT, cssClass} from '../styles';\nimport {ICellRendererFactory, IRenderContext} from './interfaces';\nimport {renderMissingDOM, renderMissingValue} from './missing';\nimport {noop, wideEnough} from './utils';\nimport {GUESSED_ROW_HEIGHT} from '../constants';\n\n/** @internal */\nexport default class CategoricalHeatmapCellRenderer implements ICellRendererFactory {\n  readonly title = 'Heatmap';\n\n  canRender(col: Column) {\n    return isCategoricalsColumn(col) && Boolean(col.dataLength);\n  }\n\n  private createContext(col: ICategoricalsColumn, context: IRenderContext) {\n    const width = context.colWidth(col);\n    const cellDimension = width / col.dataLength!;\n    const labels = col.labels;\n    const render = (ctx: CanvasRenderingContext2D, data: (ICategory | null)[], height: number) => {\n      data.forEach((d: ICategory | null, j: number) => {\n        const x = j * cellDimension;\n        if (d == null) {\n          renderMissingValue(ctx, cellDimension, height, x, 0);\n          return;\n        }\n        ctx.fillStyle = d.color;\n        ctx.fillRect(x, 0, cellDimension, height);\n      });\n    };\n    return {\n      template: `<canvas height=\"${GUESSED_ROW_HEIGHT}\" title=\"\"></canvas>`,\n      render,\n      width,\n      mover: (n: HTMLElement, values: string[]) => (evt: MouseEvent) => {\n        const percent = evt.offsetX / width;\n        const index = Math.max(0, Math.min(col.dataLength! - 1, Math.floor(percent * (col.dataLength! - 1) + 0.5)));\n        n.title = `${labels[index]}: ${values[index]}`;\n      }\n    };\n  }\n\n  create(col: ICategoricalsColumn, context: IRenderContext) {\n    const {template, render, mover, width} = this.createContext(col, context);\n\n    return {\n      template,\n      update: (n: HTMLElement, d: IDataRow) => {\n        const ctx = (<HTMLCanvasElement>n).getContext('2d')!;\n        ctx.canvas.width = width;\n        ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n\n        if (renderMissingDOM(n, col, d)) {\n          return;\n        }\n        n.onmousemove = mover(n, col.getLabels(d));\n        n.onmouseleave = () => n.title = '';\n        render(ctx, col.getCategories(d), GUESSED_ROW_HEIGHT);\n      },\n      render: (ctx: CanvasRenderingContext2D, d: IDataRow) => {\n        render(ctx, col.getCategories(d), CANVAS_HEIGHT);\n      }\n    };\n  }\n\n  createGroup(col: ICategoricalsColumn, context: IRenderContext) {\n    const {template, render, mover, width} = this.createContext(col, context);\n\n    return {\n      template,\n      update: (n: HTMLElement, group: IOrderedGroup) => {\n        return context.tasks.groupRows(col, group, this.title, (rows) => toMostFrequentCategoricals(rows, col)).then((data) => {\n          if (typeof data === 'symbol') {\n            return;\n          }\n          const ctx = (<HTMLCanvasElement>n).getContext('2d')!;\n          ctx.canvas.width = width;\n          ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n          n.onmousemove = mover(n, data.map((d) => d ? d.label : 'missing'));\n          n.onmouseleave = () => n.title = '';\n          render(ctx, data, GUESSED_ROW_HEIGHT);\n        });\n      }\n    };\n  }\n\n  createSummary(col: ICategoricalsColumn) {\n    let labels = col.labels.slice();\n    while (labels.length > 0 && !wideEnough(col, labels.length)) {\n      labels = labels.filter((_, i) => i % 2 === 0); // even\n    }\n    let templateRows = `<div class=\"${cssClass('heatmap')}\">`;\n    for (const label of labels) {\n      templateRows += `<div class=\"${cssClass('heatmap-cell')}\"  title=\"${label}\" data-title=\"${label}\"></div>`;\n    }\n    templateRows += '</div>';\n    return {\n      template: templateRows,\n      update: noop\n    };\n  }\n}\n","import {ICategoricalStatistics, round} from '../internal';\nimport {CategoricalColumn, Column, OrdinalColumn, ICategoricalColumn, isCategoricalColumn, IOrderedGroup, ISetColumn, DEFAULT_COLOR} from '../model';\nimport {filterMissingNumberMarkup} from '../ui/missing';\nimport {interactiveHist, HasCategoricalFilter} from './CategoricalCellRenderer';\nimport {IRenderContext, ERenderMode, ICellRendererFactory} from './interfaces';\nimport {noRenderer, adaptTextColorToBgColor} from './utils';\nimport {cssClass, FILTERED_OPACITY} from '../styles';\nimport {color} from 'd3-color';\n\n/** @internal */\nexport default class CategoricalStackedDistributionlCellRenderer implements ICellRendererFactory {\n  readonly title = 'Distribution Bar';\n\n  canRender(col: Column, mode: ERenderMode) {\n    return isCategoricalColumn(col) && mode !== ERenderMode.CELL;\n  }\n\n  create() {\n    return noRenderer;\n  }\n\n  createGroup(col: ICategoricalColumn, context: IRenderContext) {\n    const {template, update} = stackedBar(col);\n    return {\n      template: `${template}</div>`,\n      update: (n: HTMLElement, group: IOrderedGroup) => {\n        return context.tasks.groupCategoricalStats(col, group).then((r) => {\n          if (typeof r === 'symbol') {\n            return;\n          }\n          const {group} = r;\n\n          update(n, group);\n        });\n      }\n    };\n  }\n\n  createSummary(col: ICategoricalColumn, context: IRenderContext, interactive: boolean) {\n    return (col instanceof CategoricalColumn || col instanceof OrdinalColumn) ? interactiveSummary(col, context, interactive) : staticSummary(col, context);\n  }\n}\n\nfunction staticSummary(col: ICategoricalColumn, context: IRenderContext) {\n  const {template, update} = stackedBar(col);\n  return {\n    template: `${template}</div>`,\n    update: (n: HTMLElement) => {\n      return context.tasks.summaryCategoricalStats(col).then((r) => {\n        if (typeof r === 'symbol') {\n          return;\n        }\n        const {summary, data} = r;\n\n        n.classList.toggle(cssClass('missing'), !summary);\n        if (!summary) {\n          return;\n        }\n        update(n, summary, data);\n      });\n    }\n  };\n}\n\nfunction interactiveSummary(col: HasCategoricalFilter, context: IRenderContext, interactive: boolean) {\n  const {template, update} = stackedBar(col);\n  let filterUpdate: (missing: number, col: HasCategoricalFilter) => void;\n  return {\n    template: `${template}${interactive ? filterMissingNumberMarkup(false, 0) : ''}</div>`,\n    update: (n: HTMLElement) => {\n      if (!filterUpdate) {\n        filterUpdate = interactiveHist(col, n);\n      }\n      return context.tasks.summaryCategoricalStats(col).then((r) => {\n        if (typeof r === 'symbol') {\n          return;\n        }\n        const {summary, data} = r;\n\n        const missing = interactive && data ? data.missing : (summary ? summary.missing : 0);\n        filterUpdate(missing, col);\n\n        n.classList.toggle(cssClass('missing'), !summary);\n        if (!summary) {\n          return;\n        }\n        update(n, summary, data);\n      });\n    }\n  };\n}\n\nfunction selectedCol(value: string) {\n  const c = color(value)!;\n  c.opacity = FILTERED_OPACITY;\n  return c.toString();\n}\n\nfunction stackedBar(col: ISetColumn) {\n  const mapping = col.getColorMapping();\n  const cats = col.categories.map((c) => ({\n    label: c.label,\n    name: c.name,\n    color: mapping.apply(c),\n    selected: selectedCol(mapping.apply(c))\n  }));\n  cats.push({label: 'Missing Values', name: 'missing', color: DEFAULT_COLOR, selected: 'transparent'});\n\n  const bins = cats.map((c) => `<div class=\"${cssClass('distribution-bar')}\" style=\"background-color: ${c.color}; color: ${adaptTextColorToBgColor(c.color)}\" title=\"${c.label}: 0\" data-cat=\"${c.name}\"><span>${c.label}</span></div>`).join('');\n\n  return {\n    template: `<div>${bins}`, // no closing div to be able to append things\n    update: (n: HTMLElement, hist: ICategoricalStatistics, gHist?: ICategoricalStatistics) => {\n      const bins: {count: number}[] = hist.hist.slice();\n      bins.push({count: hist.missing});\n      const children = <HTMLElement[]>Array.from(n.children);\n\n      if (!gHist) {\n        const total = bins.reduce((acc, {count}) => acc + count, 0);\n\n        for (let i = 0; i < cats.length; ++i) {\n          const d = children[i];\n          const count = bins[i].count;\n          const label = cats[i].label;\n          d.style.flexGrow = `${round(total === 0 ? 0 : count, 2)}`;\n          d.title = `${label}: ${count}`;\n        }\n        return;\n      }\n\n      const gBins: {count: number}[] = gHist.hist.slice();\n      gBins.push({count: gHist.missing});\n      const total = gBins.reduce((acc, {count}) => acc + count, 9);\n\n      for (let i = 0; i < cats.length; ++i) {\n        const d = children[i];\n        const count = bins[i].count;\n        const label = cats[i].label;\n        const gCount = gBins[i].count;\n\n        d.style.flexGrow = `${round(total === 0 ? 0 : gCount, 2)}`;\n        d.title = `${label}: ${count} of ${gCount}`;\n        const relY = 100 - round(count * 100 / gCount, 2);\n        d.style.background = relY === 0 ? cats[i].color : (relY === 100 ? cats[i].selected : `linear-gradient(${cats[i].selected} ${relY}%, ${cats[i].color} ${relY}%, ${cats[i].color} 100%)`);\n      }\n    }\n  };\n}\n","import {Column, isNumbersColumn, IDataRow, INumberColumn, isNumberColumn} from '../model';\nimport {colorOf} from './impose';\nimport {IRenderContext, ERenderMode, ICellRendererFactory, IImposer} from './interfaces';\nimport {renderMissingDOM} from './missing';\nimport {noRenderer, setText} from './utils';\nimport {cssClass} from '../styles';\n\n/** @internal */\nexport default class CircleCellRenderer implements ICellRendererFactory {\n  readonly title = 'Proportional Symbol';\n\n  canRender(col: Column, mode: ERenderMode) {\n    return isNumberColumn(col) && mode === ERenderMode.CELL && !isNumbersColumn(col);\n  }\n\n  create(col: INumberColumn, _context: IRenderContext, imposer?: IImposer) {\n    return {\n      template: `<div style=\"background: radial-gradient(circle closest-side, red 100%, transparent 100%)\" title=\"\">\n              <div class=\"${cssClass('hover-only')} ${cssClass('bar-label')}\"></div>\n          </div>`,\n      update: (n: HTMLElement, d: IDataRow) => {\n        const v = col.getNumber(d);\n        const p = Math.round(v * 100);\n        const missing = renderMissingDOM(n, col, d);\n        n.style.background = missing ? null : `radial-gradient(circle closest-side, ${colorOf(col, d, imposer)} ${p}%, transparent ${p}%)`;\n        setText(n.firstElementChild!, col.getLabel(d));\n      }\n    };\n  }\n\n  createGroup() {\n    return noRenderer;\n  }\n\n  createSummary() {\n    return noRenderer;\n  }\n}\n","import {GUESSES_GROUP_HEIGHT} from '../constants';\nimport {concatSeq, ISequence, round} from '../internal';\nimport {Column, DEFAULT_COLOR, IDataRow, INumberColumn, IOrderedGroup, isNumberColumn, isNumbersColumn} from '../model';\nimport {CANVAS_HEIGHT, DOT} from '../styles';\nimport {colorOf} from './impose';\nimport {ERenderMode, ICellRendererFactory, IImposer, IRenderContext} from './interfaces';\nimport {renderMissingCanvas, renderMissingDOM} from './missing';\nimport {noRenderer} from './utils';\n\n\n\n/** @internal */\nexport default class DotCellRenderer implements ICellRendererFactory {\n  readonly title = 'Dot';\n  readonly groupTitle = 'Dots';\n\n  canRender(col: Column, mode: ERenderMode) {\n    return isNumberColumn(col) && mode !== ERenderMode.SUMMARY;\n  }\n\n  private static getCanvasRenderer(col: INumberColumn, context: IRenderContext) {\n    const width = context.colWidth(col);\n    const pi2 = Math.PI * 2;\n    const radius = DOT.size / 2;\n    const render = (ctx: CanvasRenderingContext2D, vs: {value: number, color: (string | null)}[], width: number) => {\n      ctx.save();\n      ctx.globalAlpha = DOT.opacity;\n      for (const v of vs) {\n        ctx.fillStyle = v.color || DOT.color;\n        const x = Math.min(width - radius, Math.max(radius, v.value * width));\n        const y = round(Math.random() * (GUESSES_GROUP_HEIGHT - DOT.size) + radius, 2);\n        ctx.beginPath();\n        ctx.moveTo(x + radius, y);\n        ctx.arc(x, y, radius, 0, pi2, true);\n        ctx.fill();\n      }\n      ctx.restore();\n    };\n    return {\n      template: `<canvas height=\"${GUESSES_GROUP_HEIGHT}\"></canvas>`,\n      render,\n      width\n    };\n  }\n\n  private static getDOMRenderer(col: INumberColumn) {\n    const dots = isNumbersColumn(col) ? col.dataLength! : 1;\n    let tmp = '';\n    for (let i = 0; i < dots; ++i) {\n      tmp += `<div style='background-color: ${DEFAULT_COLOR}' title=''></div>`;\n    }\n\n    const update = (n: HTMLElement, data: ISequence<{value: number, label: string, color: string | null}>) => {\n      //adapt the number of children\n      const l = data.length;\n      if (n.children.length !== l) {\n        n.innerHTML = data.reduce((tmp, r) => {\n          return `${tmp}<div style='background-color: ${r.color}' title='${r.label}'></div>`;\n        }, '');\n      }\n      const children = n.children;\n      data.forEach((v, i) => {\n        const d = <HTMLElement>children[i];\n        d.title = v.label;\n        d.style.display = isNaN(v.value) ? 'none' : null;\n        d.style.left = `${round(v.value * 100, 2)}%`;\n        // jitter\n        d.style.top = l > 1 ? `${round(Math.random() * 80 + 10, 2)}%` : null;\n        d.style.backgroundColor = v.color;\n      });\n    };\n\n    const render = (ctx: CanvasRenderingContext2D, vs: number[], colors: (string | null)[], width: number) => {\n      ctx.save();\n      ctx.globalAlpha = DOT.opacity;\n      vs.forEach((v, i) => {\n        ctx.fillStyle = colors[i] || DOT.color;\n        ctx.fillRect(Math.max(0, v * width - DOT.size / 2), 0, DOT.size, CANVAS_HEIGHT);\n      });\n      ctx.restore();\n    };\n\n    return {template: `<div>${tmp}</div>`, update, render};\n  }\n\n  create(col: INumberColumn, context: IRenderContext, imposer?: IImposer) {\n    const {template, render, update} = DotCellRenderer.getDOMRenderer(col);\n    const width = context.colWidth(col);\n    const formatter = col.getNumberFormat();\n    return {\n      template,\n      update: (n: HTMLElement, d: IDataRow) => {\n        if (renderMissingDOM(n, col, d)) {\n          return;\n        }\n        const color = colorOf(col, d, imposer);\n        if (!isNumbersColumn(col)) {\n          const v = col.getNumber(d);\n          return update(n, [{value: v, label: col.getLabel(d), color}]);\n        }\n        const data = col.getNumbers(d).filter((vi: number) => !isNaN(vi)).map((value) => ({value, label: formatter(value), color}));\n        return update(n, data);\n      },\n      render: (ctx: CanvasRenderingContext2D, d: IDataRow) => {\n        if (renderMissingCanvas(ctx, col, d, width)) {\n          return;\n        }\n        const color = colorOf(col, d, imposer);\n        if (!isNumbersColumn(col)) {\n          const v = col.getNumber(d);\n          return render(ctx, [v], [color], width);\n        }\n        const vs: number[] = col.getNumbers(d).filter((vi: number) => !isNaN(vi));\n        return render(ctx, vs, vs.map((_: any) => color), width);\n      }\n    };\n  }\n\n  createGroup(col: INumberColumn, context: IRenderContext, imposer?: IImposer) {\n    const {template, render, width} = DotCellRenderer.getCanvasRenderer(col, context);\n\n    return {\n      template,\n      update: (n: HTMLElement, group: IOrderedGroup) => {\n        return context.tasks.groupRows(col, group, 'dot', (rows) => {\n          //value, color, label,\n\n          if (!isNumbersColumn(col)) {\n            return Array.from(rows.map((r) => ({value: col.getNumber(r), color: colorOf(col, r, imposer)})));\n          }\n          // concatenate all columns\n          const vs = rows.map((r) => {\n            const color = colorOf(col, r, imposer);\n            return col.getNumbers(r)\n              .filter((vi: number) => !isNaN(vi))\n              .map((value) => ({value, color}));\n          });\n          return Array.from(concatSeq(vs));\n        }).then((data) => {\n          if (typeof data === 'symbol') {\n            return;\n          }\n          const ctx = (<HTMLCanvasElement>n).getContext('2d')!;\n          ctx.canvas.width = width;\n          ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n          render(ctx, data, width);\n        });\n      }\n    };\n  }\n\n  createSummary() {\n    return noRenderer;\n  }\n}\n","import {Column, GroupColumn, IOrderedGroup, IGroup, defaultGroup, IDataRow} from '../model';\nimport {ICellRendererFactory} from './interfaces';\nimport {noRenderer} from './utils';\n\n\nfunction isDummyGroup(group: IGroup) {\n  return group.parent == null && group.name === defaultGroup.name;\n}\n\n/** @internal */\nexport default class GroupCellRenderer implements ICellRendererFactory {\n  readonly title = 'Default';\n\n  canRender(col: Column) {\n    return col instanceof GroupColumn;\n  }\n\n  create() {\n    return {\n      template: `<div><div></div></div>`,\n      update(node: HTMLElement, _row: IDataRow, i: number, group: IOrderedGroup) {\n        (<HTMLElement>node.firstElementChild!).textContent = isDummyGroup(group) || i > 0 ? '' : `${group.name} (${group.order.length})`;\n      },\n      render(_ctx: CanvasRenderingContext2D, _row: IDataRow, i: number) {\n        return i === 0;\n      }\n    };\n  }\n\n  createGroup() {\n    return {\n      template: `<div><div></div></div>`,\n      update(node: HTMLElement, group: IOrderedGroup) {\n        (<HTMLElement>node.firstElementChild!).textContent = isDummyGroup(group) ? '' : `${group.name} (${group.order.length})`;\n      }\n    };\n  }\n\n  createSummary() {\n    return noRenderer;\n  }\n}\n","import {IDataRow, INumbersColumn, EAdvancedSortMethod, IOrderedGroup} from '../model';\nimport {IRenderContext, IImposer} from './interfaces';\nimport {renderMissingCanvas, renderMissingDOM} from './missing';\nimport {ISequence, boxplotBuilder} from '../internal';\n\n/** @internal */\nexport abstract class ANumbersCellRenderer {\n  abstract readonly title: string;\n\n  protected abstract createContext(col: INumbersColumn, context: IRenderContext, imposer?: IImposer): {\n    clazz: string,\n    templateRow: string,\n    update: (row: HTMLElement, data: number[], raw: number[], d: IDataRow) => void,\n    render: (ctx: CanvasRenderingContext2D, data: number[], d: IDataRow) => void,\n  };\n\n  static choose(col: INumbersColumn, rows: ISequence<IDataRow>) {\n    let row: IDataRow | null = null;\n    const data = rows.map((r, i) => {\n      if (i === 0) {\n        row = r;\n      }\n      return {n: col.getNumbers(r), raw: col.getRawNumbers(r)};\n    });\n    const cols = col.dataLength!;\n    const normalized = <number[]>[];\n    const raw = <number[]>[];\n    // mean column)\n    for (let i = 0; i < cols; ++i) {\n      const vs = data.map((d) => ({n: d.n[i], raw: d.raw[i]})).filter((d) => !isNaN(d.n));\n      if (vs.length === 0) {\n        normalized.push(NaN);\n        raw.push(NaN);\n      } else {\n        const bbn = boxplotBuilder();\n        const bbr = boxplotBuilder();\n        const s: EAdvancedSortMethod = <any>col.getSortMethod();\n        vs.forEach((d) => {\n          bbn.push(d.n);\n          bbr.push(d.raw);\n        });\n        normalized.push(bbn.build()[s]!);\n        raw.push(bbr.build()[s]!);\n      }\n    }\n    return {normalized, raw, row};\n  }\n\n  create(col: INumbersColumn, context: IRenderContext, imposer?: IImposer) {\n    const width = context.colWidth(col);\n    const {templateRow, render, update, clazz} = this.createContext(col, context, imposer);\n    return {\n      template: `<div class=\"${clazz}\">${templateRow}</div>`,\n      update: (n: HTMLElement, d: IDataRow) => {\n        if (renderMissingDOM(n, col, d)) {\n          return;\n        }\n        update(n, col.getNumbers(d), col.getRawNumbers(d), d);\n      },\n      render: (ctx: CanvasRenderingContext2D, d: IDataRow) => {\n        if (renderMissingCanvas(ctx, col, d, width)) {\n          return;\n        }\n        render(ctx, col.getNumbers(d), d);\n      },\n    };\n  }\n\n  createGroup(col: INumbersColumn, context: IRenderContext, imposer?: IImposer) {\n    const {templateRow, update, clazz} = this.createContext(col, context, imposer);\n    return {\n      template: `<div class=\"${clazz}\">${templateRow}</div>`,\n      update: (n: HTMLDivElement, group: IOrderedGroup) => {\n        // render a heatmap\n        return context.tasks.groupRows(col, group, this.title, (rows) => ANumbersCellRenderer.choose(col, rows)).then((data) => {\n          if (typeof data !== 'symbol') {\n            update(n, data.normalized, data.raw, data.row!);\n          }\n        });\n      }\n    };\n  }\n}\n\n/** @internal */\nexport function matchRows(n: HTMLElement | SVGElement, length: number, template: string) {\n  // first match the number of rows\n  const children = <(HTMLElement | SVGElement)[]>Array.from(n.children);\n  if (children.length > length) {\n    children.slice(length).forEach((c) => c.remove());\n  } else if (length > children.length) {\n    n.insertAdjacentHTML('beforeend', template.repeat(length - children.length));\n  }\n}\n","/**!\n * @fileOverview Kickass library to create and place poppers near their reference elements.\n * @version 1.15.0\n * @license\n * Copyright (c) 2016 Federico Zivolo and contributors\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined';\n\nvar longerTimeoutBrowsers = ['Edge', 'Trident', 'Firefox'];\nvar timeoutDuration = 0;\nfor (var i = 0; i < longerTimeoutBrowsers.length; i += 1) {\n  if (isBrowser && navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0) {\n    timeoutDuration = 1;\n    break;\n  }\n}\n\nfunction microtaskDebounce(fn) {\n  var called = false;\n  return function () {\n    if (called) {\n      return;\n    }\n    called = true;\n    window.Promise.resolve().then(function () {\n      called = false;\n      fn();\n    });\n  };\n}\n\nfunction taskDebounce(fn) {\n  var scheduled = false;\n  return function () {\n    if (!scheduled) {\n      scheduled = true;\n      setTimeout(function () {\n        scheduled = false;\n        fn();\n      }, timeoutDuration);\n    }\n  };\n}\n\nvar supportsMicroTasks = isBrowser && window.Promise;\n\n/**\n* Create a debounced version of a method, that's asynchronously deferred\n* but called in the minimum time possible.\n*\n* @method\n* @memberof Popper.Utils\n* @argument {Function} fn\n* @returns {Function}\n*/\nvar debounce = supportsMicroTasks ? microtaskDebounce : taskDebounce;\n\n/**\n * Check if the given variable is a function\n * @method\n * @memberof Popper.Utils\n * @argument {Any} functionToCheck - variable to check\n * @returns {Boolean} answer to: is a function?\n */\nfunction isFunction(functionToCheck) {\n  var getType = {};\n  return functionToCheck && getType.toString.call(functionToCheck) === '[object Function]';\n}\n\n/**\n * Get CSS computed property of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Eement} element\n * @argument {String} property\n */\nfunction getStyleComputedProperty(element, property) {\n  if (element.nodeType !== 1) {\n    return [];\n  }\n  // NOTE: 1 DOM access here\n  var window = element.ownerDocument.defaultView;\n  var css = window.getComputedStyle(element, null);\n  return property ? css[property] : css;\n}\n\n/**\n * Returns the parentNode or the host of the element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} parent\n */\nfunction getParentNode(element) {\n  if (element.nodeName === 'HTML') {\n    return element;\n  }\n  return element.parentNode || element.host;\n}\n\n/**\n * Returns the scrolling parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} scroll parent\n */\nfunction getScrollParent(element) {\n  // Return body, `getScroll` will take care to get the correct `scrollTop` from it\n  if (!element) {\n    return document.body;\n  }\n\n  switch (element.nodeName) {\n    case 'HTML':\n    case 'BODY':\n      return element.ownerDocument.body;\n    case '#document':\n      return element.body;\n  }\n\n  // Firefox want us to check `-x` and `-y` variations as well\n\n  var _getStyleComputedProp = getStyleComputedProperty(element),\n      overflow = _getStyleComputedProp.overflow,\n      overflowX = _getStyleComputedProp.overflowX,\n      overflowY = _getStyleComputedProp.overflowY;\n\n  if (/(auto|scroll|overlay)/.test(overflow + overflowY + overflowX)) {\n    return element;\n  }\n\n  return getScrollParent(getParentNode(element));\n}\n\nvar isIE11 = isBrowser && !!(window.MSInputMethodContext && document.documentMode);\nvar isIE10 = isBrowser && /MSIE 10/.test(navigator.userAgent);\n\n/**\n * Determines if the browser is Internet Explorer\n * @method\n * @memberof Popper.Utils\n * @param {Number} version to check\n * @returns {Boolean} isIE\n */\nfunction isIE(version) {\n  if (version === 11) {\n    return isIE11;\n  }\n  if (version === 10) {\n    return isIE10;\n  }\n  return isIE11 || isIE10;\n}\n\n/**\n * Returns the offset parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} offset parent\n */\nfunction getOffsetParent(element) {\n  if (!element) {\n    return document.documentElement;\n  }\n\n  var noOffsetParent = isIE(10) ? document.body : null;\n\n  // NOTE: 1 DOM access here\n  var offsetParent = element.offsetParent || null;\n  // Skip hidden elements which don't have an offsetParent\n  while (offsetParent === noOffsetParent && element.nextElementSibling) {\n    offsetParent = (element = element.nextElementSibling).offsetParent;\n  }\n\n  var nodeName = offsetParent && offsetParent.nodeName;\n\n  if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {\n    return element ? element.ownerDocument.documentElement : document.documentElement;\n  }\n\n  // .offsetParent will return the closest TH, TD or TABLE in case\n  // no offsetParent is present, I hate this job...\n  if (['TH', 'TD', 'TABLE'].indexOf(offsetParent.nodeName) !== -1 && getStyleComputedProperty(offsetParent, 'position') === 'static') {\n    return getOffsetParent(offsetParent);\n  }\n\n  return offsetParent;\n}\n\nfunction isOffsetContainer(element) {\n  var nodeName = element.nodeName;\n\n  if (nodeName === 'BODY') {\n    return false;\n  }\n  return nodeName === 'HTML' || getOffsetParent(element.firstElementChild) === element;\n}\n\n/**\n * Finds the root node (document, shadowDOM root) of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} node\n * @returns {Element} root node\n */\nfunction getRoot(node) {\n  if (node.parentNode !== null) {\n    return getRoot(node.parentNode);\n  }\n\n  return node;\n}\n\n/**\n * Finds the offset parent common to the two provided nodes\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element1\n * @argument {Element} element2\n * @returns {Element} common offset parent\n */\nfunction findCommonOffsetParent(element1, element2) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n  if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {\n    return document.documentElement;\n  }\n\n  // Here we make sure to give as \"start\" the element that comes first in the DOM\n  var order = element1.compareDocumentPosition(element2) & Node.DOCUMENT_POSITION_FOLLOWING;\n  var start = order ? element1 : element2;\n  var end = order ? element2 : element1;\n\n  // Get common ancestor container\n  var range = document.createRange();\n  range.setStart(start, 0);\n  range.setEnd(end, 0);\n  var commonAncestorContainer = range.commonAncestorContainer;\n\n  // Both nodes are inside #document\n\n  if (element1 !== commonAncestorContainer && element2 !== commonAncestorContainer || start.contains(end)) {\n    if (isOffsetContainer(commonAncestorContainer)) {\n      return commonAncestorContainer;\n    }\n\n    return getOffsetParent(commonAncestorContainer);\n  }\n\n  // one of the nodes is inside shadowDOM, find which one\n  var element1root = getRoot(element1);\n  if (element1root.host) {\n    return findCommonOffsetParent(element1root.host, element2);\n  } else {\n    return findCommonOffsetParent(element1, getRoot(element2).host);\n  }\n}\n\n/**\n * Gets the scroll value of the given element in the given side (top and left)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {String} side `top` or `left`\n * @returns {number} amount of scrolled pixels\n */\nfunction getScroll(element) {\n  var side = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'top';\n\n  var upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';\n  var nodeName = element.nodeName;\n\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    var html = element.ownerDocument.documentElement;\n    var scrollingElement = element.ownerDocument.scrollingElement || html;\n    return scrollingElement[upperSide];\n  }\n\n  return element[upperSide];\n}\n\n/*\n * Sum or subtract the element scroll values (left and top) from a given rect object\n * @method\n * @memberof Popper.Utils\n * @param {Object} rect - Rect object you want to change\n * @param {HTMLElement} element - The element from the function reads the scroll values\n * @param {Boolean} subtract - set to true if you want to subtract the scroll values\n * @return {Object} rect - The modifier rect object\n */\nfunction includeScroll(rect, element) {\n  var subtract = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n  var scrollTop = getScroll(element, 'top');\n  var scrollLeft = getScroll(element, 'left');\n  var modifier = subtract ? -1 : 1;\n  rect.top += scrollTop * modifier;\n  rect.bottom += scrollTop * modifier;\n  rect.left += scrollLeft * modifier;\n  rect.right += scrollLeft * modifier;\n  return rect;\n}\n\n/*\n * Helper to detect borders of a given element\n * @method\n * @memberof Popper.Utils\n * @param {CSSStyleDeclaration} styles\n * Result of `getStyleComputedProperty` on the given element\n * @param {String} axis - `x` or `y`\n * @return {number} borders - The borders size of the given axis\n */\n\nfunction getBordersSize(styles, axis) {\n  var sideA = axis === 'x' ? 'Left' : 'Top';\n  var sideB = sideA === 'Left' ? 'Right' : 'Bottom';\n\n  return parseFloat(styles['border' + sideA + 'Width'], 10) + parseFloat(styles['border' + sideB + 'Width'], 10);\n}\n\nfunction getSize(axis, body, html, computedStyle) {\n  return Math.max(body['offset' + axis], body['scroll' + axis], html['client' + axis], html['offset' + axis], html['scroll' + axis], isIE(10) ? parseInt(html['offset' + axis]) + parseInt(computedStyle['margin' + (axis === 'Height' ? 'Top' : 'Left')]) + parseInt(computedStyle['margin' + (axis === 'Height' ? 'Bottom' : 'Right')]) : 0);\n}\n\nfunction getWindowSizes(document) {\n  var body = document.body;\n  var html = document.documentElement;\n  var computedStyle = isIE(10) && getComputedStyle(html);\n\n  return {\n    height: getSize('Height', body, html, computedStyle),\n    width: getSize('Width', body, html, computedStyle)\n  };\n}\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n\n\n\n\nvar defineProperty = function (obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n};\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\n/**\n * Given element offsets, generate an output similar to getBoundingClientRect\n * @method\n * @memberof Popper.Utils\n * @argument {Object} offsets\n * @returns {Object} ClientRect like output\n */\nfunction getClientRect(offsets) {\n  return _extends({}, offsets, {\n    right: offsets.left + offsets.width,\n    bottom: offsets.top + offsets.height\n  });\n}\n\n/**\n * Get bounding client rect of given element\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} element\n * @return {Object} client rect\n */\nfunction getBoundingClientRect(element) {\n  var rect = {};\n\n  // IE10 10 FIX: Please, don't ask, the element isn't\n  // considered in DOM in some circumstances...\n  // This isn't reproducible in IE10 compatibility mode of IE11\n  try {\n    if (isIE(10)) {\n      rect = element.getBoundingClientRect();\n      var scrollTop = getScroll(element, 'top');\n      var scrollLeft = getScroll(element, 'left');\n      rect.top += scrollTop;\n      rect.left += scrollLeft;\n      rect.bottom += scrollTop;\n      rect.right += scrollLeft;\n    } else {\n      rect = element.getBoundingClientRect();\n    }\n  } catch (e) {}\n\n  var result = {\n    left: rect.left,\n    top: rect.top,\n    width: rect.right - rect.left,\n    height: rect.bottom - rect.top\n  };\n\n  // subtract scrollbar size from sizes\n  var sizes = element.nodeName === 'HTML' ? getWindowSizes(element.ownerDocument) : {};\n  var width = sizes.width || element.clientWidth || result.right - result.left;\n  var height = sizes.height || element.clientHeight || result.bottom - result.top;\n\n  var horizScrollbar = element.offsetWidth - width;\n  var vertScrollbar = element.offsetHeight - height;\n\n  // if an hypothetical scrollbar is detected, we must be sure it's not a `border`\n  // we make this check conditional for performance reasons\n  if (horizScrollbar || vertScrollbar) {\n    var styles = getStyleComputedProperty(element);\n    horizScrollbar -= getBordersSize(styles, 'x');\n    vertScrollbar -= getBordersSize(styles, 'y');\n\n    result.width -= horizScrollbar;\n    result.height -= vertScrollbar;\n  }\n\n  return getClientRect(result);\n}\n\nfunction getOffsetRectRelativeToArbitraryNode(children, parent) {\n  var fixedPosition = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n  var isIE10 = isIE(10);\n  var isHTML = parent.nodeName === 'HTML';\n  var childrenRect = getBoundingClientRect(children);\n  var parentRect = getBoundingClientRect(parent);\n  var scrollParent = getScrollParent(children);\n\n  var styles = getStyleComputedProperty(parent);\n  var borderTopWidth = parseFloat(styles.borderTopWidth, 10);\n  var borderLeftWidth = parseFloat(styles.borderLeftWidth, 10);\n\n  // In cases where the parent is fixed, we must ignore negative scroll in offset calc\n  if (fixedPosition && isHTML) {\n    parentRect.top = Math.max(parentRect.top, 0);\n    parentRect.left = Math.max(parentRect.left, 0);\n  }\n  var offsets = getClientRect({\n    top: childrenRect.top - parentRect.top - borderTopWidth,\n    left: childrenRect.left - parentRect.left - borderLeftWidth,\n    width: childrenRect.width,\n    height: childrenRect.height\n  });\n  offsets.marginTop = 0;\n  offsets.marginLeft = 0;\n\n  // Subtract margins of documentElement in case it's being used as parent\n  // we do this only on HTML because it's the only element that behaves\n  // differently when margins are applied to it. The margins are included in\n  // the box of the documentElement, in the other cases not.\n  if (!isIE10 && isHTML) {\n    var marginTop = parseFloat(styles.marginTop, 10);\n    var marginLeft = parseFloat(styles.marginLeft, 10);\n\n    offsets.top -= borderTopWidth - marginTop;\n    offsets.bottom -= borderTopWidth - marginTop;\n    offsets.left -= borderLeftWidth - marginLeft;\n    offsets.right -= borderLeftWidth - marginLeft;\n\n    // Attach marginTop and marginLeft because in some circumstances we may need them\n    offsets.marginTop = marginTop;\n    offsets.marginLeft = marginLeft;\n  }\n\n  if (isIE10 && !fixedPosition ? parent.contains(scrollParent) : parent === scrollParent && scrollParent.nodeName !== 'BODY') {\n    offsets = includeScroll(offsets, parent);\n  }\n\n  return offsets;\n}\n\nfunction getViewportOffsetRectRelativeToArtbitraryNode(element) {\n  var excludeScroll = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  var html = element.ownerDocument.documentElement;\n  var relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);\n  var width = Math.max(html.clientWidth, window.innerWidth || 0);\n  var height = Math.max(html.clientHeight, window.innerHeight || 0);\n\n  var scrollTop = !excludeScroll ? getScroll(html) : 0;\n  var scrollLeft = !excludeScroll ? getScroll(html, 'left') : 0;\n\n  var offset = {\n    top: scrollTop - relativeOffset.top + relativeOffset.marginTop,\n    left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft,\n    width: width,\n    height: height\n  };\n\n  return getClientRect(offset);\n}\n\n/**\n * Check if the given element is fixed or is inside a fixed parent\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {Element} customContainer\n * @returns {Boolean} answer to \"isFixed?\"\n */\nfunction isFixed(element) {\n  var nodeName = element.nodeName;\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    return false;\n  }\n  if (getStyleComputedProperty(element, 'position') === 'fixed') {\n    return true;\n  }\n  var parentNode = getParentNode(element);\n  if (!parentNode) {\n    return false;\n  }\n  return isFixed(parentNode);\n}\n\n/**\n * Finds the first parent of an element that has a transformed property defined\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} first transformed parent or documentElement\n */\n\nfunction getFixedPositionOffsetParent(element) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n  if (!element || !element.parentElement || isIE()) {\n    return document.documentElement;\n  }\n  var el = element.parentElement;\n  while (el && getStyleComputedProperty(el, 'transform') === 'none') {\n    el = el.parentElement;\n  }\n  return el || document.documentElement;\n}\n\n/**\n * Computed the boundaries limits and return them\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} popper\n * @param {HTMLElement} reference\n * @param {number} padding\n * @param {HTMLElement} boundariesElement - Element used to define the boundaries\n * @param {Boolean} fixedPosition - Is in fixed position mode\n * @returns {Object} Coordinates of the boundaries\n */\nfunction getBoundaries(popper, reference, padding, boundariesElement) {\n  var fixedPosition = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n\n  // NOTE: 1 DOM access here\n\n  var boundaries = { top: 0, left: 0 };\n  var offsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, reference);\n\n  // Handle viewport case\n  if (boundariesElement === 'viewport') {\n    boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent, fixedPosition);\n  } else {\n    // Handle other cases based on DOM element used as boundaries\n    var boundariesNode = void 0;\n    if (boundariesElement === 'scrollParent') {\n      boundariesNode = getScrollParent(getParentNode(reference));\n      if (boundariesNode.nodeName === 'BODY') {\n        boundariesNode = popper.ownerDocument.documentElement;\n      }\n    } else if (boundariesElement === 'window') {\n      boundariesNode = popper.ownerDocument.documentElement;\n    } else {\n      boundariesNode = boundariesElement;\n    }\n\n    var offsets = getOffsetRectRelativeToArbitraryNode(boundariesNode, offsetParent, fixedPosition);\n\n    // In case of HTML, we need a different computation\n    if (boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) {\n      var _getWindowSizes = getWindowSizes(popper.ownerDocument),\n          height = _getWindowSizes.height,\n          width = _getWindowSizes.width;\n\n      boundaries.top += offsets.top - offsets.marginTop;\n      boundaries.bottom = height + offsets.top;\n      boundaries.left += offsets.left - offsets.marginLeft;\n      boundaries.right = width + offsets.left;\n    } else {\n      // for all the other DOM elements, this one is good\n      boundaries = offsets;\n    }\n  }\n\n  // Add paddings\n  padding = padding || 0;\n  var isPaddingNumber = typeof padding === 'number';\n  boundaries.left += isPaddingNumber ? padding : padding.left || 0;\n  boundaries.top += isPaddingNumber ? padding : padding.top || 0;\n  boundaries.right -= isPaddingNumber ? padding : padding.right || 0;\n  boundaries.bottom -= isPaddingNumber ? padding : padding.bottom || 0;\n\n  return boundaries;\n}\n\nfunction getArea(_ref) {\n  var width = _ref.width,\n      height = _ref.height;\n\n  return width * height;\n}\n\n/**\n * Utility used to transform the `auto` placement to the placement with more\n * available space.\n * @method\n * @memberof Popper.Utils\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction computeAutoPlacement(placement, refRect, popper, reference, boundariesElement) {\n  var padding = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n\n  if (placement.indexOf('auto') === -1) {\n    return placement;\n  }\n\n  var boundaries = getBoundaries(popper, reference, padding, boundariesElement);\n\n  var rects = {\n    top: {\n      width: boundaries.width,\n      height: refRect.top - boundaries.top\n    },\n    right: {\n      width: boundaries.right - refRect.right,\n      height: boundaries.height\n    },\n    bottom: {\n      width: boundaries.width,\n      height: boundaries.bottom - refRect.bottom\n    },\n    left: {\n      width: refRect.left - boundaries.left,\n      height: boundaries.height\n    }\n  };\n\n  var sortedAreas = Object.keys(rects).map(function (key) {\n    return _extends({\n      key: key\n    }, rects[key], {\n      area: getArea(rects[key])\n    });\n  }).sort(function (a, b) {\n    return b.area - a.area;\n  });\n\n  var filteredAreas = sortedAreas.filter(function (_ref2) {\n    var width = _ref2.width,\n        height = _ref2.height;\n    return width >= popper.clientWidth && height >= popper.clientHeight;\n  });\n\n  var computedPlacement = filteredAreas.length > 0 ? filteredAreas[0].key : sortedAreas[0].key;\n\n  var variation = placement.split('-')[1];\n\n  return computedPlacement + (variation ? '-' + variation : '');\n}\n\n/**\n * Get offsets to the reference element\n * @method\n * @memberof Popper.Utils\n * @param {Object} state\n * @param {Element} popper - the popper element\n * @param {Element} reference - the reference element (the popper will be relative to this)\n * @param {Element} fixedPosition - is in fixed position mode\n * @returns {Object} An object containing the offsets which will be applied to the popper\n */\nfunction getReferenceOffsets(state, popper, reference) {\n  var fixedPosition = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\n  var commonOffsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, reference);\n  return getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent, fixedPosition);\n}\n\n/**\n * Get the outer sizes of the given element (offset size + margins)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Object} object containing width and height properties\n */\nfunction getOuterSizes(element) {\n  var window = element.ownerDocument.defaultView;\n  var styles = window.getComputedStyle(element);\n  var x = parseFloat(styles.marginTop || 0) + parseFloat(styles.marginBottom || 0);\n  var y = parseFloat(styles.marginLeft || 0) + parseFloat(styles.marginRight || 0);\n  var result = {\n    width: element.offsetWidth + y,\n    height: element.offsetHeight + x\n  };\n  return result;\n}\n\n/**\n * Get the opposite placement of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement\n * @returns {String} flipped placement\n */\nfunction getOppositePlacement(placement) {\n  var hash = { left: 'right', right: 'left', bottom: 'top', top: 'bottom' };\n  return placement.replace(/left|right|bottom|top/g, function (matched) {\n    return hash[matched];\n  });\n}\n\n/**\n * Get offsets to the popper\n * @method\n * @memberof Popper.Utils\n * @param {Object} position - CSS position the Popper will get applied\n * @param {HTMLElement} popper - the popper element\n * @param {Object} referenceOffsets - the reference offsets (the popper will be relative to this)\n * @param {String} placement - one of the valid placement options\n * @returns {Object} popperOffsets - An object containing the offsets which will be applied to the popper\n */\nfunction getPopperOffsets(popper, referenceOffsets, placement) {\n  placement = placement.split('-')[0];\n\n  // Get popper node sizes\n  var popperRect = getOuterSizes(popper);\n\n  // Add position, width and height to our offsets object\n  var popperOffsets = {\n    width: popperRect.width,\n    height: popperRect.height\n  };\n\n  // depending by the popper placement we have to compute its offsets slightly differently\n  var isHoriz = ['right', 'left'].indexOf(placement) !== -1;\n  var mainSide = isHoriz ? 'top' : 'left';\n  var secondarySide = isHoriz ? 'left' : 'top';\n  var measurement = isHoriz ? 'height' : 'width';\n  var secondaryMeasurement = !isHoriz ? 'height' : 'width';\n\n  popperOffsets[mainSide] = referenceOffsets[mainSide] + referenceOffsets[measurement] / 2 - popperRect[measurement] / 2;\n  if (placement === secondarySide) {\n    popperOffsets[secondarySide] = referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];\n  } else {\n    popperOffsets[secondarySide] = referenceOffsets[getOppositePlacement(secondarySide)];\n  }\n\n  return popperOffsets;\n}\n\n/**\n * Mimics the `find` method of Array\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nfunction find(arr, check) {\n  // use native find if supported\n  if (Array.prototype.find) {\n    return arr.find(check);\n  }\n\n  // use `filter` to obtain the same behavior of `find`\n  return arr.filter(check)[0];\n}\n\n/**\n * Return the index of the matching object\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nfunction findIndex(arr, prop, value) {\n  // use native findIndex if supported\n  if (Array.prototype.findIndex) {\n    return arr.findIndex(function (cur) {\n      return cur[prop] === value;\n    });\n  }\n\n  // use `find` + `indexOf` if `findIndex` isn't supported\n  var match = find(arr, function (obj) {\n    return obj[prop] === value;\n  });\n  return arr.indexOf(match);\n}\n\n/**\n * Loop trough the list of modifiers and run them in order,\n * each of them will then edit the data object.\n * @method\n * @memberof Popper.Utils\n * @param {dataObject} data\n * @param {Array} modifiers\n * @param {String} ends - Optional modifier name used as stopper\n * @returns {dataObject}\n */\nfunction runModifiers(modifiers, data, ends) {\n  var modifiersToRun = ends === undefined ? modifiers : modifiers.slice(0, findIndex(modifiers, 'name', ends));\n\n  modifiersToRun.forEach(function (modifier) {\n    if (modifier['function']) {\n      // eslint-disable-line dot-notation\n      console.warn('`modifier.function` is deprecated, use `modifier.fn`!');\n    }\n    var fn = modifier['function'] || modifier.fn; // eslint-disable-line dot-notation\n    if (modifier.enabled && isFunction(fn)) {\n      // Add properties to offsets to make them a complete clientRect object\n      // we do this before each modifier to make sure the previous one doesn't\n      // mess with these values\n      data.offsets.popper = getClientRect(data.offsets.popper);\n      data.offsets.reference = getClientRect(data.offsets.reference);\n\n      data = fn(data, modifier);\n    }\n  });\n\n  return data;\n}\n\n/**\n * Updates the position of the popper, computing the new offsets and applying\n * the new style.<br />\n * Prefer `scheduleUpdate` over `update` because of performance reasons.\n * @method\n * @memberof Popper\n */\nfunction update() {\n  // if popper is destroyed, don't perform any further update\n  if (this.state.isDestroyed) {\n    return;\n  }\n\n  var data = {\n    instance: this,\n    styles: {},\n    arrowStyles: {},\n    attributes: {},\n    flipped: false,\n    offsets: {}\n  };\n\n  // compute reference element offsets\n  data.offsets.reference = getReferenceOffsets(this.state, this.popper, this.reference, this.options.positionFixed);\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  data.placement = computeAutoPlacement(this.options.placement, data.offsets.reference, this.popper, this.reference, this.options.modifiers.flip.boundariesElement, this.options.modifiers.flip.padding);\n\n  // store the computed placement inside `originalPlacement`\n  data.originalPlacement = data.placement;\n\n  data.positionFixed = this.options.positionFixed;\n\n  // compute the popper offsets\n  data.offsets.popper = getPopperOffsets(this.popper, data.offsets.reference, data.placement);\n\n  data.offsets.popper.position = this.options.positionFixed ? 'fixed' : 'absolute';\n\n  // run the modifiers\n  data = runModifiers(this.modifiers, data);\n\n  // the first `update` will call `onCreate` callback\n  // the other ones will call `onUpdate` callback\n  if (!this.state.isCreated) {\n    this.state.isCreated = true;\n    this.options.onCreate(data);\n  } else {\n    this.options.onUpdate(data);\n  }\n}\n\n/**\n * Helper used to know if the given modifier is enabled.\n * @method\n * @memberof Popper.Utils\n * @returns {Boolean}\n */\nfunction isModifierEnabled(modifiers, modifierName) {\n  return modifiers.some(function (_ref) {\n    var name = _ref.name,\n        enabled = _ref.enabled;\n    return enabled && name === modifierName;\n  });\n}\n\n/**\n * Get the prefixed supported property name\n * @method\n * @memberof Popper.Utils\n * @argument {String} property (camelCase)\n * @returns {String} prefixed property (camelCase or PascalCase, depending on the vendor prefix)\n */\nfunction getSupportedPropertyName(property) {\n  var prefixes = [false, 'ms', 'Webkit', 'Moz', 'O'];\n  var upperProp = property.charAt(0).toUpperCase() + property.slice(1);\n\n  for (var i = 0; i < prefixes.length; i++) {\n    var prefix = prefixes[i];\n    var toCheck = prefix ? '' + prefix + upperProp : property;\n    if (typeof document.body.style[toCheck] !== 'undefined') {\n      return toCheck;\n    }\n  }\n  return null;\n}\n\n/**\n * Destroys the popper.\n * @method\n * @memberof Popper\n */\nfunction destroy() {\n  this.state.isDestroyed = true;\n\n  // touch DOM only if `applyStyle` modifier is enabled\n  if (isModifierEnabled(this.modifiers, 'applyStyle')) {\n    this.popper.removeAttribute('x-placement');\n    this.popper.style.position = '';\n    this.popper.style.top = '';\n    this.popper.style.left = '';\n    this.popper.style.right = '';\n    this.popper.style.bottom = '';\n    this.popper.style.willChange = '';\n    this.popper.style[getSupportedPropertyName('transform')] = '';\n  }\n\n  this.disableEventListeners();\n\n  // remove the popper if user explicity asked for the deletion on destroy\n  // do not use `remove` because IE11 doesn't support it\n  if (this.options.removeOnDestroy) {\n    this.popper.parentNode.removeChild(this.popper);\n  }\n  return this;\n}\n\n/**\n * Get the window associated with the element\n * @argument {Element} element\n * @returns {Window}\n */\nfunction getWindow(element) {\n  var ownerDocument = element.ownerDocument;\n  return ownerDocument ? ownerDocument.defaultView : window;\n}\n\nfunction attachToScrollParents(scrollParent, event, callback, scrollParents) {\n  var isBody = scrollParent.nodeName === 'BODY';\n  var target = isBody ? scrollParent.ownerDocument.defaultView : scrollParent;\n  target.addEventListener(event, callback, { passive: true });\n\n  if (!isBody) {\n    attachToScrollParents(getScrollParent(target.parentNode), event, callback, scrollParents);\n  }\n  scrollParents.push(target);\n}\n\n/**\n * Setup needed event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nfunction setupEventListeners(reference, options, state, updateBound) {\n  // Resize event listener on window\n  state.updateBound = updateBound;\n  getWindow(reference).addEventListener('resize', state.updateBound, { passive: true });\n\n  // Scroll event listener on scroll parents\n  var scrollElement = getScrollParent(reference);\n  attachToScrollParents(scrollElement, 'scroll', state.updateBound, state.scrollParents);\n  state.scrollElement = scrollElement;\n  state.eventsEnabled = true;\n\n  return state;\n}\n\n/**\n * It will add resize/scroll events and start recalculating\n * position of the popper element when they are triggered.\n * @method\n * @memberof Popper\n */\nfunction enableEventListeners() {\n  if (!this.state.eventsEnabled) {\n    this.state = setupEventListeners(this.reference, this.options, this.state, this.scheduleUpdate);\n  }\n}\n\n/**\n * Remove event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nfunction removeEventListeners(reference, state) {\n  // Remove resize event listener on window\n  getWindow(reference).removeEventListener('resize', state.updateBound);\n\n  // Remove scroll event listener on scroll parents\n  state.scrollParents.forEach(function (target) {\n    target.removeEventListener('scroll', state.updateBound);\n  });\n\n  // Reset state\n  state.updateBound = null;\n  state.scrollParents = [];\n  state.scrollElement = null;\n  state.eventsEnabled = false;\n  return state;\n}\n\n/**\n * It will remove resize/scroll events and won't recalculate popper position\n * when they are triggered. It also won't trigger `onUpdate` callback anymore,\n * unless you call `update` method manually.\n * @method\n * @memberof Popper\n */\nfunction disableEventListeners() {\n  if (this.state.eventsEnabled) {\n    cancelAnimationFrame(this.scheduleUpdate);\n    this.state = removeEventListeners(this.reference, this.state);\n  }\n}\n\n/**\n * Tells if a given input is a number\n * @method\n * @memberof Popper.Utils\n * @param {*} input to check\n * @return {Boolean}\n */\nfunction isNumeric(n) {\n  return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);\n}\n\n/**\n * Set the style to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the style to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nfunction setStyles(element, styles) {\n  Object.keys(styles).forEach(function (prop) {\n    var unit = '';\n    // add unit if the value is numeric and is one of the following\n    if (['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !== -1 && isNumeric(styles[prop])) {\n      unit = 'px';\n    }\n    element.style[prop] = styles[prop] + unit;\n  });\n}\n\n/**\n * Set the attributes to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the attributes to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nfunction setAttributes(element, attributes) {\n  Object.keys(attributes).forEach(function (prop) {\n    var value = attributes[prop];\n    if (value !== false) {\n      element.setAttribute(prop, attributes[prop]);\n    } else {\n      element.removeAttribute(prop);\n    }\n  });\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} data.styles - List of style properties - values to apply to popper element\n * @argument {Object} data.attributes - List of attribute properties - values to apply to popper element\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The same data object\n */\nfunction applyStyle(data) {\n  // any property present in `data.styles` will be applied to the popper,\n  // in this way we can make the 3rd party modifiers add custom styles to it\n  // Be aware, modifiers could override the properties defined in the previous\n  // lines of this modifier!\n  setStyles(data.instance.popper, data.styles);\n\n  // any property present in `data.attributes` will be applied to the popper,\n  // they will be set as HTML attributes of the element\n  setAttributes(data.instance.popper, data.attributes);\n\n  // if arrowElement is defined and arrowStyles has some properties\n  if (data.arrowElement && Object.keys(data.arrowStyles).length) {\n    setStyles(data.arrowElement, data.arrowStyles);\n  }\n\n  return data;\n}\n\n/**\n * Set the x-placement attribute before everything else because it could be used\n * to add margins to the popper margins needs to be calculated to get the\n * correct popper offsets.\n * @method\n * @memberof Popper.modifiers\n * @param {HTMLElement} reference - The reference element used to position the popper\n * @param {HTMLElement} popper - The HTML element used as popper\n * @param {Object} options - Popper.js options\n */\nfunction applyStyleOnLoad(reference, popper, options, modifierOptions, state) {\n  // compute reference element offsets\n  var referenceOffsets = getReferenceOffsets(state, popper, reference, options.positionFixed);\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  var placement = computeAutoPlacement(options.placement, referenceOffsets, popper, reference, options.modifiers.flip.boundariesElement, options.modifiers.flip.padding);\n\n  popper.setAttribute('x-placement', placement);\n\n  // Apply `position` to popper before anything else because\n  // without the position applied we can't guarantee correct computations\n  setStyles(popper, { position: options.positionFixed ? 'fixed' : 'absolute' });\n\n  return options;\n}\n\n/**\n * @function\n * @memberof Popper.Utils\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Boolean} shouldRound - If the offsets should be rounded at all\n * @returns {Object} The popper's position offsets rounded\n *\n * The tale of pixel-perfect positioning. It's still not 100% perfect, but as\n * good as it can be within reason.\n * Discussion here: https://github.com/FezVrasta/popper.js/pull/715\n *\n * Low DPI screens cause a popper to be blurry if not using full pixels (Safari\n * as well on High DPI screens).\n *\n * Firefox prefers no rounding for positioning and does not have blurriness on\n * high DPI screens.\n *\n * Only horizontal placement and left/right values need to be considered.\n */\nfunction getRoundedOffsets(data, shouldRound) {\n  var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n  var round = Math.round,\n      floor = Math.floor;\n\n  var noRound = function noRound(v) {\n    return v;\n  };\n\n  var referenceWidth = round(reference.width);\n  var popperWidth = round(popper.width);\n\n  var isVertical = ['left', 'right'].indexOf(data.placement) !== -1;\n  var isVariation = data.placement.indexOf('-') !== -1;\n  var sameWidthParity = referenceWidth % 2 === popperWidth % 2;\n  var bothOddWidth = referenceWidth % 2 === 1 && popperWidth % 2 === 1;\n\n  var horizontalToInteger = !shouldRound ? noRound : isVertical || isVariation || sameWidthParity ? round : floor;\n  var verticalToInteger = !shouldRound ? noRound : round;\n\n  return {\n    left: horizontalToInteger(bothOddWidth && !isVariation && shouldRound ? popper.left - 1 : popper.left),\n    top: verticalToInteger(popper.top),\n    bottom: verticalToInteger(popper.bottom),\n    right: horizontalToInteger(popper.right)\n  };\n}\n\nvar isFirefox = isBrowser && /Firefox/i.test(navigator.userAgent);\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction computeStyle(data, options) {\n  var x = options.x,\n      y = options.y;\n  var popper = data.offsets.popper;\n\n  // Remove this legacy support in Popper.js v2\n\n  var legacyGpuAccelerationOption = find(data.instance.modifiers, function (modifier) {\n    return modifier.name === 'applyStyle';\n  }).gpuAcceleration;\n  if (legacyGpuAccelerationOption !== undefined) {\n    console.warn('WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!');\n  }\n  var gpuAcceleration = legacyGpuAccelerationOption !== undefined ? legacyGpuAccelerationOption : options.gpuAcceleration;\n\n  var offsetParent = getOffsetParent(data.instance.popper);\n  var offsetParentRect = getBoundingClientRect(offsetParent);\n\n  // Styles\n  var styles = {\n    position: popper.position\n  };\n\n  var offsets = getRoundedOffsets(data, window.devicePixelRatio < 2 || !isFirefox);\n\n  var sideA = x === 'bottom' ? 'top' : 'bottom';\n  var sideB = y === 'right' ? 'left' : 'right';\n\n  // if gpuAcceleration is set to `true` and transform is supported,\n  //  we use `translate3d` to apply the position to the popper we\n  // automatically use the supported prefixed version if needed\n  var prefixedProperty = getSupportedPropertyName('transform');\n\n  // now, let's make a step back and look at this code closely (wtf?)\n  // If the content of the popper grows once it's been positioned, it\n  // may happen that the popper gets misplaced because of the new content\n  // overflowing its reference element\n  // To avoid this problem, we provide two options (x and y), which allow\n  // the consumer to define the offset origin.\n  // If we position a popper on top of a reference element, we can set\n  // `x` to `top` to make the popper grow towards its top instead of\n  // its bottom.\n  var left = void 0,\n      top = void 0;\n  if (sideA === 'bottom') {\n    // when offsetParent is <html> the positioning is relative to the bottom of the screen (excluding the scrollbar)\n    // and not the bottom of the html element\n    if (offsetParent.nodeName === 'HTML') {\n      top = -offsetParent.clientHeight + offsets.bottom;\n    } else {\n      top = -offsetParentRect.height + offsets.bottom;\n    }\n  } else {\n    top = offsets.top;\n  }\n  if (sideB === 'right') {\n    if (offsetParent.nodeName === 'HTML') {\n      left = -offsetParent.clientWidth + offsets.right;\n    } else {\n      left = -offsetParentRect.width + offsets.right;\n    }\n  } else {\n    left = offsets.left;\n  }\n  if (gpuAcceleration && prefixedProperty) {\n    styles[prefixedProperty] = 'translate3d(' + left + 'px, ' + top + 'px, 0)';\n    styles[sideA] = 0;\n    styles[sideB] = 0;\n    styles.willChange = 'transform';\n  } else {\n    // othwerise, we use the standard `top`, `left`, `bottom` and `right` properties\n    var invertTop = sideA === 'bottom' ? -1 : 1;\n    var invertLeft = sideB === 'right' ? -1 : 1;\n    styles[sideA] = top * invertTop;\n    styles[sideB] = left * invertLeft;\n    styles.willChange = sideA + ', ' + sideB;\n  }\n\n  // Attributes\n  var attributes = {\n    'x-placement': data.placement\n  };\n\n  // Update `data` attributes, styles and arrowStyles\n  data.attributes = _extends({}, attributes, data.attributes);\n  data.styles = _extends({}, styles, data.styles);\n  data.arrowStyles = _extends({}, data.offsets.arrow, data.arrowStyles);\n\n  return data;\n}\n\n/**\n * Helper used to know if the given modifier depends from another one.<br />\n * It checks if the needed modifier is listed and enabled.\n * @method\n * @memberof Popper.Utils\n * @param {Array} modifiers - list of modifiers\n * @param {String} requestingName - name of requesting modifier\n * @param {String} requestedName - name of requested modifier\n * @returns {Boolean}\n */\nfunction isModifierRequired(modifiers, requestingName, requestedName) {\n  var requesting = find(modifiers, function (_ref) {\n    var name = _ref.name;\n    return name === requestingName;\n  });\n\n  var isRequired = !!requesting && modifiers.some(function (modifier) {\n    return modifier.name === requestedName && modifier.enabled && modifier.order < requesting.order;\n  });\n\n  if (!isRequired) {\n    var _requesting = '`' + requestingName + '`';\n    var requested = '`' + requestedName + '`';\n    console.warn(requested + ' modifier is required by ' + _requesting + ' modifier in order to work, be sure to include it before ' + _requesting + '!');\n  }\n  return isRequired;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction arrow(data, options) {\n  var _data$offsets$arrow;\n\n  // arrow depends on keepTogether in order to work\n  if (!isModifierRequired(data.instance.modifiers, 'arrow', 'keepTogether')) {\n    return data;\n  }\n\n  var arrowElement = options.element;\n\n  // if arrowElement is a string, suppose it's a CSS selector\n  if (typeof arrowElement === 'string') {\n    arrowElement = data.instance.popper.querySelector(arrowElement);\n\n    // if arrowElement is not found, don't run the modifier\n    if (!arrowElement) {\n      return data;\n    }\n  } else {\n    // if the arrowElement isn't a query selector we must check that the\n    // provided DOM node is child of its popper node\n    if (!data.instance.popper.contains(arrowElement)) {\n      console.warn('WARNING: `arrow.element` must be child of its popper element!');\n      return data;\n    }\n  }\n\n  var placement = data.placement.split('-')[0];\n  var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n\n  var isVertical = ['left', 'right'].indexOf(placement) !== -1;\n\n  var len = isVertical ? 'height' : 'width';\n  var sideCapitalized = isVertical ? 'Top' : 'Left';\n  var side = sideCapitalized.toLowerCase();\n  var altSide = isVertical ? 'left' : 'top';\n  var opSide = isVertical ? 'bottom' : 'right';\n  var arrowElementSize = getOuterSizes(arrowElement)[len];\n\n  //\n  // extends keepTogether behavior making sure the popper and its\n  // reference have enough pixels in conjunction\n  //\n\n  // top/left side\n  if (reference[opSide] - arrowElementSize < popper[side]) {\n    data.offsets.popper[side] -= popper[side] - (reference[opSide] - arrowElementSize);\n  }\n  // bottom/right side\n  if (reference[side] + arrowElementSize > popper[opSide]) {\n    data.offsets.popper[side] += reference[side] + arrowElementSize - popper[opSide];\n  }\n  data.offsets.popper = getClientRect(data.offsets.popper);\n\n  // compute center of the popper\n  var center = reference[side] + reference[len] / 2 - arrowElementSize / 2;\n\n  // Compute the sideValue using the updated popper offsets\n  // take popper margin in account because we don't have this info available\n  var css = getStyleComputedProperty(data.instance.popper);\n  var popperMarginSide = parseFloat(css['margin' + sideCapitalized], 10);\n  var popperBorderSide = parseFloat(css['border' + sideCapitalized + 'Width'], 10);\n  var sideValue = center - data.offsets.popper[side] - popperMarginSide - popperBorderSide;\n\n  // prevent arrowElement from being placed not contiguously to its popper\n  sideValue = Math.max(Math.min(popper[len] - arrowElementSize, sideValue), 0);\n\n  data.arrowElement = arrowElement;\n  data.offsets.arrow = (_data$offsets$arrow = {}, defineProperty(_data$offsets$arrow, side, Math.round(sideValue)), defineProperty(_data$offsets$arrow, altSide, ''), _data$offsets$arrow);\n\n  return data;\n}\n\n/**\n * Get the opposite placement variation of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement variation\n * @returns {String} flipped placement variation\n */\nfunction getOppositeVariation(variation) {\n  if (variation === 'end') {\n    return 'start';\n  } else if (variation === 'start') {\n    return 'end';\n  }\n  return variation;\n}\n\n/**\n * List of accepted placements to use as values of the `placement` option.<br />\n * Valid placements are:\n * - `auto`\n * - `top`\n * - `right`\n * - `bottom`\n * - `left`\n *\n * Each placement can have a variation from this list:\n * - `-start`\n * - `-end`\n *\n * Variations are interpreted easily if you think of them as the left to right\n * written languages. Horizontally (`top` and `bottom`), `start` is left and `end`\n * is right.<br />\n * Vertically (`left` and `right`), `start` is top and `end` is bottom.\n *\n * Some valid examples are:\n * - `top-end` (on top of reference, right aligned)\n * - `right-start` (on right of reference, top aligned)\n * - `bottom` (on bottom, centered)\n * - `auto-end` (on the side with more space available, alignment depends by placement)\n *\n * @static\n * @type {Array}\n * @enum {String}\n * @readonly\n * @method placements\n * @memberof Popper\n */\nvar placements = ['auto-start', 'auto', 'auto-end', 'top-start', 'top', 'top-end', 'right-start', 'right', 'right-end', 'bottom-end', 'bottom', 'bottom-start', 'left-end', 'left', 'left-start'];\n\n// Get rid of `auto` `auto-start` and `auto-end`\nvar validPlacements = placements.slice(3);\n\n/**\n * Given an initial placement, returns all the subsequent placements\n * clockwise (or counter-clockwise).\n *\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement - A valid placement (it accepts variations)\n * @argument {Boolean} counter - Set to true to walk the placements counterclockwise\n * @returns {Array} placements including their variations\n */\nfunction clockwise(placement) {\n  var counter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  var index = validPlacements.indexOf(placement);\n  var arr = validPlacements.slice(index + 1).concat(validPlacements.slice(0, index));\n  return counter ? arr.reverse() : arr;\n}\n\nvar BEHAVIORS = {\n  FLIP: 'flip',\n  CLOCKWISE: 'clockwise',\n  COUNTERCLOCKWISE: 'counterclockwise'\n};\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction flip(data, options) {\n  // if `inner` modifier is enabled, we can't use the `flip` modifier\n  if (isModifierEnabled(data.instance.modifiers, 'inner')) {\n    return data;\n  }\n\n  if (data.flipped && data.placement === data.originalPlacement) {\n    // seems like flip is trying to loop, probably there's not enough space on any of the flippable sides\n    return data;\n  }\n\n  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, options.boundariesElement, data.positionFixed);\n\n  var placement = data.placement.split('-')[0];\n  var placementOpposite = getOppositePlacement(placement);\n  var variation = data.placement.split('-')[1] || '';\n\n  var flipOrder = [];\n\n  switch (options.behavior) {\n    case BEHAVIORS.FLIP:\n      flipOrder = [placement, placementOpposite];\n      break;\n    case BEHAVIORS.CLOCKWISE:\n      flipOrder = clockwise(placement);\n      break;\n    case BEHAVIORS.COUNTERCLOCKWISE:\n      flipOrder = clockwise(placement, true);\n      break;\n    default:\n      flipOrder = options.behavior;\n  }\n\n  flipOrder.forEach(function (step, index) {\n    if (placement !== step || flipOrder.length === index + 1) {\n      return data;\n    }\n\n    placement = data.placement.split('-')[0];\n    placementOpposite = getOppositePlacement(placement);\n\n    var popperOffsets = data.offsets.popper;\n    var refOffsets = data.offsets.reference;\n\n    // using floor because the reference offsets may contain decimals we are not going to consider here\n    var floor = Math.floor;\n    var overlapsRef = placement === 'left' && floor(popperOffsets.right) > floor(refOffsets.left) || placement === 'right' && floor(popperOffsets.left) < floor(refOffsets.right) || placement === 'top' && floor(popperOffsets.bottom) > floor(refOffsets.top) || placement === 'bottom' && floor(popperOffsets.top) < floor(refOffsets.bottom);\n\n    var overflowsLeft = floor(popperOffsets.left) < floor(boundaries.left);\n    var overflowsRight = floor(popperOffsets.right) > floor(boundaries.right);\n    var overflowsTop = floor(popperOffsets.top) < floor(boundaries.top);\n    var overflowsBottom = floor(popperOffsets.bottom) > floor(boundaries.bottom);\n\n    var overflowsBoundaries = placement === 'left' && overflowsLeft || placement === 'right' && overflowsRight || placement === 'top' && overflowsTop || placement === 'bottom' && overflowsBottom;\n\n    // flip the variation if required\n    var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n\n    // flips variation if reference element overflows boundaries\n    var flippedVariationByRef = !!options.flipVariations && (isVertical && variation === 'start' && overflowsLeft || isVertical && variation === 'end' && overflowsRight || !isVertical && variation === 'start' && overflowsTop || !isVertical && variation === 'end' && overflowsBottom);\n\n    // flips variation if popper content overflows boundaries\n    var flippedVariationByContent = !!options.flipVariationsByContent && (isVertical && variation === 'start' && overflowsRight || isVertical && variation === 'end' && overflowsLeft || !isVertical && variation === 'start' && overflowsBottom || !isVertical && variation === 'end' && overflowsTop);\n\n    var flippedVariation = flippedVariationByRef || flippedVariationByContent;\n\n    if (overlapsRef || overflowsBoundaries || flippedVariation) {\n      // this boolean to detect any flip loop\n      data.flipped = true;\n\n      if (overlapsRef || overflowsBoundaries) {\n        placement = flipOrder[index + 1];\n      }\n\n      if (flippedVariation) {\n        variation = getOppositeVariation(variation);\n      }\n\n      data.placement = placement + (variation ? '-' + variation : '');\n\n      // this object contains `position`, we want to preserve it along with\n      // any additional property we may add in the future\n      data.offsets.popper = _extends({}, data.offsets.popper, getPopperOffsets(data.instance.popper, data.offsets.reference, data.placement));\n\n      data = runModifiers(data.instance.modifiers, data, 'flip');\n    }\n  });\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction keepTogether(data) {\n  var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n\n  var placement = data.placement.split('-')[0];\n  var floor = Math.floor;\n  var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n  var side = isVertical ? 'right' : 'bottom';\n  var opSide = isVertical ? 'left' : 'top';\n  var measurement = isVertical ? 'width' : 'height';\n\n  if (popper[side] < floor(reference[opSide])) {\n    data.offsets.popper[opSide] = floor(reference[opSide]) - popper[measurement];\n  }\n  if (popper[opSide] > floor(reference[side])) {\n    data.offsets.popper[opSide] = floor(reference[side]);\n  }\n\n  return data;\n}\n\n/**\n * Converts a string containing value + unit into a px value number\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} str - Value + unit string\n * @argument {String} measurement - `height` or `width`\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @returns {Number|String}\n * Value in pixels, or original string if no values were extracted\n */\nfunction toValue(str, measurement, popperOffsets, referenceOffsets) {\n  // separate value from unit\n  var split = str.match(/((?:\\-|\\+)?\\d*\\.?\\d*)(.*)/);\n  var value = +split[1];\n  var unit = split[2];\n\n  // If it's not a number it's an operator, I guess\n  if (!value) {\n    return str;\n  }\n\n  if (unit.indexOf('%') === 0) {\n    var element = void 0;\n    switch (unit) {\n      case '%p':\n        element = popperOffsets;\n        break;\n      case '%':\n      case '%r':\n      default:\n        element = referenceOffsets;\n    }\n\n    var rect = getClientRect(element);\n    return rect[measurement] / 100 * value;\n  } else if (unit === 'vh' || unit === 'vw') {\n    // if is a vh or vw, we calculate the size based on the viewport\n    var size = void 0;\n    if (unit === 'vh') {\n      size = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n    } else {\n      size = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\n    }\n    return size / 100 * value;\n  } else {\n    // if is an explicit pixel unit, we get rid of the unit and keep the value\n    // if is an implicit unit, it's px, and we return just the value\n    return value;\n  }\n}\n\n/**\n * Parse an `offset` string to extrapolate `x` and `y` numeric offsets.\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} offset\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @argument {String} basePlacement\n * @returns {Array} a two cells array with x and y offsets in numbers\n */\nfunction parseOffset(offset, popperOffsets, referenceOffsets, basePlacement) {\n  var offsets = [0, 0];\n\n  // Use height if placement is left or right and index is 0 otherwise use width\n  // in this way the first offset will use an axis and the second one\n  // will use the other one\n  var useHeight = ['right', 'left'].indexOf(basePlacement) !== -1;\n\n  // Split the offset string to obtain a list of values and operands\n  // The regex addresses values with the plus or minus sign in front (+10, -20, etc)\n  var fragments = offset.split(/(\\+|\\-)/).map(function (frag) {\n    return frag.trim();\n  });\n\n  // Detect if the offset string contains a pair of values or a single one\n  // they could be separated by comma or space\n  var divider = fragments.indexOf(find(fragments, function (frag) {\n    return frag.search(/,|\\s/) !== -1;\n  }));\n\n  if (fragments[divider] && fragments[divider].indexOf(',') === -1) {\n    console.warn('Offsets separated by white space(s) are deprecated, use a comma (,) instead.');\n  }\n\n  // If divider is found, we divide the list of values and operands to divide\n  // them by ofset X and Y.\n  var splitRegex = /\\s*,\\s*|\\s+/;\n  var ops = divider !== -1 ? [fragments.slice(0, divider).concat([fragments[divider].split(splitRegex)[0]]), [fragments[divider].split(splitRegex)[1]].concat(fragments.slice(divider + 1))] : [fragments];\n\n  // Convert the values with units to absolute pixels to allow our computations\n  ops = ops.map(function (op, index) {\n    // Most of the units rely on the orientation of the popper\n    var measurement = (index === 1 ? !useHeight : useHeight) ? 'height' : 'width';\n    var mergeWithPrevious = false;\n    return op\n    // This aggregates any `+` or `-` sign that aren't considered operators\n    // e.g.: 10 + +5 => [10, +, +5]\n    .reduce(function (a, b) {\n      if (a[a.length - 1] === '' && ['+', '-'].indexOf(b) !== -1) {\n        a[a.length - 1] = b;\n        mergeWithPrevious = true;\n        return a;\n      } else if (mergeWithPrevious) {\n        a[a.length - 1] += b;\n        mergeWithPrevious = false;\n        return a;\n      } else {\n        return a.concat(b);\n      }\n    }, [])\n    // Here we convert the string values into number values (in px)\n    .map(function (str) {\n      return toValue(str, measurement, popperOffsets, referenceOffsets);\n    });\n  });\n\n  // Loop trough the offsets arrays and execute the operations\n  ops.forEach(function (op, index) {\n    op.forEach(function (frag, index2) {\n      if (isNumeric(frag)) {\n        offsets[index] += frag * (op[index2 - 1] === '-' ? -1 : 1);\n      }\n    });\n  });\n  return offsets;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @argument {Number|String} options.offset=0\n * The offset value as described in the modifier description\n * @returns {Object} The data object, properly modified\n */\nfunction offset(data, _ref) {\n  var offset = _ref.offset;\n  var placement = data.placement,\n      _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n\n  var basePlacement = placement.split('-')[0];\n\n  var offsets = void 0;\n  if (isNumeric(+offset)) {\n    offsets = [+offset, 0];\n  } else {\n    offsets = parseOffset(offset, popper, reference, basePlacement);\n  }\n\n  if (basePlacement === 'left') {\n    popper.top += offsets[0];\n    popper.left -= offsets[1];\n  } else if (basePlacement === 'right') {\n    popper.top += offsets[0];\n    popper.left += offsets[1];\n  } else if (basePlacement === 'top') {\n    popper.left += offsets[0];\n    popper.top -= offsets[1];\n  } else if (basePlacement === 'bottom') {\n    popper.left += offsets[0];\n    popper.top += offsets[1];\n  }\n\n  data.popper = popper;\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction preventOverflow(data, options) {\n  var boundariesElement = options.boundariesElement || getOffsetParent(data.instance.popper);\n\n  // If offsetParent is the reference element, we really want to\n  // go one step up and use the next offsetParent as reference to\n  // avoid to make this modifier completely useless and look like broken\n  if (data.instance.reference === boundariesElement) {\n    boundariesElement = getOffsetParent(boundariesElement);\n  }\n\n  // NOTE: DOM access here\n  // resets the popper's position so that the document size can be calculated excluding\n  // the size of the popper element itself\n  var transformProp = getSupportedPropertyName('transform');\n  var popperStyles = data.instance.popper.style; // assignment to help minification\n  var top = popperStyles.top,\n      left = popperStyles.left,\n      transform = popperStyles[transformProp];\n\n  popperStyles.top = '';\n  popperStyles.left = '';\n  popperStyles[transformProp] = '';\n\n  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, boundariesElement, data.positionFixed);\n\n  // NOTE: DOM access here\n  // restores the original style properties after the offsets have been computed\n  popperStyles.top = top;\n  popperStyles.left = left;\n  popperStyles[transformProp] = transform;\n\n  options.boundaries = boundaries;\n\n  var order = options.priority;\n  var popper = data.offsets.popper;\n\n  var check = {\n    primary: function primary(placement) {\n      var value = popper[placement];\n      if (popper[placement] < boundaries[placement] && !options.escapeWithReference) {\n        value = Math.max(popper[placement], boundaries[placement]);\n      }\n      return defineProperty({}, placement, value);\n    },\n    secondary: function secondary(placement) {\n      var mainSide = placement === 'right' ? 'left' : 'top';\n      var value = popper[mainSide];\n      if (popper[placement] > boundaries[placement] && !options.escapeWithReference) {\n        value = Math.min(popper[mainSide], boundaries[placement] - (placement === 'right' ? popper.width : popper.height));\n      }\n      return defineProperty({}, mainSide, value);\n    }\n  };\n\n  order.forEach(function (placement) {\n    var side = ['left', 'top'].indexOf(placement) !== -1 ? 'primary' : 'secondary';\n    popper = _extends({}, popper, check[side](placement));\n  });\n\n  data.offsets.popper = popper;\n\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction shift(data) {\n  var placement = data.placement;\n  var basePlacement = placement.split('-')[0];\n  var shiftvariation = placement.split('-')[1];\n\n  // if shift shiftvariation is specified, run the modifier\n  if (shiftvariation) {\n    var _data$offsets = data.offsets,\n        reference = _data$offsets.reference,\n        popper = _data$offsets.popper;\n\n    var isVertical = ['bottom', 'top'].indexOf(basePlacement) !== -1;\n    var side = isVertical ? 'left' : 'top';\n    var measurement = isVertical ? 'width' : 'height';\n\n    var shiftOffsets = {\n      start: defineProperty({}, side, reference[side]),\n      end: defineProperty({}, side, reference[side] + reference[measurement] - popper[measurement])\n    };\n\n    data.offsets.popper = _extends({}, popper, shiftOffsets[shiftvariation]);\n  }\n\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction hide(data) {\n  if (!isModifierRequired(data.instance.modifiers, 'hide', 'preventOverflow')) {\n    return data;\n  }\n\n  var refRect = data.offsets.reference;\n  var bound = find(data.instance.modifiers, function (modifier) {\n    return modifier.name === 'preventOverflow';\n  }).boundaries;\n\n  if (refRect.bottom < bound.top || refRect.left > bound.right || refRect.top > bound.bottom || refRect.right < bound.left) {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === true) {\n      return data;\n    }\n\n    data.hide = true;\n    data.attributes['x-out-of-boundaries'] = '';\n  } else {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === false) {\n      return data;\n    }\n\n    data.hide = false;\n    data.attributes['x-out-of-boundaries'] = false;\n  }\n\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction inner(data) {\n  var placement = data.placement;\n  var basePlacement = placement.split('-')[0];\n  var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n\n  var isHoriz = ['left', 'right'].indexOf(basePlacement) !== -1;\n\n  var subtractLength = ['top', 'left'].indexOf(basePlacement) === -1;\n\n  popper[isHoriz ? 'left' : 'top'] = reference[basePlacement] - (subtractLength ? popper[isHoriz ? 'width' : 'height'] : 0);\n\n  data.placement = getOppositePlacement(placement);\n  data.offsets.popper = getClientRect(popper);\n\n  return data;\n}\n\n/**\n * Modifier function, each modifier can have a function of this type assigned\n * to its `fn` property.<br />\n * These functions will be called on each update, this means that you must\n * make sure they are performant enough to avoid performance bottlenecks.\n *\n * @function ModifierFn\n * @argument {dataObject} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {dataObject} The data object, properly modified\n */\n\n/**\n * Modifiers are plugins used to alter the behavior of your poppers.<br />\n * Popper.js uses a set of 9 modifiers to provide all the basic functionalities\n * needed by the library.\n *\n * Usually you don't want to override the `order`, `fn` and `onLoad` props.\n * All the other properties are configurations that could be tweaked.\n * @namespace modifiers\n */\nvar modifiers = {\n  /**\n   * Modifier used to shift the popper on the start or end of its reference\n   * element.<br />\n   * It will read the variation of the `placement` property.<br />\n   * It can be one either `-end` or `-start`.\n   * @memberof modifiers\n   * @inner\n   */\n  shift: {\n    /** @prop {number} order=100 - Index used to define the order of execution */\n    order: 100,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: shift\n  },\n\n  /**\n   * The `offset` modifier can shift your popper on both its axis.\n   *\n   * It accepts the following units:\n   * - `px` or unit-less, interpreted as pixels\n   * - `%` or `%r`, percentage relative to the length of the reference element\n   * - `%p`, percentage relative to the length of the popper element\n   * - `vw`, CSS viewport width unit\n   * - `vh`, CSS viewport height unit\n   *\n   * For length is intended the main axis relative to the placement of the popper.<br />\n   * This means that if the placement is `top` or `bottom`, the length will be the\n   * `width`. In case of `left` or `right`, it will be the `height`.\n   *\n   * You can provide a single value (as `Number` or `String`), or a pair of values\n   * as `String` divided by a comma or one (or more) white spaces.<br />\n   * The latter is a deprecated method because it leads to confusion and will be\n   * removed in v2.<br />\n   * Additionally, it accepts additions and subtractions between different units.\n   * Note that multiplications and divisions aren't supported.\n   *\n   * Valid examples are:\n   * ```\n   * 10\n   * '10%'\n   * '10, 10'\n   * '10%, 10'\n   * '10 + 10%'\n   * '10 - 5vh + 3%'\n   * '-10px + 5vh, 5px - 6%'\n   * ```\n   * > **NB**: If you desire to apply offsets to your poppers in a way that may make them overlap\n   * > with their reference element, unfortunately, you will have to disable the `flip` modifier.\n   * > You can read more on this at this [issue](https://github.com/FezVrasta/popper.js/issues/373).\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  offset: {\n    /** @prop {number} order=200 - Index used to define the order of execution */\n    order: 200,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: offset,\n    /** @prop {Number|String} offset=0\n     * The offset value as described in the modifier description\n     */\n    offset: 0\n  },\n\n  /**\n   * Modifier used to prevent the popper from being positioned outside the boundary.\n   *\n   * A scenario exists where the reference itself is not within the boundaries.<br />\n   * We can say it has \"escaped the boundaries\" — or just \"escaped\".<br />\n   * In this case we need to decide whether the popper should either:\n   *\n   * - detach from the reference and remain \"trapped\" in the boundaries, or\n   * - if it should ignore the boundary and \"escape with its reference\"\n   *\n   * When `escapeWithReference` is set to`true` and reference is completely\n   * outside its boundaries, the popper will overflow (or completely leave)\n   * the boundaries in order to remain attached to the edge of the reference.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  preventOverflow: {\n    /** @prop {number} order=300 - Index used to define the order of execution */\n    order: 300,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: preventOverflow,\n    /**\n     * @prop {Array} [priority=['left','right','top','bottom']]\n     * Popper will try to prevent overflow following these priorities by default,\n     * then, it could overflow on the left and on top of the `boundariesElement`\n     */\n    priority: ['left', 'right', 'top', 'bottom'],\n    /**\n     * @prop {number} padding=5\n     * Amount of pixel used to define a minimum distance between the boundaries\n     * and the popper. This makes sure the popper always has a little padding\n     * between the edges of its container\n     */\n    padding: 5,\n    /**\n     * @prop {String|HTMLElement} boundariesElement='scrollParent'\n     * Boundaries used by the modifier. Can be `scrollParent`, `window`,\n     * `viewport` or any DOM element.\n     */\n    boundariesElement: 'scrollParent'\n  },\n\n  /**\n   * Modifier used to make sure the reference and its popper stay near each other\n   * without leaving any gap between the two. Especially useful when the arrow is\n   * enabled and you want to ensure that it points to its reference element.\n   * It cares only about the first axis. You can still have poppers with margin\n   * between the popper and its reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  keepTogether: {\n    /** @prop {number} order=400 - Index used to define the order of execution */\n    order: 400,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: keepTogether\n  },\n\n  /**\n   * This modifier is used to move the `arrowElement` of the popper to make\n   * sure it is positioned between the reference element and its popper element.\n   * It will read the outer size of the `arrowElement` node to detect how many\n   * pixels of conjunction are needed.\n   *\n   * It has no effect if no `arrowElement` is provided.\n   * @memberof modifiers\n   * @inner\n   */\n  arrow: {\n    /** @prop {number} order=500 - Index used to define the order of execution */\n    order: 500,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: arrow,\n    /** @prop {String|HTMLElement} element='[x-arrow]' - Selector or node used as arrow */\n    element: '[x-arrow]'\n  },\n\n  /**\n   * Modifier used to flip the popper's placement when it starts to overlap its\n   * reference element.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   *\n   * **NOTE:** this modifier will interrupt the current update cycle and will\n   * restart it if it detects the need to flip the placement.\n   * @memberof modifiers\n   * @inner\n   */\n  flip: {\n    /** @prop {number} order=600 - Index used to define the order of execution */\n    order: 600,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: flip,\n    /**\n     * @prop {String|Array} behavior='flip'\n     * The behavior used to change the popper's placement. It can be one of\n     * `flip`, `clockwise`, `counterclockwise` or an array with a list of valid\n     * placements (with optional variations)\n     */\n    behavior: 'flip',\n    /**\n     * @prop {number} padding=5\n     * The popper will flip if it hits the edges of the `boundariesElement`\n     */\n    padding: 5,\n    /**\n     * @prop {String|HTMLElement} boundariesElement='viewport'\n     * The element which will define the boundaries of the popper position.\n     * The popper will never be placed outside of the defined boundaries\n     * (except if `keepTogether` is enabled)\n     */\n    boundariesElement: 'viewport',\n    /**\n     * @prop {Boolean} flipVariations=false\n     * The popper will switch placement variation between `-start` and `-end` when\n     * the reference element overlaps its boundaries.\n     *\n     * The original placement should have a set variation.\n     */\n    flipVariations: false,\n    /**\n     * @prop {Boolean} flipVariationsByContent=false\n     * The popper will switch placement variation between `-start` and `-end` when\n     * the popper element overlaps its reference boundaries.\n     *\n     * The original placement should have a set variation.\n     */\n    flipVariationsByContent: false\n  },\n\n  /**\n   * Modifier used to make the popper flow toward the inner of the reference element.\n   * By default, when this modifier is disabled, the popper will be placed outside\n   * the reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  inner: {\n    /** @prop {number} order=700 - Index used to define the order of execution */\n    order: 700,\n    /** @prop {Boolean} enabled=false - Whether the modifier is enabled or not */\n    enabled: false,\n    /** @prop {ModifierFn} */\n    fn: inner\n  },\n\n  /**\n   * Modifier used to hide the popper when its reference element is outside of the\n   * popper boundaries. It will set a `x-out-of-boundaries` attribute which can\n   * be used to hide with a CSS selector the popper when its reference is\n   * out of boundaries.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   * @memberof modifiers\n   * @inner\n   */\n  hide: {\n    /** @prop {number} order=800 - Index used to define the order of execution */\n    order: 800,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: hide\n  },\n\n  /**\n   * Computes the style that will be applied to the popper element to gets\n   * properly positioned.\n   *\n   * Note that this modifier will not touch the DOM, it just prepares the styles\n   * so that `applyStyle` modifier can apply it. This separation is useful\n   * in case you need to replace `applyStyle` with a custom implementation.\n   *\n   * This modifier has `850` as `order` value to maintain backward compatibility\n   * with previous versions of Popper.js. Expect the modifiers ordering method\n   * to change in future major versions of the library.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  computeStyle: {\n    /** @prop {number} order=850 - Index used to define the order of execution */\n    order: 850,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: computeStyle,\n    /**\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3D transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties\n     */\n    gpuAcceleration: true,\n    /**\n     * @prop {string} [x='bottom']\n     * Where to anchor the X axis (`bottom` or `top`). AKA X offset origin.\n     * Change this if your popper should grow in a direction different from `bottom`\n     */\n    x: 'bottom',\n    /**\n     * @prop {string} [x='left']\n     * Where to anchor the Y axis (`left` or `right`). AKA Y offset origin.\n     * Change this if your popper should grow in a direction different from `right`\n     */\n    y: 'right'\n  },\n\n  /**\n   * Applies the computed styles to the popper element.\n   *\n   * All the DOM manipulations are limited to this modifier. This is useful in case\n   * you want to integrate Popper.js inside a framework or view library and you\n   * want to delegate all the DOM manipulations to it.\n   *\n   * Note that if you disable this modifier, you must make sure the popper element\n   * has its position set to `absolute` before Popper.js can do its work!\n   *\n   * Just disable this modifier and define your own to achieve the desired effect.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  applyStyle: {\n    /** @prop {number} order=900 - Index used to define the order of execution */\n    order: 900,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: applyStyle,\n    /** @prop {Function} */\n    onLoad: applyStyleOnLoad,\n    /**\n     * @deprecated since version 1.10.0, the property moved to `computeStyle` modifier\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3D transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties\n     */\n    gpuAcceleration: undefined\n  }\n};\n\n/**\n * The `dataObject` is an object containing all the information used by Popper.js.\n * This object is passed to modifiers and to the `onCreate` and `onUpdate` callbacks.\n * @name dataObject\n * @property {Object} data.instance The Popper.js instance\n * @property {String} data.placement Placement applied to popper\n * @property {String} data.originalPlacement Placement originally defined on init\n * @property {Boolean} data.flipped True if popper has been flipped by flip modifier\n * @property {Boolean} data.hide True if the reference element is out of boundaries, useful to know when to hide the popper\n * @property {HTMLElement} data.arrowElement Node used as arrow by arrow modifier\n * @property {Object} data.styles Any CSS property defined here will be applied to the popper. It expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.arrowStyles Any CSS property defined here will be applied to the popper arrow. It expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.boundaries Offsets of the popper boundaries\n * @property {Object} data.offsets The measurements of popper, reference and arrow elements\n * @property {Object} data.offsets.popper `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.reference `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.arrow] `top` and `left` offsets, only one of them will be different from 0\n */\n\n/**\n * Default options provided to Popper.js constructor.<br />\n * These can be overridden using the `options` argument of Popper.js.<br />\n * To override an option, simply pass an object with the same\n * structure of the `options` object, as the 3rd argument. For example:\n * ```\n * new Popper(ref, pop, {\n *   modifiers: {\n *     preventOverflow: { enabled: false }\n *   }\n * })\n * ```\n * @type {Object}\n * @static\n * @memberof Popper\n */\nvar Defaults = {\n  /**\n   * Popper's placement.\n   * @prop {Popper.placements} placement='bottom'\n   */\n  placement: 'bottom',\n\n  /**\n   * Set this to true if you want popper to position it self in 'fixed' mode\n   * @prop {Boolean} positionFixed=false\n   */\n  positionFixed: false,\n\n  /**\n   * Whether events (resize, scroll) are initially enabled.\n   * @prop {Boolean} eventsEnabled=true\n   */\n  eventsEnabled: true,\n\n  /**\n   * Set to true if you want to automatically remove the popper when\n   * you call the `destroy` method.\n   * @prop {Boolean} removeOnDestroy=false\n   */\n  removeOnDestroy: false,\n\n  /**\n   * Callback called when the popper is created.<br />\n   * By default, it is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onCreate}\n   */\n  onCreate: function onCreate() {},\n\n  /**\n   * Callback called when the popper is updated. This callback is not called\n   * on the initialization/creation of the popper, but only on subsequent\n   * updates.<br />\n   * By default, it is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onUpdate}\n   */\n  onUpdate: function onUpdate() {},\n\n  /**\n   * List of modifiers used to modify the offsets before they are applied to the popper.\n   * They provide most of the functionalities of Popper.js.\n   * @prop {modifiers}\n   */\n  modifiers: modifiers\n};\n\n/**\n * @callback onCreate\n * @param {dataObject} data\n */\n\n/**\n * @callback onUpdate\n * @param {dataObject} data\n */\n\n// Utils\n// Methods\nvar Popper = function () {\n  /**\n   * Creates a new Popper.js instance.\n   * @class Popper\n   * @param {Element|referenceObject} reference - The reference element used to position the popper\n   * @param {Element} popper - The HTML / XML element used as the popper\n   * @param {Object} options - Your custom options to override the ones defined in [Defaults](#defaults)\n   * @return {Object} instance - The generated Popper.js instance\n   */\n  function Popper(reference, popper) {\n    var _this = this;\n\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    classCallCheck(this, Popper);\n\n    this.scheduleUpdate = function () {\n      return requestAnimationFrame(_this.update);\n    };\n\n    // make update() debounced, so that it only runs at most once-per-tick\n    this.update = debounce(this.update.bind(this));\n\n    // with {} we create a new object with the options inside it\n    this.options = _extends({}, Popper.Defaults, options);\n\n    // init state\n    this.state = {\n      isDestroyed: false,\n      isCreated: false,\n      scrollParents: []\n    };\n\n    // get reference and popper elements (allow jQuery wrappers)\n    this.reference = reference && reference.jquery ? reference[0] : reference;\n    this.popper = popper && popper.jquery ? popper[0] : popper;\n\n    // Deep merge modifiers options\n    this.options.modifiers = {};\n    Object.keys(_extends({}, Popper.Defaults.modifiers, options.modifiers)).forEach(function (name) {\n      _this.options.modifiers[name] = _extends({}, Popper.Defaults.modifiers[name] || {}, options.modifiers ? options.modifiers[name] : {});\n    });\n\n    // Refactoring modifiers' list (Object => Array)\n    this.modifiers = Object.keys(this.options.modifiers).map(function (name) {\n      return _extends({\n        name: name\n      }, _this.options.modifiers[name]);\n    })\n    // sort the modifiers by order\n    .sort(function (a, b) {\n      return a.order - b.order;\n    });\n\n    // modifiers have the ability to execute arbitrary code when Popper.js get inited\n    // such code is executed in the same order of its modifier\n    // they could add new properties to their options configuration\n    // BE AWARE: don't add options to `options.modifiers.name` but to `modifierOptions`!\n    this.modifiers.forEach(function (modifierOptions) {\n      if (modifierOptions.enabled && isFunction(modifierOptions.onLoad)) {\n        modifierOptions.onLoad(_this.reference, _this.popper, _this.options, modifierOptions, _this.state);\n      }\n    });\n\n    // fire the first update to position the popper in the right place\n    this.update();\n\n    var eventsEnabled = this.options.eventsEnabled;\n    if (eventsEnabled) {\n      // setup event listeners, they will take care of update the position in specific situations\n      this.enableEventListeners();\n    }\n\n    this.state.eventsEnabled = eventsEnabled;\n  }\n\n  // We can't use class properties because they don't get listed in the\n  // class prototype and break stuff like Sinon stubs\n\n\n  createClass(Popper, [{\n    key: 'update',\n    value: function update$$1() {\n      return update.call(this);\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy$$1() {\n      return destroy.call(this);\n    }\n  }, {\n    key: 'enableEventListeners',\n    value: function enableEventListeners$$1() {\n      return enableEventListeners.call(this);\n    }\n  }, {\n    key: 'disableEventListeners',\n    value: function disableEventListeners$$1() {\n      return disableEventListeners.call(this);\n    }\n\n    /**\n     * Schedules an update. It will run on the next UI update available.\n     * @method scheduleUpdate\n     * @memberof Popper\n     */\n\n\n    /**\n     * Collection of utilities useful when writing custom modifiers.\n     * Starting from version 1.7, this method is available only if you\n     * include `popper-utils.js` before `popper.js`.\n     *\n     * **DEPRECATION**: This way to access PopperUtils is deprecated\n     * and will be removed in v2! Use the PopperUtils module directly instead.\n     * Due to the high instability of the methods contained in Utils, we can't\n     * guarantee them to follow semver. Use them at your own risk!\n     * @static\n     * @private\n     * @type {Object}\n     * @deprecated since version 1.8\n     * @member Utils\n     * @memberof Popper\n     */\n\n  }]);\n  return Popper;\n}();\n\n/**\n * The `referenceObject` is an object that provides an interface compatible with Popper.js\n * and lets you use it as replacement of a real DOM node.<br />\n * You can use this method to position a popper relatively to a set of coordinates\n * in case you don't have a DOM node to use as reference.\n *\n * ```\n * new Popper(referenceObject, popperNode);\n * ```\n *\n * NB: This feature isn't supported in Internet Explorer 10.\n * @name referenceObject\n * @property {Function} data.getBoundingClientRect\n * A function that returns a set of coordinates compatible with the native `getBoundingClientRect` method.\n * @property {number} data.clientWidth\n * An ES6 getter that will return the width of the virtual reference element.\n * @property {number} data.clientHeight\n * An ES6 getter that will return the height of the virtual reference element.\n */\n\n\nPopper.Utils = (typeof window !== 'undefined' ? window : global).PopperUtils;\nPopper.placements = placements;\nPopper.Defaults = Defaults;\n\nexport default Popper;\n//# sourceMappingURL=popper.js.map\n","import {Column, INumbersColumn, isNumbersColumn, IDataRow, IOrderedGroup} from '../model';\nimport {CANVAS_HEIGHT, cssClass} from '../styles';\nimport {ANumbersCellRenderer} from './ANumbersCellRenderer';\nimport {toHeatMapColor} from './BrightnessCellRenderer';\nimport {IRenderContext, ICellRendererFactory, IImposer} from './interfaces';\nimport {renderMissingValue, renderMissingDOM} from './missing';\nimport {noop, wideEnough} from './utils';\nimport {GUESSED_ROW_HEIGHT} from '../constants';\n\n\n/** @internal */\nexport default class HeatmapCellRenderer implements ICellRendererFactory {\n  readonly title = 'Heatmap';\n\n  canRender(col: Column) {\n    return isNumbersColumn(col) && Boolean(col.dataLength);\n  }\n\n  private createContext(col: INumbersColumn, context: IRenderContext, imposer?: IImposer) {\n    const width = context.colWidth(col);\n    const cellDimension = width / col.dataLength!;\n    const labels = col.labels;\n    const render = (ctx: CanvasRenderingContext2D, data: number[], item: IDataRow, height: number) => {\n      data.forEach((d: number, j: number) => {\n        const x = j * cellDimension;\n        if (isNaN(d)) {\n          renderMissingValue(ctx, cellDimension, height, x, 0);\n          return;\n        }\n        ctx.fillStyle = toHeatMapColor(d, item, col, imposer);\n        ctx.fillRect(x, 0, cellDimension, height);\n      });\n    };\n    return {\n      template: `<canvas height=\"${GUESSED_ROW_HEIGHT}\" title=\"\"></canvas>`,\n      render,\n      width,\n      mover: (n: HTMLElement, values: string[]) => (evt: MouseEvent) => {\n        const percent = evt.offsetX / width;\n        const index = Math.max(0, Math.min(col.dataLength! - 1, Math.floor(percent * (col.dataLength! - 1) + 0.5)));\n        n.title = `${labels[index]}: ${values[index]}`;\n      }\n    };\n  }\n\n  create(col: INumbersColumn, context: IRenderContext, _hist: any, imposer?: IImposer) {\n    const {template, render, mover, width} = this.createContext(col, context, imposer);\n\n    return {\n      template,\n      update: (n: HTMLElement, d: IDataRow) => {\n        const ctx = (<HTMLCanvasElement>n).getContext('2d')!;\n        ctx.canvas.width = width;\n        ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n\n        if (renderMissingDOM(n, col, d)) {\n          return;\n        }\n        n.onmousemove = mover(n, col.getLabels(d));\n        n.onmouseleave = () => n.title = '';\n        render(ctx, col.getNumbers(d), d, GUESSED_ROW_HEIGHT);\n      },\n      render: (ctx: CanvasRenderingContext2D, d: IDataRow) => {\n        render(ctx, col.getNumbers(d), d, CANVAS_HEIGHT);\n      }\n    };\n  }\n\n  createGroup(col: INumbersColumn, context: IRenderContext, imposer?: IImposer) {\n    const {template, render, mover, width} = this.createContext(col, context, imposer);\n    const formatter = col.getNumberFormat();\n\n    return {\n      template,\n      update: (n: HTMLElement, group: IOrderedGroup) => {\n        return context.tasks.groupRows(col, group, this.title, (rows) => ANumbersCellRenderer.choose(col, rows)).then((data) => {\n          if (typeof data === 'symbol') {\n            return;\n          }\n          const ctx = (<HTMLCanvasElement>n).getContext('2d')!;\n          ctx.canvas.width = width;\n          ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n          n.onmousemove = mover(n, data.raw.map(formatter));\n          n.onmouseleave = () => n.title = '';\n          render(ctx, data.normalized, data.row!, GUESSED_ROW_HEIGHT);\n        });\n      }\n    };\n  }\n\n  createSummary(col: INumbersColumn) {\n    let labels = col.labels.slice();\n    while (labels.length > 0 && !wideEnough(col, labels.length)) {\n      labels = labels.filter((_, i) => i % 2 === 0); // even\n    }\n    let templateRows = `<div class=\"${cssClass('heatmap')}\">`;\n    for (const label of labels) {\n      templateRows += `<div class=\"${cssClass('heatmap-cell')}\"  title=\"${label}\" data-title=\"${label}\"></div>`;\n    }\n    templateRows += '</div>';\n    return {\n      template: templateRows,\n      update: noop\n    };\n  }\n}\n","const TYPE_OBJECT = '[object Object]';\n\n/**\n * deep merge the source object into the target object and return the target object.\n * will concatenate arrays instead of replacing them.\n * @internal\n */\nexport default function merge<T1, T2>(target: T1, source: T2): T1 | T2 {\n  const result: any = target;\n\n  if (!source) {\n    return result;\n  }\n\n  const bKeys: (keyof T2)[] = <(keyof T2)[]>Object.keys(source);\n  if (bKeys.length === 0) {\n    return result;\n  }\n\n  for (const key of bKeys) {\n    const value = source[key];\n\n    //merge just POJOs\n    if (Object.prototype.toString.call(value) === TYPE_OBJECT && (Object.getPrototypeOf(value) === Object.prototype)) { //pojo\n      if (result[key] == null) {\n        result[key] = {};\n      }\n      result[key] = merge(result[key], value);\n    } else if (Array.isArray(value)) {\n      if (result[key] == null) {\n        result[key] = [];\n      }\n      result[key] = result[key].concat(value);\n    } else {\n      result[key] = value;\n    }\n  }\n  return result;\n}\n","import Popper from 'popper.js';\nimport DialogManager from './DialogManager';\nimport {merge} from '../../internal';\nimport {cssClass} from '../../styles';\nimport {IRankingHeaderContext} from '../interfaces';\n\nexport interface IDialogOptions {\n  title: string;\n  fullDialog: boolean;\n  resetPossible: boolean;\n\n  // popper options\n  placement?: Popper.Placement;\n  eventsEnabled?: boolean;\n  modifiers?: Popper.Modifiers;\n  toggleDialog: boolean;\n}\n\nexport interface IDialogContext {\n  attachment: HTMLElement;\n  level: number;\n  manager: DialogManager;\n  idPrefix: string;\n}\n\nexport function dialogContext(ctx: IRankingHeaderContext, level: number, attachment: HTMLElement | MouseEvent): IDialogContext {\n  return {\n    attachment: (<MouseEvent>attachment).currentTarget != null ? <HTMLElement>(<MouseEvent>attachment).currentTarget : <HTMLElement>attachment,\n    level,\n    manager: ctx.dialogManager,\n    idPrefix: ctx.idPrefix\n  };\n}\n\nabstract class ADialog {\n\n  private readonly options: Readonly<IDialogOptions> = {\n    title: '',\n    fullDialog: false,\n    resetPossible: true,\n    placement: 'bottom-start',\n    toggleDialog: true,\n    modifiers: {\n    }\n  };\n\n  readonly node: HTMLFormElement;\n  private popper: Popper | null = null;\n\n  constructor(protected readonly dialog: Readonly<IDialogContext>, options: Partial<IDialogOptions> = {}) {\n    Object.assign(this.options, options);\n    this.node = dialog.attachment.ownerDocument!.createElement('form');\n    this.node.classList.add(cssClass('dialog'));\n  }\n\n  get attachment() {\n    return this.dialog.attachment;\n  }\n\n  get level() {\n    return this.dialog.level;\n  }\n\n  protected abstract build(node: HTMLElement): boolean | void;\n\n  equals(that: ADialog) {\n    return this.dialog.level === that.dialog.level && this.dialog.attachment === that.dialog.attachment;\n  }\n\n  protected appendDialogButtons() {\n    this.node.insertAdjacentHTML('beforeend', `<div class=\"${cssClass('dialog-buttons')}\">\n      <button class=\"${cssClass('dialog-button')}\" type=\"submit\" title=\"Apply\"></button>\n      <button class=\"${cssClass('dialog-button')}\" type=\"button\" title=\"Cancel\"></button>\n      <button class=\"${cssClass('dialog-button')}\" type=\"reset\" title=\"Reset to default values\" ${!this.options.resetPossible ? 'style=\"visibility: hidden\"': ''}></button>\n    </div>`);\n  }\n\n  open() {\n    if (this.options.toggleDialog && this.dialog.manager.removeLike(this)) {\n      return;\n    }\n    if (this.build(this.node) === false) {\n      return;\n    }\n    const parent = <HTMLElement>this.attachment.closest(`.${cssClass()}`)!;\n\n    if (this.options.title) {\n      this.node.insertAdjacentHTML('afterbegin', `<strong>${this.options.title}</strong>`);\n    }\n    if (this.options.fullDialog) {\n      this.appendDialogButtons();\n    }\n\n    parent.appendChild(this.node);\n    this.popper = new Popper(this.attachment, this.node, merge({\n      modifiers: {\n        preventOverflow: {\n          boundariesElement: parent\n        }\n      }\n    }, this.options));\n\n    const auto = this.find<HTMLInputElement>('input[autofocus]');\n    if (auto) {\n      // delay such that it works\n      self.setTimeout(() => auto.focus());\n    }\n\n    const reset = this.find<HTMLButtonElement>('button[type=reset]');\n    if (reset) {\n      reset.onclick = (evt) => {\n        evt.stopPropagation();\n        evt.preventDefault();\n        this.reset();\n      };\n    }\n    this.node.onsubmit = (evt) => {\n      evt.stopPropagation();\n      evt.preventDefault();\n      if (!this.node.checkValidity()) {\n        return false;\n      }\n      if (this.submit()) {\n        this.destroy();\n      }\n      return false;\n    };\n    const cancel = this.find<HTMLButtonElement>('button[title=Cancel]');\n    if (cancel) {\n      cancel.onclick = (evt) => {\n        evt.stopPropagation();\n        evt.preventDefault();\n        this.destroy();\n      };\n    }\n\n    this.dialog.manager.push(this);\n  }\n\n  protected find<T extends HTMLElement>(selector: string): T {\n    return <T>this.node.querySelector(selector);\n  }\n\n  protected findInput(selector: string) {\n    return this.find<HTMLInputElement>(selector);\n  }\n\n  protected forEach<M extends Element, T>(selector: string, callback: (d: M, i: number) => T): T[] {\n    return (<M[]>Array.from(this.node.querySelectorAll(selector))).map(callback);\n  }\n\n  protected reset() {\n    // hook\n  }\n\n  protected submit(): boolean {\n    // hook\n    return true;\n  }\n\n  destroy() {\n    this.dialog.manager.remove(this);\n    if (this.popper) {\n      this.popper.destroy();\n    }\n    this.node.remove();\n  }\n}\n\nexport default ADialog;\n","import ADialog, {IDialogContext} from './ADialog';\n\n/** @internal */\nexport interface IInputNumberOptions {\n  min: number;\n  max: number;\n  step: number | 'any';\n  value: number;\n  label: string | null;\n}\n\n/** @internal */\nexport default class InputNumberDialog extends ADialog {\n\n  private readonly ioptions: Readonly<IInputNumberOptions> = {\n    min: NaN,\n    max: NaN,\n    step: 'any',\n    value: NaN,\n    label: null\n  };\n\n  constructor(dialog: IDialogContext, private readonly callback: (value: number) => void, options: Partial<IInputNumberOptions> = {}) {\n    super(dialog);\n    Object.assign(this.ioptions, options);\n  }\n\n  protected build(node: HTMLElement) {\n    const o = this.ioptions;\n    node.insertAdjacentHTML('beforeend', `\n     <input type=\"number\" value=\"${isNaN(o.value) ? '' : String(o.value)}\" required autofocus placeholder=\"${o.label ? o.label : 'enter number'}\" ${isNaN(o.min) ? '' : ` min=\"${o.min}\"`} ${isNaN(o.max) ? '' : ` max=\"${o.max}\"`} step=\"${o.step}\">\n    `);\n  }\n\n  submit() {\n    this.callback(this.findInput('input[type=number]').valueAsNumber);\n    return true;\n  }\n}\n","\n/** @internal */\nexport interface IDragHandleOptions {\n  /**\n   * drag base container\n   * @default handle parentElement\n   */\n  container: HTMLElement | SVGElement;\n  /**\n   * filter to certain mouse events, e.g. shift only\n   */\n  filter(evt: MouseEvent): boolean;\n\n  onStart(handle: HTMLElement | SVGElement, x: number, delta: number, evt: MouseEvent): void;\n\n  onDrag(handle: HTMLElement | SVGElement, x: number, delta: number, evt: MouseEvent): void;\n\n  onEnd(handle: HTMLElement | SVGElement, x: number, delta: number, evt: MouseEvent): void;\n\n  /**\n   * minimal pixel delta\n   * @default 2\n   */\n  minDelta: number;\n}\n\n/**\n * allow to change the width of a column using dragging the handle\n * @internal\n */\nexport function dragHandle(handle: HTMLElement | SVGElement, options: Partial<IDragHandleOptions> = {}) {\n  const o: Readonly<IDragHandleOptions> = Object.assign({\n    container: handle.parentElement!,\n    filter: () => true,\n    onStart: () => undefined,\n    onDrag: () => undefined,\n    onEnd: () => undefined,\n    minDelta: 2\n  }, options);\n\n  // converts the given x coordinate to be relative to the given element\n  const toContainerRelative = (x: number, elem: HTMLElement | SVGElement) => {\n    const rect = elem.getBoundingClientRect();\n    return x - rect.left - elem.clientLeft;\n  };\n\n  let start = 0;\n  let last = 0;\n  let handleShift = 0;\n\n  const mouseMove = (evt: MouseEvent) => {\n    if (!o.filter(evt)) {\n      return;\n    }\n    evt.stopPropagation();\n    evt.preventDefault();\n\n    const end = toContainerRelative(evt.clientX, o.container) - handleShift;\n    if (Math.abs(last - end) < o.minDelta) {\n      //ignore\n      return;\n    }\n\n    last = end;\n    o.onDrag(handle, end, last - end, evt);\n  };\n\n  const mouseUp = (evt: MouseEvent) => {\n    if (!o.filter(evt)) {\n      return;\n    }\n    evt.stopPropagation();\n    evt.preventDefault();\n\n    const end = toContainerRelative(evt.clientX, o.container) - handleShift;\n    o.container.removeEventListener('mousemove', <any>mouseMove);\n    o.container.removeEventListener('mouseup', <any>mouseUp);\n    o.container.removeEventListener('mouseleave', <any>mouseUp);\n\n    if (Math.abs(start - end) < 2) {\n      //ignore\n      return;\n    }\n\n    o.onEnd(handle, end, start - end, evt);\n  };\n\n  handle.onmousedown = (evt) => {\n    if (!o.filter(evt)) {\n      return;\n    }\n    evt.stopPropagation();\n    evt.preventDefault();\n\n    handleShift = toContainerRelative(evt.clientX, handle);\n    start = last = toContainerRelative(evt.clientX, o.container) - handleShift;\n\n    // register other event listeners\n    o.container.addEventListener('mousemove', <any>mouseMove);\n    o.container.addEventListener('mouseup', <any>mouseUp);\n    o.container.addEventListener('mouseleave', <any>mouseUp);\n\n    o.onStart(handle, start, 0, evt);\n  };\n}\n","import {DENSE_HISTOGRAM} from '../constants';\nimport {IBin, round, IDragHandleOptions, dragHandle} from '../internal';\nimport {cssClass, FILTERED_OPACITY} from '../styles';\nimport {color} from 'd3-color';\nimport {filterMissingNumberMarkup, updateFilterMissingNumberMarkup} from '../ui/missing';\n\nfunction filteredColor(input: string) {\n  const c = color(input)!;\n  c.opacity = FILTERED_OPACITY;\n  return c.toString();\n}\n\n/**\n * @internal\n */\nexport function histogramTemplate(guessedBins: number) {\n  let bins = '';\n  for (let i = 0; i < guessedBins; ++i) {\n    bins += `<div class=\"${cssClass('histogram-bin')}\" title=\"Bin ${i}: 0\" data-x=\"\"><div style=\"height: 0\" ></div></div>`;\n  }\n  // no closing div to be able to append things\n  return `<div class=\"${cssClass('histogram')} ${guessedBins > DENSE_HISTOGRAM ? cssClass('dense') : ''}\">${bins}`;\n}\n\nfunction matchBins(n: HTMLElement, bins: number) {\n  //adapt the number of children\n  let nodes = <HTMLElement[]>Array.from(n.querySelectorAll('[data-x]'));\n  if (nodes.length > bins) {\n    nodes.splice(bins, nodes.length - bins).forEach((d) => d.remove());\n  } else if (nodes.length < bins) {\n    for (let i = nodes.length; i < bins; ++i) {\n      n.insertAdjacentHTML('afterbegin', `<div class=\"${cssClass('histogram-bin')}\" title=\"Bin ${i}: 0\" data-x=\"\"><div style=\"height: 0\" ></div></div>`);\n    }\n    nodes = Array.from(n.querySelectorAll('[data-x]'));\n  }\n  n.classList.toggle(cssClass('dense'), bins > DENSE_HISTOGRAM);\n  return nodes;\n}\n\nexport interface IHistogramLike<T> {\n  readonly maxBin: number;\n  readonly hist: ReadonlyArray<IBin<T>>;\n}\n\n/** @internal */\nexport function histogramUpdate<T>(n: HTMLElement, stats: IHistogramLike<T>, unfiltered: IHistogramLike<T> | null, formatter: (v: T) => string, colorOf: (bin: IBin<T>) => string) {\n  const hist = stats.hist;\n  const nodes = matchBins(n, hist.length);\n\n  nodes.forEach((d: HTMLElement, i) => {\n    const bin = hist[i];\n    const inner = <HTMLElement>d.firstElementChild!;\n    if (!bin) {\n      inner.style.height = '0%';\n      return;\n    }\n\n    const {x0, x1, count} = bin;\n    const color = colorOf(bin);\n    d.dataset.x = formatter(x0);\n\n    if (unfiltered) {\n      const gCount = (unfiltered.hist[i] || {count}).count;\n      d.title = `${formatter(x0)} - ${formatter(x1)} (${count} of ${gCount})`;\n      inner.style.height = `${round(gCount * 100 / unfiltered.maxBin, 2)}%`;\n      const relY = 100 - round(count * 100 / gCount, 2);\n      inner.style.background = relY === 0 ? color : (relY === 100 ? filteredColor(color) : `linear-gradient(${filteredColor(color)} ${relY}%, ${color} ${relY}%, ${color} 100%)`);\n    } else {\n      d.title = `${formatter(x0)} - ${formatter(x1)} (${count})`;\n      inner.style.height = `${round(count * 100 / stats.maxBin, 2)}%`;\n      inner.style.backgroundColor = color;\n    }\n  });\n}\n\n/**\n * @internal\n */\nexport function mappingHintTemplate(range: [string, string]) {\n  return `<span class=\"${cssClass('mapping-hint')}\">${range[0]}</span><span class=\"${cssClass('mapping-hint')}\">${range[1]}</span>`;\n}\n\n/**\n * @internal\n */\nexport function mappingHintUpdate(n: HTMLElement, range: [string, string]) {\n  Array.from(n.getElementsByTagName('span')).forEach((d: HTMLElement, i) => d.textContent = range[i]);\n}\n\n\nexport interface IFilterContext<T> {\n  percent(v: T): number;\n  unpercent(p: number): T;\n  format(v: T): string;\n  setFilter(filterMissing: boolean, min: T, max: T): void;\n  edit(value: T, attachment: HTMLElement, type: 'min' | 'max'): Promise<T>;\n  domain: [T, T];\n}\n/**\n * @internal\n */\nexport interface IFilterInfo<T> {\n  filterMissing: boolean;\n  filterMin: T;\n  filterMax: T;\n}\n\n\nexport function filteredHistTemplate<T>(c: IFilterContext<T>, f: IFilterInfo<T>) {\n  return `\n    <div class=\"${cssClass('histogram-min-hint')}\" style=\"width: ${c.percent(f.filterMin)}%\"></div>\n    <div class=\"${cssClass('histogram-max-hint')}\" style=\"width: ${100 - c.percent(f.filterMax)}%\"></div>\n    <div class=\"${cssClass('histogram-min')}\" data-value=\"${c.format(f.filterMin)}\" style=\"left: ${c.percent(f.filterMin)}%\" title=\"min filter, drag or shift click to change\"></div>\n    <div class=\"${cssClass('histogram-max')}\" data-value=\"${c.format(f.filterMax)}\" style=\"right: ${100 - c.percent(f.filterMax)}%\" title=\"max filter, drag or shift click to change\"></div>\n    ${filterMissingNumberMarkup(f.filterMissing, 0)}\n  `;\n}\n\n\nexport function initFilter<T>(node: HTMLElement, context: IFilterContext<T>) {\n  const min = <HTMLElement>node.getElementsByClassName(cssClass('histogram-min'))[0];\n  const max = <HTMLElement>node.getElementsByClassName(cssClass('histogram-max'))[0];\n  const minHint = <HTMLElement>node.getElementsByClassName(cssClass('histogram-min-hint'))[0];\n  const maxHint = <HTMLElement>node.getElementsByClassName(cssClass('histogram-max-hint'))[0];\n  const filterMissing = <HTMLInputElement>node.getElementsByTagName('input')[0];\n\n  const setFilter = () => {\n    const minValue = context.unpercent(parseFloat(min.style.left!));\n    const maxValue = context.unpercent(100 - parseFloat(max.style.right!));\n    context.setFilter(filterMissing.checked, minValue, maxValue);\n  };\n\n  min.onclick = (evt) => {\n    if (!evt.shiftKey && !evt.ctrlKey) {\n      return;\n    }\n    evt.preventDefault();\n    evt.stopPropagation();\n\n    const value = context.unpercent(parseFloat(min.style.left!));\n\n    context.edit(value, min, 'min').then((newValue) => {\n      minHint.style.width = `${context.percent(newValue)}%`;\n      min.dataset.value = context.format(newValue);\n      min.style.left = `${context.percent(newValue)}%`;\n      min.classList.toggle(cssClass('swap-hint'), context.percent(newValue) > 15);\n      setFilter();\n    });\n  };\n\n  max.onclick = (evt) => {\n    if (!evt.shiftKey && !evt.ctrlKey) {\n      return;\n    }\n    evt.preventDefault();\n    evt.stopPropagation();\n\n    const value = context.unpercent(100 - parseFloat(max.style.right!));\n\n    context.edit(value, max, 'max').then((newValue) => {\n      maxHint.style.width = `${100 - context.percent(newValue)}%`;\n      max.dataset.value = context.format(newValue);\n      max.style.right = `${100 - context.percent(newValue)}%`;\n      min.classList.toggle(cssClass('swap-hint'), context.percent(newValue) < 85);\n      setFilter();\n    });\n  };\n\n  filterMissing.onchange = () => setFilter();\n\n  const options: Partial<IDragHandleOptions> = {\n    minDelta: 0,\n    filter: (evt) => evt.button === 0 && !evt.shiftKey && !evt.ctrlKey,\n    onStart: (handle) => handle.classList.add(cssClass('hist-dragging')),\n    onDrag: (handle, x) => {\n      const total = node.clientWidth;\n      const px = Math.max(0, Math.min(x, total));\n      const percent = Math.round(100 * px / total);\n      (<HTMLElement>handle).dataset.value = context.format(context.unpercent(percent));\n\n      if ((<HTMLElement>handle).classList.contains(cssClass('histogram-min'))) {\n        handle.style.left = `${percent}%`;\n        handle.classList.toggle(cssClass('swap-hint'), percent > 15);\n        minHint.style.width = `${percent}%`;\n        return;\n      }\n      handle.style.right = `${100 - percent}%`;\n      handle.classList.toggle(cssClass('swap-hint'), percent < 85);\n      maxHint.style.width = `${100 - percent}%`;\n    },\n    onEnd: (handle) => {\n      handle.classList.remove(cssClass('hist-dragging'));\n      setFilter();\n    }\n  };\n  dragHandle(min, options);\n  dragHandle(max, options);\n\n  return (missing: number, f: IFilterInfo<T>) => {\n    minHint.style.width = `${context.percent(f.filterMin)}%`;\n    maxHint.style.width = `${100 - context.percent(f.filterMax)}%`;\n    min.dataset.value = context.format(f.filterMin);\n    max.dataset.value = context.format(f.filterMax);\n    min.style.left = `${context.percent(f.filterMin)}%`;\n    max.style.right = `${100 - context.percent(f.filterMax)}%`;\n    filterMissing.checked = f.filterMissing;\n    updateFilterMissingNumberMarkup(<HTMLElement>filterMissing.parentElement, missing);\n  };\n}\n","import {normalizedStatsBuilder, IStatistics, round, getNumberOfBins} from '../internal';\nimport {Column, IDataRow, IOrderedGroup, INumberColumn, INumbersColumn, isNumberColumn, isNumbersColumn, IMapAbleColumn, isMapAbleColumn} from '../model';\nimport InputNumberDialog from '../ui/dialogs/InputNumberDialog';\nimport {colorOf} from './impose';\nimport {IRenderContext, ERenderMode, ICellRendererFactory, IImposer} from './interfaces';\nimport {renderMissingDOM} from './missing';\nimport {cssClass} from '../styles';\nimport {histogramUpdate, histogramTemplate, IHistogramLike, mappingHintTemplate, mappingHintUpdate, IFilterInfo, filteredHistTemplate, IFilterContext, initFilter} from './histogram';\n\n/** @internal */\nexport default class HistogramCellRenderer implements ICellRendererFactory {\n  readonly title = 'Histogram';\n\n  canRender(col: Column, mode: ERenderMode) {\n    return (isNumberColumn(col) && mode !== ERenderMode.CELL) || (isNumbersColumn(col) && mode === ERenderMode.CELL);\n  }\n\n  create(col: INumbersColumn, _context: IRenderContext, imposer?: IImposer) {\n    const {template, render, guessedBins} = getHistDOMRenderer(col, imposer);\n    return {\n      template: `${template}</div>`,\n      update: (n: HTMLElement, row: IDataRow) => {\n        if (renderMissingDOM(n, col, row)) {\n          return;\n        }\n        const b = normalizedStatsBuilder(guessedBins);\n        for (const n of col.getNumbers(row)) {\n          b.push(n);\n        }\n        const hist = b.build();\n        render(n, hist);\n      }\n    };\n  }\n\n  createGroup(col: INumberColumn, context: IRenderContext, imposer?: IImposer) {\n    const {template, render} = getHistDOMRenderer(col, imposer);\n    return {\n      template: `${template}</div>`,\n      update: (n: HTMLElement, group: IOrderedGroup) => {\n        return context.tasks.groupNumberStats(col, group).then((r) => {\n          if (typeof r === 'symbol') {\n            return;\n          }\n          const {summary, group} = r;\n\n          render(n, group, summary);\n        });\n      }\n    };\n  }\n\n  createSummary(col: INumberColumn, context: IRenderContext, interactive: boolean, imposer?: IImposer) {\n    const r = getHistDOMRenderer(col, imposer);\n\n    const staticHist = !interactive || !isMapAbleColumn(col);\n    return staticHist ? staticSummary(col, context, r.template, r.render) : interactiveSummary(<IMapAbleColumn>col, context, r.template, r.render);\n  }\n}\n\n\nfunction staticSummary(col: INumberColumn, context: IRenderContext, template: string, render: (n: HTMLElement, stats: IStatistics, unfiltered?: IStatistics) => void) {\n  if (isMapAbleColumn(col)) {\n    template += mappingHintTemplate(col.getRange());\n  }\n  return {\n    template: `${template}</div>`,\n    update: (node: HTMLElement) => {\n      if (isMapAbleColumn(col)) {\n        mappingHintUpdate(node, col.getRange());\n      }\n\n      return context.tasks.summaryNumberStats(col).then((r) => {\n        if (typeof r === 'symbol') {\n          return;\n        }\n        const {summary} = r;\n\n        node.classList.toggle(cssClass('missing'), !summary);\n        if (!summary) {\n          return;\n        }\n        render(node, summary);\n      });\n    }\n  };\n}\n\nfunction interactiveSummary(col: IMapAbleColumn, context: IRenderContext, template: string, render: (n: HTMLElement, stats: IStatistics, unfiltered?: IStatistics) => void) {\n  const fContext = createFilterContext(col, context);\n  template += filteredHistTemplate(fContext, createFilterInfo(col));\n\n  let updateFilter: (missing: number, f: IFilterInfo<number>) => void;\n\n  return {\n    template: `${template}</div>`,\n    update: (node: HTMLElement) => {\n      if (!updateFilter) {\n        updateFilter = initFilter(node, fContext);\n      }\n      return context.tasks.summaryNumberStats(col).then((r) => {\n        if (typeof r === 'symbol') {\n          return;\n        }\n        const {summary, data} = r;\n\n        updateFilter(data ? data.missing : (summary ? summary.missing : 0), createFilterInfo(col));\n\n        node.classList.add(cssClass('histogram-i'));\n        node.classList.toggle(cssClass('missing'), !summary);\n        if (!summary) {\n          return;\n        }\n        render(node, summary, data);\n      });\n    }\n  };\n}\n\n/** @internal */\nexport function getHistDOMRenderer(col: INumberColumn, imposer?: IImposer) {\n  const ranking = col.findMyRanker();\n  const guessedBins = ranking ? getNumberOfBins(ranking.getOrderLength()) : 10;\n  const formatter = col.getNumberFormat();\n\n  const render = (n: HTMLElement, stats: IHistogramLike<number>, unfiltered?: IHistogramLike<number>) => {\n    return histogramUpdate(n, stats, unfiltered || null, formatter, (bin) => colorOf(col, null, imposer, (bin.x1 + bin.x0) / 2)!);\n  };\n  return {\n    template: histogramTemplate(guessedBins),\n    render,\n    guessedBins\n  };\n}\n\nfunction createFilterInfo(col: IMapAbleColumn): IFilterInfo<number> {\n  const filter = col.getFilter();\n  const domain = col.getMapping().domain;\n  const filterMin = isFinite(filter.min) ? filter.min : domain[0];\n  const filterMax = isFinite(filter.max) ? filter.max : domain[1];\n  return {\n    filterMissing: filter.filterMissing,\n    filterMin,\n    filterMax\n  };\n}\n\nfunction createFilterContext(col: IMapAbleColumn, context: IRenderContext): IFilterContext<number> {\n  const domain = col.getMapping().domain;\n  const percent = (v: number) => Math.round(100 * (v - domain[0]) / (domain[1] - domain[0]));\n  const unpercent = (v: number) => ((v / 100) * (domain[1] - domain[0]) + domain[0]);\n  return {\n    percent,\n    unpercent,\n    domain: <[number, number]>domain,\n    format: (v) => round(v, 2).toString(),\n    setFilter: (filterMissing, minValue, maxValue) => col.setFilter({\n      filterMissing,\n      min: Math.abs(minValue - domain[0]) < 0.001 ? NaN : minValue,\n      max: Math.abs(maxValue - domain[1]) < 0.001 ? NaN : maxValue\n    }),\n    edit: (value, attachment) => {\n      return new Promise((resolve) => {\n        const dialogCtx = {\n          attachment,\n          manager: context.dialogManager,\n          level: 1,\n          idPrefix: context.idPrefix\n        };\n        const dialog = new InputNumberDialog(dialogCtx, resolve, {\n            value, min: domain[0], max: domain[1]\n          });\n        dialog.open();\n      });\n    }\n  };\n}\n","import {Column, IDataRow, LinkColumn} from '../model';\nimport {ERenderMode, ICellRendererFactory} from './interfaces';\nimport {renderMissingDOM} from './missing';\nimport {noRenderer} from './utils';\nimport {abortAble} from 'lineupengine';\n\nfunction loadImage(src: string) {\n  return new Promise<HTMLImageElement>((resolve) => {\n    const image = new Image();\n    image.onload = () => resolve(image);\n    image.src = src;\n  });\n}\n\n/** @internal */\nexport default class ImageCellRenderer implements ICellRendererFactory {\n  readonly title = 'Image';\n\n  canRender(col: Column, mode: ERenderMode) {\n    return col instanceof LinkColumn && mode === ERenderMode.CELL;\n  }\n\n  create(col: LinkColumn) {\n    return {\n      template: `<div></div>`,\n      update: (n: HTMLElement, d: IDataRow) => {\n        const missing = renderMissingDOM(n, col, d);\n        n.style.backgroundImage = null;\n        if (missing) {\n          n.title = '';\n          return;\n        }\n        const v = col.getLink(d);\n        n.title = v ? v.alt : '';\n        if (!v) {\n          return;\n        }\n        return abortAble(loadImage(v.href)).then((image) => {\n          if (typeof image === 'symbol') {\n            return;\n          }\n          n.style.backgroundImage = missing || !v ? null : `url('${image.src}')`;\n        });\n      }\n    };\n  }\n\n  createGroup() {\n    return noRenderer;\n  }\n\n  createSummary() {\n    return noRenderer;\n  }\n}\n","import {ISequence} from '../internal';\nimport {Column, IDataRow, IOrderedGroup} from '../model';\nimport {ERenderMode, ICellRenderer, ICellRendererFactory, IGroupCellRenderer, IImposer, IRenderContext} from './interfaces';\nimport {noRenderer} from './utils';\n\n/**\n * helper class that renders a group renderer as a selected (e.g. median) single item\n * @internal\n */\nexport abstract class AAggregatedGroupRenderer<T extends Column> implements ICellRendererFactory {\n  abstract readonly title: string;\n\n  abstract canRender(col: Column, mode: ERenderMode): boolean;\n\n  abstract create(col: T, context: IRenderContext, imposer?: IImposer): ICellRenderer;\n\n  protected abstract aggregatedIndex(rows: ISequence<IDataRow>, col: T): {row: IDataRow, index: number};\n\n  createGroup(col: T, context: IRenderContext, imposer?: IImposer): IGroupCellRenderer {\n    const single = this.create(col, context, imposer);\n    return {\n      template: single.template,\n      update: (node: HTMLElement, group: IOrderedGroup) => {\n        return context.tasks.groupRows(col, group, 'aagreated', (rows) => this.aggregatedIndex(rows, col)).then((data) => {\n          if (typeof data !== 'symbol') {\n            single.update(node, data.row, data.index, group);\n          }\n        });\n      }\n    };\n  }\n\n  createSummary() {\n    return noRenderer;\n  }\n}\n\n/**\n * @internal\n */\nexport default AAggregatedGroupRenderer;\n","import {ISequence, round} from '../internal';\nimport {Column, IDataRow, INumberColumn, isNumberColumn, IMultiLevelColumn, isMultiLevelColumn, IOrderedGroup} from '../model';\nimport {medianIndex} from '../model/internalNumber';\nimport {COLUMN_PADDING} from '../styles';\nimport {AAggregatedGroupRenderer} from './AAggregatedGroupRenderer';\nimport {IRenderContext, ERenderMode, ICellRendererFactory, IImposer, IRenderCallback} from './interfaces';\nimport {renderMissingCanvas, renderMissingDOM} from './missing';\nimport {matchColumns, multiLevelGridCSSClass} from './utils';\nimport {cssClass} from '../styles';\nimport {IAbortAblePromise, abortAbleAll} from 'lineupengine';\n\n/** @internal */\nexport function createData(parent: {children: Column[]} & Column, context: IRenderContext, stacked: boolean, mode: ERenderMode, imposer?: IImposer) {\n  const padding = COLUMN_PADDING;\n  let offset = 0;\n  const cols = parent.children.map((column) => {\n    const shift = offset;\n    const width = column.getWidth();\n    offset += width;\n    offset += (!stacked ? padding : 0);\n\n    const renderer = mode === ERenderMode.CELL ? context.renderer(column, imposer) : null;\n    const groupRenderer = mode === ERenderMode.GROUP ? context.groupRenderer(column, imposer) : null;\n    const summaryRenderer = mode === ERenderMode.GROUP ? context.summaryRenderer(column, false, imposer) : null;\n    let template: string = '';\n    let rendererId: string = '';\n    switch (mode) {\n      case ERenderMode.CELL:\n        template = renderer!.template;\n        rendererId = column.getRenderer();\n        break;\n      case ERenderMode.GROUP:\n        template = groupRenderer!.template;\n        rendererId = column.getGroupRenderer();\n        break;\n      case ERenderMode.SUMMARY:\n        template = summaryRenderer!.template;\n        rendererId = column.getSummaryRenderer();\n        break;\n    }\n    // inject data attributes\n    template = template.replace(/^<([^ >]+)([ >])/, `<$1 data-column-id=\"${column.id}\" data-renderer=\"${rendererId}\"$2`);\n    // inject classes\n    if (/^<([^>]+) class=\"([ >]*)/.test(template)) {\n      // has class attribute\n      template = template.replace(/^<([^>]+) class=\"([ >]*)/, `<$1 class=\"${cssClass(`renderer-${rendererId}`)} $2`);\n    } else {\n      // inject as the others\n      template = template.replace(/^<([^ >]+)([ >])/, `<$1 class=\"${cssClass(`renderer-${rendererId}`)}\"$2`);\n    }\n    return {\n      column,\n      shift,\n      width,\n      template,\n      rendererId,\n      renderer,\n      groupRenderer,\n      summaryRenderer\n    };\n  });\n  return {cols, stacked, padding};\n}\n\n/** @internal */\nexport default class MultiLevelCellRenderer extends AAggregatedGroupRenderer<IMultiLevelColumn & Column> implements ICellRendererFactory {\n  readonly title: string;\n\n  constructor(private readonly stacked: boolean = true) {\n    super();\n    this.title = this.stacked ? 'Stacked Bar' : 'Nested';\n  }\n\n  canRender(col: Column, mode: ERenderMode) {\n    return isMultiLevelColumn(col) && mode !== ERenderMode.SUMMARY;\n  }\n\n  create(col: IMultiLevelColumn & Column, context: IRenderContext, imposer?: IImposer) {\n    const {cols, stacked} = createData(col, context, this.stacked, ERenderMode.CELL, imposer);\n    const width = context.colWidth(col);\n    return {\n      template: `<div class='${multiLevelGridCSSClass(context.idPrefix, col)} ${!stacked ? cssClass('grid-space') : ''}'>${cols.map((d) => d.template).join('')}</div>`,\n      update: (n: HTMLDivElement, d: IDataRow, i: number, group: IOrderedGroup) => {\n        if (renderMissingDOM(n, col, d)) {\n          return null;\n        }\n        matchColumns(n, cols, context);\n\n        const toWait: IAbortAblePromise<void>[] = [];\n        const children = <HTMLElement[]>Array.from(n.children);\n        const total = col.getWidth();\n        let missingWeight = 0;\n        cols.forEach((col, ci) => {\n          const weight = col.column.getWidth() / total;\n          const cnode = children[ci];\n          cnode.classList.add(cssClass(this.stacked ? 'stack-sub' : 'nested-sub'), cssClass('detail'));\n          cnode.dataset.group = 'd';\n          cnode.style.transform = stacked ? `translate(-${round((missingWeight / weight) * 100, 4)}%,0)` : null;\n          (<any>cnode.style).gridColumnStart = (ci + 1).toString();\n          const r = col.renderer!.update(cnode, d, i, group);\n          if (stacked) {\n            missingWeight += (1 - (<INumberColumn>col.column).getNumber(d)) * weight;\n          }\n          if (r) {\n            toWait.push(r);\n          }\n        });\n\n        if (toWait.length > 0) {\n          return <IAbortAblePromise<void>>abortAbleAll(toWait);\n        }\n        return null;\n      },\n      render: (ctx: CanvasRenderingContext2D, d: IDataRow, i: number, group: IOrderedGroup) => {\n        if (renderMissingCanvas(ctx, col, d, width)) {\n          return null;\n        }\n        const toWait: {shift: number, r: IAbortAblePromise<IRenderCallback>}[] = [];\n        let stackShift = 0;\n        for (const col of cols) {\n          const cr = col.renderer!;\n          if (cr.render) {\n            const shift = col.shift - stackShift;\n            ctx.translate(shift, 0);\n            const r = cr.render(ctx, d, i, group);\n            if (typeof r !== 'boolean' && r) {\n              toWait.push({shift, r});\n            }\n            ctx.translate(-shift, 0);\n          }\n          if (stacked) {\n            stackShift += col.width * (1 - (<INumberColumn>col.column).getNumber(d));\n          }\n        }\n\n        if (toWait.length === 0) {\n          return null;\n        }\n\n        return abortAbleAll(toWait.map((d) => d.r)).then((callbacks) => {\n          return (ctx: CanvasRenderingContext2D) => {\n            if (typeof callbacks === 'symbol') {\n              return;\n            }\n            for (let i = 0; i < callbacks.length; ++i) {\n              const callback = callbacks[i];\n              if (typeof callback !== 'function') {\n                continue;\n              }\n              const shift = toWait[i].shift;\n              ctx.translate(shift, 0);\n              callback(ctx);\n              ctx.translate(-shift, 0);\n            }\n          };\n        });\n      }\n    };\n  }\n\n\n  createGroup(col: IMultiLevelColumn & Column, context: IRenderContext, imposer?: IImposer) {\n    if (this.stacked && isNumberColumn(col)) {\n      return super.createGroup(col, context, imposer);\n    }\n\n    const {cols} = createData(col, context, false, ERenderMode.GROUP, imposer);\n    return {\n      template: `<div class='${multiLevelGridCSSClass(context.idPrefix, col)} ${cssClass('grid-space')}'>${cols.map((d) => d.template).join('')}</div>`,\n      update: (n: HTMLElement, group: IOrderedGroup) => {\n        matchColumns(n, cols, context);\n\n        const toWait: IAbortAblePromise<void>[] = [];\n        const children = <HTMLElement[]>Array.from(n.children);\n        cols.forEach((col, ci) => {\n          const cnode = children[ci];\n          cnode.classList.add(cssClass(this.stacked ? 'stack-sub' : 'nested-sub'), cssClass('group'));\n          cnode.dataset.group = 'g';\n          (<any>cnode.style).gridColumnStart = (ci + 1).toString();\n          const r = col.groupRenderer!.update(cnode, group);\n          if (r) {\n            toWait.push(r);\n          }\n        });\n\n        if (toWait.length > 0) {\n          return <IAbortAblePromise<void>>abortAbleAll(toWait);\n        }\n        return null;\n      }\n    };\n  }\n\n  protected aggregatedIndex(rows: ISequence<IDataRow>, col: IMultiLevelColumn & Column) {\n    console.assert(isNumberColumn(col));\n    return medianIndex(rows, (<INumberColumn><any>col));\n  }\n}\n","import {INumberBin, IStatistics} from '../internal';\nimport {Column, CompositeNumberColumn, IDataRow, IOrderedGroup, INumberColumn} from '../model';\nimport {CANVAS_HEIGHT, cssClass} from '../styles';\nimport {getHistDOMRenderer} from './HistogramCellRenderer';\nimport {IRenderContext, ERenderMode, ICellRendererFactory} from './interfaces';\nimport {renderMissingCanvas, renderMissingDOM} from './missing';\nimport {createData} from './MultiLevelCellRenderer';\nimport {colorOf, matchColumns, forEachChild} from './utils';\nimport {tasksAll} from '../provider';\nimport {IHistogramLike} from './histogram';\n\n\n/** @internal */\nexport default class InterleavingCellRenderer implements ICellRendererFactory {\n  readonly title = 'Interleaved';\n\n  canRender(col: Column) {\n    return col instanceof CompositeNumberColumn;\n  }\n\n  create(col: CompositeNumberColumn, context: IRenderContext) {\n    const {cols} = createData(col, context, false, ERenderMode.CELL);\n    const width = context.colWidth(col);\n    return {\n      template: `<div>${cols.map((r) => r.template).join('')}</div>`,\n      update: (n: HTMLDivElement, d: IDataRow, i: number, group: IOrderedGroup) => {\n        const missing = renderMissingDOM(n, col, d);\n        if (missing) {\n          return;\n        }\n        matchColumns(n, cols, context);\n        forEachChild(n, (ni: HTMLElement, j) => {\n          cols[j].renderer!.update(ni, d, i, group);\n        });\n      },\n      render: (ctx: CanvasRenderingContext2D, d: IDataRow, _i: number, group: IOrderedGroup) => {\n        if (renderMissingCanvas(ctx, col, d, width)) {\n          return;\n        }\n\n        ctx.save();\n        ctx.scale(1, 1 / cols.length); // scale since internal use the height, too\n        cols.forEach((r, i) => {\n          const rr = r.renderer!;\n          if (rr.render) {\n            rr.render(ctx, d, i, group);\n          }\n          ctx.translate(0, CANVAS_HEIGHT);\n        });\n        ctx.restore();\n      }\n    };\n  }\n\n  createGroup(col: CompositeNumberColumn, context: IRenderContext) {\n    const {cols} = createData(col, context, false, ERenderMode.GROUP);\n    return {\n      template: `<div>${cols.map((r) => r.template).join('')}</div>`,\n      update: (n: HTMLElement, group: IOrderedGroup) => {\n        matchColumns(n, cols, context);\n        forEachChild(n, (ni: HTMLElement, j) => {\n          cols[j].groupRenderer!.update(ni, group);\n        });\n      }\n    };\n  }\n\n  createSummary(col: CompositeNumberColumn, context: IRenderContext, _interactive: boolean) {\n    const cols = col.children;\n    let acc = 0;\n    const {template, render} = getHistDOMRenderer(col, {\n      color: () => colorOf(cols[(acc++) % cols.length])\n    });\n    return {\n      template,\n      update: (n: HTMLElement) => {\n        const tasks = cols.map((col) => context.tasks.summaryNumberStats(<INumberColumn>col));\n\n        return tasksAll(tasks).then((vs) => {\n          if (typeof vs === 'symbol') {\n            return;\n          }\n          const summaries = vs.map((d) => d.summary);\n          if (!summaries.some(Boolean)) {\n            n.classList.add(cssClass('missing'));\n            return;\n          }\n          n.classList.remove(cssClass('missing'));\n          const grouped = groupedHist(summaries)!;\n          render(n, grouped);\n        });\n      }\n    };\n  }\n}\n\nconst dummyBin: INumberBin = {\n  count: 0,\n  x0: 0,\n  x1: 0\n};\n\nfunction groupedHist(stats: (IStatistics | null)[]): IHistogramLike<number> | null {\n  const sample = stats.find(Boolean)!;\n  if (!sample) {\n    return null;\n  }\n\n  const bins = sample.hist.length;\n  // assert all have the same bin size\n  const hist = <INumberBin[]>[];\n  let maxBin = 0;\n  for (let i = 0; i < bins; ++i) {\n    stats.forEach((s) => {\n      const bin = s ? s.hist[i] : null;\n      if (!bin) {\n        hist.push(dummyBin);\n        return;\n      }\n      if (bin.count > maxBin) {\n        maxBin = bin.count;\n      }\n      hist.push(bin);\n    });\n  }\n  return {\n    maxBin,\n    hist\n  };\n}\n","import {LinkColumn, Column, IDataRow, IOrderedGroup} from '../model';\nimport {IRenderContext, ERenderMode, ICellRendererFactory} from './interfaces';\nimport {renderMissingDOM} from './missing';\nimport {noRenderer, setText} from './utils';\nimport {cssClass} from '../styles';\nimport {ISequence} from '../internal';\n\n/** @internal */\nexport default class LinkCellRenderer implements ICellRendererFactory {\n  readonly title = 'Link';\n\n  canRender(col: Column, mode: ERenderMode) {\n    return col instanceof LinkColumn && mode !== ERenderMode.SUMMARY;\n  }\n\n  create(col: LinkColumn) {\n    const align = col.alignment || 'left';\n    return {\n      template: `<a${align !== 'left' ? ` class=\"${cssClass(align)}\"` : ''} target=\"_blank\" rel=\"noopener\" href=\"\"></a>`,\n      update: (n: HTMLAnchorElement, d: IDataRow) => {\n        if (renderMissingDOM(n, col, d)) {\n          return;\n        }\n        const v = col.getLink(d);\n        n.href = v ? v.href : '';\n        if (col.escape) {\n          setText(n, v ? v.alt : '');\n        } else {\n          n.innerHTML = v ? v.alt : '';\n        }\n      }\n    };\n  }\n\n  private static exampleText(col: LinkColumn, rows: ISequence<IDataRow>) {\n    const numExampleRows = 5;\n    const examples = <string[]>[];\n    rows.every((row) => {\n      const v = col.getLink(row);\n      if (!v) {\n        return true;\n      }\n      examples.push(`<a target=\"_blank\" rel=\"noopener\"  href=\"${v.href}\">${v.alt}</a>`);\n      return examples.length < numExampleRows;\n    });\n    return `${examples.join(', ')}${examples.length < rows.length ? ', &hellip;' : ''}`;\n  }\n\n  createGroup(col: LinkColumn, context: IRenderContext) {\n    return {\n      template: `<div> </div>`,\n      update: (n: HTMLDivElement, group: IOrderedGroup) => {\n        return context.tasks.groupExampleRows(col, group, 'link', (rows) => LinkCellRenderer.exampleText(col, rows)).then((text) => {\n          if (typeof text !== 'symbol') {\n            n.innerHTML = text;\n          }\n        });\n      }\n    };\n  }\n\n  createSummary() {\n    return noRenderer;\n  }\n}\n","import {IArrayColumn, IKeyValue, IMapColumn, isArrayColumn, isMapColumn, Column, IDataRow, isMissingValue, IOrderedGroup} from '../model';\nimport {IRenderContext, ICellRendererFactory} from './interfaces';\nimport {renderMissingDOM} from './missing';\nimport {forEach, noop} from './utils';\nimport {cssClass} from '../styles';\nimport {ISequence} from '../internal';\n\n/** @internal */\nexport default class TableCellRenderer implements ICellRendererFactory {\n  readonly title = 'Table';\n\n  canRender(col: Column) {\n    return isMapColumn(col);\n  }\n\n  create(col: IMapColumn<any>) {\n    if (isArrayColumn(col) && col.dataLength) {\n      // fixed length optimized rendering\n      return this.createFixed(col);\n    }\n    return {\n      template: `<div class=\"${cssClass('rtable')}\"></div>`,\n      update: (node: HTMLElement, d: IDataRow) => {\n        if (renderMissingDOM(node, col, d)) {\n          return;\n        }\n        node.innerHTML = col.getMapLabel(d).map(({key, value}) => `<div class=\"${cssClass('table-cell')}\">${key}</div><div class=\"${cssClass('table-cell')}\">${value}</div>`).join('');\n      }\n    };\n  }\n\n  private static template(col: IArrayColumn<any>) {\n    const labels = col.labels;\n    return `<div>${labels.map((l) => `<div class=\"${cssClass('table-cell')}\">${l}</div><div  class=\"${cssClass('table-cell')}\" data-v></div>`).join('\\n')}</div>`;\n  }\n\n  private createFixed(col: IArrayColumn<any>) {\n    return {\n      template: TableCellRenderer.template(col),\n      update: (node: HTMLElement, d: IDataRow) => {\n        if (renderMissingDOM(node, col, d)) {\n          return;\n        }\n        const value = col.getLabels(d);\n        forEach(node, '[data-v]', (n: HTMLElement, i) => {\n          n.innerHTML = value[i];\n        });\n      }\n    };\n  }\n\n  private static example(arr: IKeyValue<string>[]) {\n    const numExampleRows = 5;\n    return `${arr.slice(0, numExampleRows).map((d) => d.value).join(', ')}${numExampleRows < arr.length ? ', &hellip;' : ''}`;\n  }\n\n  createGroup(col: IMapColumn<any>, context: IRenderContext) {\n    if (isArrayColumn(col) && col.dataLength) {\n      // fixed length optimized rendering\n      return this.createFixedGroup(col, context);\n    }\n    return {\n      template: `<div class=\"${cssClass('rtable')}\"></div>`,\n      update: (node: HTMLElement, group: IOrderedGroup) => {\n        return context.tasks.groupRows(col, group, 'table', (rows) => groupByKey(rows.map((d) => col.getMapLabel(d)))).then((entries) => {\n          if (typeof entries === 'symbol') {\n            return;\n          }\n          node.innerHTML = entries.map(({key, values}) => `<div class=\"${cssClass('table-cell')}\">${key}</div><div class=\"${cssClass('table-cell')}\">${TableCellRenderer.example(values)}</div>`).join('');\n        });\n      }\n    };\n  }\n\n  private createFixedGroup(col: IArrayColumn<any>, context: IRenderContext) {\n    return {\n      template: TableCellRenderer.template(col),\n      update: (node: HTMLElement, group: IOrderedGroup) => {\n        return context.tasks.groupExampleRows(col, group, 'table', (rows) => {\n          const values: string[][] = col.labels.map(() => []);\n          rows.forEach((row) => {\n            const labels = col.getLabels(row);\n            for (let i = 0; i < Math.min(values.length, labels.length); ++i) {\n              if (!isMissingValue(labels[i])) {\n                values[i].push(labels[i]);\n              }\n            }\n          });\n          return values;\n        }).then((values) => {\n          if (typeof values === 'symbol') {\n            return;\n          }\n          forEach(node, '[data-v]', (n: HTMLElement, i) => {\n            n.innerHTML = `${values[i].join(', ')}&hellip;`;\n          });\n        });\n      }\n    };\n  }\n\n  createSummary() {\n    return {\n      template: `<div class=\"${cssClass('rtable')}\"><div>Key</div><div>Value</div></div>`,\n      update: noop\n    };\n  }\n\n}\n\n/** @internal */\nexport function groupByKey<T extends {key: string}>(arr: ISequence<ISequence<T>>) {\n  const m = new Map<string, T[]>();\n  arr.forEach((a) => a.forEach((d) => {\n    if (!m.has(d.key)) {\n      m.set(d.key, [d]);\n    } else {\n      m.get(d.key)!.push(d);\n    }\n  }));\n  return Array.from(m).sort((a, b) => a[0].localeCompare(b[0])).map(([key, values]) => ({key, values}));\n}\n","import {IDataRow, LinkMapColumn, Column, ILink, IKeyValue, IOrderedGroup} from '../model';\nimport {IRenderContext, ERenderMode, ICellRendererFactory} from './interfaces';\nimport {renderMissingDOM} from './missing';\nimport {groupByKey} from './TableCellRenderer';\nimport {noRenderer, noop} from './utils';\nimport {cssClass} from '../styles';\n\n/** @internal */\nexport default class LinkMapCellRenderer implements ICellRendererFactory {\n  readonly title = 'Table with Links';\n\n  canRender(col: Column, mode: ERenderMode) {\n    return col instanceof LinkMapColumn && mode !== ERenderMode.SUMMARY;\n  }\n\n  create(col: LinkMapColumn) {\n    const align = col.alignment || 'left';\n    return {\n      template: `<div class=\"${cssClass('rtable')}\"></div>`,\n      update: (node: HTMLElement, d: IDataRow) => {\n        if (renderMissingDOM(node, col, d)) {\n          return;\n        }\n        node.innerHTML = col.getLinkMap(d).map(({key, value}) => `\n          <div class=\"${cssClass('table-cell')}\">${key}</div>\n          <div class=\"${cssClass('table-cell')} ${align !== 'left' ? cssClass(align) : ''}\">\n            <a href=\"${value.href}\" target=\"_blank\" rel=\"noopener\">${value.alt}</a>\n          </div>`).join('');\n      },\n      render: noop\n    };\n  }\n\n  private static example(arr: IKeyValue<ILink>[]) {\n    const numExampleRows = 5;\n    const examples = <string[]>[];\n    for (const row of arr) {\n      examples.push(`<a target=\"_blank\" rel=\"noopener\" href=\"${row.value.href}\">${row.value.alt}</a>`);\n      if (examples.length >= numExampleRows) {\n        break;\n      }\n    }\n    return `${examples.join(', ')}${examples.length < arr.length} ? ', &hellip;': ''}`;\n  }\n\n  createGroup(col: LinkMapColumn, context: IRenderContext) {\n    const align = col.alignment || 'left';\n    return {\n      template: `<div class=\"${cssClass('rtable')}\"></div>`,\n      update: (node: HTMLElement, group: IOrderedGroup) => {\n        return context.tasks.groupRows(col, group, 'linkmap', (rows) => groupByKey(rows.map((d) => col.getLinkMap(d)))).then((entries) => {\n          if (typeof entries !== 'symbol') {\n            node.innerHTML = entries.map(({key, values}) => `<div>${key}</div><div${align !== 'left' ? ` class=\"${cssClass(align)}\"` : ''}>${LinkMapCellRenderer.example(values)}</div>`).join('');\n          }\n        });\n      }\n    };\n  }\n\n  createSummary() {\n    return noRenderer;\n  }\n}\n","import {ICellRendererFactory} from './interfaces';\nimport {noop} from './utils';\n\n/** @internal */\nexport default class LoadingCellRenderer implements ICellRendererFactory {\n  readonly title = 'Loading';\n\n  canRender() {\n    return false; // just direct selection\n  }\n\n  create() {\n    return {\n      template: `<div>Loading &hellip;</div>`,\n      update: noop\n    };\n  }\n\n  createGroup() {\n    return this.create();\n  }\n\n  createSummary() {\n    return this.create();\n  }\n}\n","import {round} from '../internal';\nimport {Column, IMapColumn, IMapAbleColumn, isMapAbleColumn, isMapColumn, IDataRow, isNumberColumn, INumberColumn} from '../model';\nimport {colorOf} from './impose';\nimport {ICellRendererFactory, IImposer, IRenderContext, ERenderMode} from './interfaces';\nimport {renderMissingDOM} from './missing';\nimport {noRenderer} from './utils';\nimport {cssClass} from '../styles';\n\n/** @internal */\nexport default class MapBarCellRenderer implements ICellRendererFactory {\n  readonly title = 'Bar Table';\n\n  canRender(col: Column, mode: ERenderMode) {\n    return isMapColumn(col) && isNumberColumn(col) && (mode === ERenderMode.CELL || (mode === ERenderMode.SUMMARY && isMapAbleColumn(col)));\n  }\n\n  create(col: IMapColumn<number> & INumberColumn, _context: IRenderContext, imposer?: IImposer) {\n    const formatter = col.getNumberFormat();\n\n    return {\n      template: `<div class=\"${cssClass('rtable')}\"></div>`,\n      update: (node: HTMLElement, d: IDataRow) => {\n        if (renderMissingDOM(node, col, d)) {\n          return;\n        }\n        node.innerHTML = col.getMap(d).map(({key, value}) => {\n          if (isNaN(value)) {\n            return `<div class=\"${cssClass('table-cell')}\">${key}</div><div class=\"${cssClass('table-cell')} ${cssClass('missing')}\"></div>`;\n          }\n          const w = round(value * 100, 2);\n          return `<div class=\"${cssClass('table-cell')}\">${key}</div>\n            <div class=\"${cssClass('table-cell')}\" title=\"${formatter(value)}\">\n              <div style=\"width: ${w}%; background-color: ${colorOf(col, d, imposer)}\">\n                <span class=\"${cssClass('hover-only')}\">${value}</span>\n              </div>\n            </div>`;\n        }).join('');\n      }\n    };\n  }\n\n  createGroup() {\n    return noRenderer;\n  }\n\n  createSummary(col: IMapColumn<number> & IMapAbleColumn) {\n    return {\n      template: `<div class=\"${cssClass('rtable')}\"><div>Key</div><div><span></span><span></span>Value</div></div>`,\n      update: (node: HTMLElement) => {\n        const range = col.getRange();\n        const value = <HTMLElement>node.lastElementChild!;\n        value.firstElementChild!.textContent = range[0];\n        value.children[1]!.textContent = range[1];\n      }\n    };\n  }\n}\n","import {Column, RankColumn, IDataRow, IOrderedGroup} from '../model';\nimport {ICellRendererFactory} from './interfaces';\nimport {renderMissingDOM} from './missing';\nimport {noRenderer, setText} from './utils';\nimport {cssClass} from '../styles';\n\n/** @internal */\nexport default class RankCellRenderer implements ICellRendererFactory {\n  readonly title = 'Default';\n\n  canRender(col: Column) {\n    return col instanceof RankColumn;\n  }\n\n  create(col: Column) {\n    return {\n      template: `<div class=\"${cssClass('right')}\"> </div>`,\n      update: (n: HTMLDivElement, d: IDataRow) => {\n        renderMissingDOM(n, col, d);\n        setText(n, col.getLabel(d));\n      }\n    };\n  }\n\n  createGroup(col: Column) {\n    const ranking = col.findMyRanker()!;\n    return {\n      template: `<div><div></div><div></div></div>`,\n      update: (n: HTMLElement, group: IOrderedGroup) => {\n        const fromTSpan = <HTMLElement>n.firstElementChild!;\n        const toTSpan = <HTMLElement>n.lastElementChild!;\n        if (group.order.length === 0) {\n          fromTSpan.textContent = '';\n          toTSpan.textContent = '';\n          return;\n        }\n        fromTSpan.textContent = ranking.getRank(group.order[0]).toString();\n        toTSpan.textContent = ranking.getRank(group.order[group.order.length - 1]).toString();\n      }\n    };\n  }\n\n  createSummary() {\n    return noRenderer;\n  }\n}\n","import {Column, SelectionColumn, IDataRow, IOrderedGroup} from '../model';\nimport {IRenderContext, ICellRendererFactory} from './interfaces';\nimport {cssClass} from '../styles';\nimport {everyIndices} from '../model/internal';\nimport {rangeSelection} from '../provider/utils';\n\n/** @internal */\nexport default class SelectionRenderer implements ICellRendererFactory {\n  readonly title = 'Default';\n\n  canRender(col: Column) {\n    return col instanceof SelectionColumn;\n  }\n\n  create(col: SelectionColumn, ctx: IRenderContext) {\n    return {\n      template: `<div></div>`,\n      update: (n: HTMLElement, d: IDataRow, i: number) => {\n        n.onclick = function (event) {\n          event.preventDefault();\n          event.stopPropagation();\n          if (event.shiftKey) {\n            const ranking = col.findMyRanker()!.id;\n            if (rangeSelection(ctx.provider, ranking, d.i, i, event.ctrlKey)) {\n              return;\n            }\n          }\n\n          col.toggleValue(d);\n        };\n      }\n    };\n  }\n\n  createGroup(col: SelectionColumn, context: IRenderContext) {\n    return {\n      template: `<div></div>`,\n      update: (n: HTMLElement, group: IOrderedGroup) => {\n        let selected = 0;\n        let unselected = 0;\n        const total = group.order.length;\n        everyIndices(group.order, (i) => {\n          const s = context.provider.isSelected(i);\n          if (s) {\n            selected++;\n          } else {\n            unselected++;\n          }\n          if (selected * 2 > total || unselected * 2 > total) {\n            // more than half already, can abort already decided\n            return false;\n          }\n          return true;\n        });\n\n        n.classList.toggle(cssClass('group-selected'), selected * 2 > total);\n        n.onclick = function (event) {\n          event.preventDefault();\n          event.stopPropagation();\n          const value = n.classList.toggle(cssClass('group-selected'));\n          col.setValues(group.order, value);\n        };\n      }\n    };\n  }\n\n  createSummary(col: SelectionColumn, context: IRenderContext) {\n    const unchecked = cssClass('icon-unchecked');\n    const checked = cssClass('icon-checked');\n    return {\n      template: `<div title=\"(Un)Select All\" class=\"${unchecked}\"></div>`,\n      update: (node: HTMLElement) => {\n        node.onclick = (evt) => {\n          evt.stopPropagation();\n          const isunchecked = node.classList.contains(unchecked);\n          if (isunchecked) {\n            context.provider.selectAllOf(col.findMyRanker()!);\n            node.classList.remove(unchecked);\n            node.classList.add(checked);\n          } else {\n            context.provider.setSelection([]);\n            node.classList.remove(checked);\n            node.classList.add(unchecked);\n          }\n        };\n      }\n    };\n  }\n}\n","import {Column, ICategoricalLikeColumn, IDataRow, IOrderedGroup, ISetColumn, isSetColumn} from '../model';\nimport {CANVAS_HEIGHT, cssClass} from '../styles';\nimport {ICellRendererFactory, IRenderContext} from './interfaces';\nimport {renderMissingCanvas, renderMissingDOM} from './missing';\nimport {forEachChild, noop, wideEnoughCat} from './utils';\nimport {round} from '../internal';\n\n/** @internal */\nexport default class SetCellRenderer implements ICellRendererFactory {\n  readonly title = 'Matrix';\n\n  canRender(col: Column) {\n    return isSetColumn(col);\n  }\n\n  private static createDOMContext(col: ICategoricalLikeColumn) {\n    const categories = col.categories;\n    const mapping = col.getColorMapping();\n    let templateRows = '';\n    for (const cat of categories) {\n      templateRows += `<div class=\"${cssClass('heatmap-cell')}\" title=\"${cat.label}\" style=\"background-color: ${mapping.apply(cat)}\"></div>`;\n    }\n    return {\n      templateRow: templateRows,\n      render: (n: HTMLElement, value: (number | boolean)[]) => {\n        forEachChild(n, (d: HTMLElement, i) => {\n          const v = value[i];\n          d.style.opacity = typeof v === 'boolean' ? (v ? '1' : '0') : round(v, 2).toString();\n        });\n      }\n    };\n  }\n\n  create(col: ISetColumn, context: IRenderContext) {\n    const {templateRow, render} = SetCellRenderer.createDOMContext(col);\n    const width = context.colWidth(col);\n    const cellDimension = width / col.dataLength!;\n    const cats = col.categories;\n    const mapping = col.getColorMapping();\n\n    return {\n      template: `<div class=\"${cssClass('heatmap')}\">${templateRow}</div>`,\n      update: (n: HTMLElement, d: IDataRow) => {\n        if (renderMissingDOM(n, col, d)) {\n          return;\n        }\n        render(n, col.getValues(d));\n      },\n      render: (ctx: CanvasRenderingContext2D, d: IDataRow) => {\n        if (renderMissingCanvas(ctx, col, d, width)) {\n          return;\n        }\n        // Circle\n        const data = col.getValues(d);\n\n        ctx.save();\n        cats.forEach((d, j) => {\n          if (!data[j]) {\n            return;\n          }\n          const posx = (j * cellDimension);\n          ctx.fillStyle = mapping.apply(d);\n          ctx.fillRect(posx, 0, cellDimension, CANVAS_HEIGHT);\n        });\n\n        ctx.restore();\n      }\n    };\n  }\n\n  createGroup(col: ISetColumn, context: IRenderContext) {\n    const {templateRow, render} = SetCellRenderer.createDOMContext(col);\n    return {\n      template: `<div class=\"${cssClass('heatmap')}\">${templateRow}</div>`,\n      update: (n: HTMLElement, group: IOrderedGroup) => {\n        return context.tasks.groupCategoricalStats(col, group).then((r) => {\n          if (typeof r === 'symbol') {\n            return;\n          }\n          render(n, r.group.hist.map((d) => d.count / r.group.maxBin));\n        });\n      }\n    };\n  }\n\n  createSummary(col: ICategoricalLikeColumn) {\n    const categories = col.categories;\n    const mapping = col.getColorMapping();\n    let templateRows = `<div class=\"${cssClass('heatmap')}\">`;\n    const labels = wideEnoughCat(col);\n    for (const cat of categories) {\n      templateRows += `<div class=\"${cssClass('heatmap-cell')}\" title=\"${cat.label}\"${labels ? ` data-title=\"${cat.label}\"` : ''} style=\"background-color: ${mapping.apply(cat)}\"></div>`;\n    }\n    templateRows += '</div>';\n    return {\n      template: templateRows,\n      update: noop\n    };\n  }\n}\n","import {Column, INumbersColumn, NumbersColumn, isNumbersColumn, IDataRow, IOrderedGroup} from '../model';\nimport {matchRows} from './ANumbersCellRenderer';\nimport {IRenderContext, ERenderMode, ICellRendererFactory} from './interfaces';\nimport {renderMissingDOM} from './missing';\nimport {forEachChild, noRenderer} from './utils';\nimport {ISequence} from '../internal';\n\n/** @internal */\nexport function line(data: ISequence<number>) {\n  if (data.length === 0) {\n    return '';\n  }\n  let p = '';\n  let moveNext = true;\n\n  data.forEach((d, i) => {\n    if (isNaN(d)) {\n      moveNext = true;\n    } else if (moveNext) {\n      p += `M${i},${1 - d} `;\n      moveNext = false;\n    } else {\n      p += `L${i},${1 - d} `;\n    }\n  });\n  return p;\n}\n\n/** @internal */\nexport default class SparklineCellRenderer implements ICellRendererFactory {\n  readonly title = 'Sparkline';\n\n  canRender(col: Column, mode: ERenderMode) {\n    return isNumbersColumn(col) && mode !== ERenderMode.SUMMARY;\n  }\n\n  create(col: INumbersColumn) {\n    const dataLength = col.dataLength!;\n    const yPos = 1 - col.getMapping().apply(NumbersColumn.CENTER);\n    return {\n      template: `<svg viewBox=\"0 0 ${dataLength - 1} 1\" preserveAspectRatio=\"none meet\"><line x1=\"0\" x2=\"${dataLength - 1}\" y1=\"${yPos}\" y2=\"${yPos}\"></line><path></path></svg>`,\n      update: (n: HTMLElement, d: IDataRow) => {\n        if (renderMissingDOM(n, col, d)) {\n          return;\n        }\n        const data = col.getNumbers(d);\n        n.lastElementChild!.setAttribute('d', line(data));\n      }\n    };\n  }\n\n  createGroup(col: INumbersColumn, context: IRenderContext) {\n    const dataLength = col.dataLength!;\n    const yPos = 1 - col.getMapping().apply(NumbersColumn.CENTER);\n    return {\n      template: `<svg viewBox=\"0 0 ${dataLength} 1\" preserveAspectRatio=\"none meet\"><line x1=\"0\" x2=\"${dataLength - 1}\" y1=\"${yPos}\" y2=\"${yPos}\"></line><path></path></svg>`,\n      update: (n: HTMLElement, group: IOrderedGroup) => {\n        //overlapping ones\n        matchRows(n, group.order.length, `<path></path>`);\n        return context.tasks.groupRows(col, group, 'numbers', (r) => Array.from(r.map((d) => col.getNumbers(d)))).then((vs) => {\n          if (typeof vs === 'symbol') {\n            return;\n          }\n          forEachChild(n, ((row, i) => {\n            row.setAttribute('d', line(vs[i]));\n          }));\n        });\n      }\n    };\n  }\n\n  createSummary() {\n    return noRenderer;\n  }\n\n}\n","import {Column, IDataRow, IOrderedGroup, ISetColumn, isSetColumn} from '../model';\nimport {CANVAS_HEIGHT, cssClass, UPSET} from '../styles';\nimport {ICellRendererFactory, IRenderContext} from './interfaces';\nimport {renderMissingCanvas, renderMissingDOM} from './missing';\n\n/** @internal */\nexport default class UpSetCellRenderer implements ICellRendererFactory {\n  readonly title = 'UpSet';\n\n  canRender(col: Column) {\n    return isSetColumn(col);\n  }\n\n  private static calculateSetPath(setData: boolean[], cellDimension: number) {\n    const catindexes: number[] = [];\n    setData.forEach((d: boolean, i: number) => (d) ? catindexes.push(i) : -1);\n\n    const left = (catindexes[0] * cellDimension) + (cellDimension / 2);\n    const right = (catindexes[catindexes.length - 1] * cellDimension) + (cellDimension / 2);\n\n    return {left, right};\n  }\n\n  private static createDOMContext(col: ISetColumn) {\n    const categories = col.categories;\n    let templateRows = '';\n    for (const cat of categories) {\n      templateRows += `<div class=\"${cssClass('upset-dot')}\" title=\"${cat.label}\"></div>`;\n    }\n    return {\n      template: `<div><div class=\"${cssClass('upset-line')}\"></div>${templateRows}</div>`,\n      render: (n: HTMLElement, value: boolean[]) => {\n        Array.from(n.children).slice(1).forEach((d, i) => {\n          const v = value[i];\n          d.classList.toggle(cssClass('enabled'), v);\n        });\n\n        const line = <HTMLElement>n.firstElementChild;\n        const left = value.findIndex((d) => d);\n        const right = (value.length - 1) - value.reverse().findIndex((d) => d);\n\n        if (left < 0 || left === right) {\n          line.style.display = 'none';\n          return;\n        }\n        line.style.display = null;\n        line.style.left = `${Math.round(100 * (left + 0.5) / value.length)}%`;\n        line.style.width = `${Math.round(100 * (right - left) / value.length)}%`;\n      }\n    };\n  }\n\n  create(col: ISetColumn, context: IRenderContext) {\n    const {template, render} = UpSetCellRenderer.createDOMContext(col);\n    const width = context.colWidth(col);\n    const cellDimension = width / col.categories.length;\n\n    return {\n      template,\n      update: (n: HTMLElement, d: IDataRow) => {\n        if (renderMissingDOM(n, col, d)) {\n          return;\n        }\n        render(n, col.getValues(d));\n      },\n      render: (ctx: CanvasRenderingContext2D, d: IDataRow) => {\n        if (renderMissingCanvas(ctx, col, d, width)) {\n          return;\n        }\n        // Circle\n        const data = col.getValues(d);\n\n        const hasTrueValues = data.some((d) => d); //some values are true?\n\n        ctx.save();\n        ctx.fillStyle = UPSET.color;\n        ctx.strokeStyle = UPSET.color;\n        if (hasTrueValues) {\n          const {left, right} = UpSetCellRenderer.calculateSetPath(data, cellDimension);\n          ctx.beginPath();\n          ctx.moveTo(left, CANVAS_HEIGHT / 2);\n          ctx.lineTo(right, CANVAS_HEIGHT / 2);\n          ctx.stroke();\n        }\n\n        data.forEach((d, j) => {\n          const posx = (j * cellDimension);\n          ctx.beginPath();\n          ctx.globalAlpha = d ? 1 : UPSET.inactive;\n          ctx.fillRect(posx, 0, cellDimension, CANVAS_HEIGHT);\n          ctx.fill();\n        });\n\n        ctx.restore();\n      }\n    };\n  }\n\n  createGroup(col: ISetColumn, context: IRenderContext) {\n    const {template, render} = UpSetCellRenderer.createDOMContext(col);\n    return {\n      template,\n      update: (n: HTMLElement, group: IOrderedGroup) => {\n        return context.tasks.groupCategoricalStats(col, group).then((r) => {\n          if (typeof r === 'symbol') {\n            return;\n          }\n          render(n, r.group.hist.map((d) => d.count > 0));\n        });\n      }\n    };\n  }\n\n  createSummary(col: ISetColumn, context: IRenderContext) {\n    const {template, render} = UpSetCellRenderer.createDOMContext(col);\n    return {\n      template,\n      update: (n: HTMLElement) => {\n        return context.tasks.summaryCategoricalStats(col).then((r) => {\n          if (typeof r === 'symbol') {\n            return;\n          }\n          render(n, r.summary.hist.map((d) => d.count > 0));\n        });\n      }\n    };\n  }\n}\n","import {Column, NumbersColumn, IDataRow, INumbersColumn, isNumbersColumn} from '../model';\nimport {CANVAS_HEIGHT, cssClass} from '../styles';\nimport {ANumbersCellRenderer} from './ANumbersCellRenderer';\nimport {toHeatMapColor} from './BrightnessCellRenderer';\nimport {IRenderContext, ERenderMode, ICellRendererFactory, IImposer} from './interfaces';\nimport { forEachChild, noRenderer} from './utils';\n\n/** @internal */\nexport default class VerticalBarCellRenderer extends ANumbersCellRenderer implements ICellRendererFactory {\n  readonly title = 'Bar Chart';\n\n  canRender(col: Column, mode: ERenderMode) {\n    return isNumbersColumn(col) && Boolean(col.dataLength) && mode === ERenderMode.CELL;\n  }\n\n  private static compute(v: number, threshold: number, domain: number[]) {\n    if (v < threshold) {\n      //threshold to down\n      return {height: (threshold - v), bottom: (v - domain[0])};\n    }\n    //from top to down\n    return {height: (v - threshold), bottom: (threshold - domain[0])};\n  }\n\n  protected createContext(col: INumbersColumn, context: IRenderContext, imposer?: IImposer) {\n    const cellDimension = context.colWidth(col) / col.dataLength!;\n    const threshold = col.getMapping().apply(NumbersColumn.CENTER);\n    const range = 1;\n    let templateRows = '';\n    for (let i = 0; i < col.dataLength!; ++i) {\n      templateRows += `<div class=\"${cssClass('heatmap-cell')}\" style=\"background-color: white\" title=\"\"></div>`;\n    }\n    const formatter = col.getNumberFormat();\n\n    return {\n      clazz: cssClass('heatmap'),\n      templateRow: templateRows,\n      update: (row: HTMLElement, data: number[], raw: number[], item: IDataRow) => {\n        const zero = toHeatMapColor(0, item, col, imposer);\n        const one = toHeatMapColor(1, item, col, imposer);\n\n        forEachChild(row, (d: HTMLElement, i) => {\n          const v = data[i];\n          const {bottom, height} = VerticalBarCellRenderer.compute(v, threshold, [0, 1]);\n          d.title = formatter(raw[i]);\n          d.style.backgroundColor = v < threshold ? zero : one;\n          d.style.bottom = `${Math.round((100 * bottom) / range)}%`;\n          d.style.height = `${Math.round((100 * height) / range)}%`;\n        });\n      },\n      render: (ctx: CanvasRenderingContext2D, data: number[], item: IDataRow) => {\n        const zero = toHeatMapColor(0, item, col, imposer);\n        const one = toHeatMapColor(1, item, col, imposer);\n        const scale = CANVAS_HEIGHT / range;\n        data.forEach((v, j) => {\n          ctx.fillStyle = v < threshold ? zero : one;\n          const xpos = (j * cellDimension);\n          const {bottom, height} = VerticalBarCellRenderer.compute(v, threshold, [0, 1]);\n          ctx.fillRect(xpos, (range - height - bottom) * scale, cellDimension, height * scale);\n        });\n      }\n    };\n  }\n\n  createSummary() {\n    return noRenderer;\n  }\n}\n","import {Column, IDataRow, DateColumn, IOrderedGroup} from '../model';\nimport {IRenderContext, ICellRendererFactory, IGroupCellRenderer, ISummaryRenderer, ICellRenderer} from './interfaces';\nimport {renderMissingDOM} from './missing';\nimport {noop, noRenderer, setText, exampleText} from './utils';\nimport {chooseAggregatedDate} from '../model/internalDate';\n\n/** @internal */\nexport default class DateCellRenderer implements ICellRendererFactory {\n  title = 'Date';\n  groupTitle = 'Date';\n  summaryTitle = 'Date';\n\n  canRender(col: Column) {\n    return col instanceof DateColumn;\n  }\n\n  create(col: DateColumn): ICellRenderer {\n    return {\n      template: `<div> </div>`,\n      update: (n: HTMLDivElement, d: IDataRow) => {\n        renderMissingDOM(n, col, d);\n        setText(n, col.getLabel(d));\n      },\n      render: noop\n    };\n  }\n\n  createGroup(col: DateColumn, context: IRenderContext): IGroupCellRenderer {\n    return {\n      template: `<div> </div>`,\n      update: (n: HTMLDivElement, group: IOrderedGroup) => {\n        const isGrouped = col.isGroupedBy() >= 0;\n        if (isGrouped) {\n          return context.tasks.groupRows(col, group, 'date', (rows) => chooseAggregatedDate(rows, col.getDateGrouper(), col)).then((chosen) => {\n            if (typeof chosen !== 'symbol') {\n              setText(n, chosen.name);\n            }\n          });\n        }\n        return context.tasks.groupExampleRows(col, group, 'date', (sample) => exampleText(col, sample)).then((text) => {\n          if (typeof text !== 'symbol') {\n            setText(n, text);\n          }\n        });\n      }\n    };\n  }\n\n  createSummary(): ISummaryRenderer {\n    return noRenderer;\n  }\n}\n","import ADialog, {IDialogContext} from './ADialog';\nimport {timeFormat} from 'd3-time-format';\n\n/** @internal */\nexport interface IInputDateOptions {\n  value: Date | null;\n  label: string | null;\n}\n\n/** @internal */\nexport default class InputDateDialog extends ADialog {\n\n  private readonly ioptions: Readonly<IInputDateOptions> = {\n    value: null,\n    label: null\n  };\n\n  constructor(dialog: IDialogContext, private readonly callback: (value: Date | null) => void, options: Partial<IInputDateOptions> = {}) {\n    super(dialog);\n    Object.assign(this.ioptions, options);\n  }\n\n  protected build(node: HTMLElement) {\n    const o = this.ioptions;\n\n    const f = timeFormat('%Y-%m-%d');\n\n    node.insertAdjacentHTML('beforeend', `\n     <input type=\"date\" value=\"${o.value ? f(o.value) : ''}\" required autofocus placeholder=\"${o.label ? o.label : 'enter date'}\">\n    `);\n  }\n\n  submit() {\n    this.callback(this.findInput('input[type=date]').valueAsDate);\n    return true;\n  }\n}\n","import {dateStatsBuilder, IDateStatistics} from '../internal';\nimport {Column, IDataRow, IDateColumn, IDatesColumn, IOrderedGroup, isDateColumn, isDatesColumn} from '../model';\nimport {cssClass} from '../styles';\nimport {ERenderMode, ICellRendererFactory, IRenderContext} from './interfaces';\nimport {renderMissingDOM} from './missing';\nimport {colorOf} from './utils';\nimport {histogramUpdate, histogramTemplate, mappingHintTemplate, mappingHintUpdate, IFilterInfo, IFilterContext, filteredHistTemplate, initFilter} from './histogram';\nimport InputDateDialog from '../ui/dialogs/InputDateDialog';\nimport {shiftFilterDateDay} from '../model/internalDate';\n\n/** @internal */\nexport default class DateHistogramCellRenderer implements ICellRendererFactory {\n  readonly title = 'Histogram';\n\n  canRender(col: Column, mode: ERenderMode) {\n    return (isDateColumn(col) && mode !== ERenderMode.CELL) || (isDatesColumn(col) && mode === ERenderMode.CELL);\n  }\n\n  create(col: IDatesColumn, _context: IRenderContext) {\n    const {template, render} = getHistDOMRenderer(col);\n    return {\n      template: `${template}</div>`,\n      update: (n: HTMLElement, row: IDataRow) => {\n        if (renderMissingDOM(n, col, row)) {\n          return;\n        }\n        const b = dateStatsBuilder();\n        for (const n of col.getDates(row)) {\n          b.push(n);\n        }\n        const hist = b.build();\n        render(n, hist);\n      }\n    };\n  }\n\n  createGroup(col: IDateColumn, context: IRenderContext) {\n    const {template, render} = getHistDOMRenderer(col);\n    return {\n      template: `${template}</div>`,\n      update: (n: HTMLElement, group: IOrderedGroup) => {\n        return context.tasks.groupDateStats(col, group).then((r) => {\n          if (typeof r === 'symbol') {\n            return;\n          }\n          const {group} = r;\n\n          render(n, group);\n        });\n      }\n    };\n  }\n\n  createSummary(col: IDateColumn, context: IRenderContext, interactive: boolean) {\n    const r = getHistDOMRenderer(col);\n    return interactive ? interactiveSummary(col, context, r.template, r.render) : staticSummary(col, context, false, r.template, r.render);\n  }\n}\n\n\nfunction staticSummary(col: IDateColumn, context: IRenderContext, interactive: boolean, template: string, render: (n: HTMLElement, stats: IDateStatistics, unfiltered?: IDateStatistics) => void) {\n  template += mappingHintTemplate(['', '']);\n\n  return {\n    template: `${template}</div>`,\n    update: (node: HTMLElement) => {\n      return context.tasks.summaryDateStats(col).then((r) => {\n        if (typeof r === 'symbol') {\n          return;\n        }\n        const {summary, data} = r;\n\n        node.classList.toggle(cssClass('missing'), !summary);\n        if (!summary) {\n          return;\n        }\n        const formatter = col.getFormatter();\n        mappingHintUpdate(node, [formatter(summary.min), formatter(summary.max)]);\n\n        render(node, summary, interactive ? data: undefined);\n      });\n    }\n  };\n}\n\n\nfunction interactiveSummary(col: IDateColumn, context: IRenderContext, template: string, render: (n: HTMLElement, stats: IDateStatistics, unfiltered?: IDateStatistics) => void) {\n  const filter = col.getFilter();\n  const dummyDomain: [number, number] = [isFinite(filter.min) ? filter.min : 0, isFinite(filter.max) ? filter.max : 100];\n\n  template += filteredHistTemplate(createFilterContext(col, context, dummyDomain), createFilterInfo(col, dummyDomain));\n\n  let fContext: IFilterContext<number>;\n  let updateFilter: (missing: number, f: IFilterInfo<number>) => void;\n\n  return {\n    template: `${template}</div>`,\n    update: (node: HTMLElement) => {\n      return context.tasks.summaryDateStats(col).then((r) => {\n        if (typeof r === 'symbol') {\n          return;\n        }\n        const {summary, data} = r;\n        if (!updateFilter) {\n          fContext = createFilterContext(col, context, [data.min ? data.min.getTime() : Date.now(), data.max ? data.max.getTime() : Date.now()]);\n          updateFilter = initFilter(node, fContext);\n        }\n\n        updateFilter(data ? data.missing : (summary ? summary.missing : 0), createFilterInfo(col, fContext.domain));\n\n        node.classList.add(cssClass('histogram-i'));\n        node.classList.toggle(cssClass('missing'), !summary);\n        if (!summary) {\n          return;\n        }\n        render(node, summary, data);\n      });\n    }\n  };\n}\n\nfunction getHistDOMRenderer(col: IDateColumn) {\n  const guessedBins = 10;\n\n  const formatter = col.getFormatter();\n  const color = colorOf(col)!;\n\n  const render = (n: HTMLElement, stats: IDateStatistics, unfiltered?: IDateStatistics) => {\n    return histogramUpdate(n, stats, unfiltered || null, formatter, () => color);\n  };\n  return {\n    template: histogramTemplate(guessedBins),\n    render,\n    guessedBins\n  };\n}\n\nfunction createFilterInfo(col: IDateColumn, domain: [number, number]): IFilterInfo<number> {\n  const filter = col.getFilter();\n  const filterMin = isFinite(filter.min) ? filter.min : domain[0];\n  const filterMax = isFinite(filter.max) ? filter.max : domain[1];\n  return {\n    filterMissing: filter.filterMissing,\n    filterMin,\n    filterMax\n  };\n}\n\nfunction createFilterContext(col: IDateColumn, context: IRenderContext, domain: [number, number]): IFilterContext<number> {\n  const percent = (v: number) => Math.round(100 * (v - domain[0]) / (domain[1] - domain[0]));\n  const unpercent = (v: number) => ((v / 100) * (domain[1] - domain[0]) + domain[0]);\n  return {\n    percent,\n    unpercent,\n    domain,\n    format: (v) => isNaN(v) ? '' : col.getFormatter()(new Date(v)),\n    setFilter: (filterMissing, minValue, maxValue) => col.setFilter({\n      filterMissing,\n      min: Math.abs(minValue - domain[0]) < 0.001 ? NaN : shiftFilterDateDay(minValue, 'min'),\n      max: Math.abs(maxValue - domain[1]) < 0.001 ? NaN : shiftFilterDateDay(maxValue, 'max')\n    }),\n    edit: (value, attachment, type) => {\n      return new Promise((resolve) => {\n        const dialogCtx = {\n          attachment,\n          manager: context.dialogManager,\n          level: 1,\n          idPrefix: context.idPrefix\n        };\n        const dialog = new InputDateDialog(dialogCtx, (d) => resolve(d == null ? NaN : shiftFilterDateDay(d.getTime(), type)), {value: isNaN(value) ? null : new Date(value)});\n        dialog.open();\n      });\n    }\n  };\n}\n","import {Column} from '../model';\nimport ActionRenderer from './ActionRenderer';\nimport AggregateGroupRenderer from './AggregateGroupRenderer';\nimport AnnotationRenderer from './AnnotationRenderer';\nimport BarCellRenderer from './BarCellRenderer';\nimport BooleanCellRenderer from './BooleanCellRenderer';\nimport BoxplotCellRenderer from './BoxplotCellRenderer';\nimport BrightnessCellRenderer from './BrightnessCellRenderer';\nimport CategoricalCellRenderer from './CategoricalCellRenderer';\nimport CategoricalHeatmapCellRenderer from './CategoricalHeatmapCellRenderer';\nimport CategoricalStackedDistributionlCellRenderer from './CategoricalStackedDistributionlCellRenderer';\nimport CircleCellRenderer from './CircleCellRenderer';\nimport {DefaultCellRenderer} from './DefaultCellRenderer';\nimport DotCellRenderer from './DotCellRenderer';\nimport GroupCellRenderer from './GroupCellRenderer';\nimport HeatmapCellRenderer from './HeatmapCellRenderer';\nimport HistogramCellRenderer from './HistogramCellRenderer';\nimport ImageCellRenderer from './ImageCellRenderer';\nimport {ERenderMode, ICellRendererFactory} from './interfaces';\nimport InterleavingCellRenderer from './InterleavingCellRenderer';\nimport LinkCellRenderer from './LinkCellRenderer';\nimport LinkMapCellRenderer from './LinkMapCellRenderer';\nimport LoadingCellRenderer from './LoadingCellRenderer';\nimport MapBarCellRenderer from './MapBarCellRenderer';\nimport MultiLevelCellRenderer from './MultiLevelCellRenderer';\nimport RankCellRenderer from './RankCellRenderer';\nimport SelectionRenderer from './SelectionRenderer';\nimport SetCellRenderer from './SetCellRenderer';\nimport SparklineCellRenderer from './SparklineCellRenderer';\nimport StringCellRenderer from './StringCellRenderer';\nimport TableCellRenderer from './TableCellRenderer';\nimport UpSetCellRenderer from './UpSetCellRenderer';\nimport VerticalBarCellRenderer from './VerticalBarCellRenderer';\nimport DateCellRenderer from './DateCellRenderer';\nimport DateHistogramCellRenderer from './DateHistogramCellRenderer';\n\nconst defaultCellRenderer = new DefaultCellRenderer();\n/**\n * default render factories\n */\nexport const renderers: { [key: string]: ICellRendererFactory } = {\n  actions: new ActionRenderer(),\n  aggregate: new AggregateGroupRenderer(),\n  annotate: new AnnotationRenderer(),\n  boolean: new BooleanCellRenderer(),\n  boxplot: new BoxplotCellRenderer(),\n  brightness: new BrightnessCellRenderer(),\n  catdistributionbar: new CategoricalStackedDistributionlCellRenderer(),\n  categorical: new CategoricalCellRenderer(),\n  circle: new CircleCellRenderer(),\n  date: new DateCellRenderer(),\n  default: defaultCellRenderer,\n  dot: new DotCellRenderer(),\n  group: new GroupCellRenderer(),\n  heatmap: new HeatmapCellRenderer(),\n  catheatmap: new CategoricalHeatmapCellRenderer(),\n  histogram: new HistogramCellRenderer(),\n  datehistogram: new DateHistogramCellRenderer(),\n  image: new ImageCellRenderer(),\n  interleaving: new InterleavingCellRenderer(),\n  link: new LinkCellRenderer(),\n  linkMap: new LinkMapCellRenderer(),\n  loading: new LoadingCellRenderer(),\n  nested: new MultiLevelCellRenderer(false),\n  number: new BarCellRenderer(),\n  mapbars: new MapBarCellRenderer(),\n  rank: new RankCellRenderer(),\n  selection: new SelectionRenderer(),\n  set: new SetCellRenderer(),\n  sparkline: new SparklineCellRenderer(),\n  stack: new MultiLevelCellRenderer(),\n  string: new StringCellRenderer(),\n  table: new TableCellRenderer(),\n  upset: new UpSetCellRenderer(),\n  verticalbar: new VerticalBarCellRenderer()\n};\n\nexport function chooseRenderer(col: Column, renderers: { [key: string]: ICellRendererFactory }): ICellRendererFactory {\n  const r = renderers[col.getRenderer()];\n  return r && typeof r.create === 'function' ? r : defaultCellRenderer;\n}\n\nexport function chooseGroupRenderer(col: Column, renderers: { [key: string]: ICellRendererFactory }): ICellRendererFactory {\n  const r = renderers[col.getGroupRenderer()];\n  return r && typeof r.createGroup === 'function' ? r : defaultCellRenderer;\n}\n\nexport function chooseSummaryRenderer(col: Column, renderers: { [key: string]: ICellRendererFactory }): ICellRendererFactory {\n  const r = renderers[col.getSummaryRenderer()];\n  return r && typeof r.createSummary === 'function' ? r : defaultCellRenderer;\n}\n\n/**\n * determined the list of possible renderers for a given colum\n * @param col the column to resolve the renderers\n * @param renderers map of possible renderers\n * @param canRender optional custom canRender function\n */\nexport function getPossibleRenderer(col: Column, renderers: { [key: string]: ICellRendererFactory }, canRender?: (type: string, renderer: ICellRendererFactory, col: Column, mode: ERenderMode) => boolean) {\n  const all = Object.keys(renderers).filter(Boolean).map((type) => ({type, factory: renderers[type]}));\n\n  const item = all.filter(({type, factory}) => typeof factory.create === 'function' && factory.canRender(col, ERenderMode.CELL) && (!canRender || canRender(type, factory, col, ERenderMode.CELL)));\n  const group = all.filter(({type, factory}) => typeof factory.createGroup === 'function' && factory.canRender(col, ERenderMode.GROUP) && (!canRender || canRender(type, factory, col, ERenderMode.GROUP)));\n  const summary = all.filter(({type, factory}) => typeof factory.createSummary === 'function' && factory.canRender(col, ERenderMode.SUMMARY) && (!canRender || canRender(type, factory, col, ERenderMode.SUMMARY)));\n\n  return {\n    item: item.map(({type, factory}) => ({type, label: factory.title})),\n    group: group.map(({type, factory}) => ({type, label: factory.groupTitle || factory.title})),\n    summary: summary.map(({type, factory}) => ({type, label: factory.summaryTitle || factory.groupTitle || factory.title}))\n  };\n}\n","import {Column} from '../../model';\nimport {forEach} from '../../renderer/utils';\nimport {cssClass} from '../../styles';\n\n/** @internal */\nexport function updateFilterState(attachment: HTMLElement, column: Column, filtered: boolean) {\n  const toggle = (e: Element) => {\n    const n = <HTMLElement>e;\n    if (filtered) {\n      n.dataset.active = '';\n    } else {\n      delete n.dataset.active;\n    }\n  };\n\n  toggle(attachment);\n  const root = attachment.closest(`.${cssClass()}`);\n  if (!root) {\n    return;\n  }\n  Array.from(root.querySelectorAll(`[data-col-id=\"${column.id}\"] i[title^=Filter]`)).forEach(toggle);\n}\n\n/** @internal */\nexport function sortMethods(node: HTMLElement, column: {setSortMethod(v: string): void, getSortMethod(): string}, methods: string[]) {\n  const bak = column.getSortMethod();\n  methods.forEach((d) => node.insertAdjacentHTML('beforeend', `<label class=\"${cssClass('checkbox')}\"><input type=\"radio\" name=\"multivaluesort\" value=\"${d}\"  ${(bak === d) ? 'checked' : ''} ><span>${d.slice(0, 1).toUpperCase() + d.slice(1)}</span></label>`));\n\n  forEach(node, 'input[name=multivaluesort]', (n: HTMLInputElement) => {\n    n.addEventListener('change', () => column.setSortMethod(n.value), {\n      passive: true\n    });\n  });\n}\n\n\n/** @internal */\nexport {uniqueId, forEach, forEachChild, colorOf} from '../../renderer/utils';\n","import {BooleanColumn} from '../../model';\nimport ADialog, {IDialogContext} from './ADialog';\nimport {updateFilterState} from './utils';\nimport {cssClass} from '../../styles';\n\n/** @internal */\nexport default class BooleanFilterDialog extends ADialog {\n\n  private readonly before: boolean | null;\n\n  constructor(private readonly column: BooleanColumn, dialog: IDialogContext) {\n    super(dialog, {\n      fullDialog: true\n    });\n    this.before = this.column.getFilter();\n  }\n\n  protected build(node: HTMLElement) {\n    node.insertAdjacentHTML('beforeend', `\n     <label class=\"${cssClass('checkbox')}\"><input type=\"radio\" name=\"boolean_check\" value=\"null\" ${this.before == null ? 'checked=\"checked\"' : ''}><span>No Filter</span></label>\n     <label class=\"${cssClass('checkbox')}\"><input type=\"radio\" name=\"boolean_check\" value=\"true\" ${this.before === true ? 'checked=\"checked\"' : ''}><span>True</span></label>\n     <label class=\"${cssClass('checkbox')}\"><input type=\"radio\" name=\"boolean_check\" value=\"false\" ${this.before === false ? 'checked=\"checked\"' : ''}><span>False</span></label>\n    `);\n  }\n\n  private updateFilter(filter: boolean | null) {\n    updateFilterState(this.attachment, this.column, filter != null);\n    this.column.setFilter(filter);\n  }\n\n  reset() {\n    const v = 'null';\n    this.forEach('input[type=\"radio\"]', (d: HTMLInputElement) => d.checked = d.value === v);\n    this.updateFilter(null);\n  }\n\n  submit() {\n    const isTrue = this.findInput('input[type=\"radio\"][value=\"true\"]').checked;\n    const isFalse = this.findInput('input[type=\"radio\"][value=\"false\"]').checked;\n    this.updateFilter(isTrue ? true : (isFalse ? false : null));\n    return true;\n  }\n}\n","import {ICategoricalColumn, CategoricalsColumn, CategoricalMapColumn, ICategory} from '../../model';\nimport ADialog, {IDialogContext} from './ADialog';\nimport {uniqueId} from './utils';\nimport {cssClass} from '../../styles';\nimport {color} from 'd3-color';\nimport {schemeCategory10, schemeAccent, schemeDark2, schemePastel1, schemePastel2, schemeSet1, schemeSet2, schemeSet3} from 'd3-scale-chromatic';\nimport {DEFAULT_CATEGORICAL_COLOR_FUNCTION, ReplacmentColorMappingFunction} from '../../model/CategoricalColorMappingFunction';\n\nconst sets: {[key: string]: ReadonlyArray<string>} = {schemeCategory10, schemeAccent, schemeDark2, schemePastel1, schemePastel2, schemeSet1, schemeSet2, schemeSet3};\n\n/** @internal */\nexport default class CategoricalColorMappingDialog extends ADialog {\n\n  constructor(private readonly column: ICategoricalColumn | CategoricalsColumn | CategoricalMapColumn, dialog: IDialogContext) {\n    super(dialog, {\n      fullDialog: true\n    });\n  }\n\n  protected build(node: HTMLElement) {\n    const id = uniqueId(this.dialog.idPrefix);\n    const mapping = this.column.getColorMapping();\n    node.insertAdjacentHTML('beforeend', `<div class=\"${cssClass('dialog-table')}\">\n      <div class=\"${cssClass('dialog-color-table-entry')}\">\n        <select id=\"${id}Chooser\">\n          <option value=\"\">Apply Color Scheme...</option>\n          <option value=\"schemeCategory10\">D3 Category 10 (${schemeCategory10.length})</option>\n          <option value=\"schemeSet1\">Set 1 (${schemeSet1.length})</option>\n          <option value=\"schemeSet2\">Set 2 (${schemeSet2.length})</option>\n          <option value=\"schemeSet3\">Set 3 (${schemeSet3.length})</option>\n          <option value=\"schemeAccent\">Accent (${schemeAccent.length})</option>\n          <option value=\"schemeDark2\">Dark2 (${schemeDark2.length})</option>\n          <option value=\"schemePastel1\">Pastel 1 (${schemePastel1.length})</option>\n          <option value=\"schemePastel2\">Pastel 2 (${schemePastel2.length})</option>\n        </select>\n      </div>\n      ${this.column.categories.map((d) => `\n        <label class=\"${cssClass('checkbox')} ${cssClass('dialog-color-table-entry')}\">\n          <input data-cat=\"${d.name}\" type=\"color\" value=\"${color(mapping.apply(d))!.hex()}\">\n          <span>${d.label}</span>\n        </label>`).join('')}\n    </div>`);\n\n    this.findInput('select').onchange = (evt) => {\n      const scheme = sets[(<HTMLInputElement>evt.currentTarget).value];\n      if (!scheme) {\n        return;\n      }\n      this.forEach('[data-cat]', (n: HTMLInputElement, i) => {\n        n.value = scheme[i % scheme.length];\n      });\n    };\n  }\n\n  reset() {\n    const cats = this.column.categories;\n    this.forEach('[data-cat]', (n: HTMLInputElement, i) => {\n      n.value = color(cats[i]!.color)!.hex();\n    });\n    this.column.setColorMapping(DEFAULT_CATEGORICAL_COLOR_FUNCTION);\n  }\n\n  submit() {\n    const cats = this.column.categories;\n    const map = new Map<ICategory, string>();\n    this.forEach('input[data-cat]', (n: HTMLInputElement, i) => {\n      const cat = cats[i];\n      if (color(cat.color)!.hex() !== n.value) {\n        map.set(cat, n.value);\n      }\n    });\n    if (map.size === 0) {\n      this.column.setColorMapping(DEFAULT_CATEGORICAL_COLOR_FUNCTION);\n    } else {\n      this.column.setColorMapping(new ReplacmentColorMappingFunction(map));\n    }\n    return true;\n  }\n}\n","import {SetColumn, CategoricalColumn, ICategoricalFilter} from '../../model';\nimport {filterMissingMarkup, findFilterMissing} from '../missing';\nimport ADialog, {IDialogContext} from './ADialog';\nimport {updateFilterState, forEach} from './utils';\nimport {cssClass} from '../../styles';\nimport {isCategoryIncluded} from '../../model/internalCategorical';\n\n/** @internal */\nexport default class CategoricalFilterDialog extends ADialog {\n\n  private readonly before: ICategoricalFilter;\n\n  constructor(private readonly column: CategoricalColumn | SetColumn, dialog: IDialogContext) {\n    super(dialog, {\n      fullDialog: true\n    });\n    this.before = this.column.getFilter() || {filter: this.column.categories.map((d) => d.name), filterMissing: false};\n  }\n\n  protected build(node: HTMLElement) {\n    node.insertAdjacentHTML('beforeend', `<div class=\"${cssClass('dialog-table')}\">\n        <label class=\"${cssClass('checkbox')} ${cssClass('dialog-filter-table-entry')}\">\n          <input type=\"checkbox\" checked>\n          <span>\n            <span class=\"${cssClass('dialog-filter-table-color')}\"></span>\n            <div>Un/Select All</div>\n          </span>\n        </label>\n        ${this.column.categories.map((c) => `<label class=\"${cssClass('checkbox')} ${cssClass('dialog-filter-table-entry')}\">\n          <input data-cat=\"${c.name}\" type=\"checkbox\"${isCategoryIncluded(this.before, c) ? 'checked' : ''}>\n          <span>\n            <span class=\"${cssClass('dialog-filter-table-color')}\" style=\"background-color: ${c.color}\"></span>\n            <div>${c.label}</div>\n          </span>\n        </label>`).join('')}\n    </div>`);\n    // selectAll\n    const selectAll = this.findInput('input:not([data-cat])');\n    selectAll.onchange =  () => {\n      forEach(node, 'input[data-cat]', (n: HTMLInputElement) => n.checked = selectAll.checked);\n    };\n    node.insertAdjacentHTML('beforeend', filterMissingMarkup(this.before.filterMissing));\n  }\n\n  private updateFilter(filter: string[] | null, filterMissing: boolean) {\n    const noFilter = filter == null && filterMissing === false;\n    updateFilterState(this.attachment, this.column, !noFilter);\n    this.column.setFilter(noFilter ? null : {filter: filter!, filterMissing});\n  }\n\n  reset() {\n    this.forEach('input[data-cat]', (n: HTMLInputElement) => n.checked = true);\n    this.updateFilter(null, false);\n  }\n\n  submit() {\n    let f: string[] | null = this.forEach('input[data-cat]', (n: HTMLInputElement) => n.checked ? n.dataset.cat! : '').filter(Boolean);\n    if (f.length === this.column.categories.length) { // all checked = no filter\n      f = null;\n    }\n    const filterMissing = findFilterMissing(this.node).checked;\n    this.updateFilter(f, filterMissing);\n    return true;\n  }\n}\n","import {round} from '../../internal';\nimport {OrdinalColumn, ICategoricalFilter} from '../../model';\nimport {isCategoryIncluded} from '../../model/internalCategorical';\nimport {filterMissingMarkup, findFilterMissing} from '../missing';\nimport ADialog, {IDialogContext} from './ADialog';\nimport {updateFilterState, forEach} from './utils';\nimport {cssClass} from '../../styles';\n\n/** @internal */\nexport default class CategoricalMappingFilterDialog extends ADialog {\n\n  private readonly before: ICategoricalFilter;\n\n  constructor(private readonly column: OrdinalColumn, dialog: IDialogContext) {\n    super(dialog, {\n      fullDialog: true\n    });\n    this.before = this.column.getFilter() || {filter: this.column.categories.map((d) => d.name), filterMissing: false};\n  }\n\n  protected build(node: HTMLElement) {\n    const joint = this.column.categories.map((d) => Object.assign({\n      range: round(d.value * 100, 2)\n    }));\n    joint.sort((a, b) => a.label.localeCompare(b.label));\n\n    node.insertAdjacentHTML('beforeend', `<div class=\"${cssClass('dialog-table')}\">\n        <label class=\"${cssClass('checkbox')} ${cssClass('dialog-filter-table-entry')}\">\n          <input type=\"checkbox\" checked>\n          <span>\n            <div>Un/Select All</div>\n          </span>\n        </label>\n        ${joint.map(({name, color, label, range}) => `\n          <label class=\"${cssClass('checkbox')} ${cssClass('dialog-filter-table-entry')}\">\n            <input data-cat=\"${name}\" type=\"checkbox\"${isCategoryIncluded(this.before, name) ? 'checked' : ''}>\n            <span>\n              <input type=\"number\" value=\"${range}\" min=\"0\" max=\"100\" size=\"5\">\n              <div class=\"${cssClass('dialog-filter-color-bar')}\">\n                <span style=\"background-color: ${color}; width: ${range}%\"></span>\n              </div>\n              <div>${label}</div>\n            </span>\n          </label>`).join('')}\n    </div>`);\n    // selectAll\n    const selectAll = this.findInput('input[type=checkbox]:not([data-cat])');\n    selectAll.onchange = () => {\n      forEach(node, '[data-cat]', (n: HTMLInputElement) => n.checked = selectAll.checked);\n    };\n    this.forEach('input[type=number]', (d: HTMLInputElement) => {\n      d.oninput = () => {\n        (<HTMLElement>d.nextElementSibling!.firstElementChild).style.width = `${d.value}%`;\n      };\n    });\n    node.insertAdjacentHTML('beforeend', filterMissingMarkup(this.before.filterMissing));\n  }\n\n  private updateFilter(filter: string[] | null, filterMissing: boolean) {\n    const noFilter = filter == null && filterMissing === false;\n    updateFilterState(this.attachment, this.column, !noFilter);\n    this.column.setFilter(noFilter ? null : {filter: filter!, filterMissing});\n  }\n\n  reset() {\n    this.forEach('[data-cat]', (n: HTMLInputElement) => {\n      n.checked = false;\n      (<HTMLInputElement>n.nextElementSibling!).value = '50';\n    });\n    this.updateFilter(null, false);\n    this.column.setMapping(this.column.categories.map(() => 1));\n  }\n\n  submit() {\n    const items = this.forEach('input[data-cat]', (n: HTMLInputElement) => ({\n      checked: n.checked,\n      cat: n.dataset.cat!,\n      range: (<HTMLInputElement>n.nextElementSibling)!.valueAsNumber\n    }));\n    let f: string[] | null = items.filter((d) => d.checked).map((d) => d.cat);\n    if (f.length === this.column.categories.length) { // all checked = no filter\n      f = null;\n    }\n    const filterMissing = findFilterMissing(this.node).checked;\n    this.updateFilter(f, filterMissing);\n    this.column.setMapping(items.map((d) => d.range / 100));\n    return true;\n  }\n}\n","import {Column} from '../../model';\nimport {IRankingHeaderContext, IRenderInfo} from '../interfaces';\nimport ADialog, {IDialogContext} from './ADialog';\nimport {cssClass} from '../../styles';\n\n/** @internal */\nexport default class ChangeRendererDialog extends ADialog {\n  constructor(private readonly column: Column, dialog: IDialogContext, private readonly ctx: IRankingHeaderContext) {\n    super(dialog);\n  }\n\n  protected build(node: HTMLElement) {\n    const current = this.column.getRenderer();\n    const currentGroup = this.column.getGroupRenderer();\n    const currentSummary = this.column.getSummaryRenderer();\n    const {item, group, summary} = this.ctx.getPossibleRenderer(this.column);\n\n    console.assert(item.length > 1 || group.length > 1 || summary.length > 1); // otherwise no need to show this\n\n    const byName = (a: IRenderInfo, b: IRenderInfo) => a.label.localeCompare(b.label);\n    node.insertAdjacentHTML('beforeend', `\n      <strong>Item Visualization</strong>\n      ${item.sort(byName).map((d) => ` <label class=\"${cssClass('checkbox')}\"><input type=\"radio\" name=\"renderer\" value=\"${d.type}\" ${(current === d.type) ? 'checked' : ''}><span>${d.label}</span></label>`).join('')}\n      <strong>Group Visualization</strong>\n      ${group.sort(byName).map((d) => ` <label class=\"${cssClass('checkbox')}\"><input type=\"radio\" name=\"group\" value=\"${d.type}\" ${(currentGroup === d.type) ? 'checked' : ''}><span>${d.label}</span></label>`).join('')}\n      <strong>Summary Visualization</strong>\n      ${summary.sort(byName).map((d) => ` <label class=\"${cssClass('checkbox')}\"><input type=\"radio\" name=\"summary\" value=\"${d.type}\" ${(currentSummary === d.type) ? 'checked' : ''}><span>${d.label}</span></label>`).join('')}\n    `);\n    this.forEach('input[name=\"renderer\"]', (n: HTMLInputElement) => {\n      n.addEventListener('change', () => this.column.setRenderer(n.value), { passive: true });\n    });\n    this.forEach('input[name=\"group\"]', (n: HTMLInputElement) => {\n      n.addEventListener('change', () => this.column.setGroupRenderer(n.value), { passive: true });\n    });\n    this.forEach('input[name=\"summary\"]', (n: HTMLInputElement) => {\n      n.addEventListener('change', () => this.column.setSummaryRenderer(n.value), { passive: true });\n    });\n  }\n\n}\n","import ADialog, {IDialogContext} from './ADialog';\nimport {schemeCategory10, schemeSet1, schemeSet2, schemeSet3, schemeAccent, schemeDark2, schemePastel2, schemePastel1} from 'd3-scale-chromatic';\nimport {round} from '../../internal';\nimport {uniqueId} from '../../renderer/utils';\nimport {QuantizedColorFunction, CustomColorMappingFunction, SolidColorFunction, SequentialColorFunction, DivergentColorFunction} from '../../model/ColorMappingFunction';\nimport {IMapAbleColumn, DEFAULT_COLOR} from '../../model';\nimport {cssClass} from '../../styles';\n\n/** @internal */\nexport default class ColorMappingDialog extends ADialog {\n  constructor(private readonly column: IMapAbleColumn, dialog: IDialogContext) {\n    super(dialog);\n  }\n\n  protected build(node: HTMLElement) {\n    node.classList.add(cssClass('dialog-color'));\n    const id = uniqueId('col');\n\n    const current = this.column.getColorMapping();\n    const entries = current instanceof CustomColorMappingFunction ? current.entries : [];\n\n    let h = '';\n    h += `<datalist id=\"${id}L\">${schemeCategory10.map((d) => `<option>${d}\"</option>`).join('')}</datalist>`;\n    h += `<datalist id=\"${id}LW\"><option>#FFFFFF\"</option>${schemeCategory10.slice(0, -1).map((d) => `<option>${d}</option>`).join('')}</datalist>`;\n\n    h += `<strong>Quantization</strong>\n    <label class=\"${cssClass('checkbox')}\">\n      <input name=\"kind\" type=\"radio\" id=\"${id}KC\" value=\"continuous\" ${!(current instanceof QuantizedColorFunction) ? 'checked': ''}>\n      <span>Continuous</span>\n    </label>\n    <label class=\"${cssClass('checkbox')}\">\n      <input name=\"kind\" type=\"radio\" id=\"${id}KQ\" value=\"quantized\" ${current instanceof QuantizedColorFunction ? 'checked': ''}>\n      <span><input type=\"number\" id=\"${id}KQS\" min=\"2\" step=\"1\" value=\"${current instanceof QuantizedColorFunction ? current.steps : 5}\">&nbsp; steps</span>\n    </label>`;\n\n    h += `<strong data-toggle=\"${current instanceof SolidColorFunction ? 'open' : ''}\">Solid Color</strong>`;\n    h += `<div>`;\n    {\n      const refColor = current instanceof SolidColorFunction ? current.color : '';\n      let has = false;\n      const colorsets = [schemeCategory10, schemeAccent, schemeDark2, schemePastel1, schemePastel2, schemeSet1, schemeSet2, schemeSet3];\n      for (const colors of colorsets) {\n        has = has || colors.includes(refColor);\n        h += `<div class=\"${cssClass('color-line')}\">\n          ${colors.map((d) => `<label class=\"${cssClass('checkbox-color')}\">\n              <input name=\"color\" type=\"radio\" value=\"${d}\" ${d === refColor ? 'checked=\"checked\"': ''}>\n              <span style=\"background: ${d}\"></span>\n            </label>`).join('')}\n        </div>`;\n      }\n      h += `<label class=\"${cssClass('checkbox')} ${cssClass('color-gradient')}\"><input name=\"color\" type=\"radio\" value=\"custom:solid\" ${refColor && !has ? 'checked=\"checked\"' : ''}>\n        <span class=\"${cssClass('color-custom')}\"><input type=\"color\" name=\"solid\" list=\"${id}L\" value=\"${current instanceof SolidColorFunction ? current.color : DEFAULT_COLOR}\" ${refColor && !has ? '' : 'disabled'}></span>\n      </label>`;\n    }\n    h += '</div>';\n\n    h += `<strong data-toggle=\"${current instanceof SequentialColorFunction || (current instanceof CustomColorMappingFunction && entries.length === 2) ? 'open' : ''}\">Sequential Color</strong>`;\n    h += '<div>';\n    {\n      const name = current instanceof SequentialColorFunction ? current.name : '';\n      for (const colors of Object.keys(SequentialColorFunction.FUNCTIONS)) {\n        h += `<label class=\"${cssClass('checkbox')} ${cssClass('color-gradient')}\"><input name=\"color\" type=\"radio\" value=\"${colors}\" ${colors === name ? 'checked=\"checked\"' : ''}>\n        <span data-c=\"${colors}\" style=\"background: ${gradient(SequentialColorFunction.FUNCTIONS[colors], 9)}\"></span>\n      </label>`;\n      }\n      const isCustom = entries.length === 2;\n      h += `<label class=\"${cssClass('checkbox')} ${cssClass('color-gradient')}\">\n        <input name=\"color\" type=\"radio\" value=\"custom:sequential\" ${isCustom ? 'checked': ''}>\n        <span class=\"${cssClass('color-custom')}\">\n          <input type=\"color\" name=\"interpolate0\" list=\"${id}LW\" ${!isCustom ? 'disabled': `value=\"${entries[0].color}\"`}>\n          <input type=\"color\" name=\"interpolate1\" list=\"${id}LW\" ${!isCustom ? 'disabled': `value=\"${entries[entries.length - 1].color}\"`}>\n        </span>\n      </label>`;\n    }\n    h += '</div>';\n    h += `<strong data-toggle=\"${current instanceof DivergentColorFunction || (current instanceof CustomColorMappingFunction && entries.length === 3) ? 'open' : ''}\">Diverging Color</strong>`;\n    h += '<div>';\n    {\n      const name = current instanceof SequentialColorFunction ? current.name : '';\n      for (const colors of Object.keys(DivergentColorFunction.FUNCTIONS)) {\n        h += `<label class=\"${cssClass('checkbox')} ${cssClass('color-gradient')}\"><input name=\"color\" type=\"radio\" value=\"${colors}\" ${colors === name ? 'checked=\"checked\"' : ''}>\n        <span data-c=\"${colors}\" style=\"background: ${gradient(DivergentColorFunction.FUNCTIONS[colors], 11)}\"></span>\n      </label>`;\n      }\n      const isCustom = entries.length === 3;\n      h += `<label class=\"${cssClass('checkbox')} ${cssClass('color-gradient')}\">\n        <input name=\"color\" type=\"radio\" value=\"custom:divergent\" ${isCustom ? 'checked' : ''}>\n        <span class=\"${cssClass('color-custom')}\">\n          <input type=\"color\" name=\"divergingm1\" list=\"${id}L\" ${!isCustom ? 'disabled': `value=\"${entries[0].color}\"`}>\n          <input type=\"color\" name=\"diverging0\" list=\"${id}LW\" ${!isCustom ? 'disabled': `value=\"${entries[1].color}\"`}>\n          <input type=\"color\" name=\"diverging1\" list=\"${id}L\" ${!isCustom ? 'disabled': `value=\"${entries[2].color}\"`}>\n        </span>\n      </label>`;\n    }\n    h += '</div>';\n\n    node.insertAdjacentHTML('beforeend', h);\n\n    this.interactive(node, id);\n  }\n\n  private interactive(node: HTMLElement, id: string) {\n    const continuouos = this.findInput(`#${id}KC`);\n    const quantized = this.findInput(`#${id}KQ`);\n    const steps = this.findInput(`#${id}KQS`);\n    const toggles = <HTMLElement[]>Array.from(node.querySelectorAll('strong[data-toggle]'));\n\n    for (const toggle of toggles) {\n      toggle.onclick = (evt) => {\n        evt.preventDefault();\n        evt.stopPropagation();\n        for (const t2 of toggles) {\n          t2.dataset.toggle = t2.dataset.toggle === 'open' || toggle !== t2 ? '' : 'open';\n        }\n      };\n    }\n\n    const customs: HTMLElement[] = [];\n\n    const toColor = (input: HTMLInputElement) => {\n      switch (input.value) {\n        case 'custom:solid':\n          return new SolidColorFunction((<HTMLInputElement>node.querySelector('input[name=solid]')!).value);\n        case 'custom:sequential':\n          const s0 = (<HTMLInputElement>node.querySelector('input[name=interpolate0]')!).value;\n          const s1 = (<HTMLInputElement>node.querySelector('input[name=interpolate1]')!).value;\n          return new CustomColorMappingFunction([{color: s0, value: 0}, {color: s1, value: 1}]);\n        case 'custom:diverging':\n          const dm1 = (<HTMLInputElement>node.querySelector('input[name=divergentm1]')!).value;\n          const d0 = (<HTMLInputElement>node.querySelector('input[name=divergent0]')!).value;\n          const d1 = (<HTMLInputElement>node.querySelector('input[name=divergent1]')!).value;\n          return new CustomColorMappingFunction([{color: dm1, value: 0}, {color: d0, value: 0.5}, {color: d1, value: 1}]);\n      }\n      if (input.value in SequentialColorFunction.FUNCTIONS) {\n        return new SequentialColorFunction(input.value);\n      }\n      if (input.value in DivergentColorFunction.FUNCTIONS) {\n        return new DivergentColorFunction(input.value);\n      }\n      return new SolidColorFunction(input.value);\n    };\n\n    const updateColor = (d: HTMLInputElement) => {\n      if (!d.checked) {\n        return;\n      }\n      // disable customs\n      for (const custom of customs) {\n        Array.from(custom.nextElementSibling!.getElementsByTagName('input')).forEach((s) => s.disabled = custom !== d);\n      }\n      const base = toColor(d);\n      if (quantized.checked && !(base instanceof SolidColorFunction)) {\n        this.column.setColorMapping(new QuantizedColorFunction(base, parseInt(steps.value, 10)));\n      } else {\n        this.column.setColorMapping(base);\n      }\n    };\n\n    const updateSelectedColor = () => {\n      const selected = this.findInput(`input[name=color]:checked`);\n      if (selected) {\n        updateColor(selected);\n      }\n    };\n\n    this.forEach('input[name=color]', (d: HTMLInputElement) => {\n      if (d.value.startsWith('custom:')) {\n        customs.push(d);\n      }\n      d.onchange = () => updateColor(d);\n    });\n\n    // upon changing custom parameter trigger an update\n    this.forEach(`.${cssClass('color-custom')} input[type=color]`, (d: HTMLInputElement) => {\n      d.onchange = () => {\n        const item = (<HTMLInputElement>d.parentElement!.previousElementSibling!);\n        updateColor(item);\n      };\n    });\n\n    continuouos.onchange = () => {\n      if (continuouos.checked) {\n        this.updateGradients(-1);\n        updateSelectedColor();\n      }\n    };\n    quantized.onchange = steps.onchange = () => {\n      if (!quantized.checked) {\n        this.updateGradients(-1);\n        updateSelectedColor();\n        return;\n      }\n      if (toggles[0].dataset.toggle === 'open') {\n        // auto open sequential\n        toggles[0].dataset.toggle = '';\n        toggles[1].dataset.toggle = 'open';\n      }\n      this.updateGradients(parseInt(steps.value, 10));\n      updateSelectedColor();\n    };\n  }\n\n  private updateGradients(steps: number) {\n    this.forEach(`span[data-c]`, (d: HTMLElement) => {\n      const key = d.dataset.c!;\n      const s = SequentialColorFunction.FUNCTIONS[key];\n      if (s) {\n        d.style.background = steps < 0 ? gradient(s, 9) : steppedGradient(s, steps);\n        return;\n      }\n      const di = DivergentColorFunction.FUNCTIONS[key];\n      if (di) {\n        d.style.background = steps < 0 ? gradient(di, 11) : steppedGradient(di, steps);\n        return;\n      }\n    });\n  }\n}\n\nfunction gradient(interpolate: (v: number)=>string, steps = 2) {\n  if (steps <= 1) {\n    return `${interpolate(0)}`;\n  }\n  const stepSize = 1 / (steps - 1);\n  let r = `linear-gradient(to right`;\n  for (let i = 0; i < steps; ++i) {\n    r += `, ${interpolate(i * stepSize)} ${round((i * stepSize) * 100, 2)}%`;\n  }\n  r += ')';\n  return r;\n}\n\nfunction steppedGradient(color: (v: number)=>string, count = 2) {\n  if (count === 1) {\n    return `${color(0)}`;\n  }\n  let r = `linear-gradient(to right`;\n  const stepSize = 1 / count;\n  const half = stepSize / 2;\n  for (let i = 0; i < count; ++i) {\n    // stepped\n    // first and last at border else center\n    const shift = i === 0 ? 0 : (i === (count - 1) ? stepSize : half);\n    const c = color(i * stepSize + shift);\n    r += `, ${c} ${round((i * stepSize) * 100, 2)}%, ${c} ${round(((i + 1) * stepSize) * 100, 2)}%`;\n  }\n  r += ')';\n  return r;\n}\n","import {cssClass} from '../styles';\n\n/** @internal */\nexport function hasDnDType(e: DragEvent, ...typesToCheck: string[]) {\n  const available: any = e.dataTransfer!.types;\n\n  /*\n   * In Chrome datatransfer.types is an Array,\n   * while in Firefox it is a DOMStringList\n   * that only implements a contains-method!\n   */\n  if (typeof available.indexOf === 'function') {\n    return typesToCheck.some((type) => available.indexOf(type) >= 0);\n  }\n  if (typeof available.includes === 'function') {\n    return typesToCheck.some((type) => available.includes(type));\n  }\n  if (typeof available.contains === 'function') {\n    return typesToCheck.some((type) => available.contains(type));\n  }\n  return false;\n}\n\n\n/**\n * helper storage for dnd in edge since edge doesn't support custom mime-types\n * @type {Map<number, {[p: string]: string}>}\n */\nconst dndTransferStorage = new Map<number, {[key: string]: string}>();\n\nfunction isEdgeDnD(e: DragEvent) {\n  return dndTransferStorage.size > 0 && hasDnDType(e, 'text/plain');\n}\n\n/**\n * checks whether it is a copy operation\n * @param e\n * @returns {boolean|RegExpMatchArray}\n * @internal\n */\nexport function copyDnD(e: DragEvent) {\n  const dT = e.dataTransfer!;\n  return Boolean((e.ctrlKey && dT.effectAllowed.match(/copy/gi)) || (!dT.effectAllowed.match(/move/gi)));\n}\n\n/**\n * updates the drop effect accoriding to the current copyDnD state\n * @param e\n * @internal\n */\nexport function updateDropEffect(e: DragEvent) {\n  const dT = e.dataTransfer!;\n  if (copyDnD(e)) {\n    dT.dropEffect = 'copy';\n  } else {\n    dT.dropEffect = 'move';\n  }\n}\n\n/** @internal */\nexport type IDragEffect = 'none' | 'copy' | 'copyLink' | 'copyMove' | 'link' | 'linkMove' | 'move' | 'all';\n\n/** @internal */\nexport interface IDragStartResult {\n  effectAllowed: IDragEffect;\n  data: {[mimeType: string]: string};\n}\n\n/** @internal */\nexport interface IDropResult {\n  effect: IDragEffect;\n  data: {[mimeType: string]: string};\n}\n\nlet idCounter = 0;\n\n/**\n * add drag support for the given element\n * @param {HTMLElement} node\n * @param {() => IDragStartResult} onDragStart callback to compute the payload an object of mime types\n * @param {boolean} stopPropagation whether to stop propagation in case of success\n * @internal\n */\nexport function dragAble(node: HTMLElement, onDragStart: () => IDragStartResult, stopPropagation: boolean = false) {\n  const id = ++idCounter;\n\n  node.classList.add(cssClass('dragable'));\n  node.draggable = true;\n\n  node.addEventListener('dragstart', (e) => {\n    node.classList.add(cssClass('dragging'));\n    const payload = onDragStart();\n    e.dataTransfer!.effectAllowed = payload.effectAllowed;\n\n    if (stopPropagation) {\n      e.stopPropagation();\n    }\n\n    // copy all data transfer objects\n    const keys = Object.keys(payload.data);\n    const allSucceded = keys.every((k) => {\n      try {\n        e.dataTransfer!.setData(k, payload.data[k]);\n        return true;\n      } catch (e) {\n        return false;\n      }\n    });\n    if (allSucceded) {\n      return;\n    }\n    //compatibility mode for edge\n    const text = payload.data['text/plain'] || '';\n    e.dataTransfer!.setData('text/plain', `${id}${text ? `: ${text}` : ''}`);\n    dndTransferStorage.set(id, payload.data);\n  });\n\n  node.addEventListener('dragend', (e) => {\n    node.classList.remove(cssClass('dragging'));\n\n    if (stopPropagation) {\n      e.stopPropagation();\n    }\n\n    if (dndTransferStorage.size > 0) {\n      //clear the id\n      dndTransferStorage.delete(id);\n    }\n\n    // remove all\n    const over = <HTMLElement>node.ownerDocument!.getElementsByClassName(cssClass('dragover'))[0];\n    if (over) {\n      over.classList.remove(cssClass('dragover'));\n    }\n  });\n}\n\n/**\n * add dropable support for the given node\n * @param {HTMLElement} node\n * @param {string[]} mimeTypes mimeTypes to look for\n * @param {(result: IDropResult, e: DragEvent) => boolean} onDrop callback when dropped, returns true if the drop was successful\n * @param {(e: DragEvent) => void} onDragOver optional drag over handler, e.g. for special effects\n * @param {boolean} stopPropagation flag if the event propagation should be stopped in case of success\n * @param {() => boolean} optional whether to enable dropping at all\n * @internal\n */\nexport function dropAble(node: HTMLElement, mimeTypes: string[], onDrop: (result: IDropResult, e: DragEvent) => boolean, onDragOver: null | ((e: DragEvent) => void) = null, stopPropagation: boolean = false, canDrop: () => boolean = (() => true)) {\n  node.addEventListener('dragenter', (e) => {\n    //var xy = mouse($node.node());\n    if (node.classList.contains(cssClass('dragging')) || !(hasDnDType(e, ...mimeTypes) || isEdgeDnD(e)) || !canDrop()) {\n      // not a valid mime type\n      node.classList.remove(cssClass('dragover'));\n      return;\n    }\n    node.classList.add(cssClass('dragover'));\n    if (stopPropagation) {\n      e.stopPropagation();\n    }\n    //sounds good\n    return false;\n  });\n\n  node.addEventListener('dragover', (e) => {\n    if (node.classList.contains(cssClass('dragging')) || !(hasDnDType(e, ...mimeTypes) || isEdgeDnD(e)) || !canDrop()) {\n      // not a valid mime type\n      return;\n    }\n\n    e.preventDefault();\n    updateDropEffect(e);\n    node.classList.add(cssClass('dragover'));\n\n    if (stopPropagation) {\n      e.stopPropagation();\n    }\n    if (onDragOver) {\n      onDragOver(e);\n    }\n    //sound good\n    return false;\n  });\n\n  node.addEventListener('dragleave', (evt) => {\n    // same fix as in phovea\n    (<HTMLElement>evt.target).classList.remove(cssClass('dragover'));\n  });\n\n  node.addEventListener('drop', (e) => {\n    e.preventDefault();\n    if (stopPropagation) {\n      e.stopPropagation();\n    }\n    updateDropEffect(e);\n\n    const effect = <IDragEffect>e.dataTransfer!.dropEffect;\n\n    node.classList.remove(cssClass('dragover'));\n\n    if (isEdgeDnD(e)) {\n      // retrieve from helper\n      const base = e.dataTransfer!.getData('text/plain');\n      const id = parseInt(base.indexOf(':') >= 0 ? base.substring(0, base.indexOf(':')) : base, 10);\n      if (dndTransferStorage.has(id)) {\n        const data = dndTransferStorage.get(id)!;\n        dndTransferStorage.delete(id);\n        return !onDrop({effect, data}, e);\n      }\n      return;\n    }\n\n    if (!hasDnDType(e, ...mimeTypes)) {\n      return;\n    }\n\n    // copy sub mime types\n    const data: any = {};\n    //selects the data contained in the data transfer\n    mimeTypes.forEach((mime) => {\n      const value = e.dataTransfer!.getData(mime);\n      if (value !== '') {\n        data[mime] = value;\n      }\n    });\n    return !onDrop({effect, data}, e);\n  });\n}\n","import {Column} from '../../model';\nimport {createToolbarMenuItems, updateIconState} from '../header';\nimport {IRankingHeaderContext} from '../interfaces';\nimport ADialog, {IDialogContext} from './ADialog';\nimport {cssClass} from '../../styles';\n\n/** @internal */\nexport default class MoreColumnOptionsDialog extends ADialog {\n\n  constructor(private readonly column: Column, dialog: IDialogContext, private readonly ctx: IRankingHeaderContext) {\n    super(dialog);\n  }\n\n  protected build(node: HTMLElement) {\n    node.classList.add(cssClass('more-options'));\n    createToolbarMenuItems(node, this.dialog.level + 1, this.column, this.ctx);\n\n    updateIconState(node, this.column);\n  }\n}\n","import {MIN_LABEL_WIDTH} from '../constants';\nimport {equalArrays, dragAble, dropAble, hasDnDType, IDropResult} from '../internal';\nimport {categoryOf, getSortType} from '../model';\nimport {createNestedDesc, createReduceDesc, createStackDesc, IColumnDesc, isArrayColumn, isBoxPlotColumn, isCategoricalColumn, isMapColumn, isNumberColumn, isNumbersColumn, Column, ImpositionCompositeColumn, ImpositionCompositesColumn, createImpositionDesc, createImpositionsDesc, ImpositionBoxPlotColumn, createImpositionBoxPlotDesc, CompositeColumn, IMultiLevelColumn, isMultiLevelColumn} from '../model';\nimport {aria, cssClass} from '../styles';\nimport MoreColumnOptionsDialog from './dialogs/MoreColumnOptionsDialog';\nimport {IRankingHeaderContext, IToolbarAction, IOnClickHandler} from './interfaces';\nimport {getToolbar} from './toolbar';\nimport {dialogContext} from './dialogs';\n\n/** @internal */\nexport interface IHeaderOptions {\n  dragAble: boolean;\n  mergeDropAble: boolean;\n  rearrangeAble: boolean;\n  resizeable: boolean;\n  level: number;\n  extraPrefix: string;\n}\n\n/** @internal */\nexport function createHeader(col: Column, ctx: IRankingHeaderContext, options: Partial<IHeaderOptions> = {}) {\n  options = Object.assign({\n    dragAble: true,\n    mergeDropAble: true,\n    rearrangeAble: true,\n    resizeable: true,\n    level: 0,\n    extraPrefix: ''\n  }, options);\n  const node = ctx.document.createElement('section');\n\n  const extra = options.extraPrefix ? (name: string) => `${cssClass(name)} ${cssClass(`${options.extraPrefix}-${name}`)}` : cssClass;\n\n  node.innerHTML = `\n    <div class=\"${extra('label')} ${cssClass('typed-icon')}\">${col.getWidth() < MIN_LABEL_WIDTH ? '&nbsp;' : col.label}</div>\n    <div class=\"${extra('toolbar')}\"></div>\n    <div class=\"${extra('spacing')}\"></div>\n    <div class=\"${extra('handle')} ${cssClass('feature-advanced')} ${cssClass('feature-ui')}\"></div>\n  `;\n\n  // addTooltip(node, col);\n\n  createShortcutMenuItems(<HTMLElement>node.getElementsByClassName(cssClass('toolbar'))[0]!, options.level!, col, ctx);\n\n  toggleToolbarIcons(node, col);\n\n  if (options.dragAble) {\n    dragAbleColumn(node, col, ctx);\n  }\n  if (options.mergeDropAble) {\n    mergeDropAble(node, col, ctx);\n  }\n  if (options.rearrangeAble) {\n    rearrangeDropAble(<HTMLElement>node.getElementsByClassName(cssClass('handle'))[0]!, col, ctx);\n  }\n  if (options.resizeable) {\n    dragWidth(col, node);\n  }\n  return node;\n}\n\n\n/** @internal */\nexport function updateHeader(node: HTMLElement, col: Column, minWidth = MIN_LABEL_WIDTH) {\n  const label = <HTMLElement>node.getElementsByClassName(cssClass('label'))[0]!;\n  label.innerHTML = col.getWidth() < minWidth ? '&nbsp;' : col.label;\n  node.title = col.description ? `${col.label}\\n${col.description}` : col.label;\n  node.dataset.colId = col.id;\n  node.dataset.type = col.desc.type;\n  label.dataset.typeCat = categoryOf(col).name;\n\n  updateIconState(node, col);\n}\n\n\n/** @internal */\nexport function updateIconState(node: HTMLElement, col: Column) {\n  const sort = <HTMLElement>node.getElementsByClassName(cssClass('action-sort'))[0]!;\n  if (sort) {\n    const {asc, priority} = col.isSortedByMe();\n    sort.dataset.sort = asc !== undefined ? asc : '';\n    sort.dataset.type = getSortType(col);\n    if (priority !== undefined) {\n      sort.dataset.priority = (priority + 1).toString();\n    } else {\n      delete sort.dataset.priority;\n    }\n  }\n\n  const sortGroups = <HTMLElement>node.getElementsByClassName(cssClass('action-sortgroup'))[0]!;\n  if (sortGroups) {\n    const {asc, priority} = col.isGroupSortedByMe();\n    sortGroups.dataset.sort = asc !== undefined ? asc : '';\n    sortGroups.dataset.type = getSortType(col);\n    if (priority !== undefined) {\n      sortGroups.dataset.priority = (priority + 1).toString();\n    } else {\n      delete sortGroups.dataset.priority;\n    }\n  }\n\n  const group = <HTMLElement>node.getElementsByClassName(cssClass('action-group'))[0]!;\n  if (group) {\n    const groupedBy = col.isGroupedBy();\n    group.dataset.group = groupedBy >= 0 ? 'true' : 'false';\n    if (groupedBy >= 0) {\n      group.dataset.priority = (groupedBy + 1).toString();\n    } else {\n      delete group.dataset.priority;\n    }\n  }\n\n  const filter = <HTMLElement>node.getElementsByClassName(cssClass('action-filter'))[0]!;\n  if (!filter) {\n    return;\n  }\n  if (col.isFiltered()) {\n    filter.dataset.active = '';\n  } else {\n    delete filter.dataset.active;\n  }\n}\n\n/** @internal */\nexport function actionCSSClass(title: string) {\n  if (title.endsWith('&hellip;')) {\n    title = title.slice(0, -'&hellip;'.length - 1);\n  }\n  if (title.endsWith('By')) {\n    title = title.slice(0, -3);\n  }\n  const clean = title.toLowerCase().replace(/[ +-]/mg, '-');\n  return `${cssClass('action')} ${cssClass(`action-${clean}`)}`;\n}\n\nfunction addIconDOM(node: HTMLElement, col: Column, ctx: IRankingHeaderContext, level: number, showLabel: boolean) {\n  return (action: IToolbarAction) => {\n    node.insertAdjacentHTML('beforeend', `<i data-a=\"${action.options.shortcut === 'only' ? 'o' : action.options.shortcut ? 's' : 'r'}\" title=\"${action.title}\" class=\"${actionCSSClass(action.title.toString())} ${cssClass(`feature-${action.options.featureLevel || 'basic'}`)} ${cssClass(`feature-${action.options.featureCategory || 'others'}`)}\"><span${!showLabel ? ` class=\"${cssClass('aria')}\" aria-hidden=\"true\"` : ''}>${action.title}</span> </i>`);\n    const i = <HTMLElement>node.lastElementChild;\n    i.onclick = (evt) => {\n      evt.stopPropagation();\n      ctx.dialogManager.setHighlightColumn(col);\n      action.onClick(col, <any>evt, ctx, level, !showLabel);\n    };\n    return i;\n  };\n}\n\n/** @internal */\nexport interface IAddIcon {\n  (title: string, onClick: IOnClickHandler): void;\n}\n\n/** @internal */\nexport function createShortcutMenuItems(node: HTMLElement, level: number, col: Column, ctx: IRankingHeaderContext, willAutoHide: boolean = true) {\n  const addIcon = addIconDOM(node, col, ctx, level, false);\n  const toolbar = getToolbar(col, ctx);\n  const shortcuts = toolbar.filter((d) => d.options.shortcut);\n  const hybrids = shortcuts.reduce((a, b) => a + (b.options.shortcut === true ? 1 : 0), 0);\n\n  shortcuts.forEach(addIcon);\n  const moreEntries = toolbar.length - shortcuts.length + hybrids;\n\n  if (shortcuts.length === toolbar.length || (moreEntries === hybrids && !willAutoHide)) {\n    // all visible or just hybrids that will always be visible\n    return;\n  }\n\n  // need a more entry\n  node.insertAdjacentHTML('beforeend', `<i data-a=\"m\" data-m=\"${moreEntries}\" title=\"More &hellip;\" class=\"${actionCSSClass('More')}\">${aria('More &hellip;')}</i>`);\n  const i = <HTMLElement>node.lastElementChild;\n  i.onclick = (evt) => {\n    evt.stopPropagation();\n    ctx.dialogManager.setHighlightColumn(col);\n    const dialog = new MoreColumnOptionsDialog(col, dialogContext(ctx, level, <any>evt), ctx);\n    dialog.open();\n  };\n}\n\n/** @internal */\nexport function createToolbarMenuItems(node: HTMLElement, level: number, col: Column, ctx: IRankingHeaderContext) {\n  const addIcon = addIconDOM(node, col, ctx, level, true);\n  getToolbar(col, ctx).filter((d) => d.options.shortcut !== 'only').forEach(addIcon);\n}\n\n/** @internal */\nfunction toggleRotatedHeader(node: HTMLElement, col: Column, defaultVisibleClientWidth: number) {\n  // rotate header flag if needed\n  const label = <HTMLElement>node.getElementsByClassName(cssClass('label'))[0];\n  if (col.getWidth() < MIN_LABEL_WIDTH) {\n    label.classList.remove(`.${cssClass('rotated')}`);\n    return;\n  }\n  const width = label.clientWidth;\n  const rotated = width <= 0 ? (col.label.length * defaultVisibleClientWidth / 3 * 0.6 > col.getWidth()) : (label.scrollWidth * 0.6 > label.clientWidth);\n  label.classList.toggle(`.${cssClass('rotated')}`, rotated);\n}\n\n/** @internal */\nfunction toggleToolbarIcons(node: HTMLElement, col: Column, defaultVisibleClientWidth = 22.5) {\n  toggleRotatedHeader(node, col, defaultVisibleClientWidth);\n\n  const toolbar = <HTMLElement>node.getElementsByClassName(cssClass('toolbar'))[0];\n  if (toolbar.childElementCount === 0) {\n    return;\n  }\n  const availableWidth = col.getWidth();\n  const actions = Array.from(toolbar.children).map((d) => ({node: <HTMLElement>d, width: d.clientWidth > 0 ? d.clientWidth : defaultVisibleClientWidth}));\n\n  const shortCuts = actions.filter((d) => d.node.dataset.a === 'o');\n  const hybrids = actions.filter((d) => d.node.dataset.a === 's');\n  const moreIcon = actions.find((d) => d.node.dataset.a === 'm');\n  const moreEntries = moreIcon ? parseInt(moreIcon.node.dataset.m!, 10) : 0;\n  const needMore = moreEntries > hybrids.length;\n\n  let total = actions.reduce((a, b) => a + b.width, 0);\n\n  for (const action of actions) {\n    // maybe hide not needed \"more\"\n    action.node.classList.remove(cssClass('hidden'));\n  }\n\n  // all visible\n  if (total < availableWidth) {\n    return;\n  }\n  if (moreIcon && !needMore && (total - moreIcon.width) < availableWidth) {\n    // available space is enougth we can skip the \"more\" and then it fits\n    moreIcon.node.classList.add(cssClass('hidden'));\n    return;\n  }\n\n  for (const action of hybrids.reverse().concat(shortCuts.reverse())) { // back to forth and hybrids earlier than pure shortcuts\n    // hide and check if enough\n    action.node.classList.add(cssClass('hidden'));\n    total -= action.width;\n    if (total < availableWidth) {\n      return;\n    }\n  }\n}\n\n\n/**\n * allow to change the width of a column using dragging the handle\n * @internal\n */\nexport function dragWidth(col: Column, node: HTMLElement) {\n  let ueberElement: HTMLElement;\n  const handle = <HTMLElement>node.getElementsByClassName(cssClass('handle'))[0];\n\n\n  let start = 0;\n  const mouseMove = (evt: MouseEvent) => {\n    evt.stopPropagation();\n    evt.preventDefault();\n    const end = evt.clientX;\n    const delta = end - start;\n    const width = Math.max(0, col.getWidth() + delta);\n\n    if (Math.abs(start - end) < 2) {\n      //ignore\n      return;\n    }\n    start = end;\n    node.style.width = `${width}px`;\n    col.setWidth(width);\n    toggleToolbarIcons(node, col);\n  };\n\n  const mouseUp = (evt: MouseEvent) => {\n    evt.stopPropagation();\n    evt.preventDefault();\n    const end = evt.clientX;\n    node.classList.remove(cssClass('change-width'));\n\n    ueberElement.removeEventListener('mousemove', mouseMove);\n    ueberElement.removeEventListener('mouseup', mouseUp);\n    ueberElement.removeEventListener('mouseleave', mouseUp);\n    node.style.width = null;\n\n    if (Math.abs(start - end) < 2) {\n      //ignore\n      return;\n    }\n    const delta = end - start;\n    const width = Math.max(0, col.getWidth() + delta);\n    col.setWidth(width);\n    toggleToolbarIcons(node, col);\n  };\n  handle.onmousedown = (evt) => {\n    evt.stopPropagation();\n    evt.preventDefault();\n    node.classList.add(cssClass('change-width'));\n\n    start = evt.clientX;\n    ueberElement = <HTMLElement>node.closest('header')!;\n    ueberElement.addEventListener('mousemove', mouseMove);\n    ueberElement.addEventListener('mouseup', mouseUp);\n    ueberElement.addEventListener('mouseleave', mouseUp);\n  };\n  handle.onclick = (evt) => {\n    // avoid resorting\n    evt.stopPropagation();\n    evt.preventDefault();\n  };\n}\n\n/** @internal */\nexport const MIMETYPE_PREFIX = 'text/x-caleydo-lineup-column';\n\n/**\n * allow to drag the column away\n * @internal\n */\nexport function dragAbleColumn(node: HTMLElement, column: Column, ctx: IRankingHeaderContext) {\n  dragAble(node, () => {\n    const ref = JSON.stringify(ctx.provider.toDescRef(column.desc));\n    const data: any = {\n      'text/plain': column.label,\n      [`${MIMETYPE_PREFIX}-ref`]: column.id,\n      [MIMETYPE_PREFIX]: ref\n    };\n    if (isNumberColumn(column)) {\n      data[`${MIMETYPE_PREFIX}-number`] = ref;\n      data[`${MIMETYPE_PREFIX}-number-ref`] = column.id;\n    }\n    if (isCategoricalColumn(column)) {\n      data[`${MIMETYPE_PREFIX}-categorical`] = ref;\n      data[`${MIMETYPE_PREFIX}-categorical-ref`] = column.id;\n    }\n    if (isBoxPlotColumn(column)) {\n      data[`${MIMETYPE_PREFIX}-boxplot`] = ref;\n      data[`${MIMETYPE_PREFIX}-boxplot-ref`] = column.id;\n    }\n    if (isMapColumn(column)) {\n      data[`${MIMETYPE_PREFIX}-map`] = ref;\n      data[`${MIMETYPE_PREFIX}-map-ref`] = column.id;\n    }\n    if (isArrayColumn(column)) {\n      data[`${MIMETYPE_PREFIX}-array`] = ref;\n      data[`${MIMETYPE_PREFIX}-array-ref`] = column.id;\n    }\n    if (isNumbersColumn(column)) {\n      data[`${MIMETYPE_PREFIX}-numbers`] = ref;\n      data[`${MIMETYPE_PREFIX}-numbers-ref`] = column.id;\n    }\n    return {\n      effectAllowed: 'copyMove',\n      data\n    };\n  }, true);\n}\n\n/**\n * dropper for allowing to rearrange (move, copy) columns\n * @internal\n */\nexport function rearrangeDropAble(node: HTMLElement, column: Column, ctx: IRankingHeaderContext) {\n  dropAble(node, [`${MIMETYPE_PREFIX}-ref`, MIMETYPE_PREFIX], (result) => {\n    let col: Column | null = null;\n    const data = result.data;\n    if (!(`${MIMETYPE_PREFIX}-ref` in data)) {\n      const desc = JSON.parse(data[MIMETYPE_PREFIX]);\n      col = ctx.provider.create(ctx.provider.fromDescRef(desc));\n      return col != null && column.insertAfterMe(col) != null;\n    }\n\n    // find by reference\n    const id = data[`${MIMETYPE_PREFIX}-ref`];\n    col = ctx.provider.find(id);\n    if (!col || (col === column && !result.effect.startsWith('copy'))) {\n      return false;\n    }\n    if (result.effect.startsWith('copy')) {\n      col = ctx.provider.clone(col!);\n      return col != null && column.insertAfterMe(col) != null;\n    }\n    // detect whether it is an internal move operation or an real remove/insert operation\n    const toInsertParent = col.parent;\n    if (!toInsertParent) { // no parent will always be a move\n      return column.insertAfterMe(col) != null;\n    }\n    if (toInsertParent === column.parent) {\n      // move operation\n      return toInsertParent.moveAfter(col, column) != null;\n    }\n    col.removeMe();\n    return column.insertAfterMe(col) != null;\n  }, null, true);\n}\n\n/**\n * dropper for allowing to change the order by dropping it at a certain position\n * @internal\n */\nexport function resortDropAble(node: HTMLElement, column: Column, ctx: IRankingHeaderContext, where: 'before' | 'after', autoGroup: boolean) {\n  dropAble(node, [`${MIMETYPE_PREFIX}-ref`, MIMETYPE_PREFIX], (result) => {\n    let col: Column | null = null;\n    const data = result.data;\n    if (`${MIMETYPE_PREFIX}-ref` in data) {\n      const id = data[`${MIMETYPE_PREFIX}-ref`];\n      col = ctx.provider.find(id);\n      if (!col || col === column) {\n        return false;\n      }\n    } else {\n      const desc = JSON.parse(data[MIMETYPE_PREFIX]);\n      col = ctx.provider.create(ctx.provider.fromDescRef(desc));\n      if (col) {\n        column.findMyRanker()!.push(col);\n      }\n    }\n    const ranking = column.findMyRanker()!;\n    if (!col || col === column || !ranking) {\n      return false;\n    }\n\n    const criteria = ranking.getSortCriteria();\n    const groups = ranking.getGroupCriteria();\n\n    const removeFromSort = (col: Column) => {\n      const existing = criteria.findIndex((d) => d.col === col);\n      if (existing >= 0) { // remove existing column but keep asc state\n        return criteria.splice(existing, 1)[0].asc;\n      }\n      return false;\n    };\n\n    // remove the one to add\n    const asc = removeFromSort(col);\n\n    const groupIndex = groups.indexOf(column);\n    const index = criteria.findIndex((d) => d.col === column);\n\n    if (autoGroup && groupIndex >= 0) {\n      // before the grouping, so either ungroup or regroup\n      removeFromSort(column);\n      if (isCategoricalColumn(col)) { // we can group by it\n        groups.splice(groupIndex + (where === 'after' ? 1 : 0), 0, col);\n      } else {\n        // remove all before and shift to sorting + sorting\n        const removed = groups.splice(0, groups.length - groupIndex);\n        criteria.unshift(...removed.reverse().map((d) => ({asc: false, col: d}))); // now a first sorting criteria\n        criteria.unshift({asc, col});\n      }\n    } else if (index < 0) {\n      criteria.push({asc, col});\n    } else if (index === 0 && autoGroup && isCategoricalColumn(col)) {\n      // make group criteria\n      groups.push(col);\n    } else {\n      criteria.splice(index + (where === 'after' ? 1 : 0), 0, {asc, col});\n    }\n\n    if (!equalArrays(groups, ranking.getGroupCriteria())) {\n      ranking.setGroupCriteria(groups);\n    }\n    ranking.setSortCriteria(criteria);\n    return true;\n  }, null, true);\n}\n\n/**\n * dropper for merging columns\n * @internal\n */\nexport function mergeDropAble(node: HTMLElement, column: Column, ctx: IRankingHeaderContext) {\n  const resolveDrop = (result: IDropResult) => {\n    const data = result.data;\n    const copy = result.effect === 'copy';\n    const prefix = MIMETYPE_PREFIX;\n    const key = Object.keys(data).find((d) => d.startsWith(prefix) && d.endsWith('-ref'));\n    if (key) {\n      const id = data[key];\n      let col: Column = ctx.provider.find(id)!;\n      if (copy) {\n        col = ctx.provider.clone(col);\n      } else if (col === column) {\n        return null;\n      } else {\n        col.removeMe();\n      }\n      return col;\n    }\n    const alternative = Object.keys(data).find((d) => d.startsWith(prefix));\n    if (!alternative) {\n      return null;\n    }\n    const desc = JSON.parse(alternative);\n    return ctx.provider.create(ctx.provider.fromDescRef(desc))!;\n  };\n\n  const pushChild = (result: IDropResult) => {\n    const col: Column | null = resolveDrop(result);\n    return col != null && (<CompositeColumn>column).push(col) != null;\n  };\n\n  const mergeImpl = (col: Column | null, desc: IColumnDesc) => {\n    if (col == null) {\n      return false;\n    }\n    const ranking = column.findMyRanker()!;\n    const index = ranking.indexOf(column);\n    const parent = <CompositeColumn>ctx.provider.create(desc);\n    column.removeMe();\n    parent.push(column);\n    parent.push(col);\n    return ranking.insert(parent, index) != null;\n  };\n\n  const mergeWith = (desc: IColumnDesc) => (result: IDropResult) => {\n    const col: Column | null = resolveDrop(result);\n    return mergeImpl(col, desc);\n  };\n\n  const all = [`${MIMETYPE_PREFIX}-ref`, MIMETYPE_PREFIX];\n  const numberish = [`${MIMETYPE_PREFIX}-number-ref`, `${MIMETYPE_PREFIX}-number`];\n  const categorical = [`${MIMETYPE_PREFIX}-categorical-ref`, `${MIMETYPE_PREFIX}-categorical`];\n  const boxplot = [`${MIMETYPE_PREFIX}-boxplot-ref`, `${MIMETYPE_PREFIX}-boxplot`];\n  const numbers = [`${MIMETYPE_PREFIX}-numbers-ref`, `${MIMETYPE_PREFIX}-numbers`];\n\n  node.dataset.draginfo = '+';\n  if (column instanceof ImpositionCompositeColumn) {\n    return dropAble(node, categorical.concat(numberish), pushChild, (e) => {\n      if (hasDnDType(e, ...categorical)) {\n        node.dataset.draginfo = 'Color by';\n        return;\n      }\n      if (hasDnDType(e, ...numberish)) {\n        node.dataset.draginfo = 'Wrap';\n      }\n    }, false, () => column.children.length < 2);\n  }\n  if (column instanceof ImpositionBoxPlotColumn) {\n    return dropAble(node, categorical.concat(boxplot), pushChild, (e) => {\n      if (hasDnDType(e, ...categorical)) {\n        node.dataset.draginfo = 'Color by';\n        return;\n      }\n      if (hasDnDType(e, ...boxplot)) {\n        node.dataset.draginfo = 'Wrap';\n      }\n    }, false, () => column.children.length < 2);\n  }\n  if (column instanceof ImpositionCompositesColumn) {\n    return dropAble(node, categorical.concat(numbers), pushChild, (e) => {\n      if (hasDnDType(e, ...categorical)) {\n        node.dataset.draginfo = 'Color by';\n        return;\n      }\n      if (hasDnDType(e, ...numbers)) {\n        node.dataset.draginfo = 'Wrap';\n      }\n    }, false, () => column.children.length < 2);\n  }\n  if (isMultiLevelColumn(column)) {\n    // stack column or nested\n    return dropAble(node, (<IMultiLevelColumn>column).canJustAddNumbers ? numberish : all, pushChild);\n  }\n  if (column instanceof CompositeColumn) {\n    return dropAble(node, (<CompositeColumn>column).canJustAddNumbers ? numberish : all, pushChild);\n  }\n  if (isNumbersColumn(column)) {\n    node.dataset.draginfo = 'Color by';\n    return dropAble(node, categorical, mergeWith(createImpositionsDesc()));\n  }\n  if (isBoxPlotColumn(column)) {\n    node.dataset.draginfo = 'Color by';\n    return dropAble(node, categorical, mergeWith(createImpositionBoxPlotDesc()));\n  }\n  if (isNumberColumn(column)) {\n    node.dataset.draginfo = 'Merge';\n    return dropAble(node, categorical.concat(numberish), (result: IDropResult, evt: DragEvent) => {\n      const col: Column | null = resolveDrop(result);\n      if (col == null) {\n        return false;\n      }\n      if (isCategoricalColumn(col)) {\n        return mergeImpl(col, createImpositionDesc());\n      }\n      if (isNumberColumn(col)) {\n        return mergeImpl(col, evt.shiftKey ? createReduceDesc() : createStackDesc());\n      }\n      return false;\n    }, (e) => {\n      if (hasDnDType(e, ...categorical)) {\n        node.dataset.draginfo = 'Color by';\n        return;\n      }\n      if (hasDnDType(e, ...numberish)) {\n        node.dataset.draginfo = e.shiftKey ? 'Min/Max' : 'Sum';\n      }\n    });\n  }\n  node.dataset.draginfo = 'Group';\n  return dropAble(node, all, mergeWith(createNestedDesc()));\n}\n","import {debounce, clear, suffix} from '../../internal';\nimport {CompositeColumn} from '../../model';\nimport {createHeader, updateHeader} from '../header';\nimport {IRankingHeaderContext} from '../interfaces';\nimport ADialog, {IDialogContext} from './ADialog';\nimport {cssClass, engineCssClass} from '../../styles';\n\n/** @internal */\nexport default class CompositeChildrenDialog extends ADialog {\n\n  private readonly id: string;\n\n  constructor(private readonly column: CompositeColumn, dialog: IDialogContext, private ctx: IRankingHeaderContext) {\n    super(dialog);\n    this.id = `.dialog${Math.random().toString(36).slice(-8).substr(0, 3)}`;\n  }\n\n  destroy() {\n    this.column.on(suffix(this.id, CompositeColumn.EVENT_ADD_COLUMN, CompositeColumn.EVENT_REMOVE_COLUMN), null);\n    super.destroy();\n  }\n\n  protected build(node: HTMLElement) {\n    node.classList.add(cssClass('dialog-sub-nested'));\n    const createChildren = () => {\n      this.column.children.forEach((c) => {\n        const n = createHeader(c, this.ctx, {\n          mergeDropAble: false,\n          resizeable: false,\n          level: this.dialog.level + 1,\n          extraPrefix: 'sub'\n        });\n        n.className = cssClass('header');\n        updateHeader(n, c);\n        const summary = this.ctx.summaryRenderer(c, false);\n        const summaryNode = this.ctx.asElement(summary.template);\n        summaryNode.dataset.renderer = c.getSummaryRenderer();\n        summaryNode.classList.add(cssClass('summary'), cssClass('renderer'), cssClass('th-summary'));\n\n        const r = summary.update(summaryNode);\n        if (r) {\n          summaryNode.classList.add(engineCssClass('loading'));\n          r.then(() => {\n            summaryNode.classList.remove(engineCssClass('loading'));\n          });\n        }\n        n.appendChild(summaryNode);\n        node.appendChild(n);\n      });\n    };\n    createChildren();\n\n    this.column.on(suffix(this.id, CompositeColumn.EVENT_ADD_COLUMN, CompositeColumn.EVENT_REMOVE_COLUMN), debounce(() => {\n      if (!node.parentElement) {\n        // already closed\n        this.destroy();\n        return;\n      }\n      clear(node);\n      createChildren();\n    }));\n  }\n}\n","import {HierarchyColumn, ICategoryInternalNode, ICutOffNode, resolveInnerNodes} from '../../model';\nimport ADialog, {IDialogContext} from './ADialog';\n\n/** @internal */\nexport default class CutOffHierarchyDialog extends ADialog {\n\n  private readonly innerNodes: ICategoryInternalNode[];\n  private readonly innerNodePaths: string[];\n\n  private readonly before: ICutOffNode;\n\n\n  constructor(private readonly column: HierarchyColumn, dialog: IDialogContext, private readonly idPrefix: string) {\n    super(dialog, {\n      fullDialog: true\n    });\n\n    this.innerNodes = resolveInnerNodes(this.column.hierarchy);\n    this.innerNodePaths = this.innerNodes.map((n) => n.path);\n    this.before = column.getCutOff();\n  }\n\n  protected build(node: HTMLElement) {\n    node.insertAdjacentHTML('beforeend', `\n        <input type=\"text\" value=\"${this.before.node.label}\" required=\"required\" autofocus=\"autofocus\" list=\"ui${this.idPrefix}lineupHierarchyList\" placeholder=\"cut off node\">\n        <input type=\"number\" value=\"${isFinite(this.before.maxDepth) ? this.before.maxDepth : ''}\" placeholder=\"max depth (&infin;)\">\n        <datalist id=\"ui${this.idPrefix}lineupHierarchyList\">${this.innerNodes.map((node) => `<option value=\"${node.path}\">${node.label}</option>`)}</datalist>`);\n\n    //custom validation\n    const innerNodePaths = this.innerNodePaths;\n    this.findInput('input[type=\"text\"]').addEventListener('change', function (this: HTMLInputElement) {\n      const value = this.value;\n      if (innerNodePaths.indexOf(value) < 0) {\n        this.setCustomValidity('invalid node');\n      } else {\n        this.setCustomValidity('');\n      }\n    }, {\n      passive: true\n    });\n  }\n\n  protected reset() {\n    this.findInput('input[type=\"text\"]').value = this.before.node.label;\n    this.findInput('input[type=\"number\"]').value = isFinite(this.before.maxDepth) ? String(this.before.maxDepth) : '';\n    this.column.setCutOff(this.before);\n  }\n\n  protected submit() {\n    const newNode = this.findInput('input[type=\"text\"]').value;\n    const newNodeIndex = this.innerNodePaths.indexOf(newNode);\n    const node = this.innerNodes[newNodeIndex];\n    const maxDepthText = this.findInput('input[type=\"number\"]').value;\n    const maxDepth = maxDepthText === '' ? Infinity : parseInt(maxDepthText, 10);\n    this.column.setCutOff({node, maxDepth});\n    return true;\n  }\n}\n","import {filterMissingMarkup, findFilterMissing} from '../missing';\nimport ADialog, {IDialogContext} from './ADialog';\nimport {updateFilterState, uniqueId} from './utils';\nimport {DateColumn, IDateFilter} from '../../model';\nimport {isDummyDateFilter, noDateFilter, shiftFilterDateDay} from '../../model/internalDate';\nimport {timeFormat} from 'd3-time-format';\n\n/** @internal */\nexport default class DateFilterDialog extends ADialog {\n\n  constructor(private readonly column: DateColumn, dialog: IDialogContext) {\n    super(dialog);\n  }\n\n  private updateFilter(filter: IDateFilter | null) {\n    updateFilterState(this.attachment, this.column, filter != null && !isDummyDateFilter(filter));\n    this.column.setFilter(filter);\n  }\n\n  reset() {\n    this.forEach('input[type=date]', (n: HTMLInputElement) => n.value = '');\n    this.forEach('input[type=checkbox]', (n: HTMLInputElement) => n.checked = false);\n    this.updateFilter(null);\n  }\n\n  submit() {\n    const filterMissing = findFilterMissing(this.node).checked;\n    const from: Date | null = this.findInput('input[name=\"from\"]').valueAsDate;\n    const to: Date | null = this.findInput('input[name=\"to\"]').valueAsDate;\n    this.updateFilter({\n      filterMissing,\n      min: from == null ? -Infinity : shiftFilterDateDay(from.getTime(), 'min'),\n      max: to == null ? +Infinity : shiftFilterDateDay(to.getTime(), 'max')\n    });\n    return true;\n  }\n\n  protected build(node: HTMLElement) {\n    const act = this.column.getFilter() || noDateFilter();\n    const id = uniqueId(this.dialog.idPrefix);\n\n    const f = timeFormat('%Y-%m-%d');\n\n    node.insertAdjacentHTML('beforeend', `\n    <label for=\"${id}F\">From: </label>\n    <input type=\"date\" id=\"${id}F\" name=\"from\" placeholder=\"From...\" autofocus value=\"${isFinite(act.min) ? f(new Date(act.min)) : ''}\">\n    <label for=\"${id}T\">To: </label>\n    <input type=\"date\" id=\"${id}T\" name=\"to\" placeholder=\"To...\" value=\"${isFinite(act.max) ? f(new Date(act.max)) : ''}\">\n    ${filterMissingMarkup(act.filterMissing)}`);\n\n    const update = () => {\n      this.submit();\n    };\n\n    this.forEach('input', (n: HTMLInputElement) => n.onchange = update);\n  }\n}\n","import {LinkColumn, LinkMapColumn, LinksColumn} from '../../model';\nimport ADialog, {IDialogContext} from './ADialog';\n\n/** @internal */\nexport default class EditPatternDialog extends ADialog {\n\n  constructor(private readonly column: LinkColumn | LinksColumn | LinkMapColumn, dialog: IDialogContext, private readonly idPrefix: string) {\n    super(dialog, {\n      fullDialog: true\n    });\n  }\n\n  protected build(node: HTMLElement) {\n    const templates = this.column.patternTemplates;\n    node.insertAdjacentHTML('beforeend', `<strong>Edit Pattern (access via $\\{value}, $\\{item})</strong><input\n        type=\"text\"\n        size=\"30\"\n        value=\"${this.column.getPattern()}\"\n        required\n        autofocus\n        placeholder=\"pattern (access via $\\{value}, $\\{item})\"\n        ${templates.length > 0 ? `list=\"ui${this.idPrefix}lineupPatternList\"` : ''}\n      >`);\n    if (templates.length > 0) {\n      node.insertAdjacentHTML('beforeend', `<datalist id=\"ui${this.idPrefix}lineupPatternList\">${templates.map((t) => `<option value=\"${t}\">`)}</datalist>`);\n    }\n  }\n\n  protected reset() {\n    this.node.querySelector('input')!.value = '';\n    this.column.setPattern('');\n  }\n\n  protected submit() {\n    const newValue = this.node.querySelector('input')!.value;\n    this.column.setPattern(newValue);\n    return true;\n  }\n}\n","import {Column} from '../../model';\nimport ADialog, {IDialogContext} from './ADialog';\nimport {uniqueId, forEach} from './utils';\nimport {getToolbarDialogAddons} from '../toolbar';\nimport {IRankingHeaderContext, IToolbarDialogAddon} from '../interfaces';\nimport {cssClass} from '../../styles';\n\n/** @internal */\nexport default class GroupDialog extends ADialog {\n  private readonly addons: IToolbarDialogAddon[];\n\n  constructor(private readonly column: Column, dialog: IDialogContext, private readonly ctx: IRankingHeaderContext) {\n    super(dialog);\n    this.addons = getToolbarDialogAddons(this.column, 'group', ctx);\n  }\n\n  protected build(node: HTMLElement) {\n    for(const addon of this.addons) {\n      this.node.insertAdjacentHTML('beforeend', `<strong>${addon.title}</strong>`);\n      addon.append(this.column, this.node, this.dialog, this.ctx);\n    }\n\n    sortOrder(node, this.column, this.dialog.idPrefix);\n  }\n}\n\nfunction sortOrder(node: HTMLElement, column: Column, idPrefix: string) {\n  const ranking = column.findMyRanker()!;\n  const current = ranking.getGroupCriteria();\n  let order = current.indexOf(column);\n  let enabled = order >= 0;\n\n  if (order < 0) {\n    order = current.length;\n  }\n\n  const id = uniqueId(idPrefix);\n  node.insertAdjacentHTML('afterbegin', `\n        <strong>Group By</strong>\n        <label class=\"${cssClass('checkbox')}\"><input type=\"radio\" name=\"grouped\" value=\"true\" ${enabled ? 'checked' : ''} ><span>Enabled</span></label>\n        <label class=\"${cssClass('checkbox')}\"><input type=\"radio\" name=\"grouped\" value=\"false\" ${!enabled ? 'checked' : ''} ><span>Disabled</span></label>\n        <strong>Group Priority</strong>\n        <input type=\"number\" id=\"${id}P\" step=\"1\" min=\"1\" max=\"${current.length + 1}\" value=\"${order + 1}\">\n    `);\n\n  const updateDisabled = (disable: boolean) => {\n    forEach(node, 'input:not([name=grouped]), select, textarea', (d: HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement) => {\n      d.disabled = disable;\n    });\n  };\n  updateDisabled(!enabled);\n\n  const trigger = () => {\n    ranking.groupBy(column, !enabled ? -1 : order);\n    updateDisabled(!enabled);\n  };\n\n  forEach(node, 'input[name=grouped]', (n: HTMLInputElement) => {\n    n.addEventListener('change', () => {\n      enabled = n.value === 'true';\n      trigger();\n    }, {\n      passive: true\n    });\n  });\n  {\n    const priority = (<HTMLInputElement>node.querySelector(`#${id}P`));\n    priority.addEventListener('change', () => {\n      order = parseInt(priority.value, 10) - 1;\n      trigger();\n    }, {\n      passive: true\n    });\n  }\n}\n","import {round, similar, dragHandle, IDragHandleOptions} from '../../internal';\nimport ADialog, {IDialogContext} from './ADialog';\nimport {cssClass} from '../../styles';\n\nfunction clamp(v: number) {\n  return Math.max(Math.min(v, 100), 0);\n}\n\n/** @internal */\nexport interface IMappingAdapter {\n  destroyed(self: MappingLine): void;\n\n  updated(self: MappingLine): void;\n\n  domain(): number[];\n\n  normalizeRaw(v: number): number;\n\n  unnormalizeRaw(v: number): number;\n\n  dialog: IDialogContext;\n}\n\n/** @internal */\nexport default class MappingLineDialog extends ADialog {\n  constructor(private readonly line: {destroy(): void, domain: number, range: number, frozen: boolean, update(domain: number, range: number): void}, dialog: IDialogContext, private readonly adapter: IMappingAdapter) {\n    super(dialog);\n  }\n\n  build(node: HTMLElement) {\n    const domain = this.adapter.domain();\n    node.insertAdjacentHTML('beforeend', `\n        <strong>Input Domain Value (min ... max)</strong>\n        <input type=\"number\" value=\"${round(this.adapter.unnormalizeRaw(this.line.domain), 3)}\" ${this.line.frozen ? 'readonly' : ''} autofocus required min=\"${domain[0]}\" max=\"${domain[1]}\" step=\"any\">\n        <strong>Output Normalized Value (0 ... 1)</strong>\n        <input type=\"number\" value=\"${round(this.line.range / 100, 3)}\" required min=\"0\" max=\"1\" step=\"any\">\n        <button type=\"button\" ${this.line.frozen ? 'disabled' : ''} >Remove Mapping Line</button>\n      `);\n\n    this.forEach('input', (d: HTMLInputElement) => d.onchange = () => this.submit());\n    this.find('button').addEventListener('click', () => {\n      this.destroy();\n      this.line.destroy();\n    }, {\n      passive: true\n    });\n  }\n\n  protected submit() {\n    if (!this.node.checkValidity()) {\n      return false;\n    }\n    const domain = this.adapter.normalizeRaw(this.findInput('input[type=number]').valueAsNumber);\n    const range = this.findInput('input[type=number]:last-of-type').valueAsNumber * 100;\n    this.line.update(domain, range);\n    return true;\n  }\n}\n\n/** @internal */\nexport class MappingLine {\n  readonly node: SVGGElement;\n\n  constructor(g: SVGGElement, public domain: number, public range: number, private readonly adapter: IMappingAdapter) {\n    g.insertAdjacentHTML('beforeend', `<g class=\"${cssClass('dialog-mapper-mapping')}\" transform=\"translate(${domain},0)\">\n      <line x1=\"0\" x2=\"${range - domain}\" y2=\"60\"></line>\n      <line x1=\"0\" x2=\"${range - domain}\" y2=\"60\"></line>\n      <circle r=\"3\"></circle>\n      <circle cx=\"${range - domain}\" cy=\"60\" r=\"3\"></circle>\n      <title>Drag the anchor circle to change the mapping, shift click to edit</title>\n    </g>`);\n    this.node = <SVGGElement>g.lastElementChild!;\n\n    // freeze 0 and 100 domain = raw domain ones\n    this.node.classList.toggle(cssClass('frozen'), similar(0, domain) || similar(domain, 100));\n    {\n      let beforeDomain: number;\n      let beforeRange: number;\n      let shiftDomain: number;\n      let shiftRange: number;\n\n      const normalize = (x: number) => x * 100 / g.getBoundingClientRect().width;\n\n      const common: Partial<IDragHandleOptions> =  {\n        container: g.parentElement!,\n        filter: (evt) => evt.button === 0 && !evt.shiftKey,\n        onStart: (_, x) => {\n          beforeDomain = this.domain;\n          beforeRange = this.range;\n          const normalized = normalize(x);\n          shiftDomain = this.domain - normalized;\n          shiftRange = this.range - normalized;\n        } ,\n        onEnd: () => {\n          if (!similar(beforeDomain, this.domain) || !similar(beforeRange, this.range)) {\n            this.adapter.updated(this);\n          }\n        }\n      };\n\n      const line = this.node.querySelector<SVGLineElement>('line:first-of-type')!;\n      dragHandle(line, { // line\n        ...common,\n        onDrag: (_, x) => {\n          const normalized = normalize(x);\n          this.update(clamp(normalized + shiftDomain), clamp(normalized + shiftRange));\n        },\n      });\n\n      const domainCircle = this.node.querySelector<SVGLineElement>('circle:first-of-type')!;\n      dragHandle(domainCircle, {\n        ...common,\n        onDrag: (_, x) => {\n          const normalized = normalize(x);\n          this.update(clamp(normalized), this.range);\n        },\n      });\n      const rangeCircle = this.node.querySelector<SVGLineElement>('circle:last-of-type')!;\n      dragHandle(rangeCircle, {\n        ...common,\n        onDrag: (_, x) => {\n          const normalized = normalize(x);\n          this.update(this.domain, clamp(normalized));\n        },\n      });\n    }\n\n    this.node.onclick = (evt) => {\n      if (!evt.shiftKey) {\n        return;\n      }\n      const ctx = {\n        manager: this.adapter.dialog.manager,\n        level: this.adapter.dialog.level + 1,\n        attachment: <any>this.node,\n        idPrefix: this.adapter.dialog.idPrefix\n      };\n      const dialog = new MappingLineDialog(this, ctx, this.adapter);\n      dialog.open();\n    };\n  }\n\n  get frozen() {\n    return this.node.classList.contains(cssClass('frozen'));\n  }\n\n  destroy() {\n    this.node.remove();\n    this.adapter.destroyed(this);\n  }\n\n  update(domain: number, range: number) {\n    if (similar(domain, this.domain) && similar(range, this.range)) {\n      return;\n    }\n    if (this.frozen) {\n      domain = this.domain;\n    }\n    this.domain = domain;\n    this.range = range;\n    this.node.setAttribute('transform', `translate(${domain},0)`);\n    const shift = range - domain;\n    Array.from(this.node.querySelectorAll<SVGLineElement>('line')).forEach((d) => d.setAttribute('x2', String(shift)));\n    this.node.querySelector<SVGCircleElement>('circle[cx]')!.setAttribute('cx', String(shift));\n  }\n}\n","import {ISequence, round} from '../../internal';\nimport {IMapAbleColumn, IMappingFunction, isMissingValue, isMapAbleColumn} from '../../model';\nimport {IRankingHeaderContext} from '../interfaces';\nimport ADialog, {IDialogContext} from './ADialog';\nimport {IMappingAdapter, MappingLine} from './MappingLineDialog';\nimport {cssClass} from '../../styles';\nimport {ScaleMappingFunction, ScriptMappingFunction} from '../../model/MappingFunction';\n\n/** @internal */\nexport default class MappingDialog extends ADialog {\n\n  private scale: IMappingFunction;\n\n  private readonly mappingLines: MappingLine[] = [];\n  private rawDomain: [number, number];\n\n  private readonly data: Promise<ISequence<number>>;\n  private readonly idPrefix: string;\n\n  private readonly mappingAdapter: IMappingAdapter = {\n    destroyed: (self: MappingLine) => {\n      this.mappingLines.splice(this.mappingLines.indexOf(self), 1);\n    },\n    updated: () => this.updateLines(this.computeScale()),\n    domain: () => this.rawDomain,\n    normalizeRaw: this.normalizeRaw.bind(this),\n    unnormalizeRaw: this.unnormalizeRaw.bind(this),\n    dialog: this.dialog\n  };\n\n  constructor(private readonly column: IMapAbleColumn, dialog: IDialogContext, ctx: IRankingHeaderContext) {\n    super(dialog, {\n      fullDialog: true\n    });\n\n    this.idPrefix = `me${ctx.idPrefix}`;\n    this.scale = this.column.getMapping().clone();\n    const domain = this.scale.domain;\n    this.rawDomain = [domain[0], domain[domain.length - 1]];\n\n    this.data = Promise.resolve(ctx.provider.mappingSample(column));\n  }\n\n  private get scaleType() {\n    if ((this.scale instanceof ScriptMappingFunction)) {\n      return 'script';\n    }\n    if (this.scale instanceof ScaleMappingFunction) {\n      const base = this.scale.scaleType;\n      if (base !== 'linear') {\n        return base;\n      }\n      // check if invert or absolute\n      const r = this.scale.range;\n      if (r.length === 2 && r[0] === 1 && r[1] === 0) {\n        return 'linear_invert';\n      }\n      if (r.length === 3 && r[0] === 1 && r[1] === 0 && r[2] === 1) {\n        return 'linear_abs';\n      }\n      return 'linear';\n    }\n    return 'unknown';\n  }\n\n  build(node: HTMLElement) {\n    node.classList.add(cssClass('dialog-mapper'));\n\n    const r = this.column.findMyRanker();\n    const others = !r ? [] : r.flatColumns.filter((d) => isMapAbleColumn(d) && d !== this.column);\n\n    node.insertAdjacentHTML('beforeend', `\n        <div><label for=\"${this.idPrefix}mapping_type\"><strong>Normalization Scaling:</strong></label><select id=\"${this.idPrefix}mapping_type\" class=\"browser-default\">\n        <option value=\"linear\">Linear</option>\n        <option value=\"linear_invert\">Invert</option>\n        <option value=\"linear_abs\">Absolute</option>\n        <option value=\"log\">Log</option>\n        <option value=\"pow1.1\">Pow 1.1</option>\n        <option value=\"pow2\">Pow 2</option>\n        <option value=\"pow3\">Pow 3</option>\n        <option value=\"sqrt\">Sqrt</option>\n        <option value=\"script\">Custom Script</option>\n        <option value=\"unknown\">Unknown</option>\n        ${others.length > 0 ? `<optgroup label=\"Copy From\">${others.map((d) => `<option value=\"copy_${d.id}\">${d.label}</option>`).join('')}</optgroup>`: ''}\n      </select>\n      </div>\n        <div><strong>Domain (min - max): </strong><input id=\"${this.idPrefix}min\" required type=\"number\" value=\"${round(this.rawDomain[0], 3)}\" step=\"any\"> - <input id=\"${this.idPrefix}max\" required type=\"number\" value=\"${round(this.rawDomain[1], 3)}\" step=\"any\"></div>\n        <strong style=\"text-align: center\">Input Domain (min - max)</strong>\n        <svg class=\"${cssClass('dialog-mapper-details')}\" viewBox=\"0 0 106 66\">\n           <g transform=\"translate(3,3)\">\n              <line x2=\"100\"></line>\n              <rect y=\"-3\" width=\"100\" height=\"10\"></rect>\n              <line y1=\"60\" x2=\"100\" y2=\"60\"></line>\n              <rect y=\"36\" width=\"100\" height=\"10\"></rect>\n           </g>\n        </svg>\n        <strong style=\"text-align: center; margin-top: 0\">Output Normalized Domain (0 - 1)</strong>\n        <div class=\"${cssClass('dialog-mapper-script')}\">\n          <strong>Custom Normalization Script</strong>\n          <textarea class=\"${cssClass('textarea')}\"></textarea>\n        </div>`);\n\n    const g = <SVGGElement>node.querySelector(`.${cssClass('dialog-mapper-details')} > g`);\n\n    this.forEach(`.${cssClass('dialog-mapper-details')} rect`, (d: SVGRectElement) => d.onclick = (evt) => {\n      evt.preventDefault();\n      evt.stopPropagation();\n      const bb = d.getBoundingClientRect();\n      const x = round((evt.x - bb.left) * 100 / bb.width, 2);\n      const m = new MappingLine(g, x, x, this.mappingAdapter);\n      this.mappingLines.push(m);\n    });\n\n    {\n\n      const select = <HTMLSelectElement>this.find('select');\n      const textarea = <HTMLTextAreaElement>this.find('textarea');\n      select.onchange = (evt) => {\n        const select = <HTMLSelectElement>evt.currentTarget;\n        switch (select.value) {\n          case 'linear_invert':\n            this.scale = new ScaleMappingFunction(this.rawDomain.slice(), 'linear', [1, 0]);\n            break;\n          case 'linear_abs':\n            this.scale = new ScaleMappingFunction([this.rawDomain[0], (this.rawDomain[1] - this.rawDomain[0]) / 2, this.rawDomain[1]], 'linear', [1, 0, 1]);\n            break;\n          case 'script':\n            const s = new ScriptMappingFunction(this.rawDomain.slice());\n            this.scale = s;\n            textarea.value = s.code;\n            break;\n          case 'unknown':\n            // clone original again\n            this.scale = this.column.getOriginalMapping().clone();\n            break;\n          default:\n            if (select.value.startsWith('copy_')) {\n              this.copyMapping(select.value.slice('copy_'.length));\n              return;\n            }\n            this.scale = new ScaleMappingFunction(this.rawDomain.slice(), select.value, [0, 1]);\n            break;\n        }\n        this.createMappings();\n        node.dataset.scale = select.value;\n        this.updateLines();\n      };\n      const scaleType = node.dataset.scale = this.scaleType;\n      select.selectedIndex = Array.from(select.options).findIndex((d) => d.value === scaleType);\n\n      if (scaleType === 'script') {\n        textarea.value = (<ScriptMappingFunction>this.scale).code;\n      }\n      this.createMappings();\n    }\n\n    {\n      this.forEach(`.${cssClass('dialog-mapper-details')} input[type=number]`, (d: HTMLInputElement, i) => d.onchange = () => {\n        const v = d.valueAsNumber;\n        if (v === this.rawDomain[i]) {\n          d.setCustomValidity('');\n          return;\n        }\n        const other = this.rawDomain[1 - i];\n        if (isNaN(v) || (i === 0 && v >= other) || (i === 1 && v <= other)) {\n          d.setCustomValidity(`value has to be ${i === 0 ? '<= max' : '>= min'}`);\n          return;\n        }\n        d.setCustomValidity('');\n        this.rawDomain[i] = v;\n        this.scale.domain = this.rawDomain.slice();\n        this.applyMapping(this.scale);\n        this.updateLines();\n      });\n    }\n\n    this.data.then((values) => {\n      values.forEach((v) => {\n        if (!isMissingValue(v)) {\n          g.insertAdjacentHTML('afterbegin', `<line data-v=\"${v}\" x1=\"${round(this.normalizeRaw(v), 2)}\" x2=\"${round(this.scale.apply(v) * 100, 2)}\" y2=\"60\"></line>`);\n        }\n      });\n    });\n  }\n\n  private createMappings() {\n    this.mappingLines.splice(0, this.mappingLines.length).forEach((d) => d.destroy());\n    if (!(this.scale instanceof ScaleMappingFunction)) {\n      return;\n    }\n    const g = <SVGGElement>this.node.querySelector(`.${cssClass('dialog-mapper-details')} > g`);\n    const domain = this.scale.domain;\n    const range = this.scale.range;\n    for (let i = 0; i < domain.length; ++i) {\n      this.mappingLines.push(new MappingLine(g, this.normalizeRaw(domain[i]), range[i] * 100, this.mappingAdapter));\n    }\n  }\n\n  private update() {\n    const scaleType = this.node.dataset.scale = this.scaleType;\n    const select = <HTMLSelectElement>this.find('select');\n    select.selectedIndex = Array.from(select.options).findIndex((d) => d.value === scaleType);\n    if (scaleType === 'script') {\n      (<HTMLTextAreaElement>this.find('textarea')).value = (<ScriptMappingFunction>this.scale).code;\n    }\n    const domain = this.scale.domain;\n    this.forEach(`.${cssClass('dialog-mapper-details')} input[type=number]`, (d: HTMLInputElement, i) => {\n      d.value = String(domain[i]);\n    });\n  }\n\n  private updateLines(scale = this.scale) {\n    this.forEach(`.${cssClass('dialog-mapper-details')}  > g > line[x1]`, (d: SVGLineElement) => {\n      const v = parseFloat(d.getAttribute('data-v')!);\n      d.setAttribute('x1', round(this.normalizeRaw(v), 2).toString());\n      d.setAttribute('x2', round(scale.apply(v) * 100, 2).toString());\n    });\n  }\n\n  private applyMapping(newScale: IMappingFunction) {\n    this.column.setMapping(newScale);\n  }\n\n  protected reset() {\n    this.scale = this.column.getOriginalMapping();\n    this.rawDomain = <[number, number]>this.scale.domain.slice();\n    this.applyMapping(this.scale);\n    this.update();\n    this.updateLines();\n    this.createMappings();\n  }\n\n  private copyMapping(columnId: string) {\n    const r = this.column.findMyRanker();\n    if (!r) {\n      return;\n    }\n    const ref = <IMapAbleColumn>r.find(columnId)!;\n    this.scale = ref.getMapping().clone();\n    this.rawDomain = <[number, number]>this.scale.domain.slice();\n    this.applyMapping(this.scale);\n    this.update();\n    this.updateLines();\n  }\n\n  private normalizeRaw(d: number) {\n    const v = (d - this.rawDomain[0]) * 100 / (this.rawDomain[1] - this.rawDomain[0]);\n    return Math.max(Math.min(v, 100), 0); // clamp\n  }\n\n  private unnormalizeRaw(d: number) {\n    return (d) * (this.rawDomain[1] - this.rawDomain[0]) / 100 + this.rawDomain[0];\n  }\n\n  private computeScale() {\n    const type = this.scaleType;\n    if (type === 'script') {\n      return new ScriptMappingFunction(this.rawDomain.slice(), this.node.querySelector('textarea')!.value);\n    }\n    this.mappingLines.sort((a, b) => a.domain - b.domain);\n    const domain = this.mappingLines.map((d) => this.unnormalizeRaw(d.domain));\n    const range = this.mappingLines.map((d) => d.range / 100);\n    return new ScaleMappingFunction(domain, type, range);\n  }\n\n  protected submit() {\n    if (!this.node.checkValidity()) {\n      return false;\n    }\n    const scale = this.computeScale();\n    this.applyMapping(scale);\n    return true;\n  }\n}\n","import {IMapAbleColumn} from '../../model';\nimport {ISummaryRenderer} from '../../renderer';\nimport {cssClass, engineCssClass} from '../../styles';\nimport {IRankingHeaderContext} from '../interfaces';\nimport ADialog, {IDialogContext} from './ADialog';\n\n/** @internal */\nexport default class NumberFilterDialog extends ADialog {\n  private readonly summary: ISummaryRenderer;\n\n  constructor(private readonly column: IMapAbleColumn, dialog: IDialogContext, private readonly ctx: IRankingHeaderContext) {\n    super(dialog);\n\n    this.summary = ctx.summaryRenderer(this.column, true);\n  }\n\n  build(node: HTMLElement) {\n    node.classList.add(cssClass('dialog-mapper'));\n\n    // patch in lu-summary and renderer\n    const summary = this.ctx.asElement(this.summary.template);\n    summary.classList.add(cssClass('summary'), cssClass('renderer'));\n    summary.dataset.renderer = this.column.getSummaryRenderer();\n    summary.dataset.interactive = '';\n    node.appendChild(summary);\n\n    const summaryNode = <HTMLElement>this.node.getElementsByClassName(cssClass('summary'))[0]!;\n    const r = this.summary.update(summaryNode);\n    if (!r) {\n      return;\n    }\n    summaryNode.classList.add(engineCssClass('loading'));\n    r.then(() => {\n      summaryNode.classList.remove(engineCssClass('loading'));\n    });\n  }\n}\n","import {EAdvancedSortMethod, ReduceColumn} from '../../model';\nimport ADialog, {IDialogContext} from './ADialog';\nimport {sortMethods} from './utils';\n\n/** @internal */\nexport default class ReduceDialog extends ADialog {\n  constructor(private readonly column: ReduceColumn, dialog: IDialogContext) {\n    super(dialog);\n  }\n\n  protected build(node: HTMLElement) {\n    const wrapper = {\n      getSortMethod: () => this.column.getReduce(),\n      setSortMethod: (s: EAdvancedSortMethod) => this.column.setReduce(s)\n    };\n    sortMethods(node, wrapper, Object.keys(EAdvancedSortMethod));\n  }\n}\n","import {Column, IColumnMetaData} from '../../model';\nimport ADialog, {IDialogContext} from './ADialog';\nimport {cssClass} from '../../styles';\n\n/** @internal */\nexport default class RenameDialog extends ADialog {\n\n  private readonly before: IColumnMetaData;\n\n  constructor(private readonly column: Column, dialog: IDialogContext) {\n    super(dialog, {\n      fullDialog: true\n    });\n    this.before = column.getMetaData();\n  }\n\n  protected build(node: HTMLElement) {\n    node.classList.add(cssClass('dialog-rename'));\n    node.insertAdjacentHTML('beforeend', `\n      <input type=\"text\" value=\"${this.column.label}\" required autofocus placeholder=\"name\">\n      <textarea class=\"${cssClass('textarea')}\" rows=\"5\" placeholder=\"description\">${this.column.description}</textarea>`);\n  }\n\n  protected reset() {\n    this.findInput('input[type=\"text\"]').value = this.before.label;\n    this.node.querySelector('textarea')!.value = this.before.description;\n    this.column.setMetaData(this.before);\n  }\n\n  protected submit() {\n    const newValue = this.findInput('input[type=\"text\"]').value;\n    const newDescription = this.node.querySelector('textarea')!.value;\n    this.column.setMetaData({label: newValue, description: newDescription});\n    return true;\n  }\n}\n","import {ScriptColumn} from '../../model';\nimport ADialog, {IDialogContext} from './ADialog';\nimport {cssClass} from '../../styles';\n\n/** @internal */\nexport default class ScriptEditDialog extends ADialog {\n  private readonly before: string;\n\n  constructor(private readonly column: ScriptColumn, dialog: IDialogContext) {\n    super(dialog, {\n      fullDialog: true\n    });\n    this.before = column.getScript();\n  }\n\n  protected build(node: HTMLElement) {\n    node.insertAdjacentHTML('beforeend', `<textarea class=\"${cssClass('textarea')}\" autofocus=\"true\" rows=\"5\" autofocus=\"autofocus\" style=\"width: 95%;\">${this.column.getScript()}</textarea>`);\n  }\n\n  protected reset() {\n    this.node.querySelector('textarea')!.value = this.before;\n    this.column.setScript(this.before);\n  }\n\n  protected submit() {\n    this.column.setScript(this.node.querySelector('textarea')!.value);\n    return true;\n  }\n}\n","import {Column} from '../../model';\nimport {IDataProvider} from '../../provider';\nimport ADialog, { IDialogContext} from './ADialog';\nimport {cssClass} from '../../styles';\n\n/** @internal */\nexport default class SearchDialog extends ADialog {\n\n  constructor(private readonly column: Column, dialog: IDialogContext, private readonly provider: IDataProvider) {\n    super(dialog);\n  }\n\n  protected build(node: HTMLElement) {\n    node.insertAdjacentHTML('beforeend', `<input type=\"text\" size=\"20\" value=\"\" required autofocus placeholder=\"search... (>= 3 chars)\"><label class=\"${cssClass('checkbox')}\"><input type=\"checkbox\"><span>Use regular expressions</span></label>`);\n\n    const input = <HTMLInputElement>node.querySelector('input[type=\"text\"]')!;\n    const checkbox = <HTMLInputElement>node.querySelector('input[type=\"checkbox\"]')!;\n    const update = () => {\n      let search: any = input.value;\n      if (search.length < 3) {\n        input.setCustomValidity('at least 3 characters');\n        return;\n      }\n      input.setCustomValidity('');\n      const isRegex = checkbox.checked;\n      if (isRegex) {\n        search = new RegExp(search);\n      }\n      this.provider.searchAndJump(search, this.column);\n    };\n    input.addEventListener('input', update, {\n      passive: true\n    });\n    checkbox.addEventListener('change', update, {\n      passive: true\n    });\n  }\n}\n","import ADialog, {IDialogContext} from './ADialog';\nimport {cssClass} from '../../styles';\nimport {IDataProvider} from '../../provider';\n\n/** @internal */\nexport default class ShowTopNDialog extends ADialog {\n\n  constructor(private readonly provider: IDataProvider, dialog: IDialogContext) {\n    super(dialog);\n  }\n\n  protected build(node: HTMLElement) {\n    node.classList.add(cssClass('dialog-rename'));\n    node.insertAdjacentHTML('beforeend', `\n      <input type=\"number\" min=\"0\" step=\"1\" value=\"${this.provider.getShowTopN()}\">`);\n\n    this.findInput('input').onchange = (evt) => {\n      const value = (<HTMLInputElement>evt.currentTarget).valueAsNumber;\n      this.provider.setShowTopN(value);\n    };\n  }\n}\n","import {Column} from '../../model';\nimport ADialog, {IDialogContext} from './ADialog';\nimport {uniqueId, forEach} from './utils';\nimport {getToolbarDialogAddons} from '../toolbar';\nimport {IRankingHeaderContext, IToolbarDialogAddon} from '../interfaces';\nimport {cssClass} from '../../styles';\n\n/** @internal */\nexport default class SortDialog extends ADialog {\n  private readonly addons: IToolbarDialogAddon[];\n\n  constructor(private readonly column: Column, private readonly groupSortBy: boolean, dialog: IDialogContext, private readonly ctx: IRankingHeaderContext) {\n    super(dialog);\n    this.addons = getToolbarDialogAddons(this.column, groupSortBy ? 'sortGroup' : 'sort', ctx);\n  }\n\n  protected build(node: HTMLElement) {\n    for(const addon of this.addons) {\n      this.node.insertAdjacentHTML('beforeend', `<strong>${addon.title}</strong>`);\n      addon.append(this.column, this.node, this.dialog, this.ctx);\n    }\n\n    sortOrder(node, this.column, this.dialog.idPrefix, this.groupSortBy);\n  }\n}\n\nfunction sortOrder(node: HTMLElement, column: Column, idPrefix: string, groupSortBy: boolean = false) {\n  const ranking = column.findMyRanker()!;\n  const current = groupSortBy  ? ranking.getGroupSortCriteria() : ranking.getSortCriteria();\n  const order = Object.assign({}, groupSortBy ? column.isGroupSortedByMe() : column.isSortedByMe());\n\n  if (order.priority === undefined) {\n    order.priority = current.length;\n  }\n\n  const id = uniqueId(idPrefix);\n  node.insertAdjacentHTML('afterbegin', `\n        <strong>Sort Order</strong>\n        <label class=\"${cssClass('checkbox')}\"><input type=\"radio\" name=\"sortorder\" value=\"asc\"  ${(order.asc === 'asc') ? 'checked' : ''} ><span>Ascending</span></label>\n        <label class=\"${cssClass('checkbox')}\"><input type=\"radio\" name=\"sortorder\" value=\"desc\"  ${(order.asc === 'desc') ? 'checked' : ''} ><span>Decending</span></label>\n        <label class=\"${cssClass('checkbox')}\"><input type=\"radio\" name=\"sortorder\" value=\"none\"  ${(order.asc === undefined) ? 'checked' : ''} ><span>Unsorted</span></label>\n        <strong>Sort Priority</strong>\n        <input type=\"number\" id=\"${id}P\" step=\"1\" min=\"1\" max=\"${current.length + 1}\" value=\"${order.priority + 1}\">\n    `);\n\n  const updateDisabled = (disable: boolean) => {\n    forEach(node, 'input:not([name=sortorder]), select, textarea', (d: HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement) => {\n      d.disabled = disable;\n    });\n  };\n  updateDisabled(order.asc === undefined);\n\n  const trigger = () => {\n    if (groupSortBy) {\n      ranking.groupSortBy(column, order.asc === 'asc', order.asc === undefined ? -1 : order.priority);\n    } else {\n      ranking.sortBy(column, order.asc === 'asc', order.asc === undefined ? -1 : order.priority);\n    }\n\n    updateDisabled(order.asc === undefined);\n  };\n\n  forEach(node, 'input[name=sortorder]', (n: HTMLInputElement) => {\n    n.addEventListener('change', () => {\n      order.asc = n.value === 'none' ? undefined : <'asc'|'desc'>n.value;\n      trigger();\n    }, {\n      passive: true\n    });\n  });\n  {\n    const priority = (<HTMLInputElement>node.querySelector(`#${id}P`));\n    priority.addEventListener('change', () => {\n      order.priority = parseInt(priority.value, 10) - 1;\n      trigger();\n    }, {\n      passive: true\n    });\n  }\n}\n","import {StringColumn} from '../../model';\nimport {filterMissingMarkup, findFilterMissing} from '../missing';\nimport ADialog, {IDialogContext} from './ADialog';\nimport {updateFilterState} from './utils';\nimport {cssClass} from '../../styles';\n\n\n/** @internal */\nexport default class StringFilterDialog extends ADialog {\n\n  constructor(private readonly column: StringColumn, dialog: IDialogContext) {\n    super(dialog, {\n      fullDialog: true\n    });\n  }\n\n  private updateFilter(filter: string | RegExp | null) {\n    updateFilterState(this.attachment, this.column, filter != null && filter !== '');\n    this.column.setFilter(filter);\n  }\n\n  reset() {\n    this.findInput('input[type=\"text\"]').value = '';\n    this.forEach('input[type=checkbox]', (n: HTMLInputElement) => n.checked = false);\n    this.updateFilter(null);\n  }\n\n  submit() {\n    const filterMissing = findFilterMissing(this.node).checked;\n    if (filterMissing) {\n      this.updateFilter(StringColumn.FILTER_MISSING);\n      return true;\n    }\n    const input = this.findInput('input[type=\"text\"]').value;\n    const isRegex = this.findInput('input[type=\"checkbox\"]').checked;\n    this.updateFilter(isRegex ? new RegExp(input) : input);\n    return true;\n  }\n\n  protected build(node: HTMLElement) {\n    let bak = this.column.getFilter() || '';\n    const bakMissing = bak === StringColumn.FILTER_MISSING;\n    if (bakMissing) {\n      bak = '';\n    }\n    node.insertAdjacentHTML('beforeend', `<input type=\"text\" placeholder=\"Filter ${this.column.desc.label}...\" autofocus value=\"${(bak instanceof RegExp) ? bak.source : bak}\" style=\"width: 100%\">\n    <label class=\"${cssClass('checkbox')}\"><input type=\"checkbox\" ${(bak instanceof RegExp) ? 'checked=\"checked\"' : ''}><span>Use regular expressions</span></label>\n    ${filterMissingMarkup(bakMissing)}`);\n\n    const filterMissing = findFilterMissing(node);\n    const input = <HTMLInputElement>node.querySelector('input[type=\"text\"]');\n    const isRegex = <HTMLInputElement>node.querySelector('input[type=\"checkbox\"]');\n\n    const update = () => {\n      input.disabled = filterMissing.checked;\n      isRegex.disabled = filterMissing.checked;\n\n      if (filterMissing.checked) {\n        this.updateFilter(StringColumn.FILTER_MISSING);\n        return;\n      }\n      const valid = input.value.trim();\n      filterMissing.disabled = valid.length > 0;\n      if (valid.length <= 0) {\n        this.updateFilter(null);\n        return;\n      }\n      this.updateFilter(isRegex.checked ? new RegExp(input.value, 'gm') : input.value);\n    };\n\n    filterMissing.onchange = update;\n    input.onchange = update;\n    isRegex.onchange = update;\n  }\n}\n","import {round} from '../../internal';\nimport {StackColumn} from '../../model';\nimport ADialog, {IDialogContext} from './ADialog';\nimport {forEach, colorOf} from './utils';\nimport {cssClass} from '../../styles';\n\n/** @internal */\nexport default class WeightsEditDialog extends ADialog {\n\n  private readonly weights: number[];\n\n  constructor(private readonly column: StackColumn, dialog: IDialogContext) {\n    super(dialog, {\n      fullDialog: true\n    });\n\n    this.weights = this.column.getWeights();\n  }\n\n  protected reset() {\n    const weight = 100 / this.weights.length;\n    forEach(this.node, 'input[type=number]', (n: HTMLInputElement) => {\n      const v = round(weight, 2);\n      n.value = String(v);\n      (<HTMLElement>n.nextElementSibling!.firstElementChild!).style.width = `${v}%`;\n    });\n    this.column.setWeights(this.weights.slice().fill(weight));\n  }\n\n  protected build(node: HTMLElement) {\n\n    const children = this.column.children;\n    node.insertAdjacentHTML('beforeend', `<div class=\"${cssClass('dialog-table')}\">\n        ${this.weights.map((weight, i) => `<div class=\"${cssClass('dialog-weights-table-entry')}\">\n          <input type=\"number\" value=\"${round(weight * 100, 2)}\" min=\"0\" max=\"100\" step=\"any\" required>\n          <span class=\"${cssClass('dialog-filter-color-bar')}\">\n            <span style=\"background-color: ${colorOf(children[i])}; width: ${round(weight * 100, 2)}%\"></span>\n          </span>\n          ${children[i].label}\n        </div>`).join('')}\n    </div>`);\n    const inputs = Array.from(this.node.querySelectorAll<HTMLInputElement>('input[type=number]'));\n    inputs.forEach((d, i) => {\n      d.oninput = () => {\n        const weight = d.valueAsNumber;\n        if (weight <= 0) {\n          d.setCustomValidity('weight cannot be zero');\n        } else {\n          d.setCustomValidity('');\n        }\n        this.updateBar(d);\n\n        if (inputs.length !== 2) {\n          return;\n        }\n\n        // corner case auto decrease the other\n        const rest = 100 - weight;\n\n        if (rest <= 0) {\n          d.setCustomValidity('weight cannot be 100 in case of two elements');\n        } else {\n          d.setCustomValidity('');\n        }\n\n        const other = inputs[1 - i]!;\n        other.value = round(rest, 2).toString();\n        this.updateBar(other);\n      };\n    });\n  }\n\n  private updateBar(input: HTMLInputElement) {\n    (<HTMLElement>input.nextElementSibling!.firstElementChild!).style.width = `${input.value}%`;\n  }\n\n  private distributeWeights() {\n    const inputs = Array.from(this.node.querySelectorAll<HTMLInputElement>('input[type=number]')).map((d) => ({input: d, weight: d.value ? d.valueAsNumber : NaN}));\n    const hasMissing = inputs.some((d) => isNaN(d.weight));\n    if (hasMissing) {\n      // compute missing ones\n      const missingIndices = inputs.filter((d) => isNaN(d.weight));\n      const correct = inputs.filter((d) => !isNaN(d.weight));\n      const sum = correct.reduce((a, b) => a + b.weight, 0);\n\n      if (sum < 100) {\n        // compute rest\n        const rest = (100 - sum) / missingIndices.length;\n        for (const input of missingIndices) {\n          input.input.value = round(rest, 2).toString();\n          this.updateBar(input.input);\n        }\n        return;\n      }\n      // already above 100, set missing to 0 and do a regular normalization (user has to deal with it)\n      for (const input of missingIndices) {\n        input.input.value = '0';\n        this.updateBar(input.input);\n      }\n    }\n\n    const weights = inputs.map((d) => d.weight);\n    if (validWeights(weights)) {\n      return; // nothing to do\n    }\n\n    // pure distribute the sum\n    const sum = weights.reduce((a, b) => a + b, 0);\n    for (const input of inputs) {\n      input.input.value = round(input.weight * 100 / sum, 2).toString();\n      this.updateBar(input.input);\n    }\n  }\n\n  protected appendDialogButtons() {\n    super.appendDialogButtons();\n    const buttons = this.node.querySelector<HTMLElement>(`.${cssClass('dialog-buttons')}`)!;\n    buttons.insertAdjacentHTML('beforeend', `<button class=\"${cssClass('dialog-button')} ${cssClass('dialog-weights-distribute-button')}\" type=\"button\" title=\"distribute weights\"></button>`);\n\n    const last = <HTMLElement>buttons.lastElementChild!;\n    last.onclick = (evt) => {\n      evt.preventDefault();\n      evt.stopPropagation();\n      this.distributeWeights();\n    };\n  }\n\n  submit() {\n    const inputs = Array.from(this.node.querySelectorAll<HTMLInputElement>('input[type=number]')).map((d) => ({input: d, weight: d.valueAsNumber}));\n    let invalid = false;\n    for (const input of inputs) {\n      if (input.weight <= 0) {\n        input.input.setCustomValidity('weight cannot be zero');\n        invalid = true;\n      } else {\n        input.input.setCustomValidity('');\n      }\n    }\n    const weights = inputs.map((d) => d.weight);\n    if (!invalid && !validWeights(weights)) {\n      inputs[inputs.length - 1].input.setCustomValidity('sum of weights has to be 100, change weights or use the redistribute button to fix');\n      invalid = true;\n    }\n    if (invalid) {\n      if (typeof (<any>this.node).reportValidity === 'function') {\n        (<any>this.node).reportValidity();\n      }\n      return false;\n    }\n\n    this.column.setWeights(weights.map((d) => d / 100));\n    return true;\n  }\n}\n\nfunction validWeights(weights: number[]) {\n  return Math.abs(weights.reduce((a, b) => a + b, 0) - 100) < 3;\n}\n","import {getAllToolbarActions, getAllToolbarDialogAddons} from '../model/internal';\nimport {Column, EDateSort, EAdvancedSortMethod, ESortMethod, isSupportType, CompositeColumn, IMultiLevelColumn, isSortingAscByDefault} from '../model';\nimport {cssClass} from '../styles';\nimport ADialog, {IDialogContext, dialogContext} from './dialogs/ADialog';\nimport BooleanFilterDialog from './dialogs/BooleanFilterDialog';\nimport CategoricalColorMappingDialog from './dialogs/CategoricalColorMappingDialog';\nimport CategoricalFilterDialog from './dialogs/CategoricalFilterDialog';\nimport CategoricalMappingFilterDialog from './dialogs/CategoricalMappingFilterDialog';\nimport ChangeRendererDialog from './dialogs/ChangeRendererDialog';\nimport ColorMappingDialog from './dialogs/ColorMappingDialog';\nimport CompositeChildrenDialog from './dialogs/CompositeChildrenDialog';\nimport CutOffHierarchyDialog from './dialogs/CutOffHierarchyDialog';\nimport DateFilterDialog from './dialogs/DateFilterDialog';\nimport EditPatternDialog from './dialogs/EditPatternDialog';\nimport appendDate from './dialogs/groupDate';\nimport GroupDialog from './dialogs/GroupDialog';\nimport appendNumber from './dialogs/groupNumber';\nimport appendString from './dialogs/groupString';\nimport MappingDialog from './dialogs/MappingDialog';\nimport NumberFilterDialog from './dialogs/NumberFilterDialog';\nimport ReduceDialog from './dialogs/ReduceDialog';\nimport RenameDialog from './dialogs/RenameDialog';\nimport ScriptEditDialog from './dialogs/ScriptEditDialog';\nimport SearchDialog from './dialogs/SearchDialog';\nimport ShowTopNDialog from './dialogs/ShowTopNDialog';\nimport SortDialog from './dialogs/SortDialog';\nimport StringFilterDialog from './dialogs/StringFilterDialog';\nimport {sortMethods} from './dialogs/utils';\nimport WeightsEditDialog from './dialogs/WeightsEditDialog';\nimport {IRankingHeaderContext, IOnClickHandler, IUIOptions, IToolbarAction, IToolbarDialogAddon} from './interfaces';\n\ninterface IDialogClass {\n  new(col: any, dialog: IDialogContext, ...args: any[]): ADialog;\n}\n\nfunction ui(title: string, onClick: IOnClickHandler, options: Partial<IUIOptions> = {}): IToolbarAction {\n  return {title, onClick, options};\n}\n\nfunction uiDialog(title: string, dialogClass: IDialogClass, extraArgs: ((ctx: IRankingHeaderContext) => any[]) = () => [], options: Partial<IUIOptions> = {}): IToolbarAction {\n  return {\n    title,\n    onClick: (col, evt, ctx, level) => {\n      const dialog = new dialogClass(col, dialogContext(ctx, level, evt), ...extraArgs(ctx));\n      dialog.open();\n    }, options\n  };\n}\n\nfunction uiSortMethod(methods: string[]): IToolbarDialogAddon {\n  methods = methods.sort((a, b) => a.toLowerCase().localeCompare(b.toLowerCase()));\n  return {\n    title: 'Sort By',\n    order: 2,\n    append(col, node) {\n      sortMethods(node, <any>col, methods);\n    }\n  };\n}\n\nconst sort: IToolbarAction = {\n  title: 'Sort', // basic ranking\n  onClick: (col, evt, ctx, level) => {\n    ctx.dialogManager.removeAboveLevel(level);\n    if (!evt.ctrlKey) {\n      col.toggleMySorting();\n      return;\n    }\n    const ranking = col.findMyRanker()!;\n    const current = ranking.getSortCriteria();\n    const order = col.isSortedByMe();\n\n    const isAscByDefault = isSortingAscByDefault(col);\n\n    if (order.priority === undefined) {\n      ranking.sortBy(col, isAscByDefault, current.length);\n      return;\n    }\n    let next: string | undefined = undefined;\n    if (isAscByDefault) {\n      next = order.asc ? 'desc' : undefined;\n    } else {\n      next = !order.asc ? 'asc' : undefined;\n    }\n    ranking.sortBy(col, next === 'asc', next ? order.priority : -1);\n  },\n  options: {\n    shortcut: 'only',\n    order: 1,\n    featureCategory: 'ranking',\n    featureLevel: 'basic'\n  }\n};\n\nconst sortBy: IToolbarAction = {\n  title: 'Sort By &hellip;', // advanced ranking\n  onClick: (col, evt, ctx, level) => {\n    const dialog = new SortDialog(col, false, dialogContext(ctx, level, evt), ctx);\n    dialog.open();\n  },\n  options: {\n    shortcut: false,\n    order: 1,\n    featureCategory: 'ranking',\n    featureLevel: 'advanced'\n  }\n};\n\nconst sortGroupBy: IToolbarAction = {\n  title: 'Sort Groups By &hellip;', // advanced ranking\n  onClick: (col, evt, ctx, level) => {\n    const dialog = new SortDialog(col, true, dialogContext(ctx, level, evt), ctx);\n    dialog.open();\n  },\n  options: {\n    shortcut: false,\n    order: 3,\n    featureCategory: 'ranking',\n    featureLevel: 'advanced'\n  }\n};\n\nconst rename: IToolbarAction = {\n  title: 'Rename &hellip;', // advanced\n  onClick: (col, evt, ctx, level) => {\n    const dialog = new RenameDialog(col, dialogContext(ctx, level, evt));\n    dialog.open();\n  },\n  options: {\n    order: 4,\n    featureCategory: 'ui',\n    featureLevel: 'advanced'\n  }\n};\n\nconst vis: IToolbarAction = {\n  title: 'Visualization &hellip;', // advanced view\n  onClick: (col, evt, ctx, level) => {\n    const dialog = new ChangeRendererDialog(col, dialogContext(ctx, level, evt), ctx);\n    dialog.open();\n  },\n  options: {\n    featureCategory: 'ui',\n    featureLevel: 'advanced'\n  }\n};\n\nconst clone: IToolbarAction = {\n  title: 'Clone', // advanced model\n  onClick: (col, _evt, ctx) => {\n    ctx.dialogManager.removeAll(); // since the column will be removed\n    ctx.provider.takeSnapshot(col);\n  },\n  options: {\n    order: 80,\n    featureCategory: 'model',\n    featureLevel: 'advanced'\n  }\n};\n\nconst remove: IToolbarAction = {\n  title: 'Remove', // advanced model\n  onClick: (col, _evt, ctx) => {\n    ctx.dialogManager.removeAll(); // since the column will be removed\n    const ranking = col.findMyRanker()!;\n    const last = ranking.children.every((d) => isSupportType(d) || d.fixed || d === col);\n    if (!last) {\n      col.removeMe();\n      return;\n    }\n    ctx.provider.removeRanking(ranking);\n    ctx.provider.ensureOneRanking();\n  },\n  options: {\n    order: 90,\n    featureCategory: 'model',\n    featureLevel: 'advanced'\n  }\n};\n\n// basic ranking\nconst group = ui('Group', (col, evt, ctx, level) => {\n  ctx.dialogManager.removeAboveLevel(level);\n\n  if (!evt.ctrlKey) {\n    col.groupByMe();\n    return;\n  }\n  const ranking = col.findMyRanker()!;\n  const current = ranking.getGroupCriteria();\n  const order = current.indexOf(col);\n\n  ranking.groupBy(col, order >= 0 ? -1 : current.length);\n}, {shortcut: 'only', order: 2, featureCategory: 'ranking', featureLevel: 'basic'});\n\n// advanced ranking\nconst groupBy = ui('Group By &hellip;', (col, evt, ctx, level) => {\n  const dialog = new GroupDialog(col, dialogContext(ctx, level, evt), ctx);\n  dialog.open();\n}, {shortcut: false, order: 2, featureCategory: 'ranking', featureLevel: 'advanced'});\n\nfunction toggleCompressExpand(col: Column, evt: MouseEvent, ctx: IRankingHeaderContext, level: number) {\n  ctx.dialogManager.removeAboveLevel(level);\n  const mcol = <IMultiLevelColumn>col;\n  mcol.setCollapsed(!mcol.getCollapsed());\n\n  const collapsed = mcol.getCollapsed();\n  const i = <HTMLElement>evt.currentTarget;\n  i.title = collapsed ? 'Expand' : 'Compress';\n  i.classList.toggle(cssClass('action-compress'), !collapsed);\n  i.classList.toggle(cssClass('action-expand'), collapsed);\n  const inner = i.getElementsByTagName('span')[0]!;\n  if (inner) {\n    inner.textContent = i.title;\n  }\n}\n\nconst compress = {\n  title: 'Compress',\n  enabled: (col: IMultiLevelColumn) => !col.getCollapsed(),\n  onClick: toggleCompressExpand,\n  options: {featureCategory: 'model', featureLevel: 'advanced'}\n};\n\nconst expand = {\n  title: 'Expand',\n  enabled: (col: IMultiLevelColumn) => col.getCollapsed(),\n  onClick: toggleCompressExpand,\n  options: {featureCategory: 'model', featureLevel: 'advanced'}\n};\n\nconst setShowTopN: IToolbarAction = {\n  title: 'Change Show Top N',\n  onClick: (_col, evt, ctx, level) => {\n    const dialog = new ShowTopNDialog(ctx.provider, dialogContext(ctx, level, evt));\n    dialog.open();\n  },\n  options: {\n    featureCategory: 'ui',\n    featureLevel: 'advanced'\n  }\n};\n\nconst toolbarAddons: {[key: string]: IToolbarDialogAddon} = {\n  sortNumber: uiSortMethod(Object.keys(EAdvancedSortMethod)),\n  sortNumbers: uiSortMethod(Object.keys(EAdvancedSortMethod)),\n  sortBoxPlot: uiSortMethod(Object.keys(ESortMethod)),\n  sortDates: uiSortMethod(Object.keys(EDateSort)),\n  sortGroups: uiSortMethod(['count', 'name']),\n  groupNumber: <IToolbarDialogAddon>{\n    title: 'Split',\n    order: 2,\n    append: appendNumber\n  },\n  groupString: <IToolbarDialogAddon>{\n    title: 'Groups',\n    order: 2,\n    append: appendString\n  },\n  groupDate: <IToolbarDialogAddon>{\n    title: 'Granularity',\n    order: 2,\n    append: appendDate\n  },\n};\n\nexport const toolbarActions: {[key: string]: IToolbarAction | IToolbarDialogAddon} = Object.assign({\n  group,\n  groupBy,\n  compress,\n  expand,\n  sort,\n  sortBy,\n  sortGroupBy,\n  clone,\n  remove,\n  rename,\n  setShowTopN,\n  search: uiDialog('Search &hellip;', SearchDialog, (ctx) => [ctx.provider], {shortcut: true, order: 3, featureCategory: 'ranking', featureLevel: 'basic'}),\n  filterNumber: uiDialog('Filter &hellip;', NumberFilterDialog, (ctx) => [ctx], {shortcut: true, featureCategory: 'ranking', featureLevel: 'basic'}),\n  filterDate: uiDialog('Filter &hellip;', DateFilterDialog, (ctx) => [ctx], {shortcut: true, featureCategory: 'ranking', featureLevel: 'basic'}),\n  filterString: uiDialog('Filter &hellip;', StringFilterDialog, () => [], {shortcut: true, featureCategory: 'ranking', featureLevel: 'basic'}),\n  filterCategorical: uiDialog('Filter &hellip;', CategoricalFilterDialog, () => [], {shortcut: true, featureCategory: 'ranking', featureLevel: 'basic'}),\n  filterOrdinal: uiDialog('Filter &hellip;', CategoricalMappingFilterDialog, () => [], {shortcut: true, featureCategory: 'ranking', featureLevel: 'basic'}),\n  filterBoolean: uiDialog('Filter &hellip;', BooleanFilterDialog, () => [], {shortcut: true, featureCategory: 'ranking', featureLevel: 'basic'}),\n  colorMapped: uiDialog('Color Mapping &hellip;', ColorMappingDialog, () => [], {shortcut: false, featureCategory: 'ui', featureLevel: 'advanced'}),\n  colorMappedCategorical: uiDialog('Color Mapping &hellip;', CategoricalColorMappingDialog, () => [], {shortcut: false, featureCategory: 'ui', featureLevel: 'advanced'}),\n  script: uiDialog('Edit Combine Script &hellip;', ScriptEditDialog, () => [], {shortcut: true, featureCategory: 'model', featureLevel: 'advanced'}),\n  reduce: uiDialog('Reduce by &hellip;', ReduceDialog, () => [], {featureCategory: 'model', featureLevel: 'advanced'}),\n  cutoff: uiDialog('Set Cut Off &hellip;', CutOffHierarchyDialog, (ctx) => [ctx.idPrefix], {featureCategory: 'model', featureLevel: 'advanced'}),\n  editMapping: uiDialog('Data Mapping &hellip;', MappingDialog, (ctx) => [ctx], {featureCategory: 'model', featureLevel: 'advanced'}),\n  editPattern: uiDialog('Edit Pattern &hellip;', EditPatternDialog, (ctx) => [ctx.idPrefix], {featureCategory: 'model', featureLevel: 'advanced'}),\n  editWeights: uiDialog('Edit Weights &hellip;', WeightsEditDialog, () => [], {shortcut: true, featureCategory: 'model', featureLevel: 'advanced'}),\n  compositeContained: uiDialog('Contained Columns &hellip;', CompositeChildrenDialog, (ctx) => [ctx], {featureCategory: 'model', featureLevel: 'advanced'}),\n  splitCombined: ui('Split Combined Column', (col, _evt, ctx, level) => {\n    ctx.dialogManager.removeAboveLevel(level - 1); // close itself\n    // split the combined column into its children\n    (<CompositeColumn>col).children.reverse().forEach((c) => col.insertAfterMe(c));\n    col.removeMe();\n  }, {featureCategory: 'model', featureLevel: 'advanced'}),\n  invertSelection: ui('Invert Selection', (col, _evt, ctx, level) => {\n    ctx.dialogManager.removeAboveLevel(level - 1); // close itself\n    const s = ctx.provider.getSelection();\n    const order = Array.from(col.findMyRanker()!.getOrder());\n    if (s.length === 0) {\n      ctx.provider.setSelection(order);\n      return;\n    }\n    const ss = new Set(s);\n    const others = order.filter((d) => !ss.has(d));\n    ctx.provider.setSelection(others);\n  }, {featureCategory: 'model', featureLevel: 'advanced'})\n}, toolbarAddons);\n\nfunction sortActions(a: IToolbarAction, b: IToolbarAction) {\n  if (a.options.order === b.options.order) {\n    return a.title.toString().localeCompare(b.title.toString());\n  }\n  return (a.options.order || 50) - (b.options.order || 50);\n}\n\nconst cache = new Map<string, IToolbarAction[]>();\nconst cacheAddon = new Map<string, IToolbarDialogAddon[]>();\n\nfunction getFullToolbar(col: Column, ctx: IRankingHeaderContext) {\n  if (cache.has(col.desc.type)) {\n    return cache.get(col.desc.type)!;\n  }\n  const icons = <{[key: string]: IToolbarAction}>ctx.toolbar;\n  const actions = new Set<IToolbarAction>();\n  if (!col.fixed) {\n    actions.add(remove);\n  }\n  {\n    const possible = ctx.getPossibleRenderer(col);\n    if (possible.item.length > 2 || possible.group.length > 2 || possible.summary.length > 2) { // default always possible\n      actions.add(vis);\n    }\n  }\n\n  if (!isSupportType(col)) {\n    actions.add(sort);\n    actions.add(sortBy);\n    actions.add(rename);\n    actions.add(clone);\n  }\n\n  const keys = getAllToolbarActions(col);\n\n  keys.forEach((key) => {\n    if (icons.hasOwnProperty(key)) {\n      actions.add(icons[key]);\n    } else {\n      console.warn('cannot find: ', col.desc.type, key);\n    }\n  });\n\n  const r = Array.from(actions).sort(sortActions);\n  cache.set(col.desc.type, r);\n  return r;\n}\n\n/** @internal */\nexport function getToolbar(col: Column, ctx: IRankingHeaderContext) {\n  const toolbar = getFullToolbar(col, ctx);\n  const flags = ctx.flags;\n\n  return toolbar.filter((a) => {\n    if (a.enabled && !a.enabled(col)) {\n      return false;\n    }\n    // level is basic or not one of disabled features\n    return a.options.featureLevel === 'basic' || !((flags.advancedModelFeatures === false && a.options.featureCategory === 'model') || (flags.advancedRankingFeatures === false && a.options.featureCategory === 'ranking') || (flags.advancedUIFeatures === false && a.options.featureCategory === 'ui'));\n  });\n}\n\n/** @internal */\nexport function getToolbarDialogAddons(col: Column, key: string, ctx: IRankingHeaderContext) {\n  const cacheKey = `${col.desc.type}@${key}`;\n  if (cacheAddon.has(cacheKey)) {\n    return cacheAddon.get(cacheKey)!;\n  }\n  const icons = <{[key: string]: IToolbarDialogAddon}>ctx.toolbar;\n  const actions = new Set<IToolbarDialogAddon>();\n\n  const keys = getAllToolbarDialogAddons(col, key);\n\n  keys.forEach((key) => {\n    if (icons.hasOwnProperty(key)) {\n      actions.add(icons[key]);\n    } else {\n      console.warn('cannot find: ', col.desc.type, key);\n    }\n  });\n\n  const r = Array.from(actions).sort((a, b) => {\n    if (a.order === b.order) {\n      return a.title.localeCompare(b.title);\n    }\n    return (a.order || 50) - (b.order || 50);\n  });\n  cacheAddon.set(cacheKey, r);\n  return r;\n}\n\n/** @internal */\nexport function isSortAble(col: Column, ctx: IRankingHeaderContext) {\n  const toolbar = getFullToolbar(col, ctx);\n  return toolbar.includes(sortBy);\n}\n\n/** @internal */\nexport function isGroupAble(col: Column, ctx: IRankingHeaderContext) {\n  const toolbar = getFullToolbar(col, ctx);\n  return toolbar.includes(groupBy);\n}\n\n/** @internal */\nexport function isGroupSortAble(col: Column, ctx: IRankingHeaderContext) {\n  const toolbar = getFullToolbar(col, ctx);\n  return toolbar.includes(sortGroupBy);\n}\n","import {NumberColumn} from '../../model';\nimport {IDialogContext} from './ADialog';\nimport {round, getNumberOfBins} from '../../internal';\nimport {forEach} from '../../renderer/utils';\nimport {cssClass} from '../../styles';\n\n\n/** @internal */\nexport default function append(col: NumberColumn, node: HTMLElement, dialog: IDialogContext) {\n  const domain = col.getMapping().domain;\n  const current = col.getGroupThresholds();\n  let isThreshold = current.length <= 1;\n  const ranking =  col.findMyRanker()!;\n  node.insertAdjacentHTML('beforeend', `\n    <label class=\"${cssClass('checkbox')}\">\n      <input type=\"radio\" name=\"threshold\" value=\"threshold\" ${isThreshold ? 'checked' : ''}>\n      <span>at&nbsp;<input type=\"number\" size=\"10\" id=\"${dialog.idPrefix}N1\" value=\"${current.length > 0 ? current[0] : round((domain[1] - domain[0]) / 2, 2)}\"\n          required min=\"${domain[0]}\" max=\"${domain[1]}\" step=\"any\" ${!isThreshold ? 'disabled': ''}>\n      </span>\n    </label>\n    <label class=\"${cssClass('checkbox')}\">\n      <input type=\"radio\" name=\"threshold\" value=\"bins\" ${!isThreshold ? 'checked' : ''}>\n      <span> in&nbsp;<input type=\"number\" size=\"5\" id=\"${dialog.idPrefix}N2\" value=\"${current.length > 1 ? current.length : getNumberOfBins(ranking.getOrderLength())}\"\n          required min=\"2\" step=\"1\" ${isThreshold ? 'disabled': ''}>&nbsp;bins\n      </span>\n    </label>\n  `);\n\n  const threshold = <HTMLInputElement>node.querySelector(`#${dialog.idPrefix}N1`);\n  const bins = <HTMLInputElement>node.querySelector(`#${dialog.idPrefix}N2`);\n\n  const update = () => {\n    threshold.disabled = !isThreshold;\n    bins.disabled = isThreshold;\n\n    if (isThreshold) {\n      col.setGroupThresholds([threshold.valueAsNumber]);\n      return;\n    }\n\n    const count = parseInt(bins.value, 10);\n    const delta = (domain[1] - domain[0]) / count;\n    let act = domain[0] + delta;\n    const thresholds = [act];\n    for(let i = 1; i < count - 1; ++i) {\n      act += delta;\n      thresholds.push(act);\n    }\n    col.setGroupThresholds(thresholds);\n  };\n\n  threshold.addEventListener('change', update, { passive: true });\n  bins.addEventListener('change', update, { passive: true });\n\n\n  forEach(node, 'input[name=threshold]', (d: HTMLInputElement) => {\n    d.addEventListener('change', () => {\n      isThreshold = d.value === 'threshold';\n      update();\n    }, { passive: true });\n  });\n}\n","import {IDialogContext} from './ADialog';\nimport {StringColumn} from '../../model';\nimport {cssClass} from '../../styles';\n\n\n/** @internal */\nexport default function append(col: StringColumn, node: HTMLElement, dialog: IDialogContext) {\n  const current = col.getGroupCriteria();\n  const isRegex = current.length > 0 && current[0] instanceof RegExp;\n  node.insertAdjacentHTML('beforeend', `\n    <label class=\"${cssClass('checkbox')}\">\n      <input type=\"radio\" name=\"regex\" value=\"startsWith\" id=\"${dialog.idPrefix}RW\" ${!isRegex ? 'checked' : ''}>\n      <span>Text starts with &hellip;</span>\n    </label>\n    <label class=\"${cssClass('checkbox')}\">\n      <input type=\"radio\" name=\"regex\" value=\"regex\" id=\"${dialog.idPrefix}RE\" ${isRegex ? 'checked' : ''}>\n      <span>Use regular expressions</span>\n    </label>\n    <textarea class=\"${cssClass('textarea')}\" required rows=\"5\" placeholder=\"e.g. Test,a.*\" id=\"${dialog.idPrefix}T\">${current.map((d) => typeof d === 'string' ? d : d.source).join('\\n')}</textarea>\n    <button class=\"${cssClass('dialog-button')}\" id=\"${dialog.idPrefix}A\">Apply</button>\n  `);\n\n  const button = node.querySelector<HTMLButtonElement>(`#${dialog.idPrefix}A`)!;\n  const isRegexCheck = node.querySelector<HTMLInputElement>(`#${dialog.idPrefix}RE`)!;\n  const groups = node.querySelector<HTMLTextAreaElement>(`#${dialog.idPrefix}T`)!;\n\n  button.onclick = (evt) => {\n    evt.preventDefault();\n    evt.stopPropagation();\n\n    let items: (string | RegExp)[] = groups.value.trim().split('\\n').map((d) => d.trim()).filter((d) => d.length > 0);\n    const invalid = items.length === 0;\n    groups.setCustomValidity(invalid ? 'At least one group is required' : '');\n    if (invalid) {\n      (<any>groups).reportValidity(); // typedoc not uptodate\n      return;\n    }\n    if (isRegexCheck.checked) {\n      items = items.map((d) => new RegExp(d.toString(), 'gm'));\n    }\n    col.setGroupCriteria(items);\n  };\n}\n","import {forEach} from '../../renderer/utils';\nimport {DateColumn, IDateGranularity} from '../../model';\nimport {cssClass} from '../../styles';\n\n\n/** @internal */\nexport default function appendDate(col: DateColumn, node: HTMLElement) {\n  const current = col.getDateGrouper();\n\n  let granularity = current.granularity;\n  let circular = current.circular;\n\n  let html: string = '';\n  for (const g of ['century', 'decade', 'year', 'month', 'week', 'day_of_week', 'day_of_month', 'day_of_year', 'hour', 'minute', 'second']) {\n    html += `<label class=\"${cssClass('checkbox')}\">\n    <input type=\"radio\" name=\"granularity\" value=\"${g}\" ${granularity === g ? 'checked' : ''}>\n    <span> by ${g} </span>\n  </label>`;\n  }\n  html += `<label class=\"${cssClass('checkbox')}\">\n    <input type=\"checkbox\" name=\"circular\" ${circular ? 'checked' : ''}>\n    <span> Circular </span>\n  </label>`;\n\n  node.insertAdjacentHTML('beforeend', html);\n\n  const update = () => {\n    col.setDateGrouper({granularity, circular});\n  };\n\n\n  node.querySelector<HTMLInputElement>('input[name=circular]')!.addEventListener('change', (evt) => {\n    circular = (<HTMLInputElement>evt.currentTarget).checked;\n    update();\n  }, { passive: true });\n\n  forEach(node, 'input[name=granularity]', (d: HTMLInputElement) => {\n    d.addEventListener('change', () => {\n      granularity = <IDateGranularity>d.value;\n      update();\n    }, { passive: true });\n  });\n}\n","import {renderers} from './renderer/renderers';\nimport {toolbarActions} from './ui/toolbar';\nimport {Column, Ranking, IGroupData, IGroupItem} from './model';\nimport {IDataProvider} from './provider';\nimport {ICellRendererFactory, ERenderMode} from './renderer';\nimport {IToolbarAction, IToolbarDialogAddon} from './ui';\n\n/**\n * custom height implementation logic\n */\nexport interface IDynamicHeight {\n  /**\n   * default height for a row for optimized styling\n   */\n  defaultHeight: number;\n\n  /**\n   * returns the height in pixel for the given row\n   * @param {IGroupItem | IGroupData} item the item to show\n   * @returns {number} its height in pixel\n   */\n  height(item: IGroupItem | IGroupData): number;\n\n  /**\n   * returns the padding in pixel after the given row\n   * @param {IGroupItem | IGroupData | null} item item to show\n   * @returns {number} its padding in pixel\n   */\n  padding(item: IGroupItem | IGroupData | null): number;\n}\n\nexport interface ILineUpFlags {\n  /**\n   * optimization flag to disable frozen columns for optimizing rendering performance\n   * @default true\n   */\n  disableFrozenColumns: boolean;\n  /**\n   * flag whether advanced ranking features are enabled\n   * @default true\n   */\n  advancedRankingFeatures: boolean;\n  /**\n   * flag whether advanced model features are enabled\n   * @default true\n   */\n  advancedModelFeatures: boolean;\n  /**\n   * flag whether advanced UI features are enabled\n   * @default true\n   */\n  advancedUIFeatures: boolean;\n}\n\nexport interface ILineUpOptions {\n  /**\n   * option to enable/disable showing a summary (histogram, ...) in the header\n   * @default true\n   */\n  summaryHeader: boolean;\n  /**\n   * option to enable/disable animated transitions\n   * @default true\n   */\n  animated: boolean;\n  /**\n   * option to enforce that the whole row is shown upon hover without overflow hidden\n   * @default false\n   */\n  expandLineOnHover: boolean;\n  /**\n   * option to enable/disable the panel\n   * @default true\n   */\n  sidePanel: boolean;\n  /**\n   * option to specify whether the panel should be collapsed by default\n   * @default false\n   */\n  sidePanelCollapsed: boolean;\n  /**\n   * show the sorting and grouping hierarchy indicators in the side panel\n   * @default true\n   */\n  hierarchyIndicator: boolean;\n\n  /**\n   * option to specify the default slope graph mode\n   * @default 'item'\n   */\n  defaultSlopeGraphMode: 'item' | 'band';\n\n  /**\n   * how many degrees should a label be rotated in case of narrow columns\n   * @default 0 no rotation\n   */\n  labelRotation: number;\n\n  /**\n   * height of a row\n   * @default 18\n   */\n  rowHeight: number;\n  /**\n   * padding between two rows\n   * @default 2\n   */\n  rowPadding: number;\n  /**\n   * height of an aggregated group in pixel\n   * @default 40\n   */\n  groupHeight: number;\n  /**\n   * padding between two groups in pixel\n   * @default 5\n   */\n  groupPadding: number;\n\n  /**\n   * custom function to compute the level of detail for a row\n   * @param {number} rowIndex the current row index to be rendered\n   * @returns {\"high\" | \"low\"}\n   */\n  levelOfDetail: (rowIndex: number) => 'high' | 'low';\n  /**\n   * custom function to compute the height of a row (group or item)\n   * @param {(IGroupItem | IGroupData)[]} data the data to render\n   * @param {Ranking} ranking the ranking of the data\n   * @returns {IDynamicHeight | null} the height compute function or null to use the default\n   */\n  dynamicHeight: (data: (IGroupItem | IGroupData)[], ranking: Ranking) => IDynamicHeight | null;\n  /**\n   * custom function to be called when updating a HTML row\n   * @param {HTMLElement} row node element to be updated\n   * @param {number} rowIndex row index to be rendered in the row\n   */\n  customRowUpdate: (row: HTMLElement, rowIndex: number) => void;\n\n  /**\n   * register custom toolbar actions and dialog addons\n   */\n  toolbar: {[key: string]: IToolbarAction | IToolbarDialogAddon};\n  /**\n   * register custom renderer factories\n   */\n  renderers: {[type: string]: ICellRendererFactory};\n\n  /**\n   * custom check whether a given renderer can render the given column in the given mode\n   */\n  canRender: (type: string, renderer: ICellRendererFactory, col: Column, mode: ERenderMode) => boolean;\n\n  /**\n   * custom flags for optimization\n   */\n  flags: Partial<ILineUpFlags>;\n\n  /**\n   * ignore incompatible browser and always show (on own risk)\n   * @default false\n   */\n  ignoreUnsupportedBrowser: boolean;\n}\n\nexport interface ITaggleOptions extends ILineUpOptions {\n  /**\n   * whether the overview mode is enabled by default\n   * @default false\n   */\n  overviewMode: boolean;\n}\n\nexport interface ILineUpLike {\n  readonly node: HTMLElement;\n  readonly data: IDataProvider;\n\n  dump(): any;\n\n  destroy(): void;\n}\n\n\nexport function defaultOptions(): ITaggleOptions {\n  return {\n    toolbar: Object.assign({}, toolbarActions),\n    renderers: Object.assign({}, renderers),\n    canRender: () => true,\n\n    labelRotation: 0,\n    summaryHeader: true,\n    animated: true,\n    expandLineOnHover: false,\n    sidePanel: true,\n    sidePanelCollapsed: false,\n    hierarchyIndicator: true,\n    defaultSlopeGraphMode: 'item',\n    overviewMode: false,\n\n    rowHeight: 18,\n    groupHeight: 40,\n    groupPadding: 5,\n    rowPadding: 2,\n\n    levelOfDetail: () => 'high',\n    customRowUpdate: () => undefined,\n    dynamicHeight: () => null,\n\n    flags: {\n      disableFrozenColumns: true, //disable by default for speed navigator.userAgent.includes('Firefox/52') // disable by default in Firefox ESR 52\n      advancedRankingFeatures: true,\n      advancedModelFeatures: true,\n      advancedUIFeatures: true\n    },\n\n    ignoreUnsupportedBrowser: false\n  };\n}\n","import {detect} from 'detect-browser';\n\nexport const SUPPORTED_FIREFOX_VERSION = 57;\nexport const SUPPORTED_CHROME_VERSION = 64;\nexport const SUPPORTED_EDGE_VERSION = 16;\n\n/**\n * @internal\n */\nexport function getUnsupportedBrowserError() {\n  const info = detect();\n  if (!info || !info.version) {\n    return 'browser cannot be detected';\n  }\n  const prefix = `unsupported browser detected:`;\n  switch (info.name) {\n    case 'firefox':\n      const fVersion = parseInt(info.version.slice(0, info.version.indexOf('.')), 10);\n      if (fVersion <= SUPPORTED_FIREFOX_VERSION && fVersion !== 52) { // ESR\n        return `${prefix} Firefox ${info.version} (&lt; ${SUPPORTED_FIREFOX_VERSION})`;\n      }\n      return null;\n    case 'edge':\n      const eVersion = parseInt(info.version.slice(0, info.version.indexOf('.')), 10);\n      if (eVersion <= SUPPORTED_EDGE_VERSION) {\n        return `${prefix} Edge ${info.version} (&lt; ${SUPPORTED_EDGE_VERSION})`;\n      }\n      return null;\n    case 'chrome':\n      const cVersion = parseInt(info.version.slice(0, info.version.indexOf('.')), 10);\n      if (cVersion <= SUPPORTED_CHROME_VERSION) {\n        return `${prefix} Chrome ${info.version} (&lt; ${SUPPORTED_CHROME_VERSION})`;\n      }\n      return null;\n    case 'ie':\n      return `${prefix} Internet Explorer`;\n  }\n  console.warn('unknown browser detected', info, 'assuming fine...');\n  return null;\n}\n/**\n * checks whether the current browser is compatible with lineupjs\n * @return boolean\n */\nexport function isBrowserSupported() {\n  return getUnsupportedBrowserError() == null;\n}\n\n","import {getUnsupportedBrowserError, SUPPORTED_CHROME_VERSION, SUPPORTED_EDGE_VERSION, SUPPORTED_FIREFOX_VERSION} from '../browser';\nimport {ILineUpLike} from '../config';\nimport {AEventDispatcher, IEventListener, clear} from '../internal';\nimport {Column} from '../model';\nimport {DataProvider, IDataProviderDump} from '../provider';\nimport {cssClass} from '../styles';\n\n\n/**\n * emitted when the highlight changes\n * @asMemberOf ALineUp\n * @param dataIndex the highlghted data index or -1 for none\n * @event\n */\nexport declare function highlightChanged(dataIndex: number): void;\n\n/**\n * emitted when the selection changes\n * @asMemberOf ALineUp\n * @param dataIndices the selected data indices\n * @event\n */\nexport declare function selectionChanged(dataIndices: number[]): void;\n\nexport abstract class ALineUp extends AEventDispatcher implements ILineUpLike {\n  static readonly EVENT_SELECTION_CHANGED = DataProvider.EVENT_SELECTION_CHANGED;\n  static readonly EVENT_HIGHLIGHT_CHANGED = 'highlightChanged';\n\n  private highlightListeners = 0;\n\n  readonly isBrowserSupported: boolean;\n\n  constructor(public readonly node: HTMLElement, private _data: DataProvider, ignoreIncompatibleBrowser: boolean) {\n    super();\n\n    const error = getUnsupportedBrowserError();\n    this.isBrowserSupported = ignoreIncompatibleBrowser || !error;\n\n    if (!this.isBrowserSupported) {\n      this.node.classList.add(cssClass('unsupported-browser'));\n      this.node.innerHTML = `<span>${error}</span>\n      <div class=\"${cssClass('unsupported-browser')}\">\n        <a href=\"https://www.mozilla.org/en-US/firefox/\" rel=\"noopener\" target=\"_blank\" data-browser=\"firefox\" data-version=\"${SUPPORTED_FIREFOX_VERSION}\"></a>\n        <a href=\"https://www.google.com/chrome/index.html\" rel=\"noopener\" target=\"_blank\" data-browser=\"chrome\" data-version=\"${SUPPORTED_CHROME_VERSION}\" title=\"best support\"></a>\n        <a href=\"https://www.microsoft.com/en-us/windows/microsoft-edge\" rel=\"noopener\" target=\"_blank\" data-browser=\"edge\" data-version=\"${SUPPORTED_EDGE_VERSION}\"></a>\n      </div><span>use the <code>ignoreUnsupportedBrowser=true</code> option to ignore this error at your own risk</span>`;\n    }\n\n    this.forward(_data, `${DataProvider.EVENT_SELECTION_CHANGED}.main`);\n    _data.on(`${DataProvider.EVENT_BUSY}.busy`, (busy) => this.node.classList.toggle(cssClass('busy'), busy));\n  }\n\n  protected createEventList() {\n    return super.createEventList().concat([ALineUp.EVENT_HIGHLIGHT_CHANGED, ALineUp.EVENT_SELECTION_CHANGED]);\n  }\n\n  on(type: typeof ALineUp.EVENT_HIGHLIGHT_CHANGED, listener: typeof highlightChanged | null): this;\n  on(type: typeof ALineUp.EVENT_SELECTION_CHANGED, listener: typeof selectionChanged | null): this;\n  on(type: string | string[], listener: IEventListener | null): this; // required for correct typings in *.d.ts\n  on(type: string | string[], listener: IEventListener | null): this {\n    return super.on(type, listener);\n  }\n\n  get data() {\n    return this._data;\n  }\n\n  destroy() {\n    // just clear since we hand in the node itself\n    clear(this.node);\n    this._data.destroy();\n  }\n\n  dump() {\n    return this.data.dump();\n  }\n\n  restore(dump: IDataProviderDump) {\n    this._data.restore(dump);\n  }\n\n  abstract update(): void;\n\n  setDataProvider(data: DataProvider, dump?: IDataProviderDump) {\n    if (this._data) {\n      this.unforward(this._data, `${DataProvider.EVENT_SELECTION_CHANGED}.taggle`);\n      this._data.on(`${DataProvider.EVENT_BUSY}.busy`, null);\n    }\n    this._data = data;\n    if (dump) {\n      data.restore(dump);\n    }\n    this.forward(data, `${DataProvider.EVENT_SELECTION_CHANGED}.taggle`);\n\n    data.on(`${DataProvider.EVENT_BUSY}.busy`, (busy) => this.node.classList.toggle(cssClass('busy'), busy));\n  }\n\n  getSelection() {\n    return this._data.getSelection();\n  }\n\n  setSelection(dataIndices: number[]) {\n    this._data.setSelection(dataIndices);\n  }\n\n  /**\n   * sorts LineUp by he given column\n   * @param column callback function finding the column to sort\n   * @param ascending\n   * @returns {boolean}\n   */\n  sortBy(column: string | ((col: Column) => boolean), ascending = false) {\n    const col = this.data.find(column);\n    if (col) {\n      col.sortByMe(ascending);\n    }\n    return col != null;\n  }\n\n  abstract setHighlight(dataIndex: number, scrollIntoView: boolean): boolean;\n\n  abstract getHighlight(): number;\n\n  protected listenersChanged(type: string, enabled: boolean) {\n    super.listenersChanged(type, enabled);\n    if (!type.startsWith(ALineUp.EVENT_HIGHLIGHT_CHANGED)) {\n      return;\n    }\n    if (enabled) {\n      this.highlightListeners++;\n      if (this.highlightListeners === 1) { // first\n        this.enableHighlightListening(true);\n      }\n    } else {\n      this.highlightListeners -= 1;\n      if (this.highlightListeners === 0) { // last\n        this.enableHighlightListening(false);\n      }\n    }\n  }\n\n  protected enableHighlightListening(_enable: boolean) {\n    // hook\n  }\n}\n\nexport default ALineUp;\n","export { default as KeyFinder } from './KeyFinder';\r\n/**\r\n * different row animation modes\r\n */\r\nexport var EAnimationMode;\r\n(function (EAnimationMode) {\r\n    /**\r\n     * plain update existed both before and after\r\n     */\r\n    EAnimationMode[EAnimationMode[\"UPDATE\"] = 0] = \"UPDATE\";\r\n    /**\r\n     * exists both before and after but wasn't visible yet thus waas created\r\n     */\r\n    EAnimationMode[EAnimationMode[\"UPDATE_CREATE\"] = 1] = \"UPDATE_CREATE\";\r\n    /**\r\n     * exists both before and after is visible but not needed anymore and thus removed\r\n     */\r\n    EAnimationMode[EAnimationMode[\"UPDATE_REMOVE\"] = 2] = \"UPDATE_REMOVE\";\r\n    /**\r\n     * row appears\r\n     */\r\n    EAnimationMode[EAnimationMode[\"SHOW\"] = 3] = \"SHOW\";\r\n    /**\r\n     * row disappears\r\n     */\r\n    EAnimationMode[EAnimationMode[\"HIDE\"] = 4] = \"HIDE\";\r\n})(EAnimationMode || (EAnimationMode = {}));\r\nvar NO_CHANGE_DELTA = 1;\r\nexport function noAnimationChange(_a, previousHeight, currentHeight) {\r\n    var previous = _a.previous, mode = _a.mode, nodeY = _a.nodeY, current = _a.current;\r\n    // sounds like the same\r\n    var prev = previous.height == null ? previousHeight : previous.height;\r\n    var curr = current.height == null ? currentHeight : current.height;\r\n    return mode === EAnimationMode.UPDATE && (Math.abs(previous.y - nodeY) <= NO_CHANGE_DELTA) && (Math.abs(prev - curr) <= NO_CHANGE_DELTA);\r\n}\r\n/**\r\n * maximal duration of all animations + extra waiting before e.g. rows are really removed\r\n * @type {number}\r\n */\r\nvar MAX_ANIMATION_TIME = 1100;\r\nexport var defaultPhases = [\r\n    {\r\n        delay: 0,\r\n        apply: function (_a) {\r\n            var mode = _a.mode, previous = _a.previous, nodeY = _a.nodeY, current = _a.current, node = _a.node;\r\n            node.dataset.animation = EAnimationMode[mode].toLowerCase();\r\n            node.style.transform = \"translate(0, \" + (previous.y - nodeY) + \"px)\";\r\n            if (mode === EAnimationMode.SHOW) {\r\n                // already target height\r\n                node.style.height = current.height !== null ? current.height + \"px\" : null;\r\n            }\r\n            else { // always set previous height for default height changes\r\n                node.style.height = previous.height + \"px\";\r\n            }\r\n            node.style.opacity = mode === EAnimationMode.SHOW ? '0' : (mode === EAnimationMode.HIDE ? '1' : null);\r\n        }\r\n    },\r\n    {\r\n        delay: 10,\r\n        apply: function (_a) {\r\n            var mode = _a.mode, current = _a.current, nodeY = _a.nodeY, node = _a.node;\r\n            // null for added/update since already at the right position\r\n            node.style.transform = (mode === EAnimationMode.HIDE || mode === EAnimationMode.UPDATE_REMOVE) ? \"translate(0, \" + (current.y - nodeY) + \"px)\" : null;\r\n            if (mode !== EAnimationMode.HIDE) { // keep height for removal\r\n                node.style.height = current.height !== null ? current.height + \"px\" : null;\r\n            }\r\n            node.style.opacity = mode === EAnimationMode.SHOW ? '1' : (mode === EAnimationMode.HIDE ? '0' : null);\r\n        }\r\n    },\r\n    {\r\n        delay: MAX_ANIMATION_TIME,\r\n        apply: function (_a) {\r\n            var node = _a.node;\r\n            delete node.dataset.animation;\r\n            node.style.opacity = null;\r\n            node.style.transform = null;\r\n        }\r\n    }\r\n];\r\n//# sourceMappingURL=index.js.map","/**\r\n * utility class for optimized row context access\r\n */\r\nvar KeyFinder = /** @class */ (function () {\r\n    /**\r\n     * constructor for fast key based row access\r\n     * @param {IExceptionContext} context context to use\r\n     * @param {(rowIndex: number) => string} key key function\r\n     */\r\n    function KeyFinder(context, key) {\r\n        var _this = this;\r\n        this.context = context;\r\n        this.key = key;\r\n        this.cache = [];\r\n        this.lastFilled = 0;\r\n        this.key2index = new Map();\r\n        this.context.exceptions.forEach(function (e) {\r\n            _this.cache[e.index] = e.y;\r\n            _this.key2index.set(key(e.index), e.index);\r\n        });\r\n    }\r\n    KeyFinder.prototype.findValidStart = function (before) {\r\n        for (var i = before - 1; i >= 0; --i) {\r\n            if (this.cache[i] !== undefined) {\r\n                return i;\r\n            }\r\n        }\r\n        return -1;\r\n    };\r\n    /**\r\n     * returns the position of the given given or -1 if not found\r\n     * @param {string} key\r\n     * @return {number} -1 if not found\r\n     */\r\n    KeyFinder.prototype.posByKey = function (key) {\r\n        if (this.key2index.has(key)) {\r\n            var index = this.key2index.get(key);\r\n            return { index: index, pos: this.pos(index) };\r\n        }\r\n        return this.fillCacheTillKey(key);\r\n    };\r\n    /**\r\n     * returns the position of the tthe given index\r\n     * @param {number} index index to look for\r\n     * @returns {number}\r\n     */\r\n    KeyFinder.prototype.pos = function (index) {\r\n        if (this.context.exceptions.length === 0) {\r\n            // fast pass\r\n            return index * this.context.defaultRowHeight;\r\n        }\r\n        var cached = this.cache[index];\r\n        if (cached !== undefined) {\r\n            return cached;\r\n        }\r\n        //need to compute it\r\n        // find the starting point where to start counting\r\n        var start = this.findValidStart(index);\r\n        if (start < 0) {\r\n            this.fillCache(0, index, 0);\r\n        }\r\n        else {\r\n            this.fillCache(start + 1, index, this.cache[start] + this.heightOf(start));\r\n        }\r\n        return this.cache[index];\r\n    };\r\n    KeyFinder.prototype.fillCache = function (first, last, offset, callback) {\r\n        if (last <= this.lastFilled) {\r\n            //everything already there\r\n            if (!callback) {\r\n                return;\r\n            }\r\n            for (var i = first; i <= last; ++i) {\r\n                callback(i, this.key(i), this.cache[i]);\r\n            }\r\n            return;\r\n        }\r\n        var pos = offset;\r\n        for (var i = first; i <= last; ++i) {\r\n            this.cache[i] = pos;\r\n            var key = this.key(i);\r\n            this.key2index.set(key, i);\r\n            if (callback) {\r\n                callback(i, key, pos);\r\n            }\r\n            pos += this.heightOf(i);\r\n        }\r\n    };\r\n    /**\r\n     * returns the height of the row identified by index\r\n     * @param {number} index\r\n     * @returns {number}\r\n     */\r\n    KeyFinder.prototype.heightOf = function (index) {\r\n        var lookup = this.context.exceptionsLookup;\r\n        return lookup.has(index) ? lookup.get(index) : this.context.defaultRowHeight;\r\n    };\r\n    /**\r\n     * see heightOf but ignores padding and optional null in case of default height\r\n     * @param {number} index row index\r\n     * @param {boolean} returnDefault return null if default height\r\n     * @returns {number}\r\n     */\r\n    KeyFinder.prototype.exceptionHeightOf = function (index, returnDefault) {\r\n        if (returnDefault === void 0) { returnDefault = false; }\r\n        var padding = this.context.padding(index);\r\n        var lookup = this.context.exceptionsLookup;\r\n        if (lookup.has(index)) {\r\n            return lookup.get(index) - padding;\r\n        }\r\n        return returnDefault ? this.context.defaultRowHeight - padding : null;\r\n    };\r\n    /**\r\n     * padding of the given index\r\n     * @param {number} index\r\n     * @returns {number}\r\n     */\r\n    KeyFinder.prototype.padding = function (index) {\r\n        return this.context.padding(index);\r\n    };\r\n    KeyFinder.prototype.fillCacheTillKey = function (target) {\r\n        var pos = 0;\r\n        for (var i = this.lastFilled; i < this.context.numberOfRows; ++i, ++this.lastFilled) {\r\n            var c = this.cache[i];\r\n            if (c !== undefined) {\r\n                pos = c + this.heightOf(i);\r\n                continue;\r\n            }\r\n            // new one fill up\r\n            var key = this.key(i);\r\n            this.cache[i] = pos;\r\n            this.key2index.set(key, i);\r\n            if (key === target) {\r\n                return { index: i, pos: pos };\r\n            }\r\n            pos += this.heightOf(i);\r\n        }\r\n        return { index: -1, pos: -1 };\r\n    };\r\n    /**\r\n     * computes the positions and keys for a range of given indices\r\n     * @param {number} first first row index\r\n     * @param {number} last last row index\r\n     * @param {number} offset pos offset for the first row index\r\n     * @param {(index: number, key: string, pos: number) => void} callback callack for each identified index\r\n     */\r\n    KeyFinder.prototype.positions = function (first, last, offset, callback) {\r\n        this.fillCache(first, last, offset, callback);\r\n    };\r\n    return KeyFinder;\r\n}());\r\nexport default KeyFinder;\r\n//# sourceMappingURL=KeyFinder.js.map","export var defaultMode = 'animation'; // Boolean((<any>window).chrome) ? 'animation' : 0, // animation frame on chrome;\r\nfunction dummy() {\r\n    return {\r\n        handler: [],\r\n        prev: null,\r\n        timer: -1\r\n    };\r\n}\r\nvar ScrollHandler = /** @class */ (function () {\r\n    function ScrollHandler(node) {\r\n        // this.current = this.asInfo();\r\n        var _this = this;\r\n        this.node = node;\r\n        this.sync = dummy();\r\n        this.animation = dummy();\r\n        this.numbers = new Map();\r\n        this.handleAnimationImpl = function () {\r\n            if (_this.animation.timer !== 1) {\r\n                return;\r\n            }\r\n            _this.handle(_this.animation);\r\n            _this.animation.timer = -1;\r\n        };\r\n        node.addEventListener('scroll', function () {\r\n            // this.current = this.asInfo();\r\n            // if (this.prev && (Math.abs(this.current.left - this.prev.left) + Math.abs(this.current.top - this.prev.top)) < 4) {\r\n            //   return;\r\n            // }\r\n            // this.prev = this.current;\r\n            if (_this.sync.handler.length > 0) {\r\n                _this.handle(_this.sync);\r\n            }\r\n            _this.handleAnimation();\r\n            _this.handleTimeouts();\r\n        }, {\r\n            passive: true\r\n        });\r\n    }\r\n    Object.defineProperty(ScrollHandler.prototype, \"current\", {\r\n        // current: IScrollInfo;\r\n        // private prev: IScrollInfo | null = null;\r\n        get: function () {\r\n            return this.asInfo();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ScrollHandler.prototype.handle = function (handler) {\r\n        var info = this.current;\r\n        if (handler.prev && (Math.abs(info.left - handler.prev.left) + Math.abs(info.top - handler.prev.top)) < 4) {\r\n            return;\r\n        }\r\n        handler.prev = info;\r\n        for (var _i = 0, _a = handler.handler; _i < _a.length; _i++) {\r\n            var s = _a[_i];\r\n            s(info);\r\n        }\r\n    };\r\n    ScrollHandler.prototype.handleAnimation = function () {\r\n        if (this.animation.timer !== -1 || this.animation.handler.length === 0) {\r\n            return;\r\n        }\r\n        this.animation.timer = 1;\r\n        requestAnimationFrame(this.handleAnimationImpl);\r\n    };\r\n    ScrollHandler.prototype.handleTimeouts = function () {\r\n        var _this = this;\r\n        if (this.numbers.size === 0) {\r\n            return;\r\n        }\r\n        this.numbers.forEach(function (handler, n) {\r\n            if (handler.handler.length === 0) {\r\n                return;\r\n            }\r\n            handler.timer = self.setTimeout(function () {\r\n                _this.handle(handler);\r\n                handler.timer = -1;\r\n            }, n);\r\n        });\r\n    };\r\n    ScrollHandler.prototype.asInfo = function () {\r\n        return {\r\n            left: this.node.scrollLeft,\r\n            top: this.node.scrollTop,\r\n            width: this.node.clientWidth,\r\n            height: this.node.clientHeight\r\n        };\r\n    };\r\n    ScrollHandler.prototype.push = function (mode, handler) {\r\n        if (typeof mode === 'number') {\r\n            if (!this.numbers.has(mode)) {\r\n                this.numbers.set(mode, dummy());\r\n            }\r\n            this.numbers.get(mode).handler.push(handler);\r\n        }\r\n        switch (mode) {\r\n            case 'sync':\r\n                this.sync.handler.push(handler);\r\n                break;\r\n            case 'animation':\r\n                this.animation.handler.push(handler);\r\n                break;\r\n        }\r\n    };\r\n    ScrollHandler.prototype.remove = function (handler) {\r\n        var test = [this.sync, this.animation].concat(Array.from(this.numbers.values()));\r\n        return test.some(function (d) {\r\n            var index = d.handler.indexOf(handler);\r\n            if (index >= 0) {\r\n                d.handler.splice(index, 1);\r\n            }\r\n            return index >= 0;\r\n        });\r\n    };\r\n    ScrollHandler.prototype.isWaiting = function (mode) {\r\n        switch (mode) {\r\n            case 'animation':\r\n                return this.animation.timer >= 0;\r\n            case 'sync':\r\n                return false;\r\n            default:\r\n                return this.numbers.has(mode) && this.numbers.get(mode).timer >= 0;\r\n        }\r\n    };\r\n    return ScrollHandler;\r\n}());\r\n/**\r\n * @internal\r\n */\r\nexport function addScroll(scroller, mode, handler) {\r\n    // hide in element to have just one real listener\r\n    if (!scroller.__le_scroller__) {\r\n        scroller.__le_scroller__ = new ScrollHandler(scroller);\r\n    }\r\n    var s = scroller.__le_scroller__;\r\n    s.push(mode, handler);\r\n    return s.asInfo();\r\n}\r\n/**\r\n * @internal\r\n */\r\nexport function isScrollEventWaiting(scroller, mode) {\r\n    if (!scroller.__le_scroller__) {\r\n        return false;\r\n    }\r\n    var s = scroller.__le_scroller__;\r\n    return s.isWaiting(mode);\r\n}\r\n/**\r\n * @internal\r\n */\r\nexport function removeScroll(scroller, handler) {\r\n    if (scroller.__le_scroller__) {\r\n        scroller.__le_scroller__.remove(handler);\r\n    }\r\n}\r\n//# sourceMappingURL=scroll.js.map","export * from './scroll';\r\n/**\r\n * clear node clearing\r\n * @param node\r\n * @internal\r\n */\r\nexport function clear(node) {\r\n    while (node.lastChild) {\r\n        node.removeChild(node.lastChild);\r\n    }\r\n    return node;\r\n}\r\n//# sourceMappingURL=index.js.map","var RowHeightException = /** @class */ (function () {\r\n    function RowHeightException(index, y, height) {\r\n        this.index = index;\r\n        this.y = y;\r\n        this.height = height;\r\n    }\r\n    Object.defineProperty(RowHeightException.prototype, \"y2\", {\r\n        get: function () {\r\n            return this.y + this.height;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return RowHeightException;\r\n}());\r\n/**\r\n * creates a uniform exception context, i.e no exceptions all rows are of the same height\r\n * @param {number} numberOfRows\r\n * @param {number} rowHeight\r\n * @param {number} rowPadding padding between rows\r\n * @return {IExceptionContext}\r\n */\r\nexport function uniformContext(numberOfRows, rowHeight, rowPadding) {\r\n    if (rowPadding === void 0) { rowPadding = 0; }\r\n    rowHeight += rowPadding;\r\n    var exceptionsLookup = {\r\n        keys: function () { return [].values(); },\r\n        get: function () { return rowHeight; },\r\n        has: function () { return false; },\r\n        size: 0\r\n    };\r\n    return {\r\n        exceptions: [],\r\n        exceptionsLookup: exceptionsLookup,\r\n        totalHeight: numberOfRows * rowHeight,\r\n        numberOfRows: numberOfRows,\r\n        defaultRowHeight: rowHeight,\r\n        padding: function () { return rowPadding; }\r\n    };\r\n}\r\n/**\r\n * computes the most frequent value in a given array like\r\n * @param {} values\r\n * @return {number}\r\n */\r\nfunction mostFrequentValue(values) {\r\n    var lookup = new Map();\r\n    values.forEach(function (value) {\r\n        lookup.set(value, (lookup.get(value) || 0) + 1);\r\n    });\r\n    if (lookup.size === 0) {\r\n        return 20; // default value since it doesn't matter\r\n    }\r\n    // sort desc take first key and asc by the second in case of tie, it is optimized to have exceptions for higher rows less for big rows\r\n    var sorted = Array.from(lookup).sort(function (a, b) {\r\n        if (a[1] !== b[1]) {\r\n            return b[1] - a[1];\r\n        }\r\n        return a[0] - b[0];\r\n    });\r\n    var mostFrequent = sorted[0][0];\r\n    if (mostFrequent === 0) { // cornercase\r\n        return sorted.length > 1 ? sorted[1][0] : 20; // all empty\r\n    }\r\n    return mostFrequent;\r\n}\r\n/**\r\n * creates a non uniform context based on the given array like heights\r\n * @param rowHeights arrayish to get the heights\r\n * @param {number} defaultRowHeight if not given the most frequent value will be used\r\n * @param {number} rowPadding padding between rows\r\n * @return {IExceptionContext}\r\n */\r\nexport function nonUniformContext(rowHeights, defaultRowHeight, rowPadding) {\r\n    if (defaultRowHeight === void 0) { defaultRowHeight = NaN; }\r\n    if (rowPadding === void 0) { rowPadding = 0; }\r\n    var exceptionsLookup = new Map();\r\n    var exceptions = [];\r\n    var padding = typeof rowPadding === 'function' ? rowPadding : function () { return rowPadding; };\r\n    if (isNaN(defaultRowHeight)) {\r\n        defaultRowHeight = mostFrequentValue(rowHeights);\r\n    }\r\n    defaultRowHeight += padding(-1);\r\n    var prev = -1, acc = 0, totalHeight = 0, numberOfRows = 0;\r\n    rowHeights.forEach(function (height, index) {\r\n        height += padding(index);\r\n        totalHeight += height;\r\n        numberOfRows++;\r\n        if (height === defaultRowHeight) {\r\n            //regular\r\n            return;\r\n        }\r\n        exceptionsLookup.set(index, height);\r\n        var between = (index - prev - 1) * defaultRowHeight;\r\n        prev = index;\r\n        var y = acc + between;\r\n        acc = y + height;\r\n        exceptions.push(new RowHeightException(index, y, height));\r\n    });\r\n    return { exceptionsLookup: exceptionsLookup, exceptions: exceptions, totalHeight: totalHeight, defaultRowHeight: defaultRowHeight, numberOfRows: numberOfRows, padding: padding };\r\n}\r\n/**\r\n * creates a random context with the given constraints\r\n * @param {number} numberOfRows\r\n * @param {number} defaultRowHeight\r\n * @param {number} minRowHeight\r\n * @param {number} maxRowHeight\r\n * @param {number} ratio around ratio percent will get a non uniform height\r\n * @param {number} seed random seed\r\n * @return {IExceptionContext}\r\n */\r\nexport function randomContext(numberOfRows, defaultRowHeight, minRowHeight, maxRowHeight, ratio, seed) {\r\n    if (minRowHeight === void 0) { minRowHeight = 2; }\r\n    if (maxRowHeight === void 0) { maxRowHeight = defaultRowHeight * 10; }\r\n    if (ratio === void 0) { ratio = 0.2; }\r\n    if (seed === void 0) { seed = Date.now(); }\r\n    var actSeed = seed;\r\n    var random = function () {\r\n        var x = Math.sin(actSeed++) * 10000;\r\n        return x - Math.floor(x);\r\n    };\r\n    var getter = function () {\r\n        var coin = random();\r\n        if (coin < ratio) {\r\n            //non uniform\r\n            return minRowHeight + Math.round(random() * (maxRowHeight - minRowHeight));\r\n        }\r\n        return defaultRowHeight;\r\n    };\r\n    var forEach = function (callback) {\r\n        for (var index = 0; index < numberOfRows; ++index) {\r\n            callback(getter(), index);\r\n        }\r\n    };\r\n    return nonUniformContext({ forEach: forEach }, defaultRowHeight);\r\n}\r\n/**\r\n * computes the visible range\r\n * @param {number} scrollTop top scrolling\r\n * @param {number} clientHeight visible height\r\n * @param {number} rowHeight height of a row by default\r\n * @param {IRowHeightException[]} heightExceptions exceptions of this default height\r\n * @param {number} numberOfRows the number of rows\r\n * @return {IVisibleRange} the computed visible range\r\n */\r\nexport function range(scrollTop, clientHeight, rowHeight, heightExceptions, numberOfRows) {\r\n    if (numberOfRows === 0) {\r\n        return { first: 0, last: -1, firstRowPos: 0, endPos: 0 };\r\n    }\r\n    if (numberOfRows === 1) {\r\n        return {\r\n            first: 0,\r\n            last: 0,\r\n            firstRowPos: 0,\r\n            endPos: heightExceptions.length === 0 ? rowHeight : heightExceptions[0].y2\r\n        };\r\n    }\r\n    var offset = scrollTop;\r\n    var offset2 = offset + clientHeight;\r\n    function indexOf(pos, indexShift) {\r\n        return Math.min(numberOfRows - 1, indexShift + Math.max(0, Math.floor(pos / rowHeight)));\r\n    }\r\n    function calc(offsetShift, indexShift, isGuess) {\r\n        if (isGuess === void 0) { isGuess = false; }\r\n        var shifted = offset - offsetShift;\r\n        var shifted2 = offset2 - offsetShift;\r\n        var first = indexOf(shifted, indexShift);\r\n        var last = indexOf(shifted2, indexShift);\r\n        var firstRowPos = offsetShift + (first - indexShift) * rowHeight;\r\n        var endPos = offsetShift + (last + 1 - indexShift) * rowHeight;\r\n        //if (!isGuess) {\r\n        //  console.log(first, '@', firstRowPos, last, '#', end, offset, offset2, firstRowPos <= offset, offset2 <= end);\r\n        //}\r\n        console.assert(!isGuess || !(firstRowPos > offset || (endPos < offset2 && last < numberOfRows - 1)), 'error', isGuess, firstRowPos, endPos, offset, offset2, indexShift, offsetShift);\r\n        return { first: first, last: last, firstRowPos: firstRowPos, endPos: endPos };\r\n    }\r\n    var r = calc(0, 0, true);\r\n    if (heightExceptions.length === 0) {\r\n        //uniform\r\n        return r;\r\n    }\r\n    if (r.last < heightExceptions[0].index) {\r\n        //console.log('before the first exception = uniform with no shift');\r\n        //console.log(r.first, '@', r.firstRowPos, r.last, '#', r.end, offset, offset2, r.firstRowPos <= offset, offset2 <= r.end);\r\n        return r;\r\n    }\r\n    if (r.last === heightExceptions[0].index && heightExceptions[0].height > rowHeight) {\r\n        return Object.assign(r, { endPos: heightExceptions[0].y2 });\r\n    }\r\n    //the position where the exceptions ends\r\n    var lastPos = heightExceptions[heightExceptions.length - 1];\r\n    if (offset >= lastPos.y) {\r\n        var rest = calc(lastPos.y2, lastPos.index + 1);\r\n        if (offset < lastPos.y2) {\r\n            // include me\r\n            return Object.assign(rest, { first: lastPos.index, firstRowPos: lastPos.y });\r\n        }\r\n        return rest;\r\n    }\r\n    //we have some exceptions\r\n    var visible = [];\r\n    var closest = heightExceptions[0]; //closest before not in range\r\n    for (var _i = 0, heightExceptions_1 = heightExceptions; _i < heightExceptions_1.length; _i++) {\r\n        var item = heightExceptions_1[_i];\r\n        var y = item.y, y2 = item.y2;\r\n        if (y >= offset2) {\r\n            break;\r\n        }\r\n        if (y2 <= offset) {\r\n            closest = item;\r\n            continue;\r\n        }\r\n        visible.push(item);\r\n    }\r\n    if (visible.length === 0) {\r\n        //console.log('we are in the between some exceptions and none are visible');\r\n        return calc(closest.y2, closest.index + 1); //skip myself\r\n    }\r\n    {\r\n        //console.log('we show at least one exception');\r\n        var firstException = visible[0];\r\n        var lastException = visible[visible.length - 1];\r\n        var first = Math.max(0, firstException.index - Math.max(0, Math.ceil((firstException.y - offset) / rowHeight)));\r\n        var last = lastException.index;\r\n        if (offset2 >= lastException.y2) {\r\n            last = indexOf(offset2 - lastException.y2, lastException.index + 1);\r\n        }\r\n        var firstRowPos = firstException.y - (firstException.index - first) * rowHeight;\r\n        var endPos = lastException.y2 + (last - lastException.index) * rowHeight;\r\n        //console.log(first, '@', firstRowPos, last, '#', end, offset, offset2, firstRowPos <= offset, offset2 <= end);\r\n        console.assert(firstRowPos <= offset && (endPos >= offset2 || last === numberOfRows - 1), 'error', firstRowPos, endPos, offset, offset2, firstException, lastException);\r\n        return { first: first, last: last, firstRowPos: firstRowPos, endPos: endPos };\r\n    }\r\n}\r\nexport function frozenDelta(current, target) {\r\n    var clength = current.length;\r\n    var tlength = target.length;\r\n    if (clength === 0) {\r\n        return { added: target, removed: [], common: 0 };\r\n    }\r\n    if (tlength === 0) {\r\n        return { added: [], removed: current, common: 0 };\r\n    }\r\n    if (clength === tlength) { //since sorted and left increasing true\r\n        return { added: [], removed: [], common: clength };\r\n    }\r\n    var removed = current.slice(Math.min(tlength, clength));\r\n    var added = target.slice(Math.min(tlength, clength));\r\n    return { added: added, removed: removed, common: clength - removed.length };\r\n}\r\nexport function updateFrozen(old, columns, first) {\r\n    var oldLast = old.length === 0 ? 0 : old[old.length - 1] + 1;\r\n    var added = [];\r\n    var removed = [];\r\n    for (var i = old.length - 1; i >= 0; --i) {\r\n        var index = old[i];\r\n        if (index >= first) {\r\n            removed.push(old.pop());\r\n        }\r\n        else {\r\n            // can stop since sorted and it will never happen again\r\n            break;\r\n        }\r\n    }\r\n    //added\r\n    for (var i = oldLast; i < first; ++i) {\r\n        if (columns[i].frozen) {\r\n            added.push(i);\r\n            old.push(i);\r\n        }\r\n    }\r\n    return { target: old, added: added, removed: removed };\r\n}\r\n//# sourceMappingURL=logic.js.map","/**\r\n * scrolling result\r\n */\r\nexport var EScrollResult;\r\n(function (EScrollResult) {\r\n    /**\r\n     * nothing has changed\r\n     */\r\n    EScrollResult[EScrollResult[\"NONE\"] = 0] = \"NONE\";\r\n    /**\r\n     * all rows needed to be recreated\r\n     */\r\n    EScrollResult[EScrollResult[\"ALL\"] = 1] = \"ALL\";\r\n    /**\r\n     * unknown\r\n     */\r\n    EScrollResult[EScrollResult[\"SOME\"] = 2] = \"SOME\";\r\n    /**\r\n     * some rows are added at the bottom\r\n     */\r\n    EScrollResult[EScrollResult[\"SOME_BOTTOM\"] = 3] = \"SOME_BOTTOM\";\r\n    /**\r\n     * some rows are added at the top\r\n     */\r\n    EScrollResult[EScrollResult[\"SOME_TOP\"] = 4] = \"SOME_TOP\";\r\n})(EScrollResult || (EScrollResult = {}));\r\n//# sourceMappingURL=IMixin.js.map","var PREFIX = 'le';\r\n/**\r\n * @internal\r\n * @param suffix suffix to suffix\r\n */\r\nexport function cssClass(suffix) {\r\n    if (!suffix) {\r\n        return PREFIX;\r\n    }\r\n    return PREFIX + \"-\" + suffix;\r\n}\r\nexport var CSS_CLASS_LOADING = cssClass('loading');\r\nexport var CSS_CLASS_FROZEN = cssClass('frozen');\r\nexport var CSS_CLASS_HIDDEN = cssClass('hidden');\r\nexport var CSS_CLASS_MULTI = cssClass('multi');\r\nexport var CSS_CLASS_EVEN = cssClass('even');\r\nexport var CSS_CLASS_SHIFTED = cssClass('shifted');\r\nexport var CSS_CLASS_SCROLLBAR_TESTER = cssClass('scrollbar-tester');\r\nexport var CSS_CLASS_HEADER = cssClass('header');\r\nexport var CSS_CLASS_BODY = cssClass('body');\r\nexport var CSS_CLASS_FOOTER = cssClass('footer');\r\nexport var CSS_CLASS_THEAD = cssClass('thead');\r\nexport var CSS_CLASS_TBODY = cssClass('tbody');\r\nexport var CSS_CLASS_TR = cssClass('tr');\r\nexport var CSS_CLASS_TH = cssClass('th');\r\nexport var CSS_CLASS_TD = cssClass('td');\r\nexport var CSS_CLASS_SCROLLING = cssClass('scrolling');\r\nexport var CSS_CLASS_ROW_ANIMATION = cssClass('row-animation');\r\n//# sourceMappingURL=index.js.map","import { ABORTED, isAbortAble } from './abortAble';\r\nimport { defaultPhases, EAnimationMode, noAnimationChange } from './animation';\r\nimport KeyFinder from './animation/KeyFinder';\r\nimport { addScroll, clear, defaultMode, removeScroll } from './internal';\r\nimport { isScrollEventWaiting } from './internal/scroll';\r\nimport { range } from './logic';\r\nimport { EScrollResult } from './mixin';\r\nimport { cssClass, CSS_CLASS_EVEN, CSS_CLASS_FOOTER, CSS_CLASS_LOADING, CSS_CLASS_ROW_ANIMATION, CSS_CLASS_SCROLLING, CSS_CLASS_TR } from './styles';\r\nexport function isLoadingCell(node) {\r\n    return node.classList.contains(CSS_CLASS_LOADING);\r\n}\r\n/**\r\n * base class for creating a scalable table renderer based on rows\r\n */\r\nvar ARowRenderer = /** @class */ (function () {\r\n    function ARowRenderer(body, options) {\r\n        var _this = this;\r\n        if (options === void 0) { options = {}; }\r\n        this.body = body;\r\n        this.pool = [];\r\n        this.loadingPool = [];\r\n        this.loading = new WeakMap();\r\n        /**\r\n         * currently visible slice\r\n         */\r\n        this.visible = {\r\n            first: 0,\r\n            forcedFirst: 0,\r\n            last: -1,\r\n            forcedLast: -1\r\n        };\r\n        /**\r\n         * position of the first visible row in pixel\r\n         * @type {number}\r\n         */\r\n        this.visibleFirstRowPos = 0;\r\n        this.scrollListener = null;\r\n        this.lastScrollInfo = null;\r\n        this.abortAnimation = function () { return undefined; };\r\n        this.options = {\r\n            async: defaultMode,\r\n            minScrollDelta: 10,\r\n            mixins: [],\r\n            scrollingHint: false,\r\n            batchSize: 10,\r\n            striped: false,\r\n            viewportOversize: 200\r\n        };\r\n        this.adapter = this.createAdapter();\r\n        Object.assign(this.options, options);\r\n        this.mixins = this.options.mixins.map(function (mixinClass) { return new mixinClass(_this.adapter); });\r\n        this.fragment = body.ownerDocument.createDocumentFragment();\r\n    }\r\n    /**\r\n     * register another mixin to this renderer\r\n     * @param {IMixinClass} mixinClass the mixin class to instantitiate\r\n     * @param options optional constructor options\r\n     */\r\n    ARowRenderer.prototype.addMixin = function (mixinClass, options) {\r\n        this.mixins.push(new mixinClass(this.adapter, options));\r\n    };\r\n    ARowRenderer.prototype.createAdapter = function () {\r\n        var _this = this;\r\n        var r = {\r\n            visible: this.visible,\r\n            addAtBeginning: this.addAtBeginning.bind(this),\r\n            addAtBottom: this.addAtBottom.bind(this),\r\n            removeFromBeginning: this.removeFromBeginning.bind(this),\r\n            removeFromBottom: this.removeFromBottom.bind(this),\r\n            updateOffset: this.updateOffset.bind(this),\r\n            isScrollEventWaiting: function () { return isScrollEventWaiting(_this.bodyScroller, _this.options.async); }\r\n        };\r\n        Object.defineProperties(r, {\r\n            visibleFirstRowPos: {\r\n                get: function () { return _this.visibleFirstRowPos; },\r\n                enumerable: true\r\n            },\r\n            context: {\r\n                get: function () { return _this.context; },\r\n                enumerable: true\r\n            },\r\n            scrollOffset: {\r\n                get: function () { return _this.lastScrollInfo ? _this.lastScrollInfo.top : 0; },\r\n                enumerable: true\r\n            },\r\n            scrollTotal: {\r\n                get: function () { return _this.lastScrollInfo ? _this.lastScrollInfo.height : _this.bodyScroller.clientHeight; },\r\n                enumerable: true\r\n            }\r\n        });\r\n        return r;\r\n    };\r\n    Object.defineProperty(ARowRenderer.prototype, \"bodyScroller\", {\r\n        /**\r\n         * get the scrolling container i.e. parent of the body element\r\n         * @returns {HTMLElement}\r\n         */\r\n        get: function () {\r\n            return this.body.parentElement;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ARowRenderer.prototype, \"bodySizer\", {\r\n        get: function () {\r\n            var parent = this.bodyScroller;\r\n            var sizer = Array.from(parent.children).find(function (d) { return d.tagName.toLowerCase() === 'footer'; });\r\n            if (sizer) {\r\n                return sizer;\r\n            }\r\n            var s = parent.ownerDocument.createElement('footer');\r\n            s.classList.add(CSS_CLASS_FOOTER, cssClass(\"footer-\" + this.idPrefix));\r\n            parent.insertBefore(s, parent.firstChild);\r\n            return s;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * initializes the table and register the onscroll listener\r\n     * @returns {void} nothing\r\n     */\r\n    ARowRenderer.prototype.init = function () {\r\n        var _this = this;\r\n        var scroller = this.bodyScroller;\r\n        var old = addScroll(scroller, this.options.async, this.scrollListener = function (act) {\r\n            _this.lastScrollInfo = act;\r\n            if (Math.abs(old.top - act.top) < _this.options.minScrollDelta && Math.abs(old.height - act.height) < _this.options.minScrollDelta) {\r\n                return;\r\n            }\r\n            var isGoingDown = act.top > old.top;\r\n            old = act;\r\n            _this.onScrolledVertically(act.top, act.height, isGoingDown);\r\n            if (_this.options.scrollingHint) {\r\n                _this.body.classList.remove(CSS_CLASS_SCROLLING);\r\n            }\r\n        });\r\n        if (this.options.scrollingHint) {\r\n            addScroll(scroller, 'animation', function () { return _this.body.classList.add(CSS_CLASS_SCROLLING); });\r\n        }\r\n        this.recreate();\r\n    };\r\n    /**\r\n     * destroys this renderer and unregisters all event listeners\r\n     */\r\n    ARowRenderer.prototype.destroy = function () {\r\n        removeScroll(this.bodyScroller, this.scrollListener);\r\n        this.body.remove();\r\n    };\r\n    ARowRenderer.cleanUp = function (item) {\r\n        item.style.height = null;\r\n    };\r\n    ARowRenderer.prototype.select = function (index) {\r\n        var item;\r\n        var result;\r\n        if (this.pool.length > 0) {\r\n            item = this.pool.pop();\r\n            result = this.updateRow(item, index);\r\n        }\r\n        else if (this.loadingPool.length > 0) {\r\n            item = this.loadingPool.pop();\r\n            item.classList.remove(CSS_CLASS_LOADING);\r\n            result = this.createRow(item, index);\r\n        }\r\n        else {\r\n            item = this.body.ownerDocument.createElement('div');\r\n            item.classList.add(CSS_CLASS_TR, cssClass(\"tr-\" + this.idPrefix));\r\n            result = this.createRow(item, index);\r\n        }\r\n        item.dataset.index = String(index);\r\n        if (this.options.striped) {\r\n            item.classList.toggle(CSS_CLASS_EVEN, index % 2 === 0);\r\n        }\r\n        return { item: item, result: result };\r\n    };\r\n    ARowRenderer.prototype.selectProxy = function () {\r\n        var proxy;\r\n        if (this.loadingPool.length > 0) {\r\n            proxy = this.loadingPool.pop();\r\n        }\r\n        else {\r\n            proxy = this.body.ownerDocument.createElement('div');\r\n            proxy.classList.add(CSS_CLASS_LOADING, CSS_CLASS_TR, cssClass(\"tr-\" + this.idPrefix));\r\n        }\r\n        return proxy;\r\n    };\r\n    ARowRenderer.prototype.recycle = function (item) {\r\n        ARowRenderer.cleanUp(item);\r\n        // check if the original dom element is still being manipulated\r\n        if (this.loading.has(item)) {\r\n            var abort = this.loading.get(item);\r\n            abort.abort();\r\n        }\r\n        else {\r\n            this.pool.push(item);\r\n        }\r\n    };\r\n    ARowRenderer.prototype.proxy = function (item, result) {\r\n        var _this = this;\r\n        if (!isAbortAble(result)) {\r\n            return item;\r\n        }\r\n        var abort = result;\r\n        //lazy loading\r\n        var real = item;\r\n        var proxy = this.selectProxy();\r\n        // copy attributes\r\n        proxy.dataset.index = real.dataset.index;\r\n        proxy.style.height = real.style.height;\r\n        this.loading.set(proxy, abort);\r\n        abort.then(function (result) {\r\n            if (result === ABORTED) {\r\n                //aborted can recycle the real one\r\n                ARowRenderer.cleanUp(real);\r\n                _this.pool.push(real);\r\n            }\r\n            else {\r\n                //fully loaded\r\n                _this.body.replaceChild(real, proxy);\r\n            }\r\n            _this.loading.delete(proxy);\r\n            ARowRenderer.cleanUp(proxy);\r\n            _this.loadingPool.push(proxy);\r\n        });\r\n        return proxy;\r\n    };\r\n    ARowRenderer.prototype.create = function (index) {\r\n        var _a = this.select(index), item = _a.item, result = _a.result;\r\n        var _b = this.context, ex = _b.exceptionsLookup, padding = _b.padding;\r\n        if (ex.has(index)) {\r\n            item.style.height = ex.get(index) - padding(index) + \"px\";\r\n        }\r\n        return this.proxy(item, result);\r\n    };\r\n    ARowRenderer.prototype.removeAll = function (perform) {\r\n        if (perform === void 0) { perform = true; }\r\n        var b = this.body;\r\n        if (!perform) {\r\n            return Array.from(b.children);\r\n        }\r\n        var torecycle = [];\r\n        while (b.lastElementChild) {\r\n            var i = b.lastElementChild;\r\n            b.removeChild(i);\r\n            this.recycle(i);\r\n            torecycle.push(i);\r\n        }\r\n        return torecycle;\r\n    };\r\n    /**\r\n     * triggers and visual update of all visible rows\r\n     */\r\n    ARowRenderer.prototype.update = function () {\r\n        var _this = this;\r\n        var first = this.visible.first;\r\n        var fragment = this.fragment;\r\n        var items = Array.from(this.body.children);\r\n        clear(this.body);\r\n        items.forEach(function (item, i) {\r\n            if (_this.loading.has(item)) {\r\n                // still loading\r\n                fragment.appendChild(item);\r\n                return;\r\n            }\r\n            var abort = _this.updateRow(item, i + first);\r\n            fragment.appendChild(_this.proxy(item, abort));\r\n        });\r\n        this.body.appendChild(fragment);\r\n    };\r\n    /**\r\n     * utility to execute a function for each visible row\r\n     * @param {(row: HTMLElement, rowIndex: number) => void} callback callback to execute\r\n     * @param {boolean} inplace whether the DOM changes should be performed inplace instead of in a fragment\r\n     */\r\n    ARowRenderer.prototype.forEachRow = function (callback, inplace) {\r\n        var _this = this;\r\n        if (inplace === void 0) { inplace = false; }\r\n        var rows = Array.from(this.body.children);\r\n        var fragment = this.fragment;\r\n        if (!inplace) {\r\n            clear(this.body);\r\n        }\r\n        rows.forEach(function (row, index) {\r\n            if (!isLoadingCell(row) && row.dataset.animation !== 'update_remove' && row.dataset.animation !== 'hide') {\r\n                //skip loading ones and temporary ones\r\n                callback(row, index + _this.visible.first);\r\n            }\r\n            if (!inplace) {\r\n                fragment.appendChild(row);\r\n            }\r\n        });\r\n        if (!inplace) {\r\n            this.body.appendChild(fragment);\r\n        }\r\n    };\r\n    ARowRenderer.prototype.removeFromBeginning = function (from, to, perform) {\r\n        if (perform === void 0) { perform = true; }\r\n        return this.remove(from, to, true, perform);\r\n    };\r\n    ARowRenderer.prototype.removeFromBottom = function (from, to, perform) {\r\n        if (perform === void 0) { perform = true; }\r\n        return this.remove(from, to, false, perform);\r\n    };\r\n    ARowRenderer.prototype.remove = function (from, to, fromBeginning, perform) {\r\n        if (perform === void 0) { perform = true; }\r\n        if (to < from) {\r\n            return;\r\n        }\r\n        var b = this.body;\r\n        var torecycle = [];\r\n        // console.log('remove', fromBeginning, (to - from) + 1, this.body.childElementCount - ((to - from) + 1));\r\n        var act = (fromBeginning ? b.firstChild : b.lastChild);\r\n        for (var i = from; i <= to; ++i) {\r\n            var item = act;\r\n            act = (fromBeginning ? act.nextSibling : act.previousSibling);\r\n            if (perform) {\r\n                b.removeChild(item);\r\n                this.recycle(item);\r\n            }\r\n            torecycle.push(item);\r\n        }\r\n        return torecycle;\r\n    };\r\n    ARowRenderer.prototype.addAtBeginning = function (from, to, perform) {\r\n        if (perform === void 0) { perform = true; }\r\n        if (to < from) {\r\n            return;\r\n        }\r\n        // console.log('add', (to - from) + 1, this.body.childElementCount + ((to - from) + 1));\r\n        var fragment = this.fragment;\r\n        if (from === to && perform) {\r\n            this.body.insertBefore(this.create(from), this.body.firstChild);\r\n            return;\r\n        }\r\n        for (var i = from; i <= to; ++i) {\r\n            fragment.appendChild(this.create(i));\r\n        }\r\n        if (perform) {\r\n            this.body.insertBefore(fragment, this.body.firstChild);\r\n        }\r\n        return fragment;\r\n    };\r\n    ARowRenderer.prototype.addAtBottom = function (from, to, perform) {\r\n        if (perform === void 0) { perform = true; }\r\n        if (to < from) {\r\n            return;\r\n        }\r\n        // console.log('add_b', (to - from) + 1, this.body.childElementCount + ((to - from) + 1));\r\n        if (from === to && perform) {\r\n            this.body.appendChild(this.create(from));\r\n            return;\r\n        }\r\n        var fragment = this.fragment;\r\n        for (var i = from; i <= to; ++i) {\r\n            fragment.appendChild(this.create(i));\r\n        }\r\n        if (perform) {\r\n            this.body.appendChild(fragment);\r\n        }\r\n        return fragment;\r\n    };\r\n    ARowRenderer.prototype.updateOffset = function (firstRowPos) {\r\n        this.visibleFirstRowPos = firstRowPos;\r\n        this.updateSizer(firstRowPos);\r\n    };\r\n    ARowRenderer.prototype.updateSizer = function (firstRowPos) {\r\n        var totalHeight = this.context.totalHeight;\r\n        setTransform(this.body, 0, firstRowPos.toFixed(0));\r\n        setTransform(this.bodySizer, 0, Math.max(0, totalHeight - 1).toFixed(0));\r\n    };\r\n    /**\r\n     * removes all rows and recreates the table\r\n     * @param {IAnimationContext} ctx optional animation context to create a transition between the previous and the current tables\r\n     * @returns {void} nothing\r\n     */\r\n    ARowRenderer.prototype.recreate = function (ctx) {\r\n        this.abortAnimation();\r\n        if (ctx) {\r\n            return this.recreateAnimated(ctx);\r\n        }\r\n        return this.recreatePure();\r\n    };\r\n    ARowRenderer.prototype.recreatePure = function () {\r\n        var context = this.context;\r\n        var scroller = this.bodyScroller;\r\n        //update first to avoid resetting scrollTop\r\n        this.updateOffset(0);\r\n        this.removeAll();\r\n        this.clearPool();\r\n        var _a = range(scroller.scrollTop, scroller.clientHeight, context.defaultRowHeight, context.exceptions, context.numberOfRows), first = _a.first, last = _a.last, firstRowPos = _a.firstRowPos;\r\n        this.visible.first = this.visible.forcedFirst = first;\r\n        this.visible.last = this.visible.forcedLast = last;\r\n        if (first < 0) {\r\n            // empty\r\n            this.updateOffset(0);\r\n            return;\r\n        }\r\n        this.addAtBottom(first, last);\r\n        this.updateOffset(firstRowPos);\r\n    };\r\n    ARowRenderer.prototype.recreateAnimated = function (ctx) {\r\n        var _this = this;\r\n        var lookup = new Map();\r\n        var prev = new KeyFinder(ctx.previous, ctx.previousKey);\r\n        var cur = new KeyFinder(this.context, ctx.currentKey);\r\n        var next = range(this.bodyScroller.scrollTop, this.bodyScroller.clientHeight, cur.context.defaultRowHeight, cur.context.exceptions, cur.context.numberOfRows);\r\n        {\r\n            var rows_1 = Array.from(this.body.children);\r\n            var old = Object.assign({}, this.visible);\r\n            //store the current rows in a lookup and clear\r\n            clear(this.body);\r\n            prev.positions(old.first, Math.min(old.last, old.first + rows_1.length), this.visibleFirstRowPos, function (i, key, pos) {\r\n                var n = rows_1[i];\r\n                if (n) { // shouldn't happen that it is not there\r\n                    lookup.set(key, { n: n, pos: pos, i: i });\r\n                }\r\n                // else {\r\n                //  console.error(i, key, pos, rows);\r\n                //}\r\n            });\r\n        }\r\n        this.visible.first = this.visible.forcedFirst = next.first;\r\n        this.visible.last = this.visible.forcedLast = next.last;\r\n        var fragment = this.fragment;\r\n        var animation = [];\r\n        var nodeY = next.firstRowPos;\r\n        cur.positions(next.first, next.last, next.firstRowPos, function (i, key, pos) {\r\n            var node;\r\n            var mode = EAnimationMode.UPDATE;\r\n            var previous;\r\n            if (lookup.has(key)) {\r\n                // still visible\r\n                var item = lookup.get(key);\r\n                lookup.delete(key);\r\n                // update height\r\n                item.n.dataset.index = String(i);\r\n                node = _this.proxy(item.n, _this.updateRow(item.n, i));\r\n                previous = {\r\n                    index: item.i,\r\n                    y: item.pos,\r\n                    height: prev.exceptionHeightOf(item.i, true)\r\n                };\r\n            }\r\n            else {\r\n                // need a new row\r\n                var old = prev.posByKey(key);\r\n                // maybe not visible  before so keep in place\r\n                node = _this.create(i);\r\n                mode = old.index < 0 ? EAnimationMode.SHOW : EAnimationMode.UPDATE_CREATE;\r\n                previous = {\r\n                    index: old.index,\r\n                    y: old.pos >= 0 ? old.pos : pos,\r\n                    height: old.index < 0 ? cur.exceptionHeightOf(i, true) : prev.exceptionHeightOf(old.index, true)\r\n                };\r\n            }\r\n            animation.push({\r\n                node: node,\r\n                key: key,\r\n                mode: mode,\r\n                previous: previous,\r\n                nodeY: nodeY,\r\n                nodeYCurrentHeight: pos,\r\n                current: {\r\n                    index: i,\r\n                    y: pos,\r\n                    height: cur.exceptionHeightOf(i)\r\n                }\r\n            });\r\n            node.style.transform = \"translate(0, \" + (nodeY - pos) + \"px)\";\r\n            nodeY += previous.height + (previous.index < 0 ? cur.padding(i) : prev.padding(previous.index));\r\n            fragment.appendChild(node);\r\n        });\r\n        var nodeYCurrentHeight = next.endPos;\r\n        // items that are going to be removed\r\n        lookup.forEach(function (item, key) {\r\n            // calculate their next position\r\n            var r = cur.posByKey(key);\r\n            // maybe not visible anymore, keep in place\r\n            var nextPos = r.pos >= 0 ? r.pos : item.pos;\r\n            var node = item.n;\r\n            // located at addedPos\r\n            // should end up at nextPos\r\n            // was previously at item.pos\r\n            node.style.transform = \"translate(0, \" + (item.pos - nodeY) + \"px)\";\r\n            fragment.appendChild(node);\r\n            var prevHeight = prev.exceptionHeightOf(item.i, true);\r\n            animation.push({\r\n                node: item.n,\r\n                key: key,\r\n                mode: r.index < 0 ? EAnimationMode.HIDE : EAnimationMode.UPDATE_REMOVE,\r\n                previous: {\r\n                    index: item.i,\r\n                    y: item.pos,\r\n                    height: prevHeight\r\n                },\r\n                nodeY: nodeY,\r\n                nodeYCurrentHeight: nodeYCurrentHeight,\r\n                current: {\r\n                    index: r.index,\r\n                    y: nextPos,\r\n                    height: r.index < 0 ? null : cur.exceptionHeightOf(r.index)\r\n                }\r\n            });\r\n            nodeYCurrentHeight += r.index < 0 ? cur.context.defaultRowHeight : (cur.exceptionHeightOf(r.index, true) + cur.padding(r.index));\r\n            nodeY += prevHeight + prev.padding(item.i);\r\n        });\r\n        this.updateOffset(next.firstRowPos);\r\n        this.animate(animation, ctx.phases || defaultPhases, prev, cur, fragment);\r\n    };\r\n    ARowRenderer.prototype.animate = function (animation, phases, previousFinder, currentFinder, fragment) {\r\n        var _this = this;\r\n        if (animation.length <= 0) {\r\n            this.body.appendChild(fragment);\r\n            return;\r\n        }\r\n        var currentTimer = -1;\r\n        var actPhase = 0;\r\n        var executePhase = function (phase, items) {\r\n            if (items === void 0) { items = animation; }\r\n            items.forEach(function (anim) { return phase.apply(anim, previousFinder, currentFinder); });\r\n        };\r\n        var run = function () {\r\n            //dummy log for forcing dom update\r\n            console.assert(animation[0].node.offsetTop >= 0, 'dummy log for forcing dom update');\r\n            executePhase(phases[actPhase++]);\r\n            // shifted by one since already added through ++\r\n            if (actPhase < phases.length) {\r\n                // schedule the next one\r\n                var next = phases[actPhase];\r\n                currentTimer = self.setTimeout(run, next.delay);\r\n                return;\r\n            }\r\n            // last one\r\n            var body = _this.body.classList;\r\n            Array.from(body).forEach(function (v) {\r\n                if (v.startsWith(cssClass()) && v.endsWith('-animation')) {\r\n                    body.remove(v);\r\n                }\r\n            });\r\n            // clean up\r\n            animation.forEach(function (_a) {\r\n                var node = _a.node, mode = _a.mode;\r\n                if (mode !== EAnimationMode.UPDATE_REMOVE && mode !== EAnimationMode.HIDE) {\r\n                    return;\r\n                }\r\n                node.remove();\r\n                node.style.transform = null;\r\n                _this.recycle(node);\r\n            });\r\n            _this.abortAnimation = function () { return undefined; };\r\n            currentTimer = -1;\r\n        };\r\n        // execute all phases having a delay of zero\r\n        while (phases[actPhase].delay === 0) {\r\n            executePhase(phases[actPhase++]);\r\n        }\r\n        // after the initial one\r\n        var body = this.body;\r\n        this.body.appendChild(fragment);\r\n        var dummyAnimation = [];\r\n        animation = animation.filter(function (d) {\r\n            if (noAnimationChange(d, previousFinder.context.defaultRowHeight, currentFinder.context.defaultRowHeight)) {\r\n                dummyAnimation.push(d);\r\n                return false;\r\n            }\r\n            return true;\r\n        });\r\n        if (dummyAnimation.length > 0) {\r\n            // execute all phases for them\r\n            phases.slice(actPhase).forEach(function (phase) { return executePhase(phase, dummyAnimation); });\r\n        }\r\n        if (animation.length === 0) {\r\n            return;\r\n        }\r\n        body.classList.add(CSS_CLASS_ROW_ANIMATION);\r\n        (new Set(animation.map(function (d) { return d.mode; }))).forEach(function (mode) {\r\n            // add class but map to UPDATE only\r\n            body.classList.add(cssClass(EAnimationMode[mode].toLowerCase().split('_')[0] + \"-animation\"));\r\n        });\r\n        this.abortAnimation = function () {\r\n            if (currentTimer <= 0) {\r\n                return;\r\n            }\r\n            // abort by removing\r\n            clearTimeout(currentTimer);\r\n            currentTimer = -1;\r\n            // run the last phase\r\n            actPhase = phases.length - 1;\r\n            run();\r\n        };\r\n        // next tick such that DOM will be updated\r\n        currentTimer = self.setTimeout(run, phases[actPhase].delay);\r\n    };\r\n    /**\r\n     * clears the row pool used for faster creation\r\n     */\r\n    ARowRenderer.prototype.clearPool = function () {\r\n        // clear pool\r\n        this.pool.splice(0, this.pool.length);\r\n    };\r\n    /**\r\n     * triggers a revalidation of the current scrolling offest\r\n     */\r\n    ARowRenderer.prototype.revalidate = function () {\r\n        var scroller = this.bodyScroller;\r\n        this.onScrolledVertically(scroller.scrollTop, scroller.clientHeight, true);\r\n        this.updateOffset(this.visibleFirstRowPos);\r\n    };\r\n    /**\r\n     * scrolling vertically\r\n     * @param {number} scrollTop top scrolling\r\n     * @param {number} clientHeight visible height\r\n     * @param {boolean} isGoingDown hint whether the scrollTop increases\r\n     * @return {EScrollResult} full in case of a full rebuild or partial update\r\n     */\r\n    ARowRenderer.prototype.onScrolledVertically = function (scrollTop, clientHeight, isGoingDown) {\r\n        var shift = this.options.viewportOversize;\r\n        var shiftTop = Math.max(0, scrollTop - shift);\r\n        var scrollResult = this.onScrolledImpl(shiftTop, clientHeight + shift + (scrollTop - shiftTop));\r\n        for (var _i = 0, _a = this.mixins; _i < _a.length; _i++) {\r\n            var mixin = _a[_i];\r\n            mixin.onScrolled(isGoingDown, scrollResult);\r\n        }\r\n        return scrollResult;\r\n    };\r\n    ARowRenderer.prototype.shiftLast = function (current, currentDelta) {\r\n        var b = this.options.batchSize;\r\n        if (currentDelta >= b) {\r\n            return current;\r\n        }\r\n        var total = this.context.numberOfRows;\r\n        return Math.min(total - 1, current + (this.options.batchSize - currentDelta));\r\n    };\r\n    ARowRenderer.prototype.shiftFirst = function (current, currentFirstRow, currentDelta) {\r\n        var b = this.options.batchSize;\r\n        if (currentDelta >= b || current <= 0) {\r\n            return { first: current, firstRowPos: currentFirstRow };\r\n        }\r\n        var first = Math.max(0, current - (this.options.batchSize - currentDelta));\r\n        var _a = this.context, exceptionsLookup = _a.exceptionsLookup, defaultRowHeight = _a.defaultRowHeight;\r\n        var firstRowPos = currentFirstRow;\r\n        for (var i = first; i < current; ++i) {\r\n            if (exceptionsLookup.has(i)) {\r\n                firstRowPos -= exceptionsLookup.get(i);\r\n            }\r\n            else {\r\n                firstRowPos -= defaultRowHeight;\r\n            }\r\n        }\r\n        return { first: first, firstRowPos: firstRowPos };\r\n    };\r\n    ARowRenderer.prototype.onScrolledImpl = function (scrollTop, clientHeight) {\r\n        var context = this.context;\r\n        var _a = range(scrollTop, clientHeight, context.defaultRowHeight, context.exceptions, context.numberOfRows), first = _a.first, last = _a.last, firstRowPos = _a.firstRowPos;\r\n        var visible = this.visible;\r\n        visible.forcedFirst = first;\r\n        visible.forcedLast = last;\r\n        if ((first - visible.first) >= 0 && (last - visible.last) <= 0) {\r\n            //nothing to do\r\n            return EScrollResult.NONE;\r\n        }\r\n        var r = EScrollResult.SOME;\r\n        var torecycle;\r\n        var toadd;\r\n        var toaddBottom = false;\r\n        if (first > visible.last || last < visible.first) {\r\n            //no overlap, clean and draw everything\r\n            //console.log(`ff added: ${last - first + 1} removed: ${visibleLast - visibleFirst + 1} ${first}:${last} ${offset}`);\r\n            //removeRows(visibleFirst, visibleLast);\r\n            torecycle = this.removeAll(false);\r\n            toadd = this.addAtBottom(first, last, false);\r\n            toaddBottom = true;\r\n            r = EScrollResult.ALL;\r\n        }\r\n        else if (first < visible.first) {\r\n            //some first rows missing and some last rows to much\r\n            //console.log(`up added: ${visibleFirst - first + 1} removed: ${visibleLast - last + 1} ${first}:${last} ${offset}`);\r\n            var toRemove = visible.last - (last + 1);\r\n            if (toRemove >= this.options.batchSize) {\r\n                torecycle = this.removeFromBottom(last + 1, visible.last, false);\r\n            }\r\n            else {\r\n                last = visible.last;\r\n            }\r\n            var shift = this.shiftFirst(first, firstRowPos, visible.first - 1 - first);\r\n            first = shift.first;\r\n            firstRowPos = shift.firstRowPos;\r\n            toadd = this.addAtBeginning(first, visible.first - 1, false);\r\n            toaddBottom = false;\r\n            r = EScrollResult.SOME_TOP;\r\n        }\r\n        else {\r\n            //console.log(`do added: ${last - visibleLast + 1} removed: ${first - visibleFirst + 1} ${first}:${last} ${offset}`);\r\n            //some last rows missing and some first rows to much\r\n            var toRemove = first - 1 - visible.first;\r\n            if (toRemove >= this.options.batchSize) {\r\n                torecycle = this.removeFromBeginning(visible.first, first - 1, false);\r\n            }\r\n            else {\r\n                first = visible.first;\r\n                firstRowPos = this.visibleFirstRowPos;\r\n            }\r\n            last = this.shiftLast(last, last - visible.last + 1);\r\n            toadd = this.addAtBottom(visible.last + 1, last, false);\r\n            toaddBottom = true;\r\n            r = EScrollResult.SOME_BOTTOM;\r\n        }\r\n        visible.first = first;\r\n        visible.last = last;\r\n        this.updateOffset(firstRowPos);\r\n        this.manipulate(torecycle, toadd, toaddBottom);\r\n        return r;\r\n    };\r\n    ARowRenderer.prototype.manipulate = function (toRecycle, toAdd, bottom) {\r\n        if (toRecycle) {\r\n            for (var _i = 0, toRecycle_1 = toRecycle; _i < toRecycle_1.length; _i++) {\r\n                var item = toRecycle_1[_i];\r\n                item.remove();\r\n                this.recycle(item);\r\n            }\r\n        }\r\n        if (!toAdd) {\r\n            return;\r\n        }\r\n        if (bottom) {\r\n            this.body.appendChild(toAdd);\r\n        }\r\n        else {\r\n            this.body.insertBefore(toAdd, this.body.firstChild);\r\n        }\r\n    };\r\n    return ARowRenderer;\r\n}());\r\nexport { ARowRenderer };\r\nexport default ARowRenderer;\r\nexport function setTransform(elem, x, y) {\r\n    var text = \"translate(\" + x + \"px, \" + y + \"px)\";\r\n    var anyelem = elem;\r\n    if (anyelem.__transform__ === text) {\r\n        return;\r\n    }\r\n    anyelem.__transform__ = elem.style.transform = text;\r\n}\r\n//# sourceMappingURL=ARowRenderer.js.map","// import manually import './style.scss';\r\nfunction assignStyles(target, source) {\r\n    for (var _i = 0, _a = Object.keys(source); _i < _a.length; _i++) {\r\n        var key = _a[_i];\r\n        var v = source[key];\r\n        if (!v.endsWith(' !important')) {\r\n            if (target[key] !== v) {\r\n                target[key] = v;\r\n            }\r\n            continue;\r\n        }\r\n        // handle special important case\r\n        var plain = v.slice(0, -' !important'.length);\r\n        if (target[key] === plain) {\r\n            continue;\r\n        }\r\n        target[key] = plain;\r\n        // see https://gist.github.com/youssman/745578062609e8acac9f\r\n        var hyphen = key.replace(/([a-zA-Z])(?=[A-Z])/g, '$1-').toLowerCase();\r\n        target.setProperty(hyphen, plain, 'important');\r\n    }\r\n}\r\nvar StyleManager = /** @class */ (function () {\r\n    /**\r\n     * the parent element to append this managed style\r\n     * @param {HTMLElement} root\r\n     */\r\n    function StyleManager(root) {\r\n        this.rules = [];\r\n        this.testVerifyTimeout = -1;\r\n        this.node = root.ownerDocument.createElement('style');\r\n        this.node.appendChild(root.ownerDocument.createTextNode('')); // for webkit?\r\n        root.appendChild(this.node);\r\n    }\r\n    StyleManager.prototype.destroy = function () {\r\n        this.node.remove();\r\n    };\r\n    StyleManager.prototype.verifySheet = function () {\r\n        var _this = this;\r\n        var sheet = this.sheet;\r\n        if (!sheet) {\r\n            if (this.testVerifyTimeout >= 0) {\r\n                return;\r\n            }\r\n            // test till attached\r\n            this.testVerifyTimeout = self.setTimeout(function () {\r\n                _this.testVerifyTimeout = -1;\r\n                _this.verifySheet();\r\n            }, 20);\r\n            return;\r\n        }\r\n        var rules = sheet.cssRules;\r\n        if (rules.length === this.rules.length && this.rules.every(function (d, i) { return rules[i].selectorText === d.selector; })) {\r\n            // same\r\n            return;\r\n        }\r\n        console.warn('invalid sheet rules detected');\r\n        var l = rules.length;\r\n        for (var i = 0; i < l; ++i) {\r\n            sheet.deleteRule(i);\r\n        }\r\n        // create all\r\n        for (var _i = 0, _a = this.rules; _i < _a.length; _i++) {\r\n            var rule = _a[_i];\r\n            var index = sheet.insertRule(rule.selector + \" {}\", sheet.cssRules.length);\r\n            var cssRule = sheet.cssRules[index];\r\n            rule.selector = cssRule.selectorText;\r\n            assignStyles(cssRule.style, rule.style);\r\n        }\r\n    };\r\n    Object.defineProperty(StyleManager.prototype, \"sheet\", {\r\n        get: function () {\r\n            return this.node.sheet;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    StyleManager.prototype.getSheetRule = function (index) {\r\n        var sheet = this.sheet;\r\n        return sheet ? sheet.cssRules[index] : null;\r\n    };\r\n    /**\r\n     * add a custom css rule\r\n     * @param {string} id unique id of the rule for later identification\r\n     * @param {string} selector the css selector\r\n     * @param {Partial<CSSStyleDeclaration>} style the style attributes\r\n     * @returns {string} the id again\r\n     */\r\n    StyleManager.prototype.addRule = function (id, selector, style) {\r\n        this.verifySheet();\r\n        var sheet = this.sheet;\r\n        if (!sheet) {\r\n            // upon next update\r\n            this.rules.push({ id: id, selector: selector, style: style });\r\n            return;\r\n        }\r\n        var index = sheet.insertRule(selector + \" {}\", sheet.cssRules.length);\r\n        var rule = sheet.cssRules[index];\r\n        this.rules.push({ id: id, selector: rule.selectorText, style: style });\r\n        assignStyles(rule.style, style);\r\n        return id;\r\n    };\r\n    /**\r\n     * updates or add a rule, see @addRule\r\n     * @param {string} id unique id of the rule for later identification\r\n     * @param {string} selector the css selector\r\n     * @param {Partial<CSSStyleDeclaration>} style the style attributes\r\n     * @returns {string} the id again\r\n     */\r\n    StyleManager.prototype.updateRule = function (id, selector, style) {\r\n        this.verifySheet();\r\n        var index = this.rules.findIndex(function (d) { return d.id === id; });\r\n        if (index < 0) {\r\n            return this.addRule(id, selector, style);\r\n        }\r\n        var stored = this.rules[index];\r\n        stored.selector = selector;\r\n        stored.style = style;\r\n        var rule = this.getSheetRule(index);\r\n        if (rule) {\r\n            if (rule.selectorText.replace(/\\s/gm, '') !== selector.replace(/\\s/gm, '')) { //ignoring white space\r\n                rule.selectorText = selector;\r\n                stored.selector = rule.selectorText;\r\n            }\r\n            assignStyles(rule.style, style);\r\n        }\r\n        return id;\r\n    };\r\n    /**\r\n     * deletes the given rule by id\r\n     * @param {string} id the rule to delete\r\n     */\r\n    StyleManager.prototype.deleteRule = function (id) {\r\n        this.verifySheet();\r\n        var index = this.rules.findIndex(function (d) { return d.id === id; });\r\n        if (index < 0) {\r\n            return;\r\n        }\r\n        this.rules.splice(index, 1);\r\n        var sheet = this.sheet;\r\n        if (sheet) {\r\n            sheet.deleteRule(index);\r\n        }\r\n    };\r\n    Object.defineProperty(StyleManager.prototype, \"ruleNames\", {\r\n        /**\r\n         * get a list of all registered rule ids\r\n         * @returns {string[]}\r\n         */\r\n        get: function () {\r\n            return this.rules.map(function (d) { return d.id; });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return StyleManager;\r\n}());\r\nexport default StyleManager;\r\n//# sourceMappingURL=StyleManager.js.map","import * as tslib_1 from \"tslib\";\r\nimport { addScroll } from '../internal';\r\nimport { cssClass, CSS_CLASS_BODY, CSS_CLASS_FOOTER, CSS_CLASS_HEADER, CSS_CLASS_SCROLLBAR_TESTER, CSS_CLASS_SHIFTED, CSS_CLASS_TBODY, CSS_CLASS_THEAD } from '../styles';\r\nimport StyleManager from './StyleManager';\r\nexport function setTemplate(root, id) {\r\n    id = id.startsWith('#') ? id.slice(1) : id;\r\n    root.innerHTML = \"\\n  <header id=\\\"header-\" + id + \"\\\" class=\\\"\" + CSS_CLASS_HEADER + \" \" + cssClass(\"header-\" + id) + \"\\\">\\n    <article class=\\\"\" + CSS_CLASS_THEAD + \" \" + cssClass(\"thead-\" + id) + \"\\\"></article>\\n  </header>\\n  <main id=\\\"body-\" + id + \"\\\" class=\\\"\" + CSS_CLASS_BODY + \" \" + cssClass(\"body-\" + id) + \"\\\">\\n    <footer class=\\\"\" + CSS_CLASS_FOOTER + \"\\\">&nbsp;</footer>\\n    <article class=\\\"\" + CSS_CLASS_TBODY + \" \" + cssClass(\"tbody-\" + id) + \"\\\"></article>\\n  </main>\";\r\n    return root;\r\n}\r\n/**\r\n * generates the HTML Ids used for the header and body article of a table\r\n * @param {string} tableId base table id\r\n * @param {boolean} asSelector flag whether to prepend with # for CSS selector\r\n * @return {ISelectors} the table ids used for header and body\r\n */\r\nexport function tableIds(tableId) {\r\n    return {\r\n        thead: \"thead-\" + tableId,\r\n        tbody: \"tbody-\" + tableId,\r\n        tr: \"tr-\" + tableId,\r\n        th: \"th-\" + tableId,\r\n        td: \"td-\" + tableId\r\n    };\r\n}\r\nexport function tableCSSClasses(tableId) {\r\n    var ids = tableIds(tableId);\r\n    return {\r\n        thead: cssClass(ids.thead),\r\n        tbody: cssClass(ids.tbody),\r\n        tr: cssClass(ids.tr),\r\n        th: cssClass(ids.th),\r\n        td: cssClass(ids.td)\r\n    };\r\n}\r\n/**\r\n * utility for custom generated CSS rules with a focus on dynamically generated grid layouts\r\n */\r\nvar GridStyleManager = /** @class */ (function (_super) {\r\n    tslib_1.__extends(GridStyleManager, _super);\r\n    function GridStyleManager(root, id) {\r\n        var _this = _super.call(this, root) || this;\r\n        _this.id = id.startsWith('#') ? id.slice(1) : id;\r\n        _this.ids = tableIds(_this.id);\r\n        _this.cssClasses = tableCSSClasses(_this.id);\r\n        var headerScroller = root.getElementsByTagName('header')[0];\r\n        var bodyScroller = root.getElementsByTagName('main')[0];\r\n        // async since style needs to be added to dom first\r\n        self.setTimeout(function () {\r\n            var width = measureScrollbar(root).width;\r\n            _this.updateRule('__scollBarFix2', \"#header-\" + _this.id + \" > article:last-of-type\", {\r\n                borderRight: width + \"px solid transparent\"\r\n            });\r\n        }, 20);\r\n        var old = headerScroller.scrollLeft;\r\n        // update frozen and sync header with body\r\n        addScroll(bodyScroller, 'animation', function (act) {\r\n            var newValue = act.left;\r\n            if (old !== newValue) {\r\n                old = headerScroller.scrollLeft = newValue;\r\n            }\r\n            root.classList.toggle(CSS_CLASS_SHIFTED, act.left > 0);\r\n        });\r\n        return _this;\r\n    }\r\n    /**\r\n     * updates the column widths and default row height for a table\r\n     * @param {number} defaultRowHeight\r\n     * @param {IColumn[]} columns\r\n     * @param {number} frozenShift shift frozen colums\r\n     * @param {string} tableId optional tableId in case of multiple tables within the same engine\r\n     * @param {string} unit\r\n     */\r\n    GridStyleManager.prototype.update = function (defaultRowHeight, columns, padding, frozenShift, tableId, unit) {\r\n        if (unit === void 0) { unit = 'px'; }\r\n        var ids = tableIds(tableId);\r\n        var selectors = tableCSSClasses(tableId);\r\n        var total = \"\" + columns.reduce(function (a, b, i) { return a + b.width + padding(i); }, 0) + unit;\r\n        this.updateRule(\"__heightsRule\" + selectors.tr, \".\" + selectors.tr, {\r\n            height: defaultRowHeight + \"px\",\r\n            width: total\r\n        });\r\n        this.updateRule(\"__heightsRule\" + selectors.tbody, \"#\" + ids.tbody, {\r\n            width: total\r\n        });\r\n        this.updateColumns(columns, padding, selectors, frozenShift, unit);\r\n    };\r\n    /**\r\n     * removes a given tableId if not needed anymore\r\n     * @param {string} tableId tableId to remove\r\n     */\r\n    GridStyleManager.prototype.remove = function (tableId) {\r\n        var selectors = tableCSSClasses(tableId);\r\n        this.deleteRule(\"__heightsRule\" + selectors.tr);\r\n        this.deleteRule(\"__heightsRule\" + selectors.tbody);\r\n        var prefix = \"__col\" + selectors.td + \"_\";\r\n        var rules = this.ruleNames.reduce(function (a, b) { return a + (b.startsWith(prefix) ? 1 : 0); }, 0);\r\n        // reset\r\n        for (var i = 0; i < rules; ++i) {\r\n            this.deleteRule(\"\" + prefix + i);\r\n        }\r\n    };\r\n    GridStyleManager.prototype.updateColumns = function (columns, padding, cssSelectors, frozenShift, unit) {\r\n        var _this = this;\r\n        if (unit === void 0) { unit = 'px'; }\r\n        var prefix = \"__col\" + cssSelectors.td + \"_\";\r\n        var rules = new Set(this.ruleNames.filter(function (d) { return d.startsWith(prefix); }));\r\n        var acc = 0;\r\n        columns.forEach(function (c, i) {\r\n            var th = \".\" + cssSelectors.th + \"[data-id=\\\"\" + c.id + \"\\\"]\";\r\n            var thStyles = {\r\n                width: \"\" + c.width + unit\r\n            };\r\n            var td = \".\" + cssSelectors.td + \"[data-id=\\\"\" + c.id + \"\\\"]\";\r\n            var tdStyles = {\r\n                transform: \"translateX(\" + acc + unit + \")\",\r\n                width: \"\" + c.width + unit\r\n            };\r\n            if (c.frozen) {\r\n                thStyles.left = acc + \"px\";\r\n                _this.updateRule(\"\" + prefix + td + \"F\", \".\" + cssSelectors.td + \".\" + CSS_CLASS_SHIFTED + \"[data-id=\\\"\" + c.id + \"\\\"]\", {\r\n                    transform: \"translateX(0)\",\r\n                    left: \"\" + (acc + frozenShift) + unit\r\n                });\r\n                rules.delete(\"\" + prefix + td + \"F\");\r\n            }\r\n            _this.updateRule(\"\" + prefix + th, th, thStyles);\r\n            rules.delete(\"\" + prefix + th);\r\n            _this.updateRule(\"\" + prefix + td, td, tdStyles);\r\n            rules.delete(\"\" + prefix + td);\r\n            acc += c.width + padding(i);\r\n        });\r\n        rules.forEach(function (d) { return _this.deleteRule(d); });\r\n    };\r\n    return GridStyleManager;\r\n}(StyleManager));\r\nexport default GridStyleManager;\r\n/**\r\n * measure the width and height of the scrollbars\r\n * based on Slick grid implementation\r\n * @param root\r\n */\r\nfunction measureScrollbar(root) {\r\n    var body = root.ownerDocument.body;\r\n    body.insertAdjacentHTML('beforeend', \"\\n    <div class=\\\"\" + CSS_CLASS_SCROLLBAR_TESTER + \"\\\"><div></div></div>\\n  \");\r\n    var elem = body.lastElementChild;\r\n    var width = elem.offsetWidth - elem.clientWidth;\r\n    var height = elem.offsetHeight - elem.clientHeight;\r\n    elem.remove();\r\n    return { width: width, height: height };\r\n}\r\n//# sourceMappingURL=GridStyleManager.js.map","import { setTransform } from '../ARowRenderer';\r\nimport { addScroll, defaultMode } from '../internal';\r\nimport { GridStyleManager, tableCSSClasses, tableIds } from '../style';\r\nimport { cssClass, CSS_CLASS_BODY, CSS_CLASS_FOOTER, CSS_CLASS_HEADER, CSS_CLASS_MULTI, CSS_CLASS_TBODY, CSS_CLASS_THEAD } from '../styles';\r\n/**\r\n * manager of multiple columns separated by separators each an own row renderer\r\n */\r\nvar MultiTableRowRenderer = /** @class */ (function () {\r\n    function MultiTableRowRenderer(node, htmlId, options) {\r\n        var _this = this;\r\n        if (options === void 0) { options = {}; }\r\n        this.node = node;\r\n        this.tableId = 0;\r\n        this.sections = [];\r\n        this.options = {\r\n            columnPadding: 0,\r\n            async: defaultMode,\r\n            minScrollDelta: 30\r\n        };\r\n        Object.assign(this.options, options);\r\n        htmlId = htmlId.startsWith('#') ? htmlId.slice(1) : htmlId;\r\n        node.id = htmlId;\r\n        node.innerHTML = \"<header id=\\\"header-\" + htmlId + \"\\\" class=\\\"\" + CSS_CLASS_HEADER + \" \" + cssClass(\"header-\" + htmlId) + \"\\\">\\n      <footer class=\\\"\" + CSS_CLASS_FOOTER + \" \" + cssClass(\"footer-\" + htmlId) + \"\\\">&nbsp;</footer>\\n    </header>\\n    <main id=\\\"body-\" + htmlId + \"\\\" class=\\\"\" + CSS_CLASS_BODY + \" \" + cssClass(\"body-\" + htmlId) + \"\\\">\\n      <footer class=\\\"\" + CSS_CLASS_FOOTER + \"\\\">&nbsp;</footer>\\n    </main>\";\r\n        node.classList.add(cssClass(), CSS_CLASS_MULTI, 'lineup-engine');\r\n        this.style = new GridStyleManager(this.node, htmlId);\r\n        var old = addScroll(this.main, this.options.async, function (act) {\r\n            if (Math.abs(old.left - act.left) < _this.options.minScrollDelta && Math.abs(old.width - act.width) < _this.options.minScrollDelta) {\r\n                return;\r\n            }\r\n            var isGoingRight = act.left > old.left;\r\n            old = act;\r\n            _this.onScrolledHorizontally(act.left, act.width, isGoingRight);\r\n        });\r\n    }\r\n    MultiTableRowRenderer.prototype.update = function () {\r\n        var _this = this;\r\n        this.onScrolledHorizontally(this.main.scrollLeft, this.main.clientWidth, false);\r\n        var offset = 0;\r\n        this.sections.forEach(function (s) {\r\n            s.body.style.left = s.header.style.left = offset + \"px\";\r\n            offset += s.width + _this.options.columnPadding;\r\n        });\r\n    };\r\n    MultiTableRowRenderer.prototype.onScrolledHorizontally = function (scrollLeft, clientWidth, isGoingRight) {\r\n        var _this = this;\r\n        var offset = 0;\r\n        var scrollEnd = scrollLeft + clientWidth;\r\n        this.sections.forEach(function (s) {\r\n            var end = offset + s.width;\r\n            if (end < scrollLeft || offset > scrollEnd) {\r\n                s.hide();\r\n            }\r\n            else {\r\n                s.show(Math.max(0, scrollLeft - offset), Math.min(scrollEnd - offset, s.width), isGoingRight);\r\n            }\r\n            offset = end + _this.options.columnPadding;\r\n        });\r\n        this.updateOffset();\r\n    };\r\n    MultiTableRowRenderer.prototype.updateOffset = function () {\r\n        var _this = this;\r\n        var headerFooter = this.header.getElementsByTagName('footer')[0];\r\n        var bodyFooter = this.main.getElementsByTagName('footer')[0];\r\n        var maxHeight = Math.max.apply(Math, [0].concat(this.sections.map(function (d) { return d.height; })));\r\n        var total = this.sections.reduce(function (a, c) { return a + c.width + _this.options.columnPadding; }, 0);\r\n        setTransform(headerFooter, total, 0);\r\n        setTransform(bodyFooter, total, maxHeight);\r\n    };\r\n    MultiTableRowRenderer.prototype.destroy = function () {\r\n        this.sections.forEach(function (d) { return d.destroy(); });\r\n        this.node.remove();\r\n    };\r\n    Object.defineProperty(MultiTableRowRenderer.prototype, \"doc\", {\r\n        get: function () {\r\n            return this.node.ownerDocument;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(MultiTableRowRenderer.prototype, \"header\", {\r\n        get: function () {\r\n            return this.node.getElementsByTagName('header')[0];\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(MultiTableRowRenderer.prototype, \"main\", {\r\n        get: function () {\r\n            return this.node.getElementsByTagName('main')[0];\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * push another table to this instance\r\n     * @param {ITableFactory<T extends ITableSection>} factory factory for the table\r\n     * @param extras additional arguments to provide for the factory\r\n     * @returns {T} the table instance\r\n     */\r\n    MultiTableRowRenderer.prototype.pushTable = function (factory) {\r\n        var extras = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            extras[_i - 1] = arguments[_i];\r\n        }\r\n        var header = this.doc.createElement('article');\r\n        var body = this.doc.createElement('article');\r\n        var tableId = this.node.id + \"T\" + this.tableId++;\r\n        var ids = tableIds(tableId);\r\n        var cssClasses = tableCSSClasses(tableId);\r\n        header.id = ids.thead;\r\n        header.classList.add(CSS_CLASS_THEAD, cssClasses.thead);\r\n        body.id = ids.tbody;\r\n        body.classList.add(CSS_CLASS_TBODY, cssClasses.tbody);\r\n        this.header.insertBefore(header, this.header.lastElementChild); //before the footer\r\n        this.main.appendChild(body);\r\n        var table = factory.apply(void 0, [header, body, tableId, this.style].concat(extras));\r\n        table.init();\r\n        this.sections.push(table);\r\n        this.update();\r\n        return table;\r\n    };\r\n    /**\r\n     * push another separator to the manager\r\n     * @param {ISeparatorFactory<T extends ITableSection>} factory the factory to create the separator\r\n     * @param extras optional additional arguments\r\n     * @returns {T} the new created separator\r\n     */\r\n    MultiTableRowRenderer.prototype.pushSeparator = function (factory) {\r\n        var extras = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            extras[_i - 1] = arguments[_i];\r\n        }\r\n        var header = this.doc.createElement('section');\r\n        var body = this.doc.createElement('section');\r\n        header.classList.add(cssClass('header-separator'));\r\n        body.classList.add(cssClass('separator'));\r\n        this.header.insertBefore(header, this.header.lastElementChild); //before the footer\r\n        this.main.appendChild(body);\r\n        var separator = factory.apply(void 0, [header, body, this.style].concat(extras));\r\n        separator.init();\r\n        this.sections.push(separator);\r\n        this.update();\r\n        return separator;\r\n    };\r\n    /**\r\n     * removes a given table section\r\n     * @param {ITableSection} section section to remove\r\n     * @returns {boolean} successful flag\r\n     */\r\n    MultiTableRowRenderer.prototype.remove = function (section) {\r\n        var index = this.sections.indexOf(section);\r\n        if (index < 0) {\r\n            return false;\r\n        }\r\n        this.sections.splice(index, 1);\r\n        section.destroy();\r\n        this.update();\r\n        return true;\r\n    };\r\n    MultiTableRowRenderer.prototype.clear = function () {\r\n        this.sections.splice(0, this.sections.length).forEach(function (s) { return s.destroy(); });\r\n        this.update();\r\n    };\r\n    /**\r\n     * triggers and update because of a change in width of one or more table sections\r\n     */\r\n    MultiTableRowRenderer.prototype.widthChanged = function () {\r\n        this.update();\r\n    };\r\n    return MultiTableRowRenderer;\r\n}());\r\nexport default MultiTableRowRenderer;\r\n//# sourceMappingURL=MultiTableRowRenderer.js.map","import ADialog from './ADialog';\nimport Column from '../../model';\nimport {cssClass} from '../../styles';\n\nexport default class DialogManager {\n\n  private readonly escKeyListener = (evt: KeyboardEvent) => {\n    if (evt.which === 27) {\n      this.removeLast();\n    }\n  }\n\n  private readonly openDialogs: ADialog[] = [];\n  readonly node: HTMLElement;\n\n  constructor(doc = document) {\n    this.node = doc.createElement('div');\n    this.node.classList.add(cssClass('backdrop'));\n    this.node.innerHTML = `<div class=\"${cssClass('backdrop-bg')}\"></div>`;\n    this.node.onclick = () => {\n      this.removeAll();\n    };\n  }\n\n  setHighlight(mask: { left: number, top: number, width: number, height: number }) {\n    const area = <HTMLElement>this.node.firstElementChild;\n    // @see http://bennettfeely.com/clippy/ -> select `Frame` example\n    // use webkit prefix for safari\n    area.style.clipPath = (<any>area.style).webkitClipPath = `polygon(\n      0% 0%,\n      0% 100%,\n      ${mask.left}px 100%,\n      ${mask.left}px ${mask.top}px,\n      ${mask.left + mask.width}px ${mask.top}px,\n      ${mask.left + mask.width}px ${mask.top + mask.height}px,\n      ${mask.left}px ${mask.top + mask.height}px,\n      ${mask.left}px 100%,\n      100% 100%,\n      100% 0%\n    )`;\n  }\n\n  setHighlightColumn(column: Column) {\n    const root = <HTMLElement>this.node.parentElement!;\n    if (!root) {\n      this.clearHighlight();\n      return;\n    }\n    const header = <HTMLElement>root.querySelector(`.${cssClass('header')}[data-col-id=\"${column.id}\"]`);\n    if (!header) {\n      this.clearHighlight();\n      return;\n    }\n    const base = header.getBoundingClientRect();\n    const offset = root.getBoundingClientRect();\n    this.setHighlight({\n      left: base.left - offset.left,\n      top: base.top - offset.top,\n      width: base.width,\n      height: offset.height\n    });\n  }\n\n  clearHighlight() {\n    const area = <HTMLElement>this.node.firstElementChild;\n    area.style.clipPath = null;\n  }\n\n  private removeLast() {\n    if (this.openDialogs.length === 0) {\n      return;\n    }\n    this.remove(this.openDialogs[this.openDialogs.length - 1]);\n  }\n\n  removeAll() {\n    if (this.openDialogs.length === 0) {\n      return;\n    }\n    const all = this.openDialogs.splice(0, this.openDialogs.length);\n    all.forEach((d) => d.destroy());\n    this.takeDown();\n  }\n\n  remove(dialog: ADialog) {\n    const index = this.openDialogs.indexOf(dialog);\n    if (index < 0) {\n      return false;\n    }\n    // destroy self and all levels below that = after that\n    const destroyed = this.openDialogs.splice(index, this.openDialogs.length - index);\n    destroyed.reverse().forEach((d) => d.destroy());\n\n    if (this.openDialogs.length === 0) {\n      this.takeDown();\n    }\n    return true;\n  }\n\n  removeAboveLevel(level: number) {\n    // hide all dialogs which have a higher or equal level to the newly opened one\n    this.openDialogs.filter((d) => d.level >= level).reverse().forEach((d) => this.remove(d));\n  }\n\n  removeLike(dialog: ADialog) {\n    const similar = this.openDialogs.find((d) => dialog.equals(d));\n    if (!similar) {\n      return false;\n    }\n    this.remove(similar);\n    return true;\n  }\n\n  private setUp() {\n    this.node.ownerDocument!.addEventListener('keyup', this.escKeyListener, {\n      passive: true\n    });\n    this.node.style.display = 'block';\n  }\n\n  private takeDown() {\n    this.clearHighlight();\n    this.node.ownerDocument!.removeEventListener('keyup', this.escKeyListener);\n    this.node.style.display = null;\n  }\n\n  push(dialog: ADialog) {\n    this.removeAboveLevel(dialog.level);\n\n    if (this.openDialogs.length === 0) {\n      this.setUp();\n    }\n\n    this.openDialogs.push(dialog);\n  }\n}\n","import { range } from '../logic';\r\nimport { EScrollResult } from './IMixin';\r\n/**\r\n * mixin that prefetches rows depending on the scrolling direction for faster rendering\r\n */\r\nvar PrefetchMixin = /** @class */ (function () {\r\n    function PrefetchMixin(adapter, options) {\r\n        this.adapter = adapter;\r\n        this.prefetchTimeout = -1;\r\n        this.cleanupTimeout = -1;\r\n        this.options = {\r\n            prefetchRows: 20,\r\n            cleanUpRows: 10,\r\n            delay: 200\r\n        };\r\n        Object.assign(this.options, options);\r\n        return this;\r\n    }\r\n    PrefetchMixin.prototype.prefetchDown = function () {\r\n        this.prefetchTimeout = -1;\r\n        if (this.adapter.isScrollEventWaiting()) {\r\n            return;\r\n        }\r\n        var context = this.adapter.context;\r\n        var nextLast = Math.min(this.adapter.visible.forcedLast + this.options.prefetchRows, context.numberOfRows - 1);\r\n        // add some rows in advance\r\n        if (this.adapter.visible.last === nextLast && this.adapter.visible.last >= (this.adapter.visible.forcedLast + this.options.prefetchRows)) {\r\n            return;\r\n        }\r\n        this.adapter.addAtBottom(this.adapter.visible.last + 1, nextLast);\r\n        //console.log('prefetch', visibleFirst, visibleLast + 1, '=>', nextLast, ranking.children.length);\r\n        this.adapter.visible.last = nextLast;\r\n    };\r\n    PrefetchMixin.prototype.prefetchUp = function () {\r\n        this.prefetchTimeout = -1;\r\n        if (this.adapter.isScrollEventWaiting() || this.adapter.visible.first <= (this.adapter.visible.forcedFirst - this.options.prefetchRows)) {\r\n            return;\r\n        }\r\n        var context = this.adapter.context;\r\n        var fakeOffset = Math.max(this.adapter.scrollOffset - this.options.prefetchRows * context.defaultRowHeight, 0);\r\n        var height = this.adapter.scrollTotal;\r\n        var _a = range(fakeOffset, height, context.defaultRowHeight, context.exceptions, context.numberOfRows), first = _a.first, firstRowPos = _a.firstRowPos;\r\n        if (first === this.adapter.visible.first) {\r\n            return;\r\n        }\r\n        var frozenShift = this.adapter.syncFrozen ? this.adapter.syncFrozen(first) : 0;\r\n        this.adapter.addAtBeginning(first, this.adapter.visible.first - 1, frozenShift);\r\n        //console.log('prefetch up ', visibleFirst, '=>', first, visibleLast, ranking.children.length);\r\n        this.adapter.visible.first = first;\r\n        this.adapter.updateOffset(firstRowPos);\r\n    };\r\n    PrefetchMixin.prototype.triggerPrefetch = function (isGoingDown) {\r\n        if (this.prefetchTimeout >= 0) {\r\n            clearTimeout(this.prefetchTimeout);\r\n        }\r\n        var prefetchDownPossible = this.adapter.visible.last < (this.adapter.visible.forcedLast + this.options.prefetchRows);\r\n        var prefetchUpPossible = this.adapter.visible.first > (this.adapter.visible.forcedFirst - this.options.prefetchRows);\r\n        var isLast = this.adapter.visible.last === this.adapter.context.numberOfRows;\r\n        var isFirst = this.adapter.visible.first === 0;\r\n        if ((isGoingDown && !prefetchDownPossible && !isLast) || (!isGoingDown && !prefetchUpPossible && !isFirst)) {\r\n            return;\r\n        }\r\n        // go down if we are already at the top, too\r\n        var op = (isGoingDown || isFirst) ? this.prefetchDown.bind(this) : this.prefetchUp.bind(this);\r\n        this.prefetchTimeout = self.setTimeout(op, this.options.delay);\r\n    };\r\n    PrefetchMixin.prototype.cleanUpTop = function (first) {\r\n        this.cleanupTimeout = -1;\r\n        if (this.adapter.isScrollEventWaiting()) {\r\n            return;\r\n        }\r\n        var newFirst = Math.max(0, first - this.options.cleanUpRows);\r\n        if (newFirst <= this.adapter.visible.first) {\r\n            return;\r\n        }\r\n        //console.log('cleanup top');\r\n        var frozenShift = this.adapter.syncFrozen ? this.adapter.syncFrozen(newFirst) : 0;\r\n        this.adapter.removeFromBeginning(this.adapter.visible.first, newFirst - 1, frozenShift);\r\n        var context = this.adapter.context;\r\n        //console.log('cleanup up ', visibleFirst, '=>', newFirst, visibleLast, ranking.children.length);\r\n        var shift = (newFirst - this.adapter.visible.first) * context.defaultRowHeight;\r\n        if (context.exceptions.length > 0) {\r\n            for (var i = this.adapter.visible.first; i < newFirst; ++i) {\r\n                if (context.exceptionsLookup.has(i)) {\r\n                    shift += context.exceptionsLookup.get(i) - context.defaultRowHeight;\r\n                }\r\n            }\r\n        }\r\n        this.adapter.visible.first = newFirst;\r\n        this.adapter.updateOffset(this.adapter.visibleFirstRowPos + shift);\r\n        this.prefetchDown();\r\n    };\r\n    PrefetchMixin.prototype.cleanUpBottom = function (last) {\r\n        this.cleanupTimeout = -1;\r\n        var newLast = last + this.options.cleanUpRows;\r\n        if (this.adapter.visible.last <= newLast) {\r\n            return;\r\n        }\r\n        //console.log('cleanup bottom');\r\n        this.adapter.removeFromBottom(newLast + 1, this.adapter.visible.last);\r\n        this.adapter.visible.last = newLast;\r\n        this.prefetchUp();\r\n    };\r\n    PrefetchMixin.prototype.triggerCleanUp = function (first, last, isGoingDown) {\r\n        if (this.cleanupTimeout >= 0) {\r\n            clearTimeout(this.cleanupTimeout);\r\n        }\r\n        if ((isGoingDown && (first - this.options.cleanUpRows) <= this.adapter.visible.first) || (!isGoingDown && this.adapter.visible.last <= (last + this.options.cleanUpRows))) {\r\n            return;\r\n        }\r\n        this.cleanupTimeout = self.setTimeout(isGoingDown ? this.cleanUpTop.bind(this) : this.cleanUpBottom.bind(this), this.options.delay, isGoingDown ? first : last);\r\n    };\r\n    PrefetchMixin.prototype.onScrolled = function (isGoingDown, scrollResult) {\r\n        if (this.adapter.isScrollEventWaiting()) {\r\n            return;\r\n        }\r\n        if (scrollResult !== EScrollResult.ALL && this.options.cleanUpRows > 0) {\r\n            this.triggerCleanUp(this.adapter.visible.forcedFirst, this.adapter.visible.forcedLast, isGoingDown);\r\n        }\r\n        if (scrollResult !== EScrollResult.NONE && this.options.prefetchRows > 0) {\r\n            this.triggerPrefetch(isGoingDown);\r\n        }\r\n    };\r\n    return PrefetchMixin;\r\n}());\r\nexport default PrefetchMixin;\r\n//# sourceMappingURL=PrefetchMixin.js.map","import { ABORTED, isAbortAble, isAsyncUpdate } from '../../abortAble';\r\nimport { isLoadingCell } from '../../ARowRenderer';\r\nimport { clear } from '../../internal';\r\nimport { isScrollEventWaiting } from '../../internal/scroll';\r\nimport { range, updateFrozen } from '../../logic';\r\nimport { EScrollResult } from '../../mixin';\r\nimport { cssClass, CSS_CLASS_FROZEN, CSS_CLASS_LOADING, CSS_CLASS_SHIFTED, CSS_CLASS_TD, CSS_CLASS_TH } from '../../styles';\r\nvar debug = false;\r\n/**\r\n * @internal\r\n */\r\nvar ACellAdapter = /** @class */ (function () {\r\n    function ACellAdapter(header, style, tableId) {\r\n        var _this = this;\r\n        var mixinClasses = [];\r\n        for (var _i = 3; _i < arguments.length; _i++) {\r\n            mixinClasses[_i - 3] = arguments[_i];\r\n        }\r\n        this.header = header;\r\n        this.style = style;\r\n        this.tableId = tableId;\r\n        /**\r\n         * pool of cells per column\r\n         * @type {Array}\r\n         */\r\n        this.cellPool = [];\r\n        this.loading = new WeakMap();\r\n        this.visibleColumns = {\r\n            frozen: [],\r\n            first: 0,\r\n            forcedFirst: 0,\r\n            last: -1,\r\n            forcedLast: -1\r\n        };\r\n        this.visibleFirstColumnPos = 0;\r\n        this.horizontallyShifted = false;\r\n        this.columnAdapter = this.createColumnAdapter();\r\n        this.columnMixins = mixinClasses.map(function (mixinClass) { return new mixinClass(_this.columnAdapter); });\r\n        this.columnFragment = header.ownerDocument.createDocumentFragment();\r\n    }\r\n    ACellAdapter.prototype.leftShift = function () {\r\n        var ctx = this.context;\r\n        var frozen = this.visibleColumns.frozen.reduce(function (a, d) { return a + ctx.columns[d].width + ctx.column.padding(d); }, 0);\r\n        return this.visibleFirstColumnPos - frozen;\r\n    };\r\n    Object.defineProperty(ACellAdapter.prototype, \"headerScroller\", {\r\n        get: function () {\r\n            return this.header.parentElement;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ACellAdapter.prototype.addColumnMixin = function (mixinClass, options) {\r\n        this.columnMixins.push(new mixinClass(this.columnAdapter, options));\r\n    };\r\n    ACellAdapter.prototype.createColumnAdapter = function () {\r\n        var _this = this;\r\n        var r = {\r\n            visible: this.visibleColumns,\r\n            addAtBeginning: this.addColumnAtStart.bind(this),\r\n            addAtBottom: this.addColumnAtEnd.bind(this),\r\n            removeFromBeginning: this.removeColumnFromStart.bind(this),\r\n            removeFromBottom: this.removeColumnFromEnd.bind(this),\r\n            updateOffset: this.updateColumnOffset.bind(this),\r\n            scroller: this.headerScroller,\r\n            syncFrozen: this.syncFrozen.bind(this),\r\n            isScrollEventWaiting: function () { return isScrollEventWaiting(_this.headerScroller, 'animation'); }\r\n        };\r\n        Object.defineProperties(r, {\r\n            visibleFirstRowPos: {\r\n                get: function () { return _this.visibleFirstColumnPos; },\r\n                enumerable: true\r\n            },\r\n            context: {\r\n                get: function () { return _this.context.column; },\r\n                enumerable: true\r\n            },\r\n            scrollOffset: {\r\n                get: function () { return _this.lastScrollInfo ? _this.lastScrollInfo.left : 0; },\r\n                enumerable: true\r\n            },\r\n            scrollTotal: {\r\n                get: function () { return _this.lastScrollInfo ? _this.lastScrollInfo.width : _this.headerScroller.clientWidth; },\r\n                enumerable: true\r\n            }\r\n        });\r\n        return r;\r\n    };\r\n    ACellAdapter.prototype.init = function () {\r\n        var _this = this;\r\n        var context = this.context;\r\n        this.style.update(context.defaultRowHeight - context.padding(-1), context.columns, context.column.padding, 0, this.tableId);\r\n        context.columns.forEach(function () {\r\n            //init pool\r\n            _this.cellPool.push([]);\r\n        });\r\n    };\r\n    ACellAdapter.prototype.onScrolledHorizontally = function (scrollLeft, clientWidth, isGoingRight) {\r\n        var scrollResult = this.onScrolledHorizontallyImpl(scrollLeft, clientWidth);\r\n        for (var _i = 0, _a = this.columnMixins; _i < _a.length; _i++) {\r\n            var mixin = _a[_i];\r\n            mixin.onScrolled(isGoingRight, scrollResult);\r\n        }\r\n        return scrollResult;\r\n    };\r\n    ACellAdapter.prototype.removeColumnFromStart = function (from, to, frozenShift) {\r\n        var _this = this;\r\n        if (frozenShift === void 0) { frozenShift = this.visibleColumns.frozen.length; }\r\n        this.forEachRow(function (row) {\r\n            _this.removeCellFromStart(row, from, to, frozenShift);\r\n        });\r\n        if (debug) {\r\n            this.verifyRows();\r\n        }\r\n    };\r\n    ACellAdapter.prototype.removeCellFromStart = function (row, from, to, frozenShift) {\r\n        for (var i = from; i <= to; ++i) {\r\n            var node = (frozenShift === 0 ? row.firstElementChild : row.children[frozenShift]);\r\n            node.remove();\r\n            this.recycleCell(node, i);\r\n        }\r\n        if (debug) {\r\n            verifyRow(row, -1, this.context.columns);\r\n        }\r\n    };\r\n    ACellAdapter.prototype.removeColumnFromEnd = function (from, to) {\r\n        var _this = this;\r\n        this.forEachRow(function (row) {\r\n            _this.removeCellFromEnd(row, from, to);\r\n        });\r\n        if (debug) {\r\n            this.verifyRows();\r\n        }\r\n    };\r\n    ACellAdapter.prototype.removeCellFromEnd = function (row, from, to) {\r\n        for (var i = to; i >= from; --i) {\r\n            var node = row.lastElementChild;\r\n            node.remove();\r\n            this.recycleCell(node, i);\r\n        }\r\n        if (debug) {\r\n            verifyRow(row, -1, this.context.columns);\r\n        }\r\n    };\r\n    ACellAdapter.prototype.removeFrozenCells = function (row, columnIndices, shift) {\r\n        for (var _i = 0, columnIndices_1 = columnIndices; _i < columnIndices_1.length; _i++) {\r\n            var columnIndex = columnIndices_1[_i];\r\n            var node = row.children[shift];\r\n            node.remove();\r\n            this.recycleCell(node, columnIndex);\r\n        }\r\n        if (debug) {\r\n            verifyRow(row, -1, this.context.columns);\r\n        }\r\n    };\r\n    ACellAdapter.prototype.removeFrozenColumns = function (columnIndices, shift) {\r\n        var _this = this;\r\n        this.forEachRow(function (row) {\r\n            _this.removeFrozenCells(row, columnIndices, shift);\r\n        });\r\n        if (debug) {\r\n            this.verifyRows();\r\n        }\r\n    };\r\n    ACellAdapter.prototype.removeAllColumns = function (includingFrozen) {\r\n        var _this = this;\r\n        this.forEachRow(function (row) {\r\n            _this.removeAllCells(row, includingFrozen);\r\n        });\r\n        if (debug) {\r\n            this.verifyRows();\r\n        }\r\n    };\r\n    ACellAdapter.prototype.removeAllCells = function (row, includingFrozen, shift) {\r\n        var _this = this;\r\n        if (shift === void 0) { shift = this.visibleColumns.first; }\r\n        var arr = Array.from(row.children);\r\n        var frozen = this.visibleColumns.frozen;\r\n        clear(row);\r\n        if (includingFrozen || frozen.length === 0) {\r\n            for (var _i = 0, frozen_1 = frozen; _i < frozen_1.length; _i++) {\r\n                var i = frozen_1[_i];\r\n                this.recycleCell(arr.shift(), i);\r\n            }\r\n        }\r\n        else {\r\n            // have frozen and keep them, so readd them\r\n            for (var _a = 0, frozen_2 = frozen; _a < frozen_2.length; _a++) {\r\n                var _1 = frozen_2[_a];\r\n                row.appendChild(arr.shift());\r\n            }\r\n        }\r\n        arr.forEach(function (item, i) {\r\n            _this.recycleCell(item, i + shift);\r\n        });\r\n        if (debug) {\r\n            verifyRow(row, -1, this.context.columns);\r\n        }\r\n    };\r\n    ACellAdapter.prototype.selectProxyCell = function (row, column, columns) {\r\n        var pool = this.cellPool[column];\r\n        var columnObj = columns[column];\r\n        var item;\r\n        var ready;\r\n        var pooled = pool.pop();\r\n        var r = pooled ? this.updateCell(pooled, row, columnObj) || pooled : this.createCell(this.header.ownerDocument, row, columnObj);\r\n        if (isAsyncUpdate(r)) {\r\n            item = r.item;\r\n            ready = r.ready;\r\n        }\r\n        else {\r\n            item = r;\r\n        }\r\n        if (item !== pooled) {\r\n            item.dataset.id = columnObj.id;\r\n            item.classList.add(CSS_CLASS_TD, this.style.cssClasses.td, cssClass(\"td-\" + this.tableId));\r\n        }\r\n        this.updateShiftedState(item, columnObj);\r\n        return { item: item, ready: ready };\r\n    };\r\n    ACellAdapter.prototype.handleCellReady = function (item, ready, column) {\r\n        var _this = this;\r\n        if (column === void 0) { column = -1; }\r\n        item.classList.add(CSS_CLASS_LOADING);\r\n        var abort = ready;\r\n        //lazy loading\r\n        this.loading.set(item, abort);\r\n        abort.then(function (result) {\r\n            _this.loading.delete(item);\r\n            item.classList.remove(CSS_CLASS_LOADING);\r\n            if (result === ABORTED && column >= 0) {\r\n                //aborted can recycle the real one\r\n                _this.cellPool[column].push(item);\r\n            }\r\n        });\r\n        return item;\r\n    };\r\n    ACellAdapter.prototype.selectCell = function (row, column, columns) {\r\n        var _a = this.selectProxyCell(row, column, columns), item = _a.item, ready = _a.ready;\r\n        if (!isAbortAble(ready)) {\r\n            return item;\r\n        }\r\n        return this.handleCellReady(item, ready, column);\r\n    };\r\n    ACellAdapter.prototype.updateShiftedState = function (node, col) {\r\n        node.classList.toggle(CSS_CLASS_SHIFTED, col.frozen && this.horizontallyShifted);\r\n    };\r\n    ACellAdapter.prototype.recycleCell = function (item, column) {\r\n        if (column === void 0) { column = -1; }\r\n        // check if the dom element is still being manipulated\r\n        if (this.loading.has(item)) {\r\n            var abort = this.loading.get(item);\r\n            abort.abort();\r\n        }\r\n        else if (!isLoadingCell(item) && column >= 0) {\r\n            this.cellPool[column].push(item);\r\n        }\r\n    };\r\n    ACellAdapter.prototype.addColumnAtStart = function (from, to, frozenShift) {\r\n        var _this = this;\r\n        if (frozenShift === void 0) { frozenShift = this.visibleColumns.frozen.length; }\r\n        var columns = this.context.columns;\r\n        this.forEachRow(function (row, rowIndex) {\r\n            _this.addCellAtStart(row, rowIndex, from, to, frozenShift, columns);\r\n        });\r\n        if (debug) {\r\n            this.verifyRows();\r\n        }\r\n    };\r\n    ACellAdapter.prototype.addCellAtStart = function (row, rowIndex, from, to, frozenShift, columns) {\r\n        if (debug) {\r\n            verifyRow(row, rowIndex, this.context.columns);\r\n        }\r\n        for (var i = to; i >= from; --i) {\r\n            var cell = this.selectCell(rowIndex, i, columns);\r\n            row.insertBefore(cell, frozenShift > 0 ? row.children[frozenShift] : row.firstChild);\r\n        }\r\n        if (debug) {\r\n            verifyRow(row, rowIndex, this.context.columns);\r\n        }\r\n    };\r\n    ACellAdapter.prototype.insertFrozenCells = function (row, rowIndex, columnIndices, shift, columns) {\r\n        var before = row.children[shift];\r\n        for (var _i = 0, columnIndices_2 = columnIndices; _i < columnIndices_2.length; _i++) {\r\n            var i = columnIndices_2[_i];\r\n            var cell = this.selectCell(rowIndex, i, columns);\r\n            if (before) {\r\n                row.insertBefore(cell, before);\r\n            }\r\n            else {\r\n                row.appendChild(cell);\r\n            }\r\n        }\r\n    };\r\n    ACellAdapter.prototype.insertFrozenColumns = function (columnIndices, shift) {\r\n        var _this = this;\r\n        var columns = this.context.columns;\r\n        this.forEachRow(function (row, rowIndex) {\r\n            _this.insertFrozenCells(row, rowIndex, columnIndices, shift, columns);\r\n        });\r\n    };\r\n    ACellAdapter.prototype.addColumnAtEnd = function (from, to) {\r\n        var _this = this;\r\n        var columns = this.context.columns;\r\n        this.forEachRow(function (row, rowIndex) {\r\n            _this.addCellAtEnd(row, rowIndex, from, to, columns);\r\n        });\r\n        if (debug) {\r\n            this.verifyRows();\r\n        }\r\n    };\r\n    ACellAdapter.prototype.verifyRows = function () {\r\n        var columns = this.context.columns;\r\n        this.forEachRow(function (row, rowIndex) { return verifyRow(row, rowIndex, columns); });\r\n    };\r\n    ACellAdapter.prototype.addCellAtEnd = function (row, rowIndex, from, to, columns) {\r\n        for (var i = from; i <= to; ++i) {\r\n            var cell = this.selectCell(rowIndex, i, columns);\r\n            row.appendChild(cell);\r\n        }\r\n        if (debug) {\r\n            verifyRow(row, rowIndex, this.context.columns);\r\n        }\r\n    };\r\n    ACellAdapter.prototype.updateHeaders = function () {\r\n        var _this = this;\r\n        var columns = this.context.columns;\r\n        Array.from(this.header.children).forEach(function (node, i) {\r\n            var base = node;\r\n            var col = columns[i];\r\n            var r = _this.updateHeader(base, col);\r\n            var n;\r\n            if (isAsyncUpdate(r)) {\r\n                n = _this.handleCellReady(r.item, r.ready, -1);\r\n            }\r\n            else {\r\n                n = r || base;\r\n            }\r\n            if (n === base) {\r\n                return;\r\n            }\r\n            n.dataset.id = col.id;\r\n            n.classList.add(CSS_CLASS_TH, _this.style.cssClasses.th, cssClass(\"th-\" + _this.tableId));\r\n            _this.header.replaceChild(base, n);\r\n        });\r\n    };\r\n    ACellAdapter.prototype.recreate = function (left, width) {\r\n        var _this = this;\r\n        var context = this.context;\r\n        this.style.update(context.defaultRowHeight - context.padding(-1), context.columns, context.column.padding, -this.leftShift(), this.tableId);\r\n        this.clearPool();\r\n        // init pool\r\n        for (var i = this.cellPool.length; i < context.columns.length; ++i) {\r\n            this.cellPool.push([]);\r\n        }\r\n        //create all header columns\r\n        {\r\n            var fragment_1 = this.columnFragment;\r\n            var document_1 = fragment_1.ownerDocument;\r\n            // create lookup cache to reuse headers\r\n            var ids_1 = new Map();\r\n            while (this.header.lastChild) {\r\n                var c = this.header.lastChild;\r\n                this.header.removeChild(c);\r\n                ids_1.set(c.dataset.id, c);\r\n            }\r\n            context.columns.forEach(function (col) {\r\n                var existing = ids_1.get(col.id);\r\n                var r = existing ? _this.updateHeader(existing, col) || existing : _this.createHeader(document_1, col);\r\n                var n;\r\n                if (isAsyncUpdate(r)) {\r\n                    n = _this.handleCellReady(r.item, r.ready, -1);\r\n                }\r\n                else {\r\n                    n = r;\r\n                }\r\n                if (n !== existing) {\r\n                    n.dataset.id = col.id;\r\n                    n.classList.add(CSS_CLASS_TH, _this.style.cssClasses.th, cssClass(\"th-\" + _this.tableId));\r\n                }\r\n                fragment_1.appendChild(n);\r\n            });\r\n            this.header.appendChild(fragment_1);\r\n        }\r\n        var _a = range(left, width, context.column.defaultRowHeight, context.column.exceptions, context.column.numberOfRows), first = _a.first, last = _a.last, firstRowPos = _a.firstRowPos;\r\n        this.visibleColumns.first = this.visibleColumns.forcedFirst = first;\r\n        this.visibleColumns.last = this.visibleColumns.forcedLast = last;\r\n        if (context.columns.some(function (c) { return c.frozen; })) {\r\n            var target = updateFrozen([], context.columns, first).target;\r\n            this.visibleColumns.frozen = target;\r\n        }\r\n        else {\r\n            this.visibleColumns.frozen = [];\r\n        }\r\n        this.updateColumnOffset(firstRowPos);\r\n    };\r\n    ACellAdapter.prototype.clearPool = function () {\r\n        this.cellPool.forEach(function (p) { return p.splice(0, p.length); });\r\n    };\r\n    ACellAdapter.prototype.updateColumnOffset = function (firstColumnPos) {\r\n        var changed = firstColumnPos !== this.visibleFirstColumnPos;\r\n        this.visibleFirstColumnPos = firstColumnPos;\r\n        if (changed) {\r\n            var context = this.context;\r\n            this.style.update(context.defaultRowHeight - context.padding(-1), context.columns, context.column.padding, -this.leftShift(), this.tableId);\r\n        }\r\n    };\r\n    ACellAdapter.prototype.createRow = function (node, rowIndex) {\r\n        var columns = this.context.columns;\r\n        var visible = this.visibleColumns;\r\n        if (visible.frozen.length > 0) {\r\n            for (var _i = 0, _a = visible.frozen; _i < _a.length; _i++) {\r\n                var i = _a[_i];\r\n                var cell = this.selectCell(rowIndex, i, columns);\r\n                node.appendChild(cell);\r\n            }\r\n        }\r\n        for (var i = visible.first; i <= visible.last; ++i) {\r\n            var cell = this.selectCell(rowIndex, i, columns);\r\n            node.appendChild(cell);\r\n        }\r\n    };\r\n    ACellAdapter.prototype.updateRow = function (node, rowIndex) {\r\n        var columns = this.context.columns;\r\n        var visible = this.visibleColumns;\r\n        //columns may not match anymore if it is a pooled item a long time ago\r\n        switch (node.childElementCount) {\r\n            case 0:\r\n                if (visible.frozen.length > 0) {\r\n                    this.insertFrozenCells(node, rowIndex, visible.frozen, 0, columns);\r\n                }\r\n                this.addCellAtEnd(node, rowIndex, visible.first, visible.last, columns);\r\n                break;\r\n            case 1:\r\n                var old = node.firstElementChild;\r\n                var id_1 = old.dataset.id;\r\n                var columnIndex = columns.findIndex(function (c) { return c.id === id_1; });\r\n                node.removeChild(old);\r\n                if (columnIndex >= 0) {\r\n                    this.recycleCell(old, columnIndex);\r\n                }\r\n                if (visible.frozen.length > 0) {\r\n                    this.insertFrozenCells(node, rowIndex, visible.frozen, 0, columns);\r\n                }\r\n                this.addCellAtEnd(node, rowIndex, visible.first, visible.last, columns);\r\n                break;\r\n            default:\r\n                this.mergeColumns(node, rowIndex);\r\n                break;\r\n        }\r\n    };\r\n    ACellAdapter.prototype.mergeColumns = function (node, rowIndex) {\r\n        var _this = this;\r\n        var columns = this.context.columns;\r\n        var visible = this.visibleColumns;\r\n        var ids = new Map();\r\n        while (node.lastChild) {\r\n            var c = node.lastChild;\r\n            node.removeChild(c);\r\n            ids.set(c.dataset.id, c);\r\n        }\r\n        var updateImpl = function (i) {\r\n            var col = columns[i];\r\n            var existing = ids.get(col.id);\r\n            if (!existing) {\r\n                var cell_1 = _this.selectCell(rowIndex, i, columns);\r\n                node.appendChild(cell_1);\r\n                return;\r\n            }\r\n            ids.delete(col.id);\r\n            var r = _this.updateCell(existing, rowIndex, col) || existing;\r\n            var cell;\r\n            if (isAsyncUpdate(r)) {\r\n                cell = _this.handleCellReady(r.item, r.ready, i);\r\n            }\r\n            else {\r\n                cell = r;\r\n            }\r\n            if (cell && cell !== existing) {\r\n                cell.dataset.id = col.id;\r\n                cell.classList.add(CSS_CLASS_TD, _this.style.cssClasses.td, cssClass(\"td-\" + _this.tableId));\r\n            }\r\n            _this.updateShiftedState(cell, col);\r\n            node.appendChild(cell);\r\n        };\r\n        for (var _i = 0, _a = visible.frozen; _i < _a.length; _i++) {\r\n            var frozen = _a[_i];\r\n            updateImpl(frozen);\r\n        }\r\n        for (var i = visible.first; i <= visible.last; ++i) {\r\n            updateImpl(i);\r\n        }\r\n        if (ids.size === 0) {\r\n            return;\r\n        }\r\n        // recycle\r\n        var byId = new Map(columns.map(function (d, i) { return [d.id, i]; }));\r\n        ids.forEach(function (node, key) {\r\n            var index = byId.get(key);\r\n            if (index != null && index >= 0) {\r\n                _this.recycleCell(node, index);\r\n            }\r\n        });\r\n    };\r\n    ACellAdapter.prototype.updateShiftedStates = function () {\r\n        if (!this.context.columns.some(function (d) { return d.frozen; })) {\r\n            return;\r\n        }\r\n        var shifted = this.horizontallyShifted;\r\n        var clazz = CSS_CLASS_SHIFTED;\r\n        if (shifted) {\r\n            var headers = Array.from(this.header.querySelectorAll(\".\" + CSS_CLASS_FROZEN + \":not(.\" + clazz + \")\"));\r\n            var bodies = Array.from(this.body.querySelectorAll(\".\" + CSS_CLASS_FROZEN + \":not(.\" + clazz + \")\"));\r\n            for (var _i = 0, headers_1 = headers; _i < headers_1.length; _i++) {\r\n                var item = headers_1[_i];\r\n                item.classList.add(clazz);\r\n            }\r\n            for (var _a = 0, bodies_1 = bodies; _a < bodies_1.length; _a++) {\r\n                var item = bodies_1[_a];\r\n                item.classList.add(clazz);\r\n            }\r\n        }\r\n        else {\r\n            var headers = Array.from(this.header.querySelectorAll(\".\" + CSS_CLASS_FROZEN + \".\" + clazz));\r\n            var bodies = Array.from(this.body.querySelectorAll(\".\" + CSS_CLASS_FROZEN + \".\" + clazz));\r\n            for (var _b = 0, headers_2 = headers; _b < headers_2.length; _b++) {\r\n                var item = headers_2[_b];\r\n                item.classList.remove(clazz);\r\n            }\r\n            for (var _c = 0, bodies_2 = bodies; _c < bodies_2.length; _c++) {\r\n                var item = bodies_2[_c];\r\n                item.classList.remove(clazz);\r\n            }\r\n        }\r\n    };\r\n    ACellAdapter.prototype.syncFrozen = function (first) {\r\n        var columns = this.context.columns;\r\n        var visible = this.visibleColumns;\r\n        if (!columns.some(function (d) { return d.frozen; })) {\r\n            return 0;\r\n        }\r\n        if (first === 0) {\r\n            if (visible.frozen.length > 0) {\r\n                this.removeFrozenColumns(visible.frozen, 0);\r\n                visible.frozen = [];\r\n            }\r\n            return 0;\r\n        }\r\n        var old = visible.frozen.length;\r\n        var _a = updateFrozen(visible.frozen, columns, first), target = _a.target, added = _a.added, removed = _a.removed;\r\n        if (removed.length > 0) {\r\n            this.removeFrozenColumns(removed, old - removed.length);\r\n        }\r\n        if (added.length > 0) {\r\n            this.insertFrozenColumns(added, old - removed.length);\r\n        }\r\n        visible.frozen = target;\r\n        return target.length;\r\n    };\r\n    ACellAdapter.prototype.onScrolledHorizontallyImpl = function (scrollLeft, clientWidth) {\r\n        var shiftingChanged = this.horizontallyShifted !== scrollLeft > 0;\r\n        this.horizontallyShifted = scrollLeft > 0;\r\n        var column = this.context.column;\r\n        var _a = range(scrollLeft, clientWidth, column.defaultRowHeight, column.exceptions, column.numberOfRows), first = _a.first, last = _a.last, firstRowPos = _a.firstRowPos;\r\n        var visible = this.visibleColumns;\r\n        visible.forcedFirst = first;\r\n        visible.forcedLast = last;\r\n        if ((first - visible.first) >= 0 && (last - visible.last) <= 0) {\r\n            //nothing to do\r\n            if (shiftingChanged) {\r\n                this.updateShiftedStates();\r\n            }\r\n            return EScrollResult.NONE;\r\n        }\r\n        var r = EScrollResult.SOME;\r\n        var frozenShift = this.syncFrozen(first);\r\n        if (first > visible.last || last < visible.first) {\r\n            //no overlap, clean and draw everything\r\n            //console.log(`ff added: ${last - first + 1} removed: ${visibleLast - visibleFirst + 1} ${first}:${last} ${offset}`);\r\n            //removeRows(visibleFirst, visibleLast);\r\n            this.removeAllColumns(false);\r\n            this.addColumnAtEnd(first, last);\r\n            r = EScrollResult.ALL;\r\n        }\r\n        else if (first < visible.first) {\r\n            //some first rows missing and some last rows to much\r\n            //console.log(`up added: ${visibleFirst - first + 1} removed: ${visibleLast - last + 1} ${first}:${last} ${offset}`);\r\n            this.removeColumnFromEnd(last + 1, visible.last);\r\n            this.updateShiftedStates();\r\n            this.addColumnAtStart(first, visible.first - 1, frozenShift);\r\n            r = EScrollResult.SOME_TOP;\r\n        }\r\n        else {\r\n            //console.log(`do added: ${last - visibleLast + 1} removed: ${first - visibleFirst + 1} ${first}:${last} ${offset}`);\r\n            //some last rows missing and some first rows to much\r\n            this.removeColumnFromStart(visible.first, first - 1, frozenShift);\r\n            this.updateShiftedStates();\r\n            this.addColumnAtEnd(visible.last + 1, last);\r\n            r = EScrollResult.SOME_BOTTOM;\r\n        }\r\n        visible.first = first;\r\n        visible.last = last;\r\n        this.updateColumnOffset(firstRowPos);\r\n        return r;\r\n    };\r\n    return ACellAdapter;\r\n}());\r\nexport { ACellAdapter };\r\n/**\r\n * @internal\r\n */\r\nexport default ACellAdapter;\r\nfunction verifyRow(row, index, columns) {\r\n    var cols = Array.from(row.children);\r\n    //sort incrementally\r\n    if (cols.length <= 1) {\r\n        return;\r\n    }\r\n    var colObjs = cols.map(function (c) { return columns.find(function (d) { return d.id === c.dataset.id; }); });\r\n    console.assert(colObjs.every(function (d) { return Boolean(d); }), 'all columns must exist', index);\r\n    console.assert(colObjs.every(function (d, i) { return i === 0 || d.index >= colObjs[i - 1].index; }), 'all columns in ascending order', index);\r\n    console.assert((new Set(colObjs)).size === colObjs.length, 'unique columns', colObjs);\r\n}\r\n//# sourceMappingURL=ACellAdapter.js.map","import * as tslib_1 from \"tslib\";\r\nimport ARowRenderer, { setTransform } from '../ARowRenderer';\r\nimport { EScrollResult } from '../mixin';\r\nimport { CSS_CLASS_HIDDEN, CSS_CLASS_LOADING } from '../styles';\r\nimport ACellAdapter from './internal/ACellAdapter';\r\n/**\r\n * base class for a cell renderer as table section\r\n */\r\nvar ACellTableSection = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ACellTableSection, _super);\r\n    function ACellTableSection(header, body, tableId, style, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var _this = _super.call(this, body, options) || this;\r\n        _this.header = header;\r\n        _this.body = body;\r\n        _this.tableId = tableId;\r\n        _this.style = style;\r\n        var that = _this;\r\n        var LocalCell = /** @class */ (function (_super) {\r\n            tslib_1.__extends(LocalCell, _super);\r\n            function LocalCell() {\r\n                return _super !== null && _super.apply(this, arguments) || this;\r\n            }\r\n            Object.defineProperty(LocalCell.prototype, \"context\", {\r\n                get: function () {\r\n                    return that.context;\r\n                },\r\n                enumerable: true,\r\n                configurable: true\r\n            });\r\n            Object.defineProperty(LocalCell.prototype, \"body\", {\r\n                get: function () {\r\n                    return that.body;\r\n                },\r\n                enumerable: true,\r\n                configurable: true\r\n            });\r\n            Object.defineProperty(LocalCell.prototype, \"lastScrollInfo\", {\r\n                get: function () {\r\n                    return that.lastScrollInfo;\r\n                },\r\n                enumerable: true,\r\n                configurable: true\r\n            });\r\n            LocalCell.prototype.createHeader = function (document, column) {\r\n                return that.createHeader(document, column);\r\n            };\r\n            LocalCell.prototype.updateHeader = function (node, column) {\r\n                return that.updateHeader(node, column);\r\n            };\r\n            LocalCell.prototype.createCell = function (document, index, column) {\r\n                return that.createCell(document, index, column);\r\n            };\r\n            LocalCell.prototype.updateColumnOffset = function (firstColumnPos) {\r\n                _super.prototype.updateColumnOffset.call(this, firstColumnPos);\r\n                that.updateOffset(that.visibleFirstRowPos);\r\n            };\r\n            LocalCell.prototype.updateCell = function (node, index, column) {\r\n                return that.updateCell(node, index, column);\r\n            };\r\n            LocalCell.prototype.forEachRow = function (callback) {\r\n                return that.forEachRow(callback);\r\n            };\r\n            return LocalCell;\r\n        }(ACellAdapter));\r\n        _this.cell = new (LocalCell.bind.apply(LocalCell, [void 0, _this.header, _this.style, tableId].concat((options.mixins || []))))();\r\n        return _this;\r\n    }\r\n    ACellTableSection.prototype.addColumnMixin = function (mixinClass, options) {\r\n        this.cell.addColumnMixin(mixinClass, options);\r\n    };\r\n    Object.defineProperty(ACellTableSection.prototype, \"idPrefix\", {\r\n        get: function () {\r\n            return this.tableId;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ACellTableSection.prototype, \"width\", {\r\n        get: function () {\r\n            return this.context.column.totalHeight;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ACellTableSection.prototype, \"visibleColumns\", {\r\n        get: function () {\r\n            return this.cell.visibleColumns;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ACellTableSection.prototype, \"visibleFirstColumnPos\", {\r\n        get: function () {\r\n            return this.cell.visibleFirstColumnPos;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ACellTableSection.prototype, \"height\", {\r\n        get: function () {\r\n            return this.context.totalHeight;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ACellTableSection.prototype, \"hidden\", {\r\n        get: function () {\r\n            return this.header.classList.contains(CSS_CLASS_LOADING);\r\n        },\r\n        set: function (value) {\r\n            var old = this.hidden;\r\n            if (old === value) {\r\n                return;\r\n            }\r\n            this.header.classList.toggle(CSS_CLASS_LOADING, value);\r\n            this.body.classList.toggle(CSS_CLASS_LOADING, value);\r\n            this.header.classList.toggle(CSS_CLASS_HIDDEN, value);\r\n            this.body.classList.toggle(CSS_CLASS_HIDDEN, value);\r\n            this.onVisibilityChanged(!value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ACellTableSection.prototype.updateSizer = function (firstRowPos) {\r\n        this.updateShifts(firstRowPos, this.cell.leftShift());\r\n        // no sizer update since centrally managed\r\n    };\r\n    ACellTableSection.prototype.updateShifts = function (top, _left) {\r\n        setTransform(this.body, 0 /*left.toFixed(0)*/, top.toFixed(0));\r\n    };\r\n    /**\r\n     * hook when the visibility changes\r\n     * @param {boolean} _visible current visibility\r\n     */\r\n    ACellTableSection.prototype.onVisibilityChanged = function (_visible) {\r\n        // hook\r\n    };\r\n    ACellTableSection.prototype.hide = function () {\r\n        this.hidden = true;\r\n    };\r\n    ACellTableSection.prototype.show = function (scrollLeft, clientWidth, isGoingRight) {\r\n        var wasHidden = this.hidden;\r\n        this.hidden = false;\r\n        if (wasHidden) { // full update\r\n            this.revalidate();\r\n        }\r\n        else {\r\n            this.onScrolledHorizontally(scrollLeft, clientWidth, isGoingRight);\r\n        }\r\n    };\r\n    ACellTableSection.prototype.init = function () {\r\n        this.hide(); // hide by default\r\n        this.cell.init();\r\n        _super.prototype.init.call(this);\r\n    };\r\n    ACellTableSection.prototype.destroy = function () {\r\n        _super.prototype.destroy.call(this);\r\n        this.header.remove();\r\n        this.style.remove(this.tableId);\r\n    };\r\n    ACellTableSection.prototype.onScrolledVertically = function (scrollTop, clientHeight, isGoingDown) {\r\n        if (this.hidden) {\r\n            return EScrollResult.NONE;\r\n        }\r\n        return _super.prototype.onScrolledVertically.call(this, scrollTop, clientHeight, isGoingDown);\r\n    };\r\n    ACellTableSection.prototype.onScrolledHorizontally = function (scrollLeft, clientWidth, isGoingRight) {\r\n        var r = this.cell.onScrolledHorizontally(scrollLeft, clientWidth, isGoingRight);\r\n        this.updateSizer(this.visibleFirstRowPos);\r\n        return r;\r\n    };\r\n    /**\r\n     * triggers updating the header\r\n     */\r\n    ACellTableSection.prototype.updateHeaders = function () {\r\n        this.cell.updateHeaders();\r\n    };\r\n    ACellTableSection.prototype.handleCellReady = function (item, ready, column) {\r\n        if (column === void 0) { column = -1; }\r\n        return this.cell.handleCellReady(item, ready, column);\r\n    };\r\n    ACellTableSection.prototype.recycleCell = function (item, column) {\r\n        if (column === void 0) { column = -1; }\r\n        this.cell.recycleCell(item, column);\r\n    };\r\n    /**\r\n     * trigger an update all all column widths\r\n     */\r\n    ACellTableSection.prototype.updateColumnWidths = function () {\r\n        var context = this.context;\r\n        this.style.update(context.defaultRowHeight - context.padding(-1), context.columns, context.column.padding, -this.cell.leftShift(), this.tableId);\r\n    };\r\n    ACellTableSection.prototype.recreate = function (ctx) {\r\n        var scroller = this.bodyScroller;\r\n        var oldLeft = scroller.scrollLeft;\r\n        this.cell.recreate(oldLeft, scroller.clientWidth);\r\n        _super.prototype.recreate.call(this, ctx);\r\n        // restore left\r\n        scroller.scrollLeft = oldLeft;\r\n    };\r\n    ACellTableSection.prototype.clearPool = function () {\r\n        _super.prototype.clearPool.call(this);\r\n        this.cell.clearPool();\r\n    };\r\n    ACellTableSection.prototype.createRow = function (node, rowIndex) {\r\n        this.cell.createRow(node, rowIndex);\r\n        node.classList.add(this.style.cssClasses.tr);\r\n    };\r\n    ACellTableSection.prototype.updateRow = function (node, rowIndex) {\r\n        this.cell.updateRow(node, rowIndex);\r\n    };\r\n    return ACellTableSection;\r\n}(ARowRenderer));\r\nexport { ACellTableSection };\r\nexport default ACellTableSection;\r\n//# sourceMappingURL=ACellTableSection.js.map","import {defaultPhases, EAnimationMode, IAnimationContext, IAnimationItem, IExceptionContext, IPhase, KeyFinder} from 'lineupengine';\nimport {IGroupData, IGroupItem, isGroup} from '../model';\n\n/** @internal */\nexport interface IGroupLookUp {\n  item2groupIndex: Map<number, number>;\n  group2firstItemIndex: Map<string, number>;\n}\n\nfunction toGroupLookup(items: (IGroupItem | IGroupData)[]): IGroupLookUp {\n  const item2groupIndex = new Map<number, number>();\n  const group2firstItemIndex = new Map<string, number>();\n  items.forEach((item, i) => {\n    if (isGroup(item)) {\n      for (let o = 0; o < item.order.length; ++o) {\n        item2groupIndex.set(o, i);\n      }\n    } else if (item.group && item.relativeIndex === 0) {\n      group2firstItemIndex.set(item.group.name, i);\n    }\n  });\n  return {item2groupIndex, group2firstItemIndex};\n}\n\nfunction toKey(item: IGroupItem | IGroupData) {\n  if (isGroup(item)) {\n    return item.name;\n  }\n  return (<IGroupItem>item).dataIndex.toString();\n}\n\n/** @internal */\nexport function lineupAnimation(previous: IExceptionContext, previousData: (IGroupItem | IGroupData)[], currentData: (IGroupItem | IGroupData)[]): IAnimationContext {\n\n  const previousKey = (index: number) => toKey(previousData[index]);\n  const currentKey = (index: number) => toKey(currentData[index]);\n\n\n  const previousGroupCount = previousData.reduce((acc, i) => acc + (isGroup(i) ? 1 : 0), 0);\n  const currentGroupCount = currentData.reduce((acc, i) => acc + (isGroup(i) ? 1 : 0), 0);\n\n  if (previousGroupCount === currentGroupCount) {\n    // reorder or filter only\n    return {currentKey, previous, previousKey};\n  }\n\n  // try to appear where the group was uncollapsed and vice versa\n  let prevHelper: IGroupLookUp;\n  const appearPosition = (currentRowIndex: number, previousFinder: KeyFinder, defaultValue: number) => {\n    if (!prevHelper) {\n      prevHelper = toGroupLookup(previousData);\n    }\n    const item = currentData[currentRowIndex];\n    const referenceIndex = isGroup(item) ? prevHelper.group2firstItemIndex.get(item.name) : prevHelper.item2groupIndex.get(item.dataIndex);\n    if (referenceIndex === undefined) {\n      return defaultValue;\n    }\n    const pos = previousFinder.posByKey(previousKey(referenceIndex));\n    return pos.pos >= 0 ? pos.pos : defaultValue;\n  };\n\n\n  let currHelper: IGroupLookUp;\n  const removePosition = (previousRowIndex: number, currentFinder: KeyFinder, defaultValue: number) => {\n    if (!currHelper) {\n      currHelper = toGroupLookup(currentData);\n    }\n    const item = previousData[previousRowIndex];\n    const referenceIndex = isGroup(item) ? currHelper.group2firstItemIndex.get(item.name) : currHelper.item2groupIndex.get(item.dataIndex);\n    if (referenceIndex === undefined) {\n      return defaultValue;\n    }\n    const pos = currentFinder.posByKey(currentKey(referenceIndex));\n    return pos.pos >= 0 ? pos.pos : defaultValue;\n  };\n\n  const phases: IPhase[] = [\n    Object.assign({}, defaultPhases[0], {\n      apply(item: Readonly<IAnimationItem>, previousFinder: KeyFinder) {\n        defaultPhases[0].apply(item);\n        if (item.mode === EAnimationMode.SHOW) {\n          item.node.style.transform = `translate(0, ${appearPosition(item.current.index, previousFinder, item.previous.y) - item.nodeY}px)`;\n        }\n      }\n    }),\n    Object.assign({}, defaultPhases[1], {\n      apply(item: Readonly<IAnimationItem>, _previousFinder: KeyFinder, currentFinder: KeyFinder) {\n        defaultPhases[1].apply(item);\n        if (item.mode === EAnimationMode.HIDE) {\n          item.node.style.transform = `translate(0, ${removePosition(item.previous.index, currentFinder, item.current.y) - item.nodeY}px)`;\n        }\n      }\n    }),\n    defaultPhases[defaultPhases.length - 1]\n  ];\n\n  return {previous, previousKey, currentKey, phases};\n}\n","import {IColumn, IAbortAblePromise, IAsyncUpdate, isAbortAble} from 'lineupengine';\nimport {Column} from '../model';\nimport {ICellRenderer, IGroupCellRenderer} from '../renderer';\nimport {ISummaryRenderer, IRenderCallback} from '../renderer';\nimport {createHeader, updateHeader} from './header';\nimport {IRankingContext} from './interfaces';\nimport {ILineUpFlags} from '../config';\nimport {cssClass, engineCssClass} from '../styles';\nimport {isPromiseLike} from '../internal';\n\nexport interface IRenderers {\n  singleId: string;\n  single: ICellRenderer;\n  groupId: string;\n  group: IGroupCellRenderer;\n  summaryId: string;\n  summary: ISummaryRenderer | null;\n  singleTemplate: HTMLElement | null;\n  groupTemplate: HTMLElement | null;\n  summaryTemplate: HTMLElement | null;\n}\n\nexport default class RenderColumn implements IColumn {\n  renderers: IRenderers | null = null;\n\n  constructor(public readonly c: Column, public index: number, protected ctx: IRankingContext, protected readonly flags: ILineUpFlags) {\n\n  }\n\n  get width() {\n    return this.c.getWidth();\n  }\n\n  get id() {\n    return this.c.id;\n  }\n\n  get frozen() {\n    return this.flags.disableFrozenColumns ? false : this.c.frozen;\n  }\n\n  private singleRenderer() {\n    if (!this.renderers || !this.renderers.single) {\n      return null;\n    }\n    if (this.renderers.singleTemplate) {\n      return <HTMLElement>this.renderers.singleTemplate.cloneNode(true);\n    }\n    const elem = this.ctx.asElement(this.renderers.single.template);\n    elem.classList.add(cssClass(`renderer-${this.renderers.singleId}`), cssClass('detail'));\n    elem.dataset.renderer = this.renderers.singleId;\n    elem.dataset.group = 'd';\n\n    this.renderers.singleTemplate = <HTMLElement>elem.cloneNode(true);\n    return elem;\n  }\n\n  private groupRenderer() {\n    if (!this.renderers || !this.renderers.group) {\n      return null;\n    }\n    if (this.renderers.groupTemplate) {\n      return <HTMLElement>this.renderers.groupTemplate.cloneNode(true);\n    }\n    const elem = this.ctx.asElement(this.renderers.group.template);\n    elem.classList.add(cssClass(`renderer-${this.renderers.groupId}`), cssClass('group'));\n    elem.dataset.renderer = this.renderers.groupId;\n    elem.dataset.group = 'g';\n\n    this.renderers.groupTemplate = <HTMLElement>elem.cloneNode(true);\n    return elem;\n  }\n\n  private summaryRenderer() {\n    if (!this.renderers || !this.renderers.summary) {\n      return null;\n    }\n    if (this.renderers.summaryTemplate) {\n      return <HTMLElement>this.renderers.summaryTemplate.cloneNode(true);\n    }\n    const elem = this.ctx.asElement(this.renderers.summary.template);\n    elem.classList.add(cssClass('summary'), cssClass('th-summary'), cssClass(`renderer-${this.renderers.summaryId}`));\n    elem.dataset.renderer = this.renderers.summaryId;\n\n    this.renderers.summaryTemplate = <HTMLElement>elem.cloneNode(true);\n    return elem;\n  }\n\n  createHeader(): HTMLElement | IAsyncUpdate<HTMLElement> {\n    const node = createHeader(this.c, this.ctx, {\n      extraPrefix: 'th',\n      dragAble: this.flags.advancedUIFeatures,\n      mergeDropAble: this.flags.advancedModelFeatures,\n      rearrangeAble: this.flags.advancedUIFeatures,\n      resizeable: this.flags.advancedUIFeatures\n    });\n    node.classList.add(cssClass('header'));\n    if (!this.flags.disableFrozenColumns) {\n      node.classList.toggle(engineCssClass('frozen'), this.frozen);\n    }\n\n    if (this.renderers && this.renderers.summary) {\n      const summary = this.summaryRenderer()!;\n      node.appendChild(summary);\n    }\n    return this.updateHeader(node);\n  }\n\n  updateHeader(node: HTMLElement): HTMLElement | IAsyncUpdate<HTMLElement> {\n    updateHeader(node, this.c);\n    if (!this.renderers || !this.renderers.summary) {\n      return node;\n    }\n    let summary = <HTMLElement>node.getElementsByClassName(cssClass('summary'))[0]!;\n    const oldRenderer = summary.dataset.renderer;\n    const currentRenderer = this.renderers.summaryId;\n    if (oldRenderer !== currentRenderer) {\n      summary.remove();\n      summary = this.summaryRenderer()!;\n      node.appendChild(summary);\n    }\n    const ready = this.renderers.summary.update(summary);\n    if (ready) {\n      return {item: node, ready};\n    }\n    return node;\n  }\n\n  createCell(index: number): HTMLElement | IAsyncUpdate<HTMLElement> {\n    const isGroup = this.ctx.isGroup(index);\n    const node = isGroup ? this.groupRenderer()! : this.singleRenderer()!;\n    return this.updateCell(node, index);\n  }\n\n  updateCell(node: HTMLElement, index: number): HTMLElement | IAsyncUpdate<HTMLElement> {\n    if (!this.flags.disableFrozenColumns) {\n      node.classList.toggle(engineCssClass('frozen'), this.frozen);\n    }\n    const isGroup = this.ctx.isGroup(index);\n    // assert that we have the template of the right mode\n    const oldRenderer = node.dataset.renderer;\n    const currentRenderer = isGroup ? this.renderers!.groupId : this.renderers!.singleId;\n    const oldGroup = node.dataset.group;\n    const currentGroup = (isGroup ? 'g' : 'd');\n    if (oldRenderer !== currentRenderer || oldGroup !== currentGroup) {\n      node = isGroup ? this.groupRenderer()! : this.singleRenderer()!;\n    }\n    let ready: IAbortAblePromise<void> | void | null;\n    if (isGroup) {\n      const g = this.ctx.getGroup(index);\n      ready = this.renderers!.group.update(node, g);\n    } else {\n      const r = this.ctx.getRow(index);\n      const row = this.ctx.provider.getRow(r.dataIndex);\n      if (!isPromiseLike(row)) {\n        ready = this.renderers!.single.update(node, row, r.relativeIndex, r.group);\n      } else {\n        ready = chainAbortAble(row, (row) => this.renderers!.single.update(node, row, r.relativeIndex, r.group));\n      }\n    }\n    if (ready) {\n      return {item: node, ready};\n    }\n    return node;\n  }\n\n  renderCell(ctx: CanvasRenderingContext2D, index: number): boolean | IAbortAblePromise<IRenderCallback> {\n    const r = this.ctx.getRow(index);\n    const s = this.renderers!.single;\n    if (!s.render) {\n      return false;\n    }\n    const row = this.ctx.provider.getRow(r.dataIndex);\n    if (!isPromiseLike(row)) {\n      return s.render(ctx, row, r.relativeIndex, r.group) || false;\n    }\n    return chainAbortAble(row, (row) => s.render!(ctx, row, r.relativeIndex, r.group) || false);\n  }\n\n}\n\n\nfunction chainAbortAble<T, U, V>(toWait: Promise<T>, mapper: (value: T) => IAbortAblePromise<U> | V): IAbortAblePromise<U> | V {\n  let aborted = false;\n  const p: any = new Promise<IAbortAblePromise<U> | null | void>((resolve) => {\n    if (aborted) {\n      return;\n    }\n    toWait.then((r) => {\n      if (aborted) {\n        return;\n      }\n      const mapped = mapper(r);\n      if (isAbortAble(<any>mapped)) {\n        p.abort = (<IAbortAblePromise<U>>mapped).abort.bind(mapped);\n        return p.then(resolve);\n      }\n      return resolve(<any>mapped);\n    });\n  });\n\n  p.abort = () => {\n    aborted = true;\n  };\n  return p;\n}\n","import {abortAbleAll, IAbortAblePromise, IAsyncUpdate, isAsyncUpdate, StyleManager} from 'lineupengine';\nimport {ILineUpFlags} from '../config';\nimport {round} from '../internal';\nimport {Column, IMultiLevelColumn} from '../model';\nimport {ISummaryRenderer} from '../renderer';\nimport {multiLevelGridCSSClass, forEachChild} from '../renderer/utils';\nimport {COLUMN_PADDING, cssClass} from '../styles';\nimport {createHeader, updateHeader} from './header';\nimport {IRankingContext} from './interfaces';\nimport RenderColumn from './RenderColumn';\n\n/** @internal */\nexport default class MultiLevelRenderColumn extends RenderColumn {\n  private readonly summaries: ISummaryRenderer[] = [];\n\n  constructor(c: IMultiLevelColumn & Column, index: number, ctx: IRankingContext, flags: ILineUpFlags) {\n    super(c, index, ctx, flags);\n  }\n\n  private get mc() {\n    return <IMultiLevelColumn & Column>this.c;\n  }\n\n  get width() {\n    return this.c.getWidth() + COLUMN_PADDING * this.mc.length;\n  }\n\n  createHeader() {\n    const r = super.createHeader();\n    const wrapper = this.ctx.document.createElement('div');\n    wrapper.classList.add(cssClass('nested'));\n    wrapper.classList.add(multiLevelGridCSSClass(this.ctx.idPrefix, this.c));\n\n    if (isAsyncUpdate(r)) {\n      r.item.appendChild(wrapper);\n    } else {\n      r.appendChild(wrapper);\n    }\n\n    return this.updateNested(wrapper, r);\n  }\n\n  private matchChildren(wrapper: HTMLElement, children: Column[]) {\n    if (this.summaries.length > children.length) {\n      this.summaries.splice(children.length, this.summaries.length - children.length);\n    }\n\n    function matches(col: Column, i: number) {\n      //do both match?\n      const n = <HTMLElement>wrapper.children[i];\n      return n != null && n.dataset.colId === col.id;\n    }\n\n    if (children.every(matches)) {\n      return;\n    }\n\n    const existing = new Set(children.map((d) => d.id));\n\n    //remove all that are not existing anymore\n    forEachChild(wrapper, (n: HTMLElement) => {\n      const id = n.dataset.colId!;\n      if (!existing.has(id)) {\n        wrapper.removeChild(n);\n      }\n    });\n\n    children.forEach((cc, i) => {\n      const cnode = <HTMLElement>wrapper.querySelector(`[data-col-id=\"${cc.id}\"]`);\n      if (cnode) { // reuse existing\n        wrapper.appendChild(cnode);\n        return;\n      }\n\n      const n = createHeader(cc, this.ctx, {\n        extraPrefix: 'th',\n        mergeDropAble: false,\n        dragAble: this.flags.advancedModelFeatures,\n        rearrangeAble: this.flags.advancedModelFeatures,\n        resizeable: this.flags.advancedModelFeatures\n      });\n      n.classList.add(cssClass('header'), cssClass('nested-th'));\n      (<any>n.style).gridColumnStart = (i + 1).toString();\n      wrapper.appendChild(n);\n\n      if (!this.renderers || !this.renderers.summary) {\n        return;\n      }\n      const summary = this.ctx.summaryRenderer(cc, false);\n      const summaryNode = this.ctx.asElement(summary.template);\n      summaryNode.classList.add(cssClass('summary'), cssClass('th-summary'), cssClass(`renderer-${cc.getSummaryRenderer()}`));\n      summaryNode.dataset.renderer = cc.getSummaryRenderer();\n      n.appendChild(summaryNode);\n      this.summaries[i] = summary;\n      summary.update(summaryNode);\n    });\n  }\n\n  updateHeader(node: HTMLElement) {\n    const r = super.updateHeader(node);\n    node = isAsyncUpdate(r) ? r.item : r;\n    const wrapper = <HTMLElement>node.getElementsByClassName(cssClass('nested'))[0];\n    if (!wrapper) {\n      return r; // too early\n    }\n    node.appendChild(wrapper); // ensure the last one\n    return this.updateNested(wrapper, r);\n  }\n\n  updateWidthRule(style: StyleManager) {\n    const mc = this.mc;\n    // need this for chrome to work properly\n    const widths = mc.children.map((c) => `minmax(0, ${round(c.getWidth())}fr)`);\n    const clazz = multiLevelGridCSSClass(this.ctx.idPrefix, this.c);\n    style.updateRule(`stacked-${this.c.id}`, `.${clazz}`, <any>{\n      display: 'grid',\n      gridTemplateColumns: widths.join(' ')\n    });\n    return clazz;\n  }\n\n  private updateNested(wrapper: HTMLElement, r: HTMLElement | IAsyncUpdate<HTMLElement>) {\n    const sub = this.mc.children;\n    this.matchChildren(wrapper, sub);\n\n    const children = <HTMLElement[]>Array.from(wrapper.children);\n\n    const toWait: IAbortAblePromise<void>[] = [];\n    let header: HTMLElement;\n    if (isAsyncUpdate(r)) {\n      toWait.push(r.ready);\n      header = r.item;\n    } else {\n      header = r;\n    }\n\n    sub.forEach((c, i) => {\n      const node = children[i];\n      updateHeader(node, c);\n\n      if (!this.renderers || !this.renderers.summary) {\n        return;\n      }\n      let summary = <HTMLElement>node.getElementsByClassName(cssClass('summary'))[0];\n      const oldRenderer = summary.dataset.renderer;\n      const currentRenderer = c.getSummaryRenderer();\n      if (oldRenderer !== currentRenderer) {\n        const renderer = this.ctx.summaryRenderer(c, false);\n        summary.remove();\n        summary = this.ctx.asElement(renderer.template);\n        summary.classList.add(cssClass('summary'), cssClass('th-summary'), cssClass(`renderer-${currentRenderer}`));\n        summary.dataset.renderer = currentRenderer;\n        this.summaries[i] = renderer;\n        node.appendChild(summary);\n      }\n      const ready = this.summaries[i].update(summary);\n      if (ready) {\n        toWait.push(ready);\n      }\n    });\n\n    if (toWait.length === 0) {\n      return header;\n    }\n    return {\n      item: header,\n      ready: <IAbortAblePromise<void>>abortAbleAll(toWait)\n    };\n  }\n}\n","import {ILineUpFlags} from '../config';\nimport {Column, IGroupData, IGroupItem} from '../model';\nimport {IDataProvider} from '../provider';\nimport {IImposer, IRenderContext, ISummaryRenderer} from '../renderer';\nimport DialogManager from './dialogs/DialogManager';\nimport {IDialogContext} from './dialogs';\n\nexport interface IUIOptions {\n  shortcut: boolean | 'only';\n  order: number;\n  featureLevel: 'basic' | 'advanced';\n  featureCategory: 'ranking' | 'model' | 'ui';\n}\n\nexport interface IOnClickHandler {\n  (col: Column, evt: MouseEvent, ctx: IRankingHeaderContext, level: number, viaShortcut: boolean): any;\n}\n\nexport interface IToolbarAction {\n  title: string;\n\n  enabled?(col: Column): boolean;\n\n  onClick: IOnClickHandler;\n\n  options: Partial<IUIOptions>;\n}\n\nexport interface IToolbarDialogAddon {\n  title: string;\n\n  order: number;\n\n  append(col: Column, node: HTMLElement, dialog: IDialogContext, ctx: IRankingHeaderContext): void;\n}\n\n\nexport interface IRenderInfo {\n  type: string;\n  label: string;\n}\n\nexport interface IRankingHeaderContextContainer {\n  readonly idPrefix: string;\n  readonly document: Document;\n  readonly provider: IDataProvider;\n\n  readonly dialogManager: DialogManager;\n\n  asElement(html: string): HTMLElement;\n\n  readonly toolbar: {[key: string]: IToolbarAction | IToolbarDialogAddon};\n\n  readonly flags: ILineUpFlags;\n\n  getPossibleRenderer(col: Column): {item: IRenderInfo[], group: IRenderInfo[], summary: IRenderInfo[]};\n\n  summaryRenderer(co: Column, interactive: boolean, imposer?: IImposer): ISummaryRenderer;\n}\n\nexport interface IRankingBodyContext extends IRankingHeaderContextContainer, IRenderContext {\n  isGroup(index: number): boolean;\n\n  getGroup(index: number): IGroupData;\n\n  getRow(index: number): IGroupItem;\n}\n\nexport declare type IRankingHeaderContext = Readonly<IRankingHeaderContextContainer>;\n\nexport declare type IRankingContext = Readonly<IRankingBodyContext>;\n\nexport enum EMode {\n  ITEM = 'item',\n  BAND = 'band'\n}\n","import {OrderedSet, AEventDispatcher, IEventListener} from '../internal';\nimport {IGroupData, IGroupItem, isGroup} from '../model';\nimport {IDataProvider} from '../provider';\nimport {cssClass, engineCssClass} from '../styles';\nimport {forEachIndices} from '../model/internal';\nimport {rangeSelection} from '../provider/utils';\n\ninterface IPoint {\n  x: number;\n  y: number;\n}\n\ninterface IShift {\n  xShift: number;\n  yShift: number;\n  node: HTMLElement;\n}\n\n/**\n * @asMemberOf SelectionManager\n * @internal\n * @event\n */\nexport declare function selectRange(from: number, to: number, additional: boolean): void;\n\n/** @internal */\nexport default class SelectionManager extends AEventDispatcher {\n  static readonly EVENT_SELECT_RANGE = 'selectRange';\n  private static readonly MIN_DISTANCE = 10;\n\n  private readonly hr: HTMLHRElement;\n\n  private start: (IPoint & IShift) | null = null;\n\n  constructor(private readonly ctx: {provider: IDataProvider}, private readonly body: HTMLElement) {\n    super();\n    const root = body.parentElement!.parentElement!;\n    let hr = <HTMLHRElement>root.querySelector('hr');\n    if (!hr) {\n      hr = root.ownerDocument!.createElement('hr');\n      root.appendChild(hr);\n    }\n    this.hr = hr;\n    this.hr.classList.add(cssClass('hr'));\n\n    const mouseMove = (evt: MouseEvent) => {\n      this.showHint(evt);\n    };\n    const mouseUp = (evt: MouseEvent) => {\n      this.body.removeEventListener('mousemove', mouseMove);\n      this.body.removeEventListener('mouseup', mouseUp);\n      this.body.removeEventListener('mouseleave', mouseUp);\n\n      if (!this.start) {\n        return;\n      }\n      const row = engineCssClass('tr');\n      const startNode = this.start.node.classList.contains(row) ? this.start.node : <HTMLElement>this.start.node.closest(`.${row}`);\n      // somehow on firefox the mouseUp will be triggered on the original node\n      // thus search the node explicitly\n      const end = <HTMLElement>this.body.ownerDocument!.elementFromPoint(evt.clientX, evt.clientY);\n      const endNode = end.classList.contains(row) ? end : <HTMLElement>(end.closest(`.${row}`));\n      this.start = null;\n\n      this.body.classList.remove(cssClass('selection-active'));\n      this.hr.classList.remove(cssClass('selection-active'));\n\n      this.select(evt.ctrlKey, startNode, endNode);\n    };\n\n    body.addEventListener('mousedown', (evt) => {\n      const r = root.getBoundingClientRect();\n      this.start = {x: evt.clientX, y: evt.clientY, xShift: r.left, yShift: r.top, node: <HTMLElement>evt.target};\n\n      this.body.classList.add(cssClass('selection-active'));\n      body.addEventListener('mousemove', mouseMove, {\n        passive: true\n      });\n      body.addEventListener('mouseup', mouseUp, {\n        passive: true\n      });\n      body.addEventListener('mouseleave', mouseUp, {\n        passive: true\n      });\n    }, {\n        passive: true\n      });\n  }\n\n  protected createEventList() {\n    return super.createEventList().concat([SelectionManager.EVENT_SELECT_RANGE]);\n  }\n\n  on(type: typeof SelectionManager.EVENT_SELECT_RANGE, listener: typeof selectRange | null): this;\n  on(type: string | string[], listener: IEventListener | null): this; // required for correct typings in *.d.ts\n  on(type: string | string[], listener: IEventListener | null): this {\n    return super.on(type, listener);\n  }\n\n  private select(additional: boolean, startNode?: HTMLElement, endNode?: HTMLElement) {\n    if (!startNode || !endNode || startNode === endNode) {\n      return; // no single\n    }\n\n    const startIndex = parseInt(startNode.dataset.index!, 10);\n    const endIndex = parseInt(endNode.dataset.index!, 10);\n\n    const from = Math.min(startIndex, endIndex);\n    const end = Math.max(startIndex, endIndex);\n    if (from === end) {\n      return; // no single\n    }\n    // bounce event end\n    requestAnimationFrame(() => this.fire(SelectionManager.EVENT_SELECT_RANGE, from, end, additional));\n  }\n\n  private showHint(end: MouseEvent) {\n    const start = this.start!;\n    const sy = start.y;\n    const ey = end.clientY;\n\n    const visible = Math.abs(sy - ey) > SelectionManager.MIN_DISTANCE;\n    this.hr.classList.toggle(cssClass('selection-active'), visible);\n    this.hr.style.transform = `translate(${start.x - start.xShift}px,${sy - start.yShift}px)scale(1,${Math.abs(ey - sy)})rotate(${ey > sy ? 90 : -90}deg)`;\n  }\n\n  remove(node: HTMLElement) {\n    node.onclick = <any>undefined;\n  }\n\n  add(node: HTMLElement) {\n    node.onclick = (evt) => {\n      const dataIndex = parseInt(node.dataset.i!, 10);\n      if (evt.shiftKey) {\n        const relIndex = parseInt(node.dataset.index!, 10);\n        const ranking = node.parentElement!.dataset.ranking!;\n        if (rangeSelection(this.ctx.provider, ranking, dataIndex, relIndex, evt.ctrlKey)) {\n          return;\n        }\n      }\n      this.ctx.provider.toggleSelection(dataIndex, evt.ctrlKey);\n    };\n  }\n\n  selectRange(rows: {forEach: (c: (item: (IGroupItem | IGroupData)) => void) => void}, additional: boolean = false) {\n    const current = new OrderedSet<number>(additional ? this.ctx.provider.getSelection() : []);\n    const toggle = (dataIndex: number) => {\n      if (current.has(dataIndex)) {\n        current.delete(dataIndex);\n      } else {\n        current.add(dataIndex);\n      }\n    };\n    rows.forEach((d) => {\n      if (isGroup(d)) {\n        forEachIndices(d.order, toggle);\n      } else {\n        toggle(d.dataIndex);\n      }\n    });\n    this.ctx.provider.setSelection(Array.from(current));\n  }\n\n  updateState(node: HTMLElement, dataIndex: number) {\n    if (this.ctx.provider.isSelected(dataIndex)) {\n      node.classList.add(cssClass('selected'));\n    } else {\n      node.classList.remove(cssClass('selected'));\n    }\n  }\n\n  update(node: HTMLElement, selectedDataIndices: {has(dataIndex: number): boolean}) {\n    const dataIndex = parseInt(node.dataset.i!, 10);\n    if (selectedDataIndices.has(dataIndex)) {\n      node.classList.add(cssClass('selected'));\n    } else {\n      node.classList.remove(cssClass('selected'));\n    }\n  }\n}\n","import {ACellTableSection, GridStyleManager, IAbortAblePromise, ICellRenderContext, IExceptionContext, isAbortAble, isAsyncUpdate, isLoadingCell, ITableSection, nonUniformContext, PrefetchMixin, tableIds, uniformContext, IAsyncUpdate} from 'lineupengine';\nimport {ILineUpFlags} from '../config';\nimport {HOVER_DELAY_SHOW_DETAIL} from '../constants';\nimport {AEventDispatcher, clear, debounce, IEventContext, IEventHandler, IEventListener} from '../internal';\nimport {Column, IGroupData, IGroupItem, IOrderedGroup, isGroup, isMultiLevelColumn, Ranking, StackColumn, IGroupParent, defaultGroup, IGroup} from '../model';\nimport {IImposer, IRenderCallback, IRenderContext} from '../renderer';\nimport {CANVAS_HEIGHT, COLUMN_PADDING, cssClass, engineCssClass} from '../styles';\nimport {lineupAnimation} from './animation';\nimport {IRankingBodyContext, IRankingHeaderContextContainer} from './interfaces';\nimport MultiLevelRenderColumn from './MultiLevelRenderColumn';\nimport RenderColumn, {IRenderers} from './RenderColumn';\nimport SelectionManager from './SelectionManager';\nimport {groupRoots} from '../model/internal';\nimport {isAlwaysShowingGroupStrategy, toRowMeta} from '../provider/internal';\n\nexport interface IEngineRankingContext extends IRankingHeaderContextContainer, IRenderContext {\n  createRenderer(c: Column, imposer?: IImposer): IRenderers;\n}\n\n\nexport interface IEngineRankingOptions {\n  animation: boolean;\n  levelOfDetail: (rowIndex: number) => 'high' | 'low';\n  customRowUpdate: (row: HTMLElement, rowIndex: number) => void;\n  flags: ILineUpFlags;\n}\n\n/**\n * emitted when the width of the ranking changed\n * @asMemberOf EngineRanking\n * @event\n */\nexport declare function widthChanged(): void;\n/**\n * emitted when the data of the ranking needs to be updated\n * @asMemberOf EngineRanking\n * @event\n */\nexport declare function updateData(): void;\n/**\n * emitted when the table has be recreated\n * @asMemberOf EngineRanking\n * @event\n */\nexport declare function recreate(): void;\n/**\n * emitted when the highlight changes\n * @asMemberOf EngineRanking\n * @param dataIndex the highlghted data index or -1 for none\n * @event\n */\nexport declare function highlightChanged(dataIndex: number): void;\n\n\n/** @internal */\nclass RankingEvents extends AEventDispatcher {\n  static readonly EVENT_WIDTH_CHANGED = 'widthChanged';\n  static readonly EVENT_UPDATE_DATA = 'updateData';\n  static readonly EVENT_RECREATE = 'recreate';\n  static readonly EVENT_HIGHLIGHT_CHANGED = 'highlightChanged';\n\n  fire(type: string | string[], ...args: any[]) {\n    super.fire(type, ...args);\n  }\n\n  protected createEventList() {\n    return super.createEventList().concat([RankingEvents.EVENT_WIDTH_CHANGED, RankingEvents.EVENT_UPDATE_DATA, RankingEvents.EVENT_RECREATE, RankingEvents.EVENT_HIGHLIGHT_CHANGED]);\n  }\n}\n\nconst PASSIVE: AddEventListenerOptions = {\n  passive: false\n};\n\nexport default class EngineRanking extends ACellTableSection<RenderColumn> implements ITableSection, IEventHandler {\n  static readonly EVENT_WIDTH_CHANGED = RankingEvents.EVENT_WIDTH_CHANGED;\n  static readonly EVENT_UPDATE_DATA = RankingEvents.EVENT_UPDATE_DATA;\n  static readonly EVENT_RECREATE = RankingEvents.EVENT_RECREATE;\n  static readonly EVENT_HIGHLIGHT_CHANGED = RankingEvents.EVENT_HIGHLIGHT_CHANGED;\n\n  private _context: ICellRenderContext<RenderColumn>;\n\n  private readonly loadingCanvas = new WeakMap<HTMLCanvasElement, {col: number, render: IAbortAblePromise<IRenderCallback>}[]>();\n\n  private readonly renderCtx: IRankingBodyContext;\n  private data: (IGroupItem | IGroupData)[] = [];\n  private readonly selection: SelectionManager;\n  private highlight: number = -1;\n  private readonly canvasPool: HTMLCanvasElement[] = [];\n  private oldLeft: number = 0;\n\n  private readonly events = new RankingEvents();\n\n  private roptions: Readonly<IEngineRankingOptions> = {\n    animation: true,\n    levelOfDetail: () => 'high',\n    customRowUpdate: () => undefined,\n    flags: {\n      disableFrozenColumns: false,\n      advancedModelFeatures: true,\n      advancedRankingFeatures: true,\n      advancedUIFeatures: true\n    }\n  };\n\n  private readonly delayedUpdate: (this: {type: string}) => void;\n  private readonly delayedUpdateAll: () => void;\n  private readonly delayedUpdateColumnWidths: () => void;\n  private readonly columns: RenderColumn[];\n\n  private readonly canvasMouseHandler = {\n    timer: new Set<number>(),\n    hoveredRows: new Set<HTMLElement>(),\n    cleanUp: () => {\n      const c = this.canvasMouseHandler;\n      c.timer.forEach((timer) => {\n        self.clearTimeout(timer);\n      });\n      c.timer.clear();\n      for (const row of Array.from(c.hoveredRows)) {\n        c.unhover(row);\n      }\n    },\n    enter: (evt: MouseEvent) => {\n      const c = this.canvasMouseHandler;\n      c.cleanUp();\n      const row = <HTMLElement>evt.currentTarget;\n      row.addEventListener('mouseleave', c.leave, PASSIVE);\n      c.timer.add(self.setTimeout(() => {\n        c.hoveredRows.add(row);\n        this.updateHoveredRow(row, true);\n      }, HOVER_DELAY_SHOW_DETAIL));\n    },\n    leave: (evt: MouseEvent | HTMLElement) => {\n      // on row to survive canvas removal\n      const c = this.canvasMouseHandler;\n      const row = <HTMLElement>((typeof (<MouseEvent>evt).currentTarget !== 'undefined') ? (<MouseEvent>evt).currentTarget : evt);\n      c.unhover(row);\n\n      c.cleanUp();\n    },\n    unhover: (row: HTMLElement) => {\n      // remove self\n      const c = this.canvasMouseHandler;\n      c.hoveredRows.delete(row);\n      row.removeEventListener('mouseleave', c.leave);\n      if (!EngineRanking.isCanvasRenderedRow(row) && row.parentElement) { // and part of dom\n        self.setTimeout(() => this.updateHoveredRow(row, false));\n      }\n    }\n  };\n\n  private readonly highlightHandler = {\n    enabled: false,\n    enter: (evt: MouseEvent) => {\n      if (this.highlight >= 0) {\n        const old = this.body.getElementsByClassName(engineCssClass('highlighted'))[0];\n        if (old) {\n          old.classList.remove(engineCssClass('highlighted'));\n        }\n        this.highlight = -1;\n      }\n      const row = <HTMLElement>evt.currentTarget;\n      const dataIndex = parseInt(row.dataset.i || '-1', 10);\n      this.events.fire(EngineRanking.EVENT_HIGHLIGHT_CHANGED, dataIndex);\n    },\n    leave: () => {\n      if (this.highlight >= 0) {\n        const old = this.body.getElementsByClassName(engineCssClass('highlighted'))[0];\n        if (old) {\n          old.classList.remove(engineCssClass('highlighted'));\n        }\n        this.highlight = -1;\n      }\n      this.events.fire(EngineRanking.EVENT_HIGHLIGHT_CHANGED, -1);\n    }\n  };\n\n  constructor(public readonly ranking: Ranking, header: HTMLElement, body: HTMLElement, tableId: string, style: GridStyleManager, private readonly ctx: IEngineRankingContext, roptions: Partial<IEngineRankingOptions> = {}) {\n    super(header, body, tableId, style, {mixins: [PrefetchMixin], batchSize: 20});\n    Object.assign(this.roptions, roptions);\n    body.dataset.ranking = ranking.id;\n\n    const that = this;\n    this.delayedUpdate = debounce((function (this: {type: string, primaryType: string}) {\n      if (this.type !== Ranking.EVENT_DIRTY_VALUES) {\n        that.events.fire(EngineRanking.EVENT_UPDATE_DATA);\n        return;\n      }\n      if (this.primaryType !== Column.EVENT_RENDERER_TYPE_CHANGED && this.primaryType !== Column.EVENT_GROUP_RENDERER_TYPE_CHANGED && this.primaryType !== Column.EVENT_LABEL_CHANGED) { // just the single column will be updated\n        that.updateBody();\n      }\n    }), 50, (current, next) => {\n      const currentEvent = current.self.type;\n      // order changed is more important\n      return currentEvent === Ranking.EVENT_ORDER_CHANGED ? current : next;\n    });\n\n    this.delayedUpdateAll = debounce(() => this.updateAll(), 50);\n    this.delayedUpdateColumnWidths = debounce(() => this.updateColumnWidths(), 50);\n    ranking.on(`${Ranking.EVENT_ADD_COLUMN}.hist`, (col: Column, index: number) => {\n      this.columns.splice(index, 0, this.createCol(col, index));\n      this.reindex();\n      this.delayedUpdateAll();\n    });\n    ranking.on(`${Ranking.EVENT_REMOVE_COLUMN}.body`, (col: Column, index: number) => {\n      EngineRanking.disableListener(col);\n      this.columns.splice(index, 1);\n      this.reindex();\n      this.delayedUpdateAll();\n    });\n    ranking.on(`${Ranking.EVENT_MOVE_COLUMN}.body`, (col: Column, index: number, old: number) => {\n      //delete first\n      const c = this.columns.splice(old, 1)[0];\n      console.assert(c.c === col);\n      // adapt target index based on previous index, i.e shift by one\n      this.columns.splice(old < index ? index - 1 : index, 0, c);\n      this.reindex();\n      this.delayedUpdateAll();\n    });\n    ranking.on(`${Ranking.EVENT_COLUMN_VISIBILITY_CHANGED}.body`, (col: Column, _oldValue: boolean, newValue: boolean) => {\n      if (newValue) {\n        // become visible\n        const index = ranking.children.indexOf(col);\n        this.columns.splice(index, 0, this.createCol(col, index));\n      } else {\n        // hide\n        const index = this.columns.findIndex((d) => d.c === col);\n        EngineRanking.disableListener(col);\n        this.columns.splice(index, 1);\n      }\n      this.reindex();\n      this.delayedUpdateAll();\n    });\n    ranking.on(`${Ranking.EVENT_ORDER_CHANGED}.body`, this.delayedUpdate);\n\n    this.selection = new SelectionManager(this.ctx, body);\n    this.selection.on(SelectionManager.EVENT_SELECT_RANGE, (from: number, to: number, additional: boolean) => {\n      this.selection.selectRange(this.data.slice(from, to + 1), additional);\n    });\n\n    this.renderCtx = Object.assign({\n      isGroup: (index: number) => isGroup(this.data[index]),\n      getRow: (index: number) => <IGroupItem>this.data[index],\n      getGroup: (index: number) => <IGroupData>this.data[index]\n    }, ctx);\n\n    // default context\n    this.columns = ranking.children.filter((c) => c.isVisible()).map((c, i) => this.createCol(c, i));\n    this._context = Object.assign({\n      columns: this.columns,\n      column: nonUniformContext(this.columns.map((w) => w.width), 100, COLUMN_PADDING)\n    }, uniformContext(0, 20));\n\n    this.columns.forEach((column) => {\n      if (column instanceof MultiLevelRenderColumn) {\n        column.updateWidthRule(this.style);\n      }\n      column.renderers = this.ctx.createRenderer(column.c);\n    });\n\n    this.style.updateRule(`hoverOnly${this.tableId}`, `\n      #${tableIds(this.tableId).tbody}:hover > .${engineCssClass('tr')}:hover .${cssClass('hover-only')},\n      #${tableIds(this.tableId).tbody} > .${engineCssClass('tr')}.${cssClass('selected')} .${cssClass('hover-only')},\n      #${tableIds(this.tableId).tbody} > .${engineCssClass('tr')}.${engineCssClass('highlighted')} .${cssClass('hover-only')}`, {\n        visibility: 'visible'\n      });\n  }\n\n  on(type: typeof EngineRanking.EVENT_WIDTH_CHANGED, listener: typeof widthChanged | null): this;\n  on(type: typeof EngineRanking.EVENT_UPDATE_DATA, listener: typeof updateData | null): this;\n  on(type: typeof EngineRanking.EVENT_RECREATE, listener: typeof recreate | null): this;\n  on(type: typeof EngineRanking.EVENT_HIGHLIGHT_CHANGED, listener: typeof highlightChanged | null): this;\n  on(type: string | string[], listener: IEventListener | null): this; // required for correct typings in *.d.ts\n  on(type: string | string[], listener: IEventListener | null): this {\n    this.events.on(type, listener);\n    return this;\n  }\n\n  get id() {\n    return this.ranking.id;\n  }\n\n  protected onVisibilityChanged(visible: boolean) {\n    super.onVisibilityChanged(visible);\n    if (visible) {\n      this.delayedUpdate.call({type: Ranking.EVENT_ORDER_CHANGED});\n    }\n  }\n\n  updateHeaders() {\n    return super.updateHeaders();\n  }\n\n  get currentData() {\n    return this.data;\n  }\n\n  get context(): ICellRenderContext<RenderColumn> {\n    return this._context;\n  }\n\n  protected createHeader(_document: Document, column: RenderColumn): HTMLElement | IAsyncUpdate<HTMLElement> {\n    return column.createHeader();\n  }\n\n  protected updateHeader(node: HTMLElement, column: RenderColumn) {\n    if (column instanceof MultiLevelRenderColumn) {\n      column.updateWidthRule(this.style);\n    }\n    return column.updateHeader(node);\n  }\n\n  protected createCell(_document: Document, index: number, column: RenderColumn) {\n    return column.createCell(index);\n  }\n\n  private createCellHandled(col: RenderColumn, index: number) {\n    const r = col.createCell(index);\n    let item: HTMLElement;\n    if (isAsyncUpdate(r)) {\n      item = this.handleCellReady(r.item, r.ready, col.index);\n    } else {\n      item = r;\n    }\n    this.initCellClasses(item, col.id);\n    return item;\n  }\n\n  protected updateCell(node: HTMLElement, index: number, column: RenderColumn) {\n    return column.updateCell(node, index);\n  }\n\n  private selectCanvas() {\n    if (this.canvasPool.length > 0) {\n      return this.canvasPool.pop()!;\n    }\n    return this.body.ownerDocument!.createElement('canvas');\n  }\n\n  private rowFlags(row: HTMLElement) {\n    const rowany: any = row;\n    const v = rowany.__lu__;\n    if (v == null) {\n      return rowany.__lu__ = {};\n    }\n    return v;\n  }\n\n  private visibleRenderedWidth() {\n    let width = 0;\n    for (const col of this.visibleColumns.frozen) {\n      width += this.columns[col].width + COLUMN_PADDING;\n    }\n    for (let col = this.visibleColumns.first; col <= this.visibleColumns.last; ++col) {\n      width += this.columns[col].width + COLUMN_PADDING;\n    }\n    if (width > 0) {\n      width -= COLUMN_PADDING; // for the last one\n    }\n    return width;\n  }\n\n  private pushLazyRedraw(canvas: HTMLCanvasElement, x: number, column: RenderColumn, render: IAbortAblePromise<IRenderCallback>) {\n    render.then((r) => {\n      const l = (this.loadingCanvas.get(canvas) || []);\n      const pos = l.findIndex((d) => d.render === render && d.col === column.index);\n      if (pos < 0) { // not part anymore ignore\n        return;\n      }\n      l.splice(pos, 1);\n      if (typeof r === 'function') { // i.e not aborted\n        const ctx = canvas.getContext('2d')!;\n        ctx.clearRect(x - 1, 0, column.width + 2, canvas.height);\n        ctx.save();\n        ctx.translate(x, 0);\n        r(ctx);\n        ctx.restore();\n      }\n\n      if (l.length > 0) {\n        return;\n      }\n      this.loadingCanvas.delete(canvas);\n      canvas.classList.remove(cssClass('loading-c'));\n    });\n\n    if (!this.loadingCanvas.has(canvas)) {\n      canvas.classList.add(cssClass('loading-c'));\n      this.loadingCanvas.set(canvas, [{col: column.index, render}]);\n    } else {\n      this.loadingCanvas.get(canvas)!.push({col: column.index, render});\n    }\n  }\n\n  private renderRow(canvas: HTMLCanvasElement, node: HTMLElement, index: number, width = this.visibleRenderedWidth()) {\n    if (this.loadingCanvas.has(canvas)) {\n      for (const a of this.loadingCanvas.get(canvas)!) {\n        a.render.abort();\n      }\n      this.loadingCanvas.delete(canvas);\n    }\n    canvas.classList.remove(cssClass('loading-c'));\n\n    canvas.width = width;\n    canvas.style.width = `${width}px`;\n    canvas.height = CANVAS_HEIGHT;\n    const ctx = canvas.getContext('2d')!;\n    ctx.imageSmoothingEnabled = false;\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.save();\n    const domColumns = <RenderColumn[]>[];\n\n    let x = 0;\n    const renderCellImpl = (col: number) => {\n      const c = this.columns[col];\n      const r = c.renderCell(ctx, index);\n      if (r === true) {\n        domColumns.push(c);\n      } else if (r !== false && isAbortAble(r)) {\n        this.pushLazyRedraw(canvas, x, c, r);\n      }\n      const shift = c.width + COLUMN_PADDING;\n      x += shift;\n      ctx.translate(shift, 0);\n    };\n\n    for (const col of this.visibleColumns.frozen) {\n      renderCellImpl(col);\n    }\n    for (let col = this.visibleColumns.first; col <= this.visibleColumns.last; ++col) {\n      renderCellImpl(col);\n    }\n    ctx.restore();\n\n    const visibleElements = node.childElementCount - 1; // for canvas\n\n    if (domColumns.length === 0) {\n      while (node.lastElementChild !== node.firstElementChild) {\n        const n = <HTMLElement>node.lastElementChild!;\n        node.removeChild(n);\n        this.recycleCell(n);\n      }\n      return;\n    }\n    if (domColumns.length === 1) {\n      const first = domColumns[0];\n      if (visibleElements === 0) {\n        const item = this.createCellHandled(first, index);\n        item.classList.add(cssClass('low'));\n        node.appendChild(item);\n        return;\n      }\n      const firstDOM = <HTMLElement>node.lastElementChild!;\n      if (visibleElements === 1 && firstDOM.dataset.colId === first.id) {\n        const isLoading = isLoadingCell(firstDOM);\n        if (isLoading) {\n          const item = this.createCellHandled(first, index);\n          node.replaceChild(item, firstDOM);\n          this.recycleCell(firstDOM, first.index);\n          return;\n        }\n        this.updateCellImpl(first, <HTMLElement>node.lastElementChild, index);\n        return;\n      }\n    }\n\n    const existing = new Map((<HTMLElement[]>Array.from(node.children)).slice(1).map((d) => <[string, HTMLElement]>[d.dataset.col, d]));\n    for (const col of domColumns) {\n      const elem = existing.get(col.id);\n      if (elem && !isLoadingCell(elem)) {\n        existing.delete(col.id);\n        this.updateCellImpl(col, elem, index);\n      } else {\n        const c = this.createCellHandled(col, index);\n        c.classList.add(cssClass('low'));\n        node.appendChild(c);\n      }\n    }\n    existing.forEach((v) => {\n      v.remove();\n      this.recycleCell(v);\n    });\n  }\n\n\n  protected updateCanvasCell(canvas: HTMLCanvasElement, node: HTMLElement, index: number, column: RenderColumn, x: number) {\n\n    // delete lazy that would render the same thing\n    if (this.loadingCanvas.has(canvas)) {\n      const l = this.loadingCanvas.get(canvas)!;\n      const me = l.filter((d) => d.col === column.index);\n      if (me.length > 0) {\n        this.loadingCanvas.set(canvas, l.filter((d) => d.col !== column.index));\n        for (const a of me) {\n          a.render.abort();\n        }\n      }\n    }\n\n    const ctx = canvas.getContext('2d')!;\n    ctx.clearRect(x - 1, 0, column.width + 2, canvas.height);\n    ctx.save();\n    ctx.translate(x, 0);\n    const needDOM = column.renderCell(ctx, index);\n    ctx.restore();\n\n    if (typeof needDOM !== 'boolean' && isAbortAble(needDOM)) {\n      this.pushLazyRedraw(canvas, x, column, needDOM);\n    }\n\n    if (needDOM !== true && node.childElementCount === 1) { // just canvas\n      return;\n    }\n    const elem = <HTMLElement>node.querySelector(`[data-col-id=\"${column.id}\"]`);\n    if (elem && !needDOM) {\n      elem.remove();\n      this.recycleCell(elem, column.index);\n      return;\n    }\n    if (elem) {\n      return this.updateCellImpl(column, elem, index);\n    }\n\n    const c = this.createCellHandled(column, index);\n    c.classList.add(cssClass('low'));\n    node.appendChild(c);\n  }\n\n  private reindex() {\n    this.columns.forEach((c, i) => {\n      c.index = i;\n    });\n  }\n\n  updateAll() {\n    this.columns.forEach((c, i) => {\n      c.index = i;\n      c.renderers = this.ctx.createRenderer(c.c);\n    });\n\n    this._context = Object.assign({}, this._context, {\n      column: nonUniformContext(this.columns.map((w) => w.width), 100, COLUMN_PADDING)\n    });\n\n    this.events.fire(EngineRanking.EVENT_RECREATE);\n    super.recreate();\n    this.events.fire(EngineRanking.EVENT_WIDTH_CHANGED);\n  }\n\n  updateBody() {\n    if (this.hidden) {\n      return;\n    }\n    this.events.fire(EngineRanking.EVENT_WIDTH_CHANGED);\n    super.forEachRow((row, rowIndex) => this.updateRow(row, rowIndex));\n  }\n\n  updateHeaderOf(col: Column) {\n    const i = this._context.columns.findIndex((d) => d.c === col);\n    if (i < 0) {\n      return false;\n    }\n    const node = <HTMLElement>this.header.children[i]!;\n    const column = this._context.columns[i];\n    if (node && column) {\n      this.updateHeader(node, column);\n    }\n    return node && column;\n  }\n\n  protected createRow(node: HTMLElement, rowIndex: number): void {\n    node.classList.add(this.style.cssClasses.tr);\n    this.roptions.customRowUpdate(node, rowIndex);\n    if (this.highlightHandler.enabled) {\n      node.addEventListener('mouseenter', this.highlightHandler.enter, PASSIVE);\n      this.rowFlags(node).highlight = true;\n    }\n\n    const isGroup = this.renderCtx.isGroup(rowIndex);\n\n    const meta = this.toRowMeta(rowIndex);\n    if (!meta) {\n      delete node.dataset.meta;\n    } else {\n      node.dataset.meta = meta;\n    }\n\n    if (isGroup) {\n      node.dataset.agg = 'group';\n      super.createRow(node, rowIndex);\n      return;\n    }\n\n    const {dataIndex} = this.renderCtx.getRow(rowIndex);\n    node.classList.toggle(engineCssClass('highlighted'), this.highlight === dataIndex);\n    node.dataset.i = dataIndex.toString();\n    node.dataset.agg = 'detail'; //or 'group'\n\n    this.selection.updateState(node, dataIndex);\n    this.selection.add(node);\n\n    const low = this.roptions.levelOfDetail(rowIndex) === 'low';\n    node.classList.toggle(cssClass('low'), low);\n\n    if (!low || this.ctx.provider.isSelected(dataIndex)) {\n      super.createRow(node, rowIndex);\n      return;\n    }\n\n    const canvas = this.selectCanvas();\n    node.appendChild(canvas);\n    node.addEventListener('mouseenter', this.canvasMouseHandler.enter, PASSIVE);\n    this.renderRow(canvas, node, rowIndex);\n  }\n\n  protected updateRow(node: HTMLElement, rowIndex: number, hoverLod?: 'high' | 'low'): void {\n    this.roptions.customRowUpdate(node, rowIndex);\n\n    const computedLod = this.roptions.levelOfDetail(rowIndex);\n    const low = (hoverLod ? hoverLod : computedLod) === 'low';\n    const wasLow = node.classList.contains(cssClass('low'));\n    const isGroup = this.renderCtx.isGroup(rowIndex);\n    const wasGroup = node.dataset.agg === 'group';\n\n    node.classList.toggle(cssClass('low'), computedLod === 'low');\n\n    if (this.highlightHandler.enabled && !this.rowFlags(node).highlight) {\n      node.addEventListener('mouseenter', this.highlightHandler.enter, PASSIVE);\n      this.rowFlags(node).highlight = true;\n    }\n\n    if (isGroup !== wasGroup) {\n      // change of mode clear the children to reinitialize them\n      clear(node);\n\n      // adapt body\n      node.dataset.agg = isGroup ? 'group' : 'detail';\n      if (isGroup) {\n        node.dataset.i = '';\n        this.selection.remove(node);\n      } else {\n        this.selection.add(node);\n      }\n    }\n\n    if (wasLow && (!computedLod || isGroup)) {\n      node.removeEventListener('mouseenter', this.canvasMouseHandler.enter);\n    }\n\n    const meta = this.toRowMeta(rowIndex);\n    if (!meta) {\n      delete node.dataset.meta;\n    } else {\n      node.dataset.meta = meta;\n    }\n\n    if (isGroup) {\n      node.classList.remove(engineCssClass('highlighted'));\n      super.updateRow(node, rowIndex);\n      return;\n    }\n\n    const {dataIndex} = this.renderCtx.getRow(rowIndex);\n    node.classList.toggle(engineCssClass('highlighted'), this.highlight === dataIndex);\n    node.dataset.i = dataIndex.toString();\n    this.selection.updateState(node, dataIndex);\n\n    const canvas = (wasLow && node.firstElementChild!.nodeName.toLowerCase() === 'canvas') ? <HTMLCanvasElement>node.firstElementChild! : null;\n    if (!low || this.ctx.provider.isSelected(dataIndex)) {\n      if (canvas) {\n        this.recycleCanvas(canvas);\n        clear(node);\n        node.removeEventListener('mouseenter', this.canvasMouseHandler.enter);\n      }\n      super.updateRow(node, rowIndex);\n      return;\n    }\n\n    // use canvas\n    if (wasLow && canvas) {\n      this.renderRow(canvas, node, rowIndex);\n      return;\n    }\n    // clear old\n    clear(node);\n    node.dataset.agg = 'detail';\n    const canvas2 = this.selectCanvas();\n    node.appendChild(canvas2);\n    node.addEventListener('mouseenter', this.canvasMouseHandler.enter, PASSIVE);\n    this.renderRow(canvas2, node, rowIndex);\n  }\n\n  private updateCanvasBody() {\n    const width = this.visibleRenderedWidth();\n    super.forEachRow((row, index) => {\n      if (EngineRanking.isCanvasRenderedRow(row)) {\n        this.renderRow(<HTMLCanvasElement>row.firstElementChild!, row, index, width);\n      }\n    });\n  }\n\n  private toRowMeta(rowIndex: number) {\n    const provider = this.renderCtx.provider;\n    const topNGetter = (group: IGroup) => provider.getTopNAggregated(this.ranking, group);\n    return toRowMeta(this.renderCtx.getRow(rowIndex), provider.getAggregationStrategy(), topNGetter);\n  }\n\n  protected updateShifts(top: number, left: number) {\n    super.updateShifts(top, left);\n\n    if (left === this.oldLeft) {\n      return;\n    }\n    this.oldLeft = left;\n    this.updateCanvasBody();\n  }\n\n  private recycleCanvas(canvas: HTMLCanvasElement) {\n    if (this.loadingCanvas.has(canvas)) {\n      for (const a of this.loadingCanvas.get(canvas)!) {\n        a.render.abort();\n      }\n      this.loadingCanvas.delete(canvas);\n    } else if (!canvas.classList.contains(cssClass('loading-c'))) {\n      this.canvasPool.push(canvas);\n    }\n  }\n\n  enableHighlightListening(enable: boolean) {\n    if (this.highlightHandler.enabled === enable) {\n      return;\n    }\n\n    this.highlightHandler.enabled = enable;\n\n    if (enable) {\n      this.body.addEventListener('mouseleave', this.highlightHandler.leave, PASSIVE);\n      super.forEachRow((row) => {\n        row.addEventListener('mouseenter', this.highlightHandler.enter, PASSIVE);\n        this.rowFlags(row).highlight = true;\n      });\n      return;\n    }\n\n    this.body.removeEventListener('mouseleave', this.highlightHandler.leave);\n\n    super.forEachRow((row) => {\n      row.removeEventListener('mouseenter', this.highlightHandler.enter);\n      this.rowFlags(row).highlight = false;\n    });\n  }\n\n  private updateHoveredRow(row: HTMLElement, hover: boolean) {\n    const isCanvas = EngineRanking.isCanvasRenderedRow(row);\n    if (isCanvas !== hover) {\n      return; // good nothing to do\n    }\n    const index = parseInt(row.dataset.index!, 10);\n    this.updateRow(row, index, hover ? 'high' : 'low');\n  }\n\n  protected forEachRow(callback: (row: HTMLElement, rowIndex: number) => void, inplace: boolean = false) {\n    const adapter = (row: HTMLElement, rowIndex: number) => {\n      if (EngineRanking.isCanvasRenderedRow(row)) {\n        // skip canvas\n        return;\n      }\n      callback(row, rowIndex);\n    };\n    return super.forEachRow(adapter, inplace);\n  }\n\n  updateSelection(selectedDataIndices: {has(i: number): boolean}) {\n    super.forEachRow((node: HTMLElement, rowIndex: number) => {\n      if (this.renderCtx.isGroup(rowIndex)) {\n        this.updateRow(node, rowIndex);\n      } else {\n        // fast pass for item\n        this.selection.update(node, selectedDataIndices);\n      }\n    }, true);\n  }\n\n  updateColumnWidths() {\n    // update the column context in place\n    (<any>this._context).column = nonUniformContext(this._context.columns.map((w) => w.width), 100, COLUMN_PADDING);\n    super.updateColumnWidths();\n    const {columns} = this.context;\n    //no data update needed since just width changed\n    columns.forEach((column) => {\n      if (column instanceof MultiLevelRenderColumn) {\n        column.updateWidthRule(this.style);\n      }\n      column.renderers = this.ctx.createRenderer(column.c);\n    });\n    this.events.fire(EngineRanking.EVENT_WIDTH_CHANGED);\n  }\n\n  private updateColumn(index: number) {\n    const columns = this.context.columns;\n    const column = columns[index];\n    if (!column) {\n      return false;\n    }\n    let x = 0;\n    for (let i = this.visibleColumns.first; i < index; ++i) {\n      x += columns[i].width + COLUMN_PADDING;\n    }\n    super.forEachRow((row, rowIndex) => {\n      if (EngineRanking.isCanvasRenderedRow(row)) {\n        this.updateCanvasCell(<HTMLCanvasElement>row.firstElementChild!, row, rowIndex, column, x);\n        return;\n      }\n      this.updateCellImpl(column, <HTMLElement>row.children[index], rowIndex);\n    });\n    return true;\n  }\n\n  private updateCellImpl(column: RenderColumn, before: HTMLElement, rowIndex: number) {\n    if (!before) {\n      return; // race condition\n    }\n    const r = this.updateCell(before, rowIndex, column);\n    let after: HTMLElement;\n    if (isAsyncUpdate(r)) {\n      after = this.handleCellReady(r.item, r.ready, column.index);\n    } else {\n      after = r;\n    }\n    if (before === after || !after) {\n      return;\n    }\n    this.initCellClasses(after, column.id);\n    before.parentElement!.replaceChild(after, before);\n  }\n\n  private initCellClasses(node: HTMLElement, id: string) {\n    node.dataset.id = id;\n    node.classList.add(engineCssClass('td'), this.style.cssClasses.td, engineCssClass(`td-${this.tableId}`));\n  }\n\n  destroy() {\n    super.destroy();\n    this.style.deleteRule(`hoverOnly${this.tableId}`);\n    this.ranking.flatColumns.forEach((c) => EngineRanking.disableListener(c));\n  }\n\n  groupData(): (IGroupItem | IGroupData)[] {\n    const groups = this.ranking.getGroups();\n    const provider = this.ctx.provider;\n    const strategy = provider.getAggregationStrategy();\n    const alwaysShowGroup = isAlwaysShowingGroupStrategy(strategy);\n\n    const r = <(IGroupItem | IGroupData)[]>[];\n\n    if (groups.length === 0) {\n      return r;\n    }\n\n    const pushItem = (group: IOrderedGroup, dataIndex: number, i: number) => {\n      r.push({\n        group,\n        dataIndex,\n        relativeIndex: i\n      });\n    };\n\n    if (groups.length === 1 && groups[0].name === defaultGroup.name) {\n      const group = groups[0];\n      const l = group.order.length;\n      for (let i = 0; i < l; ++i) {\n        pushItem(group, group.order[i], i);\n      }\n      return r;\n    }\n\n    const roots = groupRoots(groups);\n\n    const pushGroup = (group: IOrderedGroup | Readonly<IGroupParent>) => {\n      const n = provider.getTopNAggregated(this.ranking, group);\n\n      // all are IOrderedGroup since propagated\n      const ordered = <IOrderedGroup>group;\n      const gparent = <IGroupParent>group;\n\n      if (n === 0 || alwaysShowGroup) {\n        r.push(ordered);\n      }\n\n      if (n !== 0 && Array.isArray(gparent.subGroups) && gparent.subGroups.length > 0) {\n        for (const g of gparent.subGroups) {\n          pushGroup(<IOrderedGroup | Readonly<IGroupParent>>g);\n        }\n        return;\n      }\n\n      const l = n < 0 ? ordered.order.length : Math.min(n, ordered.order.length);\n      for (let i = 0; i < l; ++i) {\n        pushItem(ordered, ordered.order[i], i);\n      }\n    };\n\n    for (const root of roots) {\n      pushGroup(root);\n    }\n\n    return r;\n  }\n\n  render(data: (IGroupItem | IGroupData)[], rowContext: IExceptionContext) {\n    const previous = this._context;\n    const previousData = this.data;\n    this.data = data;\n\n    this.columns.forEach((c, i) => {\n      c.index = i;\n      c.renderers = this.ctx.createRenderer(c.c);\n    });\n    this._context = Object.assign({\n      columns: this.columns,\n      column: nonUniformContext(this.columns.map((w) => w.width), 100, COLUMN_PADDING)\n    }, rowContext);\n\n    if (!this.bodyScroller) { // somehow not part of dom\n      return;\n    }\n    this.events.fire(EngineRanking.EVENT_RECREATE);\n    return super.recreate(this.roptions.animation ? lineupAnimation(previous, previousData, this.data) : undefined);\n  }\n\n  setHighlight(dataIndex: number) {\n    this.highlight = dataIndex;\n    const old = this.body.querySelector(`[data-i].${engineCssClass('highlighted')}`);\n    if (old) {\n      old.classList.remove(engineCssClass('highlighted'));\n    }\n    if (dataIndex < 0) {\n      return;\n    }\n    const item = this.body.querySelector(`[data-i=\"${dataIndex}\"]`);\n    if (item) {\n      item.classList.add(engineCssClass('highlighted'));\n    }\n    return item != null;\n  }\n\n  findNearest(dataIndices: number[]) {\n    // find the nearest visible data index\n    // first check if already visible\n    const index = dataIndices.find((d) => Boolean(this.body.querySelectorAll(`[data-i=\"${d}\"]`)));\n    if (index != null) {\n      return index; // visible one\n    }\n    const visible = this.visible;\n    const lookFor = new Set(dataIndices);\n    let firstBeforePos = -1;\n    let firstAfterPos = -1;\n    for (let i = visible.first; i >= 0; --i) {\n      const d = this.data[i];\n      if (!isGroup(d) && lookFor.has(d.dataIndex)) {\n        firstBeforePos = i;\n        break;\n      }\n    }\n    for (let i = visible.last; i < this.data.length; ++i) {\n      const d = this.data[i];\n      if (!isGroup(d) && lookFor.has(d.dataIndex)) {\n        firstAfterPos = i;\n        break;\n      }\n    }\n\n    if (firstBeforePos < 0 && firstBeforePos < 0) {\n      return -1; // not found at all\n    }\n    const nearestPos = (firstBeforePos >= 0 && (visible.first - firstBeforePos) < (firstAfterPos - visible.last)) ? firstBeforePos : firstAfterPos;\n    return (<IGroupItem>this.data[nearestPos]).dataIndex;\n  }\n\n  scrollIntoView(dataIndex: number) {\n    const item = this.body.querySelector(`[data-i=\"${dataIndex}\"]`);\n    if (item) {\n      item.scrollIntoView(true);\n      return true;\n    }\n    const index = this.data.findIndex((d) => !isGroup(d) && d.dataIndex === dataIndex);\n    if (index < 0) {\n      return false; // part of a group?\n    }\n\n    const posOf = () => {\n      const c = this._context;\n      if (c.exceptions.length === 0 || index < c.exceptions[0].index) {\n        // fast pass\n        return index * c.defaultRowHeight;\n      }\n      const before = c.exceptions.reverse().find((d) => d.index <= index);\n      if (!before) {\n        return -1;\n      }\n      if (before.index === index) {\n        return before.y;\n      }\n      const regular = index - before.index - 1;\n      return before.y2 + regular * c.defaultRowHeight;\n    };\n    const pos = posOf();\n    if (pos < 0) {\n      return false;\n    }\n    const scroller = this.bodyScroller;\n    if (!scroller) {\n      return false;\n    }\n    const top = scroller.scrollTop;\n    scroller.scrollTop = Math.min(pos, scroller.scrollHeight - scroller.clientHeight);\n    this.onScrolledVertically(scroller.scrollTop, scroller.clientHeight, top < scroller.scrollTop);\n\n    const found = this.body.querySelector(`[data-i=\"${dataIndex}\"]`);\n    if (found) {\n      found.scrollIntoView(true);\n      return true;\n    }\n    return false;\n  }\n\n  getHighlight() {\n    const item = <HTMLElement>this.body.querySelector(`[data-i]:hover, [data-i].${engineCssClass('highlighted')}`);\n    if (item) {\n      return parseInt(item.dataset.i!, 10);\n    }\n    return this.highlight;\n  }\n\n  private createCol(c: Column, index: number) {\n    const col = (isMultiLevelColumn(c) && !c.getCollapsed()) ? new MultiLevelRenderColumn(c, index, this.renderCtx, this.roptions.flags) : new RenderColumn(c, index, this.renderCtx, this.roptions.flags);\n\n    c.on(`${Column.EVENT_WIDTH_CHANGED}.body`, () => {\n      // replace myself upon width change since we renderers are allowed to\n      col.renderers = this.ctx.createRenderer(c);\n      this.delayedUpdateColumnWidths();\n    });\n    const debounceUpdate = debounce(() => {\n      const valid = this.updateColumn(col.index);\n      if (!valid) {\n        EngineRanking.disableListener(c); // destroy myself\n      }\n    }, 25);\n    c.on([`${Column.EVENT_RENDERER_TYPE_CHANGED}.body`, `${Column.EVENT_GROUP_RENDERER_TYPE_CHANGED}.body`], () => {\n      // replace myself upon renderer type change\n      col.renderers = this.ctx.createRenderer(c);\n      debounceUpdate();\n    });\n    const that = this;\n    c.on(`${Column.EVENT_DIRTY_HEADER}.body`, function (this: IEventContext) {\n      const valid = that.updateHeaderOf(col.c);\n      if (!valid) {\n        EngineRanking.disableListener(c); // destroy myself\n      }\n    });\n    c.on(`${Column.EVENT_SUMMARY_RENDERER_TYPE_CHANGED}.body`, () => {\n      // replace myself upon renderer type change\n      col.renderers = this.ctx.createRenderer(c);\n      const valid = this.updateHeaderOf(col.c);\n      if (!valid) {\n        EngineRanking.disableListener(c); // destroy myself\n      }\n    });\n    c.on(`${Column.EVENT_DIRTY_VALUES}.body`, debounceUpdate);\n\n    if (isMultiLevelColumn(c)) {\n      c.on(`${StackColumn.EVENT_COLLAPSE_CHANGED}.body`, () => {\n        // rebuild myself from scratch\n        EngineRanking.disableListener(c); // destroy myself\n        const index = col.index;\n        const replacement = this.createCol(c, index);\n        replacement.index = index;\n        this.columns.splice(index, 1, replacement);\n        this.delayedUpdateAll();\n      });\n      if (!c.getCollapsed()) {\n        (<MultiLevelRenderColumn>col).updateWidthRule(this.style);\n        c.on(`${StackColumn.EVENT_MULTI_LEVEL_CHANGED}.body`, () => {\n          (<MultiLevelRenderColumn>col).updateWidthRule(this.style);\n        });\n        c.on(`${StackColumn.EVENT_MULTI_LEVEL_CHANGED}.bodyUpdate`, debounceUpdate);\n      }\n    }\n\n    return col;\n  }\n\n  private static isCanvasRenderedRow(row: HTMLElement) {\n    return row.classList.contains(cssClass('low')) && row.childElementCount >= 1 && row.firstElementChild!.nodeName.toLowerCase() === 'canvas';\n  }\n\n  private static disableListener(c: Column) {\n    c.on(`${Column.EVENT_WIDTH_CHANGED}.body`, null);\n    c.on([`${Column.EVENT_RENDERER_TYPE_CHANGED}.body`, `${Column.EVENT_GROUP_RENDERER_TYPE_CHANGED}.body`, `${Column.EVENT_SUMMARY_RENDERER_TYPE_CHANGED}.body`, `${Column.EVENT_LABEL_CHANGED}.body`], null);\n    c.on(`${Ranking.EVENT_DIRTY_HEADER}.body`, null);\n    c.on(`${Ranking.EVENT_DIRTY_VALUES}.body`, null);\n\n    if (!(isMultiLevelColumn(c))) {\n      return;\n    }\n    c.on(`${StackColumn.EVENT_COLLAPSE_CHANGED}.body`, null);\n    c.on(`${StackColumn.EVENT_MULTI_LEVEL_CHANGED}.body`, null);\n    c.on(`${StackColumn.EVENT_MULTI_LEVEL_CHANGED}.bodyUpdate`, null);\n  }\n}\n","import {IExceptionContext, ITableSection, range} from 'lineupengine';\nimport {IGroupData, IGroupItem, IOrderedGroup, isGroup, Ranking} from '../model';\nimport {aria, cssClass, engineCssClass, SLOPEGRAPH_WIDTH} from '../styles';\nimport {IRankingHeaderContextContainer, EMode} from './interfaces';\nimport {forEachIndices, filterIndices} from '../model/internal';\n\ninterface ISlope {\n  isSelected(selection: {has(dataIndex: number): boolean}): boolean;\n\n  update(path: SVGPathElement, width: number): void;\n\n  readonly dataIndices: number[];\n}\n\nclass ItemSlope implements ISlope {\n  constructor(private readonly left: number, private readonly right: number, public readonly dataIndices: number[]) {\n\n  }\n\n  isSelected(selection: {has(dataIndex: number): boolean}) {\n    return this.dataIndices.length === 1 ? selection.has(this.dataIndices[0]) : this.dataIndices.some((s) => selection.has(s));\n  }\n\n  update(path: SVGPathElement, width: number) {\n    path.setAttribute('data-i', String(this.dataIndices[0]));\n    path.setAttribute('class', cssClass('slope'));\n    path.setAttribute('d', `M0,${this.left}L${width},${this.right}`);\n  }\n}\n\nclass GroupSlope implements ISlope {\n  constructor(private readonly left: [number, number], private readonly right: [number, number], public readonly dataIndices: number[]) {\n\n  }\n\n  isSelected(selection: {has(dataIndex: number): boolean}) {\n    return this.dataIndices.some((s) => selection.has(s));\n  }\n\n  update(path: SVGPathElement, width: number) {\n    path.setAttribute('class', cssClass('group-slope'));\n    path.setAttribute('d', `M0,${this.left[0]}L${width},${this.right[0]}L${width},${this.right[1]}L0,${this.left[1]}Z`);\n  }\n}\n\ninterface IPos {\n  start: number;\n  heightPerRow: number;\n  rows: number[]; // data indices\n  offset: number;\n  ref: number[];\n  group: IOrderedGroup;\n}\n\nexport interface ISlopeGraphOptions {\n  mode: EMode;\n}\n\nexport default class SlopeGraph implements ITableSection {\n  readonly node: SVGSVGElement;\n\n  private leftSlopes: ISlope[][] = [];\n  // rendered row to one ore multiple slopes\n  private rightSlopes: ISlope[][] = [];\n  private readonly pool: SVGPathElement[] = [];\n\n  private scrollListener: ((act: {top: number, height: number}) => void) | null = null;\n\n  readonly width = SLOPEGRAPH_WIDTH;\n  readonly height = 0;\n\n  private current: {\n    leftRanking: Ranking;\n    left: (IGroupItem | IGroupData)[];\n    leftContext: IExceptionContext;\n    rightRanking: Ranking;\n    right: (IGroupItem | IGroupData)[];\n    rightContext: IExceptionContext;\n  } | null = null;\n\n  private chosen = new Set<ISlope>();\n  private chosenSelectionOnly = new Set<ISlope>();\n\n  private _mode: EMode = EMode.ITEM;\n\n  constructor(public readonly header: HTMLElement, public readonly body: HTMLElement, public readonly id: string, private readonly ctx: IRankingHeaderContextContainer, options: Partial<ISlopeGraphOptions> = {}) {\n    this.node = header.ownerDocument!.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    this.node.innerHTML = `<g transform=\"translate(0,0)\"></g>`;\n    header.classList.add(cssClass('slopegraph-header'));\n    this._mode = options.mode === EMode.BAND ? EMode.BAND : EMode.ITEM;\n    this.initHeader(header);\n    body.classList.add(cssClass('slopegraph'));\n    this.body.style.height = `1px`;\n    body.appendChild(this.node);\n  }\n\n  init() {\n    this.hide(); // hide by default\n\n    const scroller = <any>this.body.parentElement!;\n\n    //sync scrolling of header and body\n    // use internals from lineup engine\n    const scroll = (<any>scroller).__le_scroller__;\n    let old: {top: number, height: number} = scroll.asInfo();\n    scroll.push('animation', this.scrollListener = (act: {top: number, height: number}) => {\n      if (Math.abs(old.top - act.top) < 5) {\n        return;\n      }\n      old = act;\n      this.onScrolledVertically(act.top, act.height);\n    });\n  }\n\n  private initHeader(header: HTMLElement) {\n    const active = cssClass('active');\n    header.innerHTML = `<i title=\"Item\" class=\"${this._mode === EMode.ITEM ? active : ''}\">${aria('Item')}</i>\n        <i title=\"Band\" class=\"${this._mode === EMode.BAND ? active : ''}\">${aria('Band')}</i>`;\n\n    const icons = <HTMLElement[]>Array.from(header.children);\n    icons.forEach((n: HTMLElement, i) => {\n      n.onclick = (evt) => {\n        evt.preventDefault();\n        evt.stopPropagation();\n        if (n.classList.contains(active)) {\n          return;\n        }\n        this.mode = i === 0 ? EMode.ITEM : EMode.BAND;\n        icons.forEach((d, j) => d.classList.toggle(active, j === i));\n      };\n    });\n  }\n\n  get mode() {\n    return this._mode;\n  }\n\n  set mode(value: EMode) {\n    if (value === this._mode) {\n      return;\n    }\n    this._mode = value;\n    if (this.current) {\n      this.rebuild(this.current.leftRanking, this.current.left, this.current.leftContext, this.current.rightRanking, this.current.right, this.current.rightContext);\n    }\n  }\n\n  get hidden() {\n    return this.header.classList.contains(engineCssClass('loading'));\n  }\n\n  set hidden(value: boolean) {\n    this.header.classList.toggle(engineCssClass('loading'), value);\n    this.body.classList.toggle(engineCssClass('loading'), value);\n  }\n\n  hide() {\n    this.hidden = true;\n  }\n\n  show() {\n    const was = this.hidden;\n    this.hidden = false;\n    if (was) {\n      this.revalidate();\n    }\n  }\n\n  destroy() {\n    this.header.remove();\n    if (this.scrollListener) {\n      //sync scrolling of header and body\n      // use internals from lineup engine\n      const scroll = (<any>this.body.parentElement!).__le_scroller__;\n      scroll.remove(this.scrollListener);\n    }\n    this.body.remove();\n  }\n\n  rebuild(leftRanking: Ranking, left: (IGroupItem | IGroupData)[], leftContext: IExceptionContext, rightRanking: Ranking, right: (IGroupItem | IGroupData)[], rightContext: IExceptionContext) {\n    this.current = {leftRanking, left, leftContext, right, rightRanking, rightContext};\n\n    const lookup: Map<number, IPos> = this.prepareRightSlopes(right, rightContext);\n    this.computeSlopes(left, leftContext, lookup);\n\n    this.revalidate();\n  }\n\n  private computeSlopes(left: (IGroupItem | IGroupData)[], leftContext: IExceptionContext, lookup: Map<number, IPos>) {\n    const mode = this.mode;\n    const fakeGroups = new Map<IOrderedGroup, ISlope[]>();\n\n    const createFakeGroup = (first: number, group: IOrderedGroup) => {\n      let count = 0;\n      let height = 0;\n      // find all items in this group, assuming that they are in order\n      for (let i = first; i < left.length; ++i) {\n        const item = left[i];\n        if (isGroup(item) || (<IGroupItem>item).group !== group) {\n          break;\n        }\n        count++;\n        height += (leftContext.exceptionsLookup.get(i) || leftContext.defaultRowHeight);\n      }\n\n      const padded = height - leftContext.padding(first + count - 1);\n\n      const gr = group;\n\n      return {gr, padded, height};\n    };\n\n    let acc = 0;\n    this.leftSlopes = left.map((r, i) => {\n\n      let height = (leftContext.exceptionsLookup.get(i) || leftContext.defaultRowHeight);\n      let padded = height - 0; //leftContext.padding(i);\n      const slopes = <ISlope[]>[];\n      const start = acc;\n\n      // shift by item height\n      acc += height;\n\n      let offset = 0;\n\n      const push = (s: ISlope, right: IPos, common = 1, heightPerRow = 0) => {\n        // store slope in both\n        slopes.push(s);\n        forEachIndices(right.ref, (r) => this.rightSlopes[r].push(s));\n\n        // update the offset of myself and of the right side\n        right.offset += common * right.heightPerRow;\n        offset += common * heightPerRow;\n      };\n\n      let gr: IGroupData;\n\n      if (isGroup(r)) {\n        gr = r;\n      } else {\n        const item = (<IGroupItem>r);\n        const dataIndex = item.dataIndex;\n        const right = lookup.get(dataIndex);\n\n        if (!right) { // no match\n          return slopes;\n        }\n        if (mode === EMode.ITEM) {\n          const s = new ItemSlope(start + padded / 2, right.start + right.offset + right.heightPerRow / 2, [dataIndex]);\n          push(s, right);\n          return slopes;\n        }\n\n        if (fakeGroups.has(item.group)) {\n          // already handled by the first one, take the fake slopes\n          return fakeGroups.get(item.group)!;\n        }\n\n        const fakeGroup = createFakeGroup(i, item.group);\n        gr = fakeGroup.gr;\n        height = fakeGroup.height;\n        padded = fakeGroup.padded;\n        fakeGroups.set(item.group, slopes);\n      }\n\n      // free group items to share\n      const free = new Set(gr.order);\n\n      const heightPerRow = padded / gr.order.length;\n\n      forEachIndices(gr.order, (d: number) => {\n        if (!free.has(d)) {\n          return; // already handled\n        }\n        free.delete(d);\n        const right = lookup.get(d);\n        if (!right) {\n          return; // no matching\n        }\n        // find all of this group\n        const intersection = filterIndices(right.rows, (r) => free.delete(r));\n        intersection.push(d); //self\n\n        const common = intersection.length;\n        let s: ISlope;\n        if (common === 1) {\n          s = new ItemSlope(start + offset + heightPerRow / 2, right.start + right.offset + right.heightPerRow / 2, [d]);\n        } else if (mode === EMode.ITEM) {\n          // fake item\n          s = new ItemSlope(start + offset + heightPerRow * common / 2, right.start + right.offset + right.heightPerRow * common / 2, intersection);\n        } else {\n          s = new GroupSlope([start + offset, start + offset + heightPerRow * common], [right.start + right.offset, right.start + right.offset + right.heightPerRow * common], intersection);\n        }\n        push(s, right, common, heightPerRow);\n      });\n      return slopes;\n    });\n  }\n\n  private prepareRightSlopes(right: (IGroupItem | IGroupData)[], rightContext: IExceptionContext) {\n    const lookup = new Map<number, IPos>();\n    const mode = this.mode;\n\n    const fakeGroups = new Map<IOrderedGroup, IPos>();\n    let acc = 0;\n\n    this.rightSlopes = right.map((r, i) => {\n      const height = (rightContext.exceptionsLookup.get(i) || rightContext.defaultRowHeight);\n      const padded = height - 0; //rightContext.padding(i);\n      const start = acc;\n      acc += height;\n      const slopes = <ISlope[]>[];\n\n      const base = {\n        start,\n        offset: 0,\n        ref: [i]\n      };\n      if (isGroup(r)) {\n        const p = Object.assign(base, {\n          rows: Array.from(r.order),\n          heightPerRow: padded / r.order.length,\n          group: r\n        });\n\n        forEachIndices(r.order, (ri) => lookup.set(ri, p));\n        return slopes;\n      }\n      // item\n      const item = (<IGroupItem>r);\n      const dataIndex = r.dataIndex;\n\n      let p = Object.assign(base, {\n        rows: [dataIndex],\n        heightPerRow: padded,\n        group: item.group\n      });\n\n      if (mode === EMode.ITEM) {\n        lookup.set(dataIndex, p);\n        return slopes;\n      }\n      // forced band mode\n      // merge with the 'ueber' band\n      if (!fakeGroups.has(item.group)) {\n        p.heightPerRow = height; // include padding\n        // TODO just support uniform item height\n        fakeGroups.set(item.group, p);\n      } else { // reuse old\n        p = fakeGroups.get(item.group)!;\n        p.rows.push(dataIndex);\n        p.ref.push(i);\n      }\n      lookup.set(dataIndex, p);\n      return slopes;\n    });\n\n    return lookup;\n  }\n\n  private revalidate() {\n    if (!this.current || this.hidden) {\n      return;\n    }\n    const p = this.body.parentElement!;\n    this.onScrolledVertically(p.scrollTop, p.clientHeight);\n  }\n\n\n  highlight(dataIndex: number) {\n    const highlight = engineCssClass('highlighted');\n    const old = this.body.querySelector(`[data-i].${highlight}`);\n    if (old) {\n      old.classList.remove(highlight);\n    }\n    if (dataIndex < 0) {\n      return;\n    }\n    const item = this.body.querySelector(`[data-i=\"${dataIndex}\"]`);\n    if (item) {\n      item.classList.add(highlight);\n    }\n    return item != null;\n  }\n\n  private onScrolledVertically(scrollTop: number, clientHeight: number) {\n    if (!this.current) {\n      return;\n    }\n\n    // which lines are currently shown\n    const {leftContext, rightContext} = this.current;\n    const left = range(scrollTop, clientHeight, leftContext.defaultRowHeight, leftContext.exceptions, leftContext.numberOfRows);\n    const right = range(scrollTop, clientHeight, rightContext.defaultRowHeight, rightContext.exceptions, rightContext.numberOfRows);\n\n    const start = Math.min(left.firstRowPos, right.firstRowPos);\n    const end = Math.max(left.endPos, right.endPos);\n\n    // move to right position\n    this.body.style.transform = `translate(0, ${start.toFixed(0)}px)`;\n    this.body.style.height = `${(end - start).toFixed(0)}px`;\n    (this.node.firstElementChild!).setAttribute('transform', `translate(0,-${start.toFixed(0)})`);\n\n    this.chosen = this.choose(left.first, left.last, right.first, right.last);\n    this.render(this.chosen, this.chooseSelection(left.first, left.last, this.chosen));\n  }\n\n  private choose(leftVisibleFirst: number, leftVisibleLast: number, rightVisibleFirst: number, rightVisibleLast: number) {\n    // assume no separate scrolling\n\n    const slopes = new Set<ISlope>();\n    for (let i = leftVisibleFirst; i <= leftVisibleLast; ++i) {\n      for (const s of this.leftSlopes[i]) {\n        slopes.add(s);\n      }\n    }\n    for (let i = rightVisibleFirst; i <= rightVisibleLast; ++i) {\n      for (const s of this.rightSlopes[i]) {\n        slopes.add(s);\n      }\n    }\n    return slopes;\n  }\n\n  private chooseSelection(leftVisibleFirst: number, leftVisibleLast: number, alreadyVisible: Set<ISlope>) {\n    const slopes = new Set<ISlope>();\n    // ensure selected slopes are always part of\n    const p = this.ctx.provider;\n\n    if (p.getSelection().length === 0) {\n      return slopes;\n    }\n\n    const selectionLookup = {has: (dataIndex: number) => p.isSelected(dataIndex)};\n\n    // try all not visible ones\n    for (let i = 0; i < leftVisibleFirst; ++i) {\n      for (const s of this.leftSlopes[i]) {\n        if (s.isSelected(selectionLookup) && !alreadyVisible.has(s)) {\n          slopes.add(s);\n        }\n      }\n    }\n    for (let i = leftVisibleLast + 1; i < this.leftSlopes.length; ++i) {\n      for (const s of this.leftSlopes[i]) {\n        if (s.isSelected(selectionLookup) && !alreadyVisible.has(s)) {\n          slopes.add(s);\n        }\n      }\n    }\n    return slopes;\n  }\n\n  private updatePath(p: SVGPathElement, g: SVGGElement, s: ISlope, width: number, selection: {has(dataIndex: number): boolean}) {\n    s.update(p, width);\n    (<any>p).__data__ = s; // data binding\n    const selected = s.isSelected(selection);\n    p.classList.toggle(cssClass('selected'), selected);\n    if (selected) {\n      g.appendChild(p); // to put it on top\n    }\n  }\n\n  private render(visible: Set<ISlope>, selectionSlopes: Set<ISlope>) {\n    const g = <SVGGElement>this.node.firstElementChild!;\n    const width = g.ownerSVGElement!.getBoundingClientRect()!.width;\n    const paths = this.matchLength(visible.size + selectionSlopes.size, g);\n\n    const p = this.ctx.provider;\n    const selectionLookup = {has: (dataIndex: number) => p.isSelected(dataIndex)};\n\n    // update paths\n    let i = 0;\n    const updatePath = (s: ISlope) => {\n      this.updatePath(paths[i++], g, s, width, selectionLookup);\n    };\n\n    visible.forEach(updatePath);\n    selectionSlopes.forEach(updatePath);\n  }\n\n  private addPath(g: SVGGElement) {\n    const elem = this.pool.pop();\n    if (elem) {\n      g.appendChild(elem);\n      return elem;\n    }\n\n    const path = g.ownerDocument!.createElementNS('http://www.w3.org/2000/svg', 'path');\n    path.onclick = (evt) => {\n      // d3 style\n      const s: ISlope = (<any>path).__data__;\n      const p = this.ctx.provider;\n      const ids = s.dataIndices;\n      if (evt.ctrlKey) {\n        ids.forEach((id) => p.toggleSelection(id, true));\n      } else {\n        // either unset or set depending on the first state\n        const isSelected = p.isSelected(ids[0]!);\n        p.setSelection(isSelected ? [] : ids);\n      }\n    };\n    g.appendChild(path);\n    return path;\n  }\n\n  private matchLength(slopes: number, g: SVGGElement) {\n    const paths = <SVGPathElement[]>Array.from(g.children);\n    for (let i = slopes; i < paths.length; ++i) {\n      const elem = paths[i];\n      this.pool.push(elem);\n      elem.remove();\n    }\n\n    for (let i = paths.length; i < slopes; ++i) {\n      paths.push(this.addPath(g));\n    }\n    return paths;\n  }\n\n  updateSelection(selectedDataIndices: Set<number>) {\n    const g = <SVGGElement>this.node.firstElementChild!;\n    const paths = <SVGPathElement[]>Array.from(g.children);\n\n    const openDataIndices = new Set(selectedDataIndices);\n\n    if (selectedDataIndices.size === 0) {\n      // clear\n      for (const p of paths) {\n        const s: ISlope = (<any>p).__data__;\n        p.classList.toggle(cssClass('selected'), false);\n        if (this.chosenSelectionOnly.has(s)) {\n          p.remove();\n        }\n      }\n      this.chosenSelectionOnly.clear();\n      return;\n    }\n\n    for (const p of paths) {\n      const s: ISlope = (<any>p).__data__;\n      const selected = s.isSelected(selectedDataIndices);\n      p.classList.toggle(cssClass('selected'), selected);\n      if (!selected) {\n        if (this.chosenSelectionOnly.delete(s)) {\n          // was only needed because of the selection\n          p.remove();\n        }\n        continue;\n      }\n\n      g.appendChild(p); // to put it on top\n      // remove already handled\n      s.dataIndices.forEach((d) => openDataIndices.delete(d));\n    }\n\n    if (openDataIndices.size === 0) {\n      return;\n    }\n\n    // find and add missing slopes\n    const width = g.ownerSVGElement!.getBoundingClientRect()!.width;\n    for (const ss of this.leftSlopes) {\n      for (const s of ss) {\n        if (this.chosen.has(s) || this.chosenSelectionOnly.has(s) || !s.isSelected(openDataIndices)) {\n          // not visible or not selected -> skip\n          continue;\n        }\n        // create new path for it\n        this.chosenSelectionOnly.add(s);\n        const p = this.addPath(g);\n        this.updatePath(p, g, s, width, openDataIndices);\n      }\n    }\n  }\n}\n","import {GridStyleManager, MultiTableRowRenderer, nonUniformContext} from 'lineupengine';\nimport {ILineUpFlags, ILineUpOptions} from '../config';\nimport {AEventDispatcher, IEventListener, round, suffix} from '../internal';\nimport {Column, IGroupData, IGroupItem, isGroup, Ranking, IGroup} from '../model';\nimport {DataProvider} from '../provider';\nimport {isSummaryGroup, groupEndLevel} from '../provider/internal';\nimport {IImposer, IRenderContext} from '../renderer';\nimport {chooseGroupRenderer, chooseRenderer, chooseSummaryRenderer, getPossibleRenderer} from '../renderer/renderers';\nimport {cssClass} from '../styles';\nimport DialogManager from './dialogs/DialogManager';\nimport domElementCache from './domElementCache';\nimport EngineRanking, {IEngineRankingContext} from './EngineRanking';\nimport {EMode, IRankingHeaderContext, IRankingHeaderContextContainer} from './interfaces';\nimport SlopeGraph from './SlopeGraph';\n\n/**\n * emitted when the highlight changes\n * @asMemberOf EngineRenderer\n * @param dataIndex the highlghted data index or -1 for none\n * @event\n */\nexport declare function highlightChanged(dataIndex: number): void;\n\nexport default class EngineRenderer extends AEventDispatcher {\n  static readonly EVENT_HIGHLIGHT_CHANGED = EngineRanking.EVENT_HIGHLIGHT_CHANGED;\n\n  protected readonly options: Readonly<ILineUpOptions>;\n\n  readonly node: HTMLElement;\n  private readonly table: MultiTableRowRenderer;\n  private readonly rankings: EngineRanking[] = [];\n  private readonly slopeGraphs: SlopeGraph[] = [];\n\n  readonly ctx: IRankingHeaderContextContainer & IRenderContext & IEngineRankingContext;\n\n  private readonly updateAbles: ((ctx: IRankingHeaderContext) => void)[] = [];\n  private zoomFactor = 1;\n  readonly idPrefix = `lu${Math.random().toString(36).slice(-8).substr(0, 3)}`; //generate a random string with length3;\n\n  private enabledHighlightListening: boolean = false;\n\n  constructor(protected data: DataProvider, parent: HTMLElement, options: Readonly<ILineUpOptions>) {\n    super();\n    this.options = options;\n    this.node = parent.ownerDocument!.createElement('main');\n    this.node.id = this.idPrefix;\n    // FIXME inline\n    this.node.classList.toggle(cssClass('whole-hover'), options.expandLineOnHover);\n    parent.appendChild(this.node);\n\n    const dialogManager = new DialogManager(parent.ownerDocument!);\n\n    parent.appendChild(dialogManager.node);\n    this.ctx = {\n      idPrefix: this.idPrefix,\n      document: parent.ownerDocument!,\n      provider: data,\n      tasks: data.getTaskExecutor(),\n      dialogManager,\n      toolbar: this.options.toolbar,\n      flags: <ILineUpFlags>this.options.flags,\n      asElement: domElementCache(parent.ownerDocument!),\n      renderer: (col: Column, imposer?: IImposer) => {\n        const r = chooseRenderer(col, this.options.renderers);\n        return r.create!(col, this.ctx, imposer);\n      },\n      groupRenderer: (col: Column, imposer?: IImposer) => {\n        const r = chooseGroupRenderer(col, this.options.renderers);\n        return r.createGroup!(col, this.ctx, imposer);\n      },\n      summaryRenderer: (col: Column, interactive: boolean, imposer?: IImposer) => {\n        const r = chooseSummaryRenderer(col, this.options.renderers);\n        return r.createSummary!(col, this.ctx, interactive, imposer);\n      },\n      createRenderer(col: Column, imposer?: IImposer) {\n        const single = this.renderer(col, imposer);\n        const group = this.groupRenderer(col, imposer);\n        const summary = options.summaryHeader ? this.summaryRenderer(col, false, imposer) : null;\n        return {\n          single,\n          group,\n          summary,\n          singleId: col.getRenderer(),\n          groupId: col.getGroupRenderer(),\n          summaryId: col.getSummaryRenderer(),\n          singleTemplate: null,\n          groupTemplate: null,\n          summaryTemplate: null\n        };\n      },\n      getPossibleRenderer: (col: Column) => getPossibleRenderer(col, this.options.renderers, this.options.canRender),\n      colWidth: (col: Column) => !col.isVisible() ? 0 : col.getWidth()\n    };\n\n    this.table = new MultiTableRowRenderer(this.node, this.idPrefix);\n\n    //apply rules\n    {\n\n      this.style.addRule('lineup_rowPadding0', `\n        .${this.style.cssClasses.tr}`, {\n          marginTop: `${options.rowPadding}px`\n        });\n\n      for (let level = 0; level < 4; ++level) {\n        this.style.addRule(`lineup_groupPadding${level}`, `\n        .${this.style.cssClasses.tr}[data-meta~=last${level === 0 ? '' : level}]`, {\n            marginBottom: `${options.groupPadding * (level + 1)}px`\n          });\n      }\n\n\n      this.style.addRule('lineup_rowPaddingAgg0', `\n        .${cssClass('agg-level')}::after`, {\n          top: `-${options.rowPadding}px`\n        });\n      for (let level = 1; level <= 4; ++level) {\n        this.style.addRule(`lineup_rowPaddingAgg${level}`, `\n        .${cssClass('agg-level')}[data-level='${level}']::after`, {\n            top: `-${options.rowPadding + options.groupPadding}px`\n          });\n      }\n\n      // FIXME flat\n      this.style.addRule('lineup_rotation', `\n       #${this.idPrefix}.${cssClass('rotated-label')} .${cssClass('label')}.${cssClass('rotated')}`, {\n          transform: `rotate(${-this.options.labelRotation}deg)`\n        });\n\n      const toDisable: string[] = [];\n      if (!this.options.flags.advancedRankingFeatures) {\n        toDisable.push('ranking');\n      }\n      if (!this.options.flags.advancedModelFeatures) {\n        toDisable.push('model');\n      }\n      if (!this.options.flags.advancedUIFeatures) {\n        toDisable.push('ui');\n      }\n      if (toDisable.length > 0) {\n        this.style.addRule('lineup_feature_disable', `\n        ${toDisable.map((d) => `.${cssClass('feature')}-${d}.${cssClass('feature-advanced')}`).join(', ')}`, {\n            display: 'none !important'\n          });\n      }\n    }\n\n    this.initProvider(data);\n  }\n\n  get style(): GridStyleManager {\n    return this.table.style;\n  }\n\n  zoomOut() {\n    this.zoomFactor = Math.max(this.zoomFactor - 0.1, 0.5);\n    this.updateZoomFactor();\n    this.update();\n  }\n\n  zoomIn() {\n    this.zoomFactor = Math.min(this.zoomFactor + 0.1, 2.0);\n    this.updateZoomFactor();\n    this.update();\n  }\n\n  private updateZoomFactor() {\n    const body = <HTMLElement>this.node.querySelector('main')!;\n    body.style.fontSize = `${this.zoomFactor * 100}%`;\n  }\n\n  pushUpdateAble(updateAble: (ctx: IRankingHeaderContext) => void) {\n    this.updateAbles.push(updateAble);\n  }\n\n  protected createEventList() {\n    return super.createEventList().concat([EngineRenderer.EVENT_HIGHLIGHT_CHANGED]);\n  }\n\n  on(type: typeof EngineRenderer.EVENT_HIGHLIGHT_CHANGED, listener: typeof highlightChanged | null): this;\n  on(type: string | string[], listener: IEventListener | null): this; // required for correct typings in *.d.ts\n  on(type: string | string[], listener: IEventListener | null): this {\n    return super.on(type, listener);\n  }\n\n\n  setDataProvider(data: DataProvider) {\n    this.takeDownProvider();\n\n    this.data = data;\n    (<any>this.ctx).provider = data;\n    (<any>this.ctx).tasks = data.getTaskExecutor();\n\n    this.initProvider(data);\n  }\n\n  private takeDownProvider() {\n    this.data.on(`${DataProvider.EVENT_SELECTION_CHANGED}.body`, null);\n    this.data.on(`${DataProvider.EVENT_ADD_RANKING}.body`, null);\n    this.data.on(`${DataProvider.EVENT_REMOVE_RANKING}.body`, null);\n    this.data.on(`${DataProvider.EVENT_GROUP_AGGREGATION_CHANGED}.body`, null);\n    this.data.on(`${DataProvider.EVENT_SHOWTOPN_CHANGED}.body`, null);\n    this.data.on(`${DataProvider.EVENT_JUMP_TO_NEAREST}.body`, null);\n    this.data.on(`${DataProvider.EVENT_BUSY}.body`, null);\n\n    this.rankings.forEach((r) => this.table.remove(r));\n    this.rankings.splice(0, this.rankings.length);\n    this.slopeGraphs.forEach((s) => this.table.remove(s));\n    this.slopeGraphs.splice(0, this.slopeGraphs.length);\n  }\n\n  private initProvider(data: DataProvider) {\n    data.on(`${DataProvider.EVENT_SELECTION_CHANGED}.body`, () => this.updateSelection(data.getSelection()));\n    data.on(`${DataProvider.EVENT_ADD_RANKING}.body`, (ranking: Ranking) => {\n      this.addRanking(ranking);\n    });\n    data.on(`${DataProvider.EVENT_REMOVE_RANKING}.body`, (ranking: Ranking) => {\n      this.removeRanking(ranking);\n    });\n    data.on(`${DataProvider.EVENT_GROUP_AGGREGATION_CHANGED}.body`, (ranking: Ranking) => {\n      this.update(this.rankings.filter((r) => r.ranking === ranking));\n    });\n    data.on(`${DataProvider.EVENT_SHOWTOPN_CHANGED}.body`, () => {\n      this.update(this.rankings);\n    });\n    data.on(`${DataProvider.EVENT_JUMP_TO_NEAREST}.body`, (indices: number[]) => {\n      this.setHighlightToNearest(indices, true);\n    });\n\n    (<any>this.ctx).provider = data;\n\n    this.data.getRankings().forEach((r) => this.addRanking(r));\n  }\n\n  private updateSelection(dataIndices: number[]) {\n    const s = new Set(dataIndices);\n    this.rankings.forEach((r) => r.updateSelection(s));\n\n    this.slopeGraphs.forEach((r) => r.updateSelection(s));\n  }\n\n  private updateHist(ranking?: EngineRanking, col?: Column) {\n    if (!this.options.summaryHeader) {\n      return;\n    }\n    const rankings = ranking ? [ranking] : this.rankings;\n\n    for (const r of rankings) {\n      if (col) {\n        // single update\n        r.updateHeaderOf(col);\n      } else {\n        r.updateHeaders();\n      }\n    }\n    this.updateUpdateAbles();\n  }\n\n  private addRanking(ranking: Ranking) {\n    if (this.rankings.length > 0) {\n      // add slope graph first\n      const s = this.table.pushSeparator((header, body) => new SlopeGraph(header, body, `${ranking.id}S`, this.ctx, {\n        mode: this.options.defaultSlopeGraphMode === 'band' ? EMode.BAND : EMode.ITEM\n      }));\n      this.slopeGraphs.push(s);\n    }\n\n    const r = this.table.pushTable((header, body, tableId, style) => new EngineRanking(ranking, header, body, tableId, style, this.ctx, {\n      animation: this.options.animated,\n      customRowUpdate: this.options.customRowUpdate || (() => undefined),\n      levelOfDetail: this.options.levelOfDetail || (() => 'high'),\n      flags: <ILineUpFlags>this.options.flags\n    }));\n    r.on(EngineRanking.EVENT_WIDTH_CHANGED, () => {\n      this.updateRotatedHeaderState();\n      this.table.widthChanged();\n    });\n    r.on(EngineRanking.EVENT_UPDATE_DATA, () => this.update([r]));\n    r.on(EngineRanking.EVENT_RECREATE, () => this.updateUpdateAbles());\n    this.forward(r, EngineRanking.EVENT_HIGHLIGHT_CHANGED);\n    if (this.enabledHighlightListening) {\n      r.enableHighlightListening(true);\n    }\n\n    ranking.on(suffix('.renderer', Ranking.EVENT_ORDER_CHANGED), () => this.updateHist(r));\n\n    this.rankings.push(r);\n    this.update([r]);\n  }\n\n  private updateRotatedHeaderState() {\n    if (this.options.labelRotation === 0) {\n      return;\n    }\n    const l = this.node.querySelector(`.${cssClass('label')}.${cssClass('rotated')}`);\n    this.node.classList.toggle(cssClass('rotated-label'), Boolean(l));\n  }\n\n  private removeRanking(ranking: Ranking | null) {\n    if (!ranking) {\n      // remove all\n      this.rankings.splice(0, this.rankings.length);\n      this.slopeGraphs.splice(0, this.slopeGraphs.length);\n      this.table.clear();\n      return;\n    }\n    const index = this.rankings.findIndex((r) => r.ranking === ranking);\n    if (index < 0) {\n      return; // error\n    }\n    const section = this.rankings.splice(index, 1)[0]!;\n    const slope = this.slopeGraphs.splice(index === 0 ? index : index - 1, 1)[0];\n    this.table.remove(section);\n    if (slope) {\n      this.table.remove(slope);\n    }\n  }\n\n  update(rankings: EngineRanking[] = this.rankings) {\n    // visible and has parent = part of dom\n    rankings = rankings.filter((d) => !d.hidden && d.body.parentElement!);\n    if (rankings.length === 0) {\n      return;\n    }\n\n    const round2 = (v: number) => round(v, 2);\n    const rowPadding = round2(this.zoomFactor * this.options.rowPadding!);\n    const groupPadding = round2(this.zoomFactor * this.options.groupPadding!);\n\n    const heightsFor = (ranking: Ranking, data: (IGroupItem | IGroupData)[]) => {\n      if (this.options.dynamicHeight) {\n        const impl = this.options.dynamicHeight(data, ranking);\n        const f = (v: number | any, d: any) => typeof v === 'number' ? v : v(d);\n        if (impl) {\n          return {\n            defaultHeight: round2(this.zoomFactor * impl.defaultHeight),\n            height: (d: IGroupItem | IGroupData) => round2(this.zoomFactor * f(impl.height, d)),\n            padding: (d: IGroupItem | IGroupData) => round2(this.zoomFactor * f(impl.padding, d)),\n          };\n        }\n      }\n      const item = round2(this.zoomFactor * this.options.rowHeight!);\n      const group = round2(this.zoomFactor * this.options.groupHeight!);\n      return {\n        defaultHeight: item,\n        height: (d: IGroupItem | IGroupData) => isGroup(d) ? group : item,\n        padding: rowPadding\n      };\n    };\n\n    for (const r of rankings) {\n      const grouped = r.groupData();\n\n      // inline with creating the groupData\n      const {height, defaultHeight, padding} = heightsFor(r.ranking, grouped);\n\n      const strategy = this.data.getAggregationStrategy();\n      const topNGetter = (group: IGroup) => this.data.getTopNAggregated(r.ranking, group);\n\n      // inline and create manually for better performance\n      const rowContext = nonUniformContext(grouped.map(height), defaultHeight, (index) => {\n        const pad = (typeof padding === 'number' ? padding : padding(grouped[index] || null));\n        const v = grouped[index];\n\n        if (index < 0 || !v || (isGroup(v) && isSummaryGroup(v, strategy, topNGetter))) {\n          return pad;\n        }\n        return pad + groupPadding * groupEndLevel(v, topNGetter);\n      });\n      r.render(grouped, rowContext);\n    }\n\n    this.updateSlopeGraphs(rankings);\n\n    this.updateUpdateAbles();\n    this.updateRotatedHeaderState();\n    this.table.widthChanged();\n  }\n\n  private updateUpdateAbles() {\n    for (const u of this.updateAbles) {\n      u(this.ctx);\n    }\n  }\n\n  private updateSlopeGraphs(rankings: EngineRanking[] = this.rankings) {\n    const indices = new Set(rankings.map((d) => this.rankings.indexOf(d)));\n\n    for (let i = 0; i < this.slopeGraphs.length; ++i) {\n      const s = this.slopeGraphs[i];\n      if (s.hidden) {\n        return;\n      }\n      const left = i;\n      const right = i + 1;\n      if (!indices.has(left) && !indices.has(right)) {\n        return;\n      }\n      const leftRanking = this.rankings[left];\n      const rightRanking = this.rankings[right];\n      s.rebuild(leftRanking.ranking, leftRanking.currentData, leftRanking.context, rightRanking.ranking, rightRanking.currentData, rightRanking.context);\n    }\n  }\n\n  setHighlight(dataIndex: number, scrollIntoView: boolean) {\n    const found = this.rankings.map((r) => r.setHighlight(dataIndex));\n    this.fire(EngineRenderer.EVENT_HIGHLIGHT_CHANGED, dataIndex);\n    if (this.rankings.length === 0 || dataIndex < 0) {\n      return false;\n    }\n    if (!scrollIntoView) {\n      return found[0]!;\n    }\n    return this.rankings[0].scrollIntoView(dataIndex);\n  }\n\n  setHighlightToNearest(dataIndices: number[], scrollIntoView: boolean) {\n    if (this.rankings.length === 0) {\n      return false;\n    }\n    const nearest = this.rankings[0].findNearest(dataIndices);\n    if (nearest >= 0) {\n      return this.setHighlight(nearest, scrollIntoView);\n    }\n    return false;\n  }\n\n  getHighlight() {\n    for (const ranking of this.rankings) {\n      const h = ranking.getHighlight();\n      if (h >= 0) {\n        return h;\n      }\n    }\n    return -1;\n  }\n\n  enableHighlightListening(enable: boolean) {\n    for (const ranking of this.rankings) {\n      ranking.enableHighlightListening(enable);\n    }\n    this.enabledHighlightListening = enable;\n  }\n\n  destroy() {\n    this.takeDownProvider();\n    this.table.destroy();\n    this.node.remove();\n  }\n}\n\n","\n\n/**\n * caches parsing of html strings in a dom element cache\n * @param doc the doc to create the elements under\n * @internal\n */\nexport default function domElementCache(doc: Document): (html: string) => HTMLElement {\n  const cache = new Map<string, HTMLElement>();\n\n  const helper = doc.createElement('div');\n\n  return (html: string) => {\n    if (cache.has(html)) {\n      return <HTMLElement>cache.get(html)!.cloneNode(true);\n    }\n\n    helper.innerHTML = html;\n    const node = <HTMLElement>helper.firstElementChild!;\n    // keep a copy\n    cache.set(html, <HTMLElement>node.cloneNode(true));\n\n    return node;\n  };\n}\n","import ADialog, {IDialogContext} from './ADialog';\nimport {cssClass} from '../../styles';\n\n/** @internal */\nexport default class ChooseRankingDialog extends ADialog {\n\n  constructor(private readonly items: HTMLElement[], dialog: IDialogContext) {\n    super(dialog);\n  }\n\n\n  protected build(node: HTMLElement) {\n    node.classList.add(cssClass('more-options'), cssClass('choose-options'));\n    for (const item of this.items) {\n      node.appendChild(item);\n    }\n  }\n}\n","import {clear, AEventDispatcher, IEventListener} from '../../internal';\nimport {cssClass} from '../../styles';\n\nexport interface IItem {\n  id: string;\n  text: string;\n}\n\nexport interface IGroupSearchItem<T extends IItem> {\n  text: string;\n  children: (T | IGroupSearchItem<T>)[];\n}\n\nfunction isItem<T extends IItem>(v: T | IGroupSearchItem<T>): v is T {\n  return (<T>v).id !== undefined;\n}\n\nexport interface ISearchBoxOptions<T extends IItem> {\n  doc: Document;\n\n  formatItem(item: T | IGroupSearchItem<T>, node: HTMLElement): string;\n\n  placeholder: string;\n}\n\n/**\n * @asMemberOf SearchBox\n * @event\n */\nexport declare function select(item: any): void;\n\n\nexport default class SearchBox<T extends IItem> extends AEventDispatcher {\n  static readonly EVENT_SELECT = 'select';\n\n  private readonly options: Readonly<ISearchBoxOptions<T>> = {\n    formatItem: (item) => item.text,\n    doc: document,\n    placeholder: 'Select...',\n  };\n\n  readonly node: HTMLElement;\n  private search: HTMLInputElement;\n  private body: HTMLElement;\n\n  private readonly itemTemplate: HTMLElement;\n  private readonly groupTemplate: HTMLElement;\n\n  private values: (T | IGroupSearchItem<T>)[] = [];\n\n  constructor(options: Partial<ISearchBoxOptions<T>> = {}) {\n    super();\n    Object.assign(this.options, options);\n\n    this.node = this.options.doc.createElement('div');\n    this.node.classList.add(cssClass('search'));\n    this.node.innerHTML = `<input class=\"${cssClass('search-input')}\" type=\"search\" placeholder=\"${this.options.placeholder}\">\n    <ul class=\"${cssClass('search-list')}\"></ul>`;\n\n    this.search = <HTMLInputElement>this.node.firstElementChild!;\n    this.body = <HTMLElement>this.node.lastElementChild!;\n\n    this.search.onfocus = () => this.focus();\n    this.search.onblur = () => this.blur();\n    this.search.oninput = () => this.filter();\n    this.search.onkeydown = (evt) => this.handleKey(evt);\n\n\n    this.itemTemplate = this.options.doc.createElement('li');\n    this.itemTemplate.classList.add(cssClass('search-item'));\n    this.itemTemplate.innerHTML = `<span></span>`;\n    this.groupTemplate = this.options.doc.createElement('li');\n    this.groupTemplate.classList.add(cssClass('search-group'));\n    this.groupTemplate.innerHTML = `<span></span><ul></ul>`;\n  }\n\n  get data() {\n    return this.values;\n  }\n\n  set data(data: (T | IGroupSearchItem<T>)[]) {\n    this.values = data;\n    clear(this.body);\n    this.buildDialog(this.body, this.values);\n  }\n\n  private buildDialog(node: HTMLElement, values: (T | IGroupSearchItem<T>)[]) {\n    for (const v of values) {\n      let li: HTMLElement;\n      if (isItem(v)) {\n        li = <HTMLElement>this.itemTemplate.cloneNode(true);\n        li.onmousedown = (evt) => {\n          // see https://stackoverflow.com/questions/10652852/jquery-fire-click-before-blur-event#10653160\n          evt.preventDefault();\n        };\n        li.onclick = () => this.select(v);\n        li.onmouseenter = () => this.highlighted = li;\n        li.onmouseleave = () => this.highlighted = null;\n        node.appendChild(li);\n      } else {\n        li = <HTMLElement>this.groupTemplate.cloneNode(true);\n        this.buildDialog(<HTMLElement>li.lastElementChild!, v.children);\n        node.appendChild(li);\n      }\n      const item = <HTMLElement>li.firstElementChild!;\n      item.innerHTML = this.options.formatItem(v, item);\n    }\n  }\n\n  private handleKey(evt: KeyboardEvent) {\n    const KEYS = {\n      ESC: 27,\n      ENTER: 13,\n      UP: 38,\n      DOWN: 40\n    };\n    switch (evt.which) {\n      case KEYS.ESC:\n        this.search.blur();\n        break;\n      case KEYS.ENTER:\n        const h = this.highlighted;\n        if (h) {\n          h.click();\n        }\n        break;\n      case KEYS.UP:\n        this.highlightPrevious();\n        break;\n      case KEYS.DOWN:\n        this.highlightNext();\n        break;\n    }\n  }\n\n  private select(item: T) {\n    this.search.value = ''; // reset\n    this.search.blur();\n    this.fire(SearchBox.EVENT_SELECT, item);\n  }\n\n  focus() {\n    this.body.style.width = `${this.search.offsetWidth}px`;\n    this.highlighted = <HTMLElement>this.body.firstElementChild || null;\n    this.node.classList.add(cssClass('search-open'));\n  }\n\n  private get highlighted() {\n    return <HTMLElement>this.body.getElementsByClassName(cssClass('search-highlighted'))[0] || null;\n  }\n\n  private set highlighted(value: HTMLElement | null) {\n    const old = this.highlighted;\n    if (old === value) {\n      return;\n    }\n    if (old) {\n      old.classList.remove(cssClass('search-highlighted'));\n    }\n    if (value) {\n      value.classList.add(cssClass('search-highlighted'));\n    }\n  }\n\n  private highlightNext() {\n    const h = this.highlighted;\n    if (!h || h.classList.contains(cssClass('hidden'))) {\n      this.highlighted = <HTMLElement>this.body.querySelector(`.${cssClass('search-item')}:not(.${cssClass('hidden')})`) || null;\n      return;\n    }\n\n    const items = <HTMLElement[]>Array.from(this.body.querySelectorAll(`.${cssClass('search-item')}:not(.${cssClass('hidden')})`));\n    const index = items.indexOf(h);\n    this.highlighted = items[index + 1] || null;\n  }\n\n  private highlightPrevious() {\n    const h = this.highlighted;\n    const items = <HTMLElement[]>Array.from(this.body.querySelectorAll(`.${cssClass('search-item')}:not(.${cssClass('hidden')})`));\n\n    if (!h || h.classList.contains(cssClass('hidden'))) {\n      this.highlighted = items[items.length - 1] || null;\n      return;\n    }\n    const index = items.indexOf(h);\n    this.highlighted = items[index - 1] || null;\n  }\n\n  private blur() {\n    this.search.value = '';\n    // clear filter\n    this.filterResults(this.body, '');\n    this.node.classList.remove(cssClass('search-open'));\n  }\n\n  private filter() {\n    const empty = this.filterResults(this.body, this.search.value.toLowerCase());\n    this.body.classList.toggle(cssClass('search-empty'), empty);\n  }\n\n  private filterResults(node: HTMLElement, text: string) {\n    if (text === '') {\n      // show all\n      (<HTMLElement[]>Array.from(node.getElementsByClassName(cssClass('hidden')))).forEach((d: HTMLElement) => d.classList.remove(cssClass('hidden')));\n      return false;\n    }\n    const children = Array.from(node.children);\n    children.forEach((d) => {\n      const content = d.firstElementChild!.innerHTML.toLowerCase();\n      let hidden = !content.includes(text);\n      if (d.classList.contains(cssClass('search-group'))) {\n        const ul = <HTMLElement>d.lastElementChild!;\n        const allChildrenHidden = this.filterResults(ul, text);\n        hidden = hidden && allChildrenHidden;\n      }\n      d.classList.toggle(cssClass('hidden'), hidden);\n    });\n\n    return children.every((d) => d.classList.contains(cssClass('hidden')));\n  }\n\n  protected createEventList() {\n    return super.createEventList().concat([SearchBox.EVENT_SELECT]);\n  }\n\n  on(type: typeof SearchBox.EVENT_SELECT, listener: typeof select | null): this;\n  on(type: string | string[], listener: IEventListener | null): this {\n    return super.on(type, listener);\n  }\n}\n","import {Ranking} from '../../model';\nimport ADialog, {IDialogContext} from './ADialog';\nimport {cssClass} from '../../styles';\n\n/** @internal */\nexport default class RenameRankingDialog extends ADialog {\n\n  private readonly before: string;\n\n  constructor(private readonly ranking: Ranking, dialog: IDialogContext) {\n    super(dialog, {\n      fullDialog: true\n    });\n    this.before = ranking.getLabel();\n  }\n\n  protected build(node: HTMLElement) {\n    node.classList.add(cssClass('dialog-rename'));\n    node.insertAdjacentHTML('beforeend', `\n      <input type=\"text\" value=\"${this.ranking.getLabel()}\" required autofocus placeholder=\"name\">`);\n  }\n\n  protected reset() {\n    this.findInput('input[type=\"text\"]').value = this.before;\n    this.ranking.setLabel(this.before);\n  }\n\n  protected submit() {\n    const newValue = this.findInput('input[type=\"text\"]').value;\n    this.ranking.setLabel(newValue);\n    return true;\n  }\n}\n","import {Ranking} from '../../model';\nimport {IRankingHeaderContext} from '../interfaces';\nimport ADialog, {dialogContext, IDialogContext} from './ADialog';\nimport RenameRankingDialog from './RenameRankingDialog';\nimport {cssClass} from '../../styles';\nimport {actionCSSClass} from '../header';\n\n/** @internal */\nexport default class MoreRankingOptionsDialog extends ADialog {\n\n  constructor(private readonly ranking: Ranking, dialog: IDialogContext, private readonly ctx: IRankingHeaderContext) {\n    super(dialog);\n  }\n\n  private addIcon(node: HTMLElement, title: string, onClick: (evt: MouseEvent)=>void) {\n    node.insertAdjacentHTML('beforeend', `<i title=\"${title}\" class=\"${actionCSSClass(title)}\"><span>${title}</span> </i>`);\n    const i = <HTMLElement>node.lastElementChild;\n    i.onclick = (evt) => {\n      evt.stopPropagation();\n      onClick(evt);\n    };\n  }\n\n  protected build(node: HTMLElement) {\n    node.classList.add(cssClass('more-options'));\n    this.addIcon(node, 'Rename', (evt) => {\n      evt.stopPropagation();\n      evt.preventDefault();\n      const dialog = new RenameRankingDialog(this.ranking, dialogContext(this.ctx, this.level + 1, <any>evt));\n      dialog.open();\n    });\n    this.addIcon(node, 'Remove', (evt) => {\n      evt.stopPropagation();\n      evt.preventDefault();\n      this.destroy();\n      this.ctx.provider.removeRanking(this.ranking);\n    });\n  }\n}\n","import {Column} from '../../model';\nimport ADialog, {IDialogContext} from './ADialog';\nimport {IToolbarDialogAddon, IRankingHeaderContext} from '../interfaces';\n\n/** @internal */\nexport default class AddonDialog extends ADialog {\n  constructor(private readonly column: Column, private readonly addons: IToolbarDialogAddon[], dialog: IDialogContext, private readonly ctx: IRankingHeaderContext, private readonly onClick?: ()=>void) {\n    super(dialog, {\n      fullDialog: Boolean(onClick),\n      resetPossible: false\n    });\n  }\n\n  protected build(node: HTMLElement) {\n    for(const addon of this.addons) {\n      this.node.insertAdjacentHTML('beforeend', `<strong>${addon.title}</strong>`);\n      addon.append(this.column, node, this.dialog, this.ctx);\n    }\n  }\n\n  protected submit(): boolean {\n    if (this.onClick) {\n      this.onClick();\n    }\n    return true;\n  }\n}\n","import {clear} from '../../internal';\nimport {Column, Ranking, categoryOf, isSortingAscByDefault, ISortCriteria, isSupportType} from '../../model';\nimport {aria, cssClass} from '../../styles';\nimport AddonDialog from '../dialogs/AddonDialog';\nimport {actionCSSClass, updateHeader} from '../header';\nimport {IRankingHeaderContext, IToolbarDialogAddon} from '../interfaces';\nimport {getToolbarDialogAddons, isGroupAble, isGroupSortAble, isSortAble} from '../toolbar';\nimport SearchBox, {ISearchBoxOptions} from './SearchBox';\nimport {dialogContext} from '../dialogs';\n\ninterface IColumnItem {\n  col: Column;\n  id: string;\n  text: string;\n}\n/**\n * @internal\n */\nexport default class Hierarchy {\n  readonly node: HTMLElement;\n  readonly groupAdder: SearchBox<IColumnItem>;\n  readonly sortAdder: SearchBox<IColumnItem>;\n  readonly groupSortAdder: SearchBox<IColumnItem>;\n\n  constructor(private readonly ctx: IRankingHeaderContext, document: Document) {\n    this.node = document.createElement('aside');\n    this.node.classList.add(cssClass('hierarchy'), cssClass('feature-advanced'), cssClass('feature-ranking'));\n    this.node.innerHTML = `\n      <section class=\"${cssClass('group-hierarchy')}\">\n      </section>\n      <section class=\"${cssClass('sort-hierarchy')}\">\n      </section>\n      <section class=\"${cssClass('sort-groups-hierarchy')}\">\n      </section>\n    `;\n    const options = <Partial<ISearchBoxOptions<IColumnItem>>>{\n      doc: document,\n      placeholder: 'Add Sort Criteria...',\n      formatItem: (item: IColumnItem, node: HTMLElement) => {\n        node.classList.add(cssClass('typed-icon'));\n        node.dataset.typeCat = categoryOf(item.col).name;\n        node.dataset.type = item.col.desc.type;\n        return item.text;\n      },\n\n    };\n    this.groupAdder = new SearchBox(Object.assign({}, options, {\n      placeholder: 'Add Grouping Criteria...'\n    }));\n    this.groupSortAdder = new SearchBox(Object.assign({}, options, {\n      placeholder: 'Add Grouping Sort Criteria...'\n    }));\n    this.sortAdder = new SearchBox(options);\n  }\n\n  update(ranking: Ranking | null) {\n    if (!ranking) {\n      this.node.style.display = 'none';\n      return;\n    }\n    this.node.style.display = null;\n    this.renderGroups(ranking, <HTMLElement>this.node.firstElementChild!);\n    this.renderSorting(ranking, <HTMLElement>this.node.children[1]!);\n    this.renderGroupSorting(ranking, <HTMLElement>this.node.lastElementChild!);\n  }\n\n  private render<T>(node: HTMLElement, items: T[], toColumn: (item: T) => Column, extras: (item: T, node: HTMLElement) => void, addonKey: string, onChange: (item: T, delta: number) => void) {\n    const cache = new Map((<HTMLElement[]>Array.from(node.children)).map((d) => <[string, HTMLElement]>[d.dataset.id, d]));\n    clear(node);\n\n    items.forEach((d) => {\n      const col = toColumn(d);\n      const item = cache.get(col.id);\n      if (item) {\n        node.appendChild(item);\n        updateHeader(item, col, 0);\n        return;\n      }\n      const addons = getToolbarDialogAddons(col, addonKey, this.ctx);\n\n      node.insertAdjacentHTML('beforeend', `<div data-id=\"${col.id}\" class=\"${cssClass('toolbar')} ${cssClass('hierarchy-entry')}\">\n      <div class=\"${cssClass('label')} ${cssClass('typed-icon')}\">${col.label}</div>\n      ${addons.length > 0 ? `<i title=\"Customize\" class=\"${actionCSSClass('customize')}\">${aria('Customize')}</i>` : ''}\n      <i title=\"Move Up\" class=\"${actionCSSClass('Move Up')}\">${aria('Move Up')}</i>\n      <i title=\"Move Down\" class=\"${actionCSSClass('Move Down')}\">${aria('Move Down')}</i>\n      <i title=\"Remove from hierarchy\" class=\"${actionCSSClass('Remove')}\">${aria('Remove from hierarchy')}</i>\n      </div>`);\n      const last = <HTMLElement>node.lastElementChild!;\n\n      function prevent(evt: Event) {\n        evt.preventDefault();\n        evt.stopPropagation();\n      }\n\n      (<HTMLElement>last.querySelector('i[title=\"Move Down\"]')!).onclick = (evt) => {\n        prevent(evt);\n        onChange(d, + 1);\n      };\n      (<HTMLElement>last.querySelector('i[title=\"Move Up\"]')!).onclick = (evt) => {\n        prevent(evt);\n        onChange(d, -1);\n      };\n      (<HTMLElement>last.querySelector('i[title^=Remove]')!).onclick = (evt) => {\n        prevent(evt);\n        onChange(d, 0);\n      };\n\n      if (addons.length > 0) {\n        (<HTMLElement>last.querySelector('i[title=Customize]')!).onclick = (evt) => {\n          prevent(evt);\n          this.customize(col, addons, <any>evt);\n        };\n      }\n\n      extras(d, last);\n\n      updateHeader(last, col, 0);\n    });\n  }\n\n  private renderGroups(ranking: Ranking, node: HTMLElement) {\n    const groups = ranking.getGroupCriteria();\n\n    if (groups.length === 0) {\n      clear(node);\n      return;\n    }\n\n    const click = (col: Column, delta: number) => {\n      if (delta === 0) {\n        col.groupByMe();\n        return;\n      }\n      const current = col.isGroupedBy();\n      col.findMyRanker()!.groupBy(col, current + delta);\n    };\n\n    const addButton = (_: Column, last: HTMLElement) => {\n      last.insertAdjacentHTML('afterbegin', `<i title=\"Group\" class=\"${actionCSSClass('group')}\" data-group=\"true\">${aria('Group')}</i>`);\n    };\n\n    this.render(node, groups, (d) => d, addButton, 'group', click);\n    this.addGroupAdder(ranking, groups, node);\n  }\n\n  private renderSorting(ranking: Ranking, node: HTMLElement) {\n    const sortCriterias = ranking.getSortCriteria();\n\n    if (sortCriterias.length === 0) {\n      clear(node);\n      return;\n    }\n\n    const click = ({col}: ISortCriteria, delta: number) => {\n      const current = col.isSortedByMe();\n      if (!isFinite(delta)) {\n        col.sortByMe(current.asc === 'desc', current.priority);\n        return;\n      }\n      if (delta === 0) {\n        col.sortByMe(current.asc === 'asc', -1);\n        return;\n      }\n      col.sortByMe(current.asc === 'asc', current.priority! + delta);\n    };\n\n    const addButton = (s: ISortCriteria, last: HTMLElement) => {\n      last.insertAdjacentHTML('afterbegin', `\n      <i title=\"Sort\" class=\"${actionCSSClass('sort')}\" data-sort=\"${s.asc ? 'asc' : 'desc'}\">${aria('Toggle Sorting')}</i>`);\n      (<HTMLElement>last.querySelector('i[title=Sort]')!).onclick = (evt) => {\n        evt.preventDefault();\n        evt.stopPropagation();\n        click(s, Infinity);\n      };\n    };\n\n    this.render(node, sortCriterias, (d) => d.col, addButton, 'sort', click);\n\n    this.addSortAdder(ranking, sortCriterias, node);\n  }\n\n  private renderGroupSorting(ranking: Ranking, node: HTMLElement) {\n    const sortCriterias = ranking.getGroupSortCriteria();\n\n    if (sortCriterias.length === 0) {\n      clear(node);\n      return;\n    }\n\n    const click = ({col}: ISortCriteria, delta: number) => {\n      const current = col.isGroupSortedByMe();\n      if (!isFinite(delta)) {\n        col.groupSortByMe(current.asc === 'desc', current.priority);\n        return;\n      }\n      if (delta === 0) {\n        col.groupSortByMe(current.asc === 'asc', -1);\n        return;\n      }\n      col.groupSortByMe(current.asc === 'asc', current.priority! + delta);\n    };\n\n    const addButton = (s: ISortCriteria, last: HTMLElement) => {\n      last.insertAdjacentHTML('afterbegin', `\n      <i title=\"Sort Group\" class=\"${actionCSSClass('sort-groups')}\" data-sort=\"${s.asc ? 'asc' : 'desc'}\">${aria('Toggle Sorting')}</i>`);\n      (<HTMLElement>last.querySelector('i[title=\"Sort Group\"]')!).onclick = (evt) => {\n        evt.preventDefault();\n        evt.stopPropagation();\n        click(s, Infinity);\n      };\n    };\n\n    this.render(node, sortCriterias, (d) => d.col, addButton, 'sortGroup', click);\n\n    this.addGroupSortAdder(ranking, sortCriterias, node);\n  }\n\n  private addAdder(adder: SearchBox<IColumnItem>, ranking: Ranking, addonKey: string, current: Column[], node: HTMLElement, check: (col: Column) => boolean, onSelect: (col: Column) => void) {\n    const used = new Set(current);\n\n    adder.data = ranking.children.filter((col) => !isSupportType(col) && !used.has(col) && check(col)).map((col) => ({col, id: col.id, text: col.label}));\n\n    adder.on(SearchBox.EVENT_SELECT, (item: IColumnItem) => {\n      const addons = getToolbarDialogAddons(item.col, addonKey, this.ctx);\n      if (addons.length > 0) {\n        this.customize(item.col, addons, adder.node, () => onSelect(item.col));\n      } else {\n        onSelect(item.col);\n      }\n    });\n\n    if (adder.data.length <= 0) {\n      return;\n    }\n\n    const wrapper = node.ownerDocument!.createElement('footer');\n    wrapper.appendChild(adder.node);\n    wrapper.classList.add(cssClass('hierarchy-adder'));\n    node.appendChild(wrapper);\n  }\n\n  private addSortAdder(ranking: Ranking, sortCriterias: ISortCriteria[], node: HTMLElement) {\n    this.addAdder(this.sortAdder, ranking, 'sort', sortCriterias.map((d) => d.col), node, (d) => isSortAble(d, this.ctx), (col) => {\n      ranking.sortBy(col, isSortingAscByDefault(col), sortCriterias.length);\n    });\n  }\n\n  private addGroupAdder(ranking: Ranking, groups: Column[], node: HTMLElement) {\n    this.addAdder(this.groupAdder, ranking, 'group', groups, node, (d) => isGroupAble(d, this.ctx), (col) => {\n      ranking.groupBy(col, groups.length);\n    });\n  }\n\n  private addGroupSortAdder(ranking: Ranking, sortCriterias: ISortCriteria[], node: HTMLElement) {\n    this.addAdder(this.groupSortAdder, ranking, 'sortGroup', sortCriterias.map((d) => d.col), node, (d) => isGroupSortAble(d, this.ctx), (col) => {\n      ranking.groupSortBy(col, isSortingAscByDefault(col), sortCriterias.length);\n    });\n  }\n\n  private customize(col: Column, addons: IToolbarDialogAddon[], attachment: HTMLElement, onClick?: () => void) {\n    const dialog = new AddonDialog(col, addons, dialogContext(this.ctx, 0, attachment), this.ctx, onClick);\n    dialog.open();\n  }\n}\n\n","import {Column, isMapAbleColumn, NumberColumn} from '../../model';\nimport {IAbortAblePromise} from '../../provider';\nimport {ISummaryRenderer} from '../../renderer';\nimport {cssClass, engineCssClass} from '../../styles';\nimport {createShortcutMenuItems, dragAbleColumn, updateHeader} from '../header';\nimport {IRankingHeaderContext} from '../interfaces';\n\n/** @internal */\nexport default class SidePanelEntryVis {\n  readonly node: HTMLElement;\n  private summary: ISummaryRenderer;\n  private summaryUpdater: IAbortAblePromise<void> | null = null;\n\n  constructor(public readonly column: Column, private ctx: IRankingHeaderContext, document: Document) {\n    this.node = document.createElement('article');\n    this.node.classList.add(cssClass('side-panel-entry'));\n    this.node.dataset.colId = column.id;\n    this.node.dataset.type = column.desc.type;\n\n    this.summary = ctx.summaryRenderer(column, true);\n\n    this.column.on([`${NumberColumn.EVENT_FILTER_CHANGED}.panel`, `${Column.EVENT_DIRTY_HEADER}.panel`], () => {\n      this.update();\n    });\n    this.column.on(`${Column.EVENT_SUMMARY_RENDERER_TYPE_CHANGED}.panel`, () => {\n      this.recreateSummary();\n    });\n    this.init();\n    this.update();\n  }\n\n\n  private init() {\n    this.node.innerHTML = `\n      <header class=\"${cssClass('side-panel-entry-header')}\">\n        <div class=\"${cssClass('label')} ${cssClass('typed-icon')} ${cssClass('side-panel-label')}\"></div>\n        <div class=\"${cssClass('toolbar')} ${cssClass('side-panel-toolbar')}\"></div>\n      </header>`;\n    createShortcutMenuItems(<HTMLElement>this.node.querySelector(`.${cssClass('toolbar')}`), 0, this.column, this.ctx, false);\n    dragAbleColumn(<HTMLElement>this.node.querySelector('header'), this.column, this.ctx);\n    this.appendSummary();\n  }\n\n  update(ctx: IRankingHeaderContext = this.ctx) {\n    this.ctx = ctx;\n    updateHeader(this.node, this.column);\n    this.updateSummary();\n  }\n\n  private updateSummary() {\n    const summaryNode = <HTMLElement>this.node.querySelector(`.${cssClass('summary')}`)!;\n    if (this.summaryUpdater) {\n      this.summaryUpdater.abort();\n      summaryNode.classList.remove(engineCssClass('loading'));\n      this.summaryUpdater = null;\n    }\n    const r = this.summary.update(summaryNode);\n    if (!r) {\n      return;\n    }\n\n    this.summaryUpdater = r;\n    summaryNode.classList.add(engineCssClass('loading'));\n    r.then((a) => {\n      if (typeof a === 'symbol') {\n        return;\n      }\n      summaryNode.classList.remove(engineCssClass('loading'));\n    });\n  }\n\n  private appendSummary() {\n    const summary = this.ctx.asElement(this.summary.template);\n    summary.classList.add(cssClass('summary'), cssClass('side-panel-summary'), cssClass('renderer'), cssClass(`renderer-${this.column.getSummaryRenderer()}`));\n    summary.dataset.renderer = this.column.getSummaryRenderer();\n    summary.dataset.interactive = isMapAbleColumn(this.column).toString();\n    this.node.appendChild(summary);\n  }\n\n  private recreateSummary() {\n    // remove old summary\n    this.node.removeChild(this.node.querySelector(`.${cssClass('summary')}`)!!);\n\n    this.summary = this.ctx.summaryRenderer(this.column, true);\n    this.appendSummary();\n    this.updateSummary();\n  }\n\n  destroy() {\n    this.column.on([`${NumberColumn.EVENT_FILTER_CHANGED}.panel`, `${Column.EVENT_DIRTY_HEADER}.panel`, `${Column.EVENT_SUMMARY_RENDERER_TYPE_CHANGED}.panel`], null);\n    this.node.remove();\n  }\n}\n","import {clear, suffix} from '../../internal';\nimport {Ranking, isSupportType} from '../../model';\nimport {aria, cssClass} from '../../styles';\nimport MoreRankingOptionsDialog from '../dialogs/MoreRankingOptionsDialog';\nimport {actionCSSClass} from '../header';\nimport {IRankingHeaderContext} from '../interfaces';\nimport {dialogContext} from '../dialogs';\nimport Hierarchy from './Hierarchy';\nimport {ISidePanelOptions} from './SidePanel';\nimport SidePanelEntryVis from './SidePanelEntryVis';\n\n/** @internal */\nexport default class SidePanelRanking {\n\n  readonly header: HTMLElement;\n  readonly dropdown: HTMLElement;\n  readonly node: HTMLElement;\n\n  private readonly hierarchy: Hierarchy | null;\n  private readonly entries = new Map<string, SidePanelEntryVis>();\n\n  constructor(public readonly ranking: Ranking, private ctx: IRankingHeaderContext, document: Document, private readonly options: Readonly<ISidePanelOptions>) {\n    this.node = document.createElement('section');\n    this.header = document.createElement('div');\n    this.dropdown = document.createElement('div');\n\n    this.node.classList.add(cssClass('side-panel-ranking'));\n    this.header.classList.add(cssClass('side-panel-ranking-header'), cssClass('side-panel-ranking-label'));\n    this.dropdown.classList.add(cssClass('side-panel-ranking-label'));\n\n    this.dropdown.innerHTML = this.header.innerHTML = `<span>${ranking.getLabel()}</span><i class=\"${actionCSSClass('more')}\" title=\"More &hellip;\">${aria('More &hellip;')}</i>`;\n    (<HTMLElement>this.header.lastElementChild!).onclick = (<HTMLElement>this.dropdown.lastElementChild!).onclick = (evt) => {\n      evt.stopPropagation();\n      evt.preventDefault();\n      const dialog = new MoreRankingOptionsDialog(ranking, dialogContext(ctx, 1, <any>evt), ctx);\n      dialog.open();\n    };\n\n    this.hierarchy = this.options.hierarchy ? new Hierarchy(ctx, document) : null;\n\n    this.init();\n  }\n\n  private init() {\n    this.node.innerHTML = `<main class=\"${cssClass('side-panel-ranking-main')}\"></main>`;\n    if (this.hierarchy) {\n      this.node.insertBefore(this.hierarchy.node, this.node.firstChild);\n    }\n\n    if (this.hierarchy) {\n      this.ranking.on(suffix('.panel', Ranking.EVENT_GROUP_CRITERIA_CHANGED, Ranking.EVENT_SORT_CRITERIA_CHANGED, Ranking.EVENT_GROUP_SORT_CRITERIA_CHANGED), () => {\n        this.updateHierarchy();\n      });\n    }\n    this.ranking.on(suffix('.panel', Ranking.EVENT_ADD_COLUMN, Ranking.EVENT_REMOVE_COLUMN, Ranking.EVENT_MOVE_COLUMN), () => {\n      this.updateList();\n      this.updateHierarchy();\n    });\n    this.ranking.on(suffix('.panel', Ranking.EVENT_LABEL_CHANGED), () => {\n      this.dropdown.firstElementChild!.textContent = this.header.firstElementChild!.textContent = this.ranking.getLabel();\n    });\n  }\n\n  get active() {\n    return this.node.classList.contains(cssClass('active'));\n  }\n\n  set active(value: boolean) {\n    this.node.classList.toggle(cssClass('active'), value);\n    this.header.classList.toggle(cssClass('active'), value);\n    this.dropdown.classList.toggle(cssClass('active'), value);\n    if (value) {\n      return;\n    }\n    this.updateList();\n    this.updateHierarchy();\n  }\n\n  update(ctx: IRankingHeaderContext) {\n    this.ctx = ctx;\n    this.updateList();\n    this.updateHierarchy();\n  }\n\n  private updateHierarchy() {\n    if (!this.hierarchy || !this.active) {\n      return;\n    }\n    this.hierarchy.update(this.ranking);\n  }\n\n  private updateList() {\n    if (!this.active) {\n      return;\n    }\n    const node = this.node.querySelector('main')!;\n    const columns = this.ranking.flatColumns.filter((d) => !isSupportType(d));\n\n    if (columns.length === 0) {\n      clear(node);\n      this.entries.forEach((d) => d.destroy());\n      this.entries.clear();\n      return;\n    }\n\n    clear(node);\n\n    const copy = new Map(this.entries);\n    this.entries.clear();\n\n    columns.forEach((col) => {\n      const existing = copy.get(col.id);\n      if (existing) {\n        existing.update(this.ctx);\n        node.appendChild(existing.node);\n        this.entries.set(col.id, existing);\n        copy.delete(col.id);\n        return;\n      }\n\n      const entry = new SidePanelEntryVis(col, this.ctx, node.ownerDocument!);\n      node.appendChild(entry.node);\n      this.entries.set(col.id, entry);\n    });\n\n    copy.forEach((d) => d.destroy());\n  }\n\n  destroy() {\n    this.header.remove();\n    this.node.remove();\n    this.ranking.on(suffix('.panel', Ranking.EVENT_GROUP_CRITERIA_CHANGED, Ranking.EVENT_SORT_CRITERIA_CHANGED, Ranking.EVENT_GROUP_SORT_CRITERIA_CHANGED, Ranking.EVENT_ADD_COLUMN, Ranking.EVENT_MOVE_COLUMN, Ranking.EVENT_REMOVE_COLUMN, Ranking.EVENT_LABEL_CHANGED), null);\n\n    this.entries.forEach((d) => d.destroy());\n    this.entries.clear();\n  }\n}\n","import {suffix} from '../../internal';\nimport {categoryOfDesc, IColumnCategory, createAggregateDesc, createGroupDesc, createImpositionDesc, createNestedDesc, createRankDesc, createReduceDesc, createScriptDesc, createSelectionDesc, createStackDesc, IColumnDesc, Ranking} from '../../model';\nimport {DataProvider, IDataProvider} from '../../provider';\nimport {aria, cssClass} from '../../styles';\nimport ChooseRankingDialog from '../dialogs/ChooseRankingDialog';\nimport {IRankingHeaderContext} from '../interfaces';\nimport {dialogContext} from '../dialogs';\nimport SearchBox, {IGroupSearchItem, ISearchBoxOptions} from './SearchBox';\nimport SidePanelRanking from './SidePanelRanking';\nimport {format} from 'd3-format';\n\n\nexport interface IColumnWrapper {\n  desc: IColumnDesc;\n  category: IColumnCategory;\n  id: string;\n  text: string;\n}\n\nfunction isWrapper(item: IColumnWrapper | IGroupSearchItem<IColumnWrapper>): item is IColumnWrapper {\n  return (<IColumnWrapper>item).desc != null;\n}\n\nexport interface ISidePanelOptions extends Partial<ISearchBoxOptions<IColumnWrapper>> {\n  additionalDescs: IColumnDesc[];\n  chooser: boolean;\n  hierarchy: boolean;\n  collapseable: boolean | 'collapsed';\n}\n\nexport default class SidePanel {\n\n  private readonly options: ISidePanelOptions = {\n    additionalDescs: [\n      createStackDesc('Weighted Sum'),\n      createScriptDesc('Scripted Formula'),\n      createNestedDesc('Nested'),\n      createReduceDesc(),\n      createImpositionDesc(),\n      createRankDesc(),\n      createSelectionDesc(),\n      createGroupDesc(),\n      createAggregateDesc(),\n    ],\n    chooser: true,\n    hierarchy: true,\n    placeholder: 'Add Column...',\n    formatItem: (item: IColumnWrapper | IGroupSearchItem<IColumnWrapper>, node: HTMLElement) => {\n      const w: IColumnWrapper = isWrapper(item) ? item : (<IColumnWrapper>item.children[0]);\n      node.dataset.typeCat = w.category.name;\n      node.classList.add(cssClass('typed-icon'));\n      if (isWrapper(item)) {\n        node.dataset.type = w.desc.type;\n      }\n      if (node.parentElement) {\n        node.parentElement.classList.add(cssClass('feature-model'));\n        node.parentElement.classList.toggle(cssClass('feature-advanced'), w.category.featureLevel === 'advanced');\n        node.parentElement.classList.toggle(cssClass('feature-basic'), w.category.featureLevel === 'basic');\n      }\n      return item.text;\n    },\n    collapseable: true\n  };\n\n  readonly node: HTMLElement;\n  private readonly search: SearchBox<IColumnWrapper> | null;\n  private chooser: HTMLElement | null = null;\n  private readonly descs: IColumnWrapper[] = [];\n  private data: IDataProvider;\n  private readonly rankings: SidePanelRanking[] = [];\n\n  constructor(private ctx: IRankingHeaderContext, document: Document, options: Partial<ISidePanelOptions> = {}) {\n    Object.assign(this.options, options);\n\n    this.node = document.createElement('aside');\n    this.node.classList.add(cssClass('side-panel'));\n\n    this.search = this.options.chooser ? new SearchBox<IColumnWrapper>(this.options) : null;\n\n    this.data = ctx.provider;\n    this.init();\n    this.update(ctx);\n  }\n\n  private init() {\n    this.node.innerHTML = `\n      <aside class=\"${cssClass('stats')}\"></aside>\n      <header class=\"${cssClass('side-panel-rankings')}\">\n        <i class=\"${cssClass('action')}\" title=\"Choose &hellip;\">${aria('Choose &hellip;')}</i>\n      </header>\n      <main class=\"${cssClass('side-panel-main')}\"></main>\n    `;\n\n    {\n      const choose = <HTMLElement>this.node.querySelector('header > i');\n      choose.onclick = (evt) => {\n        evt.stopPropagation();\n        const dialog = new ChooseRankingDialog(this.rankings.map((d) => d.dropdown), dialogContext(this.ctx, 1, <any>evt));\n        dialog.open();\n      };\n    }\n\n    if (this.options.collapseable) {\n      this.node.insertAdjacentHTML('beforeend', `<div class=\"${cssClass('collapser')}\" title=\"Collapse Panel\">${aria('Collapse Panel')}</div>`);\n      const last = <HTMLElement>this.node.lastElementChild;\n      last.onclick = () => this.collapsed = !this.collapsed;\n      this.collapsed = this.options.collapseable === 'collapsed';\n    }\n    this.initChooser();\n    this.changeDataStorage(null, this.data);\n  }\n\n  private initChooser() {\n    if (!this.search) {\n      return;\n    }\n    this.chooser = this.node.ownerDocument!.createElement('header');\n    this.chooser.appendChild(this.chooser.ownerDocument!.createElement('form'));\n    this.chooser.classList.add(cssClass('side-panel-chooser'));\n    this.chooser.firstElementChild!.appendChild(this.search.node);\n    this.search.on(SearchBox.EVENT_SELECT, (panel: IColumnWrapper) => {\n      const col = this.data.create(panel.desc);\n      if (!col) {\n        return;\n      }\n      const a = this.active;\n      if (a) {\n        a.ranking.push(col);\n      }\n    });\n  }\n\n  private get active() {\n    return this.rankings.find((d) => d.active);\n  }\n\n  private changeDataStorage(old: IDataProvider | null, data: IDataProvider) {\n    if (old) {\n      old.on(suffix('.panel', DataProvider.EVENT_ADD_RANKING, DataProvider.EVENT_REMOVE_RANKING,\n        DataProvider.EVENT_ADD_DESC, DataProvider.EVENT_CLEAR_DESC, DataProvider.EVENT_ORDER_CHANGED, DataProvider.EVENT_SELECTION_CHANGED), null);\n    }\n    this.data = data;\n\n    const wrapDesc = (desc: IColumnDesc) => ({\n      desc,\n      category: categoryOfDesc(desc, data.columnTypes),\n      id: `${desc.type}@${desc.label}`,\n      text: desc.label\n    });\n    this.descs.splice(0, this.descs.length, ...data.getColumns().concat(this.options.additionalDescs).map(wrapDesc));\n\n    data.on(`${DataProvider.EVENT_ADD_DESC}.panel`, (desc) => {\n      this.descs.push(wrapDesc(desc));\n      this.updateChooser();\n    });\n\n    data.on(`${DataProvider.EVENT_CLEAR_DESC}.panel`, () => {\n      this.descs.splice(0, this.descs.length);\n      this.updateChooser();\n    });\n\n    data.on(suffix('.panel', DataProvider.EVENT_SELECTION_CHANGED, DataProvider.EVENT_ORDER_CHANGED), () => {\n      this.updateStats();\n    });\n\n    data.on(suffix('.panel', DataProvider.EVENT_ADD_RANKING), (ranking: Ranking, index: number) => {\n      this.createEntry(ranking, index);\n      this.makeActive(index);\n    });\n\n    data.on(suffix('.panel', DataProvider.EVENT_REMOVE_RANKING), (_: Ranking, index: number) => {\n      if (index < 0) {\n        // remove all\n        this.rankings.splice(0, this.rankings.length).forEach((d) => d.destroy());\n        this.node.querySelector('header')!.dataset.count = '0';\n        this.makeActive(-1);\n        return;\n      }\n      const r = this.rankings.splice(index, 1)[0];\n      this.node.querySelector('header')!.dataset.count = String(this.rankings.length);\n      r.destroy();\n      if (r.active) {\n        this.makeActive(this.rankings.length === 0 ? -1 : Math.max(index - 1, 0));\n      }\n    });\n\n    this.rankings.splice(0, this.rankings.length).forEach((d) => d.destroy());\n    data.getRankings().forEach((d, i) => {\n      this.createEntry(d, i);\n    });\n    if (this.rankings.length > 0) {\n      this.makeActive(0);\n    }\n\n    this.updateStats();\n  }\n\n  private createEntry(ranking: Ranking, index: number) {\n    const entry = new SidePanelRanking(ranking, this.ctx, this.node.ownerDocument!, this.options);\n\n    const header = this.node.querySelector('header')!;\n    const main = this.node.querySelector('main')!;\n\n    header.insertBefore(entry.header, header.children[index + 1]); // for the action\n    header.dataset.count = String(this.rankings.length + 1);\n\n    entry.header.onclick = (evt) => {\n      evt.preventDefault();\n      evt.stopPropagation();\n      this.makeActive(this.rankings.indexOf(entry));\n    };\n    entry.dropdown.onclick = entry.header.onclick = (evt) => {\n      evt.preventDefault();\n      evt.stopPropagation();\n      this.ctx.dialogManager.removeAboveLevel(0);\n      this.makeActive(this.rankings.indexOf(entry));\n    };\n\n    main.insertBefore(entry.node, main.children[index]);\n\n    this.rankings.splice(index, 0, entry);\n  }\n\n  get collapsed() {\n    return this.node.classList.contains(cssClass('collapsed'));\n  }\n\n  set collapsed(value: boolean) {\n    this.node.classList.toggle(cssClass('collapsed'), value);\n    if (value) {\n      return;\n    }\n    this.updateChooser();\n    this.updateStats();\n    this.updateRanking();\n  }\n\n  private makeActive(index: number) {\n    this.rankings.forEach((d, i) => d.active = index === i);\n\n    const active = this.active;\n    if (active && this.chooser) {\n      active.node.insertAdjacentElement('afterbegin', this.chooser);\n      // scroll to body\n      const parent = <HTMLElement>this.node.closest(`.${cssClass()}`)!;\n      const body = parent ? parent.querySelector(`article[data-ranking=\"${active.ranking.id}\"]`) : null;\n      if (body) {\n        body.scrollIntoView();\n      }\n    }\n    this.updateRanking();\n  }\n\n  private updateRanking() {\n    const active = this.active;\n    if (active && !this.collapsed) {\n      active.update(this.ctx);\n    }\n  }\n\n  update(ctx: IRankingHeaderContext) {\n    const bak = this.data;\n    this.ctx = ctx;\n    if (ctx.provider !== bak) {\n      this.changeDataStorage(bak, ctx.provider);\n    }\n    this.updateChooser();\n    this.updateStats();\n\n    const active = this.active;\n    if (active) {\n      active.update(ctx);\n    }\n  }\n\n  private updateStats() {\n    if (this.collapsed) {\n      return;\n    }\n    const stats = <HTMLElement>this.node.querySelector(`.${cssClass('stats')}`);\n    const s = this.data.getSelection();\n    const r = this.data.getFirstRanking();\n    const f = format(',d');\n    const visible = r ? r.getGroups().reduce((a, b) => a + b.order.length, 0) : 0;\n    const total = this.data.getTotalNumberOfRows();\n    stats.innerHTML = `Showing <strong>${f(visible)}</strong> of ${f(total)} items${s.length > 0 ? `; <span>${f(s.length)} selected</span>` : ''}${visible < total ? ` <i class=\"${cssClass('action')} ${cssClass('action-filter')} ${cssClass('stats-reset')}\" title=\"Reset filters\"><span>Reset</span></i>` : ''}`;\n\n    const resetButton = stats.querySelector<HTMLElement>(`.${cssClass('stats-reset')}`);\n    if (!resetButton) {\n      return;\n    }\n    resetButton.onclick = (evt) => {\n      evt.preventDefault();\n      evt.stopPropagation();\n      this.data.clearFilters();\n    };\n  }\n\n  destroy() {\n    this.node.remove();\n    if (!this.data) {\n      return;\n    }\n    this.rankings.forEach((d) => d.destroy());\n    this.rankings.length = 0;\n    this.data.on(suffix('.panel', DataProvider.EVENT_ADD_RANKING, DataProvider.EVENT_REMOVE_RANKING,\n      DataProvider.EVENT_ADD_DESC), null);\n  }\n\n  private static groupByType(entries: IColumnWrapper[]): {text: string, children: IColumnWrapper[]}[] {\n    const map = new Map<IColumnCategory, IColumnWrapper[]>();\n    entries.forEach((entry) => {\n      if (!map.has(entry.category)) {\n        map.set(entry.category, [entry]);\n      } else {\n        map.get(entry.category)!.push(entry);\n      }\n    });\n    return Array.from(map).map(([key, value]) => {\n      return {\n        text: key.label,\n        order: key.order,\n        children: value.sort((a, b) => a.text.localeCompare(b.text))\n      };\n    }).sort((a, b) => a.order - b.order);\n  }\n\n  private updateChooser() {\n    if (!this.search || this.collapsed) {\n      return;\n    }\n    this.search.data = SidePanel.groupByType(this.descs);\n  }\n}\n","import {ILineUpOptions, defaultOptions} from '../config';\nimport {merge} from '../internal';\nimport {DataProvider} from '../provider';\nimport {cssClass} from '../styles';\nimport {ALineUp} from './ALineUp';\nimport EngineRenderer from './EngineRenderer';\nimport SidePanel from './panel/SidePanel';\n\nexport default class LineUp extends ALineUp {\n  private readonly renderer: EngineRenderer | null;\n  private readonly panel: SidePanel | null;\n\n  private readonly options = defaultOptions();\n\n  constructor(node: HTMLElement, data: DataProvider, options: Partial<ILineUpOptions> = {}) {\n    super(node, data, options && options.ignoreUnsupportedBrowser === true);\n\n    merge(this.options, options);\n\n    if (!this.isBrowserSupported) {\n      this.renderer = null;\n      this.panel = null;\n      return;\n    }\n\n    this.node.classList.add(cssClass());\n\n\n    this.renderer = new EngineRenderer(data, this.node, this.options);\n    if (this.options.sidePanel) {\n      this.panel = new SidePanel(this.renderer.ctx, this.node.ownerDocument!, {\n        collapseable: this.options.sidePanelCollapsed ? 'collapsed' : true,\n        hierarchy: this.options.hierarchyIndicator && this.options.flags.advancedRankingFeatures\n      });\n      this.renderer.pushUpdateAble((ctx) => this.panel!.update(ctx));\n      this.node.insertBefore(this.panel.node, this.node.firstChild);\n    } else {\n      this.panel = null;\n    }\n    this.forward(this.renderer, `${EngineRenderer.EVENT_HIGHLIGHT_CHANGED}.main`);\n  }\n\n  destroy() {\n    this.node.classList.remove(cssClass());\n    if (this.renderer) {\n      this.renderer.destroy();\n    }\n    if (this.panel) {\n      this.panel.destroy();\n    }\n    super.destroy();\n  }\n\n  update() {\n    if (this.renderer) {\n      this.renderer.update();\n    }\n  }\n\n  setDataProvider(data: DataProvider, dump?: any) {\n    super.setDataProvider(data, dump);\n    if (!this.renderer) {\n      return;\n    }\n    this.renderer.setDataProvider(data);\n    this.update();\n    if (this.panel) {\n      this.panel.update(this.renderer.ctx);\n    }\n  }\n\n  setHighlight(dataIndex: number, scrollIntoView: boolean = true) {\n    return this.renderer != null && this.renderer.setHighlight(dataIndex, scrollIntoView);\n  }\n\n  getHighlight() {\n    return this.renderer ? this.renderer.getHighlight() : -1;\n  }\n\n  protected enableHighlightListening(enable: boolean) {\n    if (this.renderer) {\n      this.renderer.enableHighlightListening(enable);\n    }\n  }\n}\n","import {IGroupData, IGroupItem, isGroup} from '../../model';\nimport {groupEndLevel, ITopNGetter} from '../../provider/internal';\n\nexport interface IRule {\n  apply(data: (IGroupData | IGroupItem)[], availableHeight: number, selection: Set<number>, topNGetter: ITopNGetter): IRuleInstance;\n\n  levelOfDetail(item: IGroupData | IGroupItem, height: number): 'high' | 'low';\n}\n\nexport interface IRuleInstance {\n  item: number | ((item: IGroupItem) => number);\n  group: number | ((group: IGroupData) => number);\n  violation?: string;\n}\n\n\nexport function spaceFillingRule(config: {groupHeight: number, rowHeight: number, groupPadding: number}) {\n  function levelOfDetail(item: IGroupData | IGroupItem, height: number): 'high' | 'low' {\n    const group = isGroup(item);\n    const maxHeight = group ? config.groupHeight : config.rowHeight;\n    if (height >= maxHeight * 0.9) {\n      return 'high';\n    }\n    return 'low';\n  }\n\n  function itemHeight(data: (IGroupData | IGroupItem)[], availableHeight: number, selection: Set<number>, topNGetter: ITopNGetter) {\n    const visibleHeight = availableHeight - config.rowHeight - 5; // some padding for hover\n    const items = <IGroupItem[]>data.filter((d) => !isGroup(d));\n    const groups = data.length - items.length;\n    const selected = items.reduce((a, d) => a + (selection.has(d.dataIndex) ? 1 : 0), 0);\n    const unselected = items.length - selected;\n    const groupSeparators = items.reduce((a, d) => a + groupEndLevel(d, topNGetter), 0);\n\n    if (unselected <= 0) {\n      // doesn't matter since all are selected anyhow\n      return {height: config.rowHeight, violation: ''};\n    }\n    const available = visibleHeight - groups * config.groupHeight - groupSeparators * config.groupPadding - selected * config.rowHeight;\n\n    const height = Math.floor(available / unselected); // round to avoid sub pixel issues\n    if (height < 1) {\n      return {\n        height: 1,\n        violation: `Not possible to fit all rows on the screen. Set filters or aggregate groups to make it fit again.`\n      };\n    }\n    // clamp to max height\n    if (height > config.rowHeight) {\n      return {\n        height: config.rowHeight,\n        violation: ``\n      };\n    }\n    return {height, violation: ''};\n  }\n\n  return <IRule>{\n    apply: (data: (IGroupData | IGroupItem)[], availableHeight: number, selection: Set<number>, topNGetter: ITopNGetter) => {\n\n      const {violation, height} = itemHeight(data, availableHeight, selection, topNGetter);\n\n      const item = (item: IGroupItem) => {\n        if (selection.has(item.dataIndex)) {\n          return config.rowHeight;\n        }\n        return height;\n      };\n      return {item, group: config.groupHeight, violation};\n    },\n    levelOfDetail\n  };\n}\n","import {GridStyleManager} from 'lineupengine';\nimport {ILineUpOptions} from '../../config';\nimport {debounce, AEventDispatcher, IEventListener} from '../../internal';\nimport {IGroupData, IGroupItem, isGroup, Ranking, IGroup} from '../../model';\nimport {DataProvider} from '../../provider';\nimport {IRenderContext} from '../../renderer';\nimport {IEngineRankingContext} from '../EngineRanking';\nimport EngineRenderer from '../EngineRenderer';\nimport {IRankingHeaderContext, IRankingHeaderContextContainer} from '../interfaces';\nimport {IRule} from './rules';\n\n/**\n * emitted when the highlight changes\n * @asMemberOf TaggleRenderer\n * @param dataIndex the highlghted data index or -1 for none\n * @event\n */\nexport declare function highlightChanged(dataIndex: number): void;\n\nexport interface ITaggleOptions {\n  violationChanged(rule: IRule, violation: string): void;\n\n  rowPadding: number;\n}\n\nexport default class TaggleRenderer extends AEventDispatcher {\n  static readonly EVENT_HIGHLIGHT_CHANGED = EngineRenderer.EVENT_HIGHLIGHT_CHANGED;\n\n  private isDynamicLeafHeight: boolean = false;\n\n  private rule: IRule | null = null;\n  private levelOfDetail: ((rowIndex: number) => 'high' | 'low') | null = null;\n  private readonly resizeListener = () => debounce(() => this.update(), 100);\n  private readonly renderer: EngineRenderer;\n\n  private readonly options: Readonly<ITaggleOptions> = {\n    violationChanged: () => undefined,\n    rowPadding: 2\n  };\n\n  constructor(public data: DataProvider, parent: HTMLElement, options: (Partial<ITaggleOptions> & Readonly<ILineUpOptions>)) {\n    super();\n    Object.assign(this.options, options);\n\n    this.renderer = new EngineRenderer(data, parent, Object.assign({}, options, {\n      dynamicHeight: (data: (IGroupData | IGroupItem)[], ranking: Ranking) => {\n        const r = this.dynamicHeight(data, ranking);\n        if (r) {\n          return r;\n        }\n        return options.dynamicHeight ? options.dynamicHeight(data, ranking) : null;\n      },\n      levelOfDetail: (rowIndex: number) => this.levelOfDetail ? this.levelOfDetail(rowIndex) : 'high'\n    }));\n\n    this.data.on(`${DataProvider.EVENT_SELECTION_CHANGED}.rule`, () => {\n      if (this.isDynamicLeafHeight) {\n        this.update();\n      }\n    });\n    this.forward(this.renderer, `${TaggleRenderer.EVENT_HIGHLIGHT_CHANGED}.main`);\n\n    window.addEventListener('resize', this.resizeListener, {\n      passive: true\n    });\n  }\n\n  get style(): GridStyleManager {\n    return this.renderer.style;\n  }\n\n  get ctx(): IRankingHeaderContextContainer & IRenderContext & IEngineRankingContext {\n    return this.renderer.ctx;\n  }\n\n  pushUpdateAble(updateAble: (ctx: IRankingHeaderContext) => void) {\n    this.renderer.pushUpdateAble(updateAble);\n  }\n\n  private dynamicHeight(data: (IGroupData | IGroupItem)[], ranking: Ranking) {\n    if (!this.rule) {\n      this.levelOfDetail = null;\n      return null;\n    }\n\n    const availableHeight = this.renderer ? this.renderer.node.querySelector('main')!.clientHeight : 100;\n    const topNGetter = (group: IGroup) => this.data.getTopNAggregated(ranking, group);\n    const instance = this.rule.apply(data, availableHeight, new Set(this.data.getSelection()), topNGetter);\n\n    this.isDynamicLeafHeight = typeof instance.item === 'function';\n\n    this.options.violationChanged(this.rule, instance.violation || '');\n\n    const height = (item: IGroupItem | IGroupData) => {\n      if (isGroup(item)) {\n        return typeof instance.group === 'number' ? instance.group : instance.group(item);\n      }\n      return typeof instance.item === 'number' ? instance.item : instance.item(item);\n    };\n\n    this.levelOfDetail = (rowIndex: number) => {\n      const item = data[rowIndex];\n      return this.rule ? this.rule.levelOfDetail(item, height(item)) : 'high';\n    };\n\n    // padding is always 0 since included in height\n    // const padding = (item: IGroupData | IGroupItem | null) => {\n    //   if (!item) {\n    //     item = data[0];\n    //   }\n    //   const lod = this.rule ? this.rule.levelOfDetail(item, height(item)) : 'high';\n    //   return lod === 'high' ? 0 : 0; // always 0 since\n    // };\n\n    return {\n      defaultHeight: typeof instance.item === 'number' ? instance.item : NaN,\n      height,\n      padding: 0\n    };\n  }\n\n  protected createEventList() {\n    return super.createEventList().concat([TaggleRenderer.EVENT_HIGHLIGHT_CHANGED]);\n  }\n\n  on(type: typeof TaggleRenderer.EVENT_HIGHLIGHT_CHANGED, listener: typeof highlightChanged | null): this;\n  on(type: string | string[], listener: IEventListener | null): this; // required for correct typings in *.d.ts\n  on(type: string | string[], listener: IEventListener | null): this {\n    return super.on(type, listener);\n  }\n\n\n  zoomOut() {\n    this.renderer.zoomOut();\n  }\n\n  zoomIn() {\n    this.renderer.zoomIn();\n  }\n\n  switchRule(rule: IRule | null) {\n    if (this.rule === rule) {\n      return;\n    }\n    this.rule = rule;\n    this.update();\n  }\n\n  destroy() {\n    this.renderer.destroy();\n    window.removeEventListener('resize', this.resizeListener);\n  }\n\n  update() {\n    this.renderer.update();\n  }\n\n  setDataProvider(data: DataProvider) {\n    if (this.data) {\n      this.data.on(`${DataProvider.EVENT_SELECTION_CHANGED}.rule`, null);\n    }\n    this.data = data;\n    this.data.on(`${DataProvider.EVENT_SELECTION_CHANGED}.rule`, () => {\n      if (this.isDynamicLeafHeight) {\n        this.update();\n      }\n    });\n    this.renderer.setDataProvider(data);\n    this.update();\n  }\n\n  setHighlight(dataIndex: number, scrollIntoView: boolean) {\n    return this.renderer.setHighlight(dataIndex, scrollIntoView);\n  }\n\n  getHighlight() {\n    return this.renderer.getHighlight();\n  }\n\n  enableHighlightListening(enable: boolean) {\n    this.renderer.enableHighlightListening(enable);\n  }\n}\n","import {GridStyleManager} from 'lineupengine';\nimport {defaultOptions} from '../../config';\nimport {ITaggleOptions} from '../../config';\nimport {merge} from '../../internal';\nimport {DataProvider} from '../../provider';\nimport {cssClass, engineCssClass} from '../../styles';\nimport {ALineUp} from '../ALineUp';\nimport SidePanel from '../panel/SidePanel';\nimport {spaceFillingRule} from './rules';\nimport TaggleRenderer from './TaggleRenderer';\n\nexport default class Taggle extends ALineUp {\n  private readonly spaceFilling: HTMLElement | null;\n  private readonly renderer: TaggleRenderer | null;\n  private readonly panel: SidePanel | null;\n\n  private readonly options = defaultOptions();\n\n\n  constructor(node: HTMLElement, data: DataProvider, options: Partial<ITaggleOptions> = {}) {\n    super(node, data, options && options.ignoreUnsupportedBrowser === true);\n    merge(this.options, options);\n    merge(this.options, {\n      violationChanged: (_rule: any, violation?: string) => this.setViolation(violation)\n    });\n\n    if (!this.isBrowserSupported) {\n      this.spaceFilling = null;\n      this.renderer = null;\n      this.panel = null;\n      return;\n    }\n\n    this.node.classList.add(cssClass(), cssClass('taggle'));\n\n    this.renderer = new TaggleRenderer(data, this.node, this.options);\n    this.panel = new SidePanel(this.renderer.ctx, this.node.ownerDocument!, {\n      collapseable: this.options.sidePanelCollapsed ? 'collapsed' : true,\n      hierarchy: this.options.hierarchyIndicator && this.options.flags.advancedRankingFeatures\n    });\n    this.renderer.pushUpdateAble((ctx) => this.panel!.update(ctx));\n    this.node.insertBefore(this.panel.node, this.node.firstChild);\n    {\n      this.panel.node.insertAdjacentHTML('afterbegin', `<div class=\"${cssClass('rule-button-chooser')} ${cssClass('feature-advanced')} ${cssClass('feature-ui')}\"><label>\n            <input type=\"checkbox\">\n            <span>Overview</span>\n            <div class=\"${cssClass('rule-violation')}\"></div>\n          </label></div>`);\n      const spaceFilling = spaceFillingRule(this.options);\n      this.spaceFilling = <HTMLElement>this.panel.node.querySelector(`.${cssClass('rule-button-chooser')}`)!;\n      const input = <HTMLInputElement>this.spaceFilling.querySelector('input');\n      input.onchange = () => {\n        const selected = this.spaceFilling!.classList.toggle(cssClass('chosen'));\n        self.setTimeout(() => {\n          this.updateLodRules(selected);\n          this.renderer!.switchRule(selected ? spaceFilling : null);\n        });\n      };\n      if (this.options.overviewMode) {\n        input.checked = true;\n        this.spaceFilling.classList.toggle(cssClass('chosen'));\n        this.updateLodRules(true);\n        this.renderer.switchRule(spaceFilling);\n      }\n    }\n    this.forward(this.renderer, `${ALineUp.EVENT_HIGHLIGHT_CHANGED}.main`);\n  }\n\n  private updateLodRules(overviewMode: boolean) {\n    if (!this.renderer) {\n      return;\n    }\n    updateLodRules(this.renderer.style, overviewMode, this.options);\n  }\n\n  private setViolation(violation?: string) {\n    violation = violation || '';\n    if (this.spaceFilling) {\n      this.spaceFilling.classList.toggle(cssClass('violated'), Boolean(violation));\n      this.spaceFilling.querySelector(`.${cssClass('rule-violation')}`)!.innerHTML = violation.replace(/\\n/g, '<br>');\n    }\n  }\n\n  destroy() {\n    this.node.classList.remove(cssClass(), cssClass('taggle'));\n    if (this.renderer) {\n      this.renderer.destroy();\n    }\n    if (this.panel) {\n      this.panel.destroy();\n    }\n    super.destroy();\n  }\n\n  update() {\n    if (this.renderer) {\n      this.renderer.update();\n    }\n  }\n\n  setHighlight(dataIndex: number, scrollIntoView: boolean = true) {\n    return this.renderer != null && this.renderer.setHighlight(dataIndex, scrollIntoView);\n  }\n\n  getHighlight() {\n    return this.renderer ? this.renderer.getHighlight() : -1;\n  }\n\n  protected enableHighlightListening(enable: boolean) {\n    if (this.renderer) {\n      this.renderer.enableHighlightListening(enable);\n    }\n  }\n\n  setDataProvider(data: DataProvider, dump?: any) {\n    super.setDataProvider(data, dump);\n    if (!this.renderer) {\n      return;\n    }\n    this.renderer.setDataProvider(data);\n    this.update();\n    this.panel!.update(this.renderer.ctx);\n  }\n}\n\nexport function updateLodRules(style: GridStyleManager, overviewMode: boolean, options: Readonly<ITaggleOptions>) {\n  if (!overviewMode) {\n    style.deleteRule('taggle_lod_rule');\n    style.deleteRule('lineup_rowPadding1');\n    style.deleteRule('lineup_rowPadding2');\n    return;\n  }\n\n  style.updateRule('taggle_lod_rule', `\n  .${engineCssClass('tr')}.${cssClass('low')}[data-agg=detail]:hover`, {\n    /* show regular height for hovered rows in low + medium LOD */\n    height: `${options.rowHeight}px !important`\n  });\n\n  style.updateRule('lineup_rowPadding1', `\n  .${engineCssClass('tr')}.${cssClass('low')}`, {\n      marginTop: '0'\n    });\n\n  // no margin for hovered low level row otherwise everything will be shifted down and the hover is gone again\n  // .${engineCssClass('tr')}.${cssClass('low')}:hover,\n\n  // padding in general and for hovered low detail rows + their afterwards\n  style.updateRule('lineup_rowPadding2', `\n  .${engineCssClass('tr')}.${cssClass('low')}.${engineCssClass('highlighted')},\n  .${engineCssClass('tr')}.${cssClass('selected')},\n  .${engineCssClass('tr')}.${cssClass('low')}:hover + .${engineCssClass('tr')}.${cssClass('low')},\n  .${engineCssClass('tr')}.${cssClass('low')}.${engineCssClass('highlighted')} + .${engineCssClass('tr')}.${cssClass('low')},\n  .${engineCssClass('tr')}.${cssClass('selected')} + .${engineCssClass('tr')}.${cssClass('low')}`, {\n      marginTop: `${options.rowPadding}px !important`\n    });\n}\n","\ninterface ILRUNode<K, V> {\n  prev: ILRUNode<K, V> | null;\n  next: ILRUNode<K, V> | null;\n  readonly key: K;\n  readonly value: V;\n}\n\nclass ListIterator<T, K, V> implements IterableIterator<T> {\n  private current: ILRUNode<K, V> | null;\n\n  constructor(private readonly youngest: ILRUNode<K, V> | null, private readonly toValue: (node: ILRUNode<K, V>) => T) {\n    this.current = youngest ? youngest.next : null;\n  }\n\n  next() {\n    if (this.current == null) {\n      return {\n        value: <T><any>undefined,\n        done: true\n      };\n    }\n    const n = this.current!;\n    const value = this.toValue(n);\n    if (n === this.youngest) {\n      this.current = null; // end\n    } else {\n      this.current = n.next!;\n    }\n    return {\n      value,\n      done: false\n    };\n  }\n\n  [Symbol.iterator]() {\n    return new ListIterator(this.youngest, this.toValue);\n  }\n}\n\n/**\n * simple LRU Cache implementation using a double linked list\n */\nexport default class LRUCache<K, V> implements Iterable<[K, V]> {\n  readonly [Symbol.toStringTag] = 'LRUCache';\n  private readonly map = new Map<K, ILRUNode<K, V>>();\n  private youngest: ILRUNode<K, V> | null = null;\n\n  constructor(private readonly maxSize: number = 100) {\n    console.assert(maxSize > 0);\n  }\n\n  clear() {\n    this.map.clear();\n    this.youngest = null;\n  }\n\n  get size() {\n    return this.map.size;\n  }\n\n  has(key: K) {\n    return this.map.has(key);\n  }\n\n  delete(key: K) {\n    if (!this.map.has(key)) {\n      return false;\n    }\n    const v = this.map.get(key)!;\n    this.map.delete(key);\n    this.removeFromList(v);\n    return true;\n  }\n\n  private removeFromList(v: ILRUNode<K, V>) {\n    if (v.prev === v) {\n      // one = last one\n      this.youngest = null;\n      return;\n    }\n    if (v === this.youngest) {\n      this.youngest = v.prev;\n    }\n    v.prev!.next = v.next;\n    v.next!.prev = v.prev;\n  }\n\n  private appendToList(v: ILRUNode<K, V>) {\n    if (this.youngest === null) {\n      // first\n      v.next = v.prev = v;\n    } else {\n      v.next = this.youngest.next;\n      v.prev = this.youngest;\n      v.next!.prev = v;\n      this.youngest.next = v;\n    }\n    this.youngest = v;\n  }\n\n  get(key: K): V | undefined {\n    const v = this.map.get(key);\n    if (v === undefined) {\n      return undefined;\n    }\n    if (this.youngest === v) {\n      return v.value;\n    }\n    this.removeFromList(v);\n    this.appendToList(v);\n    return v.value;\n  }\n\n  set(key: K, value: V) {\n    if (this.map.has(key)) {\n      // remove old\n      this.removeFromList(this.map.get(key)!);\n    }\n    const node: ILRUNode<K, V> = {key, value, prev: null, next: null};\n    this.map.set(key, node);\n    this.appendToList(node);\n\n\n    while (this.map.size > this.maxSize) {\n      // remove oldest = next of youngest\n      const oldest = this.youngest!.next!;\n      this.map.delete(oldest.key);\n      this.removeFromList(oldest);\n    }\n\n    return this;\n  }\n\n  [Symbol.iterator]() {\n    return this.entries();\n  }\n\n  entries(): IterableIterator<[K, V]> {\n    return new ListIterator<[K, V], K, V>(this.youngest, (v) => [v.key, v.value]);\n  }\n\n  keys(): IterableIterator<K> {\n    return new ListIterator<K, K, V>(this.youngest, (v) => v.key);\n  }\n\n  values(): IterableIterator<V> {\n    return new ListIterator<V, K, V>(this.youngest, (v) => v.value);\n  }\n\n  forEach(callbackfn: (value: V, key: K, map: Map<K, V>) => void, thisArg?: any) {\n    if (this.youngest === null) {\n      return;\n    }\n    if (this.youngest.next === this.youngest) {\n      // single\n      callbackfn.call(thisArg, this.youngest.value, this.youngest.key, this);\n      return;\n    }\n    const l = new ListIterator<ILRUNode<K, V>, K, V>(this.youngest, (d) => d);\n    for (let v = l.next(); !v.done; v = l.next()) {\n      callbackfn.call(thisArg, v.value.value, v.value.key, this);\n    }\n  }\n}\n","import {IColumnDump, IOrderedGroup, Ranking} from '../../model';\nimport {IDateStatistics, ICategoricalStatistics, IAdvancedBoxPlotData, IStatistics} from '../../internal';\n\n\nexport interface IRemoteDataProviderOptions {\n  /**\n   * maximal cache size\n   * @default 10000\n   */\n  maxCacheSize: number;\n\n  /**\n   * neighbors to preload when requesting an index\n   * @default 50\n   */\n  loadNeighbors: number;\n\n  /**\n   * whether to precompute box plot statistics\n   * @default false\n   */\n  precomputeBoxPlotStats: boolean | 'data' | 'summary' | 'group';\n}\n\nexport interface IServerRankingDump {\n  filter: IColumnDump[];\n  sortCriteria: {asc: boolean, col: IColumnDump}[];\n  groupCriteria: IColumnDump[];\n  groupSortCriteria: {asc: boolean, col: IColumnDump}[];\n}\n\n/**\n * @internal\n */\nexport function toRankingDump(ranking: Ranking, toDescRef: (desc: any) => any) {\n  return {\n    filter: ranking.flatColumns.filter((d) => d.isFiltered()).map((d) => d.dump(toDescRef)),\n    sortCriteria: ranking.getSortCriteria().map((d) => ({asc: d.asc, col: d.col.dump(toDescRef)})),\n    groupCriteria: ranking.getGroupCriteria().map((d) => d.dump(toDescRef)),\n    groupSortCriteria: ranking.getGroupSortCriteria().map((d) => ({asc: d.asc, col: d.col.dump(toDescRef)}))\n  };\n}\n\nexport interface IRawNormalizedStatistics {\n  raw: IStatistics;\n  normalized: IStatistics;\n}\n\nexport interface IRawNormalizedAdvancedBoxPlotData {\n  raw: IAdvancedBoxPlotData;\n  normalized: IAdvancedBoxPlotData;\n}\n\nexport declare type IRemoteStatistics = IDateStatistics | ICategoricalStatistics | IRawNormalizedStatistics | IRawNormalizedAdvancedBoxPlotData;\n\nexport enum ERemoteStatiticsType {\n  categorical = 'categorical',\n  date = 'date',\n  number = 'number',\n  boxplot = 'boxplot'\n}\n\nexport interface IComputeColumn {\n  dump: IColumnDump;\n  type: ERemoteStatiticsType;\n}\n\nexport interface ICustomAbortSignal {\n  readonly aborted: boolean;\n  onabort?(): void;\n}\n\nexport interface IAbortOptions {\n  signal?: ICustomAbortSignal;\n}\n/**\n * interface what the server side has to provide\n */\nexport interface IServerData {\n  /**\n   * total number of rows\n   */\n  readonly totalNumberOfRows: number;\n\n  /**\n   * sort the dataset by the given description\n   * @param ranking\n   */\n  sort(ranking: IServerRankingDump, options: IAbortOptions): Promise<{groups: IOrderedGroup[], maxDataIndex: number}>;\n\n  /**\n   * returns a slice of the data array identified by a list of indices\n   * @param indices\n   */\n  view(indices: number[], options: IAbortOptions): Promise<any[]>;\n\n  /**\n   * returns a sample of the values for a given column\n   * @param column\n   */\n  mappingSample(column: IColumnDump, options: IAbortOptions): Promise<number[]>;\n\n  /**\n   * return the matching indices matching the given arguments\n   * @param search\n   * @param column\n   */\n  search(search: string | RegExp, column: IColumnDump, options: IAbortOptions): Promise<number[]>;\n\n  /**\n   * compute the data statistics for the given columns\n   * @param columns column dumps\n   */\n  computeDataStats(columns: IComputeColumn[], options: IAbortOptions): Promise<IRemoteStatistics[]>;\n  /**\n   * compute the ranking statistics for the given columns\n   * @param ranking ranking dump\n   * @param columns column dumps\n   */\n  computeRankingStats(ranking: IServerRankingDump, columns: IComputeColumn[], options: IAbortOptions): Promise<IRemoteStatistics[]>;\n  /**\n   * compute the group statistics for the given columns\n   * @param ranking ranking dump\n   * @param group group name\n   * @param columns column dumps\n   */\n  computeGroupStats(ranking: IServerRankingDump, group: string, columns: IComputeColumn[], options: IAbortOptions): Promise<IRemoteStatistics[]>;\n\n}\n\n","import {ICustomAbortSignal, ERemoteStatiticsType, IComputeColumn} from './interfaces';\nimport {IColumnDump} from '../../model';\n\nexport class CustomAbortSignal implements ICustomAbortSignal {\n  onabort:(()=>void) | undefined = undefined;\n  aborted: boolean = false;\n\n  abort() {\n    if (this.aborted) {\n      return;\n    }\n    this.aborted = true;\n    if (this.onabort) {\n      this.onabort();\n    }\n  }\n}\n\n\nexport class MultiAbortSignal extends CustomAbortSignal {\n  private count: number = 0;\n\n  constructor(private readonly ref: any[]) {\n    super();\n  }\n\n  abort() {\n    if (this.aborted) {\n      return;\n    }\n    // just abort when all were aborted\n    this.count += 1;\n    if (this.count >= this.ref.length) {\n      super.abort();\n    }\n  }\n}\n\n\n/**\n * @internal\n */\nexport interface IDebounceContext {\n  promise: Promise<any[]>;\n  cols: IComputeColumn[];\n  timer: number;\n  resolve: (r: Promise<any[]>) => void;\n  signal: MultiAbortSignal;\n}\n\n/**\n * @internal\n */\nexport class CallDebouncer {\n  private static readonly DEBOUNCE_DELAY = 100; // 100ms\n  private readonly debounceKeys = new Map<string, IDebounceContext>();\n\n  debouncedCall<T>(key: string, dump: IColumnDump, type: ERemoteStatiticsType, f: (cols: IComputeColumn[], signal: ICustomAbortSignal) => Promise<T[]>): {data: Promise<T>, signal: {abort(): void}} {\n    if (!this.debounceKeys.has(key)) {\n      const cols = [{dump, type}];\n      const signal = new MultiAbortSignal(cols);\n      let resolve: (r: Promise<T[]>) => void = () => undefined;\n      const promise = new Promise<T[]>((resolveImpl) => resolve = resolveImpl);\n      const timer = self.setTimeout(() => {\n        this.debounceKeys.delete(key);\n        resolve(f(cols, signal));\n      }, CallDebouncer.DEBOUNCE_DELAY);\n      this.debounceKeys.set(key, {promise, resolve, timer, cols, signal});\n      return {data: promise.then((r) => r[0]), signal};\n    }\n\n    // update the timer and push another column to the arguments\n    const entry = this.debounceKeys.get(key)!;\n\n    const index = entry.cols.length;\n    entry.cols.push({dump, type});\n\n    clearTimeout(entry.timer);\n    entry.timer = self.setTimeout(() => {\n      this.debounceKeys.delete(key);\n      entry.resolve(f(entry.cols, entry.signal));\n    }, CallDebouncer.DEBOUNCE_DELAY);\n\n    return {data: entry.promise.then((r) => r[index]), signal: entry.signal};\n  }\n}\n","import {abortAble} from 'lineupengine';\nimport {Column, ICategoricalLikeColumn, IDataRow, IDateColumn, IndicesArray, INumberColumn, IOrderedGroup, isCategoricalLikeColumn, isDateColumn, isNumberColumn, Ranking} from '../../model';\nimport {NUM_OF_EXAMPLE_ROWS} from '../../constants';\nimport {ISequence, IDateStatistics, ICategoricalStatistics, IAdvancedBoxPlotData, IStatistics, dummyDateStatistics, dummyStatistics, dummyBoxPlot, dummyCategoricalStatisticsBuilder} from '../../internal';\nimport {IRenderTask, IRenderTasks} from '../../renderer';\nimport {ABORTED} from '../interfaces';\nimport {taskLater, TaskLater, taskNow, TaskNow, abortedTask} from '../tasks';\nimport {IRawNormalizedAdvancedBoxPlotData, IRawNormalizedStatistics, IServerData, toRankingDump, ERemoteStatiticsType, IComputeColumn} from './interfaces';\nimport {CustomAbortSignal, MultiAbortSignal, CallDebouncer} from './internal';\n\n/**\n * @internal\n */\nexport interface IProviderAdapter {\n  viewRows(indices: IndicesArray): Promise<IDataRow[]>;\n  toDescRef(desc: any): any;\n  precomputeBoxPlotStats: boolean | 'data' | 'summary' | 'group';\n}\n\n\nfunction dummyRawNormalizedStatistics(): IRawNormalizedStatistics {\n  return {\n    raw: dummyStatistics(),\n    normalized: dummyStatistics()\n  };\n}\n\nfunction dummyRawNormalizedAdvancedBoxPlotData(): IRawNormalizedAdvancedBoxPlotData {\n  return {\n    raw: dummyBoxPlot(),\n    normalized: dummyBoxPlot()\n  };\n}\n\n\nfunction fixNullNaN<T>(stats: T) {\n  const keys = Object.keys(stats);\n  const s: any = stats;\n  for (const key of keys) {\n    if (s[key] == null) {\n      s[key] = NaN;\n    }\n  }\n  return stats;\n}\n\nfunction fixDateInstance(stats: IDateStatistics, column: IDateColumn): IDateStatistics {\n  const parser = column.getParser();\n  function parse(v: Date | null | string) {\n    if (v && !(v instanceof Date)) {\n      return parser(v);\n    }\n    return v;\n  }\n  const a: any = stats;\n  a.min = parse(a.min);\n  a.max = parse(a.max);\n  for (const bin of a.hist) {\n    bin.x0 = parse(bin.x0);\n    bin.x1 = parse(bin.x1);\n  }\n  return stats;\n}\n\nfunction isComputeAble(col: Column) {\n  return isCategoricalLikeColumn(col) || isNumberColumn(col) || isDateColumn(col);\n}\n\nfunction toComputeAbleType(col: Column): ERemoteStatiticsType {\n  if (isCategoricalLikeColumn(col)) {\n    return ERemoteStatiticsType.categorical;\n  }\n  if (isNumberColumn(col)) {\n    return ERemoteStatiticsType.number;\n  }\n  if (isDateColumn(col)) {\n    return ERemoteStatiticsType.date;\n  }\n  throw new Error('invalid argument');\n}\n\nfunction suffix(col: IComputeColumn | ERemoteStatiticsType) {\n  return (col === ERemoteStatiticsType.boxplot || ((<IComputeColumn>col).type && (<IComputeColumn>col).type === ERemoteStatiticsType.boxplot)) ? 'bm' : 'm';\n}\n\n/**\n * @internal\n */\nexport default class RemoteTaskExecutor implements IRenderTasks {\n  private readonly cache = new Map<string, IRenderTask<any>>();\n  private readonly cacheLoading = new Map<string, {promise: Promise<any>, signal: {abort(): void}}>();\n\n  private readonly debouncer = new CallDebouncer();\n\n\n  constructor(private readonly server: IServerData, private readonly adapter: IProviderAdapter) {\n\n  }\n\n  private isDummyRanking(ranking: Ranking) {\n    // from a stats point of view no difference\n    return ranking.getOrderLength() === this.server.totalNumberOfRows;\n  }\n\n  private cleanCaches(deleteKey: (key: string) => boolean) {\n    for (const key of Array.from(this.cache.keys()).sort()) {\n      // data = all\n      // summary = summary + group\n      // group = group only\n      if (!deleteKey(key)) {\n        continue;\n      }\n      const value = this.cache.get(key);\n      this.cache.delete(key);\n      if (value instanceof TaskLater) {\n        value.v.abort();\n      }\n    }\n    for (const key of Array.from(this.cacheLoading.keys()).sort()) {\n      if (!deleteKey(key)) {\n        continue;\n      }\n      const value = this.cacheLoading.get(key);\n      this.cacheLoading.delete(key);\n      if (value) {\n        value.signal.abort();\n      }\n    }\n  }\n\n  // private isDummyGroup(ranking: Ranking) {\n  //   return ranking.getGroups().length === 1;\n  // }\n\n  dirtyColumn(col: Column, type: 'data' | 'group' | 'summary') {\n    // order designed such that first groups, then summaries, then data is deleted\n\n    const deleteKey = (key: string) => (type === 'data' && key.startsWith(`${col.id}:`) ||\n        (type === 'summary' && key.startsWith(`${col.id}:b:summary:`)) ||\n        (key.startsWith(`${col.id}:a:group`)));\n\n    this.cleanCaches(deleteKey);\n  }\n\n  dirtyRanking(ranking: Ranking, type: 'data' | 'group' | 'summary') {\n    const cols = ranking.flatColumns;\n\n    let checker: ((key: string) => boolean)[];\n    switch (type) {\n      case 'group':\n        checker = cols.map((col) => (key: string) => key.startsWith(`${col.id}:a:group`));\n        break;\n      case 'summary':\n        checker = cols.map((col) => (key: string) => key.startsWith(`${col.id}:b:summary`) || key.startsWith(`${col.id}:a:group`));\n        break;\n      case 'data':\n      default:\n        checker = cols.map((col) => (key: string) => key.startsWith(`${col.id}:`));\n        break;\n    }\n    this.cleanCaches((key) => checker.some((c) => c(key)));\n  }\n\n  private preComputeBoxPlot(level: 'data' | 'ranking' | 'group') {\n    if (!this.adapter.precomputeBoxPlotStats) {\n      return false;\n    }\n    return (level === 'data' || (level === 'ranking' && this.adapter.precomputeBoxPlotStats !== 'data') || (level === this.adapter.precomputeBoxPlotStats));\n  }\n\n  preCompute(ranking: Ranking, groups: IOrderedGroup[]) {\n    const columns = ranking.flatColumns.filter(isComputeAble);\n    const dump = toRankingDump(ranking, this.adapter.toDescRef);\n    const computeAble = columns.map((d) => ({dump: d.dump(this.adapter.toDescRef), type: toComputeAbleType(d)}));\n    const computeAbleBoxPlot = computeAble.filter((d) => d.type === ERemoteStatiticsType.number).map((d) => Object.assign({}, d, { type: ERemoteStatiticsType.boxplot}));\n\n\n    // load server data caches\n    this.preComputeDataImpl(computeAble, computeAbleBoxPlot);\n\n    const total = groups.reduce((a, b) => a + b.order.length, 0);\n    if (groups.length === 0 || total === 0) {\n      return;\n    }\n\n    // load server summary caches\n    {\n      const toLoadSummary = computeAble.filter((col) => !this.cache.has(`${col.dump.id}:b:summary:${suffix(col)}`));\n      if (this.preComputeBoxPlot('ranking')) {\n        const toLoadBoxPlotSummary = computeAbleBoxPlot.filter((col) => !this.cache.has(`${col.dump.id}:b:summary:${suffix(col)}`));\n        toLoadSummary.push(...toLoadBoxPlotSummary);\n      }\n\n      if (toLoadSummary.length > 0) {\n        if (total === this.server.totalNumberOfRows) {\n          toLoadSummary.forEach((col) => {\n            // copy from data to summary and create proper structure\n            const entry = this.cacheLoading.get(`${col.dump.id}:c:data:${suffix(col)}`)!;\n            this.cacheLoading.set(`${col.dump.id}:b:summary:${suffix(col)}`, {\n              promise: entry.promise.then((data: any) => ({data, summary: data})),\n              signal: entry.signal\n            });\n          });\n        } else {\n          const signal = new MultiAbortSignal(toLoadSummary);\n          const data = this.server.computeRankingStats(dump, toLoadSummary, {signal});\n          toLoadSummary.forEach((col, i) => {\n            this.cacheLoading.set(`${col.dump.id}:b:summary:${suffix(col)}`, {\n              promise: Promise.all([this.cacheLoading.get(`${col.dump.id}:c:data:${suffix(col)}`)!.promise, data]).then(([data, rows]) => ({data, summary: rows[i]})),\n              signal\n            });\n          });\n        }\n      }\n    }\n\n    // load server group caches\n    if (groups.length === 1) { // dummy group\n      const group = groups[0];\n      for (const col of computeAble) {\n        // copy from summary to group and create proper structure\n        const entry = this.cacheLoading.get(`${col.dump.id}:b:summary:m`)!;\n        this.cacheLoading.set(`${col.dump.id}:a:group:${group.name}:m`, {\n          promise: entry.promise.then((v: {summary: any, data: any}) => ({group: v.summary, summary: v.summary, data: v.data})),\n          signal: entry.signal\n        });\n      }\n      if (this.preComputeBoxPlot('group')) {\n        for (const col of computeAbleBoxPlot) {\n          // copy from summary to group and create proper structure\n          const entry = this.cacheLoading.get(`${col.dump.id}:b:summary:bm`)!;\n          this.cacheLoading.set(`${col.dump.id}:a:group:${group.name}:bm`, {\n            promise: entry.promise.then((v: {summary: any, data: any}) => ({group: v.summary, summary: v.summary, data: v.data})),\n            signal: entry.signal\n          });\n        }\n      }\n    } else {\n      for (const g of groups) {\n        const toLoadGroup = computeAble.filter((col) => !this.cache.has(`${col.dump.id}:a:group:${g.name}:m`));\n\n        if (this.preComputeBoxPlot('group')) {\n          const toLoadBoxPlotGroup = computeAbleBoxPlot.filter((col) => !this.cache.has(`${col.dump.id}:a:group:${g.name}:bm`));\n          toLoadGroup.push(...toLoadBoxPlotGroup);\n        }\n        if (toLoadGroup.length === 0) {\n          continue;\n        }\n\n        const signal = new MultiAbortSignal(toLoadGroup);\n        const data = this.server.computeGroupStats(dump, g.name, toLoadGroup, {signal});\n        toLoadGroup.forEach((col, i) => {\n          this.cacheLoading.set(`${col.dump.id}:a:group:${g.name}:${suffix(col)}`, {\n            promise: Promise.all([this.cacheLoading.get(`${col.dump.id}:b:summary:${suffix(col)}`)!.promise, data]).then(([summary, rows]) => ({...summary, group: rows[i]})),\n            signal\n          });\n        });\n      }\n    }\n\n    // create derived entries from the loaded server data\n    for (const col of columns) {\n      this.preComputeColGiven(col, ranking, groups, total);\n    }\n  }\n\n  preComputeData(ranking: Ranking) {\n    const columns = ranking.flatColumns.filter(isComputeAble);\n    const computeAble = columns.map((d) => ({dump: d.dump(this.adapter.toDescRef), type: toComputeAbleType(d)}));\n    const computeAbleBoxPlot = computeAble.filter((d) => d.type === ERemoteStatiticsType.number).map((d) => Object.assign({}, d, {type: ERemoteStatiticsType.boxplot}));\n\n    return this.preComputeDataImpl(computeAble, computeAbleBoxPlot);\n  }\n\n  private preComputeDataImpl(computeAble: IComputeColumn[], computeAbleBoxPlot: IComputeColumn[]) {\n    const toLoadData = computeAble.filter((col) => !this.cache.has(`${col.dump.id}:c:data:m`));\n\n    if (this.preComputeBoxPlot('data')) {\n      const toLoadBoxPlotData = computeAbleBoxPlot.filter((col) => !this.cache.has(`${col.dump.id}:c:data:bm`));\n      toLoadData.push(...toLoadBoxPlotData);\n    }\n\n    if (toLoadData.length <= 0) {\n      return;\n    }\n    const signal = new MultiAbortSignal(toLoadData);\n    const data = this.server.computeDataStats(toLoadData, {signal});\n    toLoadData.forEach((col, i) => {\n      this.cacheLoading.set(`${col.dump.id}:c:data:${suffix(col)}`, {\n        promise: data.then((rows) => rows[i]),\n        signal\n      });\n    });\n  }\n\n  preComputeCol(col: Column) {\n    const ranking = col.findMyRanker();\n    const groups = ranking ? ranking.getGroups() : [];\n    return this.preComputeColGiven(col, ranking, groups, groups.reduce((a, b) => a + b.order.length, 0));\n  }\n\n  private preComputeColGiven(col: Column, ranking: Ranking | null, groups: IOrderedGroup[], total: number) {\n    if (isCategoricalLikeColumn(col)) {\n      this.dataCategoricalStats(col);\n      if (!ranking || total === 0) {\n        return;\n      }\n      this.summaryCategoricalStats(col);\n      for (const group of groups!) {\n        this.groupCategoricalStats(col, group);\n      }\n      return;\n    }\n\n    if (isDateColumn(col)) {\n      this.dataDateStats(col);\n\n      if (!ranking || total === 0) {\n        return;\n      }\n      this.summaryDateStats(col);\n      for (const group of groups!) {\n        this.groupDateStats(col, group);\n      }\n    }\n\n    if (!isNumberColumn(col)) {\n      return;\n    }\n    this.dataNumberStats(col, false);\n    this.dataNumberStats(col, true);\n    if (this.preComputeBoxPlot('data')) {\n      this.dataBoxPlotStats(col, false);\n      this.dataBoxPlotStats(col, true);\n    }\n\n    if (!ranking || total === 0) {\n      return;\n    }\n    this.summaryNumberStats(col, false);\n    this.summaryNumberStats(col, true);\n    if (this.preComputeBoxPlot('ranking')) {\n      this.summaryBoxPlotStats(col, false);\n      this.summaryBoxPlotStats(col, true);\n    }\n\n    for (const group of groups!) {\n      this.groupNumberStats(col, group, false);\n      this.groupNumberStats(col, group, true);\n      if (this.preComputeBoxPlot('group')) {\n        this.groupBoxPlotStats(col, group, false);\n        this.groupBoxPlotStats(col, group, true);\n      }\n    }\n  }\n\n  copyData2Summary(ranking: Ranking) {\n    for (const col of ranking.flatColumns) {\n      if (isCategoricalLikeColumn(col)) {\n        this.dataCategoricalStats(col);\n      } else if (isNumberColumn(col)) {\n        this.dataNumberStats(col, false);\n        this.dataNumberStats(col, true);\n        if (this.preComputeBoxPlot('data')) {\n          this.dataBoxPlotStats(col, false);\n          this.dataBoxPlotStats(col, true);\n        }\n      } else if (isDateColumn(col)) {\n        this.dataDateStats(col);\n      } else {\n        continue;\n      }\n      this.copyData2SummaryCol(col);\n    }\n  }\n\n  private copyData2SummaryCol(col: Column) {\n      // copy from data to summary and create proper structure\n    this.chainCopy(`${col.id}:b:summary`, this.cache.get(`${col.id}:c:data`)!, (data: any) => ({summary: data, data}), true);\n    if (!isNumberColumn(col)) {\n      return;\n    }\n    this.chainCopy(`${col.id}:b:summary:raw`, this.cache.get(`${col.id}:c:data:raw`)!, (data: any) => ({summary: data, data}), true);\n    if (this.cache.has(`${col.id}:c:data:b`)) {\n      this.chainCopy(`${col.id}:b:summary:b`, this.cache.get(`${col.id}:c:data:b`)!, (data: any) => ({summary: data, data}), true);\n    }\n    if (this.cache.has(`${col.id}:c:data:braw`)) {\n      this.chainCopy(`${col.id}:b:summary:braw`, this.cache.get(`${col.id}:c:data:braw`)!, (data: any) => ({summary: data, data}), true);\n    }\n  }\n\n  copyCache(col: Column, from: Column) {\n    const fromPrefix = `${from.id}:`;\n\n    for (const key of Array.from(this.cache.keys()).sort()) {\n      if (!key.startsWith(fromPrefix)) {\n        continue;\n      }\n      const tkey = `${col.id}:${key.slice(fromPrefix.length)}`;\n      this.chainCopy(tkey, this.cache.get(key)!, (data: any) => data);\n    }\n  }\n\n  groupRows<T>(col: Column, group: IOrderedGroup, key: string, compute: (rows: ISequence<IDataRow>) => T) {\n    return this.cached(`${col.id}:a:group:${group.name}:${key}`, () => this.rows(group.order, compute));\n  }\n\n  groupExampleRows<T>(_col: Column, group: IOrderedGroup, _key: string, compute: (rows: ISequence<IDataRow>) => T) {\n    return taskLater(abortAble(this.rows(group.order.slice(0, NUM_OF_EXAMPLE_ROWS), compute)));\n  }\n\n  groupBoxPlotStats(col: Column & INumberColumn, group: IOrderedGroup, raw?: boolean) {\n    return this.cached(`${col.id}:a:group:${group.name}${raw ? ':braw' : ':b'}`, () => this.groupStats<IRawNormalizedAdvancedBoxPlotData>(col, group, dummyRawNormalizedAdvancedBoxPlotData, ERemoteStatiticsType.boxplot).then((r) => ({\n      data: raw ? r.data.raw : r.data.normalized,\n      summary: raw ? r.summary.raw : r.summary.normalized,\n      group: fixNullNaN(raw ? r.group.raw : r.group.normalized)\n    })));\n  }\n\n  groupNumberStats(col: Column & INumberColumn, group: IOrderedGroup, raw?: boolean) {\n    return this.cached(`${col.id}:a:group:${group.name}${raw ? ':raw' : ''}`, () => this.groupStats<IRawNormalizedStatistics>(col, group, dummyRawNormalizedStatistics).then((r) => ({\n      data: raw ? r.data.raw : r.data.normalized,\n      summary: raw ? r.summary.raw : r.summary.normalized,\n      group: fixNullNaN(raw ? r.group.raw : r.group.normalized)\n    })));\n  }\n\n  groupCategoricalStats(col: Column & ICategoricalLikeColumn, group: IOrderedGroup) {\n    return this.cached(`${col.id}:a:group:${group.name}`, () => this.groupStats<ICategoricalStatistics>(col, group, dummyCategoricalStatisticsBuilder(col.categories)));\n  }\n\n  groupDateStats(col: Column & IDateColumn, group: IOrderedGroup) {\n    return this.cached(`${col.id}:a:group:${group.name}`, () => this.groupStats<IDateStatistics>(col, group, dummyDateStatistics).then((d) => ({data: fixDateInstance(d.data, col), summary: fixDateInstance(d.summary, col), group: fixDateInstance(d.group, col)})));\n  }\n\n  summaryBoxPlotStats(col: Column & INumberColumn, raw?: boolean) {\n    if (col.findMyRanker()!.getOrderLength() === 0) {\n      return abortedTask<{data: IAdvancedBoxPlotData, summary: IAdvancedBoxPlotData}>();\n    }\n    return this.cached(`${col.id}:b:summary${raw ? ':braw' : ':b'}`, () => this.summaryStats<IRawNormalizedAdvancedBoxPlotData>(col, dummyRawNormalizedAdvancedBoxPlotData, ERemoteStatiticsType.boxplot).then((r) => ({\n      data: raw ? r.data.raw : r.data.normalized,\n      summary: fixNullNaN(raw ? r.summary.raw : r.summary.normalized)\n    })));\n  }\n\n  summaryNumberStats(col: Column & INumberColumn, raw?: boolean) {\n    if (col.findMyRanker()!.getOrderLength() === 0) {\n      return abortedTask<{data: IStatistics, summary: IStatistics}>();\n    }\n    return this.cached(`${col.id}:b:summary${raw ? ':raw' : ''}`, () => this.summaryStats<IRawNormalizedStatistics>(col, dummyRawNormalizedStatistics).then((r) => ({\n      data: raw ? r.data.raw : r.data.normalized,\n      summary: fixNullNaN(raw ? r.summary.raw : r.summary.normalized)\n    })));\n  }\n\n  summaryCategoricalStats(col: Column & ICategoricalLikeColumn) {\n    if (col.findMyRanker()!.getOrderLength() === 0) {\n      return abortedTask<{data: ICategoricalStatistics, summary: ICategoricalStatistics}>();\n    }\n    return this.cached(`${col.id}:b:summary`, () => this.summaryStats<ICategoricalStatistics>(col, dummyCategoricalStatisticsBuilder(col.categories)));\n  }\n\n  summaryDateStats(col: Column & IDateColumn) {\n    if (col.findMyRanker()!.getOrderLength() === 0) {\n      return abortedTask<{data: IDateStatistics, summary: IDateStatistics}>();\n    }\n    return this.cached(`${col.id}:b:summary`, () => this.summaryStats<IDateStatistics>(col, dummyDateStatistics).then((d) => ({data: fixDateInstance(d.data, col), summary: fixDateInstance(d.summary, col)})));\n  }\n\n\n  private isValidCacheEntry(key: string) {\n    if (!this.cache.has(key)) {\n      return false;\n    }\n    const v = this.cache.get(key);\n    // not an aborted task\n    return !((v instanceof TaskNow) && typeof v.v === 'symbol') || (v instanceof TaskLater && typeof v.v !== 'symbol' && v.v.isAborted());\n  }\n\n  private chainCopy<T, U>(key: string, task: IRenderTask<T>, creator: (data: T) => U, force = false): IRenderTask<U> {\n    if (this.isValidCacheEntry(key) && !force) {\n      return this.cache.get(key)!;\n    }\n    if (task instanceof TaskNow) {\n      if (typeof task.v === 'symbol') {\n        // aborted\n        return taskNow(ABORTED);\n      }\n      const subTask = taskNow(creator(task.v));\n      this.cache.set(key, subTask);\n      return subTask;\n    }\n\n    const v = (<TaskLater<T>>task).v;\n    const subTask = v.then((data) => {\n      if (typeof data === 'symbol') {\n        return ABORTED;\n      }\n      return creator(data);\n    });\n    const s = taskLater(subTask);\n    this.cache.set(key, s);\n    subTask.then((r) => {\n      if (this.cache.get(key) !== s) {\n        return;\n      }\n      if (typeof r === 'symbol') {\n        this.cache.delete(key);\n      } else {\n        this.cache.set(key, taskNow(r));\n      }\n    });\n    return s;\n  }\n\n  dataBoxPlotStats(col: Column & INumberColumn, raw?: boolean): IRenderTask<IAdvancedBoxPlotData> {\n    return this.cached(`${col.id}:c:data${raw ? ':braw' : ':b'}`, () => this.dataStats<IRawNormalizedAdvancedBoxPlotData>(col, ERemoteStatiticsType.boxplot).then((r) => fixNullNaN(raw ? r.raw : r.normalized)));\n  }\n\n  dataNumberStats(col: Column & INumberColumn, raw?: boolean): IRenderTask<IStatistics> {\n    return this.cached(`${col.id}:c:data${raw ? ':raw' : ''}`, () => this.dataStats<IRawNormalizedStatistics>(col).then((r) => fixNullNaN(raw ? r.raw : r.normalized)));\n  }\n\n  dataCategoricalStats(col: Column & ICategoricalLikeColumn) {\n    return this.cached(`${col.id}:c:data`, () => this.dataStats<ICategoricalStatistics>(col));\n  }\n\n  dataDateStats(col: Column & IDateColumn) {\n    return this.cached(`${col.id}:c:data`, () => this.dataStats<IDateStatistics>(col).then((s) => fixDateInstance(s, col)));\n  }\n\n  private cached<T>(key: string, creator: () => Promise<T>): IRenderTask<T> {\n    if (this.isValidCacheEntry(key)) {\n      return this.cache.get(key)!;\n    }\n\n    const task = abortAble(creator());\n    const s = taskLater(task);\n    this.cache.set(key, s);\n    task.then((r) => {\n      if (this.cache.get(key) !== s) {\n        return;\n      }\n      if (typeof r === 'symbol') {\n        this.cache.delete(key);\n      } else {\n        this.cache.set(key, taskNow(r));\n      }\n    });\n    return s;\n  }\n\n\n  private dataStats<T>(col: Column, type = toComputeAbleType(col)): Promise<T> {\n    const key = `${col.id}:c:data:${suffix(type)}`;\n    if (this.cacheLoading.has(key)) {\n      return this.cacheLoading.get(key)!.promise;\n    }\n    const {data, signal} = this.debouncer.debouncedCall('', col.dump(this.adapter.toDescRef), type, (cols, signal) => this.server.computeDataStats(cols, {signal}));\n    this.cacheLoading.set(key, {promise: data, signal});\n    return <any>data;\n  }\n\n  private summaryStats<T>(col: Column, dummyFactory: () => T, type = toComputeAbleType(col)): Promise<{data: T, summary: T}> {\n    const key = `${col.id}:b:summary:${suffix(type)}`;\n    if (this.cacheLoading.has(key)) {\n      return this.cacheLoading.get(key)!.promise;\n    }\n    const data = this.dataStats<T>(col, type);\n    const ranking = col.findMyRanker()!;\n\n    if (ranking.getOrderLength() === 0) {\n      return data.then((data) => ({data, summary: dummyFactory()}));\n      // this.cache.set(key, v); // don't cache dummies\n      // return v;\n    }\n\n    if (this.isDummyRanking(ranking)) {\n      const v = data.then((data) => ({data, summary: data}));\n      this.cacheLoading.set(key, {promise: v, signal: {abort: () => undefined}});\n      return v;\n    }\n    const rankingDump = toRankingDump(ranking, this.adapter.toDescRef);\n    // TODO debounce\n    const signal = new CustomAbortSignal();\n    const summary = <Promise<T>><any>this.server.computeRankingStats(rankingDump, [{dump: col.dump(this.adapter.toDescRef), type}], {signal}).then((r) => r[0]);\n    const v = Promise.all([data, summary]).then(([data, summary]) => ({data, summary}));\n    this.cacheLoading.set(key, {promise: v, signal});\n    return v;\n  }\n\n  private groupStats<T>(col: Column, g: IOrderedGroup, dummyFactory: () => T, type = toComputeAbleType(col)): Promise<{data: T, summary: T, group: T}> {\n    const key = `${col.id}:a:group:${g.name}:${suffix(type)}`;\n    if (this.cacheLoading.has(key)) {\n      return this.cacheLoading.get(key)!.promise;\n    }\n    const summary = this.summaryStats<T>(col, dummyFactory, type);\n    if (g.order.length === 0) {\n      return summary.then((summary) => ({...summary, group: dummyFactory()}));\n      // this.cache.set(key, v);\n      // return v;\n    }\n    const ranking = toRankingDump(col.findMyRanker()!, this.adapter.toDescRef);\n    // TODO debounce\n    const signal = new CustomAbortSignal();\n    const group = <Promise<T>><any>this.server.computeGroupStats(ranking, g.name, [{dump: col.dump(this.adapter.toDescRef), type}], {signal}).then((r) => r[0]);\n    const v = Promise.all([summary, group]).then(([summary, group]) => ({...summary, group}));\n    this.cacheLoading.set(key, {promise: v, signal});\n    return v;\n  }\n\n  private rows<T>(indices: IndicesArray, compute: (rows: ISequence<IDataRow>) => T) {\n    return this.adapter.viewRows(indices).then(compute);\n  }\n\n  terminate() {\n    this.cache.clear();\n  }\n}\n","import {LRUCache, IEventContext} from '../../internal';\nimport Column, {IColumnDesc, IDataRow, IndicesArray, INumberColumn, Ranking, CompositeColumn, EDirtyReason, IOrderedGroup, UIntTypedArray} from '../../model';\nimport {mapIndices} from '../../model/internal';\nimport ACommonDataProvider from '../ACommonDataProvider';\nimport {IDataProviderOptions} from '../interfaces';\nimport {IServerData, toRankingDump, IRemoteDataProviderOptions} from './interfaces';\nimport {index2pos} from '../internal';\nimport RemoteTaskExecutor from './RemoteTaskExecutor';\nimport {IRenderTasks} from '../../renderer';\nimport {CustomAbortSignal} from './internal';\n\n/**\n * a remote implementation of the data provider\n */\nexport default class RemoteDataProvider extends ACommonDataProvider {\n  private readonly ooptions: IRemoteDataProviderOptions = {\n    maxCacheSize: 10000,\n    loadNeighbors: 50,\n    precomputeBoxPlotStats: false\n  };\n\n  private readonly sortAborter = new Map<string, {abort(): void}>();\n  private readonly currentSort = new Map<string, {groups: IOrderedGroup[], index2pos: UIntTypedArray}>();\n  private readonly cache: LRUCache<number, Promise<IDataRow> | IDataRow>;\n\n  private readonly tasks: RemoteTaskExecutor;\n\n  constructor(private server: IServerData, columns: IColumnDesc[] = [], options: Partial<IRemoteDataProviderOptions & IDataProviderOptions> = {}) {\n    super(columns, options);\n    Object.assign(this.ooptions, options);\n    this.cache = new LRUCache(this.ooptions.maxCacheSize);\n    this.tasks = new RemoteTaskExecutor(server, {\n      viewRows: this.viewRows.bind(this),\n      toDescRef: this.toDescRef,\n      precomputeBoxPlotStats: this.ooptions.precomputeBoxPlotStats\n    });\n  }\n\n  getTotalNumberOfRows() {\n    return this.server.totalNumberOfRows;\n  }\n\n  getTaskExecutor(): IRenderTasks {\n    return this.tasks;\n  }\n\n  cloneRanking(existing?: Ranking) {\n    const ranking = super.cloneRanking(existing);\n    this.trackRanking(ranking, existing);\n    return ranking;\n  }\n\n  private trackRanking(ranking: Ranking, existing?: Ranking) {\n\n    const that = this;\n    ranking.on(`${Column.EVENT_DIRTY_CACHES}.cache`, function (this: IEventContext) {\n      let col: any = this.origin;\n      while (col instanceof Column) {\n        //console.log(col.label, 'dirty data');\n        that.tasks.dirtyColumn(col, 'data');\n        that.tasks.preComputeCol(col);\n        col = col.parent;\n      }\n    });\n\n    const cols = ranking.flatColumns;\n    const addKey = `${Ranking.EVENT_ADD_COLUMN}.cache`;\n    const removeKey = `${Ranking.EVENT_REMOVE_COLUMN}.cache`;\n\n    const removeCol = (col: Column) => {\n      this.tasks.dirtyColumn(col, 'data');\n      if (col instanceof CompositeColumn) {\n        col.on(addKey, null);\n        col.on(removeKey, null);\n      }\n    };\n\n    const addCol = (col: Column) => {\n      this.tasks.preComputeCol(col);\n      if (col instanceof CompositeColumn) {\n        col.on(addKey, addCol);\n        col.on(removeKey, removeCol);\n      }\n    };\n\n\n    ranking.on(addKey, addCol);\n    ranking.on(removeKey, removeCol);\n    for (const col of cols) {\n      if (col instanceof CompositeColumn) {\n        col.on(addKey, addCol);\n        col.on(removeKey, removeCol);\n      }\n    }\n\n    if (existing) {\n      const copy = existing.flatColumns;\n      for (let i = 0; i < cols.length; ++i) {\n        this.tasks.copyCache(cols[i], copy[i]);\n      }\n    }\n\n    this.tasks.preComputeData(ranking);\n  }\n\n  cleanUpRanking(ranking: Ranking) {\n    const cols = ranking.flatColumns;\n    const addKey = `${Ranking.EVENT_ADD_COLUMN}.cache`;\n    const removeKey = `${Ranking.EVENT_REMOVE_COLUMN}.cache`;\n    ranking.on(addKey, null);\n    ranking.on(removeKey, null);\n    for (const col of cols) {\n      if (col instanceof CompositeColumn) {\n        col.on(addKey, null);\n        col.on(removeKey, null);\n      }\n    }\n\n    this.tasks.dirtyRanking(ranking, 'data');\n    this.sortAborter.delete(ranking.id);\n    this.currentSort.delete(ranking.id);\n\n    super.cleanUpRanking(ranking);\n  }\n\n  sort(ranking: Ranking, dirtyReason: EDirtyReason[]): Promise<{groups: IOrderedGroup[], index2pos: UIntTypedArray}> {\n    if (this.sortAborter.has(ranking.id)) {\n      this.sortAborter.get(ranking.id)!.abort();\n    }\n    const reasons = new Set(dirtyReason);\n\n    const filter = ranking.flatColumns.filter((d) => d.isFiltered()).map((d) => d.dump(this.toDescRef));\n\n    const needsFiltering = reasons.has(EDirtyReason.UNKNOWN) || reasons.has(EDirtyReason.FILTER_CHANGED);\n    const needsGrouping = needsFiltering || reasons.has(EDirtyReason.GROUP_CRITERIA_CHANGED) || reasons.has(EDirtyReason.GROUP_CRITERIA_DIRTY);\n\n    if (needsFiltering) {\n      this.tasks.dirtyRanking(ranking, 'summary');\n    } else if (needsGrouping) {\n      this.tasks.dirtyRanking(ranking, 'group');\n    }\n    // otherwise the summary and group summaries should still be valid\n\n    if (filter.length === 0) {\n      // all rows so summary = data\n      this.tasks.copyData2Summary(ranking);\n    }\n\n    const signal = new CustomAbortSignal();\n    this.sortAborter.set(ranking.id, signal);\n\n    return this.server.sort(toRankingDump(ranking, this.toDescRef), {signal}).then(({groups, maxDataIndex}) => {\n      const r = index2pos(groups, maxDataIndex);\n\n      // clean again since in the mean time old stuff could have been computed\n      if (needsFiltering && filter.length > 0) {\n        this.tasks.dirtyRanking(ranking, 'summary');\n      } else if (needsGrouping) {\n        this.tasks.dirtyRanking(ranking, 'group');\n      }\n\n      this.tasks.preCompute(ranking, groups);\n      this.currentSort.set(ranking.id, r);\n      return r;\n    }).catch((error) => {\n      if (signal.aborted) {\n        // ok was aborted, so not a real error but the abort error\n        console.log('error during sorting cause has been aborted', error);\n      } else {\n        console.error('error during sorting', error);\n      }\n      // return the current sorting of the ranking\n      if (this.currentSort.has(ranking.id)) {\n        return this.currentSort.get(ranking.id)!;\n      }\n      // return a dummy\n      return {\n        groups: <IOrderedGroup[]>[],\n        index2pos: new Uint8Array(0)\n      };\n    });\n  }\n\n  view(indices: IndicesArray): Promise<any[]> {\n    return this.viewRows(indices).then((rows: (IDataRow | null)[]) => rows.map((row) => row ? row.v : {}));\n  }\n\n  viewRows(indices: IndicesArray): Promise<IDataRow[]> {\n    if (indices.length === 0) {\n      return Promise.resolve([]);\n    }\n    const missing: number[] = [];\n    let missingResolve: (value: IDataRow[]) => void;\n    let missingReject: (reason?: any) => void;\n    const missingLoader = new Promise<IDataRow[]>((resolve, reject) => {\n      missingResolve = resolve;\n      missingReject = reject;\n    });\n    const rows = mapIndices(indices, (i) => {\n      const c = this.cache.get(i);\n      if (c) {\n        return c;\n      }\n      const missingIndex = missing.length;\n      missing.push(i);\n      const loader = missingLoader.then((loaded) => loaded[missingIndex]);\n      this.cache.set(i, loader);\n      return loader;\n    });\n    if (missing.length === 0) {\n      return Promise.all(rows);\n    }\n    const loaded = this.load(missing);\n    loaded.then((r) => missingResolve(r));\n    loaded.catch((r) => missingReject(r));\n\n    return Promise.all(rows);\n  }\n\n  private load(indices: number[]) {\n    if (indices.length === 0) {\n      return Promise.resolve<IDataRow[]>([]);\n    }\n    // load data and map to rows;\n    return this.server.view(indices, {}).then((rows) => {\n      //enhance with the data index\n      return rows.map((v, i) => {\n        const dataIndex = indices[i];\n        const r = {v, i: dataIndex};\n        this.cache.set(dataIndex, r);\n        return r;\n      });\n    }).catch((error) => {\n      console.error('error while fetching rows, creating not cached dummy rows', error);\n      return indices.map((i) => {\n        this.cache.delete(i); // delete loader cache entry\n        return ({v: {}, i});\n      });\n    });\n  }\n\n  getRow(index: number) {\n    if (this.cache.has(index)) {\n      return this.cache.get(index)!;\n    }\n    return this.viewRows(this.guessRowsToLoad(index)).then((r) => r[0]);\n  }\n\n  private guessRowsToLoad(index: number) {\n    const indices = new Set<number>([index]);\n    for (const ranking of this.getRankings()) {\n      const rank = ranking.getRank(index) - 1;\n      if (rank < 0) {\n        continue;\n      }\n      const order = ranking.getOrder();\n      const startRank = Math.max(0, rank - this.ooptions.loadNeighbors);\n      const endRank = Math.min(order.length - 1, rank + this.ooptions.loadNeighbors);\n\n      for (let i = startRank; i <= endRank; ++i) {\n        indices.add(order[i]);\n      }\n    }\n\n    // enforce the first is the one to load\n    indices.delete(index);\n    const toLoad = Array.from(indices);\n    toLoad.unshift(index);\n    return toLoad;\n  }\n\n\n  mappingSample(col: INumberColumn): Promise<number[]> {\n    const MAX_SAMPLE = 120; //at most 120 sample lines\n    return this.server.mappingSample(col.dump(this.toDescRef), {})\n      .catch((error) => {\n        console.error('error during mapping sample, returning sample of cached indices', error);\n        const indices = Array.from(this.cache.keys());\n        if (indices.length > MAX_SAMPLE) {\n          return indices.slice(0, MAX_SAMPLE);\n        }\n        return indices;\n      });\n  }\n\n  searchAndJump(search: string | RegExp, col: Column) {\n    this.server.search(search, col.dump(this.toDescRef), {}).then((indices) => {\n      this.jumpToNearest(indices);\n    }).catch((error) => {\n      console.error('error during server side search', error);\n      // nothing to do\n    });\n  }\n}\n\n","import {IArrayDesc, IColumnDesc} from '../../model';\n\nexport default class ColumnBuilder<T extends IColumnDesc = IColumnDesc> {\n  protected readonly desc: T;\n\n  constructor(type: string, column: string) {\n    this.desc = <any>{column, type, label: column ? column[0].toUpperCase() + column.slice(1): type};\n  }\n\n  /**\n   * column label\n   */\n  label(label: string) {\n    this.desc.label = label;\n    return this;\n  }\n\n  /**\n   * column description\n   */\n  description(description: string) {\n    this.desc.description = description;\n    return this;\n  }\n\n  /**\n   * sets the frozen state of this column, i.e is sticky to the left side when scrolling horizontally\n   */\n  frozen() {\n    this.desc.frozen = true;\n    return this;\n  }\n\n  /**\n   * specify the renderer to used for this column\n   * @param {string} renderer within a cell\n   * @param {string} groupRenderer within an aggregated cell\n   * @param {string} summaryRenderer within the summary in the header and side panel\n   */\n  renderer(renderer?: string, groupRenderer?: string, summaryRenderer?: string) {\n    if (renderer) {\n      this.desc.renderer = renderer;\n    }\n    if (groupRenderer) {\n      this.desc.groupRenderer = groupRenderer;\n    }\n    if (summaryRenderer) {\n      this.desc.summaryRenderer = summaryRenderer;\n    }\n    return this;\n  }\n\n  /**\n   * specify a custom additional attribute for the description\n   * @param {string} key the property key\n   * @param value its value\n   */\n  custom(key: string, value: any) {\n    (<any>this.desc)[key] = value;\n    return this;\n  }\n\n  /**\n   * sets the default width of the column\n   */\n  width(width: number) {\n    this.desc.width = width;\n    return this;\n  }\n\n  /**\n   * sets the column color in case of numerical columns\n   * @deprecated use colorMapping in the number case instead\n   */\n  color(_color: string) {\n    return this;\n  }\n\n  /**\n   * converts the column type to be an array type, supports only base types: boolean, categorical, date, number, and string\n   * @param {string[] | number} labels labels to use for each array item or the expected length of an value\n   */\n  asArray(labels?: string[] | number) {\n    console.assert(['boolean', 'categorical', 'date', 'number', 'string', 'link'].includes(this.desc.type!));\n    this.desc.type += 's';\n    const a = <IArrayDesc>this.desc;\n    if (Array.isArray(labels)) {\n      a.labels = labels;\n      a.dataLength = labels.length;\n    } else if (typeof labels === 'number') {\n      a.dataLength = labels;\n    }\n    return this;\n  }\n\n  /**\n   * converts the column type to be a map type, supports only base types: categorical, date, number, and string\n   */\n  asMap() {\n    console.assert(['categorical', 'date', 'number', 'string', 'link'].includes(this.desc.type!));\n    this.desc.type += 'Map';\n    return this;\n  }\n\n  /**\n   * build the column description\n   */\n  build(_data: any[]): T {\n    return <any>this.desc;\n  }\n}\n\n/**\n * build a column of a given type\n * @param {string} type column type\n * @param {string} column column which contains the associated data\n * @returns {ColumnBuilder<IColumnDesc>}\n */\nexport function buildColumn(type: string, column: string) {\n  return new ColumnBuilder(type, column);\n}\n","import {IDynamicHeight, ITaggleOptions} from '../config';\nimport Column, {IGroupData, IGroupItem, Ranking} from '../model';\nimport {ICellRendererFactory, ERenderMode} from '../renderer';\nimport {IToolbarAction, IToolbarDialogAddon} from '../ui';\n\n/**\n * builder for LineUp/Taggle instance\n */\nexport default class LineUpBuilder {\n  protected readonly options: Partial<ITaggleOptions> = {\n    renderers: {},\n    toolbar: {},\n    flags: {}\n  };\n\n  /**\n   * option to enable/disable animated transitions\n   * @default true\n   */\n  animated(enable: boolean) {\n    this.options.animated = enable;\n    return this;\n  }\n\n  /**\n   * option to rotate labels on demand in narrow columns\n   * @param rotation rotation in degrees\n   * @default 0 - disabled\n   */\n  labelRotation(rotation: number) {\n    this.options.labelRotation = rotation;\n    return this;\n  }\n\n  /**\n   * option to enable/disable the side panel\n   * @param {boolean} enable enable flag\n   * @param {boolean} collapsed whether collapsed by default\n   */\n  sidePanel(enable: boolean, collapsed: boolean = false) {\n    this.options.sidePanel = enable;\n    this.options.sidePanelCollapsed = collapsed;\n    return this;\n  }\n\n  /**\n   * show the sorting and grouping hierarchy indicator in the side panel\n   * @param {boolean} enable enable flag\n   */\n  hierarchyIndicator(enable: boolean) {\n    this.options.hierarchyIndicator = enable;\n    return this;\n  }\n\n  /**\n   * option to specify the default slope graph mode\n   * @default 'item'\n   */\n  defaultSlopeGraphMode(mode: 'item' | 'band') {\n    this.options.defaultSlopeGraphMode = mode;\n    return this;\n  }\n\n  /**\n   * option to enable/disable showing a summary (histogram, ...) in the header\n   * @default true\n   */\n  summaryHeader(enable: boolean) {\n    this.options.summaryHeader = enable;\n    return this;\n  }\n\n  /**\n   * option to enforce that the whole row is shown upon hover without overflow hidden\n   * @default false\n   */\n  expandLineOnHover(enable: boolean) {\n    this.options.expandLineOnHover = enable;\n    return this;\n  }\n\n  /**\n   * option to enable overview mode by default, just valid when building a Taggle instance\n   * @returns {this}\n   */\n  overviewMode() {\n    this.options.overviewMode = true;\n    return this;\n  }\n\n  /**\n   * option to ignore unsupported browser check - at own risk\n   * @returns {this}\n   */\n  ignoreUnsupportedBrowser() {\n    this.options.ignoreUnsupportedBrowser = true;\n    return this;\n  }\n\n  /**\n   * register a new renderer factory function\n   * @param id the rederer id\n   * @param factory factory class implementing the renderer\n   */\n  registerRenderer(id: string, factory: ICellRendererFactory) {\n    this.options.renderers![id] = factory;\n    return this;\n  }\n\n  /**\n   * custom function whether the given renderer should be allowed to render the give colum in the given mode\n   */\n  canRender(canRender: (type: string, renderer: ICellRendererFactory, col: Column, mode: ERenderMode) => boolean) {\n    this.options.canRender = canRender;\n    return this;\n  }\n\n  /**\n   * register another toolbar action which can be used within a model class\n   * @param id toolbar id\n   * @param action\n   */\n  registerToolbarAction(id: string, action: IToolbarAction) {\n    this.options.toolbar![id] = action;\n    return this;\n  }\n\n  /**\n   * register another toolbar action which can be sued within a model class\n   * @param id  dialog id\n   * @param addon addon description\n   */\n  registerToolbarDialogAddon(id: string, addon: IToolbarDialogAddon) {\n    this.options.toolbar![id] = addon;\n    return this;\n  }\n\n  /**\n   * height and padding of a row\n   * @default 18 and 2\n   */\n  rowHeight(rowHeight: number, rowPadding: number = 2) {\n    this.options.rowHeight = rowHeight;\n    this.options.rowPadding = rowPadding;\n    return this;\n  }\n\n  /**\n   * height and padding of an aggregated group in pixel\n   * @default 40 and 5\n   */\n  groupRowHeight(groupHeight: number, groupPadding: number = 5) {\n    this.options.groupHeight = groupHeight;\n    this.options.groupPadding = groupPadding;\n    return this;\n  }\n\n  /**\n   * custom function to compute the height of a row (group or item)\n   * @param {(data: (IGroupItem | IGroupData)[], ranking: Ranking) => (IDynamicHeight | null)} callback\n   */\n  dynamicHeight(callback: (data: (IGroupItem | IGroupData)[], ranking: Ranking) => (IDynamicHeight | null)) {\n    this.options.dynamicHeight = callback;\n    return this;\n  }\n\n  /**\n   * disables advanced ranking features (sort by, group by, sorting hierarchy, ...)\n   */\n  disableAdvancedRankingFeatures() {\n    this.options.flags!.advancedRankingFeatures = false;\n    return this;\n  }\n\n  /**\n   * disables advanced model features (add combine column, data mapping, edit pattern, ...)\n   */\n  disableAdvancedModelFeatures() {\n    this.options.flags!.advancedModelFeatures = false;\n    return this;\n  }\n\n  /**\n   * disables advanced ui features (change visualization, color mapping)\n   */\n  disableAdvancedUIFeatures() {\n    this.options.flags!.advancedUIFeatures = false;\n    return this;\n  }\n}\n","import {\n  Column, CompositeColumn, Ranking, ReduceColumn, StackColumn,\n  createAggregateDesc, createGroupDesc, createImpositionBoxPlotDesc, createImpositionDesc, createImpositionsDesc,\n  createNestedDesc, createRankDesc, createReduceDesc, createScriptDesc, createSelectionDesc, createStackDesc,\n  EAdvancedSortMethod, IColumnDesc, ISortCriteria\n} from '../model';\nimport {DataProvider} from '../provider';\n\nexport interface IImposeColumnBuilder {\n  type: 'impose';\n  column: string;\n  label?: string;\n  colorColumn: string;\n}\n\nexport interface INestedBuilder {\n  type: 'nested';\n  label?: string;\n  columns: string[];\n}\n\nexport interface IWeightedSumBuilder {\n  type: 'weightedSum';\n  columns: string[];\n  label?: string;\n  weights: number[];\n}\n\nexport interface IReduceBuilder {\n  type: 'min' | 'max' | 'mean' | 'median';\n  columns: string[];\n  label?: string;\n}\n\nexport interface IScriptedBuilder {\n  type: 'script';\n  code: string;\n  columns: string[];\n  label?: string;\n}\n\n/**\n * builder for a ranking\n */\nexport default class RankingBuilder {\n  private static readonly ALL_MAGIC_FLAG = '*';\n\n  private readonly columns: (string | {desc: IColumnDesc | ((data: DataProvider) => IColumnDesc), columns: string[], post?: (col: Column) => void })[] = [];\n  private readonly sort: {column: string, asc: boolean}[] = [];\n  private readonly groupSort: {column: string, asc: boolean}[] = [];\n  private readonly groups: string[] = [];\n\n  /**\n   * specify another sorting criteria\n   * @param {string} column the column name optionally with encoded sorting separated by colon, e.g. a:desc\n   * @param {boolean | \"asc\" | \"desc\"} asc ascending or descending order\n   */\n  sortBy(column: string, asc: boolean | 'asc' | 'desc' = true) {\n    if (column.includes(':')) {\n      // encoded sorting order\n      const index = column.indexOf(':');\n      asc = <'asc' | 'desc'>column.slice(index + 1);\n      column = column.slice(0, index);\n    }\n    this.sort.push({column, asc: asc === true || String(asc)[0] === 'a'});\n    return this;\n  }\n\n  /**\n   * specify grouping criteria\n   * @returns {this}\n   */\n  groupBy(...columns: (string | string[])[]) {\n    for (const col of columns) {\n      if (Array.isArray(col)) {\n        this.groups.push(...col);\n      } else {\n        this.groups.push(col);\n      }\n    }\n    return this;\n  }\n\n  /**\n   * specify another grouping sorting criteria\n   * @param {string} column the column name optionally with encoded sorting separated by colon, e.g. a:desc\n   * @param {boolean | \"asc\" | \"desc\"} asc ascending or descending order\n   */\n  groupSortBy(column: string, asc: boolean | 'asc' | 'desc' = true) {\n    if (column.includes(':')) {\n      // encoded sorting order\n      const index = column.indexOf(':');\n      asc = <'asc' | 'desc'>column.slice(index + 1);\n      column = column.slice(0, index);\n    }\n    this.groupSort.push({column, asc: asc === true || String(asc)[0] === 'a'});\n    return this;\n  }\n\n  /**\n   * add another column to this ranking, identified by column name or label. magic names are used for special columns:\n   * <ul>\n   *     <li>'*' = all columns</li>\n   *     <li>'_*' = all support columns</li>\n   *     <li>'_aggregate' = aggregate column</li>\n   *     <li>'_selection' = selection column</li>\n   *     <li>'_group' = group column</li>\n   *     <li>'_rank' = rank column</li>\n   * </ul>\n   * In addition build objects for combined columns are supported.\n   * @param {string | IImposeColumnBuilder | INestedBuilder | IWeightedSumBuilder | IReduceBuilder | IScriptedBuilder} column\n   */\n  column(column: string | IImposeColumnBuilder | INestedBuilder | IWeightedSumBuilder | IReduceBuilder | IScriptedBuilder) {\n    if (typeof column === 'string') {\n      switch (column) {\n        case '_aggregate':\n          return this.aggregate();\n        case '_selection':\n          return this.selection();\n        case '_group':\n          return this.group();\n        case '_rank':\n          return this.rank();\n        case '_*':\n          return this.supportTypes();\n        case '*':\n          return this.allColumns();\n      }\n      this.columns.push(column);\n      return this;\n    }\n    const label = column.label || null;\n    // builder ish\n    switch (column.type) {\n      case 'impose':\n        return this.impose(label, column.column, column.colorColumn);\n      case 'min':\n      case 'max':\n      case 'median':\n      case 'mean':\n        console.assert(column.columns.length >= 2);\n        return this.reduce(label, <any>column.type, column.columns[0], column.columns[1], ...column.columns.slice(2));\n      case 'nested':\n        console.assert(column.columns.length >= 1);\n        return this.nested(label, column.columns[0], ... column.columns.slice(1));\n      case 'script':\n        return this.scripted(label, column.code, ...column.columns);\n      case 'weightedSum':\n        console.assert(column.columns.length >= 2);\n        console.assert(column.columns.length === column.weights.length);\n        const mixed: (string | number)[] = [];\n        column.columns.slice(2).forEach((c, i) => {\n          mixed.push(c);\n          mixed.push(column.weights[i + 2]);\n        });\n        return this.weightedSum(label, column.columns[0], column.weights[0], column.columns[1], column.weights[1], ...mixed);\n    }\n    console.error('invalid column type: ', column);\n    return this;\n  }\n\n  /**\n   * add an imposed column (numerical column colored by categorical column) to this ranking\n   * @param {string | null} label optional label\n   * @param {string} numberColumn numerical column reference\n   * @param {string} colorColumn categorical column reference\n   */\n  impose(label: string | null, numberColumn: string, colorColumn: string) {\n    this.columns.push({\n      desc: (data) => {\n        const base = data.getColumns().find((d) => d.label === numberColumn || (<any>d).column === numberColumn);\n        switch (base ? base.type : '') {\n          case 'boxplot':\n            return createImpositionBoxPlotDesc(label ? label : undefined);\n          case 'numbers':\n            return createImpositionsDesc(label ? label : undefined);\n          default:\n            return createImpositionDesc(label ? label : undefined);\n        }\n      },\n      columns: [numberColumn, colorColumn]\n    });\n    return this;\n  }\n\n  /**\n   * add a nested / group composite column\n   * @param {string | null} label optional label\n   * @param {string} column first element of the group enforcing not empty ones\n   * @param {string} columns additional columns\n   */\n  nested(label: string | null, column: string, ...columns: string[]) {\n    this.columns.push({\n      desc: createNestedDesc(label ? label : undefined),\n      columns: [column].concat(columns)\n    });\n    return this;\n  }\n\n  /**\n   * @param {IColumnDesc} desc the composite column description\n   * @param {string} columns additional columns to add as children\n   */\n  composite(desc: IColumnDesc, ...columns: string[]) {\n    this.columns.push({\n      desc,\n      columns\n    });\n    return this;\n  }\n\n  /**\n   * add a weighted sum / stack column\n   * @param {string | null} label optional label\n   * @param {string} numberColumn1 the first numerical column\n   * @param {number} weight1 its weight (0..1)\n   * @param {string} numberColumn2 the second numerical column\n   * @param {number} weight2 its weight (0..1)\n   * @param {string | number} numberColumnAndWeights alternating column weight references\n   */\n  weightedSum(label: string | null, numberColumn1: string, weight1: number, numberColumn2: string, weight2: number, ...numberColumnAndWeights: (string | number)[]) {\n    const weights = [weight1, weight2].concat(<number[]>numberColumnAndWeights.filter((_, i) => i % 2 === 1));\n    this.columns.push({\n      desc: createStackDesc(label ? label : undefined),\n      columns: [numberColumn1, numberColumn2].concat(<string[]>numberColumnAndWeights.filter((_, i) => i % 2 === 0)),\n      post: (col) => {\n        (<StackColumn>col).setWeights(weights);\n      }\n    });\n    return this;\n  }\n\n  /**\n   * add reducing column (min, max, median, mean, ...)\n   * @param {string | null} label optional label\n   * @param {EAdvancedSortMethod} operation operation to apply (min, max, median, mean, ...)\n   * @param {string} numberColumn1 first numerical column\n   * @param {string} numberColumn2 second numerical column\n   * @param {string} numberColumns additional numerical columns\n   */\n  reduce(label: string | null, operation: EAdvancedSortMethod, numberColumn1: string, numberColumn2: string, ...numberColumns: string[]) {\n    this.columns.push({\n      desc: createReduceDesc(label ? label : undefined),\n      columns: [numberColumn1, numberColumn2].concat(numberColumns),\n      post: (col) => {\n        (<ReduceColumn>col).setReduce(operation);\n      }\n    });\n    return this;\n  }\n\n  /**\n   * add a scripted / formula column\n   * @param {string | null} label optional label\n   * @param {string} code the JS code see ScriptColumn for details\n   * @param {string} numberColumns additional script columns\n   */\n  scripted(label: string | null, code: string, ...numberColumns: string[]) {\n    this.columns.push({\n      desc: Object.assign(createScriptDesc(label ? label : undefined), {script: code}),\n      columns: numberColumns\n    });\n    return this;\n  }\n\n  /**\n   * add a selection column for easier multi selections\n   */\n  selection() {\n    this.columns.push({\n      desc: createSelectionDesc(),\n      columns: []\n    });\n    return this;\n  }\n\n  /**\n   * add a group column to show the current group name\n   */\n  group() {\n    this.columns.push({\n      desc: createGroupDesc(),\n      columns: []\n    });\n    return this;\n  }\n\n  /**\n   * add an aggregate column to this ranking to collapse/expand groups\n   */\n  aggregate() {\n    this.columns.push({\n      desc: createAggregateDesc(),\n      columns: []\n    });\n    return this;\n  }\n\n  /**\n   * add a ranking column\n   */\n  rank() {\n    this.columns.push({\n      desc: createRankDesc(),\n      columns: []\n    });\n    return this;\n  }\n\n  /**\n   * add suporttypes (aggregate, rank, selection) to the ranking\n   */\n  supportTypes() {\n    return this.aggregate().rank().selection();\n  }\n\n  /**\n   * add all columns to this ranking\n   */\n  allColumns() {\n    this.columns.push(RankingBuilder.ALL_MAGIC_FLAG);\n    return this;\n  }\n\n  build(data: DataProvider): Ranking {\n    const r = data.pushRanking();\n    const cols = data.getColumns();\n\n    const findDesc = (c: string) => cols.find((d) => d.label === c || (<any>d).column === c);\n\n    const addColumn = (c: string) => {\n      const desc = findDesc(c);\n      if (desc) {\n        return data.push(r, desc) != null;\n      }\n      console.warn('invalid column: ', c);\n      return false;\n    };\n\n    this.columns.forEach((c) => {\n      if (c === RankingBuilder.ALL_MAGIC_FLAG) {\n        cols.forEach((col) => data.push(r, col));\n        return;\n      }\n      if (typeof c === 'string') {\n        addColumn(c);\n        return;\n      }\n      const col = data.create(typeof c.desc === 'function' ? c.desc(data) : c.desc)!;\n      r.push(col);\n      c.columns.forEach((ci) => {\n        const d = findDesc(ci);\n        const child = d ? data.create(d) : null;\n        if (!child) {\n          console.warn('invalid column: ', ci);\n          return;\n        }\n        (<CompositeColumn>col).push(child);\n      });\n      if (c.post) {\n        c.post(col);\n      }\n    });\n\n    const children = r.children;\n    {\n      const groups: Column[] = [];\n      this.groups.forEach((column) => {\n        const col = children.find((d) => d.desc.label === column || (<any>d).desc.column === column);\n        if (col) {\n          groups.push(col);\n          return;\n        }\n        const desc = findDesc(column);\n        if (!desc) {\n          console.warn('invalid group criteria column: ', column);\n          return;\n        }\n        const col2 = data.push(r, desc);\n        if (col2) {\n          groups.push(col2);\n          return;\n        }\n        console.warn('invalid group criteria column: ', column);\n      });\n      if (groups.length > 0) {\n        r.setGroupCriteria(groups);\n      }\n    }\n    {\n      const sorts: ISortCriteria[] = [];\n      this.sort.forEach(({column, asc}) => {\n        const col = children.find((d) => d.desc.label === column || (<any>d).desc.column === column);\n        if (col) {\n          sorts.push({col, asc});\n          return;\n        }\n        const desc = findDesc(column);\n        if (!desc) {\n          console.warn('invalid sort criteria column: ', column);\n          return;\n        }\n        const col2 = data.push(r, desc);\n        if (col2) {\n          sorts.push({col: col2, asc});\n          return;\n        }\n        console.warn('invalid sort criteria column: ', column);\n      });\n      if (sorts.length > 0) {\n        r.setSortCriteria(sorts);\n      }\n    }\n    {\n      const sorts: ISortCriteria[] = [];\n      this.groupSort.forEach(({column, asc}) => {\n        const col = children.find((d) => d.desc.label === column || (<any>d).desc.column === column);\n        if (col) {\n          sorts.push({col, asc});\n          return;\n        }\n        const desc = findDesc(column);\n        if (!desc) {\n          console.warn('invalid group sort criteria column: ', column);\n          return;\n        }\n        const col2 = data.push(r, desc);\n        if (col2) {\n          sorts.push({col: col2, asc});\n          return;\n        }\n        console.warn('invalid group sort criteria column: ', column);\n      });\n      if (sorts.length > 0) {\n        r.setGroupSortCriteria(sorts);\n      }\n    }\n    return r;\n  }\n}\n\n/**\n * creates a new instance of a ranking builder\n * @returns {RankingBuilder}\n */\nexport function buildRanking() {\n  return new RankingBuilder();\n}\n","import {ICategoricalColumnDesc, ICategory} from '../../model';\nimport ColumnBuilder from './ColumnBuilder';\nimport {cleanCategories} from '../../provider/utils';\n\nexport default class CategoricalColumnBuilder extends ColumnBuilder<ICategoricalColumnDesc> {\n\n  constructor(column: string) {\n    super('categorical', column);\n  }\n\n  /**\n   * converts this type to an ordinal column type, such that categories are mapped to numbers\n   */\n  asOrdinal() {\n    this.desc.type = 'ordinal';\n    return this;\n  }\n\n  /**\n   * specify the categories of this categorical column\n   * @param {(string | Partial<ICategory>)[]} categories\n   */\n  categories(categories: (string | Partial<ICategory>)[]) {\n    this.desc.categories = categories;\n    return this;\n  }\n\n  /**\n   * converts this type to a set column, i.e. multiple unique category in a value\n   * @param {string} separator optional separator separating a string value\n   */\n  asSet(separator?: string) {\n    if (separator) {\n      (<any>this.desc).separator = separator;\n    }\n    this.desc.type = 'set';\n    return this;\n  }\n\n  private derive(data: any[]) {\n    // derive categories\n    const categories = new Set<string>();\n    const isSet = this.desc.type === 'set';\n    const separator = (<any>this.desc).separator || ';';\n    const val = (vi: any) => {\n      if (typeof vi === 'string' && vi !== '') {\n        return vi;\n      }\n      if (vi != null && typeof vi.value === 'string' && vi.value !== '') {\n        return vi.value;\n      }\n      return null;\n    };\n    data.forEach((d) => {\n      const v = d[(<any>this.desc).column];\n      if (Array.isArray(v)) {\n        v.forEach((vi) => categories.add(val(vi)));\n      } else if (v != null && v !== '') {\n        const vs: string[] = isSet ? [v.toString()] : v.toString().split(separator);\n        vs.forEach((vi) => categories.add(val(vi)));\n      }\n    });\n    this.categories(cleanCategories(categories));\n  }\n\n  build(data: any[]): ICategoricalColumnDesc {\n    if (!this.desc.categories) {\n      this.derive(data);\n    }\n    return super.build(data);\n  }\n}\n\n/**\n * build a categorical column type\n * @param {string} column column which contains the associated data\n * @param {(string | Partial<ICategory>)[]} categories optional category definition\n * @returns {CategoricalColumnBuilder}\n */\nexport function buildCategoricalColumn(column: string, categories?: (string | Partial<ICategory>)[]) {\n  const r = new CategoricalColumnBuilder(column);\n  if (categories) {\n    r.categories(categories);\n  }\n  return r;\n}\n","import {min, max} from '../../internal';\nimport {EAdvancedSortMethod, ESortMethod, INumberColumnDesc, ITypedDump} from '../../model';\nimport ColumnBuilder from './ColumnBuilder';\nimport {IScriptMappingFunctionType} from '../../model/MappingFunction';\n\nexport default class NumberColumnBuilder extends ColumnBuilder<INumberColumnDesc> {\n\n  constructor(column: string) {\n    super('number', column);\n  }\n\n  /**\n   * defines the mapping for this number column to normalize the data\n   * @param {\"linear\" | \"sqrt\" | \"pow1.1\" | \"pow2\" | \"pow3\"} type mapping type\n   * @param {[number , number]} domain input data domain [min, max]\n   * @param {[number , number]} range optional output domain [0, 1]\n   */\n  mapping(type: 'linear' | 'sqrt' | 'pow1.1' | 'pow2' | 'pow3', domain: [number, number], range?: [number, number]) {\n    if (type === 'linear') {\n      this.desc.domain = domain;\n      if (range) {\n        this.desc.range = range;\n      }\n      return;\n    }\n    this.desc.map = {\n      type, domain, range: range || [0, 1]\n    };\n    return this;\n  }\n\n  /**\n   * sets the column color in case of numerical columns\n   * @deprecated use colorMapping instead\n   */\n  color(color: string) {\n    return this.colorMapping(color);\n  }\n\n  colorMapping(type: string | ((v: number)=>string) | ITypedDump) {\n    this.desc.colorMapping = type;\n    return this;\n  }\n\n  /**\n   * d3-format to use for formatting\n   * @param format d3-format\n   */\n  numberFormat(format: string) {\n    this.desc.numberFormat = format;\n    return this;\n  }\n\n  /**\n   * defines a script to normalize the data, see ScriptedMappingFunction for details\n   * @param {string} code the code to execute\n   * @param {[number , number]} domain the input data domain [min, max]\n   */\n  scripted(code: string | IScriptMappingFunctionType, domain: [number, number]) {\n    this.desc.map = {domain, code, type: 'script'};\n    return this;\n  }\n\n\n  /**\n   * @inheritDoc\n   * @param {string[] | number} labels labels to use for each array item or the expected length of an value\n   * @param {EAdvancedSortMethod} sort sorting criteria when sorting by this column\n   */\n  asArray(labels?: string[] | number, sort?: EAdvancedSortMethod) {\n    if (sort) {\n      (<any>this.desc).sort = sort;\n    }\n    return super.asArray(labels);\n  }\n\n  /**\n   * @inheritDoc\n   * @param {EAdvancedSortMethod} sort sorting criteria when sorting by this column\n   */\n  asMap(sort?: EAdvancedSortMethod) {\n    if (sort) {\n      (<any>this.desc).sort = sort;\n    }\n    return super.asMap();\n  }\n\n  /**\n   * converts type to a boxplot column type\n   * @param {ESortMethod} sort sorting criteria when sorting by this column\n   */\n  asBoxPlot(sort?: ESortMethod) {\n    if (sort) {\n      (<any>this.desc).sort = sort;\n    }\n    this.desc.type = 'boxplot';\n    return this;\n  }\n\n  private derive(data: any[]) {\n    const col = (<any>this.desc).column;\n\n    const asArray = (v: any, extra: string) => {\n      const vs: number[] = [];\n      (Array.isArray(v) ? v : [v]).forEach((vi) => {\n        if (typeof vi === 'number' && !isNaN(vi)) {\n          vs.push(vi);\n        }\n        if (vi != null && typeof vi.value === 'number' && !isNaN(vi.value)) {\n          vs.push(vi.value);\n        }\n        if (vi != null && typeof vi[extra] === 'number' && !isNaN(vi[extra])) {\n          vs.push(vi[extra]);\n        }\n      });\n      return vs;\n    };\n\n    const minv = min(data, (d) => {\n      const v = d[col];\n      const vs: number[] = asArray(v, 'min');\n      return vs.length === 0 ? Infinity : min(vs);\n    });\n    const maxv = max(data, (d) => {\n      const v = d[col];\n      const vs: number[] = asArray(v, 'max');\n      return vs.length === 0 ? -Infinity : max(vs);\n    });\n    return <[number, number]>[minv, maxv];\n  }\n\n\n  build(data: any[]): INumberColumnDesc {\n    if (!this.desc.map && !this.desc.domain) {\n      // derive domain\n      this.mapping('linear', this.derive(data));\n    } else {\n      const d = this.desc.domain || this.desc.map!.domain;\n      if (isNaN(d[0]) || isNaN(d[1])) {\n        const ext = this.derive(data);\n        if (isNaN(d[0])) {\n          d[0] = ext[0];\n        }\n        if (isNaN(d[1])) {\n          d[1] = ext[1];\n        }\n      }\n    }\n    return super.build(data);\n  }\n}\n\n/**\n * builds numerical column builder\n * @param {string} column column which contains the associated data\n * @param {[number , number]} domain domain (min, max) of this column\n * @returns {NumberColumnBuilder}\n */\nexport function buildNumberColumn(column: string, domain?: [number, number]) {\n  const r = new NumberColumnBuilder(column);\n  if (domain) {\n    r.mapping('linear', domain);\n  }\n  return r;\n}\n","import {EAlignment, ILinkColumnDesc} from '../../model';\nimport ColumnBuilder from './ColumnBuilder';\n\nexport default class StringColumnBuilder extends ColumnBuilder<ILinkColumnDesc> {\n\n  constructor(column: string) {\n    super('string', column);\n  }\n\n  /**\n   * makes the text editable within a cell and switches to the annotate type\n   */\n  editable() {\n    this.desc.type = 'annotate';\n    return this;\n  }\n\n  /**\n   * changes the alignment of the column\n   */\n  alignment(align: EAlignment) {\n    this.desc.alignment = align;\n    return this;\n  }\n\n  /**\n   * allow html text as values\n   */\n  html() {\n    this.desc.escape = false;\n    return this;\n  }\n\n  /**\n   * provide a pattern with which the value will be wrapped, use <code>${value}</code> for the current and and <code>${item}</code> for the whole item\n   * @param {string} pattern pattern to apply\n   * @param {string[]} templates optional templates for patterns to provide in the edit pattern dialog\n   */\n  pattern(pattern: string, templates?: string[]) {\n    this.desc.type = 'link';\n    this.desc.pattern = pattern;\n    if (templates) {\n      this.desc.patternTemplates = templates;\n    }\n    return this;\n  }\n}\n\n/**\n * builds a string column builder\n * @param {string} column column which contains the associated data\n * @returns {StringColumnBuilder}\n */\nexport function buildStringColumn(column: string) {\n  return new StringColumnBuilder(column);\n}\n","import {IDateColumnDesc} from '../../model';\nimport ColumnBuilder from './ColumnBuilder';\n\nexport default class DateColumnBuilder extends ColumnBuilder<IDateColumnDesc> {\n\n  constructor(column: string) {\n    super('date', column);\n  }\n\n  /**\n   * specify the format and parsing d3-time pattern to convert Date to strings and vise versa\n   * @param {string} format d3-time-format pattern\n   * @param {string} parse optional different parsing pattern\n   */\n  format(format: string, parse?: string) {\n    this.desc.dateFormat = format;\n    if (parse) {\n      this.desc.dateParse = parse;\n    }\n    return this;\n  }\n\n}\n\n/**\n * builds a date column builder\n * @param {string} column column which contains the associated data\n * @returns {DateColumnBuilder}\n */\nexport function buildDateColumn(column: string) {\n  return new DateColumnBuilder(column);\n}\n","import {IHierarchyColumnDesc, IPartialCategoryNode} from '../../model';\nimport ColumnBuilder from './ColumnBuilder';\n\nexport default class HierarchyColumnBuilder extends ColumnBuilder<IHierarchyColumnDesc> {\n\n  constructor(column: string) {\n    super('hierarchy', column);\n  }\n\n  /**\n   * specify the underlying hierarchy of this column\n   * @param {IPartialCategoryNode} hierarchy\n   * @param {string} hierarchySeparator specify the character to separate levels (default dot)\n   */\n  hierarchy(hierarchy: IPartialCategoryNode, hierarchySeparator?: string) {\n    this.desc.hierarchy = hierarchy;\n    if (hierarchySeparator) {\n      this.desc.hierarchySeparator = hierarchySeparator;\n    }\n    return this;\n  }\n\n  build(data: any[]): IHierarchyColumnDesc {\n    console.assert(Boolean(this.desc.hierarchy));\n    return super.build(data);\n  }\n}\n\n/**\n * build a hierarchical column builder\n * @param {string} column column which contains the associated data\n * @param {IPartialCategoryNode} hierarchy\n * @returns {HierarchyColumnBuilder}\n */\nexport function buildHierarchicalColumn(column: string, hierarchy?: IPartialCategoryNode) {\n  const r = new HierarchyColumnBuilder(column);\n  if (hierarchy) {\n    r.hierarchy(hierarchy);\n  }\n  return r;\n}\n","import {IActionColumnDesc, IAction, IGroupAction} from '../../model';\nimport ColumnBuilder from './ColumnBuilder';\n\nexport default class ActionsColumnBuilder extends ColumnBuilder<IActionColumnDesc> {\n\n  constructor() {\n    super('actions', '');\n  }\n\n  /**\n   * adds another action\n   * @param action the action\n   */\n  action(action: IAction) {\n    return this.actions([action]);\n  }\n\n  /**\n   * adds multiple actions\n   * @param actions list of actions\n   */\n  actions(actions: IAction[]) {\n    if (!this.desc.actions) {\n      this.desc.actions = [];\n    }\n    this.desc.actions!.push(...actions);\n    return this;\n  }\n\n  /**\n   * adds another action that is shown in group rows\n   * @param action the action\n   */\n  groupAction(action: IGroupAction) {\n    return this.groupActions([action]);\n  }\n\n  /**\n   * add multiple group actions that are shown in group rows\n   * @param actions list of actions\n   */\n  groupActions(actions: IGroupAction[]) {\n    if (!this.desc.groupActions) {\n      this.desc.groupActions = [];\n    }\n    this.desc.groupActions!.push(...actions);\n    return this;\n  }\n}\n\n/**\n * builds a actions column builder\n * @returns {ActionsColumnBuilder}\n */\nexport function buildActionsColumn() {\n  return new ActionsColumnBuilder();\n}\n","import {IBooleanColumnDesc} from '../../model';\nimport ColumnBuilder from './ColumnBuilder';\n\nexport default class BooleanColumnBuilder extends ColumnBuilder<IBooleanColumnDesc> {\n\n  constructor(column: string) {\n    super('boolean', column);\n  }\n\n  trueMarker(marker: string) {\n    this.desc.trueMarker = marker;\n    return this;\n  }\n\n  falseMarker(marker: string) {\n    this.desc.falseMarker = marker;\n    return this;\n  }\n}\n\n/**\n * builds a boolean column builder\n * @param {string} column column which contains the associated data\n * @returns {BooleanColumnBuilder}\n */\nexport function buildBooleanColumn(column: string) {\n  return new BooleanColumnBuilder(column);\n}\n","import {IColumnDesc, IColumnConstructor} from '../model';\nimport {DataProvider, LocalDataProvider, deriveColors, RemoteDataProvider, IRemoteDataProviderOptions, deriveColumnDescriptions, IDataProviderOptions, ILocalDataProviderOptions, IAggregationStrategy, IServerData} from '../provider';\nimport {LineUp, Taggle} from '../ui';\nimport ColumnBuilder from './column/ColumnBuilder';\nimport LineUpBuilder from './LineUpBuilder';\nimport RankingBuilder from './RankingBuilder';\n\nexport * from './column';\nexport * from './RankingBuilder';\n\n/**\n * builder for a LocalDataProvider along with LineUp configuration options\n */\nexport abstract class ADataBuilder<T extends IDataProviderOptions> extends LineUpBuilder {\n  protected readonly columns: (IColumnDesc | ((data: any[]) => IColumnDesc))[] = [];\n  protected abstract providerOptions: Partial<T>;\n\n  private readonly rankBuilders: ((data: DataProvider) => void)[] = [];\n  private _deriveColors: boolean = false;\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * when using a top-n strategy how many items should be shown\n   */\n  showTopN(n: number) {\n    this.providerOptions.showTopN = n;\n    return this;\n  }\n\n  /**\n   * change the aggregation strategy that should be used when grouping by a column\n   */\n  aggregationStrategy(strategy: IAggregationStrategy) {\n    this.providerOptions.aggregationStrategy = strategy;\n    return this;\n  }\n\n  /**\n   * allow just a single selection\n   */\n  singleSelection() {\n    this.providerOptions.singleSelection = true;\n    return this;\n  }\n\n  /**\n   * tirggers to assign colors for the given descriptions\n   */\n  deriveColors() {\n    this._deriveColors = true;\n    return this;\n  }\n\n  /**\n   * register another column type to this data provider\n   * @param {string} type unique type id\n   * @param {IColumnConstructor} clazz column class\n   */\n  registerColumnType(type: string, clazz: IColumnConstructor) {\n    const types = <{[columnType: string]: IColumnConstructor}>this.providerOptions.columnTypes!;\n    types[type] = clazz;\n    return this;\n  }\n\n  /**\n   * push another column description to this data provider\n   * @param {IColumnDesc | ColumnBuilder} column column description or builder instance\n   */\n  column(column: IColumnDesc | ColumnBuilder | ((data: any[]) => IColumnDesc)) {\n    this.columns.push(column instanceof ColumnBuilder ? column.build.bind(column) : column);\n    return this;\n  }\n\n  /**\n   * restores a given ranking dump\n   * @param dump dump as created using '.dump()'\n   */\n  restore(dump: any) {\n    this.rankBuilders.push((data) => data.restore(dump));\n    return this;\n  }\n\n  /**\n   * add the default ranking (all columns) to this data provider\n   * @param {boolean} addSupportTypes add support types, too, default: true\n   */\n  defaultRanking(addSupportTypes: boolean = true) {\n    this.rankBuilders.push((data) => data.deriveDefault(addSupportTypes));\n    return this;\n  }\n\n  /**\n   * add another ranking to this data provider\n   * @param {((data: DataProvider) => void) | RankingBuilder} builder ranking builder\n   */\n  ranking(builder: ((data: DataProvider) => void) | RankingBuilder) {\n    this.rankBuilders.push(builder instanceof RankingBuilder ? builder.build.bind(builder) : builder);\n    return this;\n  }\n\n  protected abstract createProvider(columns: IColumnDesc[]): DataProvider;\n  protected abstract get data(): any[];\n\n  /**\n   * builds the data provider itself\n   * @returns {LocalDataProvider}\n   */\n  buildData() {\n    // last come survived separted by label to be able to override columns\n    const columns: IColumnDesc[] = [];\n    const contained = new Set<string>();\n    const columnData = this.data;\n\n    for (const col of this.columns) {\n      const c = typeof col === 'function' ? col(columnData) : col;\n      const key = `${c.type}@${c.label}`;\n      if (!contained.has(key)) {\n        columns.push(c);\n        contained.add(key);\n        continue;\n      }\n      const oldPos = columns.findIndex((d) => key === `${d.type}@${d.label}`);\n      columns.splice(oldPos, 1, c); // replace with new one\n    }\n    if (this._deriveColors) {\n      deriveColors(columns);\n    }\n    const r = this.createProvider(columns);\n    if (this.rankBuilders.length === 0) {\n      this.defaultRanking();\n    }\n    this.rankBuilders.forEach((builder) => builder(r));\n    return r;\n  }\n\n  /**\n   * builds LineUp at the given parent DOM node\n   * @param {HTMLElement} node parent DOM node to attach\n   * @returns {LineUp}\n   */\n  build(node: HTMLElement) {\n    return new LineUp(node, this.buildData(), this.options);\n  }\n\n  /**\n   * builds Taggle at the given parent DOM node\n   * @param {HTMLElement} node parent DOM node to attach\n   * @returns {Taggle}\n   */\n  buildTaggle(node: HTMLElement) {\n    return new Taggle(node, this.buildData(), this.options);\n  }\n}\n\nexport default class LocalDataBuilder extends ADataBuilder<ILocalDataProviderOptions & IDataProviderOptions> {\n  protected readonly providerOptions: Partial<IDataProviderOptions & ILocalDataProviderOptions> = {\n    columnTypes: {}\n  };\n\n  constructor(protected readonly data: object[]) {\n    super();\n  }\n\n  /**\n   * use the schedulded task executor to asynchronously compute aggregations\n   */\n  scheduledTaskExecutor() {\n    this.providerOptions.taskExecutor = 'scheduled';\n    return this;\n  }\n\n  /**\n   * filter all rankings by all filters in LineUp\n   */\n  filterGlobally() {\n    this.providerOptions.filterGlobally = true;\n    return this;\n  }\n\n  protected createProvider(columns: IColumnDesc[]) {\n    return new LocalDataProvider(this.data, columns, this.providerOptions);\n  }\n\n  /**\n   * triggers to derive the column descriptions for the given data\n   * @param {string} columns optional enforced order of columns\n   */\n  deriveColumns(...columns: (string | string[])[]) {\n    const cols = (<string[]>[]).concat(...columns);\n    for (const c of deriveColumnDescriptions(this.data, {columns: cols})) {\n      this.columns.push(c);\n    }\n    return this;\n  }\n}\n\nexport class RemoteDataBuilder extends ADataBuilder<IRemoteDataProviderOptions & IDataProviderOptions> {\n  protected readonly providerOptions: Partial<IDataProviderOptions & IRemoteDataProviderOptions> = {\n    columnTypes: {}\n  };\n\n  constructor(private readonly server: IServerData, protected readonly data: object[] = []) {\n    super();\n  }\n\n  /**\n   * maximal cache size\n   * @default 10000\n   */\n  maxCacheSize(maxCacheSize: number) {\n    this.providerOptions.maxCacheSize = maxCacheSize;\n    return this;\n  }\n\n  /**\n   * number of neighboring rows that should be loaded when requesting a single row\n   */\n  loadNeighbors(neighbors: number) {\n    this.providerOptions.loadNeighbors = neighbors;\n    return this;\n  }\n\n  /**\n   * whether to precompute box plot statistics\n   * @default false\n   */\n  precomputeBoxPlotStats(value: boolean | 'data' | 'summary' | 'group') {\n    this.providerOptions.precomputeBoxPlotStats = value;\n    return this;\n  }\n\n  protected createProvider(columns: IColumnDesc[]) {\n    return new RemoteDataProvider(this.server, columns, this.providerOptions);\n  }\n}\n\n/**\n * creates a new builder instance for the given data\n * @param {object[]} arr data to visualize\n * @returns {DataBuilder}\n */\nexport function builder(arr: object[]) {\n  return new LocalDataBuilder(arr);\n}\n\n/**\n * creates a new remote builder instance\n * @param server the server adapter\n * @param sampleData optional sample data that is used for deriving column bounds\n */\nexport function remote(server: IServerData, sampleData?: object[]) {\n  return new RemoteDataBuilder(server, sampleData);\n}\n\n/**\n * build a new Taggle instance in the given node for the given data\n * @param {HTMLElement} node DOM node to attach to\n * @param {any[]} data data to visualize\n * @param {string[]} columns optional enforced column order\n * @returns {Taggle}\n */\nexport function asTaggle(node: HTMLElement, data: any[], ...columns: string[]): Taggle {\n  return builder(data)\n    .deriveColumns(columns)\n    .deriveColors()\n    .defaultRanking()\n    .buildTaggle(node);\n}\n\n/**\n * build a new LineUp instance in the given node for the given data\n * @param {HTMLElement} node DOM node to attach to\n * @param {any[]} data data to visualize\n * @param {string[]} columns optional enforced column order\n * @returns {LineUp}\n */\nexport function asLineUp(node: HTMLElement, data: any[], ...columns: string[]): LineUp {\n  return builder(data)\n    .deriveColumns(columns)\n    .deriveColors()\n    .defaultRanking()\n    .build(node);\n}\n","import {extent} from '../../internal';\nimport {IActionColumnDesc, IArrayDesc, IBooleanColumnDesc, ICategoricalColumnDesc, IColumnDesc, IDateColumnDesc, IHierarchyColumnDesc, ILinkColumnDesc, INumberColumnDesc} from '../../model';\nimport {IBuilderAdapterActionsColumnDescProps, IBuilderAdapterBooleanColumnDescProps, IBuilderAdapterCategoricalColumnDescProps, IBuilderAdapterColumnDescProps, IBuilderAdapterDateColumnDescProps, IBuilderAdapterHierarchyColumnDescProps, IBuilderAdapterNumberColumnDescProps, IBuilderAdapterStringColumnDescProps} from '.';\n\nexport function build<T extends IBuilderAdapterColumnDescProps>(props: T, _data?: any[]): IColumnDesc {\n  const {column} = props;\n  const desc = <any>{column, type: props.type, label: column ? column[0].toUpperCase() + column.slice(1) : props.type};\n\n  (<(keyof IBuilderAdapterColumnDescProps)[]>['label', 'description', 'frozen', 'width', 'renderer', 'groupRenderer', 'summaryRenderer', 'visible', 'fixed']).forEach((key) => {\n    if (props.hasOwnProperty(key)) {\n      desc[key] = props[key];\n    }\n  });\n\n  if (props.custom) { // merge custom attributes\n    Object.assign(desc, props.custom);\n  }\n\n  if (props.asMap) {\n    console.assert(['categorical', 'date', 'number', 'string', 'link'].includes(desc.type!));\n    desc.type += 'Map';\n  }\n\n  if (props.asArray != null) {\n    console.assert(['boolean', 'categorical', 'date', 'number', 'string', 'link'].includes(desc.type!));\n    desc.type += 's';\n    const a = <IArrayDesc>desc;\n    const labels = props.asArray;\n    if (Array.isArray(labels)) {\n      a.labels = labels;\n      a.dataLength = labels.length;\n    } else if (typeof labels === 'number') {\n      a.dataLength = labels;\n    }\n  }\n\n  return <any>desc;\n}\n\n\nexport function buildCategorical(props: IBuilderAdapterCategoricalColumnDescProps, data: any[]): ICategoricalColumnDesc {\n  const desc: any = build({...props, type: 'categorical'});\n\n  if (props.asOrdinal) {\n    desc.type = 'ordinal';\n  }\n  if (props.missingCategory) {\n    desc.missingCategory = props.missingCategory;\n  }\n  if (props.asSet) {\n    if (typeof props.asSet === 'string') {\n      (<any>desc).separator = props.asSet;\n    }\n    desc.type = 'set';\n  }\n\n\n  if (!props.categories) {\n    // derive categories\n    const categories = new Set(data.map((d) => <string>d[(<any>desc).column]));\n    desc.categories = Array.from(categories).sort();\n  } else {\n    desc.categories = props.categories;\n  }\n  return desc;\n}\n\nexport function buildDate(props: IBuilderAdapterDateColumnDescProps): IDateColumnDesc {\n  const desc: any = build({...props, type: 'date'});\n\n  (<(keyof IBuilderAdapterDateColumnDescProps)[]>['dateFormat', 'dateParse']).forEach((key) => {\n    if (props.hasOwnProperty(key)) {\n      desc[key] = props[key];\n    }\n  });\n  return desc;\n}\n\nexport function buildHierarchy(props: Partial<IBuilderAdapterHierarchyColumnDescProps>): IHierarchyColumnDesc {\n  const desc: any = build({...(<any>props), type: 'hierarchy'});\n\n  (<(keyof IBuilderAdapterHierarchyColumnDescProps)[]>['hierarchy', 'hierarchySeparator']).forEach((key) => {\n    if (props.hasOwnProperty(key)) {\n      desc[key] = props[key];\n    }\n  });\n  return desc;\n}\n\nexport function buildNumber(props: IBuilderAdapterNumberColumnDescProps, data: any[]): INumberColumnDesc {\n  const desc: any = build({...props, type: 'number'});\n\n  const domain = props.domain ? props.domain : <[number, number]>extent(data, (d) => <number>d[(<any>desc).column]);\n\n  if (props.hasOwnProperty('color')) {\n    desc.colorMapping = props.color;\n  }\n  (<(keyof IBuilderAdapterNumberColumnDescProps)[]>['sort', 'colorMapping']).forEach((key) => {\n    if (props.hasOwnProperty(key)) {\n      desc[key] = props[key];\n    }\n  });\n  if (props.scripted) {\n    desc.map = {domain, code: props.scripted, type: 'script'};\n  } else if (!props.mapping || props.mapping === 'linear') {\n    desc.domain = domain;\n    if (props.range) {\n      desc.range = props.range;\n    }\n  } else {\n    desc.map = {\n      type: props.mapping,\n      domain,\n      range: props.range || [0, 1]\n    };\n  }\n  return desc;\n}\n\nexport function buildString(props: IBuilderAdapterStringColumnDescProps): ILinkColumnDesc {\n  const desc: any = build({...props, type: 'string'});\n\n  (<(keyof IBuilderAdapterStringColumnDescProps)[]>['pattern', 'patternTemplate', 'alignment']).forEach((key) => {\n    if (props.hasOwnProperty(key)) {\n      desc[key] = props[key];\n    }\n  });\n  if (props.editable) {\n    desc.type = 'annotate';\n  }\n  if (props.pattern) {\n    desc.type = 'link';\n  }\n  if (props.html) {\n    desc.escape = false;\n  }\n  return desc;\n}\n\n\nexport function buildBoolean(props: IBuilderAdapterBooleanColumnDescProps): IBooleanColumnDesc {\n  const desc: any = build({...props, type: 'boolean'});\n\n  (<(keyof IBuilderAdapterBooleanColumnDescProps)[]>['trueMarker', 'falseMarker']).forEach((key) => {\n    if (props.hasOwnProperty(key)) {\n      desc[key] = props[key];\n    }\n  });\n  return desc;\n}\n\nexport function buildActions(props: IBuilderAdapterActionsColumnDescProps): IActionColumnDesc {\n  const desc: any = build({...props, type: 'actions'});\n\n  (<(keyof IBuilderAdapterActionsColumnDescProps)[]>['actions', 'groupActions']).forEach((key) => {\n    if (props.hasOwnProperty(key)) {\n      desc[key] = props[key];\n    }\n  });\n  return desc;\n}\n\n","import {buildRanking as buildRankingImpl, INestedBuilder, IReduceBuilder, IScriptedBuilder, IWeightedSumBuilder} from '..';\nimport {Ranking} from '../../model';\nimport {LocalDataProvider} from '../../provider';\nimport {IBuilderAdapterImposeColumnProps, IBuilderAdapterNestedColumnProps, IBuilderAdapterRankingProps, IBuilderAdapterReduceColumnProps, IBuilderAdapterScriptColumnProps, IBuilderAdapterSupportColumnProps, IBuilderAdapterWeightedSumColumnProps} from '.';\n\n\n/*\n * build the column description\n */\nexport function buildRanking(props: IBuilderAdapterRankingProps, data: LocalDataProvider): Ranking {\n  const r = buildRankingImpl();\n\n  if (props.sortBy) {\n    const s = Array.isArray(props.sortBy) ? props.sortBy : [props.sortBy];\n    s.forEach((si) => {\n      if (typeof si === 'string') {\n        r.sortBy(si);\n      } else {\n        r.sortBy(si.column, si.asc);\n      }\n    });\n  }\n  if (props.groupBy) {\n    const s = Array.isArray(props.groupBy) ? props.groupBy : [props.groupBy];\n    r.groupBy(...s);\n  }\n  if (props.columns) {\n    props.columns.forEach((c) => r.column(c));\n  }\n  return r.build(data);\n}\n\nexport function buildGeneric(props: { column: '*' | string }) {\n  return props.column;\n}\n\nexport function buildImposeRanking(props: IBuilderAdapterImposeColumnProps) {\n  return <any>Object.assign({\n    type: 'impose'\n  }, props);\n}\n\n\nexport function buildNestedRanking(props: IBuilderAdapterNestedColumnProps, children: string[]) {\n  const r: INestedBuilder = {\n    type: 'nested',\n    columns: children\n  };\n  if (props.label) {\n    r.label = props.label;\n  }\n  return r;\n}\n\n\nexport function buildWeightedSumRanking(props: IBuilderAdapterWeightedSumColumnProps, children: { column: string, weight: number }[]) {\n  const r: IWeightedSumBuilder = {\n    type: 'weightedSum',\n    columns: children.map((d) => d.column),\n    weights: children.map((d) => d.weight)\n  };\n  if (props.label) {\n    r.label = props.label;\n  }\n  return r;\n}\n\nexport function buildReduceRanking(props: IBuilderAdapterReduceColumnProps, children: string[]) {\n  const r: IReduceBuilder = {\n    type: props.type,\n    columns: children\n  };\n  if (props.label) {\n    r.label = props.label;\n  }\n  return r;\n}\n\nexport function buildScriptRanking(props: IBuilderAdapterScriptColumnProps, children: string[]) {\n  const r: IScriptedBuilder = {\n    type: 'script',\n    code: props.code,\n    columns: children\n  };\n  if (props.label) {\n    r.label = props.label;\n  }\n  return r;\n}\n\nexport function buildSupportRanking(props: IBuilderAdapterSupportColumnProps) {\n  return `_${props.type}`;\n}\n\nexport function buildAllColumnsRanking() {\n  return '*';\n}\n","export {equal} from '../../internal';\n\nexport function isTypeInstance(clazz: any, superClass: any) {\n  let c = clazz;\n  while (c && c !== superClass) {\n    c = c.__proto__;\n  }\n  return c === superClass;\n}\n\nexport function pick<T extends object>(obj: T, keys: (keyof T)[]): Pick<T, keyof T> {\n  const r: Pick<T, keyof T> = <any>{};\n  keys.forEach((k) => {\n    if (obj.hasOwnProperty(k)) {\n      r[k] = obj[k];\n    }\n  });\n  return r;\n}\n\nexport function isSame<T extends object>(current: T, changed: (prop: keyof T) => boolean, props: (keyof T)[]) {\n  if (props.every((p) => !changed(p))) {\n    return null;\n  }\n  return pick(current, props);\n}\n","import {IBuilderAdapter, IBuilderAdapterProps, IBuilderAdapterRankingProps, IChangeDetecter} from '.';\nimport {IColumnDesc} from '../../model';\nimport {deriveColors, deriveColumnDescriptions, IDataProviderOptions, ILocalDataProviderOptions, LocalDataProvider} from '../../provider';\nimport {LineUp, Taggle} from '../../ui';\nimport {buildRanking} from './ranking';\nimport {equal, isSame, pick} from './utils';\n\n\nconst providerOptions: (keyof IDataProviderOptions | keyof ILocalDataProviderOptions)[] = ['singleSelection', 'filterGlobally', 'columnTypes', 'taskExecutor', 'jumpToSearchResult'];\nconst lineupOptions: (keyof IBuilderAdapterProps)[] = ['animated', 'sidePanel', 'sidePanelCollapsed', 'hierarchyIndicator', 'defaultSlopeGraphMode', 'summaryHeader', 'expandLineOnHover', 'overviewMode', 'renderers', 'canRender', 'toolbar', 'rowHeight', 'rowPadding', 'groupHeight', 'groupPadding', 'dynamicHeight', 'labelRotation', 'ignoreUnsupportedBrowser'];\n\ninterface IRankingContext {\n  builders: IBuilderAdapterRankingProps[];\n  restore: any;\n  derive: boolean;\n  supportTypes: boolean;\n}\n\ninterface IColumnContext {\n  columns: IColumnDesc[];\n  deriveColumns: boolean;\n  deriveColumnNames: string[];\n  deriveColors: boolean;\n}\n\nexport class Adapter {\n  private data: LocalDataProvider | null = null;\n  private instance: LineUp | Taggle | null = null;\n\n  private prevRankings: IRankingContext | null = null;\n  private prevColumns: IColumnContext | null = null;\n  private prevHighlight: number | null = null;\n\n  private readonly onSelectionChanged = (indices: number[]) => {\n    if (this.props.onSelectionChanged && !equal(this.props.selection, indices)) {\n      this.props.onSelectionChanged(indices);\n    }\n  }\n\n  private readonly onHighlightChanged = (highlight: number) => {\n    const prev = this.prevHighlight != null ? this.prevHighlight : -1;\n    if (prev === highlight) {\n      return;\n    }\n    this.prevHighlight = highlight;\n    if (this.props.onHighlightChanged) {\n      this.props.onHighlightChanged(highlight);\n    }\n  }\n\n  constructor(private readonly adapter: IBuilderAdapter) {\n\n  }\n\n  private get props() {\n    return this.adapter.props();\n  }\n\n  componentDidMount() {\n    this.data = this.buildProvider();\n    this.instance = this.adapter.createInstance(this.data, pick(this.props, lineupOptions));\n    this.instance.on(LineUp.EVENT_HIGHLIGHT_CHANGED, this.onHighlightChanged);\n  }\n\n  private resolveColumnDescs(data: any[]): IColumnContext {\n    const columns = this.adapter.columnDescs(data);\n    const deriveColumns = columns.length === 0 || Boolean(this.props.deriveColumns);\n    const deriveColumnNames = Array.isArray(this.props.deriveColumns) ? this.props.deriveColumns : [];\n    const deriveColors = Boolean(this.props.deriveColors);\n    return {\n      columns,\n      deriveColors,\n      deriveColumns,\n      deriveColumnNames\n    };\n  }\n\n  private resolveRankings(): IRankingContext {\n    const builders = this.adapter.rankingBuilders();\n\n    return {\n      builders,\n      restore: this.props.restore,\n      derive: (builders.length === 0 && !this.props.restore) || Boolean(this.props.defaultRanking),\n      supportTypes: this.props.defaultRanking !== 'noSupportTypes'\n    };\n  }\n\n  private buildColumns(data: any[], ctx: IColumnContext) {\n    this.prevColumns = ctx;\n    const columns = ctx.columns.map((d) => Object.assign({}, d)); // work on copy\n    if (ctx.deriveColumns) {\n      const labels = new Set(columns.map((d) => `${d.type}@${d.label}`));\n      const derived = deriveColumnDescriptions(data, {columns: ctx.deriveColumnNames});\n      for (const derive of derived) {\n        if (labels.has(`${derive.type}@${derive.label}`)) { // skip same name\n          continue;\n        }\n        columns.push(derive);\n      }\n    }\n    if (ctx.deriveColors) {\n      deriveColors(columns);\n    }\n    return columns;\n  }\n\n  private buildRankings(data: LocalDataProvider, rankings: IRankingContext) {\n    data.clearRankings();\n    this.prevRankings = rankings;\n    if (rankings.derive) {\n      data.deriveDefault(rankings.supportTypes);\n    }\n    if (rankings.restore) {\n      data.restore(rankings.restore);\n    }\n    rankings.builders.forEach((b) => buildRanking(b, data!));\n  }\n\n  private buildProvider() {\n    const columns = this.buildColumns(this.props.data, this.resolveColumnDescs(this.props.data));\n    const data = new LocalDataProvider(this.props.data, columns, pick(this.props, providerOptions));\n\n    this.buildRankings(data, this.resolveRankings());\n\n    data.setSelection(this.props.selection || []);\n    data.on(LocalDataProvider.EVENT_SELECTION_CHANGED, this.onSelectionChanged);\n\n    return data;\n  }\n\n  private updateLineUp(changeDetector: IChangeDetecter, providerChanged: boolean) {\n    // check lineup instance properties\n    const changedLineUpOptions = isSame(this.props, changeDetector, lineupOptions);\n    if (!changedLineUpOptions) {\n      if (providerChanged) {\n        this.instance!.setDataProvider(this.data!);\n      }\n\n      if (providerChanged || (this.props.highlight != null && this.prevHighlight !== this.props.highlight)) {\n        this.prevHighlight = this.props.highlight == null ? -1 : this.props.highlight;\n        this.instance!.on(LineUp.EVENT_HIGHLIGHT_CHANGED, null);\n        this.instance!.setHighlight(this.prevHighlight);\n        this.instance!.on(LineUp.EVENT_HIGHLIGHT_CHANGED, this.onHighlightChanged);\n        return true;\n      }\n      return false;\n    }\n    // recreate lineup\n    if (this.instance) {\n      this.instance.destroy();\n    }\n    this.instance = this.adapter.createInstance(this.data!, changedLineUpOptions);\n\n    this.prevHighlight = this.props.highlight == null ? -1 : this.props.highlight;\n    this.instance!.setHighlight(this.prevHighlight);\n    this.instance!.on(LineUp.EVENT_HIGHLIGHT_CHANGED, this.onHighlightChanged);\n    return true;\n  }\n\n  private updateProvider(changeDetector: IChangeDetecter) {\n    const changedProviderOptions = isSame(this.props, changeDetector, providerOptions);\n    if (changedProviderOptions || !this.data || changeDetector('data')) {\n      // big change start from scratch\n      this.data = this.buildProvider();\n      return true;\n    }\n\n    const rankings = this.resolveRankings();\n    const columns = this.resolveColumnDescs(this.props.data);\n    const columnsChanged = !equal(this.prevColumns, columns);\n    if (columnsChanged) {\n      const descs = this.buildColumns(this.props.data, columns);\n      this.data.clearColumns();\n      descs.forEach((d) => this.data!.pushDesc(d));\n    }\n\n    if (columnsChanged || !equal(rankings, this.prevRankings)) {\n      this.buildRankings(this.data, rankings);\n    }\n\n    this.data.on(LocalDataProvider.EVENT_SELECTION_CHANGED, null);\n    this.data.setSelection(this.props.selection || []);\n    this.data.on(LocalDataProvider.EVENT_SELECTION_CHANGED, this.onSelectionChanged);\n    return false;\n  }\n\n  componentDidUpdate(changeDetector: IChangeDetecter) {\n    const providerChanged = this.updateProvider(changeDetector);\n    this.updateLineUp(changeDetector, providerChanged);\n    // this.instance!.update();\n  }\n\n  componentWillUnmount() {\n    if (this.instance) {\n      this.instance.destroy();\n      this.instance = null;\n    }\n    this.data = null;\n  }\n}\n","\nimport {build, buildCategorical, buildDate, buildHierarchy, buildNumber, buildString, buildActions} from './column';\nimport {Adapter} from './lineup';\nimport {\n  buildAllColumnsRanking,\n  buildGeneric,\n  buildImposeRanking,\n  buildNestedRanking,\n  buildRanking,\n  buildReduceRanking,\n  buildScriptRanking,\n  buildSupportRanking,\n  buildWeightedSumRanking\n} from './ranking';\nimport {equal, isSame, isTypeInstance} from './utils';\n\nexport const builderAdapter = {\n  buildString,\n  buildNumber,\n  buildHierarchy,\n  buildDate,\n  buildCategorical,\n  buildActions,\n  build,\n  buildGeneric,\n  buildWeightedSumRanking,\n  buildSupportRanking,\n  buildScriptRanking,\n  buildReduceRanking,\n  buildRanking,\n  buildNestedRanking,\n  buildImposeRanking,\n  buildAllColumnsRanking,\n  equal,\n  isSame,\n  isTypeInstance,\n  Adapter\n};\n","import Column from './Column';\nimport ValueColumn from './ValueColumn';\nimport {IValueColumnDesc} from './interfaces';\n\nexport * from './annotations';\nexport {isMissingValue, isUnknown, FIRST_IS_NAN, FIRST_IS_MISSING, missingGroup} from './missing';\nexport * from './interfaces';\nexport * from './ICategoricalColumn';\nexport * from './INumberColumn';\nexport * from './IDateColumn';\nexport * from './IArrayColumn';\n\nexport {ScaleMappingFunction, ScriptMappingFunction} from './MappingFunction';\nexport {DEFAULT_CATEGORICAL_COLOR_FUNCTION, ReplacmentColorMappingFunction} from './CategoricalColorMappingFunction';\nexport {CustomColorMappingFunction, DEFAULT_COLOR_FUNCTION, SequentialColorFunction, DivergentColorFunction, UnknownColorFunction, QuantizedColorFunction, SolidColorFunction} from './ColorMappingFunction';\n\nexport {default as ActionColumn} from './ActionColumn';\nexport * from './ActionColumn';\nexport {default as AggregateGroupColumn} from './AggregateGroupColumn';\nexport * from './AggregateGroupColumn';\nexport {default as AnnotateColumn} from './AnnotateColumn';\nexport * from './AnnotateColumn';\nexport {default as ArrayColumn} from './ArrayColumn';\nexport * from './ArrayColumn';\nexport {default as BooleanColumn} from './BooleanColumn';\nexport * from './BooleanColumn';\nexport {default as BooleansColumn} from './BooleansColumn';\nexport * from './BooleansColumn';\nexport {default as BoxPlotColumn} from './BoxPlotColumn';\nexport * from './BoxPlotColumn';\nexport {default as CategoricalColumn} from './CategoricalColumn';\nexport *from './CategoricalColumn';\nexport {default as CategoricalMapColumn} from './CategoricalMapColumn';\nexport * from './CategoricalMapColumn';\nexport {default as CategoricalsColumn} from './CategoricalsColumn';\nexport * from './CategoricalsColumn';\nexport {default, default as Column} from './Column';\n// no * export\nexport {default as CompositeColumn} from './CompositeColumn';\n// no * export\nexport {default as CompositeNumberColumn} from './CompositeNumberColumn';\nexport * from './CompositeNumberColumn';\nexport {default as DateColumn} from './DateColumn';\nexport * from './DateColumn';\nexport {default as DatesColumn} from './DatesColumn';\nexport * from './DatesColumn';\nexport {default as DatesMapColumn} from './DatesMapColumn';\nexport * from './DatesMapColumn';\nexport {default as GroupColumn} from './GroupColumn';\nexport *from './GroupColumn';\nexport {default as HierarchyColumn} from './HierarchyColumn';\nexport * from './HierarchyColumn';\nexport {default as ImpositionBoxPlotColumn} from './ImpositionBoxPlotColumn';\nexport * from './ImpositionBoxPlotColumn';\nexport {default as ImpositionCompositeColumn} from './ImpositionCompositeColumn';\nexport * from './ImpositionCompositeColumn';\nexport {default as ImpositionCompositesColumn} from './ImpositionCompositesColumn';\nexport * from './ImpositionCompositesColumn';\nexport {default as LinkColumn} from './LinkColumn';\nexport * from './LinkColumn';\nexport {default as LinkMapColumn} from './LinkMapColumn';\nexport * from './LinkMapColumn';\nexport {default as LinksColumn} from './LinksColumn';\nexport * from './LinksColumn';\nexport {default as MapColumn} from './MapColumn';\nexport * from './MapColumn';\nexport {default as MultiLevelCompositeColumn} from './MultiLevelCompositeColumn';\nexport * from './MultiLevelCompositeColumn';\nexport {default as NestedColumn} from './NestedColumn';\nexport * from './NestedColumn';\nexport {default as NumberColumn} from './NumberColumn';\nexport * from './NumberColumn';\nexport {default as NumberMapColumn} from './NumberMapColumn';\nexport * from './NumberMapColumn';\nexport {default as NumbersColumn} from './NumbersColumn';\nexport * from './NumbersColumn';\nexport {default as OrdinalColumn} from './OrdinalColumn';\nexport * from './OrdinalColumn';\nexport {default as RankColumn} from './RankColumn';\nexport * from './RankColumn';\nexport {default as Ranking, EDirtyReason} from './Ranking';\n// no * export\nexport {default as ReduceColumn} from './ReduceColumn';\nexport * from './ReduceColumn';\nexport {default as ScriptColumn} from './ScriptColumn';\nexport * from './ScriptColumn';\nexport {default as SelectionColumn} from './SelectionColumn';\nexport * from './SelectionColumn';\nexport {default as SetColumn} from './SetColumn';\nexport * from './SetColumn';\nexport {default as StackColumn} from './StackColumn';\nexport * from './StackColumn';\nexport {default as StringColumn} from './StringColumn';\nexport * from './StringColumn';\nexport {default as StringsColumn} from './StringsColumn';\nexport * from './StringsColumn';\nexport {default as StringMapColumn} from './StringMapColumn';\nexport * from './StringMapColumn';\nexport {default as ValueColumn} from './ValueColumn';\n// no * export\n\n\n/**\n * defines a new column type\n * @param name\n * @param functions\n * @returns {CustomColumn}\n */\nexport function defineColumn<T>(name: string, functions: any = {}): typeof Column {\n  class CustomColumn extends ValueColumn<T> {\n    constructor(id: string, desc: IValueColumnDesc<T>, ...args: any[]) {\n      super(id, desc);\n      if (typeof (this.init) === 'function') {\n        this.init(id, desc, ...args);\n      }\n    }\n\n    init(..._args: any[]) {\n      // dummy\n    }\n  }\n\n  CustomColumn.prototype.toString = () => name;\n  CustomColumn.prototype = Object.assign(CustomColumn.prototype, functions);\n\n  return CustomColumn;\n}\n","/**\n * main module of LineUp.js containing the main class and exposes all other modules\n */\n\nimport {IColumnDesc} from './model';\nimport {DataProvider, LocalDataProvider, ILocalDataProviderOptions} from './provider';\nimport {LineUp, Taggle} from './ui';\nimport {ILineUpOptions, ITaggleOptions} from './config';\n\n\nexport * from './builder';\nexport * from './config';\nexport * from './internal/mathInterfaces';\nexport * from './model';\nexport * from './provider';\nexport * from './renderer';\nexport * from './ui';\nexport {LineUp as default} from './ui';\n\n\nexport function createLocalDataProvider(data: any[], columns: IColumnDesc[], options: Partial<ILocalDataProviderOptions> = {}) {\n  return new LocalDataProvider(data, columns, options);\n}\n\n/**\n *\n * @param container the html element lineup should be built in\n * @param data {DataProvider} the data providier\n * @param config {Partial<ILineUpOptions>} lineup configuration overrides\n * @returns {LineUp} the created lineup instance\n */\nexport function createLineUp(container: HTMLElement, data: DataProvider, config: Partial<ILineUpOptions> = {}) {\n  return new LineUp(container, data, config);\n}\n\nexport function createTaggle(container: HTMLElement, data: DataProvider, config: Partial<ITaggleOptions> = {}) {\n  return new Taggle(container, data, config);\n}\n","export * from './';\nexport {default} from './';\nimport '!file-loader?name=schema.4.0.0.json!./provider/schema.json';\nimport './style.scss';\n\ndeclare const __VERSION__: string;\ndeclare const __BUILD_ID__: string;\ndeclare const __LICENSE__: string;\n\n/**\n * LineUp version\n * @type {string}\n */\nexport const version = __VERSION__;\n/**\n * LineUp unique build id\n * @type {string}\n */\nexport const buildId = __BUILD_ID__;\n/**\n * LineUp license type\n * @type {string}\n */\nexport const license = __LICENSE__;\n"],"sourceRoot":""}