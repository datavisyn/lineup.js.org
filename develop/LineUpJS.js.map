{"version":3,"sources":["webpack://LineUpJS/webpack/universalModuleDefinition","webpack://LineUpJS/webpack/bootstrap","webpack://LineUpJS/./node_modules/fast-deep-equal/index.js","webpack://LineUpJS/./node_modules/detect-browser/index.js","webpack://LineUpJS/./node_modules/reflect-metadata/Reflect.js","webpack://LineUpJS/./node_modules/tslib/tslib.es6.js","webpack://LineUpJS/./src/internal/interable.ts","webpack://LineUpJS/./src/internal/worker.ts","webpack://LineUpJS/./src/internal/math.ts","webpack://LineUpJS/./src/internal/utils.ts","webpack://LineUpJS/./node_modules/d3-dispatch/src/dispatch.js","webpack://LineUpJS/./src/internal/AEventDispatcher.ts","webpack://LineUpJS/./src/model/interfaces.ts","webpack://LineUpJS/./src/model/Column.ts","webpack://LineUpJS/./src/model/annotations.ts","webpack://LineUpJS/./src/model/INumberColumn.ts","webpack://LineUpJS/./src/model/ValueColumn.ts","webpack://LineUpJS/./src/model/CompositeColumn.ts","webpack://LineUpJS/./node_modules/d3-scale-chromatic/src/colors.js","webpack://LineUpJS/./node_modules/d3-scale-chromatic/src/categorical/category10.js","webpack://LineUpJS/./node_modules/d3-scale-chromatic/src/categorical/Accent.js","webpack://LineUpJS/./node_modules/d3-scale-chromatic/src/categorical/Dark2.js","webpack://LineUpJS/./node_modules/d3-scale-chromatic/src/categorical/Pastel1.js","webpack://LineUpJS/./node_modules/d3-scale-chromatic/src/categorical/Paired.js","webpack://LineUpJS/./node_modules/d3-scale-chromatic/src/categorical/Pastel2.js","webpack://LineUpJS/./node_modules/d3-scale-chromatic/src/categorical/Set1.js","webpack://LineUpJS/./node_modules/d3-scale-chromatic/src/categorical/Set2.js","webpack://LineUpJS/./node_modules/d3-scale-chromatic/src/categorical/Set3.js","webpack://LineUpJS/./node_modules/d3-color/src/define.js","webpack://LineUpJS/./node_modules/d3-color/src/color.js","webpack://LineUpJS/./node_modules/d3-color/src/math.js","webpack://LineUpJS/./node_modules/d3-color/src/lab.js","webpack://LineUpJS/./node_modules/d3-color/src/cubehelix.js","webpack://LineUpJS/./node_modules/d3-interpolate/src/basis.js","webpack://LineUpJS/./node_modules/d3-interpolate/src/constant.js","webpack://LineUpJS/./node_modules/d3-interpolate/src/color.js","webpack://LineUpJS/./node_modules/d3-interpolate/src/rgb.js","webpack://LineUpJS/./node_modules/d3-interpolate/src/number.js","webpack://LineUpJS/./node_modules/d3-interpolate/src/basisClosed.js","webpack://LineUpJS/./node_modules/d3-interpolate/src/string.js","webpack://LineUpJS/./node_modules/d3-interpolate/src/transform/parse.js","webpack://LineUpJS/./node_modules/d3-interpolate/src/value.js","webpack://LineUpJS/./node_modules/d3-interpolate/src/date.js","webpack://LineUpJS/./node_modules/d3-interpolate/src/array.js","webpack://LineUpJS/./node_modules/d3-interpolate/src/object.js","webpack://LineUpJS/./node_modules/d3-interpolate/src/round.js","webpack://LineUpJS/./node_modules/d3-interpolate/src/transform/decompose.js","webpack://LineUpJS/./node_modules/d3-interpolate/src/transform/index.js","webpack://LineUpJS/./node_modules/d3-interpolate/src/zoom.js","webpack://LineUpJS/./node_modules/d3-interpolate/src/hsl.js","webpack://LineUpJS/./node_modules/d3-interpolate/src/hcl.js","webpack://LineUpJS/./node_modules/d3-interpolate/src/cubehelix.js","webpack://LineUpJS/./node_modules/d3-interpolate/src/quantize.js","webpack://LineUpJS/./node_modules/d3-scale-chromatic/src/ramp.js","webpack://LineUpJS/./node_modules/d3-scale-chromatic/src/diverging/BrBG.js","webpack://LineUpJS/./node_modules/d3-scale-chromatic/src/diverging/PRGn.js","webpack://LineUpJS/./node_modules/d3-scale-chromatic/src/diverging/PiYG.js","webpack://LineUpJS/./node_modules/d3-scale-chromatic/src/diverging/PuOr.js","webpack://LineUpJS/./node_modules/d3-scale-chromatic/src/diverging/RdBu.js","webpack://LineUpJS/./node_modules/d3-scale-chromatic/src/diverging/RdGy.js","webpack://LineUpJS/./node_modules/d3-scale-chromatic/src/diverging/RdYlBu.js","webpack://LineUpJS/./node_modules/d3-scale-chromatic/src/diverging/RdYlGn.js","webpack://LineUpJS/./node_modules/d3-scale-chromatic/src/diverging/Spectral.js","webpack://LineUpJS/./node_modules/d3-scale-chromatic/src/sequential-multi/BuGn.js","webpack://LineUpJS/./node_modules/d3-scale-chromatic/src/sequential-multi/BuPu.js","webpack://LineUpJS/./node_modules/d3-scale-chromatic/src/sequential-multi/GnBu.js","webpack://LineUpJS/./node_modules/d3-scale-chromatic/src/sequential-multi/OrRd.js","webpack://LineUpJS/./node_modules/d3-scale-chromatic/src/sequential-multi/PuBuGn.js","webpack://LineUpJS/./node_modules/d3-scale-chromatic/src/sequential-multi/PuBu.js","webpack://LineUpJS/./node_modules/d3-scale-chromatic/src/sequential-multi/PuRd.js","webpack://LineUpJS/./node_modules/d3-scale-chromatic/src/sequential-multi/RdPu.js","webpack://LineUpJS/./node_modules/d3-scale-chromatic/src/sequential-multi/YlGnBu.js","webpack://LineUpJS/./node_modules/d3-scale-chromatic/src/sequential-multi/YlGn.js","webpack://LineUpJS/./node_modules/d3-scale-chromatic/src/sequential-multi/YlOrBr.js","webpack://LineUpJS/./node_modules/d3-scale-chromatic/src/sequential-multi/YlOrRd.js","webpack://LineUpJS/./node_modules/d3-scale-chromatic/src/sequential-single/Blues.js","webpack://LineUpJS/./node_modules/d3-scale-chromatic/src/sequential-single/Greens.js","webpack://LineUpJS/./node_modules/d3-scale-chromatic/src/sequential-single/Greys.js","webpack://LineUpJS/./node_modules/d3-scale-chromatic/src/sequential-single/Purples.js","webpack://LineUpJS/./node_modules/d3-scale-chromatic/src/sequential-single/Reds.js","webpack://LineUpJS/./node_modules/d3-scale-chromatic/src/sequential-single/Oranges.js","webpack://LineUpJS/./node_modules/d3-scale-chromatic/src/sequential-multi/cubehelix.js","webpack://LineUpJS/./node_modules/d3-scale-chromatic/src/sequential-multi/rainbow.js","webpack://LineUpJS/./node_modules/d3-scale-chromatic/src/sequential-multi/sinebow.js","webpack://LineUpJS/./node_modules/d3-scale-chromatic/src/sequential-multi/viridis.js","webpack://LineUpJS/./src/internal/OrderedSet.ts","webpack://LineUpJS/./src/model/internal.ts","webpack://LineUpJS/./src/model/Ranking.ts","webpack://LineUpJS/./src/internal/debounce.ts","webpack://LineUpJS/./src/model/RankColumn.ts","webpack://LineUpJS/./src/model/AggregateGroupColumn.ts","webpack://LineUpJS/./src/model/SelectionColumn.ts","webpack://LineUpJS/./src/model/ActionColumn.ts","webpack://LineUpJS/./src/model/missing.ts","webpack://LineUpJS/./src/model/StringColumn.ts","webpack://LineUpJS/./src/internal/mathInterfaces.ts","webpack://LineUpJS/./src/model/AnnotateColumn.ts","webpack://LineUpJS/./src/model/CategoricalColorMappingFunction.ts","webpack://LineUpJS/./src/model/internalCategorical.ts","webpack://LineUpJS/./src/model/CategoricalColumn.ts","webpack://LineUpJS/./src/model/BooleanColumn.ts","webpack://LineUpJS/./src/model/ArrayColumn.ts","webpack://LineUpJS/./src/model/BooleansColumn.ts","webpack://LineUpJS/./node_modules/d3-format/src/formatDecimal.js","webpack://LineUpJS/./node_modules/d3-format/src/exponent.js","webpack://LineUpJS/./node_modules/d3-format/src/formatSpecifier.js","webpack://LineUpJS/./node_modules/d3-format/src/formatTrim.js","webpack://LineUpJS/./node_modules/d3-format/src/formatPrefixAuto.js","webpack://LineUpJS/./node_modules/d3-format/src/defaultLocale.js","webpack://LineUpJS/./node_modules/d3-format/src/formatRounded.js","webpack://LineUpJS/./node_modules/d3-format/src/formatTypes.js","webpack://LineUpJS/./node_modules/d3-format/src/identity.js","webpack://LineUpJS/./node_modules/d3-format/src/locale.js","webpack://LineUpJS/./node_modules/d3-format/src/formatGroup.js","webpack://LineUpJS/./node_modules/d3-format/src/formatNumerals.js","webpack://LineUpJS/./node_modules/d3-format/src/precisionFixed.js","webpack://LineUpJS/./node_modules/d3-array/src/ascending.js","webpack://LineUpJS/./node_modules/d3-array/src/bisector.js","webpack://LineUpJS/./node_modules/d3-array/src/bisect.js","webpack://LineUpJS/./node_modules/d3-array/src/array.js","webpack://LineUpJS/./node_modules/d3-array/src/ticks.js","webpack://LineUpJS/./node_modules/d3-scale/src/init.js","webpack://LineUpJS/./node_modules/d3-scale/src/ordinal.js","webpack://LineUpJS/./node_modules/d3-scale/src/constant.js","webpack://LineUpJS/./node_modules/d3-scale/src/number.js","webpack://LineUpJS/./node_modules/d3-scale/src/continuous.js","webpack://LineUpJS/./node_modules/d3-scale/src/tickFormat.js","webpack://LineUpJS/./node_modules/d3-format/src/precisionPrefix.js","webpack://LineUpJS/./node_modules/d3-format/src/precisionRound.js","webpack://LineUpJS/./node_modules/d3-scale/src/linear.js","webpack://LineUpJS/./node_modules/d3-scale/src/nice.js","webpack://LineUpJS/./node_modules/d3-scale/src/log.js","webpack://LineUpJS/./node_modules/d3-scale/src/pow.js","webpack://LineUpJS/./node_modules/d3-time/src/interval.js","webpack://LineUpJS/./node_modules/d3-time/src/millisecond.js","webpack://LineUpJS/./node_modules/d3-time/src/duration.js","webpack://LineUpJS/./node_modules/d3-time/src/second.js","webpack://LineUpJS/./node_modules/d3-time/src/minute.js","webpack://LineUpJS/./node_modules/d3-time/src/hour.js","webpack://LineUpJS/./node_modules/d3-time/src/day.js","webpack://LineUpJS/./node_modules/d3-time/src/week.js","webpack://LineUpJS/./node_modules/d3-time/src/month.js","webpack://LineUpJS/./node_modules/d3-time/src/year.js","webpack://LineUpJS/./node_modules/d3-time/src/utcMinute.js","webpack://LineUpJS/./node_modules/d3-time/src/utcHour.js","webpack://LineUpJS/./node_modules/d3-time/src/utcDay.js","webpack://LineUpJS/./node_modules/d3-time/src/utcWeek.js","webpack://LineUpJS/./node_modules/d3-time/src/utcMonth.js","webpack://LineUpJS/./node_modules/d3-time/src/utcYear.js","webpack://LineUpJS/./node_modules/d3-time-format/src/locale.js","webpack://LineUpJS/./node_modules/d3-time-format/src/defaultLocale.js","webpack://LineUpJS/./node_modules/d3-time-format/src/isoFormat.js","webpack://LineUpJS/./node_modules/d3-time-format/src/isoParse.js","webpack://LineUpJS/./src/model/MappingFunction.ts","webpack://LineUpJS/./src/model/internalNumber.ts","webpack://LineUpJS/./src/model/NumberColumn.ts","webpack://LineUpJS/./src/model/BoxPlotColumn.ts","webpack://LineUpJS/./src/model/MapColumn.ts","webpack://LineUpJS/./src/model/CategoricalMapColumn.ts","webpack://LineUpJS/./src/model/CategoricalsColumn.ts","webpack://LineUpJS/./src/model/internalDate.ts","webpack://LineUpJS/./src/model/DateColumn.ts","webpack://LineUpJS/./src/model/DatesColumn.ts","webpack://LineUpJS/./src/model/DatesMapColumn.ts","webpack://LineUpJS/./src/model/GroupColumn.ts","webpack://LineUpJS/./src/model/HierarchyColumn.ts","webpack://LineUpJS/./src/model/ColorMappingFunction.ts","webpack://LineUpJS/./src/model/ImpositionCompositeColumn.ts","webpack://LineUpJS/./src/model/NumbersColumn.ts","webpack://LineUpJS/./src/model/ImpositionBoxPlotColumn.ts","webpack://LineUpJS/./src/model/ImpositionCompositesColumn.ts","webpack://LineUpJS/./src/model/CompositeNumberColumn.ts","webpack://LineUpJS/./src/model/ReduceColumn.ts","webpack://LineUpJS/./src/model/StackColumn.ts","webpack://LineUpJS/./src/model/MultiLevelCompositeColumn.ts","webpack://LineUpJS/./src/model/NestedColumn.ts","webpack://LineUpJS/./src/model/NumberMapColumn.ts","webpack://LineUpJS/./src/model/OrdinalColumn.ts","webpack://LineUpJS/./src/model/ScriptColumn.ts","webpack://LineUpJS/./src/model/SetColumn.ts","webpack://LineUpJS/./src/model/StringMapColumn.ts","webpack://LineUpJS/./src/model/StringsColumn.ts","webpack://LineUpJS/./src/model/LinkColumn.ts","webpack://LineUpJS/./src/model/LinkMapColumn.ts","webpack://LineUpJS/./src/model/LinksColumn.ts","webpack://LineUpJS/./node_modules/lineupengine/src/abortAble.js","webpack://LineUpJS/./src/provider/interfaces.ts","webpack://LineUpJS/./src/provider/utils.ts","webpack://LineUpJS/./src/provider/ADataProvider.ts","webpack://LineUpJS/./src/model/models.ts","webpack://LineUpJS/./src/provider/accessor.ts","webpack://LineUpJS/./src/provider/ACommonDataProvider.ts","webpack://LineUpJS/./src/provider/sort.ts","webpack://LineUpJS/./src/internal/scheduler.ts","webpack://LineUpJS/./src/provider/tasks.ts","webpack://LineUpJS/./src/provider/DirectRenderTasks.ts","webpack://LineUpJS/./src/model/IArrayColumn.ts","webpack://LineUpJS/./src/model/ICategoricalColumn.ts","webpack://LineUpJS/./src/model/IDateColumn.ts","webpack://LineUpJS/./src/provider/ScheduledTasks.ts","webpack://LineUpJS/./src/renderer/interfaces.ts","webpack://LineUpJS/./src/provider/LocalDataProvider.ts","webpack://LineUpJS/./src/constants.ts","webpack://LineUpJS/./src/styles/index.ts","webpack://LineUpJS/./src/renderer/utils.ts","webpack://LineUpJS/./src/renderer/ActionRenderer.ts","webpack://LineUpJS/./src/provider/internal.ts","webpack://LineUpJS/./src/renderer/AggregateGroupRenderer.ts","webpack://LineUpJS/./src/ui/missing.ts","webpack://LineUpJS/./src/renderer/missing.ts","webpack://LineUpJS/./src/renderer/StringCellRenderer.ts","webpack://LineUpJS/./src/renderer/AnnotationRenderer.ts","webpack://LineUpJS/./src/renderer/impose.ts","webpack://LineUpJS/./src/renderer/BarCellRenderer.ts","webpack://LineUpJS/./src/renderer/DefaultCellRenderer.ts","webpack://LineUpJS/./src/renderer/BooleanCellRenderer.ts","webpack://LineUpJS/./src/renderer/BoxplotCellRenderer.ts","webpack://LineUpJS/./src/renderer/BrightnessCellRenderer.ts","webpack://LineUpJS/./src/renderer/CategoricalCellRenderer.ts","webpack://LineUpJS/./src/renderer/CategoricalHeatmapCellRenderer.ts","webpack://LineUpJS/./src/renderer/CategoricalStackedDistributionlCellRenderer.ts","webpack://LineUpJS/./src/renderer/CircleCellRenderer.ts","webpack://LineUpJS/./src/renderer/DotCellRenderer.ts","webpack://LineUpJS/./src/renderer/GroupCellRenderer.ts","webpack://LineUpJS/./src/renderer/ANumbersCellRenderer.ts","webpack://LineUpJS/./node_modules/popper.js/dist/esm/popper.js","webpack://LineUpJS/./src/renderer/HeatmapCellRenderer.ts","webpack://LineUpJS/./src/internal/merge.ts","webpack://LineUpJS/./src/ui/dialogs/ADialog.ts","webpack://LineUpJS/./src/ui/dialogs/InputNumberDialog.ts","webpack://LineUpJS/./src/internal/drag.ts","webpack://LineUpJS/./src/renderer/histogram.ts","webpack://LineUpJS/./src/renderer/HistogramCellRenderer.ts","webpack://LineUpJS/./src/renderer/ImageCellRenderer.ts","webpack://LineUpJS/./src/renderer/AAggregatedGroupRenderer.ts","webpack://LineUpJS/./src/renderer/MultiLevelCellRenderer.ts","webpack://LineUpJS/./src/renderer/InterleavingCellRenderer.ts","webpack://LineUpJS/./src/renderer/LinkCellRenderer.ts","webpack://LineUpJS/./src/renderer/TableCellRenderer.ts","webpack://LineUpJS/./src/renderer/LinkMapCellRenderer.ts","webpack://LineUpJS/./src/renderer/LoadingCellRenderer.ts","webpack://LineUpJS/./src/renderer/MapBarCellRenderer.ts","webpack://LineUpJS/./src/renderer/RankCellRenderer.ts","webpack://LineUpJS/./src/renderer/SelectionRenderer.ts","webpack://LineUpJS/./src/renderer/SetCellRenderer.ts","webpack://LineUpJS/./src/renderer/SparklineCellRenderer.ts","webpack://LineUpJS/./src/renderer/UpSetCellRenderer.ts","webpack://LineUpJS/./src/renderer/VerticalBarCellRenderer.ts","webpack://LineUpJS/./src/renderer/DateCellRenderer.ts","webpack://LineUpJS/./src/ui/dialogs/InputDateDialog.ts","webpack://LineUpJS/./src/renderer/DateHistogramCellRenderer.ts","webpack://LineUpJS/./src/renderer/renderers.ts","webpack://LineUpJS/./src/ui/dialogs/utils.ts","webpack://LineUpJS/./src/ui/dialogs/BooleanFilterDialog.ts","webpack://LineUpJS/./src/ui/dialogs/CategoricalColorMappingDialog.ts","webpack://LineUpJS/./src/ui/dialogs/CategoricalFilterDialog.ts","webpack://LineUpJS/./src/ui/dialogs/CategoricalMappingFilterDialog.ts","webpack://LineUpJS/./src/ui/dialogs/ChangeRendererDialog.ts","webpack://LineUpJS/./src/ui/dialogs/ColorMappingDialog.ts","webpack://LineUpJS/./src/internal/dnd.ts","webpack://LineUpJS/./src/ui/dialogs/MoreColumnOptionsDialog.ts","webpack://LineUpJS/./src/ui/header.ts","webpack://LineUpJS/./src/ui/dialogs/CompositeChildrenDialog.ts","webpack://LineUpJS/./src/ui/dialogs/CutOffHierarchyDialog.ts","webpack://LineUpJS/./src/ui/dialogs/DateFilterDialog.ts","webpack://LineUpJS/./src/ui/dialogs/EditPatternDialog.ts","webpack://LineUpJS/./src/ui/dialogs/GroupDialog.ts","webpack://LineUpJS/./src/ui/dialogs/MappingLineDialog.ts","webpack://LineUpJS/./src/ui/dialogs/MappingDialog.ts","webpack://LineUpJS/./src/ui/dialogs/NumberFilterDialog.ts","webpack://LineUpJS/./src/ui/dialogs/ReduceDialog.ts","webpack://LineUpJS/./src/ui/dialogs/RenameDialog.ts","webpack://LineUpJS/./src/ui/dialogs/ScriptEditDialog.ts","webpack://LineUpJS/./src/ui/dialogs/SearchDialog.ts","webpack://LineUpJS/./src/ui/dialogs/ShowTopNDialog.ts","webpack://LineUpJS/./src/ui/dialogs/SortDialog.ts","webpack://LineUpJS/./src/ui/dialogs/StringFilterDialog.ts","webpack://LineUpJS/./src/ui/dialogs/WeightsEditDialog.ts","webpack://LineUpJS/./src/ui/toolbar.ts","webpack://LineUpJS/./src/ui/dialogs/groupNumber.ts","webpack://LineUpJS/./src/ui/dialogs/groupString.ts","webpack://LineUpJS/./src/ui/dialogs/groupDate.ts","webpack://LineUpJS/./src/config.ts","webpack://LineUpJS/./src/browser.ts","webpack://LineUpJS/./src/ui/ALineUp.ts","webpack://LineUpJS/./node_modules/lineupengine/src/animation/index.js","webpack://LineUpJS/./node_modules/lineupengine/src/animation/KeyFinder.js","webpack://LineUpJS/./node_modules/lineupengine/src/internal/scroll.js","webpack://LineUpJS/./node_modules/lineupengine/src/internal/index.js","webpack://LineUpJS/./node_modules/lineupengine/src/logic.js","webpack://LineUpJS/./node_modules/lineupengine/src/mixin/IMixin.js","webpack://LineUpJS/./node_modules/lineupengine/src/styles/index.js","webpack://LineUpJS/./node_modules/lineupengine/src/ARowRenderer.js","webpack://LineUpJS/./node_modules/lineupengine/src/style/StyleManager.js","webpack://LineUpJS/./node_modules/lineupengine/src/style/GridStyleManager.js","webpack://LineUpJS/./node_modules/lineupengine/src/table/MultiTableRowRenderer.js","webpack://LineUpJS/./src/ui/dialogs/DialogManager.ts","webpack://LineUpJS/./node_modules/lineupengine/src/mixin/PrefetchMixin.js","webpack://LineUpJS/./node_modules/lineupengine/src/table/internal/ACellAdapter.js","webpack://LineUpJS/./node_modules/lineupengine/src/table/ACellTableSection.js","webpack://LineUpJS/./src/ui/animation.ts","webpack://LineUpJS/./src/ui/RenderColumn.ts","webpack://LineUpJS/./src/ui/MultiLevelRenderColumn.ts","webpack://LineUpJS/./src/ui/interfaces.ts","webpack://LineUpJS/./src/ui/SelectionManager.ts","webpack://LineUpJS/./src/ui/EngineRanking.ts","webpack://LineUpJS/./src/ui/SlopeGraph.ts","webpack://LineUpJS/./src/ui/EngineRenderer.ts","webpack://LineUpJS/./src/ui/domElementCache.ts","webpack://LineUpJS/./src/ui/dialogs/ChooseRankingDialog.ts","webpack://LineUpJS/./src/ui/panel/SearchBox.ts","webpack://LineUpJS/./src/ui/dialogs/RenameRankingDialog.ts","webpack://LineUpJS/./src/ui/dialogs/MoreRankingOptionsDialog.ts","webpack://LineUpJS/./src/ui/dialogs/AddonDialog.ts","webpack://LineUpJS/./src/ui/panel/Hierarchy.ts","webpack://LineUpJS/./src/ui/panel/SidePanelEntryVis.ts","webpack://LineUpJS/./src/ui/panel/SidePanelRanking.ts","webpack://LineUpJS/./src/ui/panel/SidePanel.ts","webpack://LineUpJS/./src/ui/LineUp.ts","webpack://LineUpJS/./src/ui/taggle/rules.ts","webpack://LineUpJS/./src/ui/taggle/TaggleRenderer.ts","webpack://LineUpJS/./src/ui/taggle/Taggle.ts","webpack://LineUpJS/./src/builder/column/ColumnBuilder.ts","webpack://LineUpJS/./src/builder/LineUpBuilder.ts","webpack://LineUpJS/./src/builder/RankingBuilder.ts","webpack://LineUpJS/./src/builder/column/CategoricalColumnBuilder.ts","webpack://LineUpJS/./src/builder/column/NumberColumnBuilder.ts","webpack://LineUpJS/./src/builder/column/StringColumnBuilder.ts","webpack://LineUpJS/./src/builder/column/DateColumnBuilder.ts","webpack://LineUpJS/./src/builder/column/HierarchyColumnBuilder.ts","webpack://LineUpJS/./src/builder/column/ActionsColumnBuilder.ts","webpack://LineUpJS/./src/builder/column/BooleanColumnBuilder.ts","webpack://LineUpJS/./src/builder/DataBuilder.ts","webpack://LineUpJS/./src/builder/adapter/column.ts","webpack://LineUpJS/./src/builder/adapter/ranking.ts","webpack://LineUpJS/./src/builder/adapter/utils.ts","webpack://LineUpJS/./src/builder/adapter/lineup.ts","webpack://LineUpJS/./src/builder/adapter/builderAdapter.ts","webpack://LineUpJS/./src/model/index.ts","webpack://LineUpJS/./src/provider/RemoteDataProvider.ts","webpack://LineUpJS/./src/index.ts","webpack://LineUpJS/./src/bundle.ts"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","isArray","Array","keyList","keys","hasProp","equal","a","b","length","arrA","arrB","dateA","Date","dateB","getTime","regexpA","RegExp","regexpB","toString","BrowserInfo","version","os","this","NodeInfo","process","platform","BotInfo","bot","REQUIRED_VERSION_PARTS","userAgentRules","operatingSystemRules","parseUserAgent","ua","matchedRule","reduce","matched","_a","browser","regex","uaMatch","exec","match","versionParts","split","slice","concat","count","output","ii","push","createVersionParts","join","detectOS","test","getNodeVersion","detect","navigator","userAgent","Reflect","global","self","Function","exporter","makeExporter","target","previous","configurable","writable","hasOwn","supportsSymbol","toPrimitiveSymbol","toPrimitive","iteratorSymbol","iterator","supportsCreate","supportsProto","__proto__","downLevel","HashMap","MakeDictionary","has","map","undefined","functionPrototype","getPrototypeOf","usePolyfill","env","_Map","Map","entries","cacheSentinel","arraySentinel","MapIterator","values","selector","_index","_keys","_values","_selector","next","index","result","done","throw","error","return","_cacheKey","_cacheIndex","_find","set","delete","size","clear","getKey","getValue","getEntry","insert","indexOf","_","CreateMapPolyfill","_Set","Set","_map","add","Metadata","WeakMap","UUID_SIZE","rootKey","CreateUniqueKey","_key","table","GetOrCreateWeakMapTable","CreateUUID","FillRandomBytes","buffer","Math","random","data","Uint8Array","crypto","getRandomValues","msCrypto","GenRandomBytes","offset","byte","toLowerCase","CreateWeakMapPolyfill","GetOrCreateMetadataMap","O","P","Create","targetMetadata","IsUndefined","metadataMap","OrdinaryHasOwnMetadata","MetadataKey","OrdinaryGetOwnMetadata","OrdinaryDefineOwnMetadata","MetadataValue","OrdinaryOwnMetadataKeys","keysObj","obj","method","GetMethod","IsCallable","TypeError","IsObject","GetIterator","k","IteratorStep","nextValue","e","IteratorClose","Type","x","IsNull","ToPrimitive","input","PreferredType","hint","exoticToPrim","toString_1","valueOf","toString_2","OrdinaryToPrimitive","ToPropertyKey","argument","ToString","IsArray","IsConstructor","V","func","f","OrdinaryGetPrototypeOf","proto","prototypeProto","constructor","__","decorators","propertyKey","attributes","decorator","decorated","DecorateConstructor","descriptor","DecorateProperty","metadataKey","metadataValue","IsPropertyKey","OrdinaryHasMetadata","parent","OrdinaryGetMetadata","OrdinaryMetadataKeys","ownKeys","parentKeys","_i","ownKeys_1","hasKey","parentKeys_1","extendStatics","setPrototypeOf","__extends","__assign","assign","arguments","apply","__decorate","desc","getOwnPropertyDescriptor","decorate","isSeqEmpty","seq","every","isIndicesAble","it","Uint16Array","Uint32Array","Float32Array","Int8Array","Int16Array","Int32Array","Float64Array","LazyFilter","filters","_length","forEach","filter","callback","interable_LazyMap1","outer","i_1","v_1","valid","v","_b","_c","_this","some","i_2","v_2","i_3","v_3","initial","acc","j","i_4","v_4","ALazyMap","mapV","acc_1","_super","LazyMap1","map12","interable_LazyMap2","LazyMap2","map23","interable_LazyMap3","LazyMap3","map34","LazySeq","iterable","_arr","from","arr","acc_2","lazySeq","ConcatSequence","seqs","shift","MIN_WORKER_THREADS","MAX_WORKER_THREADS","max","hardwareConcurrency","WorkerTaskScheduler","blob","workers","cleanUpWorkerTimer","workerTaskCounter","cleanUpWorker","toFree","findIndex","tasks","splice","worker","terminate","finshedTask","w","Worker","refs","checkOutWorker","clearTimeout","emptyWorker","find","setTimeout","pushStats","type","args","refData","refIndices","indices","Promise","resolve","uid","receiver","msg","removeEventListener","stats","addEventListener","postMessage","transferAbles","toResult","setRef","ref","broadCast","deleteRef","startsWith","deleteRefs","getNumberOfBins","ceil","log","LN2","math_min","min","Number","POSITIVE_INFINITY","values_1","math_max","NEGATIVE_INFINITY","values_2","extent","values_3","math_empty","fill","quantile","NaN","floor","math_median","sort","pushAll","vs","boxplotBuilder","fixedLength","sum","missing","isNaN","pushAndSave","invalid","mean","whiskerHigh","whiskerLow","outlier","median","q1","q3","buildImpl","iqr","left","right","reversedOutliers","reverse","build","buildArr","normalizedStatsBuilder","numberOfBins","hist","x0","binWidth","x1","bin1","binN","low","high","center","toBin","maxBin","computeGranularity","histGranularity","getFullYear","minYear","maxYear","x0_1","getMonth","getDay","setDate","getDate","setMonth","pushDateHist","dateStatsBuilder","template","byDay","templateHist","h","categoricalStatsBuilder","categories","cat","math_round","precision","round","scale","pow","similar","delta","abs","isPromiseLike","then","createIndexArray","dataSize","toIndexArray","maxDataIndex","joinIndexArrays","groups","total","createLike","groups_1","g","math_asc","math_desc","sortComplex","comparators","c_1","asc","cLookup_1","lookup","c1_1","c1Lookup_1","c2_1","c2Lookup_1","l_1","fs_1","l_2","dateValueCache2Value","categoricalValueCache2Value","sortWorkerMain","wself","resolveRefs","msgHandlers","sortOrders","order","dateStats","categoricalStats","cats","numberStats","boxplotStats","evt","createWorkerBlob","fs","source","lastIndexOf","sources","Blob","URL","createObjectURL","equalArrays","ai","fixCSS","id","replace","node","lastChild","removeChild","arrs","arrs_1","a_1","noop","dispatch","Error","Dispatch","on","typename","types","T","trim","copy","that","src_dispatch","AEventDispatcher_suffix","suffix","prefix","ECompareValueType","AEventDispatcher","events","createEventList","listenerEvents","listeners","forwarder","fireImpl","primaryType","origin","listener","listenersChanged","Boolean","_type","_active","fire","context","forward","unforward","DEFAULT_COLOR","defaultGroup","color","othersGroup","interfaces_isGroup","item","group","isMultiLevelColumn","col","model_Column","Column","width","renderer","groupRenderer","summaryRenderer","visible","metadata","label","description","fixed","frozen","assignNewId","idGenerator","fqid","fqpath","EVENT_WIDTH_CHANGED","EVENT_LABEL_CHANGED","EVENT_METADATA_CHANGED","EVENT_VISIBILITY_CHANGED","EVENT_SUMMARY_RENDERER_TYPE_CHANGED","EVENT_RENDERER_TYPE_CHANGED","EVENT_GROUP_RENDERER_TYPE_CHANGED","EVENT_DIRTY","EVENT_DIRTY_HEADER","EVENT_DIRTY_VALUES","EVENT_DIRTY_CACHES","getWidth","hide","setVisible","show","isVisible","getVisible","flatten","_levelsToGo","_padding","setWidth","setWidthImpl","setMetaData","bak","getMetaData","sortByMe","ascending","priority","isSortingAscByDefault","findMyRanker","sortBy","groupByMe","toggleGrouping","isGroupedBy","getGroupCriteria","toggleMySorting","toggleSorting","isSortedByMeImpl","ranker","criterias","isSortedByMe","getSortCriteria","groupSortByMe","groupSortBy","toggleMyGroupSorting","toggleGroupSorting","isGroupSortedByMe","getGroupSortCriteria","removeMe","remove","attach","detach","insertAfterMe","insertAfter","dump","toDescRef","getRenderer","getGroupRenderer","getSummaryRenderer","restore","_factory","rendererType","getLabel","row","String","_row","getExportValue","format","getColor","toCompareValue","_valueCache","toCompareValueType","UINT8","toCompareGroupValue","_rows","toCompareGroupValueType","STRING","isFiltered","clearFilter","setRenderer","setDefaultRenderer","setGroupRenderer","setDefaultGroupRenderer","setSummaryRenderer","setDefaultSummaryRenderer","setDefaultWidth","markDirty","FLAT_ALL_COLUMNS","internal_AEventDispatcher","supportType","for","category","SupportType","SortByDefault","clazz","hasMetadata","ESortMethod","EAdvancedSortMethod","Categories","string","featureLevel","categorical","number","date","array","composite","support","other","annotations_categories","Category","getSortType","categoryOf","annotations_toolbar","dialogAddons","isSupportType","getMetadata","categoryOfDesc","models","isMapAbleColumn","getMapping","isNumberColumn","getNumber","isBoxPlotColumn","getBoxPlotData","isNumbersColumn","getNumbers","model_ValueColumn","ValueColumn","accessor","loaded","lazyLoaded","EVENT_DATA_LOADED","isLoaded","getRaw","setLoaded","RENDERER_LOADING","model_CompositeColumn","CompositeColumn","_children","CompositeColumn_1","EVENT_FILTER_CHANGED","EVENT_ADD_COLUMN","EVENT_MOVE_COLUMN","EVENT_REMOVE_COLUMN","levelsToGo","padding","children","child","canJustAddNumbers","insertImpl","move","old","moveImpl","oldIndex","at","moveAfter","removeImpl","src_colors","specifier","colors","category10","Accent","Dark2","Pastel1","Pastel2","Set1","Set2","Set3","extend","definition","Color","reI","reN","reP","reHex3","reHex6","reRgbInteger","reRgbPercent","reRgbaInteger","reRgbaPercent","reHslPercent","reHslaPercent","named","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","color_color","Rgb","parseInt","rgbn","rgba","hsla","rgbConvert","rgb","opacity","color_rgb","hex","Hsl","hsl","hslConvert","hsl2rgb","m1","m2","displayable","brighter","darker","deg2rad","PI","rad2deg","Xn","Yn","Zn","lab_t0","lab_t1","lab_t2","t3","labConvert","Lab","Hcl","cos","sin","z","rgb2lrgb","y","xyz2lab","lab","lab2xyz","lrgb2rgb","hclConvert","atan2","sqrt","hcl","A","B","C","D","E","ED","EB","BC_DA","cubehelix_cubehelix","Cubehelix","bl","cubehelixConvert","basis","t1","v0","v1","v2","v3","t2","cosh","sinh","constant","linear","color_hue","gamma","nogamma","exponential","src_rgb","rgbGamma","start","end","rgbSpline","spline","rgbBasis","reA","reB","cssNode","cssRoot","cssView","svgNode","src_value","am","bm","bs","bi","lastIndex","q","string_one","string_zero","setTime","nb","na","src_round","degrees","identity","translateX","translateY","rotate","skewX","scaleX","scaleY","decompose","atan","interpolateTransform","parse","pxComma","pxParen","degParen","pop","xa","ya","xb","yb","translate","document","createElement","documentElement","defaultView","style","transform","getComputedStyle","appendChild","getPropertyValue","createElementNS","setAttribute","baseVal","consolidate","matrix","SQRT2","hsl_hsl","hue","hcl_hcl","src_cubehelix_cubehelix","cubehelixGamma","cubehelix","cubehelixLong","ramp","scheme","BrBG","PRGn","PiYG","PuOr","RdBu","RdGy","RdYlBu","RdYlGn","Spectral","BuGn","BuPu","GnBu","OrRd","PuBuGn","PuBu","PuRd","RdPu","YlGnBu","YlGn","YlOrBr","YlOrRd","Blues","Greens","Greys","Purples","Reds","Oranges","sequential_multi_cubehelix","warm","cool","rainbow_c","rainbow","ts","viridis_ramp","range","viridis","magma","inferno","plasma","OrderedSet","list","addAll","console","assert","deleteAll","act","callbackfn","thisArg","patternFunction","pattern","joinGroups","parents","gparents","unshift","subGroups","duplicateGroup","clone","isGroupParent","toGroupID","groupRoots","roots","internal_OrderedSet","groups_2","internal_colors","MAX_COLORS","colorPool","mapIndices","everyIndices","forEachIndices","chooseUIntByDataLength","dataLength","UINT32","UINT16","EDirtyReason","internal_cache","model_Ranking","Ranking","sortCriteria","groupColumns","groupSortCriteria","columns","dirtyOrder","reason","EVENT_DIRTY_ORDER","dirtyOrderSortDirty","SORT_CRITERIA_DIRTY","dirtyOrderGroupDirty","GROUP_CRITERIA_DIRTY","dirtyOrderGroupSortDirty","GROUP_SORT_CRITERIA_DIRTY","dirtyOrderFiltering","FILTER_CHANGED","index2pos","EVENT_GROUPS_CHANGED","EVENT_GROUP_CRITERIA_CHANGED","EVENT_GROUP_SORT_CRITERIA_CHANGED","EVENT_COLUMN_VISIBILITY_CHANGED","EVENT_SORT_CRITERIA_CHANGED","EVENT_ORDER_CHANGED","setLabel","setGroups","dirtyReason","oldGroups","unifyGroups","offsets","subarray","subs","gi","roots_1","getRank","dataIndex","getOrder","getOrderLength","getGroups","sortColumn","help","setGroupCriteria","restoreSortCriteria","dumped","setSortCriteria","setGroupSortCriteria","getPrimarySortCriteria","toggleSortingLogic","newSort","current","defaultAsc","newGroupings","hierarchyLogic","entry","groupBy","equalCriteria","COLUMN_SORT_DIRTY","triggerResort","column","cols","groupColumn","COLUMN_GROUP_DIRTY","COLUMN_GROUP_SORT_DIRTY","triggerGroupResort","sortCriterias","bakMulti","FORWARD_COLUMN_EVENTS","oldValue","newValue","reference","findByPath","isSortCriteria","sortCriteriaChanged","isGroupSortCriteria","groupSortCriteriaChanged","newGrouping","isGroupColumn","removed","idOrFilter","r_1","flatColumns","clearFilters","debounce","timeToDelay","choose","tm","ctx","createRankDesc","EAggregationState","model_RankColumn","RankColumn","ranking","createAggregateDesc","model_AggregateGroupColumn","AggregateGroupColumn","AggregateGroupColumn_1","EVENT_AGGREGATE","isAggregated","setAggregated","EXPAND","COLLAPSE","createSelectionDesc","model_SelectionColumn","SelectionColumn","SelectionColumn_1","EVENT_SELECT","setValue","setImpl","setValues","rows","setterAll","setter","toggleValue","BINARY","isSelected","SELECTED_GROUP","NOT_SELECTED_GROUP","createActionDesc","actions","groupActions","model_ActionColumn","ActionColumn","compare","isMissingValue","isUnknown","EAlignment","FIRST_IS_NAN","FIRST_IS_MISSING","missingGroup","fast_deep_equal","model_StringColumn","StringColumn","currentFilter","currentGroupCriteria","alignment","escape","StringColumn_1","EVENT_GROUPING_CHANGED","groupCriteria","FILTER_MISSING","getFilter","setFilter","was","criteria","model_AnnotateColumn","AnnotateColumn","annotations","EVENT_VALUE_CHANGED","DEFAULT_CATEGORICAL_COLOR_FUNCTION","toJSON","eq","ReplacmentColorMappingFunction","restoreCategoricalColorMapping","toCategory","nextColor","COMPARE_CATEGORY_VALUE_TYPES","FLOAT_ASC","toGroupCompareCategoryValue","valueCache","mostFrequent","topCat","topCount","findMostFrequent","getCategory","COMPARE_GROUP_CATEGORY_VALUE_TYPES","FLOAT","COUNT","compareCategory","aNull","bNull","localeCompare","toCategories","isEmptyFilter","filterMissing","isCategoryIncluded","filterObj","includes","model_CategoricalColumn","CategoricalColumn","colorMapping","CategoricalColumn_1","EVENT_COLOR_MAPPING_CHANGED","getCategories","getValues","getLabels","getMap","getMapLabel","getSet","iterCategory","categoricalColorMappingFunction","getColorMapping","setColorMapping","mapping","al","arrayEquals","_group","model_BooleanColumn","BooleanColumn","trueMarker","BooleanColumn_1","GROUP_TRUE","GROUP_FALSE","enabled","model_ArrayColumn","ArrayColumn","_dataLength","originalLabels","labels","_d","model_BooleansColumn","BooleansColumn","getColors","formatDecimal","toExponential","coefficient","src_exponent","re","formatSpecifier","FormatSpecifier","align","sign","symbol","zero","comma","prefixExponent","defaultLocale_locale","defaultLocale_format","defaultLocale_formatPrefix","formatTrim","out","i1","i0","formatRounded","exponent","formatTypes","%","toFixed","toPrecision","X","toUpperCase","src_identity","prefixes","locale","grouping","thousands","substring","currency","decimal","numerals","formatNumerals","percent","newFormat","formatType","maybeSuffix","valuePrefix","valueSuffix","valueNegative","charCodeAt","Infinity","formatPrefix","src_locale","src_ascending","bisector","lo","hi","mid","ascendingBisect","bisectRight","bisect","array_array","e10","e5","e2","ticks","stop","step","tickIncrement","isFinite","power","LN10","tickStep","step0","step1","initRange","domain","d3_scale_src_constant","d3_scale_src_number","continuous_unit","continuous_identity","normalize","clamper","bimap","interpolate","d0","d1","r0","r1","polymap","continuous_copy","clamp","unknown","transformer","untransform","piecewise","rescale","invert","rangeRound","u","continuous","src_tickFormat","precisionPrefix","precisionRound","precisionFixed","linearish","tickFormat","nice","linear_linear","interval","transformLog","transformExp","exp","transformLogn","transformExpn","pow10","reflect","loggish","logs","pows","base","log10","log2","logp","powp","transformPow","transformSqrt","transformSquare","powish","interval_t0","interval_t1","newInterval","floori","offseti","field","millisecond_millisecond","durationMinute","durationWeek","second_second","getMilliseconds","getUTCSeconds","src_second","minute_minute","getSeconds","getMinutes","src_minute","hour_hour","getHours","src_hour","day_day","setHours","getTimezoneOffset","src_day","weekday","sunday","monday","tuesday","wednesday","thursday","friday","saturday","month_month","src_month","year_year","setFullYear","src_year","utcMinute","setUTCSeconds","getUTCMinutes","utcHour","setUTCMinutes","getUTCHours","utcDay","setUTCHours","setUTCDate","getUTCDate","src_utcDay","utcWeekday","getUTCDay","utcSunday","utcMonday","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","utcMonth","setUTCMonth","getUTCMonth","getUTCFullYear","utcYear","setUTCFullYear","src_utcYear","localDate","H","M","S","L","utcDate","UTC","newYear","src_defaultLocale_locale","timeFormat","timeParse","utcFormat","utcParse","pads","-","0","numberRe","percentRe","requoteRe","locale_pad","requote","formatRe","names","formatLookup","parseWeekdayNumberSunday","parseWeekdayNumberMonday","parseWeekNumberSunday","U","parseWeekNumberISO","parseWeekNumberMonday","W","parseFullYear","parseYear","parseZone","Z","parseMonthNumber","parseDayOfMonth","parseDayOfYear","parseHour24","parseMinutes","parseSeconds","parseMilliseconds","parseMicroseconds","parseLiteralPercent","parseUnixTimestamp","Q","parseUnixTimestampSeconds","formatDayOfMonth","formatHour24","formatHour12","formatDayOfYear","formatMilliseconds","formatMicroseconds","formatMonthNumber","formatMinutes","formatSeconds","formatWeekdayNumberMonday","day","formatWeekNumberSunday","formatWeekNumberISO","formatWeekdayNumberSunday","formatWeekNumberMonday","locale_formatYear","formatFullYear","formatZone","formatUTCDayOfMonth","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","getUTCMilliseconds","formatUTCMicroseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekdayNumberMonday","dow","formatUTCWeekNumberSunday","formatUTCWeekNumberISO","formatUTCWeekdayNumberSunday","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","formatLiteralPercent","formatUnixTimestamp","formatUnixTimestampSeconds","locale_dateTime","dateTime","locale_date","locale_time","time","locale_periods","periods","locale_weekdays","days","locale_shortWeekdays","shortDays","locale_months","months","locale_shortMonths","shortMonths","periodRe","periodLookup","weekdayRe","weekdayLookup","shortWeekdayRe","shortWeekdayLookup","monthRe","monthLookup","shortMonthRe","shortMonthLookup","formats","I","Y","utcFormats","parses","parseSpecifier","pad","charAt","newParse","newDate","week","formatLocale","defaultLocale_defaultLocale","toISOString","toScale","MappingFunction_isSame","fixDomain","ScaleMappingFunction","getRange","ScriptMappingFunction","code","value_min","value_max","value_range","value_domain","mi","ma","restoreMapping","mappingFunction","DEFAULT_FORMATTER","toCompareBoxPlotValue","getSortMethod","getBoxPlotNumber","getRawBoxPlotData","numberCompare","aMissing","bMissing","isEqualNumberFilter","isNumberIncluded","isDummyNumberFilter","restoreNumberFilter","model_NumberColumn","NumberColumn","numberFormat","currentGroupThresholds","groupSortMethod","original","colorMappingFunction","getNumberFormat","stratifyThreshholds","stratifyThresholds","NumberColumn_1","EVENT_MAPPING_CHANGED","EVENT_SORTMETHOD_CHANGED","raw","getRawValue","iterNumber","iterRawNumber","getRawNumber","sortMethod","getOriginalMapping","setMapping","getGroupThresholds","setGroupThresholds","threshold","treshholdIndex","setSortMethod","model_BoxPlotColumn","BoxPlotColumn","BoxPlotColumn_1","model_MapColumn","MapColumn","byKey","toKeyValue","model_CategoricalMapColumn","CategoricalMapColumn","CategoricalMapColumn_1","parseValue","getCategoryMap","model_CategoricalsColumn","CategoricalsColumn","CategoricalsColumn_1","shiftFilterDateDay","setMinutes","setSeconds","setMilliseconds","toDateGroup","grouper","granularity","centuryP","circular","century","decadeP","decade","year","chooseAggregatedDate","dates","trueMedian","EDateSort","model_DateColumn","DateColumn","currentGrouper","dateFormat","DateColumn_1","DEFAULT_DATE_FORMAT","dateParse","getFormatter","iterDate","DOUBLE_ASC","getDateGrouper","setDateGrouper","model_DatesColumn","DatesColumn","DatesColumn_1","getDates","av","DatesColumn_compute","EGroupSortMethod","model_DatesMapColumn","DatesMapColumn","DatesMapColumn_1","getDateMap","createGroupDesc","model_GroupColumn","GroupColumn","GroupColumn_1","model_HierarchyColumn","HierarchyColumn","currentMaxDepth","currentLeaves","currentLeavesNameCache","currentLeavesPathCache","hierarchySeparator","hierarchy","initHierarchy","currentNode","computeLeaves","updateCaches","path_1","path","HierarchyColumn_1","EVENT_CUTOFF_CHANGED","maxDepth","cutOffNode","act_1","getCutOff","setCutOff","leaves","visit","depth","resolveInnerNodes","queue","isHierarchical","deriveHierarchy","ColorMappingFunction_SequentialColorFunction","SequentialColorFunction","FUNCTIONS","interpolateBlues","interpolateGreens","interpolateGreys","interpolateOranges","interpolatePurples","interpolateReds","interpolateCool","interpolateCubehelixDefault","interpolateWarm","interpolatePlasma","interpolateMagma","interpolateViridis","interpolateInferno","interpolateYlOrRd","interpolateYlOrBr","interpolateBuGn","interpolateBuPu","interpolateGnBu","interpolateOrRd","interpolatePuBuGn","interpolatePuBu","interpolatePuRd","interpolateRdPu","interpolateYlGnBu","interpolateYlGn","interpolateRainbow","ColorMappingFunction_DivergentColorFunction","DivergentColorFunction","interpolateBrBG","interpolatePRGn","interpolatePiYG","interpolatePuOr","interpolateRdBu","interpolateRdGy","interpolateRdYlBu","interpolateRdYlGn","interpolateSpectral","UnknownColorFunction","SolidColorFunction","QuantizedColorFunction","steps","perStep","ColorMappingFunction_quantize","ColorMappingFunction_CustomColorMappingFunction","CustomColorMappingFunction","DEFAULT_COLOR_FUNCTION","createImpositionDesc","model_ImpositionCompositeColumn","ImpositionCompositeColumn","wrapper","rest","ImpositionCompositeColumn_1","model_NumbersColumn","NumbersColumn","getRawNumbers","data_1","data_2","NumbersColumn_1","CENTER","createImpositionBoxPlotDesc","model_ImpositionBoxPlotColumn","ImpositionBoxPlotColumn","ImpositionBoxPlotColumn_1","createImpositionsDesc","model_ImpositionCompositesColumn","ImpositionCompositesColumn","ImpositionCompositesColumn_1","model_CompositeNumberColumn","CompositeNumberColumn","compute","createReduceDesc","model_ReduceColumn","ReduceColumn","selected","ReduceColumn_1","EVENT_REDUCE_CHANGED","getReduce","setReduce","createStackDesc","model_StackColumn","StackColumn","collapsed","adaptChange","adaptWidthChange","weights","getWeights","StackColumn_1","EVENT_COLLAPSE_CHANGED","EVENT_WEIGHTS_CHANGED","EVENT_MULTI_LEVEL_CHANGED","setCollapsed","getCollapsed","weight","full","oldWeight","factor","widths","guess","setWeights","COLLAPSED_RENDERER","model_MultiLevelCompositeColumn","MultiLevelCompositeColumn","MultiLevelCompositeColumn_1","createNestedDesc","NestedColumn","model_NumberMapColumn","NumberMapColumn","NumberMapColumn_1","model_OrdinalColumn","OrdinalColumn","OrdinalColumn_1","DEFAULT_SCRIPT","createScriptDesc","script","ColumnWrapper","ScriptColumn_LazyColumnWrapper","LazyColumnWrapper","ColumnContext","allFactory","_all","byName","byID","byIndex","model_ScriptColumn","ScriptColumn","ScriptColumn_1","EVENT_SCRIPT_CHANGED","setScript","getScript","clean","raws","model_SetColumn","SetColumn","separator","SetColumn_1","getSortedSet","sv","cardinality","model_StringMapColumn","StringMapColumn","getMapValue","model_StringsColumn","StringsColumn","model_LinkColumn","LinkColumn","patternTemplates","setPattern","LinkColumn_1","EVENT_PATTERN_CHANGED","getPattern","getLink","href","transformValue","alt","model_LinkMapColumn","LinkMapColumn","getLinkMap","model_LinksColumn","LinksColumn","LinksColumn_1","getLinks","abortAble_isPromiseLike","ABORTED","thenFactory","loader","isAborted","abort","onfulfilled","_onrejected","loadedOrAborted","res","abortAble_abortAble","aborted","aborter","race","abortAbleAll","all","isAbortAble","abortAble","isAsyncUpdate","update","ready","SCHEMA_REF","cleanCategories","isEmpty","deriveBaseType","options","warn","datePattern","treatAsCategorical","categoricalThreshold","deriveType","primitive","cats_1","value_1","vi","first","mapAll","vii","sameLength","hasDifferentSizes","vi_1","p_1","deriveColumnDescriptions","config","math_range","existing","exclude","selectColumns","foundRow","toLabel","deriveColors","exportRanking","opts","newline","header","quote","quoteChar","verboseColumnHeaders","rangeSelection","provider","rankingId","relIndex","ctrlKey","getRankings","selection","getSelection","nearest","distance","setSelection","toDirtyReason","UNKNOWN","SORT_CRITERIA_CHANGED","GROUP_CRITERIA_CHANGED","GROUP_SORT_CRITERIA_CHANGED","mergeDirtyOrderContext","currentReason","nextReason","combined","nextReason_1","provider_ADataProvider","ADataProvider","rankings","aggregations","columnTypes","colorMappingFunctionTypes","mappingFunctionTypes","singleSelection","showTopN","aggregationStrategy","aggregate","annotate","boolean","booleans","boxplot","categoricalMap","categoricals","dateMap","imposition","impositionBoxPlot","impositions","nested","model_NestedColumn","numbers","numberMap","ordinal","rank","stack","stringMap","strings","link","linkMap","links","quantized","custom","colorMappingFunctions","pow1.1","pow2","pow3","typeFactory","createTypeFactory","fromDescRef","fixDesc","typeName","createColorMappingFunction","EVENT_DATA_CHANGED","EVENT_BUSY","EVENT_SHOWTOPN_CHANGED","EVENT_ADD_RANKING","EVENT_REMOVE_RANKING","EVENT_SELECTION_CHANGED","EVENT_ADD_DESC","EVENT_CLEAR_DESC","EVENT_JUMP_TO_NEAREST","EVENT_GROUP_AGGREGATION_CHANGED","pushRanking","cloneRanking","insertRanking","fireBusy","busy","takeSnapshot","hasString","hasColumn","toClone","FORWARD_RANKING_EVENTS","triggerReorder","paths","removeDuplicates","level","real","unifyParents","initAggregateState","removeRanking","cleanUpRanking","clearRankings","getFirstRanking","getLastRanking","ensureOneRanking","destroy","_ranking","nextId","select","deselect","selectAll","deselectAll","getAggregationState","setAggregationState","cleanDesc","dumpColumn","restoreColumn","$schema","descRef","restoreRanking","object2Map","deriveDefault","addSupportType","getColumns","getTopNAggregated","EXPAND_TOP_N","setTopNAggregated","unaggregateParents","getAggregationStrategy","aggregateAllOf","aggregateAll","getShowTopN","setShowTopN","jumpToNearest","selectAllOf","clearSelection","toggleSelection","additional","selectedRows","view","exportTable","isComplexAccessor","rowComplexGetter","rowGetter","rowGuessGetter","injectAccessor","provider_ACommonDataProvider","ACommonDataProvider","rankingIndex","nextRankingId","pushDesc","clearColumns","findDesc","missingBinary","missingUInt16","missingUInt32","missingInt8","missingInt16","missingInt32","missingFloat","missingFloatAsc","missingString","toCompareLookUp","rawLength","INT8","INT16","INT32","DOUBLE","createSetter","missingCount","sort_CompareLookup","CompareLookup","isSorting","valueCaches","chooseMissingByLength","ri","pushValues","free","ANOTHER_ROUND","oneShotIterator","calc","scheduler_thenFactory","wrappee","onrejected","TaskScheduler","taskId","runTasks","deadline","task","didTimeout","timeRemaining","requestAnimationFrame","reSchedule","ww","requestIdleCallback","pushMulti","abortOrDummy","isAbortedOrDummy","abortAll","abort_1","clearIdleCallback","TaskNow","onfullfilled","taskNow","TaskLater","taskLater","tasksAll","tasks_MultiIndices","MultiIndices","_joined","tasks_ARenderTasks","ARenderTasks","valueCacheData","byOrder","byOrderAcc","builder","orders","currentChunkSize","chunkCounter","actOrder","builderForEach","numberStatsBuilder","key_1","dacc","vs_1","setValueCacheData","cache_1","vs_2","cache","dateValueCacheBuilder","cache_2","vs_3","name2index","categoricalValueCacheBuilder","cache_3","dirtyColumn","sortDirect","lookups","DirectRenderTasks_DirectRenderTasks","DirectRenderTasks","setData","dirtyRanking","preCompute","preComputeData","preComputeCol","copyData2Summary","copyCache","fromPrefix","tkey","_singleCall","groupCompare","rg","rg_1","groupRows","_col","groupExampleRows","groupBoxPlotStats","summaryBoxPlotStatsD","summary","groupNumberStats","summaryNumberStatsD","groupCategoricalStats","summaryCategoricalStatsD","groupDateStats","summaryDateStatsD","summaryBoxPlotStats","summaryNumberStats","summaryCategoricalStats","summaryDateStats","cached","dataNumberStats","dataBoxPlotStats","dataCategoricalStats","dataDateStats","creator","dontCache","isMapColumn","endsWith","isArrayColumn","isCategoricalLikeColumn","isSetColumn","isCategoricalColumn","isCategoricalsColumn","isCategory","isDateColumn","isDatesColumn","ERenderMode","ScheduledTasks_ScheduleRenderTasks","ScheduleRenderTasks","scheduler","checker","this_1","cols_1","ogroups","cols_3","ogroups_1","ogroups_2","_e","ogroups_3","multi","cols_2","chainCopy","chain","joined","canAbort","isValidCacheEntry","subTask","created","subTask_1","valueCacheKey","singleCall","indexArray","toTransfer","LocalDataProvider","_data","ooptions","filterGlobally","jumpToSearchResult","taskExecutor","mapToDataRow","_dataRows","toRows","reorderAll","getTotalNumberOfRows","getTaskExecutor","dataChanged","clearData","appendData","trackRanking","addKey","removeKey","removeCol","addCol","resolveFilter","noSorting","createSorter","needsFiltering","needsGrouping","needsSorting","groupOrder","pushGroup","groupKey","groupCaches","filterCaches","toGroup","fc","before","sortGroup","groupLookup","singleGroup","sortTask","groupSortTask","groupC","sortGroups","groupIndices","reasons","needsGroupSorting","isSortedBy","isGroupedSortedBy","sortedGroups","viewRaw","viewRawRows","getRow","mappingSample","searchAndJump","search","DENSE_HISTOGRAM","MIN_LABEL_WIDTH","HOVER_DELAY_SHOW_DETAIL","styles","getStyle","defaultValue","COLUMN_PADDING","FILTERED_OPACITY","parseFloat","DASH","height","UPSET","inactive","DOT","BOX_PLOT","box","stroke","AGGREGATE","strokeWidth","levelOffset","levelWidth","SLOPEGRAPH_WIDTH","CANVAS_HEIGHT","CSS_PREFIX","ENGINE_CSS_PREFIX","cssClass","engineCssClass","aria","text","utils_noop","noRenderer","setText","textContent","querySelectorAll","forEachChild","matchColumns","childElementCount","dataset","columnId","rendererId","idsAndRenderer","idAndRenderer","cnode","querySelector","asElement","classList","innerHTML","children_1","wideEnough","adaptColorCache","adaptTextColorToBgColor","bgColor","uniqueId","idCounter","NUM_EXAMPLE_VALUES","exampleText","examples","multiLevelGridCSSClass","idPrefix","utils_colorOf","ActionRenderer","title","canRender","SUMMARY","className","icon","ni","onclick","event","preventDefault","stopPropagation","action","createGroup","createSummary","isAlwaysShowingGroupStrategy","strategy","toItemMeta","relativeIndex","topN","groupParents","meta","prev","prevMeta","groupEndLevel","topNGetter","last","isSummaryGroup","matchNodes","addTopN","doc","ownerDocument","renderGroups","isRow","isLeafGroup","alwaysShowGroup","isSummary","hasTopN","hasTopNStrategy","lastParent","state","isLastGroup","toggle","isCollapsed","isFirst","isShowAll","childTopN","nextState","isDummyGroup","AggregateGroupRenderer","render","fillStyle","fillRect","filterMissingText","filterMissingMarkup","bakMissing","filterMissingNumberMarkup","findFilterMissing","getElementsByClassName","previousElementSibling","updateFilterMissingNumberMarkup","element","getElementsByTagName","disabled","lastElementChild","renderMissingValue","dashX","dashY","renderMissingDOM","renderMissingCanvas","StringCellRenderer","interactiveSummary","form","isRegex","checked","onchange","onsubmit","actCol","_context","interactive","StringCellRenderer_toString","AnnotationRenderer","firstElementChild","renderer_StringCellRenderer","impose_colorOf","imposer","valueHint","BarCellRenderer","renderValue","CELL","colWidth","bar","backgroundColor","adapt","innerText","span","adaptDynamicColorToBgColor","DefaultCellRenderer_DefaultCellRenderer","DefaultCellRenderer","groupTitle","summaryTitle","_mode","BooleanCellRenderer","BOXPLOT","MAPPED_BOXPLOT","BoxplotCellRenderer","sortedByMe","renderDOMBoxPlot","topPadding","strokeStyle","beginPath","rect","bottomPos","middlePos","moveTo","lineTo","renderBoxPlot","_interactive","range_1","hasRange","computeLabel","whiskers","nextElementSibling","leftWhisker","rightWhisker","display","outliers","numOutliers","insertAdjacentElement","toHeatMapColor","valueColor","BrightnessCellRenderer","CategoricalCellRenderer","CategoricalCellRenderer_hist","filterUpdate","interactiveHist","staticSummary","showLabels","bins","gHist","inner","gCount","relY","background","inner_1","markFilter","bin","included","contained","parentElement","CategoricalHeatmapCellRenderer","createContext","cellDimension","mover","offsetX","getContext","canvas","clearRect","onmousemove","onmouseleave","maps","toMostFrequentCategoricals","templateRows","labels_1","CategoricalStackedDistributionlCellRenderer","stackedBar","CategoricalStackedDistributionlCellRenderer_interactiveSummary","CategoricalStackedDistributionlCellRenderer_staticSummary","selectedCol","gBins","flexGrow","total_1","CircleCellRenderer","DotCellRenderer","getCanvasRenderer","pi2","radius","save","globalAlpha","arc","getDOMRenderer","dots","tmp","top","formatter","seq1","seq2","concatSeq","GroupCellRenderer_isDummyGroup","GroupCellRenderer","_ctx","ANumbersCellRenderer_ANumbersCellRenderer","ANumbersCellRenderer","normalized","bbn_1","bbr_1","templateRow","HeatmapCellRenderer","_hist","isBrowser","longerTimeoutBrowsers","timeoutDuration","popper_i","popper_debounce","fn","called","scheduled","isFunction","functionToCheck","getStyleComputedProperty","nodeType","css","getParentNode","nodeName","parentNode","host","getScrollParent","body","_getStyleComputedProp","overflow","overflowX","overflowY","isIE11","MSInputMethodContext","documentMode","isIE10","isIE","getOffsetParent","noOffsetParent","offsetParent","getRoot","findCommonOffsetParent","element1","element2","compareDocumentPosition","Node","DOCUMENT_POSITION_FOLLOWING","createRange","setStart","setEnd","commonAncestorContainer","contains","element1root","getScroll","upperSide","html","scrollingElement","getBordersSize","axis","sideA","sideB","getSize","computedStyle","getWindowSizes","classCallCheck","instance","Constructor","createClass","defineProperties","props","protoProps","staticProps","_extends","getClientRect","bottom","getBoundingClientRect","scrollTop","scrollLeft","sizes","clientWidth","clientHeight","horizScrollbar","offsetWidth","vertScrollbar","offsetHeight","getOffsetRectRelativeToArbitraryNode","fixedPosition","isHTML","childrenRect","parentRect","scrollParent","borderTopWidth","borderLeftWidth","marginTop","marginLeft","subtract","modifier","includeScroll","getFixedPositionOffsetParent","el","getBoundaries","popper","boundariesElement","boundaries","excludeScroll","relativeOffset","innerWidth","innerHeight","getViewportOffsetRectRelativeToArtbitraryNode","boundariesNode","isFixed","_getWindowSizes","isPaddingNumber","computeAutoPlacement","placement","refRect","rects","sortedAreas","area","_ref","filteredAreas","_ref2","computedPlacement","variation","getReferenceOffsets","getOuterSizes","marginBottom","marginRight","getOppositePlacement","hash","getPopperOffsets","referenceOffsets","popperRect","popperOffsets","isHoriz","mainSide","secondarySide","measurement","secondaryMeasurement","check","runModifiers","modifiers","ends","prop","cur","isModifierEnabled","modifierName","getSupportedPropertyName","upperProp","toCheck","getWindow","setupEventListeners","updateBound","passive","scrollElement","attachToScrollParents","scrollParents","isBody","eventsEnabled","disableEventListeners","cancelAnimationFrame","scheduleUpdate","isNumeric","setStyles","unit","isFirefox","isModifierRequired","requestingName","requestedName","requesting","isRequired","_requesting","requested","placements","validPlacements","clockwise","counter","BEHAVIORS","FLIP","CLOCKWISE","COUNTERCLOCKWISE","parseOffset","basePlacement","useHeight","fragments","frag","divider","splitRegex","ops","op","mergeWithPrevious","str","toValue","index2","Defaults","positionFixed","removeOnDestroy","onCreate","onUpdate","shiftvariation","_data$offsets","isVertical","side","shiftOffsets","preventOverflow","transformProp","popperStyles","primary","escapeWithReference","secondary","keepTogether","opSide","arrow","_data$offsets$arrow","arrowElement","len","sideCapitalized","altSide","arrowElementSize","popperMarginSide","popperBorderSide","sideValue","flip","flipped","originalPlacement","placementOpposite","flipOrder","behavior","refOffsets","overlapsRef","overflowsLeft","overflowsRight","overflowsTop","overflowsBottom","overflowsBoundaries","flippedVariationByRef","flipVariations","flippedVariationByContent","flipVariationsByContent","flippedVariation","getOppositeVariation","subtractLength","bound","computeStyle","legacyGpuAccelerationOption","gpuAcceleration","offsetParentRect","position","shouldRound","noRound","referenceWidth","popperWidth","isVariation","horizontalToInteger","verticalToInteger","getRoundedOffsets","devicePixelRatio","prefixedProperty","willChange","invertTop","invertLeft","x-placement","arrowStyles","applyStyle","removeAttribute","onLoad","modifierOptions","Popper","isDestroyed","isCreated","jquery","enableEventListeners","Utils","PopperUtils","TYPE_OBJECT","merge_merge","bKeys","bKeys_1","dialogContext","attachment","currentTarget","manager","dialogManager","dialogs_ADialog","ADialog","dialog","fullDialog","resetPossible","toggleDialog","equals","appendDialogButtons","insertAdjacentHTML","open","removeLike","closest","auto","focus","reset","checkValidity","submit","cancel","findInput","InputNumberDialog","ioptions","valueAsNumber","dragHandle","handle","container","onStart","onDrag","onEnd","minDelta","toContainerRelative","elem","clientLeft","handleShift","mouseMove","clientX","mouseUp","onmousedown","filteredColor","histogramTemplate","guessedBins","histogramUpdate","unfiltered","colorOf","nodes","matchBins","mappingHintTemplate","mappingHintUpdate","filteredHistTemplate","filterMin","filterMax","initFilter","minHint","maxHint","minValue","unpercent","maxValue","shiftKey","edit","button","px","HistogramCellRenderer","getHistDOMRenderer","n_1","HistogramCellRenderer_staticSummary","updateFilter","fContext","dialogCtx","dialogs_InputNumberDialog","createFilterContext","createFilterInfo","HistogramCellRenderer_interactiveSummary","ImageCellRenderer","backgroundImage","src","image","Image","onload","AAggregatedGroupRenderer_AAggregatedGroupRenderer","AAggregatedGroupRenderer","single","aggregatedIndex","createData","stacked","GROUP","MultiLevelCellRenderer","toWait","missingWeight","ci","gridColumnStart","stackShift","col_1","cr","callbacks","sorted","medianIndex","InterleavingCellRenderer","rr","summaries","grouped","sample","dummyBin","groupedHist","LinkCellRenderer","TableCellRenderer","createFixed","example","createFixedGroup","groupByKey","LinkMapCellRenderer","arr_1","LoadingCellRenderer","MapBarCellRenderer","RankCellRenderer","fromTSpan","toTSpan","SelectionRenderer","unselected","unchecked","SetCellRenderer","createDOMContext","categories_1","posx","wideEnoughCat","categories_2","SparklineCellRenderer_line","moveNext","SparklineCellRenderer","yPos","repeat","matchRows","UpSetCellRenderer","calculateSetPath","catindexes","line","hasTrueValues","VerticalBarCellRenderer","one","xpos","DateCellRenderer","chosen","InputDateDialog","valueAsDate","DateHistogramCellRenderer","DateHistogramCellRenderer_getHistDOMRenderer","dummyDomain","DateHistogramCellRenderer_createFilterContext","DateHistogramCellRenderer_createFilterInfo","now","DateHistogramCellRenderer_interactiveSummary","DateHistogramCellRenderer_staticSummary","dialogs_InputDateDialog","defaultCellRenderer","renderers_renderers","renderer_ActionRenderer","renderer_AggregateGroupRenderer","renderer_AnnotationRenderer","renderer_BooleanCellRenderer","renderer_BoxplotCellRenderer","brightness","renderer_BrightnessCellRenderer","catdistributionbar","renderer_CategoricalStackedDistributionlCellRenderer","renderer_CategoricalCellRenderer","circle","renderer_CircleCellRenderer","renderer_DateCellRenderer","default","dot","renderer_DotCellRenderer","renderer_GroupCellRenderer","heatmap","renderer_HeatmapCellRenderer","catheatmap","renderer_CategoricalHeatmapCellRenderer","histogram","renderer_HistogramCellRenderer","datehistogram","renderer_DateHistogramCellRenderer","renderer_ImageCellRenderer","interleaving","renderer_InterleavingCellRenderer","renderer_LinkCellRenderer","renderer_LinkMapCellRenderer","loading","renderer_LoadingCellRenderer","renderer_MultiLevelCellRenderer","renderer_BarCellRenderer","mapbars","renderer_MapBarCellRenderer","renderer_RankCellRenderer","renderer_SelectionRenderer","renderer_SetCellRenderer","sparkline","renderer_SparklineCellRenderer","renderer_TableCellRenderer","upset","renderer_UpSetCellRenderer","verticalbar","renderer_VerticalBarCellRenderer","updateFilterState","filtered","active","sortMethods","methods","BooleanFilterDialog","isTrue","isFalse","sets","schemeCategory10","schemeAccent","schemeDark2","schemePastel1","schemePastel2","schemeSet1","schemeSet2","schemeSet3","CategoricalColorMappingDialog","CategoricalFilterDialog","noFilter","CategoricalMappingFilterDialog","joint","oninput","items","ChangeRendererDialog","currentGroup","currentSummary","getPossibleRenderer","ColorMappingDialog","refColor_1","colorsets_1","gradient","isCustom","continuouos","toggles","toggles_2","toggles_1","customs","updateColor","customs_1","s0","s1","dm1","toColor","updateSelectedColor","updateGradients","steppedGradient","di","stepSize","half","hasDnDType","typesToCheck","available","dataTransfer","dndTransferStorage","isEdgeDnD","updateDropEffect","dT","effectAllowed","copyDnD","dropEffect","dropAble","mimeTypes","onDrop","onDragOver","canDrop","effect","getData","mime","MoreColumnOptionsDialog","addIcon","addIconDOM","getToolbar","shortcut","createToolbarMenuItems","updateIconState","createHeader","dragAble","mergeDropAble","rearrangeAble","resizeable","extraPrefix","extra","createShortcutMenuItems","toggleToolbarIcons","dragAbleColumn","resolveDrop","MIMETYPE_PREFIX","alternative","JSON","pushChild","mergeImpl","mergeWith","numberish","draginfo","toInsertParent","rearrangeDropAble","ueberElement","dragWidth","updateHeader","minWidth","colId","typeCat","groupedBy","actionCSSClass","showLabel","featureCategory","setHighlightColumn","onClick","willAutoHide","toolbar","shortcuts","hybrids","moreEntries","dialogs_MoreColumnOptionsDialog","defaultVisibleClientWidth","rotated","scrollWidth","toggleRotatedHeader","availableWidth","shortCuts","moreIcon","needMore","actions_1","onDragStart","draggable","payload","over","stringify","text/plain","CompositeChildrenDialog","substr","createChildren","summaryNode","CutOffHierarchyDialog","innerNodes","innerNodePaths","setCustomValidity","newNode","newNodeIndex","maxDepthText","DateFilterDialog","to","EditPatternDialog","templates","GroupDialog","addons","getToolbarDialogAddons","addon","append","updateDisabled","disable","trigger","priority_1","sortOrder","MappingLineDialog_clamp","MappingLineDialog_MappingLineDialog","MappingLineDialog","adapter","unnormalizeRaw","normalizeRaw","MappingLineDialog_MappingLine","MappingLine","beforeDomain_1","beforeRange_1","shiftDomain_1","shiftRange_1","normalize_1","common","updated","destroyed","MappingDialog","mappingLines","mappingAdapter","updateLines","computeScale","rawDomain","scaleType","others","bb","textarea_1","copyMapping","createMappings","scaleType_1","selectedIndex","applyMapping","getAttribute","newScale","NumberFilterDialog","ReduceDialog","RenameDialog","newDescription","ScriptEditDialog","SearchDialog","checkbox","ShowTopNDialog","SortDialog","SortDialog_sortOrder","StringFilterDialog","WeightsEditDialog","inputs","updateBar","distributeWeights","missingIndices","sum_1","missingIndices_1","missingIndices_2","validWeights","inputs_1","buttons","inputs_2","reportValidity","ui","uiDialog","dialogClass","extraArgs","uiSortMethod","toolbar_sort","removeAboveLevel","isAscByDefault","dialogs_SortDialog","sortGroupBy","rename","dialogs_RenameDialog","vis","dialogs_ChangeRendererDialog","toolbar_clone","_evt","removeAll","toolbar_group","dialogs_GroupDialog","toggleCompressExpand","mcol","compress","expand","dialogs_ShowTopNDialog","toolbarAddons","sortNumber","sortNumbers","sortBoxPlot","sortDates","groupNumber","isThreshold","thresholds","groupString","isRegexCheck","groupDate","toolbarActions","dialogs_SearchDialog","filterNumber","dialogs_NumberFilterDialog","filterDate","dialogs_DateFilterDialog","filterString","dialogs_StringFilterDialog","filterCategorical","dialogs_CategoricalFilterDialog","filterOrdinal","dialogs_CategoricalMappingFilterDialog","filterBoolean","dialogs_BooleanFilterDialog","colorMapped","dialogs_ColorMappingDialog","colorMappedCategorical","dialogs_CategoricalColorMappingDialog","dialogs_ScriptEditDialog","dialogs_ReduceDialog","cutoff","dialogs_CutOffHierarchyDialog","editMapping","dialogs_MappingDialog","editPattern","dialogs_EditPatternDialog","editWeights","dialogs_WeightsEditDialog","compositeContained","dialogs_CompositeChildrenDialog","splitCombined","invertSelection","ss","sortActions","toolbar_cache","cacheAddon","getFullToolbar","icons","possible","toolbarIcon","getOwnMetadata","m_1","getAllToolbarActions","flags","advancedModelFeatures","advancedRankingFeatures","advancedUIFeatures","cacheKey","m_2","getAllToolbarDialogAddons","defaultOptions","renderers","labelRotation","summaryHeader","animated","expandLineOnHover","sidePanel","sidePanelCollapsed","hierarchyIndicator","defaultSlopeGraphMode","overviewMode","rowHeight","groupHeight","groupPadding","rowPadding","levelOfDetail","customRowUpdate","dynamicHeight","disableFrozenColumns","ignoreUnsupportedBrowser","SUPPORTED_FIREFOX_VERSION","SUPPORTED_CHROME_VERSION","SUPPORTED_EDGE_VERSION","getUnsupportedBrowserError","info","detect_browser","fVersion","EAnimationMode","ALineUp_ALineUp","ALineUp","ignoreIncompatibleBrowser","highlightListeners","isBrowserSupported","EVENT_HIGHLIGHT_CHANGED","setDataProvider","dataIndices","enableHighlightListening","_enable","NO_CHANGE_DELTA","defaultPhases","delay","nodeY","animation","SHOW","HIDE","UPDATE_REMOVE","animation_KeyFinder","KeyFinder","lastFilled","key2index","exceptions","findValidStart","posByKey","pos","fillCacheTillKey","defaultRowHeight","fillCache","heightOf","exceptionsLookup","exceptionHeightOf","returnDefault","numberOfRows","positions","defaultMode","ScrollHandler","sync","handler","timer","handleAnimationImpl","handleAnimation","handleTimeouts","asInfo","isWaiting","addScroll","scroller","__le_scroller__","isScrollEventWaiting","internal_clear","EScrollResult","RowHeightException","nonUniformContext","rowHeights","mostFrequentValue","totalHeight","between","logic_range","heightExceptions","firstRowPos","endPos","y2","offset2","indexShift","offsetShift","isGuess","shifted2","lastPos","heightExceptions_1","firstException","lastException","updateFrozen","oldLast","added","PREFIX","styles_cssClass","CSS_CLASS_LOADING","CSS_CLASS_FROZEN","CSS_CLASS_HIDDEN","CSS_CLASS_MULTI","CSS_CLASS_EVEN","CSS_CLASS_SHIFTED","CSS_CLASS_SCROLLBAR_TESTER","CSS_CLASS_HEADER","CSS_CLASS_BODY","CSS_CLASS_FOOTER","CSS_CLASS_THEAD","CSS_CLASS_TBODY","CSS_CLASS_TR","CSS_CLASS_TH","CSS_CLASS_TD","CSS_CLASS_SCROLLING","CSS_CLASS_ROW_ANIMATION","isLoadingCell","src_ARowRenderer","ARowRenderer","pool","loadingPool","forcedFirst","forcedLast","visibleFirstRowPos","scrollListener","lastScrollInfo","abortAnimation","async","minScrollDelta","mixins","scrollingHint","batchSize","striped","viewportOversize","createAdapter","mixinClass","fragment","createDocumentFragment","addMixin","addAtBeginning","addAtBottom","removeFromBeginning","removeFromBottom","updateOffset","bodyScroller","scrollOffset","scrollTotal","sizer","tagName","insertBefore","firstChild","init","isGoingDown","onScrolledVertically","recreate","cleanUp","updateRow","createRow","selectProxy","proxy","recycle","replaceChild","ex","perform","torecycle","forEachRow","inplace","fromBeginning","nextSibling","previousSibling","updateSizer","setTransform","bodySizer","recreateAnimated","recreatePure","clearPool","previousKey","currentKey","rows_1","UPDATE","UPDATE_CREATE","nodeYCurrentHeight","nextPos","prevHeight","animate","phases","previousFinder","currentFinder","currentTimer","actPhase","executePhase","phase","anim","run","offsetTop","dummyAnimation","previousHeight","currentHeight","curr","revalidate","shiftTop","scrollResult","onScrolledImpl","onScrolled","shiftLast","currentDelta","shiftFirst","currentFirstRow","NONE","toadd","SOME","toaddBottom","ALL","SOME_TOP","SOME_BOTTOM","manipulate","toRecycle","toAdd","toRecycle_1","anyelem","__transform__","assignStyles","plain","hyphen","setProperty","tableIds","tableId","thead","tbody","tr","th","td","tableCSSClasses","ids","style_GridStyleManager","GridStyleManager","cssClasses","headerScroller","measureScrollbar","updateRule","borderRight","frozenShift","selectors","updateColumns","deleteRule","rules","ruleNames","cssSelectors","thStyles","tdStyles","StyleManager","testVerifyTimeout","createTextNode","verifySheet","sheet","cssRules","selectorText","rule","insertRule","cssRule","getSheetRule","addRule","stored","table_MultiTableRowRenderer","MultiTableRowRenderer","htmlId","sections","columnPadding","main","isGoingRight","onScrolledHorizontally","scrollEnd","headerFooter","bodyFooter","maxHeight","pushTable","extras","pushSeparator","section","widthChanged","DialogManager","escKeyListener","which","removeLast","openDialogs","setHighlight","mask","clipPath","webkitClipPath","clearHighlight","takeDown","setUp","mixin_PrefetchMixin","PrefetchMixin","prefetchTimeout","cleanupTimeout","prefetchRows","cleanUpRows","prefetchDown","nextLast","prefetchUp","syncFrozen","triggerPrefetch","prefetchDownPossible","prefetchUpPossible","isLast","cleanUpTop","newFirst","cleanUpBottom","newLast","triggerCleanUp","internal_ACellAdapter","ACellAdapter","mixinClasses","cellPool","visibleColumns","visibleFirstColumnPos","horizontallyShifted","columnAdapter","createColumnAdapter","columnMixins","columnFragment","leftShift","addColumnMixin","addColumnAtStart","addColumnAtEnd","removeColumnFromStart","removeColumnFromEnd","updateColumnOffset","onScrolledHorizontallyImpl","removeCellFromStart","recycleCell","removeCellFromEnd","removeFrozenCells","columnIndices","columnIndices_1","columnIndex","removeFrozenColumns","removeAllColumns","includingFrozen","removeAllCells","frozen_1","frozen_2","selectProxyCell","columnObj","pooled","updateCell","createCell","updateShiftedState","handleCellReady","selectCell","rowIndex","addCellAtStart","cell","insertFrozenCells","columnIndices_2","insertFrozenColumns","addCellAtEnd","verifyRows","verifyRow","updateHeaders","fragment_1","document_1","ids_1","firstColumnPos","changed","id_1","mergeColumns","updateImpl","cell_1","byId","updateShiftedStates","shifted","headers","bodies","headers_1","bodies_1","headers_2","bodies_2","shiftingChanged","colObjs","ACellTableSection_ACellTableSection","ACellTableSection","LocalCell","hidden","onVisibilityChanged","updateShifts","_left","_visible","wasHidden","updateColumnWidths","oldLeft","toGroupLookup","item2groupIndex","group2firstItemIndex","toKey","lineupAnimation","previousData","currentData","prevHelper","currHelper","currentRowIndex","referenceIndex","appearPosition","_previousFinder","previousRowIndex","removePosition","RenderColumn","singleRenderer","singleTemplate","cloneNode","singleId","groupTemplate","groupId","summaryTemplate","summaryId","isGroup","oldRenderer","currentRenderer","oldGroup","getGroup","chainAbortAble","renderCell","mapper","mapped","EMode","MultiLevelRenderColumn","mc","updateNested","matchChildren","cc","updateWidthRule","gridTemplateColumns","sub","ui_RenderColumn","ui_SelectionManager","SelectionManager","hr","showHint","startNode","elementFromPoint","clientY","endNode","xShift","yShift","EVENT_SELECT_RANGE","startIndex","endIndex","sy","ey","MIN_DISTANCE","selectRange","updateState","selectedDataIndices","EngineRanking_RankingEvents","RankingEvents","EVENT_UPDATE_DATA","EVENT_RECREATE","PASSIVE","ui_EngineRanking","EngineRanking","roptions","loadingCanvas","highlight","canvasPool","canvasMouseHandler","hoveredRows","unhover","enter","leave","updateHoveredRow","isCanvasRenderedRow","highlightHandler","delayedUpdate","updateBody","delayedUpdateAll","updateAll","delayedUpdateColumnWidths","createCol","reindex","disableListener","_oldValue","renderCtx","ui_MultiLevelRenderColumn","createRenderer","visibility","_document","createCellHandled","initCellClasses","selectCanvas","rowFlags","rowany","__lu__","visibleRenderedWidth","pushLazyRedraw","renderRow","imageSmoothingEnabled","domColumns","renderCellImpl","visibleElements","firstDOM","updateCellImpl","domColumns_1","updateCanvasCell","me","me_1","needDOM","updateHeaderOf","toRowMeta","agg","hoverLod","computedLod","wasLow","wasGroup","recycleCanvas","canvas2","updateCanvasBody","level_1","enable","hover","updateSelection","updateColumn","after","groupData","pushItem","ordered","gparent","rowContext","findNearest","lookFor","firstBeforePos","firstAfterPos","nearestPos","scrollIntoView","regular","posOf","scrollHeight","found","getHighlight","debounceUpdate","replacement","SlopeGraph_ItemSlope","ItemSlope","SlopeGraph_GroupSlope","GroupSlope","SlopeGraph","leftSlopes","rightSlopes","chosenSelectionOnly","ITEM","BAND","initHeader","scroll","rebuild","leftRanking","leftContext","rightRanking","rightContext","prepareRightSlopes","computeSlopes","fakeGroups","padded","slopes","gr","heightPerRow","fakeGroup","createFakeGroup","intersection","filterIndices","chooseSelection","leftVisibleFirst","leftVisibleLast","rightVisibleFirst","rightVisibleLast","alreadyVisible","selectionLookup","updatePath","__data__","selectionSlopes","ownerSVGElement","matchLength","addPath","openDataIndices","paths_2","ss_1","paths_1","ui_EngineRenderer","EngineRenderer","slopeGraphs","updateAbles","zoomFactor","enabledHighlightListening","helper","dialogs_DialogManager","chooseRenderer","chooseGroupRenderer","chooseSummaryRenderer","toDisable","initProvider","zoomOut","updateZoomFactor","zoomIn","fontSize","pushUpdateAble","updateAble","takeDownProvider","addRanking","setHighlightToNearest","updateHist","rankings_1","updateUpdateAbles","ui_SlopeGraph","updateRotatedHeaderState","slope","round2","impl_1","f_1","defaultHeight","heightsFor","rankings_2","updateSlopeGraphs","ChooseRankingDialog","panel_SearchBox","SearchBox","formatItem","placeholder","onfocus","onblur","blur","onkeydown","handleKey","itemTemplate","buildDialog","li","isItem","onmouseenter","highlighted","KEYS","click","highlightPrevious","highlightNext","filterResults","empty","ul","allChildrenHidden","RenameRankingDialog","MoreRankingOptionsDialog","dialogs_RenameRankingDialog","AddonDialog","Hierarchy","groupAdder","groupSortAdder","sortAdder","renderSorting","renderGroupSorting","toColumn","addonKey","onChange","prevent","customize","addGroupAdder","addSortAdder","addGroupSortAdder","addAdder","adder","onSelect","used","dialogs_AddonDialog","SidePanelEntryVis","summaryUpdater","recreateSummary","appendSummary","updateSummary","SidePanelRanking","dropdown","dialogs_MoreRankingOptionsDialog","panel_Hierarchy","updateHierarchy","updateList","panel_SidePanelEntryVis","isWrapper","SidePanel","additionalDescs","chooser","collapseable","descs","dialogs_ChooseRankingDialog","initChooser","changeDataStorage","panel","wrapDesc","updateChooser","updateStats","createEntry","makeActive","panel_SidePanelRanking","updateRanking","resetButton","groupByType","LineUp","panel_SidePanel","spaceFillingRule","availableHeight","visibleHeight","groupSeparators","violation","itemHeight","taggle_TaggleRenderer","TaggleRenderer","isDynamicLeafHeight","resizeListener","violationChanged","switchRule","Taggle","_rule","setViolation","spaceFilling","spaceFilling_1","updateLodRules","ColumnBuilder","_color","asArray","asMap","buildColumn","LineUpBuilder","rotation","registerRenderer","registerToolbarAction","registerToolbarDialogAddon","groupRowHeight","disableAdvancedRankingFeatures","disableAdvancedModelFeatures","disableAdvancedUIFeatures","RankingBuilder_RankingBuilder","RankingBuilder","groupSort","columns_1","supportTypes","allColumns","impose","colorColumn","scripted","mixed_1","weightedSum","numberColumn","numberColumn1","weight1","numberColumn2","weight2","numberColumnAndWeights","post","operation","numberColumns","ALL_MAGIC_FLAG","addColumn","col2","sorts_1","sorts_2","builder_RankingBuilder","buildRanking","CategoricalColumnBuilder_CategoricalColumnBuilder","CategoricalColumnBuilder","asOrdinal","asSet","derive","isSet","val","column_ColumnBuilder","buildCategoricalColumn","NumberColumnBuilder_NumberColumnBuilder","NumberColumnBuilder","asBoxPlot","ext","buildNumberColumn","StringColumnBuilder_StringColumnBuilder","StringColumnBuilder","editable","buildStringColumn","DateColumnBuilder_DateColumnBuilder","DateColumnBuilder","buildDateColumn","HierarchyColumnBuilder_HierarchyColumnBuilder","HierarchyColumnBuilder","buildHierarchicalColumn","ActionsColumnBuilder_ActionsColumnBuilder","ActionsColumnBuilder","groupAction","buildActionsColumn","BooleanColumnBuilder_BooleanColumnBuilder","BooleanColumnBuilder","marker","falseMarker","buildBooleanColumn","DataBuilder_DataBuilder","DataBuilder","providerOptions","rankBuilders","_deriveColors","scheduledTaskExecutor","deriveColumns","registerColumnType","defaultRanking","addSupportTypes","buildData","oldPos","provider_LocalDataProvider","ui_LineUp","buildTaggle","taggle_Taggle","builder_LineUpBuilder","DataBuilder_builder","asTaggle","asLineUp","column_build","ranking_buildRanking","si","pick","utils_isSame","lineupOptions","lineup_Adapter","Adapter","prevRankings","prevColumns","prevHighlight","onSelectionChanged","onHighlightChanged","componentDidMount","buildProvider","createInstance","resolveColumnDescs","columnDescs","deriveColumnNames","resolveRankings","builders","rankingBuilders","buildColumns","derived_1","buildRankings","updateLineUp","changeDetector","providerChanged","changedLineUpOptions","updateProvider","columnsChanged","componentDidUpdate","componentWillUnmount","builderAdapter","buildString","buildNumber","buildHierarchy","buildDate","buildCategorical","missingCategory","buildActions","buildGeneric","buildWeightedSumRanking","buildSupportRanking","buildScriptRanking","buildReduceRanking","buildNestedRanking","buildImposeRanking","buildAllColumnsRanking","isSame","isTypeInstance","superClass","defineColumn","functions","CustomColumn","_args","createIndex2Pos","RemoteDataProvider","server","maxCacheSize","loadFromServer","fetch","computeMissing","union","unionAdd","_v","loadInCache","_m","toLoad","createLocalDataProvider","createLineUp","createTaggle","__webpack_exports__","buildId","license","provider_RemoteDataProvider"],"mappings":";;;CAAA,SAAAA,EAAAC,GACA,iBAAAC,SAAA,iBAAAC,OACAA,OAAAD,QAAAD,IACA,mBAAAG,eAAAC,IACAD,OAAA,GAAAH,GACA,iBAAAC,QACAA,QAAA,SAAAD,IAEAD,EAAA,SAAAC,IARA,CASCK,OAAA,WACD,mBCTA,IAAAC,EAAA,GAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAP,QAGA,IAAAC,EAAAI,EAAAE,GAAA,CACAC,EAAAD,EACAE,GAAA,EACAT,QAAA,IAUA,OANAU,EAAAH,GAAAI,KAAAV,EAAAD,QAAAC,IAAAD,QAAAM,GAGAL,EAAAQ,GAAA,EAGAR,EAAAD,QA0DA,OArDAM,EAAAM,EAAAF,EAGAJ,EAAAO,EAAAR,EAGAC,EAAAQ,EAAA,SAAAd,EAAAe,EAAAC,GACAV,EAAAW,EAAAjB,EAAAe,IACAG,OAAAC,eAAAnB,EAAAe,EAAA,CAA0CK,YAAA,EAAAC,IAAAL,KAK1CV,EAAAgB,EAAA,SAAAtB,GACA,oBAAAuB,eAAAC,aACAN,OAAAC,eAAAnB,EAAAuB,OAAAC,YAAA,CAAwDC,MAAA,WAExDP,OAAAC,eAAAnB,EAAA,cAAiDyB,OAAA,KAQjDnB,EAAAoB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAAnB,EAAAmB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAX,OAAAY,OAAA,MAGA,GAFAxB,EAAAgB,EAAAO,GACAX,OAAAC,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAAnB,EAAAQ,EAAAe,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAvB,EAAA2B,EAAA,SAAAhC,GACA,IAAAe,EAAAf,KAAA2B,WACA,WAA2B,OAAA3B,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAK,EAAAQ,EAAAE,EAAA,IAAAA,GACAA,GAIAV,EAAAW,EAAA,SAAAiB,EAAAC,GAAsD,OAAAjB,OAAAkB,UAAAC,eAAA1B,KAAAuB,EAAAC,IAGtD7B,EAAAgC,EAAA,GAIAhC,IAAAiC,EAAA,oCChFA,IAAAC,EAAAC,MAAAD,QACAE,EAAAxB,OAAAyB,KACAC,EAAA1B,OAAAkB,UAAAC,eAEApC,EAAAD,QAAA,SAAA6C,EAAAC,EAAAC,GACA,GAAAD,IAAAC,EAAA,SAEA,GAAAD,GAAAC,GAAA,iBAAAD,GAAA,iBAAAC,EAAA,CACA,IAEAvC,EACAwC,EACAjB,EAJAkB,EAAAT,EAAAM,GACAI,EAAAV,EAAAO,GAKA,GAAAE,GAAAC,EAAA,CAEA,IADAF,EAAAF,EAAAE,SACAD,EAAAC,OAAA,SACA,IAAAxC,EAAAwC,EAAsB,GAAAxC,KACtB,IAAAqC,EAAAC,EAAAtC,GAAAuC,EAAAvC,IAAA,SACA,SAGA,GAAAyC,GAAAC,EAAA,SAEA,IAAAC,EAAAL,aAAAM,KACAC,EAAAN,aAAAK,KACA,GAAAD,GAAAE,EAAA,SACA,GAAAF,GAAAE,EAAA,OAAAP,EAAAQ,WAAAP,EAAAO,UAEA,IAAAC,EAAAT,aAAAU,OACAC,EAAAV,aAAAS,OACA,GAAAD,GAAAE,EAAA,SACA,GAAAF,GAAAE,EAAA,OAAAX,EAAAY,YAAAX,EAAAW,WAEA,IAAAf,EAAAD,EAAAI,GAGA,IAFAE,EAAAL,EAAAK,UAEAN,EAAAK,GAAAC,OACA,SAEA,IAAAxC,EAAAwC,EAAoB,GAAAxC,KACpB,IAAAoC,EAAAjC,KAAAoC,EAAAJ,EAAAnC,IAAA,SAEA,IAAAA,EAAAwC,EAAoB,GAAAxC,KAEpB,IAAAqC,EAAAC,EADAf,EAAAY,EAAAnC,IACAuC,EAAAhB,IAAA,SAGA,SAGA,OAAAe,MAAAC,qCCpDA7B,OAAAC,eAAAnB,EAAA,cAA8CyB,OAAA,IAC9C,IAAAkC,EAAA,WAMA,OALA,SAAA5C,EAAA6C,EAAAC,GACAC,KAAA/C,OACA+C,KAAAF,UACAE,KAAAD,MAJA,GAQA7D,EAAA2D,cACA,IAAAI,EAAA,WAMA,OALA,SAAAH,GACAE,KAAAF,UACAE,KAAA/C,KAAA,OACA+C,KAAAD,GAAAG,QAAAC,UAJA,GAQAjE,EAAA+D,WACA,IAAAG,EAAA,WAOA,OANA,WACAJ,KAAAK,KAAA,EACAL,KAAA/C,KAAA,MACA+C,KAAAF,QAAA,KACAE,KAAAD,GAAA,MALA,GASA7D,EAAAkE,UAEA,IAEAE,EAAA,EACAC,EAAA,CACA,iCACA,6BACA,2CACA,kCACA,sCACA,yCACA,iCACA,oCACA,uCACA,oCACA,8EACA,8DACA,8CACA,sCACA,0CACA,8BACA,iDACA,sCACA,oCACA,mDACA,6CACA,sBACA,6CACA,kCACA,iDACA,0CACA,gCACA,sCACA,kDACA,oDACA,aAlCA,iIAoCAC,EAAA,CACA,yBACA,yBACA,oCACA,8BACA,uBACA,yBACA,mDACA,sCACA,mDACA,+CACA,2CACA,qCACA,iCACA,iCACA,mCACA,mCACA,4BACA,uBACA,mBACA,qBACA,0BACA,uCACA,cACA,gBACA,iBACA,cA7DA,+FAsEA,SAAAC,EAAAC,GAKA,IAAAC,EAAA,KAAAD,GACAH,EAAAK,OAAA,SAAAC,EAAAC,GACA,IAAAC,EAAAD,EAAA,GAAAE,EAAAF,EAAA,GACA,GAAAD,EACA,OAAAA,EAEA,IAAAI,EAAAD,EAAAE,KAAAR,GACA,QAAAO,GAAA,CAAAF,EAAAE,KACS,GACT,IAAAN,EACA,YAEA,IAAA1D,EAAA0D,EAAA,GAAAQ,EAAAR,EAAA,GACA,iBAAA1D,EACA,WAAAmD,EAEA,IAAAgB,EAAAD,EAAA,IAAAA,EAAA,GAAAE,MAAA,QAAAC,MAAA,KASA,OARAF,EACAA,EAAAlC,OAAAoB,IACAc,IAAAG,OAyBA,SAAAC,GAEA,IADA,IAAAC,EAAA,GACAC,EAAA,EAAoBA,EAAAF,EAAYE,IAChCD,EAAAE,KAAA,KAEA,OAAAF,EA9BAG,CAAAtB,EAAAc,EAAAlC,UAIAkC,EAAA,GAEA,IAAAvB,EAAA5C,EAAAmE,EAAAS,KAAA,KAAAC,EAAApB,IAGA,SAAAoB,EAAApB,GACA,QAAAgB,EAAA,EAAAF,EAAAhB,EAAAtB,OAAyDwC,EAAAF,EAAYE,IAAA,CACrE,IAAAZ,EAAAN,EAAAkB,GAAA3B,EAAAe,EAAA,GAEA,GAFAA,EAAA,GACAiB,KAAArB,GAEA,OAAAX,EAGA,YAGA,SAAAiC,IAEA,MADA,oBAAA9B,iBAAAJ,QACA,IAAAG,EAAAC,QAAAJ,QAAAwB,MAAA,SA/CApF,EAAA+F,OANA,WACA,0BAAAC,UACAzB,EAAAyB,UAAAC,WAEAH,KAmCA9F,EAAAuE,iBAWAvE,EAAA4F,WAKA5F,EAAA8F;;;;;;;;;;;;;;;ACxIA,IAAAI,GACA,SAAAA,IAGA,SAAAnG,GACA,IAAAD,EAAA,iBAAAqG,cACA,iBAAAC,UACA,iBAAAtC,UACAuC,SAAA,eAAAA,GACAC,EAAAC,EAAAL,GAQA,SAAAK,EAAAC,EAAAC,GACA,gBAAA1E,EAAAN,GACA,mBAAA+E,EAAAzE,IACAb,OAAAC,eAAAqF,EAAAzE,EAAA,CAAwD2E,cAAA,EAAAC,UAAA,EAAAlF,UAExDgF,GACAA,EAAA1E,EAAAN,SAbA,IAAA3B,EAAAoG,QACApG,EAAAoG,UAGAI,EAAAC,EAAAzG,EAAAoG,QAAAI,GAYK,SAAAA,GACL,IAAAM,EAAA1F,OAAAkB,UAAAC,eAEAwE,EAAA,mBAAAtF,OACAuF,EAAAD,QAAA,IAAAtF,OAAAwF,YAAAxF,OAAAwF,YAAA,gBACAC,EAAAH,QAAA,IAAAtF,OAAA0F,SAAA1F,OAAA0F,SAAA,aACAC,EAAA,mBAAAhG,OAAAY,OACAqF,EAAA,CAA6BC,UAAA,cAAgB3E,MAC7C4E,GAAAH,IAAAC,EACAG,EAAA,CAEAxF,OAAAoF,EACA,WAA+B,OAAAK,EAAArG,OAAAY,OAAA,QAC/BqF,EACA,WAAmC,OAAAI,EAAA,CAAwBH,UAAA,QAC3D,WAAmC,OAAAG,EAAA,KACnCC,IAAAH,EACA,SAAAI,EAAA1F,GAAuC,OAAA6E,EAAAjG,KAAA8G,EAAA1F,IACvC,SAAA0F,EAAA1F,GAAuC,OAAAA,KAAA0F,GACvCpG,IAAAgG,EACA,SAAAI,EAAA1F,GAAuC,OAAA6E,EAAAjG,KAAA8G,EAAA1F,GAAA0F,EAAA1F,QAAA2F,GACvC,SAAAD,EAAA1F,GAAuC,OAAA0F,EAAA1F,KAGvC4F,EAAAzG,OAAA0G,eAAAvB,UACAwB,EAAA,iBAAA7D,iBAAA8D,KAAA,SAAA9D,QAAA8D,IAAA,kCACAC,EAAAF,GAAA,mBAAAG,KAAA,mBAAAA,IAAA5F,UAAA6F,QAk0BA,WACA,IAAAC,EAAA,GACAC,EAAA,GACAC,EAAA,WACA,SAAAA,EAAAzF,EAAA0F,EAAAC,GACAxE,KAAAyE,OAAA,EACAzE,KAAA0E,MAAA7F,EACAmB,KAAA2E,QAAAJ,EACAvE,KAAA4E,UAAAJ,EAoCA,OAlCAF,EAAAhG,UAAA,yBAAmE,OAAA0B,MACnEsE,EAAAhG,UAAA4E,GAAA,WAAqE,OAAAlD,MACrEsE,EAAAhG,UAAAuG,KAAA,WACA,IAAAC,EAAA9E,KAAAyE,OACA,GAAAK,GAAA,GAAAA,EAAA9E,KAAA0E,MAAAxF,OAAA,CACA,IAAA6F,EAAA/E,KAAA4E,UAAA5E,KAAA0E,MAAAI,GAAA9E,KAAA2E,QAAAG,IASA,OARAA,EAAA,GAAA9E,KAAA0E,MAAAxF,QACAc,KAAAyE,QAAA,EACAzE,KAAA0E,MAAAL,EACArE,KAAA2E,QAAAN,GAGArE,KAAAyE,SAEA,CAAgC9G,MAAAoH,EAAAC,MAAA,GAEhC,OAA4BrH,WAAAiG,EAAAoB,MAAA,IAE5BV,EAAAhG,UAAA2G,MAAA,SAAAC,GAMA,MALAlF,KAAAyE,QAAA,IACAzE,KAAAyE,QAAA,EACAzE,KAAA0E,MAAAL,EACArE,KAAA2E,QAAAN,GAEAa,GAEAZ,EAAAhG,UAAA6G,OAAA,SAAAxH,GAMA,OALAqC,KAAAyE,QAAA,IACAzE,KAAAyE,QAAA,EACAzE,KAAA0E,MAAAL,EACArE,KAAA2E,QAAAN,GAEA,CAA4B1G,QAAAqH,MAAA,IAE5BV,EAzCA,GA2CA,kBACA,SAAAJ,IACAlE,KAAA0E,MAAA,GACA1E,KAAA2E,QAAA,GACA3E,KAAAoF,UAAAhB,EACApE,KAAAqF,aAAA,EAyDA,OAvDAjI,OAAAC,eAAA6G,EAAA5F,UAAA,QACAf,IAAA,WAAsC,OAAAyC,KAAA0E,MAAAxF,QACtC5B,YAAA,EACAsF,cAAA,IAEAsB,EAAA5F,UAAAoF,IAAA,SAAAzF,GAAoD,OAAA+B,KAAAsF,MAAArH,GAAA,OACpDiG,EAAA5F,UAAAf,IAAA,SAAAU,GACA,IAAA6G,EAAA9E,KAAAsF,MAAArH,GAAA,GACA,OAAA6G,GAAA,EAAA9E,KAAA2E,QAAAG,QAAAlB,GAEAM,EAAA5F,UAAAiH,IAAA,SAAAtH,EAAAN,GACA,IAAAmH,EAAA9E,KAAAsF,MAAArH,GAAA,GAEA,OADA+B,KAAA2E,QAAAG,GAAAnH,EACAqC,MAEAkE,EAAA5F,UAAAkH,OAAA,SAAAvH,GACA,IAAA6G,EAAA9E,KAAAsF,MAAArH,GAAA,GACA,GAAA6G,GAAA,GAEA,IADA,IAAAW,EAAAzF,KAAA0E,MAAAxF,OACAxC,EAAAoI,EAAA,EAA+CpI,EAAA+I,EAAU/I,IACzDsD,KAAA0E,MAAAhI,EAAA,GAAAsD,KAAA0E,MAAAhI,GACAsD,KAAA2E,QAAAjI,EAAA,GAAAsD,KAAA2E,QAAAjI,GAQA,OANAsD,KAAA0E,MAAAxF,SACAc,KAAA2E,QAAAzF,SACAjB,IAAA+B,KAAAoF,YACApF,KAAAoF,UAAAhB,EACApE,KAAAqF,aAAA,IAEA,EAEA,UAEAnB,EAAA5F,UAAAoH,MAAA,WACA1F,KAAA0E,MAAAxF,OAAA,EACAc,KAAA2E,QAAAzF,OAAA,EACAc,KAAAoF,UAAAhB,EACApE,KAAAqF,aAAA,GAEAnB,EAAA5F,UAAAO,KAAA,WAAkD,WAAAyF,EAAAtE,KAAA0E,MAAA1E,KAAA2E,QAAAgB,IAClDzB,EAAA5F,UAAAiG,OAAA,WAAoD,WAAAD,EAAAtE,KAAA0E,MAAA1E,KAAA2E,QAAAiB,IACpD1B,EAAA5F,UAAA6F,QAAA,WAAqD,WAAAG,EAAAtE,KAAA0E,MAAA1E,KAAA2E,QAAAkB,IACrD3B,EAAA5F,UAAA,yBAA2D,OAAA0B,KAAAmE,WAC3DD,EAAA5F,UAAA4E,GAAA,WAA6D,OAAAlD,KAAAmE,WAC7DD,EAAA5F,UAAAgH,MAAA,SAAArH,EAAA6H,GASA,OARA9F,KAAAoF,YAAAnH,IACA+B,KAAAqF,YAAArF,KAAA0E,MAAAqB,QAAA/F,KAAAoF,UAAAnH,IAEA+B,KAAAqF,YAAA,GAAAS,IACA9F,KAAAqF,YAAArF,KAAA0E,MAAAxF,OACAc,KAAA0E,MAAA/C,KAAA1D,GACA+B,KAAA2E,QAAAhD,UAAAiC,IAEA5D,KAAAqF,aAEAnB,EA9DA,GAgEA,SAAAyB,EAAA1H,EAAA+H,GACA,OAAA/H,EAEA,SAAA2H,EAAAI,EAAArI,GACA,OAAAA,EAEA,SAAAkI,EAAA5H,EAAAN,GACA,OAAAM,EAAAN,IAv7BAsI,GAAA/B,IACAgC,EAAAnC,GAAA,mBAAAoC,KAAA,mBAAAA,IAAA7H,UAAA6F,QA27BA,WACA,SAAAgC,IACAnG,KAAAoG,KAAA,IAAAnC,EAgBA,OAdA7G,OAAAC,eAAA8I,EAAA7H,UAAA,QACAf,IAAA,WAAsC,OAAAyC,KAAAoG,KAAAX,MACtCnI,YAAA,EACAsF,cAAA,IAEAuD,EAAA7H,UAAAoF,IAAA,SAAA/F,GAAsD,OAAAqC,KAAAoG,KAAA1C,IAAA/F,IACtDwI,EAAA7H,UAAA+H,IAAA,SAAA1I,GAAsD,OAAAqC,KAAAoG,KAAAb,IAAA5H,KAAAqC,MACtDmG,EAAA7H,UAAAkH,OAAA,SAAA7H,GAAyD,OAAAqC,KAAAoG,KAAAZ,OAAA7H,IACzDwI,EAAA7H,UAAAoH,MAAA,WAAmD1F,KAAAoG,KAAAV,SACnDS,EAAA7H,UAAAO,KAAA,WAAkD,OAAAmB,KAAAoG,KAAAvH,QAClDsH,EAAA7H,UAAAiG,OAAA,WAAoD,OAAAvE,KAAAoG,KAAA7B,UACpD4B,EAAA7H,UAAA6F,QAAA,WAAqD,OAAAnE,KAAAoG,KAAAjC,WACrDgC,EAAA7H,UAAA,yBAA2D,OAAA0B,KAAAnB,QAC3DsH,EAAA7H,UAAA4E,GAAA,WAA6D,OAAAlD,KAAAnB,QAC7DsH,EAlBA,GA37BAA,IAIAG,EAAA,IAHAvC,GAAA,mBAAAwC,QAg9BA,WACA,IAAAC,EAAA,GACA3H,EAAA2E,EAAAxF,SACAyI,EAAAC,IACA,kBACA,SAAAH,IACAvG,KAAA2G,KAAAD,IAuBA,OArBAH,EAAAjI,UAAAoF,IAAA,SAAAhB,GACA,IAAAkE,EAAAC,EAAAnE,GAAA,GACA,YAAAkB,IAAAgD,GAAApD,EAAAE,IAAAkD,EAAA5G,KAAA2G,OAEAJ,EAAAjI,UAAAf,IAAA,SAAAmF,GACA,IAAAkE,EAAAC,EAAAnE,GAAA,GACA,YAAAkB,IAAAgD,EAAApD,EAAAjG,IAAAqJ,EAAA5G,KAAA2G,WAAA/C,GAEA2C,EAAAjI,UAAAiH,IAAA,SAAA7C,EAAA/E,GACA,IAAAiJ,EAAAC,EAAAnE,GAAA,GAEA,OADAkE,EAAA5G,KAAA2G,MAAAhJ,EACAqC,MAEAuG,EAAAjI,UAAAkH,OAAA,SAAA9C,GACA,IAAAkE,EAAAC,EAAAnE,GAAA,GACA,YAAAkB,IAAAgD,YAAA5G,KAAA2G,OAEAJ,EAAAjI,UAAAoH,MAAA,WAEA1F,KAAA2G,KAAAD,KAEAH,EAzBA,GA2BA,SAAAG,IACA,IAAAzI,EACA,GACAA,EAAA,cAAA6I,UACAtD,EAAAE,IAAA7E,EAAAZ,IAEA,OADAY,EAAAZ,IAAA,EACAA,EAEA,SAAA4I,EAAAnE,EAAA1E,GACA,IAAA8E,EAAAjG,KAAA6F,EAAA+D,GAAA,CACA,IAAAzI,EACA,OACAZ,OAAAC,eAAAqF,EAAA+D,EAAA,CAA4D9I,MAAA6F,EAAAxF,WAE5D,OAAA0E,EAAA+D,GAEA,SAAAM,EAAAC,EAAAvB,GACA,QAAA/I,EAAA,EAA+BA,EAAA+I,IAAU/I,EACzCsK,EAAAtK,GAAA,IAAAuK,KAAAC,SAAA,EACA,OAAAF,EAYA,SAAAF,IACA,IAAAK,EAXA,SAAA1B,GACA,sBAAA2B,WACA,0BAAAC,OACAA,OAAAC,gBAAA,IAAAF,WAAA3B,IACA,oBAAA8B,SACAA,SAAAD,gBAAA,IAAAF,WAAA3B,IACAsB,EAAA,IAAAK,WAAA3B,MAEA,OAAAsB,EAAA,IAAApI,MAAA8G,MAGA+B,CAAAhB,GAEAW,EAAA,MAAAA,EAAA,MACAA,EAAA,OAAAA,EAAA,OAEA,IADA,IAAApC,EAAA,GACA0C,EAAA,EAAoCA,EAAAjB,IAAoBiB,EAAA,CACxD,IAAAC,EAAAP,EAAAM,GACA,IAAAA,GAAA,IAAAA,GAAA,IAAAA,IACA1C,GAAA,KACA2C,EAAA,KACA3C,GAAA,KACAA,GAAA2C,EAAA9H,SAAA,IAAA+H,cAEA,OAAA5C,GA5hCA6C,GAAArB,SA6eA,SAAAsB,EAAAC,EAAAC,EAAAC,GACA,IAAAC,EAAA3B,EAAA/I,IAAAuK,GACA,GAAAI,EAAAD,GAAA,CACA,IAAAD,EACA,OACAC,EAAA,IAAAhE,EACAqC,EAAAf,IAAAuC,EAAAG,GAEA,IAAAE,EAAAF,EAAA1K,IAAAwK,GACA,GAAAG,EAAAC,GAAA,CACA,IAAAH,EACA,OACAG,EAAA,IAAAlE,EACAgE,EAAA1C,IAAAwC,EAAAI,GAEA,OAAAA,EAeA,SAAAC,EAAAC,EAAAP,EAAAC,GACA,IAAAI,EAAAN,EAAAC,EAAAC,GAAA,GACA,OAAAG,EAAAC,MAEAA,EAAAzE,IAAA2E,GAeA,SAAAC,EAAAD,EAAAP,EAAAC,GACA,IAAAI,EAAAN,EAAAC,EAAAC,GAAA,GACA,IAAAG,EAAAC,GAEA,OAAAA,EAAA5K,IAAA8K,GAIA,SAAAE,EAAAF,EAAAG,EAAAV,EAAAC,GACA,IAAAI,EAAAN,EAAAC,EAAAC,GAAA,GACAI,EAAA5C,IAAA8C,EAAAG,GAoCA,SAAAC,EAAAX,EAAAC,GACA,IAAAlJ,EAAA,GACAsJ,EAAAN,EAAAC,EAAAC,GAAA,GACA,GAAAG,EAAAC,GACA,OAAAtJ,EAIA,IAHA,IAAA6J,EAAAP,EAAAtJ,OACAsE,EAkLA,SAAAwF,GACA,IAAAC,EAAAC,EAAAF,EAAAzF,GACA,IAAA4F,EAAAF,GACA,UAAAG,UACA,IAAA5F,EAAAyF,EAAA/L,KAAA8L,GACA,IAAAK,EAAA7F,GACA,UAAA4F,UACA,OAAA5F,EAzLA8F,CAAAP,GACAQ,EAAA,IACA,CACA,IAAArE,EAAAsE,EAAAhG,GACA,IAAA0B,EAEA,OADAhG,EAAAK,OAAAgK,EACArK,EAEA,IAAAuK,EAAAvE,EAsLAlH,MArLA,IACAkB,EAAAqK,GAAAE,EAEA,MAAAC,GACA,IACAC,EAAAnG,GAEA,QACA,MAAAkG,GAGAH,KAKA,SAAAK,EAAAC,GACA,UAAAA,EACA,SACA,cAAAA,GACA,yBACA,uBACA,sBACA,sBACA,sBACA,2BAAAA,EAAA,IACA,kBAKA,SAAAtB,EAAAsB,GACA,YAAA5F,IAAA4F,EAIA,SAAAC,EAAAD,GACA,cAAAA,EASA,SAAAR,EAAAQ,GACA,uBAAAA,EAAA,OAAAA,EAAA,mBAAAA,EAMA,SAAAE,EAAAC,EAAAC,GACA,OAAAL,EAAAI,IACA,OACA,OACA,OACA,OACA,OACA,cAAAA,EAEA,IAAAE,EAAA,IAAAD,EAAA,aAAAA,EAAA,mBACAE,EAAAjB,EAAAc,EAAA3G,GACA,QAAAY,IAAAkG,EAAA,CACA,IAAA/E,EAAA+E,EAAAjN,KAAA8M,EAAAE,GACA,GAAAb,EAAAjE,GACA,UAAAgE,UACA,OAAAhE,EAEA,OAIA,SAAA+C,EAAA+B,GACA,cAAAA,EAAA,CACA,IAAAE,EAAAjC,EAAAlI,SACA,GAAAkJ,EAAAiB,GAAA,CACA,IAAAhF,EAAAgF,EAAAlN,KAAAiL,GACA,IAAAkB,EAAAjE,GACA,OAAAA,EAEA,IAAAiF,EAAAlC,EAAAkC,QACA,GAAAlB,EAAAkB,GAAA,CACA,IAAAjF,EAAAiF,EAAAnN,KAAAiL,GACA,IAAAkB,EAAAjE,GACA,OAAAA,OAGA,CACA,IAAAiF,EAAAlC,EAAAkC,QACA,GAAAlB,EAAAkB,GAAA,CACA,IAAAjF,EAAAiF,EAAAnN,KAAAiL,GACA,IAAAkB,EAAAjE,GACA,OAAAA,EAEA,IAAAkF,EAAAnC,EAAAlI,SACA,GAAAkJ,EAAAmB,GAAA,CACA,IAAAlF,EAAAkF,EAAApN,KAAAiL,GACA,IAAAkB,EAAAjE,GACA,OAAAA,GAGA,UAAAgE,UAjCAmB,CAAAP,EAAA,YAAAE,EAAA,SAAAA,GA+CA,SAAAM,EAAAC,GACA,IAAAnM,EAAAyL,EAAAU,EAAA,GACA,MA7EA,iBA6EAnM,EACAA,EARA,SAAAmM,GACA,SAAAA,EAQAC,CAAApM,GAMA,SAAAqM,EAAAF,GACA,OAAAzL,MAAAD,QACAC,MAAAD,QAAA0L,GACAA,aAAAhN,OACAgN,aAAAzL,MACA,mBAAAvB,OAAAkB,UAAAsB,SAAA/C,KAAAuN,GAIA,SAAAtB,EAAAsB,GAEA,yBAAAA,EAIA,SAAAG,EAAAH,GAEA,yBAAAA,EAeA,SAAAvB,EAAA2B,EAAAzC,GACA,IAAA0C,EAAAD,EAAAzC,GACA,GAAA0C,QAAA,CAEA,IAAA3B,EAAA2B,GACA,UAAA1B,UACA,OAAA0B,GAoBA,SAAAtB,EAAAhG,GACA,IAAA4B,EAAA5B,EAAA0B,OACA,OAAAE,EAAAC,MAAAD,EAIA,SAAAuE,EAAAnG,GACA,IAAAuH,EAAAvH,EAAA,OACAuH,GACAA,EAAA7N,KAAAsG,GAMA,SAAAwH,EAAA7C,GACA,IAAA8C,EAAAxN,OAAA0G,eAAAgE,GACA,sBAAAA,OAAAjE,EACA,OAAA+G,EAQA,GAAAA,IAAA/G,EACA,OAAA+G,EAEA,IAAAtM,EAAAwJ,EAAAxJ,UACAuM,EAAAvM,GAAAlB,OAAA0G,eAAAxF,GACA,SAAAuM,OAAAzN,OAAAkB,UACA,OAAAsM,EAEA,IAAAE,EAAAD,EAAAC,YACA,yBAAAA,EACAF,EAEAE,IAAAhD,EACA8C,EAEAE,EAmOA,SAAArH,EAAAkF,GAGA,OAFAA,EAAAoC,QAAAnH,SACA+E,EAAAoC,GACApC,EAn+BAnG,EAAA,WArBA,SAAAwI,EAAAtI,EAAAuI,EAAAC,GACA,GAAAhD,EAAA+C,GAYA,CACA,IAAAX,EAAAU,GACA,UAAAjC,UACA,IAAAwB,EAAA7H,GACA,UAAAqG,UACA,OAwZA,SAAAiC,EAAAtI,GACA,QAAAhG,EAAAsO,EAAA9L,OAAA,EAA+CxC,GAAA,IAAQA,EAAA,CACvD,IAAAyO,EAAAH,EAAAtO,GACA0O,EAAAD,EAAAzI,GACA,IAAAwF,EAAAkD,KAAA3B,EAAA2B,GAAA,CACA,IAAAb,EAAAa,GACA,UAAArC,UACArG,EAAA0I,GAGA,OAAA1I,EAlaA2I,CAAAL,EAAAtI,GAhBA,IAAA4H,EAAAU,GACA,UAAAjC,UACA,IAAAC,EAAAtG,GACA,UAAAqG,UACA,IAAAC,EAAAkC,KAAAhD,EAAAgD,KAAAzB,EAAAyB,GACA,UAAAnC,UAIA,OAHAU,EAAAyB,KACAA,OAAAtH,GACAqH,EAAAd,EAAAc,GA4aA,SAAAD,EAAAtI,EAAAuI,EAAAK,GACA,QAAA5O,EAAAsO,EAAA9L,OAAA,EAA+CxC,GAAA,IAAQA,EAAA,CACvD,IAAAyO,EAAAH,EAAAtO,GACA0O,EAAAD,EAAAzI,EAAAuI,EAAAK,GACA,IAAApD,EAAAkD,KAAA3B,EAAA2B,GAAA,CACA,IAAApC,EAAAoC,GACA,UAAArC,UACAuC,EAAAF,GAGA,OAAAE,EArbAC,CAAAP,EAAAtI,EAAAuI,EAAAC,KA+DA1I,EAAA,WAVA,SAAAgJ,EAAAC,GAQA,OAPA,SAAA/I,EAAAuI,GACA,IAAAjC,EAAAtG,GACA,UAAAqG,UACA,IAAAb,EAAA+C,KAgoBA,SAAAb,GACA,OAAAb,EAAAa,IACA,OACA,gBACA,kBApoBAsB,CAAAT,GACA,UAAAlC,UACAR,EAAAiD,EAAAC,EAAA/I,EAAAuI,MAmDAzI,EAAA,iBAPA,SAAAgJ,EAAAC,EAAA/I,EAAAuI,GACA,IAAAjC,EAAAtG,GACA,UAAAqG,UACAb,EAAA+C,KACAA,EAAAd,EAAAc,IACA,OAAA1C,EAAAiD,EAAAC,EAAA/I,EAAAuI,KA4CAzI,EAAA,cAPA,SAAAgJ,EAAA9I,EAAAuI,GACA,IAAAjC,EAAAtG,GACA,UAAAqG,UACAb,EAAA+C,KACAA,EAAAd,EAAAc,IACA,OAoTA,SAAAU,EAAAtD,EAAAP,EAAAC,GACA,IAAAjF,EAAAsF,EAAAC,EAAAP,EAAAC,GACA,GAAAjF,EACA,SACA,IAAA8I,EAAAjB,EAAA7C,GACA,IAAA2B,EAAAmC,GACA,OAAAD,EAAAtD,EAAAuD,EAAA7D,GACA,SA3TA4D,CAAAH,EAAA9I,EAAAuI,KA4CAzI,EAAA,iBAPA,SAAAgJ,EAAA9I,EAAAuI,GACA,IAAAjC,EAAAtG,GACA,UAAAqG,UACAb,EAAA+C,KACAA,EAAAd,EAAAc,IACA,OAAA7C,EAAAoD,EAAA9I,EAAAuI,KA4CAzI,EAAA,cAPA,SAAAgJ,EAAA9I,EAAAuI,GACA,IAAAjC,EAAAtG,GACA,UAAAqG,UACAb,EAAA+C,KACAA,EAAAd,EAAAc,IACA,OAmPA,SAAAY,EAAAxD,EAAAP,EAAAC,GACA,IAAAjF,EAAAsF,EAAAC,EAAAP,EAAAC,GACA,GAAAjF,EACA,OAAAwF,EAAAD,EAAAP,EAAAC,GACA,IAAA6D,EAAAjB,EAAA7C,GACA,IAAA2B,EAAAmC,GACA,OAAAC,EAAAxD,EAAAuD,EAAA7D,GACA,OA1PA8D,CAAAL,EAAA9I,EAAAuI,KA4CAzI,EAAA,iBAPA,SAAAgJ,EAAA9I,EAAAuI,GACA,IAAAjC,EAAAtG,GACA,UAAAqG,UACAb,EAAA+C,KACAA,EAAAd,EAAAc,IACA,OAAA3C,EAAAkD,EAAA9I,EAAAuI,KA2CAzI,EAAA,kBAPA,SAAAE,EAAAuI,GACA,IAAAjC,EAAAtG,GACA,UAAAqG,UACAb,EAAA+C,KACAA,EAAAd,EAAAc,IACA,OAyLA,SAAAa,EAAAhE,EAAAC,GACA,IAAAgE,EAAAtD,EAAAX,EAAAC,GACA,IAAA6D,EAAAjB,EAAA7C,GACA,UAAA8D,EACA,OAAAG,EACA,IAAAC,EAAAF,EAAAF,EAAA7D,GACA,GAAAiE,EAAA9M,QAAA,EACA,OAAA6M,EACA,GAAAA,EAAA7M,QAAA,EACA,OAAA8M,EACA,IAAAzG,EAAA,IAAAW,EACA,IAAArH,EAAA,GACA,QAAAoN,EAAA,EAAAC,EAAAH,EAAiDE,EAAAC,EAAAhN,OAAuB+M,IAAA,CACxE,IAAAhO,EAAAiO,EAAAD,GACAE,EAAA5G,EAAA7B,IAAAzF,GACAkO,IACA5G,EAAAc,IAAApI,GACAY,EAAA8C,KAAA1D,IAGA,QAAA6C,EAAA,EAAAsL,EAAAJ,EAAuDlL,EAAAsL,EAAAlN,OAA0B4B,IAAA,CACjF,IAAA7C,EAAAmO,EAAAtL,GACAqL,EAAA5G,EAAA7B,IAAAzF,GACAkO,IACA5G,EAAAc,IAAApI,GACAY,EAAA8C,KAAA1D,IAGA,OAAAY,EArNAiN,CAAApJ,EAAAuI,KA2CAzI,EAAA,qBAPA,SAAAE,EAAAuI,GACA,IAAAjC,EAAAtG,GACA,UAAAqG,UACAb,EAAA+C,KACAA,EAAAd,EAAAc,IACA,OAAAxC,EAAA/F,EAAAuI,KAwDAzI,EAAA,iBAnBA,SAAAgJ,EAAA9I,EAAAuI,GACA,IAAAjC,EAAAtG,GACA,UAAAqG,UACAb,EAAA+C,KACAA,EAAAd,EAAAc,IACA,IAAA9C,EAAAN,EAAAnF,EAAAuI,GAAA,GACA,GAAA/C,EAAAC,GACA,SACA,IAAAA,EAAA3C,OAAAgG,GACA,SACA,GAAArD,EAAA1C,KAAA,EACA,SACA,IAAAwC,EAAA3B,EAAA/I,IAAAmF,GAEA,OADAuF,EAAAzC,OAAAyF,GACAhD,EAAAxC,KAAA,IAEAa,EAAAd,OAAA9C,IACA,KAxfAzG,CAAAuG,GAZA,GAHA,CA2lCCJ,MAAA;;;;;;;;;;;;;;;AC1lCD,IAAAiK,EAAA,SAAArP,EAAAiC,GAIA,OAHAoN,EAAAjP,OAAAkP,gBACA,CAAUhJ,UAAA,cAAgB3E,OAAA,SAAA3B,EAAAiC,GAAsCjC,EAAAsG,UAAArE,IAChE,SAAAjC,EAAAiC,GAAyB,QAAAT,KAAAS,IAAAV,eAAAC,KAAAxB,EAAAwB,GAAAS,EAAAT,MACzBxB,EAAAiC,IAGO,SAAAsN,EAAAvP,EAAAiC,GAEP,SAAA8L,IAAmB/K,KAAA8K,YAAA9N,EADnBqP,EAAArP,EAAAiC,GAEAjC,EAAAsB,UAAA,OAAAW,EAAA7B,OAAAY,OAAAiB,IAAA8L,EAAAzM,UAAAW,EAAAX,UAAA,IAAAyM,GAGO,IAAAyB,EAAA,WAQP,OAPAA,EAAApP,OAAAqP,QAAA,SAAA7O,GACA,QAAAa,EAAA/B,EAAA,EAAAyB,EAAAuO,UAAAxN,OAAgDxC,EAAAyB,EAAOzB,IAEvD,QAAA8B,KADAC,EAAAiO,UAAAhQ,GACAU,OAAAkB,UAAAC,eAAA1B,KAAA4B,EAAAD,KAAAZ,EAAAY,GAAAC,EAAAD,IAEA,OAAAZ,IAEA+O,MAAA3M,KAAA0M,YAaO,SAAAE,EAAA5B,EAAAtI,EAAAzE,EAAA4O,GACP,IAAA7P,EAAAD,EAAA2P,UAAAxN,OAAA1B,EAAAT,EAAA,EAAA2F,EAAA,OAAAmK,IAAAzP,OAAA0P,yBAAApK,EAAAzE,GAAA4O,EACA,oBAAAzK,SAAA,mBAAAA,QAAA2K,SAAAvP,EAAA4E,QAAA2K,SAAA/B,EAAAtI,EAAAzE,EAAA4O,QACA,QAAAnQ,EAAAsO,EAAA9L,OAAA,EAA4CxC,GAAA,EAAQA,KAAAM,EAAAgO,EAAAtO,MAAAc,GAAAT,EAAA,EAAAC,EAAAQ,GAAAT,EAAA,EAAAC,EAAA0F,EAAAzE,EAAAT,GAAAR,EAAA0F,EAAAzE,KAAAT,GACpD,OAAAT,EAAA,GAAAS,GAAAJ,OAAAC,eAAAqF,EAAAzE,EAAAT,KC1BO,SAASwP,EAAWC,GACzB,OAAOA,EAAIC,MAAM,WAAM,WAOlB,SAASC,EAAiBC,GAC/B,OAAOzO,MAAMD,QAAQ0O,IAAOA,aAAchG,YAAcgG,aAAcC,aAAeD,aAAcE,aAAeF,aAAcG,cAAgBH,aAAcI,WAAaJ,aAAcK,YAAcL,aAAcM,YAAcN,aAAcO,aAQnP,IAAAC,EAAA,WAGE,SAAAA,EAA6BR,EAAuCS,GAAvC7N,KAAAoN,KAAuCpN,KAAA6N,UAF5D7N,KAAA8N,SAAW,EAuMrB,OAjME1Q,OAAAC,eAAIuQ,EAAAtP,UAAA,SAAM,KAAV,WAEE,GAAI0B,KAAK8N,SAAW,EAClB,OAAO9N,KAAK8N,QAEd,IAAInR,EAAI,EAGR,OAFAqD,KAAK+N,QAAQ,WAAM,OAAApR,MACnBqD,KAAK8N,QAAUnR,EACRA,mCAGTiR,EAAAtP,UAAA0P,OAAA,SAAOC,GAEL,OAAO,IAAIL,EAAW5N,KAAKoN,GAAIpN,KAAK6N,QAAQtM,OAAO0M,KAGrDL,EAAAtP,UAAAqF,IAAA,SAAOsK,GAEL,OAAO,IAAIC,EAASlO,KAAMiO,IAG5BL,EAAAtP,UAAAyP,QAAA,SAAQE,GACN,GAAId,EAAcnN,KAAKoN,IAErBe,EAAO,IAAK,IAAIC,EAAI,EAAGA,EAAIpO,KAAKoN,GAAGlO,SAAUkP,EAAG,CAE9C,IADA,IAAMC,EAAIrO,KAAKoN,GAAGgB,GACFnC,EAAA,EAAAnL,EAAAd,KAAK6N,QAAL5B,EAAAnL,EAAA5B,OAAA+M,IAAc,CAC5B,KADSvB,EAAC5J,EAAAmL,IACHoC,EAAGD,GACR,SAASD,EAGbF,EAASI,EAAGD,OAThB,CAeA,IAAIE,EAAQ,EACNlB,EAAKpN,KAAKoN,GAAG3P,OAAO0F,YACtBoL,EAAInB,EAAGvI,OACPnI,EAAI,EACRyR,EAAO,MAAQI,EAAEvJ,MAAM,CACrB,IAAgB,IAAAwJ,EAAA,EAAAC,EAAAzO,KAAK6N,QAALW,EAAAC,EAAAvP,OAAAsP,IAAc,CAC5B,KADS9D,EAAC+D,EAAAD,IACJD,EAAE5Q,MAAOjB,GAAf,CAGA6R,EAAInB,EAAGvI,OACPnI,IACA,SAASyR,GAEXF,EAASM,EAAE5Q,MAAO2Q,KAClBC,EAAInB,EAAGvI,OACPnI,OAIJkR,EAAAtP,UAACb,OAAO0F,UAAR,eAAAuL,EAAA1O,KACQoN,EAAKpN,KAAKoN,GAAG3P,OAAO0F,YAkB1B,MAAO,CAAC0B,KAjBK,WACX,IAAI0J,EAAInB,EAAGvI,OACPnI,GAAK,EACTyR,EAAO,MAAQI,EAAEvJ,MAAM,CACrBtI,IACA,IAAgB,IAAAuP,EAAA,EAAAnL,EAAA4N,EAAKb,QAAL5B,EAAAnL,EAAA5B,OAAA+M,IACd,KAAIvB,EADM5J,EAAAmL,IACJsC,EAAE5Q,MAAOjB,GAAf,CAIA6R,EAAInB,EAAGvI,OACP,SAASsJ,EAEX,OAAOI,EAET,OAAOA,KAKXX,EAAAtP,UAAAqQ,KAAA,SAAKV,GACH,GAAId,EAAcnN,KAAKoN,IAAK,CAE1Be,EAAO,IAAK,IAAIS,EAAI,EAAGA,EAAI5O,KAAKoN,GAAGlO,SAAU0P,EAAG,CAE9C,IADA,IAAMC,EAAI7O,KAAKoN,GAAGwB,GACF3C,EAAA,EAAAnL,EAAAd,KAAK6N,QAAL5B,EAAAnL,EAAA5B,OAAA+M,IAAc,CAC5B,KADSvB,EAAC5J,EAAAmL,IACH4C,EAAGD,GACR,SAAST,EAGb,GAAIF,EAASY,EAAGD,GACd,OAAO,EAGX,OAAO,EAGT,IAAIN,EAAQ,EACNlB,EAAKpN,KAAKoN,GAAG3P,OAAO0F,YACtBoL,EAAInB,EAAGvI,OACPnI,EAAI,EACRyR,EAAO,MAAQI,EAAEvJ,MAAM,CACrB,IAAgB,IAAAwJ,EAAA,EAAAC,EAAAzO,KAAK6N,QAALW,EAAAC,EAAAvP,OAAAsP,IAAc,CAC5B,KADS9D,EAAC+D,EAAAD,IACJD,EAAE5Q,MAAOjB,GAAf,CAGA6R,EAAInB,EAAGvI,OACPnI,IACA,SAASyR,GAEX,GAAIF,EAASM,EAAE5Q,MAAO2Q,KACpB,OAAO,EAETC,EAAInB,EAAGvI,OACPnI,IAEF,OAAO,GAGTkR,EAAAtP,UAAA4O,MAAA,SAAMe,GACJ,GAAId,EAAcnN,KAAKoN,IAAK,CAE1Be,EAAO,IAAK,IAAIW,EAAI,EAAGA,EAAI9O,KAAKoN,GAAGlO,SAAU4P,EAAG,CAE9C,IADA,IAAMC,EAAI/O,KAAKoN,GAAG0B,GACF7C,EAAA,EAAAnL,EAAAd,KAAK6N,QAAL5B,EAAAnL,EAAA5B,OAAA+M,IAAc,CAC5B,KADSvB,EAAC5J,EAAAmL,IACH8C,EAAGD,GACR,SAASX,EAGb,IAAKF,EAASc,EAAGD,GACf,OAAO,EAGX,OAAO,EAGT,IAAIR,EAAQ,EACNlB,EAAKpN,KAAKoN,GAAG3P,OAAO0F,YACtBoL,EAAInB,EAAGvI,OACPnI,EAAI,EACRyR,EAAO,MAAQI,EAAEvJ,MAAM,CACrB,IAAgB,IAAAwJ,EAAA,EAAAC,EAAAzO,KAAK6N,QAALW,EAAAC,EAAAvP,OAAAsP,IAAc,CAC5B,KADS9D,EAAC+D,EAAAD,IACJD,EAAE5Q,MAAOjB,GAAf,CAGA6R,EAAInB,EAAGvI,OACPnI,IACA,SAASyR,GAEX,IAAKF,EAASM,EAAE5Q,MAAO2Q,KACrB,OAAO,EAETC,EAAInB,EAAGvI,OACPnI,IAEF,OAAO,GAGTkR,EAAAtP,UAAAsC,OAAA,SAAUqN,EAA0Ce,GAClD,GAAI7B,EAAcnN,KAAKoN,IAAK,CAE1B,IAAI6B,EAAMD,EACNE,EAAI,EACRf,EAAO,IAAK,IAAIgB,EAAI,EAAGA,EAAInP,KAAKoN,GAAGlO,SAAUiQ,EAAG,CAE9C,IADA,IAAMC,EAAIpP,KAAKoN,GAAG+B,GACFlD,EAAA,EAAAnL,EAAAd,KAAK6N,QAAL5B,EAAAnL,EAAA5B,OAAA+M,IAAc,CAC5B,KADSvB,EAAC5J,EAAAmL,IACHmD,EAAGD,GACR,SAAShB,EAGbc,EAAMhB,EAASgB,EAAKG,EAAGF,KAEzB,OAAOD,EAGT,IAAIX,EAAQ,EACNlB,EAAKpN,KAAKoN,GAAG3P,OAAO0F,YACtBoL,EAAInB,EAAGvI,OACPnI,EAAI,EACJc,EAAIwR,EACRb,EAAO,MAAQI,EAAEvJ,MAAM,CACrB,IAAgB,IAAAwJ,EAAA,EAAAC,EAAAzO,KAAK6N,QAALW,EAAAC,EAAAvP,OAAAsP,IAAc,CAC5B,KADS9D,EAAC+D,EAAAD,IACJD,EAAE5Q,MAAOjB,GAAf,CAGA6R,EAAInB,EAAGvI,OACPnI,IACA,SAASyR,GAEX3Q,EAAIyQ,EAASzQ,EAAG+Q,EAAE5Q,MAAO2Q,KACzBC,EAAInB,EAAGvI,OACPnI,IAEF,OAAOc,GAEXoQ,EAxMA,GA6MAyB,EAAA,WACE,SAAAA,EAA+BjC,GAAApN,KAAAoN,KAwGjC,OApGEhQ,OAAAC,eAAIgS,EAAA/Q,UAAA,SAAM,KAAV,WACE,OAAO0B,KAAKoN,GAAGlO,wCAGjBmQ,EAAA/Q,UAAA0P,OAAA,SAAOC,GACL,OAAO,IAAIL,EAAW5N,KAAM,CAACiO,KAO/BoB,EAAA/Q,UAAAyP,QAAA,SAAQE,GACN,GAAId,EAAcnN,KAAKoN,IACrB,IAAK,IAAI1Q,EAAI,EAAGA,EAAIsD,KAAKoN,GAAGlO,SAAUxC,EACpCuR,EAASjO,KAAKsP,KAAKtP,KAAKoN,GAAG1Q,GAAIA,GAAIA,OAIvC,KAAM0Q,EAAKpN,KAAKoN,GAAG3P,OAAO0F,YACjBoL,EAAInB,EAAGvI,OAAhB,IAAwBnI,EAAI,GAAI6R,EAAEvJ,KAAMuJ,EAAInB,EAAGvI,OAAQnI,IACrDuR,EAASjO,KAAKsP,KAAKf,EAAE5Q,MAAOjB,GAAIA,KAIpC2S,EAAA/Q,UAACb,OAAO0F,UAAR,eAAAuL,EAAA1O,KACQoN,EAAKpN,KAAKoN,GAAG3P,OAAO0F,YACtBzG,EAAI,EAgBR,MAAO,CAACmI,KAfK,WACX,IAAM0J,EAAInB,EAAGvI,OACb,GAAI0J,EAAEvJ,KACJ,MAAO,CACLrH,WAAgBiG,EAChBoB,MAAM,GAGV,IAAMrH,EAAQ+Q,EAAKY,KAAKf,EAAE5Q,MAAOjB,GAEjC,OADAA,IACO,CACLiB,MAAKA,EACLqH,MAAM,MAMZqK,EAAA/Q,UAAAqQ,KAAA,SAAKV,GACH,GAAId,EAAcnN,KAAKoN,IAAK,CAC1B,IAAK,IAAI1Q,EAAI,EAAGA,EAAIsD,KAAKoN,GAAGlO,SAAUxC,EACpC,GAAIuR,EAASjO,KAAKsP,KAAKtP,KAAKoN,GAAG1Q,GAAIA,GAAIA,GACrC,OAAO,EAGX,OAAO,EAGT,IAAM0Q,EAAKpN,KAAKoN,GAAG3P,OAAO0F,YACjBoL,EAAInB,EAAGvI,OAAhB,IAAwBnI,EAAI,GAAI6R,EAAEvJ,KAAMuJ,EAAInB,EAAGvI,OAAQnI,IACrD,GAAIuR,EAASjO,KAAKsP,KAAKf,EAAE5Q,MAAOjB,GAAIA,GAClC,OAAO,EAGX,OAAO,GAGT2S,EAAA/Q,UAAA4O,MAAA,SAAMe,GACJ,GAAId,EAAcnN,KAAKoN,IAAK,CAC1B,IAAK,IAAI1Q,EAAI,EAAGA,EAAIsD,KAAKoN,GAAGlO,SAAUxC,EACpC,IAAKuR,EAASjO,KAAKsP,KAAKtP,KAAKoN,GAAG1Q,GAAIA,GAAIA,GACtC,OAAO,EAGX,OAAO,EAGT,IAAM0Q,EAAKpN,KAAKoN,GAAG3P,OAAO0F,YACjBoL,EAAInB,EAAGvI,OAAhB,IAAwBnI,EAAI,GAAI6R,EAAEvJ,KAAMuJ,EAAInB,EAAGvI,OAAQnI,IACrD,IAAKuR,EAASjO,KAAKsP,KAAKf,EAAE5Q,MAAOjB,GAAIA,GACnC,OAAO,EAGX,OAAO,GAGT2S,EAAA/Q,UAAAsC,OAAA,SAAUqN,EAA2Ce,GACnD,GAAI7B,EAAcnN,KAAKoN,IAAK,CAE1B,IADA,IAAImC,EAAMP,EACDtS,EAAI,EAAGA,EAAIsD,KAAKoN,GAAGlO,SAAUxC,EACpC6S,EAAMtB,EAASsB,EAAKvP,KAAKsP,KAAKtP,KAAKoN,GAAG1Q,GAAIA,GAAIA,GAEhD,OAAO6S,EAGT,IAAMnC,EAAKpN,KAAKoN,GAAG3P,OAAO0F,YACtB8L,EAAMD,EACDT,EAAInB,EAAGvI,OAAhB,IAAwBnI,EAAI,GAAI6R,EAAEvJ,KAAMuJ,EAAInB,EAAGvI,OAAQnI,IACrDuS,EAAMhB,EAASgB,EAAKjP,KAAKsP,KAAKf,EAAE5Q,MAAOjB,GAAIA,GAE7C,OAAOuS,GAEXI,EAzGA,GA2GAnB,EAAA,SAAAsB,GACE,SAAAC,EAAYrC,EAA0CsC,GAAtD,IAAAhB,EACEc,EAAA3S,KAAAmD,KAAMoN,IAAGpN,YAD2C0O,EAAAgB,UAWxD,OAZ+BnD,EAAAkD,EAAAD,GAKnBC,EAAAnR,UAAAgR,KAAV,SAAef,EAAO7R,GACpB,OAAOsD,KAAK0P,MAAMnB,EAAG7R,IAGvB+S,EAAAnR,UAAAqF,IAAA,SAAOsK,GACL,OAAO,IAAI0B,EAAS3P,KAAKoN,GAAIpN,KAAK0P,MAAOzB,IAE7CwB,EAZA,CAA+BJ,GAc/BM,EAAA,SAAAH,GACE,SAAAI,EAAYxC,EAAwCsC,EAAkDG,GAAtG,IAAAnB,EACEc,EAAA3S,KAAAmD,KAAMoN,IAAGpN,YADyC0O,EAAAgB,QAAkDhB,EAAAmB,UAWxG,OAZmCtD,EAAAqD,EAAAJ,GAKjCI,EAAAtR,UAAAqF,IAAA,SAAOsK,GACL,OAAO,IAAI6B,EAAS9P,KAAKoN,GAAIpN,KAAK0P,MAAO1P,KAAK6P,MAAO5B,IAG7C2B,EAAAtR,UAAAgR,KAAV,SAAef,EAAO7R,GACpB,OAAOsD,KAAK6P,MAAM7P,KAAK0P,MAAMnB,EAAG7R,GAAIA,IAExCkT,EAZA,CAAmCP,GAenCS,EAAA,SAAAN,GACE,SAAAO,EAAY3C,EAAwCsC,EAAkDG,EAAkDG,GAAxJ,IAAAtB,EACEc,EAAA3S,KAAAmD,KAAMoN,IAAGpN,YADyC0O,EAAAgB,QAAkDhB,EAAAmB,QAAkDnB,EAAAsB,UAY1J,OAbuCzD,EAAAwD,EAAAP,GAKrCO,EAAAzR,UAAAqF,IAAA,SAAOsK,GAAP,IAAAS,EAAA1O,KAEE,OAAO,IAAIkO,EAASlO,KAAKoN,GADX,SAACmB,EAAO7R,GAAc,OAAAuR,EAASS,EAAKsB,MAAMtB,EAAKmB,MAAMnB,EAAKgB,MAAMnB,EAAG7R,GAAIA,GAAIA,GAAIA,MAIrFqT,EAAAzR,UAAAgR,KAAV,SAAef,EAAO7R,GACpB,OAAOsD,KAAKgQ,MAAMhQ,KAAK6P,MAAM7P,KAAK0P,MAAMnB,EAAG7R,GAAIA,GAAIA,IAEvDqT,EAbA,CAAuCV,GAevCY,EAAA,WAGE,SAAAA,EAA6BC,GAAAlQ,KAAAkQ,WAFrBlQ,KAAAmQ,KAAgC,KA4G1C,OAtGE/S,OAAAC,eAAI4S,EAAA3R,UAAA,MAAG,KAAP,WACE,OAAI0B,KAAKmQ,KACAnQ,KAAKmQ,MAEVhD,EAAcnN,KAAKkQ,UACrBlQ,KAAKmQ,KAAOnQ,KAAKkQ,SAEjBlQ,KAAKmQ,KAAOxR,MAAMyR,KAAKpQ,KAAKkQ,UAEvBlQ,KAAKmQ,uCAGdF,EAAA3R,UAACb,OAAO0F,UAAR,WACE,OAAOnD,KAAKkQ,SAASzS,OAAO0F,aAG9B8M,EAAA3R,UAAA0P,OAAA,SAAOC,GACL,OAAO,IAAIL,EAAW5N,KAAKqQ,IAAK,CAACpC,KAGnCgC,EAAA3R,UAAAqF,IAAA,SAAOsK,GACL,OAAO,IAAIC,EAASlO,KAAKqQ,IAAKpC,IAGhCgC,EAAA3R,UAAAyP,QAAA,SAAQE,GACN,GAAId,EAAcnN,KAAKkQ,UACrB,IAAK,IAAIxT,EAAI,EAAGA,EAAIsD,KAAKkQ,SAAShR,SAAUxC,EAC1CuR,EAASjO,KAAKkQ,SAASxT,GAAIA,OAI/B,KAAM0Q,EAAKpN,KAAKvC,OAAO0F,YACdoL,EAAInB,EAAGvI,OAAhB,IAAwBnI,EAAI,GAAI6R,EAAEvJ,KAAMuJ,EAAInB,EAAGvI,OAAQnI,IACrDuR,EAASM,EAAE5Q,MAAOjB,KAItBuT,EAAA3R,UAAAqQ,KAAA,SAAKV,GACH,GAAId,EAAcnN,KAAKkQ,UAAW,CAChC,IAAK,IAAIxT,EAAI,EAAGA,EAAIsD,KAAKkQ,SAAShR,SAAUxC,EAC1C,GAAIuR,EAASjO,KAAKkQ,SAASxT,GAAIA,GAC7B,OAAO,EAGX,OAAO,EAGT,IAAM0Q,EAAKpN,KAAKvC,OAAO0F,YACdoL,EAAInB,EAAGvI,OAAhB,IAAwBnI,EAAI,GAAI6R,EAAEvJ,KAAMuJ,EAAInB,EAAGvI,OAAQnI,IACrD,GAAIuR,EAASM,EAAE5Q,MAAOjB,GACpB,OAAO,EAGX,OAAO,GAGTuT,EAAA3R,UAAA4O,MAAA,SAAMe,GACJ,GAAId,EAAcnN,KAAKkQ,UAAW,CAChC,IAAK,IAAIxT,EAAI,EAAGA,EAAIsD,KAAKkQ,SAAShR,SAAUxC,EAC1C,IAAKuR,EAASjO,KAAKkQ,SAASxT,GAAIA,GAC9B,OAAO,EAGX,OAAO,EAGT,IAAM0Q,EAAKpN,KAAKvC,OAAO0F,YACdoL,EAAInB,EAAGvI,OAAhB,IAAwBnI,EAAI,GAAI6R,EAAEvJ,KAAMuJ,EAAInB,EAAGvI,OAAQnI,IACrD,IAAKuR,EAASM,EAAE5Q,MAAOjB,GACrB,OAAO,EAGX,OAAO,GAGTuT,EAAA3R,UAAAsC,OAAA,SAAUqN,EAA0Ce,GAClD,GAAI7B,EAAcnN,KAAKkQ,UAAW,CAEhC,IADA,IAAII,EAAMtB,EACDtS,EAAI,EAAGA,EAAIsD,KAAKkQ,SAAShR,SAAUxC,EAC1C4T,EAAMrC,EAASqC,EAAKtQ,KAAKkQ,SAASxT,GAAIA,GAExC,OAAO4T,EAGT,IAAMlD,EAAKpN,KAAKvC,OAAO0F,YACnB8L,EAAMD,EACDT,EAAInB,EAAGvI,OAAhB,IAAwBnI,EAAI,GAAI6R,EAAEvJ,KAAMuJ,EAAInB,EAAGvI,OAAQnI,IACrDuS,EAAMhB,EAASgB,EAAKV,EAAE5Q,MAAOjB,GAE/B,OAAOuS,GAGT7R,OAAAC,eAAI4S,EAAA3R,UAAA,SAAM,KAAV,WACE,IAAM8O,EAAKpN,KAAKkQ,SAChB,OAAI/C,EAAcC,GACTA,EAAGlO,OAERkO,aAAcjH,KAAOiH,aAAclJ,IAC9BkJ,EAAG3H,KAELzF,KAAKqQ,IAAInR,wCAEpB+Q,EA7GA,GAkHO,SAASM,EAAWL,GACzB,OAAO,IAAID,EAAQC,GAIrB,IAAAM,EAAA,WACE,SAAAA,EAA6BC,GAAAzQ,KAAAyQ,OAkD/B,OA9CED,EAAAlS,UAACb,OAAO0F,UAAR,WACE,IAAMsN,EAAO9R,MAAMyR,KAAKpQ,KAAKyQ,MACzBrD,EAAKqD,EAAKC,QAASjT,OAAO0F,YACxB0B,EAAO,WACX,IAAM0J,EAAInB,EAAGvI,OACb,OAAK0J,EAAEvJ,KAGa,IAAhByL,EAAKvR,OAEAqP,GAGTnB,EAAKqD,EAAKC,QAASjT,OAAO0F,YACnB0B,KARE0J,GAUX,MAAO,CAAC1J,KAAIA,IAGd2L,EAAAlS,UAAA0P,OAAA,SAAOC,GACL,OAAO,IAAIL,EAAW5N,KAAM,CAACiO,KAG/BuC,EAAAlS,UAAAqF,IAAA,SAAOsK,GACL,OAAO,IAAIC,EAASlO,KAAMiO,IAG5BuC,EAAAlS,UAAAyP,QAAA,SAAQE,GACNjO,KAAKyQ,KAAK1C,QAAQ,SAACtP,GAAM,OAAAA,EAAEsP,QAAQE,MAGrCuC,EAAAlS,UAAAqQ,KAAA,SAAKV,GACH,OAAOjO,KAAKyQ,KAAK9B,KAAK,SAAClQ,GAAM,OAAAA,EAAEkQ,KAAKV,MAGtCuC,EAAAlS,UAAA4O,MAAA,SAAMe,GACJ,OAAOjO,KAAKyQ,KAAKvD,MAAM,SAACzO,GAAM,OAAAA,EAAEyO,MAAMe,MAGxCuC,EAAAlS,UAAAsC,OAAA,SAAUqN,EAA0Ce,GAClD,OAAOhP,KAAKyQ,KAAK7P,OAAO,SAACqO,EAAKxQ,GAAM,OAAAA,EAAEmC,OAAOqN,EAAUgB,IAAMD,IAG/D5R,OAAAC,eAAImT,EAAAlS,UAAA,SAAM,KAAV,WACE,OAAO0B,KAAKyQ,KAAK7P,OAAO,SAAC5B,EAAGC,GAAM,OAAAD,EAAIC,EAAEC,QAAQ,oCAEpDsR,EAnDA,GCtdA,IAAMG,EAAqB,EACrBC,EAAqB3J,KAAK4J,IAAI3O,UAAU4O,oBAAsB,EAAG,GA2BvEC,EAAA,WAQE,SAAAA,EAA6BC,GAA7B,IAAAtC,EAAA1O,KAA6BA,KAAAgR,OAPZhR,KAAAiR,QAAyB,GAClCjR,KAAAkR,oBAA8B,EAI9BlR,KAAAmR,kBAAoB,EAaXnR,KAAAoR,cAAgB,WAE/B,KAAM1C,EAAKuC,QAAQ/R,OAASyR,GAAoB,CAC9C,IAAMU,EAAS3C,EAAKuC,QAAQK,UAAU,SAACtU,GAAM,OAAiB,IAAjBA,EAAEuU,MAAM9L,OACrD,GAAI4L,EAAS,EACX,MAEQ3C,EAAKuC,QAAQO,OAAOH,EAAQ,GAAG,GACvCI,OAAOC,YAGXhD,EAAKiD,eArBL,IAAK,IAAIjV,EAAI,EAAGA,EAAIiU,IAAsBjU,EAAG,CAC3C,IAAMkV,EAAI,IAAIC,OAAOb,GACrBhR,KAAKiR,QAAQtP,KAAK,CAAC8P,OAAQG,EAAGL,MAAO,IAAIpL,IAAO2L,KAAM,IAAI3L,IAAOrB,MAAOpI,KA0M9E,OAtMEqU,EAAAzS,UAAAoT,UAAA,WACE1R,KAAKiR,QAAQO,OAAO,EAAGxR,KAAKiR,QAAQ/R,QAAQ6O,QAAQ,SAAC6D,GAAM,OAAAA,EAAEH,OAAOC,eAiB9DX,EAAAzS,UAAAyT,eAAR,WACM/R,KAAKkR,oBAAsB,IAC7Bc,aAAahS,KAAKkR,oBAClBlR,KAAKkR,oBAAsB,GAG7B,IAAMe,EAAcjS,KAAKiR,QAAQiB,KAAK,SAAClV,GAAM,OAAiB,IAAjBA,EAAEuU,MAAM9L,OAErD,GAAIwM,EACF,OAAOA,EAGT,GAAIjS,KAAKiR,QAAQ/R,QAAU0R,EAEzB,OAAO5Q,KAAKiR,QAAQrQ,OAAO,SAAC5B,EAAGC,GAAM,OAAK,MAALD,GAAaA,EAAEuS,MAAM9L,KAAOxG,EAAEsS,MAAM9L,KAAOxG,EAAID,GAAuB,MAI7G,IAAMxB,EAAiB,CACrBiU,OAAQ,IAAII,OAAO7R,KAAKgR,MACxBO,MAAO,IAAIpL,IACX2L,KAAM,IAAI3L,IACVrB,MAAO9E,KAAKiR,QAAQ/R,QAGtB,OADAc,KAAKiR,QAAQtP,KAAKnE,GACXA,GAGDuT,EAAAzS,UAAAqT,YAAR,YACmC,IAA7B3R,KAAKkR,oBAA6BlR,KAAKiR,QAAQ/R,OAASyR,IAC1D3Q,KAAKkR,mBAAqB5O,KAAK6P,WAAWnS,KAAKoR,cAxFzB,OAgG1BL,EAAAzS,UAAA8T,UAAA,SAAUC,EAAyEC,EAAWC,EAAiBpL,EAAoDqL,EAAqBC,GAAxL,IAAA/D,EAAA1O,KACE,OAAO,IAAI0S,QAAQ,SAACC,GAClB,IAAMC,EAAMlE,EAAKyC,oBACXrQ,EAAA4N,EAAAqD,iBAACN,EAAA3Q,EAAA2Q,OAAQF,EAAAzQ,EAAAyQ,MAAOO,EAAAhR,EAAAgR,KAEhBe,EAAW,SAACC,GAChB,IAAMtV,EAAoBsV,EAAI3L,KAC1B3J,EAAEoV,MAAQA,GAAOpV,EAAE6U,OAASA,IAIhCZ,EAAOsB,oBAAoB,UAAWF,GACtCtB,EAAM/L,OAAOoN,GACblE,EAAKiD,cACLgB,EAAcnV,EAAGwV,SAGnBvB,EAAOwB,iBAAiB,UAAWJ,GAEnCtB,EAAMlL,IAAIuM,GAEV,IAAME,EAAW1V,OAAOqP,OAAO,CAC7B4F,KAAIA,EACJO,IAAGA,EACHL,QAAOA,EACPC,WAAYA,GAAc,MACzBF,GAEEC,GAAYT,EAAKpO,IAAI6O,KAExBO,EAAI3L,KAAOA,EACPoL,GACFT,EAAKzL,IAAIkM,KAITE,GAAaD,GAAeV,EAAKpO,IAAI8O,KAEvCM,EAAIL,QAAUA,EACVD,GACFV,EAAKzL,IAAImM,IAMbf,EAAOyB,YAAYJ,MAMvB/B,EAAAzS,UAAAqD,KAAA,SAAc0Q,EAAcC,EAASa,EAA8BC,GAAnE,IAAA1E,EAAA1O,KACE,OAAO,IAAI0S,QAAW,SAACC,GACrB,IAAMC,EAAMlE,EAAKyC,oBACXrQ,EAAA4N,EAAAqD,iBAACN,EAAA3Q,EAAA2Q,OAAQF,EAAAzQ,EAAAyQ,MAETsB,EAAW,SAACC,GAChB,IAAMtV,EAAoBsV,EAAI3L,KAC1B3J,EAAEoV,MAAQA,GAAOpV,EAAE6U,OAASA,IAIhCZ,EAAOsB,oBAAoB,UAAWF,GACtCtB,EAAM/L,OAAOoN,GACblE,EAAKiD,cACLgB,EAAQS,EAAWA,EAAc5V,GAAUA,KAG7CiU,EAAOwB,iBAAiB,UAAWJ,GACnCtB,EAAMlL,IAAIuM,GACV,IAAME,EAAM1V,OAAOqP,OAAO,CACxB4F,KAAIA,EACJO,IAAGA,GACFN,GAGHb,EAAOyB,YAAYJ,EAAKK,MAI5BpC,EAAAzS,UAAA+U,OAAA,SAAOC,EAAanM,GAClB,IAAgB,IAAA8E,EAAA,EAAAnL,EAAAd,KAAKiR,QAALhF,EAAAnL,EAAA5B,OAAA+M,IAAc,CAAlBnL,EAAAmL,GACR6F,KAAKzL,IAAIiN,GAEbtT,KAAKuT,UAAU,SAAU,CACvBD,IAAGA,EACHnM,KAAIA,KAIR4J,EAAAzS,UAAAkV,UAAA,SAAUF,EAAaG,QAAA,IAAAA,OAAA,GAQrB,IAPA,IACMX,EAAM,CACVT,KAAM,YACNO,IAHU5S,KAAKmR,oBAIfmC,IAAGA,EACHG,WAAUA,GAEIxH,EAAA,EAAAnL,EAAAd,KAAKiR,QAALhF,EAAAnL,EAAA5B,OAAA+M,IAAc,CAAzB,IAAM2F,EAAC9Q,EAAAmL,GAGV,GADA2F,EAAEH,OAAOyB,YAAYJ,GAChBW,EAIL,IAAgB,IAAAjF,EAAA,EAAAC,EAAA9P,MAAMyR,KAAKwB,EAAEE,MAAbtD,EAAAC,EAAAvP,OAAAsP,IAAoB,CAA/B,IAAMhR,EAACiR,EAAAD,GACNhR,EAAEiW,WAAWH,IACf1B,EAAEE,KAAKtM,OAAOhI,QALhBoU,EAAEE,KAAKtM,OAAO8N,KAWpBvC,EAAAzS,UAAAoV,WAAA,WAQE,IAPA,IACMZ,EAAM,CACVT,KAAM,YACNO,IAHU5S,KAAKmR,oBAIfmC,IAAK,GACLG,YAAY,GAEExH,EAAA,EAAAnL,EAAAd,KAAKiR,QAALhF,EAAAnL,EAAA5B,OAAA+M,IAAc,CAAzB,IAAM2F,EAAC9Q,EAAAmL,GAEV2F,EAAEH,OAAOyB,YAAYJ,GACrBlB,EAAEE,KAAKpM,UAIXqL,EAAAzS,UAAAiV,UAAA,SAAalB,EAAcC,GAQzB,IAPA,IAAMM,EAAM5S,KAAKmR,oBAEX2B,EAAM1V,OAAOqP,OAAO,CACxB4F,KAAIA,EACJO,IAAGA,GACFN,GAEarG,EAAA,EAAAnL,EAAAd,KAAKiR,QAALhF,EAAAnL,EAAA5B,OAAA+M,IAAc,CAAlBnL,EAAAmL,GACRwF,OAAOyB,YAAYJ,KAI3B/B,EArNA,GClEO,SAAS4C,EAAgBzU,GAC9B,OAAe,IAAXA,EACK,EAGF+H,KAAK2M,KAAK3M,KAAK4M,IAAI3U,GAAU+H,KAAK6M,KAAO,EAQ3C,SAASC,EAAOxP,EAAa0K,GAElC,IADA,IAAI+E,EAAMC,OAAOC,kBACDjI,EAAA,EAAAkI,EAAA5P,EAAA0H,EAAAkI,EAAAjV,OAAA+M,IAAQ,CAAnB,IAAMjP,EAACmX,EAAAlI,GACJsC,EAAIU,EAAMA,EAAIjS,GAAkBA,EAClCuR,EAAIyF,IACNA,EAAMzF,GAGV,OAAOyF,EAQF,SAASI,EAAO7P,EAAa0K,GAElC,IADA,IAAI4B,EAAMoD,OAAOI,kBACDpI,EAAA,EAAAqI,EAAA/P,EAAA0H,EAAAqI,EAAApV,OAAA+M,IAAQ,CAAnB,IAAMjP,EAACsX,EAAArI,GACJsC,EAAIU,EAAMA,EAAIjS,GAAkBA,EAClCuR,EAAIsC,IACNA,EAAMtC,GAGV,OAAOsC,EAQF,SAAS0D,EAAUhQ,EAAa0K,GAGrC,IAFA,IAAI4B,EAAMoD,OAAOI,kBACbL,EAAMC,OAAOC,kBACDjI,EAAA,EAAAuI,EAAAjQ,EAAA0H,EAAAuI,EAAAtV,OAAA+M,IAAQ,CAAnB,IAAMjP,EAACwX,EAAAvI,GACJsC,EAAIU,EAAMA,EAAIjS,GAAkBA,EAClCuR,EAAIyF,IACNA,EAAMzF,GAEJA,EAAIsC,IACNA,EAAMtC,GAGV,MAAO,CAACyF,EAAKnD,GAkBR,SAAS4D,EAAMvV,GACpB,IAAM1B,EAAY,IAAImB,MAAMO,GAE5B,OADA1B,EAAEkX,KAAK,MACAlX,EAOF,SAASmX,EAASpQ,EAA2BoQ,EAAkBzV,GACpE,QADoE,IAAAA,MAASqF,EAAOrF,QACrE,IAAXA,EACF,OAAO0V,IAET,IAAMlS,GAAUxD,EAAS,GAAKyV,EACxB7P,EAAQmC,KAAK4N,MAAMnS,GACzB,GAAIoC,IAAUpC,EACZ,OAAO6B,EAAOO,GAEhB,IAAMyJ,EAAIhK,EAAOO,GAEjB,OAAOyJ,GADQhK,EAAOO,EAAQ,GACTyJ,IAAM7L,EAASoC,GAQ/B,SAASgQ,EAAUvQ,EAAa0K,GACrC,IAAMoB,EAAMpB,EAAM1K,EAAOZ,IAAIsL,GAAuB1K,EAAQjD,QAE5D,OADA+O,EAAI0E,KAAK,SAAC/V,EAAGC,GAAM,OAACD,EAAIC,GAAK,EAAKD,EAAIC,EAAI,EAAI,IACvC0V,EAAStE,EAAK,IAGvB,SAAS2E,EAAWrT,GAClB,OAAO,SAACsT,GACN,GAAK9H,EAAc8H,GAKnB,IAAK,IAAI/F,EAAI,EAAGA,EAAI+F,EAAG/V,SAAUgQ,EAC/BvN,EAAKsT,EAAG/F,SALR+F,EAAGlH,QAAQpM,IAiCV,SAASuT,EAAeC,GAC7B,IAAInB,EAAMC,OAAOC,kBACbrD,EAAMoD,OAAOI,kBACbe,EAAM,EACNlW,EAAS,EACTmW,EAAU,EAGR9Q,EAAmB,GACnB0Q,EAAyC,MAAfE,EAAsB,IAAI5H,aAAa4H,GAAe,KAEhFxT,EAAO,SAAC4M,GACZrP,GAAU,EACD,MAALqP,GAAa+G,MAAM/G,GACrB8G,GAAW,GAGT9G,EAAIyF,IACNA,EAAMzF,GAEJA,EAAIsC,IACNA,EAAMtC,GAER6G,GAAO7G,IAGHgH,EAAc,SAAChH,GACnB5M,EAAK4M,GACD0G,EACFA,EAAG/V,GAAUqP,EAEbhK,EAAO5C,KAAK4M,IAKViH,EAAU,CACdxB,IAAKY,IACL/D,IAAK+D,IACLa,KAAMb,IACNS,QAAOA,EACP7T,MAAOtC,EACPwW,YAAad,IACbe,WAAYf,IACZgB,QAAS,GACTC,OAAQjB,IACRkB,GAAIlB,IACJmB,GAAInB,KAGAoB,EAAY,SAACvX,GAcjB,IAbA,IAAM6P,EAAQpP,EAASmW,EACjBQ,EAASlB,EAASlW,EAAG,GAAK6P,GAC1BwH,EAAKnB,EAASlW,EAAG,IAAM6P,GACvByH,EAAKpB,EAASlW,EAAG,IAAM6P,GAEvB2H,EAAMF,EAAKD,EACXI,EAAOJ,EAAK,IAAMG,EAClBE,EAAQJ,EAAK,IAAME,EAErBL,EAAoB,GAEpBD,EAAaO,EAERxZ,EAAI,EAAGA,EAAI4R,IAAS5R,EAAG,CAE9B,GAAIwZ,GADE3H,EAAI9P,EAAE/B,IACE,CACZiZ,EAAapH,EACb,MAGFqH,EAAQjU,KAAK4M,GAGf,IAAImH,EAAcS,EACZC,EAA6B,GACnC,IAAS1Z,EAAI4R,EAAQ,EAAG5R,GAAK,IAAKA,EAAG,CACnC,IAAM6R,EACN,IADMA,EAAI9P,EAAE/B,IACJyZ,EAAO,CACbT,EAAcnH,EACd,MAGF6H,EAAiBzU,KAAK4M,GAKxB,OAFAqH,EAAUA,EAAQrU,OAAO6U,EAAiBC,WAEnC,CACLrC,IAAGA,EACHnD,IAAGA,EACHrP,MAAOtC,EACPmW,QAAOA,EACPI,KAAML,EAAM9G,EACZoH,YAAWA,EACXC,WAAUA,EACVC,QAAOA,EACPC,OAAMA,EACNC,GAAEA,EACFC,GAAEA,IAyBN,MAAO,CACLpU,KAAM4T,EACNe,MAvBY,WAGZ,GAAc,GAFApX,EAASmW,EAGrB,OAAOG,EAGT,IAAM/W,EAAIwW,EAAKA,EAAGF,OAASxH,aAAa6C,KAAK7L,GAAQwQ,OACrD,OAAOiB,EAAUvX,IAgBjB8X,SAbe,SAACtB,GAGhB,IAFA,IAAMxW,EAAIwW,EAAG3T,QAAQyT,OAEZ7F,EAAI,EAAGA,EAAI+F,EAAG/V,SAAUgQ,EAC/BvN,EAAKsT,EAAG/F,IAGV,OAAO8G,EAAUvX,IAOjBuW,QAASA,EAAQO,IAOd,SAASiB,EAAuBC,GAMrC,IAJA,IAAMC,EAAqB,GAEvBC,EAAK,EACHC,EAAW,EAAKH,EACb/Z,EAAI,EAAGA,EAAI+Z,IAAgB/Z,EAAGia,GAAMC,EAC3CF,EAAK/U,KAAK,CACRgV,GAAEA,EACFE,GAAIF,EAAKC,EACTpV,MAAO,IAIX,IAAMsV,EAAO,EAAIF,EACXG,EAAO,EAAIH,EA2Bb5C,EAAMC,OAAOC,kBACbrD,EAAMoD,OAAOI,kBACbe,EAAM,EACNlW,EAAS,EACTmW,EAAU,EAER1T,EAAO,SAAC4M,GACZrP,GAAU,EACD,MAALqP,GAAa+G,MAAM/G,GACrB8G,GAAW,GAGT9G,EAAIyF,IACNA,EAAMzF,GAEJA,EAAIsC,IACNA,EAAMtC,GAER6G,GAAO7G,EAEPmI,EA7CY,SAACnI,GACb,GAAIA,EAAIuI,EACN,OAAO,EAET,GAAIvI,GAAKwI,EACP,OAAON,EAAe,EAExB,GAAqB,IAAjBA,EACF,OAAO,EAKT,IAHA,IAAIO,EAAM,EACNC,EAAOR,EAAe,EAEnBO,EAAMC,GAAM,CACjB,IAAMC,EAASjQ,KAAK4N,OAAOoC,EAAOD,GAAO,GACrCzI,EAAImI,EAAKQ,GAAQL,GACnBI,EAAOC,EAEPF,EAAME,EAAS,EAGnB,OAAOF,EAwBFG,CAAM5I,IAAI/M,UA2BjB,MAAO,CAACG,KAAIA,EAAE2U,MAxBA,WACZ,IAAMhI,EAAQpP,EAASmW,EACvB,OAAc,IAAV/G,EACK,CACL9M,MAAO6T,EACPA,QAAOA,EACPrB,IAAKY,IACL/D,IAAK+D,IACLa,KAAMb,IACN8B,KAAIA,EACJU,OAAQ,GAGL,CACL5V,MAAOtC,EACP8U,IAAGA,EACHnD,IAAGA,EACH4E,KAAML,EAAM9G,EACZ+G,QAAOA,EACPqB,KAAIA,EACJU,OAAQV,EAAK9V,OAAO,SAAC5B,EAAGC,GAAM,OAAAgI,KAAK4J,IAAI7R,EAAGC,EAAEuC,QAAQ,KAInCwT,QAASA,EAAQrT,IAMxC,SAAS0V,EAAmBrD,EAAkBnD,GAC5C,GAAW,MAAPmD,GAAsB,MAAPnD,EACjB,MAAO,CAACyG,gBAAiB,OAAQZ,KAAM,IAEzC,IAAMA,EAAmB,GAEzB,GAAI7F,EAAI0G,cAAgBvD,EAAIuD,eAAiB,EAAG,CAI9C,IAFA,IAAMC,EAAUxD,EAAIuD,cACdE,EAAU5G,EAAI0G,cACX7a,EAAI8a,EAAS9a,GAAK+a,IAAW/a,EACpCga,EAAK/U,KAAK,CACRgV,GAAI,IAAIrX,KAAK5C,EAAG,EAAG,GACnBma,GAAI,IAAIvX,KAAK5C,EAAI,EAAG,EAAG,GACvB8E,MAAO,IAGX,MAAO,CAACkV,KAAIA,EAAEY,gBAAiB,QAGjC,GAAKzG,EAAIrR,UAAYwU,EAAIxU,WAAc,QAA0B,CAG/D,IADA,IAAIkY,EAAK,IAAIpY,KAAK0U,EAAIuD,cAAevD,EAAI2D,WAAY3D,EAAI4D,UAClDF,GAAM7G,GAAK,EACVgG,EAAK,IAAIvX,KAAKoY,IACjBG,QAAQhB,EAAGiB,UAAY,GAC1BpB,EAAK/U,KAAK,CACRgV,GAAEe,EACFb,GAAEA,EACFrV,MAAO,IAETkW,EAAKb,EAEP,MAAO,CAACH,KAAIA,EAAEY,gBAAiB,OAKjC,IADA,IAAIX,EAAK,IAAIrX,KAAK0U,EAAIuD,cAAevD,EAAI2D,WAAY,GAC9ChB,GAAM9F,GAAK,CAChB,IAAMgG,KAAK,IAAIvX,KAAKqX,IACjBoB,SAASlB,EAAGc,WAAa,GAC5BjB,EAAK/U,KAAK,CACRgV,GAAEA,EACFE,GAAEA,EACFrV,MAAO,IAETmV,EAAKE,EAEP,MAAO,CAACH,KAAIA,EAAEY,gBAAiB,SAGjC,SAASU,EAAatB,EAAkBnI,EAAS/M,GAC/C,QAD+C,IAAAA,MAAA,GAC3C+M,EAAImI,EAAK,GAAGG,GACdH,EAAK,GAAGlV,OAASA,MADnB,CAIA,IAAM7E,EAAI+Z,EAAKxX,OAAS,EACxB,GAAIqP,EAAImI,EAAK/Z,GAAGga,GACdD,EAAK/Z,GAAG6E,OAASA,OAGnB,GAAU,IAAN7E,EAAJ,CAQA,IAHA,IAAIqa,EAAM,EACNC,EAAOta,EAEJqa,EAAMC,GAAM,CACjB,IAAMC,EAASjQ,KAAK4N,OAAOoC,EAAOD,GAAO,GACrCzI,EAAImI,EAAKQ,GAAQL,GACnBI,EAAOC,EAEPF,EAAME,EAAS,EAGnBR,EAAKM,GAAKxV,OAASA,OAfjBkV,EAAK,GAAGlV,OAASA,GAoBd,SAASyW,EAAiBC,GAC/B,IAAIlE,EAAmB,KACnBnD,EAAmB,KACnBrP,EAAQ,EACR6T,EAAU,EAGR8C,EAAQ,IAAIjU,IACZkU,EAAeF,EAAWA,EAASxB,KAAK/S,IAAI,SAAC3G,GAAM,OAAE2Z,GAAI3Z,EAAE2Z,GAAIE,GAAI7Z,EAAE6Z,GAAIrV,MAAO,KAAO,KAEvFG,EAAO,SAAC4M,GAEZ,GADA/M,GAAS,EACJ+M,GAAU,MAALA,EAUV,IANW,MAAPyF,GAAezF,EAAIyF,KACrBA,EAAMzF,IAEG,MAAPsC,GAAetC,EAAIsC,KACrBA,EAAMtC,GAEJ6J,EACFJ,EAAaI,EAAc7J,EAAG,OADhC,CAIA,IAAMtQ,EAAwB,IAAlBsQ,EAAEgJ,cAAuC,IAAfhJ,EAAEoJ,WAAmBpJ,EAAEuJ,UACzDK,EAAMzU,IAAIzF,GACZka,EAAM5a,IAAIU,GAAMuD,QAEhB2W,EAAM5S,IAAItH,EAAK,CAACuD,MAAO,EAAGgI,EAAG+E,SAjB7B8G,GAAW,GAiDf,MAAO,CAAC1T,KAAIA,EAAE2U,MA5BA,WACZ,GAAI8B,EACF,MAAO,CACLpE,IAAGA,EACHnD,IAAGA,EACHwE,QAAOA,EACP7T,MAAKA,EACL4V,OAAQgB,EAAaxX,OAAO,SAACqO,EAAKoJ,GAAM,OAAApR,KAAK4J,IAAI5B,EAAKoJ,EAAE7W,QAAQ,GAChEkV,KAAM0B,EACNd,gBAAiBY,EAAUZ,iBAIzB,IAAAxW,EAAAuW,EAAArD,EAAAnD,GAACyG,EAAAxW,EAAAwW,gBAAiBZ,EAAA5V,EAAA4V,KAIxB,OAFAyB,EAAMpK,QAAQ,SAACQ,GAAM,OAAAyJ,EAAatB,EAAMnI,EAAE/E,EAAG+E,EAAE/M,SAExC,CACLwS,IAAGA,EACHnD,IAAGA,EACHwE,QAAOA,EACP7T,MAAKA,EACL4V,OAAQV,EAAK9V,OAAO,SAACqO,EAAKoJ,GAAM,OAAApR,KAAK4J,IAAI5B,EAAKoJ,EAAE7W,QAAQ,GACxDkV,KAAIA,EACJY,gBAAeA,IAIEtC,QAASA,EAAQrT,IAUjC,SAAS2W,EAAwBC,GACtC,IAAMzb,EAAI,IAAIoH,IACdqU,EAAWxK,QAAQ,SAACyK,GAAQ,OAAA1b,EAAEyI,IAAIiT,EAAIvb,KAAM,KAE5C,IAAIoY,EAAU,EACV7T,EAAQ,EAENG,EAAO,SAAC4M,GACZ/M,GAAS,EACA,MAAL+M,EACF8G,GAAW,EAEXvY,EAAEyI,IAAIgJ,EAAEtR,MAAOH,EAAES,IAAIgR,EAAEtR,OAAS,GAAK,IAgBzC,MAAO,CAAC0E,KAAIA,EAAE2U,MAZA,WACZ,IAAMnS,EAA6BoU,EAAW5U,IAAI,SAAC3G,GAAM,OAAEwb,IAAKxb,EAAEC,KAAMuE,MAAO1E,EAAES,IAAIP,EAAEC,SAGvF,MAAO,CACLma,OAHajT,EAAQvD,OAAO,SAAC5B,EAAGC,GAAM,OAAAgI,KAAK4J,IAAI7R,EAAGC,EAAEuC,QAAQyS,OAAOI,mBAInEqC,KAAMvS,EACN3C,MAAKA,EACL6T,QAAOA,IAIUL,QAASA,EAAQrT,IAUjC,SAAS8W,EAAMlK,EAAWmK,GAC/B,QAD+B,IAAAA,MAAA,GACb,IAAdA,EACF,OAAOzR,KAAK0R,MAAMpK,GAEpB,IAAMqK,EAAQ3R,KAAK4R,IAAI,GAAIH,GAC3B,OAAOzR,KAAK0R,MAAMpK,EAAIqK,GAASA,EAW1B,SAASE,EAAQ9Z,EAAWC,EAAW8Z,GAC5C,YAD4C,IAAAA,MAAA,IACxC/Z,IAAMC,GAGHgI,KAAK+R,IAAIha,EAAIC,GAAK8Z,EAOpB,SAASE,EAAiBtb,GAC/B,OAAOA,aAAiB+U,SAAiC,mBAAf/U,EAAMub,KAO3C,SAASC,EAAiBja,EAAgBka,GAC/C,YAD+C,IAAAA,MAAAla,GAC3Cka,GAAY,IACP,IAAIhS,WAAWlI,GAEpBka,GAAY,MACP,IAAI/L,YAAYnO,GAElB,IAAIoO,YAAYpO,GAMlB,SAASma,EAAahJ,EAAuCiJ,GAClE,GAAIjJ,aAAejJ,YAAciJ,aAAehD,aAAegD,aAAe/C,YAC5E,OAAO+C,EAAI/O,QAEb,IAAM3E,EAAoB,MAAhB2c,EAAuBA,EAAejJ,EAAInR,OACpD,OAAIvC,GAAK,IACAyK,WAAWgJ,KAAKC,GAErB1T,GAAK,MACA0Q,YAAY+C,KAAKC,GAEnB/C,YAAY8C,KAAKC,GAmBnB,SAASkJ,EAAgBC,EAAwBF,GACtD,OAAQE,EAAOta,QACb,KAAK,EACH,MAAO,GACT,KAAK,EACH,OAAOsa,EAAO,GAChB,QAIE,IAHA,IAAMC,EAAQD,EAAO5Y,OAAO,SAAC5B,EAAGC,GAAM,OAAAD,EAAIC,EAAEC,QAAQ,GAC9C1B,EAxBZ,SAAoB0a,EAAwBuB,EAAeH,GACzD,OAAIpB,aAAoB9Q,WACf,IAAIA,WAAWqS,GAEpBvB,aAAoB7K,YACf,IAAIA,YAAYoM,GAErBvB,aAAoB5K,YACf,IAAIA,YAAYmM,GAElBN,EAAiBM,EAAOH,GAcjBI,CAAWF,EAAO,GAAIC,EAAOH,GACnC5I,EAAQ,EACIzE,EAAA,EAAA0N,EAAAH,EAAAvN,EAAA0N,EAAAza,OAAA+M,IAAQ,CAAnB,IAAM2N,EAACD,EAAA1N,GACVzO,EAAE+H,IAAIqU,EAAGlJ,GACTA,GAASkJ,EAAE1a,OAEb,OAAO1B,GAKb,SAASqc,EAAI7a,EAAQC,GACnB,OAAOD,EAAIC,GAAK,EAAMD,EAAIC,EAAK,EAAI,EAGrC,SAAS6a,EAAK9a,EAAQC,GACpB,OAAOD,EAAIC,EAAI,EAAMD,EAAIC,GAAM,EAAI,EAU9B,SAAS8a,EAAYtH,EAAoCuH,GAC9D,GAAIvH,EAAQvT,OAAS,EACnB,OAAOuT,EAGT,OAAQuH,EAAY9a,QAClB,KAAK,EAEH,OAAOuT,EAAQsC,OACjB,KAAK,EACH,IAAMkF,EAAID,EAAY,GAAIE,IAAML,EAAMC,EAChCK,EAAUH,EAAY,GAAII,OAChC,OAAO3H,EAAQsC,KAAK,SAAC/V,EAAGC,GACtB,IAAMzB,EAAIyc,EAAEE,EAAQnb,GAAKmb,EAAQlb,IACjC,OAAa,IAANzB,EAAUA,EAAIwB,EAAIC,IAE7B,KAAK,EACH,IAAMob,EAAKL,EAAY,GAAIE,IAAML,EAAMC,EACjCQ,EAAWN,EAAY,GAAII,OAC3BG,EAAKP,EAAY,GAAIE,IAAML,EAAMC,EACjCU,EAAWR,EAAY,GAAII,OACjC,OAAO3H,EAAQsC,KAAK,SAAC/V,EAAGC,GACtB,IAAIzB,EAAI6c,EAAGC,EAAStb,GAAIsb,EAASrb,IAEjC,OAAa,KADbzB,EAAU,IAANA,EAAUA,EAAI+c,EAAGC,EAASxb,GAAIwb,EAASvb,KAC1BzB,EAAIwB,EAAIC,IAE7B,QACE,IAAMwb,EAAIT,EAAY9a,OAChBwb,EAAKV,EAAYrW,IAAI,SAAC3G,GAAM,OAAAA,EAAEkd,IAAML,EAAMC,IAChD,OAAOrH,EAAQsC,KAAK,SAAC/V,EAAGC,GACtB,IAAK,IAAIvC,EAAI,EAAGA,EAAI+d,IAAK/d,EAAG,CAC1B,IAAMie,EAAIX,EAAYtd,GAAG0d,OACnB5c,EAAIkd,EAAGhe,GAAGie,EAAE3b,GAAI2b,EAAE1b,IACxB,GAAU,IAANzB,EACF,OAAOA,EAGX,OAAOwB,EAAIC,KAkMZ,SAAS2b,EAAqBrM,GACnC,OAAO+G,MAAM/G,GAAK,KAAO,IAAIjP,KAAKiP,GAsB7B,SAASsM,EAAsDtM,EAAWgK,GAC/E,OAAa,IAANhK,EAAU,KAAOgK,EAAWhK,EAAI,GAIzC,SAASuM,IACP,IAAMC,EAAkCzY,KAGlCwP,EAAO,IAAI5N,IAqCX8W,EAAc,SAAuDxd,GAGzE,IAAM2J,EAAU3J,EAAE2J,KAAe3J,EAAE2J,KAAe2K,EAAKvU,IAAIC,EAAE+U,SACvDE,EAAUjV,EAAEiV,QAAUjV,EAAEiV,QAAWjV,EAAEgV,WAA6BV,EAAKvU,IAAIC,EAAEgV,iBAAe5O,EAOlG,OANIpG,EAAE+U,SACJT,EAAKvM,IAAI/H,EAAE+U,QAASpL,GAElB3J,EAAEgV,YACJV,EAAKvM,IAAI/H,EAAEgV,WAAYC,GAElB,CAACtL,KAAIA,EAAEsL,QAAOA,IAkGjBwI,EAAiD,CACrDlG,KAjJW,SAACvX,GACRA,EAAE0d,YACJnB,EAAYvc,EAAEiV,QAASjV,EAAE0d,YAE3B,IAAMC,EAAQ3d,EAAEiV,QAEhBsI,EAAM7H,YAAkC,CACtCb,KAAM7U,EAAE6U,KACRO,IAAKpV,EAAEoV,IACPU,IAAK9V,EAAE8V,IACP6H,MAAKA,GACJ,CAAC3d,EAAEiV,QAAQzL,UAuIdqM,OApIa,SAAC7V,GACVA,EAAE2J,KACJ2K,EAAKvM,IAAI/H,EAAE8V,IAAK9V,EAAE2J,MAElB2K,EAAKtM,OAAOhI,EAAE8V,MAiIhBE,UA7HgB,SAAChW,GACjB,GAAKA,EAAEiW,WAKP,IAAkB,IAAAxH,EAAA,EAAAnL,EAAAnC,MAAMyR,KAAK0B,EAAKjT,QAAhBoN,EAAAnL,EAAA5B,OAAA+M,IAAyB,CAAtC,IAAMhO,EAAG6C,EAAAmL,GACRhO,EAAIwV,WAAWjW,EAAE8V,MACnBxB,EAAKtM,OAAOvH,QANd6T,EAAKtM,OAAOhI,EAAE8V,MA4HhB8H,UAnGgB,SAAC5d,GACX,IAAAsD,EAAAka,EAAAxd,GAAC2J,EAAArG,EAAAqG,KAAMsL,EAAA3R,EAAA2R,QAEPxT,EAAIgZ,EAAiBza,EAAE0a,UAC7B,GAAIzF,EAEF,IAAK,IAAI/Q,EAAK,EAAGA,EAAK+Q,EAAQvT,SAAUwC,EAAI,CAC1C,IAAM6M,EAAIpH,EAAKsL,EAAQ/Q,IACvBzC,EAAE0C,KAAKiZ,EAAqBrM,SAI9B,IAAK,IAAI7R,EAAI,EAAGA,EAAIyK,EAAKjI,SAAUxC,EACjCuC,EAAE0C,KAAKiZ,EAAqBzT,EAAKzK,KAGrCqe,EAAM7H,YAAuC,CAC3Cb,KAAM7U,EAAE6U,KACRO,IAAKpV,EAAEoV,IACPI,MAAO/T,EAAEqX,WAiFX+E,iBA7EuB,SAAC7d,GAClB,IAAAsD,EAAAka,EAAAxd,GAAC2J,EAAArG,EAAAqG,KAAMsL,EAAA3R,EAAA2R,QAEP6I,EAAO9d,EAAE+a,WAAW5U,IAAI,SAAC1G,GAAS,OAAEA,KAAIA,KACxCgC,EAAIqZ,EAAwBgD,GAClC,GAAI7I,EAEF,IAAK,IAAI/Q,EAAK,EAAGA,EAAK+Q,EAAQvT,SAAUwC,EACtCzC,EAAE0C,KAAKkZ,EAA4B1T,EAAKsL,EAAQ/Q,IAAM4Z,SAIxD,IAAK,IAAI5e,EAAI,EAAGA,EAAIyK,EAAKjI,SAAUxC,EACjCuC,EAAE0C,KAAKkZ,EAA4B1T,EAAKzK,GAAI4e,IAIhDP,EAAM7H,YAA8C,CAClDb,KAAM7U,EAAE6U,KACRO,IAAKpV,EAAEoV,IACPI,MAAO/T,EAAEqX,WA0DXiF,YAtDkB,SAAC/d,GACb,IAAAsD,EAAAka,EAAAxd,GAAC2J,EAAArG,EAAAqG,KAAMsL,EAAA3R,EAAA2R,QAEPxT,EAAIuX,EAAuBhZ,EAAEiZ,cAEnC,GAAIhE,EAEF,IAAK,IAAI/Q,EAAK,EAAGA,EAAK+Q,EAAQvT,SAAUwC,EACtCzC,EAAE0C,KAAKwF,EAAKsL,EAAQ/Q,UAItB,IAAK,IAAIhF,EAAI,EAAGA,EAAIyK,EAAKjI,SAAUxC,EACjCuC,EAAE0C,KAAKwF,EAAKzK,IAIhBqe,EAAM7H,YAAyC,CAC7Cb,KAAM7U,EAAE6U,KACRO,IAAKpV,EAAEoV,IACPI,MAAO/T,EAAEqX,WAmCXkF,aA/BmB,SAAChe,GACd,IAIFwV,EAJElS,EAAAka,EAAAxd,GAAC2J,EAAArG,EAAAqG,KAAMsL,EAAA3R,EAAA2R,QAEPxT,EAAIiW,EAAezC,EAAUA,EAAQvT,YAAS0E,GAGpD,GAAK6O,EAEE,CAEL,IAAK,IAAI/Q,EAAK,EAAGA,EAAK+Q,EAAQvT,SAAUwC,EACtCzC,EAAE0C,KAAKwF,EAAKsL,EAAQ/Q,KAEtBsR,EAAQ/T,EAAEqX,aANVtD,EAAQ/T,EAAEsX,SAASpP,GASrB4T,EAAM7H,YAA0C,CAC9Cb,KAAM7U,EAAE6U,KACRO,IAAKpV,EAAEoV,IACPI,MAAKA,MAeT+H,EAAM9H,iBAAiB,UAAW,SAACwI,GACjC,IAAMje,EAAIie,EAAItU,KACd,GAAqB,iBAAV3J,EAAEoV,KAAsC,iBAAXpV,EAAE6U,KAA1C,CAGA,IAAMgG,EAAI4C,EAAYzd,EAAE6U,MACpBgG,GACFA,EAAE7a,MAUD,SAASke,IACd,OD9jCmCC,EC8jCP,CAC1B3G,EAAQpV,WACR+U,EAAS/U,WACT4W,EAAuB5W,WACvBsV,EAAetV,WACfyX,EAAmBzX,WACnBoY,EAAapY,WACbqY,EAAiBrY,WACjB0Y,EAAwB1Y,WACxBuZ,EAAiBvZ,WACjBia,EAAIja,WACJka,EAAKla,WACLma,EAAYna,WACZgb,EAAqBhb,WACrBib,EAA4Bjb,YDrlCD8K,ECslCZoQ,EDrlCXc,EAASlR,EAAE9K,WACVgc,EAAOta,MAAMsa,EAAO7V,QAAQ,KAAO,EAAG6V,EAAOC,YAAY,QAQ1DC,EAAUH,EAAGhY,IAAI,SAAC3G,GAAM,OAAAA,EAAE4C,aAAYiC,KAAK,QAE3CmP,EAAO,IAAI+K,KAAK,CAACD,GAAU,CAACzJ,KAAM,2BACjC2J,IAAIC,gBAAgBjL,GAJtB,IAA8B2K,EAC7BG,EAEA9K,EAZuBtG,EACvBkR,EEjCD,SAASM,EAAeld,EAAQC,GACrC,OAAID,EAAEE,SAAWD,EAAEC,QAGZF,EAAEkO,MAAM,SAACiP,EAAIzf,GAAM,OAAAyf,IAAOld,EAAEvC,KAU9B,SAAS0f,EAAOC,GACrB,OAAOA,EAAGC,QAAQ,0CAA2C,KAQxD,SAAS5W,EAAsB6W,GACpC,KAAOA,EAAKC,WACVD,EAAKE,YAAYF,EAAKC,WAExB,OAAOD,EAQF,SAAShb,EAAUmb,GAExB,IADA,IAAMlf,EAAS,GACCyO,EAAA,EAAA0Q,EAAAD,EAAAzQ,EAAA0Q,EAAAzd,OAAA+M,IAAM,CAAjB,IAAMjN,EAAC2d,EAAA1Q,GACV,GAAKtN,MAAMD,QAAQM,GAInB,IAAiB,IAAA8B,EAAA,EAAA8b,EAAA5d,EAAA8B,EAAA8b,EAAA1d,OAAA4B,IAAG,CAAf,IAAMqb,EAAES,EAAA9b,GACXtD,EAAEmE,KAAKwa,QAJP3e,EAAEmE,KAAK3C,GAOX,OAAOxB,EChDT,IAAAqf,EAAA,CAAYlf,MAAA,cAEZ,SAAAmf,IACA,QAA8Clf,EAA9ClB,EAAA,EAAAyB,EAAAuO,UAAAxN,OAAA8G,EAAA,GAAkDtJ,EAAAyB,IAAOzB,EAAA,CACzD,KAAAkB,EAAA8O,UAAAhQ,GAAA,KAAAkB,KAAAoI,EAAA,UAAA+W,MAAA,iBAAAnf,GACAoI,EAAApI,GAAA,GAEA,WAAAof,EAAAhX,GAGA,SAAAgX,EAAAhX,GACAhG,KAAAgG,IAqDA,SAAAzI,GAAA8U,EAAApV,GACA,QAAAF,EAAAL,EAAA,EAAAyB,EAAAkU,EAAAnT,OAAqCxC,EAAAyB,IAAOzB,EAC5C,IAAAK,EAAAsV,EAAA3V,IAAAO,SACA,OAAAF,EAAAY,MAKA,SAAA4H,GAAA8M,EAAApV,EAAAgR,GACA,QAAAvR,EAAA,EAAAyB,EAAAkU,EAAAnT,OAAkCxC,EAAAyB,IAAOzB,EACzC,GAAA2V,EAAA3V,GAAAO,SAAA,CACAoV,EAAA3V,GAAAmgB,EAAAxK,IAAA/Q,MAAA,EAAA5E,GAAA6E,OAAA8Q,EAAA/Q,MAAA5E,EAAA,IACA,MAIA,OADA,MAAAuR,GAAAoE,EAAA1Q,KAAA,CAAmC1E,OAAAU,MAAAsQ,IACnCoE,EAzDA2K,EAAA1e,UAAAwe,EAAAxe,UAAA,CACAwM,YAAAkS,EACAC,GAAA,SAAAC,EAAAjP,GACA,IAEArQ,EAdAuf,EAYAnX,EAAAhG,KAAAgG,EACAoX,GAbAD,EAaAnX,GAAAkX,EAAA,IAZAG,OAAAhc,MAAA,SAAAsC,IAAA,SAAA/F,GACA,IAAAX,EAAA,GAAAP,EAAAkB,EAAAmI,QAAA,KAEA,GADArJ,GAAA,IAAAO,EAAAW,EAAA0D,MAAA5E,EAAA,GAAAkB,IAAA0D,MAAA,EAAA5E,IACAkB,IAAAuf,EAAA5e,eAAAX,GAAA,UAAAmf,MAAA,iBAAAnf,GACA,OAAYyU,KAAAzU,EAAAX,WAUZP,GAAA,EACAyB,EAAAif,EAAAle,OAGA,KAAAwN,UAAAxN,OAAA,IAOA,SAAA+O,GAAA,mBAAAA,EAAA,UAAA8O,MAAA,qBAAA9O,GACA,OAAAvR,EAAAyB,GACA,GAAAP,GAAAsf,EAAAE,EAAA1gB,IAAA2V,KAAArM,EAAApI,GAAA2H,GAAAS,EAAApI,GAAAsf,EAAAjgB,KAAAgR,QACA,SAAAA,EAAA,IAAArQ,KAAAoI,IAAApI,GAAA2H,GAAAS,EAAApI,GAAAsf,EAAAjgB,KAAA,MAGA,OAAA+C,KAZA,OAAAtD,EAAAyB,GAAA,IAAAP,GAAAsf,EAAAE,EAAA1gB,IAAA2V,QAAAzU,EAAAL,GAAAyI,EAAApI,GAAAsf,EAAAjgB,OAAA,OAAAW,GAcA0f,KAAA,WACA,IAAAA,EAAA,GAAiBtX,EAAAhG,KAAAgG,EACjB,QAAApI,KAAAoI,EAAAsX,EAAA1f,GAAAoI,EAAApI,GAAA0D,QACA,WAAA0b,EAAAM,IAEAzgB,KAAA,SAAAwV,EAAAkL,GACA,IAAApf,EAAAuO,UAAAxN,OAAA,aAAAf,EAAAP,EAAA0U,EAAA,IAAA3T,MAAAR,GAAAzB,EAAA,EAAkFA,EAAAyB,IAAOzB,EAAA4V,EAAA5V,GAAAgQ,UAAAhQ,EAAA,GACzF,IAAAsD,KAAAgG,EAAAzH,eAAA8T,GAAA,UAAA0K,MAAA,iBAAA1K,GACA,IAAA3V,EAAA,EAAAyB,GAAAP,EAAAoC,KAAAgG,EAAAqM,IAAAnT,OAA+CxC,EAAAyB,IAAOzB,EAAAkB,EAAAlB,GAAAiB,MAAAgP,MAAA4Q,EAAAjL,IAEtD3F,MAAA,SAAA0F,EAAAkL,EAAAjL,GACA,IAAAtS,KAAAgG,EAAAzH,eAAA8T,GAAA,UAAA0K,MAAA,iBAAA1K,GACA,QAAAzU,EAAAoC,KAAAgG,EAAAqM,GAAA3V,EAAA,EAAAyB,EAAAP,EAAAsB,OAAmDxC,EAAAyB,IAAOzB,EAAAkB,EAAAlB,GAAAiB,MAAAgP,MAAA4Q,EAAAjL,KAuB3C,IAAAkL,GAAA,EC7ER,SAASC,GAAOC,OAAgB,IAAAC,EAAA,GAAA1R,EAAA,EAAAA,EAAAS,UAAAxN,OAAA+M,IAAA0R,EAAA1R,EAAA,GAAAS,UAAAT,GACrC,OAAO0R,EAAOha,IAAI,SAACnF,GAAM,SAAGA,EAAIkf,IAmClC,ICqJYE,MDhJZ,WAKE,SAAAC,IACE,IAAMC,EAAS9d,KAAK+d,kBACpB/d,KAAKge,eAAiB,IAAI7X,IAAI2X,GAC9B9d,KAAKie,UAAYT,GAAQ7Q,WAAA,EAAImR,GAE7B,IAAMP,EAAOvd,KACbA,KAAKke,UAAY,eAA+B,IAAA5L,EAAA,GAAArG,EAAA,EAAAA,EAAAS,UAAAxN,OAAA+M,IAAAqG,EAAArG,GAAAS,UAAAT,GAC9CsR,EAAKY,SAAQxR,MAAb4Q,EAAI,CAAUvd,KAAKqS,KAAMrS,KAAKoe,YAAape,KAAKqe,QAAM9c,OAAK+Q,KAwFjE,OApFEuL,EAAAvf,UAAA2e,GAAA,SAAG5K,EAAyBiM,GAA5B,IAAA5P,EAAA1O,KAgBE,OAfIrB,MAAMD,QAAQ2T,GAChBA,EAAKtE,QAAQ,SAAC/Q,GACR0R,EAAKsP,eAAeta,IAAI1G,EAAEqE,MAAM,KAAK,MACvCqN,EAAK6P,iBAAiBvhB,EAAGwhB,QAAQF,IACjC5P,EAAKuP,UAAUhB,GAAGjgB,EAAGshB,MAKhBte,KAAKge,eAAeta,IAAa2O,EAAMhR,MAAM,KAAK,MAC3DrB,KAAKue,iBAAyBlM,EAAMmM,QAAQF,IAC5Cte,KAAKie,UAAUhB,GAAW5K,EAAMiM,IAI3Bte,MAQC6d,EAAAvf,UAAAigB,iBAAV,SAA2BE,EAAeC,KAQhCb,EAAAvf,UAAAyf,gBAAV,WACE,MAAO,IAGCF,EAAAvf,UAAAqgB,KAAV,SAAetM,OAAyB,IAAAC,EAAA,GAAArG,EAAA,EAAAA,EAAAS,UAAAxN,OAAA+M,IAAAqG,EAAArG,EAAA,GAAAS,UAAAT,GACtC,IAAMmS,EAAczf,MAAMD,QAAQ2T,GAAQA,EAAK,GAAKA,EACpDrS,KAAKme,SAAQxR,MAAb3M,KAAI,CAAUqS,EAAM+L,EAAape,MAAIuB,OAAK+Q,KAGpCuL,EAAAvf,UAAA6f,SAAR,SAAiB9L,EAAyB+L,EAAqBC,OAA/D,IAAA3P,EAAA1O,KAAyFsS,EAAA,GAAArG,EAAA,EAAAA,EAAAS,UAAAxN,OAAA+M,IAAAqG,EAAArG,EAAA,GAAAS,UAAAT,GACvF,IAAMkS,EAAW,SAACvgB,GAChB,GAAK8Q,EAAKsP,eAAeta,IAAI9F,GAA7B,CAOA,IAAMghB,EAAyB,CAC7BhD,OAAQlN,EACR2P,OAAMA,EACNhM,KAAMzU,EACNwgB,YAAWA,EACX9L,KAAIA,GAEN5D,EAAKuP,UAAUtR,MAAM/O,EAAGghB,EAAStM,KAE/B3T,MAAMD,QAAQ2T,GAChBA,EAAKtE,QAAQoQ,GAEbA,EAAiB9L,IAUXwL,EAAAvf,UAAAugB,QAAV,SAAkBzO,OAAqB,IAAA+M,EAAA,GAAAlR,EAAA,EAAAA,EAAAS,UAAAxN,OAAA+M,IAAAkR,EAAAlR,EAAA,GAAAS,UAAAT,GACrCmE,EAAK6M,GAAGE,EAAOnd,KAAKke,YAQZL,EAAAvf,UAAAwgB,UAAV,SAAoB1O,OAAqB,IAAA+M,EAAA,GAAAlR,EAAA,EAAAA,EAAAS,UAAAxN,OAAA+M,IAAAkR,EAAAlR,EAAA,GAAAS,UAAAT,GACvCmE,EAAK6M,GAAGE,EAAO,OAEnBU,EApGA,GCqBakB,SAAgB,WA8FhBC,GAAuB,CAClC/hB,KAAM,UACNgiB,MAAO,QAGIC,GAAsB,CACjCjiB,KAAM,SACNgiB,MAAO,QAgBF,SAASE,GAAQC,GACtB,OAAOA,GAAoC,MAAfA,EAAMC,MAuF7B,SAASC,GAAmBC,GACjC,MAA0D,mBAAvBA,EAAiB,cAnFtD,SAAY3B,GACVA,IAAA,mBACAA,IAAA,iBACAA,IAAA,iBACAA,IAAA,mBACAA,IAAA,mBACAA,IAAA,eACAA,IAAA,iBACAA,IAAA,iBACAA,IAAA,iBACAA,IAAA,yBACAA,IAAA,oBACAA,IAAA,4BACAA,IAAA,oBAbF,CAAYA,QAAiB,KC1G7B,IAAqB4B,GAArB,SAAAhQ,GA0CE,SAAAiQ,EAAYpD,EAA4BxP,GAAxC,IAAA6B,EACEc,EAAA3S,KAAAmD,OAAOA,YAD+B0O,EAAA7B,OAbhC6B,EAAAgR,MAAgB,IAKxBhR,EAAA9C,OAAyC,KAUvC8C,EAAKkE,IAAMwJ,EAAOC,GAClB3N,EAAKiR,SAAWjR,EAAK7B,KAAK8S,UAAYjR,EAAK7B,KAAKwF,KAChD3D,EAAKkR,cAAgBlR,EAAK7B,KAAK+S,eAAiBlR,EAAK7B,KAAKwF,KAC1D3D,EAAKmR,gBAAkBnR,EAAK7B,KAAKgT,iBAAmBnR,EAAK7B,KAAKwF,KAC9D3D,EAAKgR,MAA2B,MAAnBhR,EAAK7B,KAAK6S,OAAiBhR,EAAK7B,KAAK6S,MAAQ,EAAIhR,EAAK7B,KAAK6S,MAAQ,IAChFhR,EAAKoR,SAAgC,IAAtBpR,EAAK7B,KAAKiT,QAEzBpR,EAAKqR,SAAW,CACdC,MAAOnT,EAAKmT,OAAStR,EAAK2N,GAC1B4D,YAAapT,EAAKoT,aAAe,MAkevC,OAvhBoC1T,EAAAkT,EAAAjQ,GAyDlCpS,OAAAC,eAAIoiB,EAAAnhB,UAAA,QAAK,KAAT,WACE,OAAOkgB,QAAQxe,KAAK6M,KAAKqT,wCAG3B9iB,OAAAC,eAAIoiB,EAAAnhB,UAAA,SAAM,KAAV,WACE,OAAOkgB,QAAQxe,KAAK6M,KAAKsT,yCAG3B/iB,OAAAC,eAAIoiB,EAAAnhB,UAAA,KAAE,KAAN,WACE,OAAO0B,KAAK4S,qCAGd6M,EAAAnhB,UAAA8hB,YAAA,SAAYC,GACVrgB,KAAK4S,IAAMwJ,EAAOiE,MAGpBjjB,OAAAC,eAAIoiB,EAAAnhB,UAAA,QAAK,KAAT,WACE,OAAO0B,KAAK+f,SAASC,uCAGvB5iB,OAAAC,eAAIoiB,EAAAnhB,UAAA,cAAW,KAAf,WACE,OAAO0B,KAAK+f,SAASE,6CAOvB7iB,OAAAC,eAAIoiB,EAAAnhB,UAAA,OAAI,KAAR,WACE,OAAO0B,KAAK4L,OAAY5L,KAAK4L,OAAO0U,KAAI,IAAItgB,KAAKqc,GAAOrc,KAAKqc,oCAG/Djf,OAAAC,eAAIoiB,EAAAnhB,UAAA,SAAM,KAAV,WACE,OAAO0B,KAAK4L,OAAY5L,KAAK4L,OAAO2U,OAAM,IAAIvgB,KAAK4L,OAAO7F,QAAQ/F,MAAU,oCAGpEyf,EAAAnhB,UAAAyf,gBAAV,WACE,OAAOvO,EAAAlR,UAAMyf,gBAAelhB,KAAAmD,MAAGuB,OAAO,CAACke,EAAOe,oBAC9Cf,EAAOgB,oBAAqBhB,EAAOiB,uBAAwBjB,EAAOkB,yBAA0BlB,EAAOmB,oCACnGnB,EAAOoB,4BAA6BpB,EAAOqB,kCAC3CrB,EAAOsB,YAAatB,EAAOuB,mBAAoBvB,EAAOwB,mBAAoBxB,EAAOyB,sBAenFzB,EAAAnhB,UAAA2e,GAAA,SAAG5K,EAAyBiM,GAC1B,OAAO9O,EAAAlR,UAAM2e,GAAEpgB,KAAAmD,KAACqS,EAAMiM,IAGxBmB,EAAAnhB,UAAA6iB,SAAA,WACE,OAAOnhB,KAAK0f,OAGdD,EAAAnhB,UAAA8iB,KAAA,WACEphB,KAAKqhB,YAAW,IAGlB5B,EAAAnhB,UAAAgjB,KAAA,WACEthB,KAAKqhB,YAAW,IAGlB5B,EAAAnhB,UAAAijB,UAAA,WACE,OAAOvhB,KAAK8f,SAGdL,EAAAnhB,UAAAkjB,WAAA,WACE,OAAOxhB,KAAKuhB,aAGd9B,EAAAnhB,UAAA+iB,WAAA,SAAW1jB,GACLqC,KAAK8f,UAAYniB,GAGrBqC,KAAK2e,KAAK,CAACc,EAAOkB,yBAA0BlB,EAAOuB,mBAAoBvB,EAAOwB,mBAAoBxB,EAAOsB,aAAc/gB,KAAK8f,QAAS9f,KAAK8f,QAAUniB,IAWtJ8hB,EAAAnhB,UAAAmjB,QAAA,SAAQjkB,EAAkBiK,EAAgBia,EAAiBC,QAAjB,IAAAD,MAAA,QAAiB,IAAAC,MAAA,GACzD,IAAM/P,EAAI5R,KAAKmhB,WAEf,OADA3jB,EAAEmE,KAAK,CAAC4d,IAAKvf,KAAMyH,OAAMA,EAAEiY,MAAO9N,IAC3BA,GAGT6N,EAAAnhB,UAAAsjB,SAAA,SAASjkB,GACHmb,EAAQ9Y,KAAK0f,MAAO/hB,EAAO,KAG/BqC,KAAK2e,KAAK,CAACc,EAAOe,oBAAqBf,EAAOuB,mBAAoBvB,EAAOwB,mBAAoBxB,EAAOsB,aAAc/gB,KAAK0f,MAAO1f,KAAK0f,MAAQ/hB,IAG7I8hB,EAAAnhB,UAAAujB,aAAA,SAAalkB,GACXqC,KAAK0f,MAAQ/hB,GAGf8hB,EAAAnhB,UAAAwjB,YAAA,SAAYnkB,GACV,GAAIA,EAAMqiB,QAAUhgB,KAAKggB,OAAShgB,KAAKigB,cAAgBtiB,EAAMsiB,YAA7D,CAGA,IAAM8B,EAAM/hB,KAAKgiB,cAEjBhiB,KAAK+f,SAAW,CACdC,MAAOriB,EAAMqiB,MACbC,YAAatiB,EAAMsiB,aAGrBjgB,KAAK2e,KAAK,CAACc,EAAOgB,oBAAqBhB,EAAOiB,uBAAwBjB,EAAOuB,mBAAoBvB,EAAOsB,aAAcgB,EAAK/hB,KAAKgiB,iBAGlIvC,EAAAnhB,UAAA0jB,YAAA,WACE,OAAO5kB,OAAOqP,OAAO,GAAIzM,KAAK+f,WAShCN,EAAAnhB,UAAA2jB,SAAA,SAASC,EAAyCC,QAAzC,IAAAD,MAAYE,GAAsBpiB,YAAO,IAAAmiB,MAAA,GAChD,IAAM3kB,EAAIwC,KAAKqiB,eACf,QAAI7kB,GACKA,EAAE8kB,OAAOtiB,KAAMkiB,EAAWC,IAKrC1C,EAAAnhB,UAAAikB,UAAA,WACE,IAAM/kB,EAAIwC,KAAKqiB,eACf,QAAI7kB,GACKA,EAAEglB,eAAexiB,OAS5Byf,EAAAnhB,UAAAmkB,YAAA,WACE,IAAMjlB,EAAIwC,KAAKqiB,eACf,OAAK7kB,EAGEA,EAAEklB,mBAAmB3c,QAAQ/F,OAF1B,GASZyf,EAAAnhB,UAAAqkB,gBAAA,WACE,IAAMnlB,EAAIwC,KAAKqiB,eACf,QAAI7kB,GACKA,EAAEolB,cAAc5iB,OAKnByf,EAAAnhB,UAAAukB,iBAAR,SAAyBre,GAAzB,IAAAkK,EAAA1O,KACQ8iB,EAAS9iB,KAAKqiB,eACpB,IAAKS,EACH,MAAO,CAAC5I,SAAKtW,EAAWue,cAAUve,GAEpC,IAAMmf,EAAYve,EAASse,GACrBhe,EAAQie,EAAUzR,UAAU,SAACvU,GAAM,OAAAA,EAAEwiB,MAAQ7Q,IACnD,OAAI5J,EAAQ,EACH,CAACoV,SAAKtW,EAAWue,cAAUve,GAE7B,CACLsW,IAAK6I,EAAUje,GAAOoV,IAAM,MAAQ,OACpCiI,SAAUrd,IAId2a,EAAAnhB,UAAA0kB,aAAA,WACE,OAAOhjB,KAAK6iB,iBAAiB,SAACrlB,GAAM,OAAAA,EAAEylB,qBAGxCxD,EAAAnhB,UAAA4kB,cAAA,SAAchB,EAAyCC,QAAzC,IAAAD,MAAYE,GAAsBpiB,YAAO,IAAAmiB,MAAA,GACrD,IAAM3kB,EAAIwC,KAAKqiB,eACf,QAAI7kB,GACKA,EAAE2lB,YAAYnjB,KAAMkiB,EAAWC,IAK1C1C,EAAAnhB,UAAA8kB,qBAAA,WACE,IAAM5lB,EAAIwC,KAAKqiB,eACf,QAAI7kB,GACKA,EAAE6lB,mBAAmBrjB,OAKhCyf,EAAAnhB,UAAAglB,kBAAA,WACE,OAAOtjB,KAAK6iB,iBAAiB,SAACrlB,GAAM,OAAAA,EAAE+lB,0BAOxC9D,EAAAnhB,UAAAklB,SAAA,WACE,OAAIxjB,KAAKkgB,UAGLlgB,KAAK4L,QACA5L,KAAK4L,OAAO6X,OAAOzjB,QAQ9Byf,EAAAnhB,UAAAolB,OAAA,SAAO9X,GACL5L,KAAK4L,OAASA,GAMhB6T,EAAAnhB,UAAAqlB,OAAA,WACE3jB,KAAK4L,OAAS,MAQhB6T,EAAAnhB,UAAAslB,cAAA,SAAcrE,GACZ,QAAIvf,KAAK4L,QACsC,MAAtC5L,KAAK4L,OAAOiY,YAAYtE,EAAKvf,OASxCyf,EAAAnhB,UAAA+jB,aAAA,WACE,OAAIriB,KAAK4L,OACA5L,KAAK4L,OAAOyW,eAEd,MAQT5C,EAAAnhB,UAAAwlB,KAAA,SAAKC,GACH,IAAMvmB,EAAiB,CACrB6e,GAAIrc,KAAKqc,GACTxP,KAAMkX,EAAU/jB,KAAK6M,MACrB6S,MAAO1f,KAAK0f,OAcd,OAZI1f,KAAKggB,SAAWhgB,KAAK6M,KAAKmT,OAAShgB,KAAKqc,MAC1C7e,EAAEwiB,MAAQhgB,KAAKggB,OAEbhgB,KAAKgkB,gBAAkBhkB,KAAK6M,KAAKwF,OACnC7U,EAAEmiB,SAAW3f,KAAKgkB,eAEhBhkB,KAAKikB,qBAAuBjkB,KAAK6M,KAAKwF,OACxC7U,EAAEoiB,cAAgB5f,KAAKikB,oBAErBjkB,KAAKkkB,uBAAyBlkB,KAAK6M,KAAKwF,OAC1C7U,EAAEqiB,gBAAkB7f,KAAKkkB,sBAEpB1mB,GAQTiiB,EAAAnhB,UAAA6lB,QAAA,SAAQL,EAAmBM,GACzBpkB,KAAK0f,MAAQoE,EAAKpE,OAAS1f,KAAK0f,MAChC1f,KAAK+f,SAAW,CACdC,MAAO8D,EAAK9D,OAAShgB,KAAKggB,MAC1BC,YAAajgB,KAAKigB,cAEhB6D,EAAKnE,UAAYmE,EAAKO,gBACxBrkB,KAAK2f,SAAWmE,EAAKnE,UAAYmE,EAAKO,cAAgBrkB,KAAK2f,UAEzDmE,EAAKlE,gBACP5f,KAAK4f,cAAgBkE,EAAKlE,eAExBkE,EAAKjE,kBACP7f,KAAK6f,gBAAkBiE,EAAKjE,kBAShCJ,EAAAnhB,UAAAgmB,SAAA,SAASC,GACP,IAAMhW,EAAIvO,KAAK4F,SAAS2e,GACxB,OAAY,MAALhW,EAAY,GAAKiW,OAAOjW,IAQjCkR,EAAAnhB,UAAAsH,SAAA,SAAS6e,GACP,MAAO,IAOThF,EAAAnhB,UAAAomB,eAAA,SAAeH,EAAeI,GAC5B,MAAkB,SAAXA,EAAoB3kB,KAAKskB,SAASC,GAAOvkB,KAAK4F,SAAS2e,IAGhE9E,EAAAnhB,UAAAsmB,SAAA,SAASH,GACP,OAAO1F,IAGTU,EAAAnhB,UAAAumB,eAAA,SAAeJ,EAAgBK,GAC7B,OAAO,GAGTrF,EAAAnhB,UAAAymB,mBAAA,WACE,OAAOnH,GAAkBoH,OAQ3BvF,EAAAnhB,UAAA+gB,MAAA,SAAMoF,EAAgBK,GACpB,OAAO1nB,OAAOqP,OAAO,GAAIuS,KAG3BS,EAAAnhB,UAAA2mB,oBAAA,SAAoBC,EAA4B7F,EAAeyF,GAC7D,OAAOzF,EAAMpiB,KAAK0K,eAGpB8X,EAAAnhB,UAAA6mB,wBAAA,WACE,OAAOvH,GAAkBwH,QAO3B3F,EAAAnhB,UAAA+mB,WAAA,WACE,OAAO,GAOT5F,EAAAnhB,UAAAgnB,YAAA,WAEE,OAAO,GAQT7F,EAAAnhB,UAAA0P,OAAA,SAAOuW,EAAeO,GACpB,OAAc,MAAPP,GAOT9E,EAAAnhB,UAAA0lB,YAAA,WACE,OAAOhkB,KAAK2f,UAGdF,EAAAnhB,UAAA2lB,iBAAA,WACE,OAAOjkB,KAAK4f,eAGdH,EAAAnhB,UAAA4lB,mBAAA,WACE,OAAOlkB,KAAK6f,iBAGdJ,EAAAnhB,UAAAinB,YAAA,SAAY5F,GACNA,IAAa3f,KAAK2f,UAItB3f,KAAK2e,KAAK,CAACc,EAAOoB,4BAA6BpB,EAAOwB,mBAAoBxB,EAAOsB,aAAc/gB,KAAK2f,SAAU3f,KAAK2f,SAAWA,IAGtHF,EAAAnhB,UAAAknB,mBAAV,SAA6B7F,GAC3B,GAAI3f,KAAK2f,WAAa3f,KAAK6M,KAAKwF,OAAQrS,KAAK6M,KAAK8S,SAGlD,OAAO3f,KAAKulB,YAAY5F,IAG1BF,EAAAnhB,UAAAmnB,iBAAA,SAAiB9F,GACXA,IAAa3f,KAAK4f,eAItB5f,KAAK2e,KAAK,CAACc,EAAOqB,kCAAmCrB,EAAOwB,mBAAoBxB,EAAOsB,aAAc/gB,KAAK4f,cAAe5f,KAAK4f,cAAgBD,IAGtIF,EAAAnhB,UAAAonB,wBAAV,SAAkC/F,GAChC,GAAI3f,KAAK4f,gBAAkB5f,KAAK6M,KAAKwF,OAAQrS,KAAK6M,KAAK+S,cAGvD,OAAO5f,KAAKylB,iBAAiB9F,IAG/BF,EAAAnhB,UAAAqnB,mBAAA,SAAmBhG,GACbA,IAAa3f,KAAK6f,iBAItB7f,KAAK2e,KAAK,CAACc,EAAOmB,oCAAqCnB,EAAOuB,mBAAoBvB,EAAOsB,aAAc/gB,KAAK6f,gBAAiB7f,KAAK6f,gBAAkBF,IAG5IF,EAAAnhB,UAAAsnB,0BAAV,SAAoCjG,GAClC,GAAI3f,KAAK6f,kBAAoB7f,KAAK6M,KAAKwF,OAAQrS,KAAK6M,KAAKgT,gBAGzD,OAAO7f,KAAK2lB,mBAAmBhG,IAGvBF,EAAAnhB,UAAAunB,gBAAV,SAA0BnG,GACxB,GAAmB,MAAf1f,KAAK0f,QAAiB1f,KAAK6M,KAAK6S,MAGpC,OAAO1f,KAAK6hB,aAAanC,IAO3BD,EAAAnhB,UAAAwnB,UAAA,SAAUzT,GACR,YADQ,IAAAA,MAAA,OACAA,GACN,IAAK,SACH,OAAOrS,KAAK2e,KAAK,CAACc,EAAOuB,mBAAoBvB,EAAOsB,cACtD,IAAK,SACH,OAAO/gB,KAAK2e,KAAK,CAACc,EAAOwB,mBAAoBxB,EAAOyB,mBAAoBzB,EAAOsB,cACjF,QACE,OAAO/gB,KAAK2e,KAAK,CAACc,EAAOuB,mBAAoBvB,EAAOwB,mBAAoBxB,EAAOyB,mBAAoBzB,EAAOsB,gBA/gBhGtB,EAAAsG,kBAAoB,EAEpBtG,EAAAe,oBAAsB,eACtBf,EAAAgB,oBAAsB,eACtBhB,EAAAiB,uBAAyB,kBACzBjB,EAAAsB,YAAc,QACdtB,EAAAuB,mBAAqB,cACrBvB,EAAAwB,mBAAqB,cACrBxB,EAAAyB,mBAAqB,cACrBzB,EAAAoB,4BAA8B,sBAC9BpB,EAAAqB,kCAAoC,uBACpCrB,EAAAmB,oCAAsC,yBACtCnB,EAAAkB,yBAA2B,oBAsgB7ClB,EAvhBA,CAAoCuG,ICjF9BC,GAAcxoB,OAAOyoB,IAAI,eACzBC,GAAW1oB,OAAOyoB,IAAI,YAErB,SAASE,KACd,OAAOhkB,QAAQ2d,SAASkG,IAAa,GAGhC,SAASI,GAAclL,GAC5B,YAD4B,IAAAA,MAAA,aACd,eAAVA,EACK/Y,QAAQ2d,SAAStiB,OAAOyoB,IAAI,4BAA4B,GAE1D,SAAClpB,GAAW,OAAAA,GAGd,SAASolB,GAAsB7C,GACpC,IAAM+G,EAAc/G,EAAKzU,YACzB,OAAQ1I,QAAQmkB,YAAY9oB,OAAOyoB,IAAI,2BAA4BI,GAGrE,ICoGYE,GAwBAC,GD5HZC,GAAA,WAUA,OAVA,WACW1mB,KAAA2mB,OAAS,CAAC3G,MAAO,QAAS7E,MAAO,EAAGle,KAAM,SAAU2pB,aAAc,SAClE5mB,KAAA6mB,YAAc,CAAC7G,MAAO,cAAe7E,MAAO,EAAGle,KAAM,cAAe2pB,aAAc,SAClF5mB,KAAA8mB,OAAS,CAAC9G,MAAO,YAAa7E,MAAO,EAAGle,KAAM,SAAU2pB,aAAc,SACtE5mB,KAAA+mB,KAAO,CAAC/G,MAAO,OAAQ7E,MAAO,EAAGle,KAAM,OAAQ2pB,aAAc,SAC7D5mB,KAAAgnB,MAAQ,CAAChH,MAAO,SAAU7E,MAAO,EAAGle,KAAM,QAAS2pB,aAAc,YACjE5mB,KAAA2D,IAAM,CAACqc,MAAO,MAAO7E,MAAO,EAAGle,KAAM,MAAO2pB,aAAc,YAC1D5mB,KAAAinB,UAAY,CAACjH,MAAO,WAAY7E,MAAO,EAAGle,KAAM,YAAa2pB,aAAc,YAC3E5mB,KAAAknB,QAAU,CAAClH,MAAO,UAAW7E,MAAO,EAAGle,KAAM,UAAW2pB,aAAc,YACtE5mB,KAAAmnB,MAAQ,CAACnH,MAAO,SAAU7E,MAAO,EAAGle,KAAM,QAAS2pB,aAAc,aAT5E,GAYaQ,GAAa,IAAIV,GAEvB,SAASW,GAAS7O,GACvB,OAAOpW,QAAQ2d,SAASoG,GAAU3N,GAG7B,SAAS8O,GAAY/H,GAC1B,IAAM/G,EAAM+O,GAAWhI,GACjBlN,EAAOkN,EAAI1S,KAAKwF,KACtB,OAAImG,IAAQ4O,GAAWT,QAAUnO,IAAQ4O,GAAWP,YAC3C,MAELrO,IAAQ4O,GAAWN,QAAmB,SAATzU,GAAmB+P,GAAsB7C,GACjE,MAEO,IAAIpZ,IAAI,CAAC,OAAQ,SAAU,UAAW,UAAW,UAAW,SAAU,SAAU,UACjFzC,IAAI2O,GAAQ,WAAQzO,EAG9B,SAAS4jB,SAAQ,IAAA3oB,EAAA,GAAAoN,EAAA,EAAAA,EAAAS,UAAAxN,OAAA+M,IAAApN,EAAAoN,GAAAS,UAAAT,GACtB,OAAO7J,QAAQ2d,SAAStiB,OAAOyoB,IAAI,eAAgBrnB,GAG9C,SAAS4oB,GAAaxpB,OAAa,IAAAY,EAAA,GAAAoN,EAAA,EAAAA,EAAAS,UAAAxN,OAAA+M,IAAApN,EAAAoN,EAAA,GAAAS,UAAAT,GACxC,OAAO7J,QAAQ2d,SAAStiB,OAAOyoB,IAAI,qBAAqBjoB,GAAQY,GAG3D,SAAS6oB,GAAcnI,GAC5B,IAAM+G,EAAc/G,EAAKzU,YACzB,OAAO1I,QAAQmkB,YAAYN,GAAaK,GAUnC,SAASiB,GAAWhI,GACzB,IAAM/G,EAAwBpW,QAAQulB,YAAYxB,GAAU5G,aAAeC,GAASpiB,OAAO0G,eAAeyb,GAAKzU,YAAcyU,IAAQ,QACrI,OAAwB6H,GAAW5O,IAAQ4O,GAAWD,MAGjD,SAASS,GAAerI,EAA2BsI,GACxD,IACMvB,EAAQuB,EADc,iBAARtI,EAAmBA,EAAMA,EAAIlN,MAEjD,OAAOiU,EAAQiB,GAAWjB,GAA0Bc,GAAWD,MCK1D,SAASW,GAAgBvI,GAC9B,OAAQA,aAAeC,IAAsD,mBAApBD,EAAKwI,cAAgCxI,aAAeC,KAAWwI,GAAezI,KAAuBA,EAAKlN,KAAKoB,WAAW,WAA2B8L,EAAKlN,KAAKoB,WAAW,YA8B9N,SAASuU,GAAezI,GAC7B,OAAQA,aAAeC,IAAoD,mBAAnBD,EAAK0I,aAA+B1I,aAAeC,KAAsE,MAA7CD,EAAKlN,KAAKlR,MAAM,0BAwB/I,SAAS+mB,GAAgB3I,GAC9B,MAAuD,mBAAxBA,EAAK4I,eAwB/B,SAASC,GAAgB7I,GAC9B,OAAO2I,GAAgB3I,IAAoD,mBAApBA,EAAK8I,YA9C9D,SAAY7B,GACVA,EAAA,UACAA,EAAA,UACAA,EAAA,gBACAA,EAAA,QACAA,EAAA,QALF,CAAYA,QAAW,KAwBvB,SAAYC,GACVA,EAAA,UACAA,EAAA,UACAA,EAAA,gBACAA,EAAA,QACAA,EAAA,QACAA,EAAA,YANF,CAAYA,QAAmB,KCrI/B,IAAqB6B,GAArB,SAAA9Y,GAaE,SAAA+Y,EAAYlM,EAAYxP,GAAxB,IAAA6B,EACEc,EAAA3S,KAAAmD,KAAMqc,EAAIxP,IAAK7M,YAEf0O,EAAK8Z,SAAW3b,EAAK2b,UAAa,WAAO,aACzC9Z,EAAK+Z,QAA6B,IAApB5b,EAAK6b,aAmFvB,OApG4Cnc,EAAAgc,EAAA/Y,GAoBhC+Y,EAAAjqB,UAAAyf,gBAAV,WACE,OAAOvO,EAAAlR,UAAMyf,gBAAelhB,KAAAmD,MAAGuB,OAAO,CAACgnB,EAAYI,qBAgBrDJ,EAAAjqB,UAAA2e,GAAA,SAAG5K,EAAyBiM,GAC1B,OAAO9O,EAAAlR,UAAM2e,GAAEpgB,KAAAmD,KAAMqS,EAAMiM,IAI7BiK,EAAAjqB,UAAAgmB,SAAA,SAASC,GACP,IAAKvkB,KAAK4oB,WACR,MAAO,GAET,IAAMra,EAAIvO,KAAK4F,SAAS2e,GACxB,OAAY,MAALhW,EAAY,GAAKiW,OAAOjW,IAGjCga,EAAAjqB,UAAAuqB,OAAA,SAAOtE,GACL,OAAKvkB,KAAK4oB,WAGH5oB,KAAKwoB,SAASjE,EAAKvkB,KAAK6M,MAFtB,MAKX0b,EAAAjqB,UAAAsH,SAAA,SAAS2e,GACP,OAAOvkB,KAAK6oB,OAAOtE,IAGrBgE,EAAAjqB,UAAAsqB,SAAA,WACE,OAAO5oB,KAAKyoB,QAGdF,EAAAjqB,UAAAwqB,UAAA,SAAUL,GACJzoB,KAAKyoB,SAAWA,GAGpBzoB,KAAK2e,KAAK,CAAC4J,EAAYI,kBAAmBnJ,GAAOwB,mBAAoBxB,GAAOyB,mBAAoBzB,GAAO0B,mBAAoB1B,GAAOuB,aAAc/gB,KAAKyoB,OAAQzoB,KAAKyoB,OAASA,IAG7KF,EAAAjqB,UAAA0lB,YAAA,WACE,OAAKhkB,KAAK4oB,WAGHpZ,EAAAlR,UAAM0lB,YAAWnnB,KAAAmD,MAFfuoB,EAAYQ,kBAUvBR,EAAAjqB,UAAAwlB,KAAA,SAAKC,GACH,IAAMvmB,EAAIgS,EAAAlR,UAAMwlB,KAAIjnB,KAAAmD,KAAC+jB,GAMrB,OALAvmB,EAAEirB,OAASzoB,KAAKyoB,OAEXzoB,KAAKyoB,QAAUjrB,EAAEmiB,WAAa4I,EAAYQ,yBACtCvrB,EAAEmiB,SAEJniB,GAGT+qB,EAAAjqB,UAAA6lB,QAAA,SAAQL,EAAW7nB,QACG2H,IAAhBkgB,EAAK2E,SACPzoB,KAAKyoB,OAAS3E,EAAK2E,QAErBjZ,EAAAlR,UAAM6lB,QAAOtnB,KAAAmD,KAAC8jB,EAAM7nB,IAjGNssB,EAAAI,kBAAoB,aAEpBJ,EAAAQ,iBAAmB,UAiGrCR,EApGA,CAA4C/I,IC0BvBwJ,GAArB,SAAAxZ,GAFA,SAAAyZ,IAAA,IAAAva,EAAA,OAAAc,KAAA7C,MAAA3M,KAAA0M,YAAA1M,YAQqB0O,EAAAwa,UAAsB,WAsL3C,OA5L6C3c,EAAA0c,EAAAzZ,KAAxByZ,EAQTA,EAAA3qB,UAAAyf,gBAAV,WACE,OAAOvO,EAAAlR,UAAMyf,gBAAelhB,KAAAmD,MAAGuB,OAAO,CAAC4nB,EAAgBC,qBAAsBD,EAAgBE,iBAAkBF,EAAgBG,kBAAmBH,EAAgBI,uBAmBpKN,EAAA3qB,UAAA2e,GAAA,SAAG5K,EAAyBiM,GAC1B,OAAO9O,EAAAlR,UAAM2e,GAAEpgB,KAAAmD,KAACqS,EAAMiM,IAGxB2K,EAAA3qB,UAAA8hB,YAAA,SAAYC,GACV7Q,EAAAlR,UAAM8hB,YAAWvjB,KAAAmD,KAACqgB,GAClBrgB,KAAKkpB,UAAUnb,QAAQ,SAAChR,GAAM,OAAAA,EAAEqjB,YAAYC,MAG9CjjB,OAAAC,eAAI4rB,EAAA3qB,UAAA,WAAQ,KAAZ,WACE,OAAO0B,KAAKkpB,UAAU5nB,yCAGxBlE,OAAAC,eAAI4rB,EAAA3qB,UAAA,SAAM,KAAV,WACE,OAAO0B,KAAKkpB,UAAUhqB,wCAGxB+pB,EAAA3qB,UAAAmjB,QAAA,SAAQjkB,EAAkBiK,EAAgB+hB,EAAgBC,QAAhB,IAAAD,MAAA,QAAgB,IAAAC,MAAA,GACxD,IAAI7X,EAAI,EAER,OAAmB,IAAf4X,GAAoBA,GAAchK,GAAOuG,oBAC3CnU,EAAI5R,KAAKmhB,WACT3jB,EAAEmE,KAAK,CAAC4d,IAAKvf,KAAMyH,OAAMA,EAAEiY,MAAO9N,IACf,IAAf4X,GACK5X,GAIX5R,KAAKkpB,UAAUnb,QAAQ,SAAChR,GAClBA,EAAEwkB,aAAeiI,GAAchK,GAAOuG,kBACxChpB,EAAE0kB,QAAQjkB,EAAGiK,EAAQ+hB,EAAa,EAAGC,KAGlC7X,IAGTqX,EAAA3qB,UAAAwlB,KAAA,SAAKC,GACH,IAAMvmB,EAAIgS,EAAAlR,UAAMwlB,KAAIjnB,KAAAmD,KAAC+jB,GAErB,OADAvmB,EAAEksB,SAAW1pB,KAAKkpB,UAAUvlB,IAAI,SAAC3G,GAAM,OAAAA,EAAE8mB,KAAKC,KACvCvmB,GAGTyrB,EAAA3qB,UAAA6lB,QAAA,SAAQL,EAAW7nB,GAAnB,IAAAyS,EAAA1O,KACE8jB,EAAK4F,SAAS/lB,IAAI,SAACgmB,GACjB,IAAM5sB,EAAId,EAAQ0tB,GACd5sB,GACF2R,EAAK/M,KAAK5E,KAGdyS,EAAAlR,UAAM6lB,QAAOtnB,KAAAmD,KAAC8jB,EAAM7nB,IAStBgtB,EAAA3qB,UAAAwH,OAAA,SAAOyZ,EAAaza,GAClB,OAAKkjB,GAAezI,IAAQvf,KAAK4pB,kBACxB,MAET5pB,KAAKkpB,UAAU1X,OAAO1M,EAAO,EAAGya,GAEzBvf,KAAK6pB,WAAWtK,EAAKza,KAG9BmkB,EAAA3qB,UAAAwrB,KAAA,SAAKvK,EAAaza,GAChB,GAAIya,EAAI3T,SAAW5L,KACjB,OAAO,KAET,IAAM+pB,EAAM/pB,KAAKkpB,UAAUnjB,QAAQwZ,GACnC,OAAIza,IAAUilB,EAELxK,GAGTvf,KAAKkpB,UAAU1X,OAAOuY,EAAK,GAE3B/pB,KAAKkpB,UAAU1X,OAAOuY,EAAMjlB,EAAQA,EAAQ,EAAIA,EAAO,EAAGya,GAEnDvf,KAAKgqB,SAASzK,EAAKza,EAAOilB,KAGzBd,EAAA3qB,UAAAurB,WAAV,SAAqBtK,EAAaza,GAIhC,OAHAya,EAAImE,OAAO1jB,MACXA,KAAK6e,QAAOlS,MAAZ3M,KAAI,CAASuf,GAAGhe,OAAKkc,GAAO,WAAY+B,GAAOwB,mBAAoBxB,GAAOyB,mBAAoBzB,GAAO0B,mBAAoB1B,GAAOuB,YAAaoI,EAAgBC,qBAAsB5J,GAAOqB,4BAA6BrB,GAAOsB,qCAC9N9gB,KAAK2e,KAAK,CAACwK,EAAgBE,iBAAkB7J,GAAOwB,mBAAoBxB,GAAOyB,mBAAoBzB,GAAO0B,mBAAoB1B,GAAOuB,aAAcxB,EAAKza,GACjJya,GAGC0J,EAAA3qB,UAAA0rB,SAAV,SAAmBzK,EAAaza,EAAemlB,GAE7C,OADAjqB,KAAK2e,KAAK,CAACwK,EAAgBG,kBAAmB9J,GAAOwB,mBAAoBxB,GAAOyB,mBAAoBzB,GAAO0B,mBAAoB1B,GAAOuB,YAAavB,GAAOqB,4BAA6BrB,GAAOsB,mCAAoCvB,EAAKza,EAAOmlB,GACvO1K,GAGT0J,EAAA3qB,UAAAqD,KAAA,SAAK4d,GACH,OAAOvf,KAAK8F,OAAOyZ,EAAKvf,KAAKkpB,UAAUhqB,SAGzC+pB,EAAA3qB,UAAA4rB,GAAA,SAAGplB,GACD,OAAO9E,KAAKkpB,UAAUpkB,IAGxBmkB,EAAA3qB,UAAAyH,QAAA,SAAQwZ,GACN,OAAOvf,KAAKkpB,UAAUnjB,QAAQwZ,IAGhC0J,EAAA3qB,UAAAulB,YAAA,SAAYtE,EAAajM,GACvB,IAAM5W,EAAIsD,KAAK+F,QAAQuN,GACvB,OAAI5W,EAAI,EACC,KAEFsD,KAAK8F,OAAOyZ,EAAK7iB,EAAI,IAG9BusB,EAAA3qB,UAAA6rB,UAAA,SAAU5K,EAAajM,GACrB,IAAM5W,EAAIsD,KAAK+F,QAAQuN,GACvB,OAAI5W,EAAI,EACC,KAEFsD,KAAK8pB,KAAKvK,EAAK7iB,EAAI,IAI5BusB,EAAA3qB,UAAAmlB,OAAA,SAAOlE,GACL,IAAM7iB,EAAIsD,KAAKkpB,UAAUnjB,QAAQwZ,GACjC,QAAI7iB,EAAI,KAGRsD,KAAKkpB,UAAU1X,OAAO9U,EAAG,GAClBsD,KAAKoqB,WAAW7K,EAAK7iB,KAGpBusB,EAAA3qB,UAAA8rB,WAAV,SAAqB7K,EAAaza,GAIhC,OAHAya,EAAIoE,SACJ3jB,KAAK8e,UAASnS,MAAd3M,KAAI,CAAWuf,GAAGhe,OAAKkc,GAAO,WAAY+B,GAAOwB,mBAAoBxB,GAAOyB,mBAAoBzB,GAAO0B,mBAAoB1B,GAAOuB,YAAaoI,EAAgBC,wBAC/JppB,KAAK2e,KAAK,CAACwK,EAAgBI,oBAAqB/J,GAAOwB,mBAAoBxB,GAAOyB,mBAAoBzB,GAAO0B,mBAAoB1B,GAAOuB,aAAcxB,EAAKza,IACpJ,GAGTmkB,EAAA3qB,UAAA+mB,WAAA,WACE,OAAOrlB,KAAKkpB,UAAUva,KAAK,SAAC3R,GAAM,OAAAA,EAAEqoB,gBAGtC4D,EAAA3qB,UAAAgnB,YAAA,WACE,OAAOtlB,KAAKkpB,UAAUvlB,IAAI,SAAC3G,GAAM,OAAAA,EAAEsoB,gBAAe3W,KAAK,SAAC3R,GAAM,OAAAA,KAGhEisB,EAAA3qB,UAAA0P,OAAA,SAAOuW,GACL,OAAOvkB,KAAKkpB,UAAUhc,MAAM,SAAClQ,GAAM,OAAAA,EAAEgR,OAAOuW,MAG9C0E,EAAA3qB,UAAAsqB,SAAA,WACE,OAAO5oB,KAAKkpB,UAAUhc,MAAM,SAACnQ,GAAM,QAAEA,aAAaurB,IAAevrB,aAAaosB,IAAyDpsB,EAAG6rB,cAG5IxrB,OAAAC,eAAI4rB,EAAA3qB,UAAA,oBAAiB,KAArB,WACE,OAAO,mCAzLO2qB,EAAAG,qBAAuB,gBACvBH,EAAAI,iBAAmB,YACnBJ,EAAAK,kBAAoB,aACpBL,EAAAM,oBAAsB,eAJnBN,EAAeE,EAAAvc,EAAA,CAFnC4a,GAAQ,qBAAsB,iBAC9BH,GAAS,cACW4B,GAArB,CAA6CzJ,ICxC9B6K,GAAA,SAAAC,GAEf,IADA,IAAAnsB,EAAAmsB,EAAAprB,OAAA,IAAAqrB,EAAA,IAAA5rB,MAAAR,GAAAzB,EAAA,EACAA,EAAAyB,GAAAosB,EAAA7tB,GAAA,IAAA4tB,EAAAhpB,MAAA,EAAA5E,EAAA,IAAAA,GACA,OAAA6tB,GCDeC,GAAAH,GAAM,gECANI,GAAAJ,GAAM,oDCANK,GAAAL,GAAM,oDCANM,ICAAN,GAAM,4EDANA,GAAM,2DEANO,GAAAP,GAAM,oDCANQ,GAAAR,GAAM,0DCANS,GAAAT,GAAM,oDCANU,GAAAV,GAAM,4ECFNjuB,GAAA,SAAA0O,EAAA7O,EAAAqC,GACfwM,EAAAxM,UAAArC,EAAAqC,YACAA,EAAAwM,eAGO,SAAAkgB,GAAApf,EAAAqf,GACP,IAAA3sB,EAAAlB,OAAAY,OAAA4N,EAAAtN,WACA,QAAAL,KAAAgtB,EAAA3sB,EAAAL,GAAAgtB,EAAAhtB,GACA,OAAAK,ECNO,SAAA4sB,MAEA,IAGPC,GAAA,sBACAC,GAAA,gDACAC,GAAA,iDACAC,GAAA,mBACAC,GAAA,mBACAC,GAAA,IAAA9rB,OAAA,WAAAyrB,UAAA,QACAM,GAAA,IAAA/rB,OAAA,WAAA2rB,UAAA,QACAK,GAAA,IAAAhsB,OAAA,YAAAyrB,SAAAC,IAAA,QACAO,GAAA,IAAAjsB,OAAA,YAAA2rB,SAAAD,IAAA,QACAQ,GAAA,IAAAlsB,OAAA,WAAA0rB,GAAAC,OAAA,QACAQ,GAAA,IAAAnsB,OAAA,YAAA0rB,GAAAC,MAAAD,IAAA,QAEAU,GAAA,CACAC,UAAA,SACAC,aAAA,SACAC,KAAA,MACAC,WAAA,QACAC,MAAA,SACAC,MAAA,SACAC,OAAA,SACAC,MAAA,EACAC,eAAA,SACAC,KAAA,IACAC,WAAA,QACAC,MAAA,SACAC,UAAA,SACAC,UAAA,QACAC,WAAA,QACAC,UAAA,SACAC,MAAA,SACAC,eAAA,QACAC,SAAA,SACAC,QAAA,SACAC,KAAA,MACAC,SAAA,IACAC,SAAA,MACAC,cAAA,SACAC,SAAA,SACAC,UAAA,MACAC,SAAA,SACAC,UAAA,SACAC,YAAA,QACAC,eAAA,QACAC,WAAA,SACAC,WAAA,SACAC,QAAA,QACAC,WAAA,SACAC,aAAA,QACAC,cAAA,QACAC,cAAA,QACAC,cAAA,QACAC,cAAA,MACAC,WAAA,QACAC,SAAA,SACAC,YAAA,MACAC,QAAA,QACAC,QAAA,QACAC,WAAA,QACAC,UAAA,SACAC,YAAA,SACAC,YAAA,QACAC,QAAA,SACAC,UAAA,SACAC,WAAA,SACAC,KAAA,SACAC,UAAA,SACAC,KAAA,QACAC,MAAA,MACAC,YAAA,SACAC,KAAA,QACAC,SAAA,SACAC,QAAA,SACAC,UAAA,SACAC,OAAA,QACAC,MAAA,SACAC,MAAA,SACAC,SAAA,SACAC,cAAA,SACAC,UAAA,QACAC,aAAA,SACAC,UAAA,SACAC,WAAA,SACAC,UAAA,SACAC,qBAAA,SACAC,UAAA,SACAC,WAAA,QACAC,UAAA,SACAC,UAAA,SACAC,YAAA,SACAC,cAAA,QACAC,aAAA,QACAC,eAAA,QACAC,eAAA,QACAC,eAAA,SACAC,YAAA,SACAC,KAAA,MACAC,UAAA,QACAC,MAAA,SACAC,QAAA,SACAC,OAAA,QACAC,iBAAA,QACAC,WAAA,IACAC,aAAA,SACAC,aAAA,QACAC,eAAA,QACAC,gBAAA,QACAC,kBAAA,MACAC,gBAAA,QACAC,gBAAA,SACAC,aAAA,QACAC,UAAA,SACAC,UAAA,SACAC,SAAA,SACAC,YAAA,SACAC,KAAA,IACAC,QAAA,SACAC,MAAA,QACAC,UAAA,QACAC,OAAA,SACAC,UAAA,SACAC,OAAA,SACAC,cAAA,SACAC,UAAA,SACAC,cAAA,SACAC,cAAA,SACAC,WAAA,SACAC,UAAA,SACAC,KAAA,SACAC,KAAA,SACAC,KAAA,SACAC,WAAA,SACAC,OAAA,QACAC,cAAA,QACAC,IAAA,SACAC,UAAA,SACAC,UAAA,QACAC,YAAA,QACAC,OAAA,SACAC,WAAA,SACAC,SAAA,QACAC,SAAA,SACAC,OAAA,SACAC,OAAA,SACAC,QAAA,QACAC,UAAA,QACAC,UAAA,QACAC,UAAA,QACAC,KAAA,SACAC,YAAA,MACAC,UAAA,QACAC,IAAA,SACAC,KAAA,MACAC,QAAA,SACAC,OAAA,SACAC,UAAA,QACAC,OAAA,SACAC,MAAA,SACAC,MAAA,SACAC,WAAA,SACAC,OAAA,SACAC,YAAA,UAee,SAASC,GAAKxQ,GAC7B,IAAA7nB,EAEA,OADA6nB,KAAA,IAAAtH,OAAA1V,eACA7K,EAAAwuB,GAAApqB,KAAAyjB,IAAA,IAAAyQ,IAAAt4B,EAAAu4B,SAAAv4B,EAAA,cAAAA,GAAA,MAAAA,GAAA,SAAAA,GAAA,GAAAA,IAAA,KAAAA,EAAA,IACAA,EAAAyuB,GAAArqB,KAAAyjB,IAAA2Q,GAAAD,SAAAv4B,EAAA,SACAA,EAAA0uB,GAAAtqB,KAAAyjB,IAAA,IAAAyQ,GAAAt4B,EAAA,GAAAA,EAAA,GAAAA,EAAA,OACAA,EAAA2uB,GAAAvqB,KAAAyjB,IAAA,IAAAyQ,GAAA,IAAAt4B,EAAA,WAAAA,EAAA,WAAAA,EAAA,WACAA,EAAA4uB,GAAAxqB,KAAAyjB,IAAA4Q,GAAAz4B,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,KACAA,EAAA6uB,GAAAzqB,KAAAyjB,IAAA4Q,GAAA,IAAAz4B,EAAA,WAAAA,EAAA,WAAAA,EAAA,OAAAA,EAAA,KACAA,EAAA8uB,GAAA1qB,KAAAyjB,IAAA6Q,GAAA14B,EAAA,GAAAA,EAAA,OAAAA,EAAA,WACAA,EAAA+uB,GAAA3qB,KAAAyjB,IAAA6Q,GAAA14B,EAAA,GAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,IACAgvB,GAAAvtB,eAAAomB,GAAA2Q,GAAAxJ,GAAAnH,IACA,gBAAAA,EAAA,IAAAyQ,GAAAxgB,YAAA,GACA,KAGA,SAAA0gB,GAAAn3B,GACA,WAAAi3B,GAAAj3B,GAAA,OAAAA,GAAA,UAAAA,EAAA,GAGA,SAAAo3B,GAAA/3B,EAAAoc,EAAA3a,EAAAD,GAEA,OADAA,GAAA,IAAAxB,EAAAoc,EAAA3a,EAAA2V,KACA,IAAAwgB,GAAA53B,EAAAoc,EAAA3a,EAAAD,GAGO,SAAAy2B,GAAAt4B,GAEP,OADAA,aAAA+tB,KAAA/tB,EAAiCg4B,GAAKh4B,IACtCA,EAEA,IAAAi4B,IADAj4B,IAAAu4B,OACAl4B,EAAAL,EAAAyc,EAAAzc,EAAA8B,EAAA9B,EAAAw4B,SAFA,IAAAP,GAKO,SAASQ,GAAGp4B,EAAAoc,EAAA3a,EAAA02B,GACnB,WAAAjpB,UAAAxN,OAAAu2B,GAAAj4B,GAAA,IAAA43B,GAAA53B,EAAAoc,EAAA3a,EAAA,MAAA02B,EAAA,EAAAA,GAGO,SAAAP,GAAA53B,EAAAoc,EAAA3a,EAAA02B,GACP31B,KAAAxC,KACAwC,KAAA4Z,KACA5Z,KAAAf,KACAe,KAAA21B,WAkCA,SAAAE,GAAAl4B,GAEA,QADAA,EAAAsJ,KAAA4J,IAAA,EAAA5J,KAAA+M,IAAA,IAAA/M,KAAA0R,MAAAhb,IAAA,KACA,WAAAA,EAAAiC,SAAA,IAGA,SAAA41B,GAAAnd,EAAA5Z,EAAA9B,EAAAqC,GAIA,OAHAA,GAAA,EAAAqZ,EAAA5Z,EAAA9B,EAAAiY,IACAjY,GAAA,GAAAA,GAAA,EAAA0b,EAAA5Z,EAAAmW,IACAnW,GAAA,IAAA4Z,EAAAzD,KACA,IAAAkhB,GAAAzd,EAAA5Z,EAAA9B,EAAAqC,GA6BO,SAAA+2B,GAAA1d,EAAA5Z,EAAA9B,EAAAg5B,GACP,WAAAjpB,UAAAxN,OA3BO,SAAA/B,GACP,GAAAA,aAAA24B,GAAA,WAAAA,GAAA34B,EAAAkb,EAAAlb,EAAAsB,EAAAtB,EAAAR,EAAAQ,EAAAw4B,SAEA,GADAx4B,aAAA+tB,KAAA/tB,EAAiCg4B,GAAKh4B,KACtCA,EAAA,WAAA24B,GACA,GAAA34B,aAAA24B,GAAA,OAAA34B,EAEA,IAAAK,GADAL,IAAAu4B,OACAl4B,EAAA,IACAoc,EAAAzc,EAAAyc,EAAA,IACA3a,EAAA9B,EAAA8B,EAAA,IACA+U,EAAA/M,KAAA+M,IAAAxW,EAAAoc,EAAA3a,GACA4R,EAAA5J,KAAA4J,IAAArT,EAAAoc,EAAA3a,GACAoZ,EAAAzD,IACAnW,EAAAoS,EAAAmD,EACArX,GAAAkU,EAAAmD,GAAA,EAUA,OATAvV,GACA4Z,EAAA7a,IAAAqT,GAAA+I,EAAA3a,GAAAR,EAAA,GAAAmb,EAAA3a,GACA2a,IAAA/I,GAAA5R,EAAAzB,GAAAiB,EAAA,GACAjB,EAAAoc,GAAAnb,EAAA,EACAA,GAAA9B,EAAA,GAAAkU,EAAAmD,EAAA,EAAAnD,EAAAmD,EACAqE,GAAA,IAEA5Z,EAAA9B,EAAA,GAAAA,EAAA,IAAA0b,EAEA,IAAAyd,GAAAzd,EAAA5Z,EAAA9B,EAAAQ,EAAAw4B,SAIAK,CAAA3d,GAAA,IAAAyd,GAAAzd,EAAA5Z,EAAA9B,EAAA,MAAAg5B,EAAA,EAAAA,GAGA,SAAAG,GAAAzd,EAAA5Z,EAAA9B,EAAAg5B,GACA31B,KAAAqY,KACArY,KAAAvB,KACAuB,KAAArD,KACAqD,KAAA21B,WAiCA,SAAAM,GAAA5d,EAAA6d,EAAAC,GACA,OAGA,KAHA9d,EAAA,GAAA6d,GAAAC,EAAAD,GAAA7d,EAAA,GACAA,EAAA,IAAA8d,EACA9d,EAAA,IAAA6d,GAAAC,EAAAD,IAAA,IAAA7d,GAAA,GACA6d,GAzKA95B,GAAM8uB,GAAQiK,GAAK,CACnBiB,YAAA,WACA,OAAAp2B,KAAA01B,MAAAU,eAEAP,IAAA,WACA,OAAA71B,KAAA01B,MAAAG,OAEAj2B,SAAA,WACA,OAAAI,KAAA01B,MAAA,MA+CAt5B,GAAMg5B,GAAMQ,GAAK5K,GAAME,GAAA,CACvBmL,SAAA,SAAAntB,GAEA,OADAA,EAAA,MAAAA,EA9NO,EADA,GA+NPjC,KAAA4R,IA9NO,EADA,GA+NP3P,GACA,IAAAksB,GAAAp1B,KAAAxC,EAAA0L,EAAAlJ,KAAA4Z,EAAA1Q,EAAAlJ,KAAAf,EAAAiK,EAAAlJ,KAAA21B,UAEAW,OAAA,SAAAptB,GAEA,OADAA,EAAA,MAAAA,EAnOO,GAmOPjC,KAAA4R,IAnOO,GAmOP3P,GACA,IAAAksB,GAAAp1B,KAAAxC,EAAA0L,EAAAlJ,KAAA4Z,EAAA1Q,EAAAlJ,KAAAf,EAAAiK,EAAAlJ,KAAA21B,UAEAD,IAAA,WACA,OAAA11B,MAEAo2B,YAAA,WACA,UAAAp2B,KAAAxC,GAAAwC,KAAAxC,GAAA,KACA,GAAAwC,KAAA4Z,GAAA5Z,KAAA4Z,GAAA,KACA,GAAA5Z,KAAAf,GAAAe,KAAAf,GAAA,KACA,GAAAe,KAAA21B,SAAA31B,KAAA21B,SAAA,GAEAE,IAAA,WACA,UAAAA,GAAA71B,KAAAxC,GAAAq4B,GAAA71B,KAAA4Z,GAAAic,GAAA71B,KAAAf,IAEAW,SAAA,WACA,IAAAZ,EAAAgB,KAAA21B,QACA,YADyB32B,EAAAsW,MAAAtW,GAAA,EAAAiI,KAAA4J,IAAA,EAAA5J,KAAA+M,IAAA,EAAAhV,KACzB,gBACAiI,KAAA4J,IAAA,EAAA5J,KAAA+M,IAAA,IAAA/M,KAAA0R,MAAA3Y,KAAAxC,IAAA,SACAyJ,KAAA4J,IAAA,EAAA5J,KAAA+M,IAAA,IAAA/M,KAAA0R,MAAA3Y,KAAA4Z,IAAA,SACA3S,KAAA4J,IAAA,EAAA5J,KAAA+M,IAAA,IAAA/M,KAAA0R,MAAA3Y,KAAAf,IAAA,KACA,IAAAD,EAAA,SAAAA,EAAA,SAqDA5C,GAAM05B,GAAAC,GAAW/K,GAAME,GAAA,CACvBmL,SAAA,SAAAntB,GAEA,OADAA,EAAA,MAAAA,EA9SO,EADA,GA+SPjC,KAAA4R,IA9SO,EADA,GA+SP3P,GACA,IAAA4sB,GAAA91B,KAAAqY,EAAArY,KAAAvB,EAAAuB,KAAArD,EAAAuM,EAAAlJ,KAAA21B,UAEAW,OAAA,SAAAptB,GAEA,OADAA,EAAA,MAAAA,EAnTO,GAmTPjC,KAAA4R,IAnTO,GAmTP3P,GACA,IAAA4sB,GAAA91B,KAAAqY,EAAArY,KAAAvB,EAAAuB,KAAArD,EAAAuM,EAAAlJ,KAAA21B,UAEAD,IAAA,WACA,IAAArd,EAAArY,KAAAqY,EAAA,SAAArY,KAAAqY,EAAA,GACA5Z,EAAA6W,MAAA+C,IAAA/C,MAAAtV,KAAAvB,GAAA,EAAAuB,KAAAvB,EACA9B,EAAAqD,KAAArD,EACAw5B,EAAAx5B,KAAA,GAAAA,EAAA,EAAAA,GAAA8B,EACAy3B,EAAA,EAAAv5B,EAAAw5B,EACA,WAAAf,GACAa,GAAA5d,GAAA,IAAAA,EAAA,IAAAA,EAAA,IAAA6d,EAAAC,GACAF,GAAA5d,EAAA6d,EAAAC,GACAF,GAAA5d,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAA6d,EAAAC,GACAn2B,KAAA21B,UAGAS,YAAA,WACA,UAAAp2B,KAAAvB,GAAAuB,KAAAvB,GAAA,GAAA6W,MAAAtV,KAAAvB,KACA,GAAAuB,KAAArD,GAAAqD,KAAArD,GAAA,GACA,GAAAqD,KAAA21B,SAAA31B,KAAA21B,SAAA,MC1UO,IAAAY,GAAAtvB,KAAAuvB,GAAA,IACAC,GAAA,IAAAxvB,KAAAuvB,GCKPE,GAAA,OACAC,GAAA,EACAC,GAAA,OACIC,GAAE,KACFC,GAAE,KACFC,GAAE,EAAOD,GAAKA,GAClBE,GAASF,GAAKA,GAAKA,GAEnB,SAAAG,GAAA95B,GACA,GAAAA,aAAA+5B,GAAA,WAAAA,GAAA/5B,EAAAR,EAAAQ,EAAA6B,EAAA7B,EAAA8B,EAAA9B,EAAAw4B,SACA,GAAAx4B,aAAAg6B,GAAA,CACA,GAAA7hB,MAAAnY,EAAAkb,GAAA,WAAA6e,GAAA/5B,EAAAR,EAAA,IAAAQ,EAAAw4B,SACA,IAAAtd,EAAAlb,EAAAkb,EAAkBke,GAClB,WAAAW,GAAA/5B,EAAAR,EAAAsK,KAAAmwB,IAAA/e,GAAAlb,EAAAJ,EAAAkK,KAAAowB,IAAAhf,GAAAlb,EAAAJ,EAAAI,EAAAw4B,SAEAx4B,aAAqBi4B,KAAGj4B,EAAOs4B,GAAUt4B,IACzC,IAGAqM,EAAA8tB,EAHA95B,EAAA+5B,GAAAp6B,EAAAK,GACAoc,EAAA2d,GAAAp6B,EAAAyc,GACA3a,EAAAs4B,GAAAp6B,EAAA8B,GACAu4B,EAAAC,IAAA,SAAAj6B,EAAA,SAAAoc,EAAA,SAAA3a,GAAA03B,IAKA,OAJAn5B,IAAAoc,OAAA3a,EAAAuK,EAAA8tB,EAAAE,GACAhuB,EAAAiuB,IAAA,SAAAj6B,EAAA,SAAAoc,EAAA,SAAA3a,GAAAy3B,IACAY,EAAAG,IAAA,SAAAj6B,EAAA,SAAAoc,EAAA,SAAA3a,GAAA23B,KAEA,IAAAM,GAAA,IAAAM,EAAA,QAAAhuB,EAAAguB,GAAA,KAAAA,EAAAF,GAAAn6B,EAAAw4B,SAOe,SAAA+B,GAAA/6B,EAAAqC,EAAAC,EAAA02B,GACf,WAAAjpB,UAAAxN,OAAA+3B,GAAAt6B,GAAA,IAAAu6B,GAAAv6B,EAAAqC,EAAAC,EAAA,MAAA02B,EAAA,EAAAA,GAGO,SAAAuB,GAAAv6B,EAAAqC,EAAAC,EAAA02B,GACP31B,KAAArD,KACAqD,KAAAhB,KACAgB,KAAAf,KACAe,KAAA21B,WA0BA,SAAA8B,GAAA75B,GACA,OAAAA,EAAAo5B,GAAA/vB,KAAA4R,IAAAjb,EAAA,KAAAA,EAA2Cm5B,GAAKF,GAGhD,SAAAc,GAAA/5B,GACA,OAAAA,EAAak5B,GAAEl5B,MAAem5B,IAAEn5B,EAAQi5B,IAGxC,SAAAe,GAAApuB,GACA,YAAAA,GAAA,eAAAA,EAAA,MAAAvC,KAAA4R,IAAArP,EAAA,aAGA,SAAA+tB,GAAA/tB,GACA,OAAAA,GAAA,aAAAA,EAAA,MAAAvC,KAAA4R,KAAArP,EAAA,iBAGA,SAAAquB,GAAA16B,GACA,GAAAA,aAAAg6B,GAAA,WAAAA,GAAAh6B,EAAAkb,EAAAlb,EAAAJ,EAAAI,EAAAR,EAAAQ,EAAAw4B,SAEA,GADAx4B,aAAA+5B,KAAA/5B,EAAA85B,GAAA95B,IACA,IAAAA,EAAA6B,GAAA,IAAA7B,EAAA8B,EAAA,WAAAk4B,GAAAviB,IAAA,EAAAzX,EAAAR,EAAAQ,EAAAw4B,SACA,IAAAtd,EAAApR,KAAA6wB,MAAA36B,EAAA8B,EAAA9B,EAAA6B,GAAiCy3B,GACjC,WAAAU,GAAA9e,EAAA,EAAAA,EAAA,IAAAA,EAAApR,KAAA8wB,KAAA56B,EAAA6B,EAAA7B,EAAA6B,EAAA7B,EAAA8B,EAAA9B,EAAA8B,GAAA9B,EAAAR,EAAAQ,EAAAw4B,SAOO,SAAAqC,GAAA3f,EAAAtb,EAAAJ,EAAAg5B,GACP,WAAAjpB,UAAAxN,OAAA24B,GAAAxf,GAAA,IAAA8e,GAAA9e,EAAAtb,EAAAJ,EAAA,MAAAg5B,EAAA,EAAAA,GAGO,SAAAwB,GAAA9e,EAAAtb,EAAAJ,EAAAg5B,GACP31B,KAAAqY,KACArY,KAAAjD,KACAiD,KAAArD,KACAqD,KAAA21B,WA3DAv5B,GAAM86B,GAAAQ,GAAW1M,GAAOE,GAAK,CAC7BmL,SAAA,SAAAntB,GACA,WAAAguB,GAAAl3B,KAAArD,EA7CA,IA6CA,MAAAuM,EAAA,EAAAA,GAAAlJ,KAAAhB,EAAAgB,KAAAf,EAAAe,KAAA21B,UAEAW,OAAA,SAAAptB,GACA,WAAAguB,GAAAl3B,KAAArD,EAhDA,IAgDA,MAAAuM,EAAA,EAAAA,GAAAlJ,KAAAhB,EAAAgB,KAAAf,EAAAe,KAAA21B,UAEAD,IAAA,WACA,IAAA8B,GAAAx3B,KAAArD,EAAA,QACA6M,EAAA8L,MAAAtV,KAAAhB,GAAAw4B,IAAAx3B,KAAAhB,EAAA,IACAs4B,EAAAhiB,MAAAtV,KAAAf,GAAAu4B,IAAAx3B,KAAAf,EAAA,IAIA,WAAem2B,GACfwC,GAAA,WAJApuB,EAAAktB,GAAAiB,GAAAnuB,IAIA,WAHAguB,EAAAb,GAAAgB,GAAAH,IAGA,UAFAF,EAAAV,GAAAe,GAAAL,KAGAM,IAAA,SAAApuB,EAAA,UAAAguB,EAAA,QAAAF,GACAM,GAAA,SAAApuB,EAAA,SAAAguB,EAAA,UAAAF,GACAt3B,KAAA21B,aA4CAv5B,GAAM+6B,GAAAa,GAAWhN,GAAOE,GAAK,CAC7BmL,SAAA,SAAAntB,GACA,WAAAiuB,GAAAn3B,KAAAqY,EAAArY,KAAAjD,EAAAiD,KAAArD,EA3GA,IA2GA,MAAAuM,EAAA,EAAAA,GAAAlJ,KAAA21B,UAEAW,OAAA,SAAAptB,GACA,WAAAiuB,GAAAn3B,KAAAqY,EAAArY,KAAAjD,EAAAiD,KAAArD,EA9GA,IA8GA,MAAAuM,EAAA,EAAAA,GAAAlJ,KAAA21B,UAEAD,IAAA,WACA,OAAAuB,GAAAj3B,MAAA01B,UClHA,IAAAuC,IAAA,OACAC,GAAA,QACAC,IAAA,OACAC,IAAA,OACAC,GAAA,QACAC,GAAAD,GAAAD,GACAG,GAAAF,GAAAH,GACAM,GAAAN,GAAAC,GAAAC,GAAAH,GAgBe,SAASQ,GAASpgB,EAAA5Z,EAAA9B,EAAAg5B,GACjC,WAAAjpB,UAAAxN,OAfA,SAAA/B,GACA,GAAAA,aAAAu7B,GAAA,WAAAA,GAAAv7B,EAAAkb,EAAAlb,EAAAsB,EAAAtB,EAAAR,EAAAQ,EAAAw4B,SACAx4B,aAAqBi4B,KAAGj4B,EAAOs4B,GAAUt4B,IACzC,IAAAK,EAAAL,EAAAK,EAAA,IACAoc,EAAAzc,EAAAyc,EAAA,IACA3a,EAAA9B,EAAA8B,EAAA,IACAtC,GAAA67B,GAAAv5B,EAAAq5B,GAAA96B,EAAA+6B,GAAA3e,IAAA4e,GAAAF,GAAAC,IACAI,EAAA15B,EAAAtC,EACAuM,GAAAmvB,IAAAze,EAAAjd,GAAAw7B,GAAAQ,GAAAP,GACA35B,EAAAwI,KAAA8wB,KAAA7uB,IAAAyvB,MAAAN,GAAA17B,GAAA,EAAAA,IACA0b,EAAA5Z,EAAAwI,KAAA6wB,MAAA5uB,EAAAyvB,GAAkClC,GAAO,IAAA7hB,IACzC,WAAA8jB,GAAArgB,EAAA,EAAAA,EAAA,IAAAA,EAAA5Z,EAAA9B,EAAAQ,EAAAw4B,SAIAiD,CAAAvgB,GAAA,IAAAqgB,GAAArgB,EAAA5Z,EAAA9B,EAAA,MAAAg5B,EAAA,EAAAA,GAGO,SAAA+C,GAAArgB,EAAA5Z,EAAA9B,EAAAg5B,GACP31B,KAAAqY,KACArY,KAAAvB,KACAuB,KAAArD,KACAqD,KAAA21B,WCnCO,SAAAkD,GAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACP,IAAAC,EAAAL,IAAA9B,EAAAmC,EAAAL,EACA,YAAAA,EAAA,EAAAK,EAAAnC,GAAA+B,GACA,IAAAI,EAAA,EAAAnC,GAAAgC,GACA,IAAAF,EAAA,EAAAK,EAAA,EAAAnC,GAAAiC,EACAjC,EAAAkC,GAAA,EDiCA98B,GAAMs8B,GAAYD,GAAWzN,GAAOE,GAAK,CACzCmL,SAAA,SAAAntB,GAEA,OADAA,EAAA,MAAAA,EHnCO,EADA,GGoCqBjC,KAAA4R,IHnCrB,EADA,GGoCyC3P,GAChD,IAAAwvB,GAAA14B,KAAAqY,EAAArY,KAAAvB,EAAAuB,KAAArD,EAAAuM,EAAAlJ,KAAA21B,UAEAW,OAAA,SAAAptB,GAEA,OADAA,EAAA,MAAAA,EHxCO,GGwCmBjC,KAAA4R,IHxCnB,GGwCqC3P,GAC5C,IAAAwvB,GAAA14B,KAAAqY,EAAArY,KAAAvB,EAAAuB,KAAArD,EAAAuM,EAAAlJ,KAAA21B,UAEAD,IAAA,WACA,IAAArd,EAAA/C,MAAAtV,KAAAqY,GAAA,GAAArY,KAAAqY,EAAA,KAAiDke,GACjD55B,GAAAqD,KAAArD,EACAqC,EAAAsW,MAAAtV,KAAAvB,GAAA,EAAAuB,KAAAvB,EAAA9B,GAAA,EAAAA,GACAy8B,EAAAnyB,KAAAmwB,IAAA/e,GACAghB,EAAApyB,KAAAowB,IAAAhf,GACA,WAAe+c,GACf,KAAAz4B,EAAAqC,GAAAi5B,GAAAmB,EAAAlB,GAAAmB,IACA,KAAA18B,EAAAqC,GAAAm5B,GAAAiB,EAAAhB,GAAAiB,IACA,KAAA18B,EAAAqC,GAAAq5B,GAAAe,IACAp5B,KAAA21B,aCjDe,ICRA2D,GAAA,SAAA9vB,GACf,kBACA,OAAAA,ICAA,SAAA+vB,GAAAv6B,EAAAhC,GACA,gBAAAY,GACA,OAAAoB,EAAApB,EAAAZ,GAUO,SAASw8B,GAAGx6B,EAAAC,GACnB,IAAAjC,EAAAiC,EAAAD,EACA,OAAAhC,EAAAu8B,GAAAv6B,EAAAhC,EAAA,KAAAA,GAAA,IAAAA,EAAA,IAAAiK,KAAA0R,MAAA3b,EAAA,KAAAA,GAAkFs8B,GAAQhkB,MAAAtW,GAAAC,EAAAD,GAGnF,SAAAy6B,GAAAjC,GACP,WAAAA,MAAAkC,GAAA,SAAA16B,EAAAC,GACA,OAAAA,EAAAD,EAbA,SAAAA,EAAAC,EAAAu4B,GACA,OAAAx4B,EAAAiI,KAAA4R,IAAA7Z,EAAAw4B,GAAAv4B,EAAAgI,KAAA4R,IAAA5Z,EAAAu4B,GAAAx4B,EAAAw4B,EAAA,EAAAA,EAAA,SAAA55B,GACA,OAAAqJ,KAAA4R,IAAA7Z,EAAApB,EAAAqB,EAAAu4B,IAWAmC,CAAA36B,EAAAC,EAAAu4B,GAA0C8B,GAAQhkB,MAAAtW,GAAAC,EAAAD,IAInC,SAAA06B,GAAA16B,EAAAC,GACf,IAAAjC,EAAAiC,EAAAD,EACA,OAAAhC,EAAAu8B,GAAAv6B,EAAAhC,GAA4Bs8B,GAAQhkB,MAAAtW,GAAAC,EAAAD,GCtBrB,IAAA46B,GAAA,SAAAC,EAAArC,GACf,IAAAvY,EAAcwa,GAAKjC,GAEnB,SAAA9B,EAAAoE,EAAAC,GACA,IAAAv8B,EAAAyhB,GAAA6a,EAA2BlE,GAAQkE,IAAAt8B,GAAAu8B,EAAmBnE,GAAQmE,IAAAv8B,GAC9Doc,EAAAqF,EAAA6a,EAAAlgB,EAAAmgB,EAAAngB,GACA3a,EAAAggB,EAAA6a,EAAA76B,EAAA86B,EAAA96B,GACA02B,EAAkB+D,GAAOI,EAAAnE,QAAAoE,EAAApE,SACzB,gBAAA/3B,GAKA,OAJAk8B,EAAAt8B,IAAAI,GACAk8B,EAAAlgB,IAAAhc,GACAk8B,EAAA76B,IAAArB,GACAk8B,EAAAnE,UAAA/3B,GACAk8B,EAAA,IAMA,OAFApE,EAAA+D,MAAAI,EAEAnE,EAnBe,CAoBd,GAED,SAAAsE,GAAAC,GACA,gBAAA1P,GACA,IAIA7tB,EAAAuiB,EAJA9gB,EAAAosB,EAAArrB,OACA1B,EAAA,IAAAmB,MAAAR,GACAyb,EAAA,IAAAjb,MAAAR,GACAc,EAAA,IAAAN,MAAAR,GAEA,IAAAzB,EAAA,EAAeA,EAAAyB,IAAOzB,EACtBuiB,EAAc2W,GAAQrL,EAAA7tB,IACtBc,EAAAd,GAAAuiB,EAAAzhB,GAAA,EACAoc,EAAAld,GAAAuiB,EAAArF,GAAA,EACA3a,EAAAvC,GAAAuiB,EAAAhgB,GAAA,EAMA,OAJAzB,EAAAy8B,EAAAz8B,GACAoc,EAAAqgB,EAAArgB,GACA3a,EAAAg7B,EAAAh7B,GACAggB,EAAA0W,QAAA,EACA,SAAA/3B,GAIA,OAHAqhB,EAAAzhB,IAAAI,GACAqhB,EAAArF,IAAAhc,GACAqhB,EAAAhgB,IAAArB,GACAqhB,EAAA,KAKO,IAAAib,GAAAF,GH7CQ,SAAAz1B,GACf,IAAApG,EAAAoG,EAAArF,OAAA,EACA,gBAAAtB,GACA,IAAAlB,EAAAkB,GAAA,EAAAA,EAAA,EAAAA,GAAA,GAAAA,EAAA,EAAAO,EAAA,GAAA8I,KAAA4N,MAAAjX,EAAAO,GACA66B,EAAAz0B,EAAA7H,GACAu8B,EAAA10B,EAAA7H,EAAA,GACAq8B,EAAAr8B,EAAA,EAAA6H,EAAA7H,EAAA,KAAAs8B,EAAAC,EACAC,EAAAx8B,EAAAyB,EAAA,EAAAoG,EAAA7H,EAAA,KAAAu8B,EAAAD,EACA,OAAAH,IAAAj7B,EAAAlB,EAAAyB,KAAA46B,EAAAC,EAAAC,EAAAC,MIhBepS,IDsDRkT,GEpDQ,SAAAz1B,GACf,IAAApG,EAAAoG,EAAArF,OACA,gBAAAtB,GACA,IAAAlB,EAAAuK,KAAA4N,QAAAjX,GAAA,OAAAA,KAAAO,GACA46B,EAAAx0B,GAAA7H,EAAAyB,EAAA,GAAAA,GACA66B,EAAAz0B,EAAA7H,EAAAyB,GACA86B,EAAA10B,GAAA7H,EAAA,GAAAyB,GACA+6B,EAAA30B,GAAA7H,EAAA,GAAAyB,GACA,OAAW06B,IAAKj7B,EAAAlB,EAAAyB,KAAA46B,EAAAC,EAAAC,EAAAC,MDVD,SAAAl6B,EAAAC,GACf,OAAAA,GAAAD,KAAA,SAAApB,GACA,OAAAoB,EAAAC,EAAArB,KEAAu8B,GAAA,8CACAC,GAAA,IAAA16B,OAAAy6B,GAAAve,OAAA,KAce,ICffye,GACAC,GACAC,GACAC,GCIeC,GAAA,SAAAz7B,EAAAC,GACf,IAAAlC,EAAAa,SAAAqB,EACA,aAAAA,GAAA,YAAArB,EAAwC07B,GAAQr6B,IAChD,WAAArB,EAA0BkpB,GAC1B,WAAAlpB,GAAAb,EAA+Bo4B,GAAKl2B,OAAAlC,EAAe68B,IFIpC,SAAA56B,EAAAC,GACf,IACAy7B,EACAC,EACAC,EAHAC,EAAAV,GAAAW,UAAAV,GAAAU,UAAA,EAIAp+B,GAAA,EACA+B,EAAA,GACAs8B,EAAA,GAMA,IAHA/7B,GAAA,GAAAC,GAAA,IAGAy7B,EAAAP,GAAAj5B,KAAAlC,MACA27B,EAAAP,GAAAl5B,KAAAjC,MACA27B,EAAAD,EAAA71B,OAAA+1B,IACAD,EAAA37B,EAAAqC,MAAAu5B,EAAAD,GACAn8B,EAAA/B,GAAA+B,EAAA/B,IAAAk+B,EACAn8B,IAAA/B,GAAAk+B,IAEAF,IAAA,OAAAC,IAAA,IACAl8B,EAAA/B,GAAA+B,EAAA/B,IAAAi+B,EACAl8B,IAAA/B,GAAAi+B,GAEAl8B,IAAA/B,GAAA,KACAq+B,EAAAp5B,KAAA,CAAcjF,IAAA8M,EAASsd,GAAM4T,EAAAC,MAE7BE,EAAAT,GAAAU,UAYA,OARAD,EAAA57B,EAAAC,SACA07B,EAAA37B,EAAAqC,MAAAu5B,GACAp8B,EAAA/B,GAAA+B,EAAA/B,IAAAk+B,EACAn8B,IAAA/B,GAAAk+B,GAKAn8B,EAAAS,OAAA,EAAA67B,EAAA,GA7CA,SAAY97B,GACZ,gBAAArB,GACA,OAAAqB,EAAArB,GAAA,IA4CQo9B,CAAGD,EAAA,GAAAvxB,GApDX,SAAavK,GACb,kBACA,OAAAA,GAmDQg8B,CAAIh8B,IACZA,EAAA87B,EAAA77B,OAAA,SAAAtB,GACA,QAAAT,EAAAT,EAAA,EAA4BA,EAAAuC,IAAOvC,EAAA+B,GAAAtB,EAAA49B,EAAAr+B,OAAAS,EAAAqM,EAAA5L,GACnC,OAAAa,EAAAoD,KAAA,OE/CA5C,aAAqBk2B,GAAQyE,GAC7B36B,aAAAK,KCfe,SAAAN,EAAAC,GACf,IAAAjC,EAAA,IAAAsC,KACA,OAAAL,GAAAD,KAAA,SAAApB,GACA,OAAAZ,EAAAk+B,QAAAl8B,EAAAC,EAAArB,GAAAZ,IDaA2B,MAAAD,QAAAO,GEde,SAAAD,EAAAC,GACf,IAIAvC,EAJAy+B,EAAAl8B,IAAAC,OAAA,EACAk8B,EAAAp8B,EAAAiI,KAAA+M,IAAAmnB,EAAAn8B,EAAAE,QAAA,EACAsK,EAAA,IAAA7K,MAAAy8B,GACAr+B,EAAA,IAAA4B,MAAAw8B,GAGA,IAAAz+B,EAAA,EAAaA,EAAA0+B,IAAQ1+B,EAAA8M,EAAA9M,GAAa+9B,GAAKz7B,EAAAtC,GAAAuC,EAAAvC,IACvC,KAAQA,EAAAy+B,IAAQz+B,EAAAK,EAAAL,GAAAuC,EAAAvC,GAEhB,gBAAAkB,GACA,IAAAlB,EAAA,EAAeA,EAAA0+B,IAAQ1+B,EAAAK,EAAAL,GAAA8M,EAAA9M,GAAAkB,GACvB,OAAAb,IFGA,mBAAAkC,EAAA+K,SAAA,mBAAA/K,EAAAW,UAAA0V,MAAArW,GGfe,SAAAD,EAAAC,GACf,IAEAiK,EAFAxM,EAAA,GACAK,EAAA,GAMA,IAAAmM,KAHA,OAAAlK,GAAA,iBAAAA,MAAA,IACA,OAAAC,GAAA,iBAAAA,MAAA,IAEAA,EACAiK,KAAAlK,EACAtC,EAAAwM,GAAauxB,GAAKz7B,EAAAkK,GAAAjK,EAAAiK,IAElBnM,EAAAmM,GAAAjK,EAAAiK,GAIA,gBAAAtL,GACA,IAAAsL,KAAAxM,EAAAK,EAAAmM,GAAAxM,EAAAwM,GAAAtL,GACA,OAAAb,IHFQ+pB,IAAM9nB,EAAAC,IIlBCo8B,GAAA,SAAAr8B,EAAAC,GACf,OAAAA,GAAAD,KAAA,SAAApB,GACA,OAAAqJ,KAAA0R,MAAA3Z,EAAAC,EAAArB,KCFA09B,GAAA,IAAAr0B,KAAAuvB,GAEO+E,GAAA,CACPC,WAAA,EACAC,WAAA,EACAC,OAAA,EACAC,MAAA,EACAC,OAAA,EACAC,OAAA,GAGeC,GAAA,SAAA98B,EAAAC,EAAAlC,EAAAC,EAAAqM,EAAAqB,GACf,IAAAkxB,EAAAC,EAAAF,EAKA,OAJAC,EAAA30B,KAAA8wB,KAAA/4B,IAAAC,QAAAD,GAAA48B,EAAA38B,GAAA28B,IACAD,EAAA38B,EAAAjC,EAAAkC,EAAAjC,KAAAD,GAAAiC,EAAA28B,EAAA3+B,GAAAiC,EAAA08B,IACAE,EAAA50B,KAAA8wB,KAAAh7B,IAAAC,QAAAD,GAAA8+B,EAAA7+B,GAAA6+B,EAAAF,GAAAE,GACA78B,EAAAhC,EAAAiC,EAAAlC,IAAAiC,KAAAC,KAAA08B,KAAAC,MACA,CACAJ,WAAAnyB,EACAoyB,WAAA/wB,EACAgxB,OAAAz0B,KAAA6wB,MAAA74B,EAAAD,GAAAs8B,GACAK,MAAA10B,KAAA80B,KAAAJ,GAAAL,GACAM,SACAC,WCpBA,SAAAG,GAAAC,EAAAC,EAAAC,EAAAC,GAEA,SAAAC,EAAA59B,GACA,OAAAA,EAAAS,OAAAT,EAAA49B,MAAA,OAsCA,gBAAAr9B,EAAAC,GACA,IAAAR,EAAA,GACAs8B,EAAA,GAOA,OANA/7B,EAAAi9B,EAAAj9B,GAAAC,EAAAg9B,EAAAh9B,GAtCA,SAAAq9B,EAAAC,EAAAC,EAAAC,EAAAh+B,EAAAs8B,GACA,GAAAuB,IAAAE,GAAAD,IAAAE,EAAA,CACA,IAAA//B,EAAA+B,EAAAkD,KAAA,kBAAAu6B,EAAA,KAAAC,GACApB,EAAAp5B,KAAA,CAAcjF,IAAA,EAAA8M,EAAasd,GAAMwV,EAAAE,IAAS,CAAG9/B,IAAA,EAAA8M,EAAasd,GAAMyV,EAAAE,UAC3DD,GAAAC,IACLh+B,EAAAkD,KAAA,aAAA66B,EAAAN,EAAAO,EAAAN,GAkCAO,CAAA19B,EAAAw8B,WAAAx8B,EAAAy8B,WAAAx8B,EAAAu8B,WAAAv8B,EAAAw8B,WAAAh9B,EAAAs8B,GA9BA,SAAA/7B,EAAAC,EAAAR,EAAAs8B,GACA/7B,IAAAC,GACAD,EAAAC,EAAA,IAAAA,GAAA,IAAgCA,EAAAD,EAAA,MAAAA,GAAA,KAChC+7B,EAAAp5B,KAAA,CAAcjF,EAAA+B,EAAAkD,KAAA06B,EAAA59B,GAAA,eAAA29B,GAAA,EAAA5yB,EAAsDsd,GAAM9nB,EAAAC,MACrEA,GACLR,EAAAkD,KAAA06B,EAAA59B,GAAA,UAAAQ,EAAAm9B,GA0BAV,CAAA18B,EAAA08B,OAAAz8B,EAAAy8B,OAAAj9B,EAAAs8B,GAtBA,SAAA/7B,EAAAC,EAAAR,EAAAs8B,GACA/7B,IAAAC,EACA87B,EAAAp5B,KAAA,CAAcjF,EAAA+B,EAAAkD,KAAA06B,EAAA59B,GAAA,cAAA29B,GAAA,EAAA5yB,EAAqDsd,GAAM9nB,EAAAC,KACpEA,GACLR,EAAAkD,KAAA06B,EAAA59B,GAAA,SAAAQ,EAAAm9B,GAmBAT,CAAA38B,EAAA28B,MAAA18B,EAAA08B,MAAAl9B,EAAAs8B,GAfA,SAAAuB,EAAAC,EAAAC,EAAAC,EAAAh+B,EAAAs8B,GACA,GAAAuB,IAAAE,GAAAD,IAAAE,EAAA,CACA,IAAA//B,EAAA+B,EAAAkD,KAAA06B,EAAA59B,GAAA,4BACAs8B,EAAAp5B,KAAA,CAAcjF,IAAA,EAAA8M,EAAasd,GAAMwV,EAAAE,IAAS,CAAG9/B,IAAA,EAAA8M,EAAasd,GAAMyV,EAAAE,UAC3D,IAAAD,GAAA,IAAAC,GACLh+B,EAAAkD,KAAA06B,EAAA59B,GAAA,SAAA+9B,EAAA,IAAAC,EAAA,KAWA7jB,CAAA5Z,EAAA48B,OAAA58B,EAAA68B,OAAA58B,EAAA28B,OAAA38B,EAAA48B,OAAAp9B,EAAAs8B,GACA/7B,EAAAC,EAAA,KACA,SAAArB,GAEA,IADA,IAAAT,EAAAT,GAAA,EAAAyB,EAAA48B,EAAA77B,SACAxC,EAAAyB,GAAAM,GAAAtB,EAAA49B,EAAAr+B,OAAAS,EAAAqM,EAAA5L,GACA,OAAAa,EAAAoD,KAAA,MAKOm6B,GPtDA,SAAAr+B,GACP,eAAAA,EAA+B49B,IAC/BlB,QAAAsC,SAAAC,cAAA,OAAAtC,GAAAqC,SAAAE,gBAAAtC,GAAAoC,SAAAG,aACAzC,GAAA0C,MAAAC,UAAAr/B,EACAA,EAAA48B,GAAA0C,iBAAA3C,GAAA4C,YAAA7C,IAAA,MAAA8C,iBAAA,aACA7C,GAAA7d,YAAA4d,IACA18B,IAAA2D,MAAA,MAAAD,MAAA,KACSy6B,IAASn+B,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,MO+CgD,qBAC3Dq+B,GP7CA,SAAAr+B,GACP,aAAAA,EAA4B49B,IAC5Bf,QAAAmC,SAAAS,gBAAA,mCACA5C,GAAA6C,aAAA,YAAA1/B,IACAA,EAAA68B,GAAAwC,UAAAM,QAAAC,gBACA5/B,IAAA6/B,OACS1B,GAASn+B,EAAAqB,EAAArB,EAAAsB,EAAAtB,EAAAZ,EAAAY,EAAAX,EAAAW,EAAA0L,EAAA1L,EAAA+M,IAF+C6wB,KOyCC,cC9DlEt0B,KAAAw2B,MCGA,SAASC,GAAGC,GACZ,gBAAA7D,EAAAC,GACA,IAAA1hB,EAAAslB,GAAA7D,EAAyB/D,GAAQ+D,IAAAzhB,GAAA0hB,EAAmBhE,GAAQgE,IAAA1hB,GAC5D5Z,EAAYi7B,GAAKI,EAAAr7B,EAAAs7B,EAAAt7B,GACjB9B,EAAY+8B,GAAKI,EAAAn9B,EAAAo9B,EAAAp9B,GACjBg5B,EAAkB+D,GAAKI,EAAAnE,QAAAoE,EAAApE,SACvB,gBAAA/3B,GAKA,OAJAk8B,EAAAzhB,IAAAza,GACAk8B,EAAAr7B,IAAAb,GACAk8B,EAAAn9B,IAAAiB,GACAk8B,EAAAnE,UAAA/3B,GACAk8B,EAAA,KAKe4D,GAAIlE,IACEkE,GAAIhE,ICjBzB,SAASkE,GAAGD,GACZ,gBAAA7D,EAAAC,GACA,IAAA1hB,EAAAslB,GAAA7D,EAAyB9B,GAAQ8B,IAAAzhB,GAAA0hB,EAAmB/B,GAAQ+B,IAAA1hB,GAC5Dtb,EAAY28B,GAAKI,EAAA/8B,EAAAg9B,EAAAh9B,GACjBJ,EAAY+8B,GAAKI,EAAAn9B,EAAAo9B,EAAAp9B,GACjBg5B,EAAkB+D,GAAKI,EAAAnE,QAAAoE,EAAApE,SACvB,gBAAA/3B,GAKA,OAJAk8B,EAAAzhB,IAAAza,GACAk8B,EAAA/8B,IAAAa,GACAk8B,EAAAn9B,IAAAiB,GACAk8B,EAAAnE,UAAA/3B,GACAk8B,EAAA,KAKe8D,GAAIpE,IACEoE,GAAIlE,ICjBzB,SAASmE,GAASF,GAClB,gBAAAG,EAAAtG,GAGA,SAAAuG,EAAAjE,EAAAC,GACA,IAAA1hB,EAAAslB,GAAA7D,EAA2BrB,GAAcqB,IAAAzhB,GAAA0hB,EAAmBtB,GAAcsB,IAAA1hB,GAC1E5Z,EAAci7B,GAAKI,EAAAr7B,EAAAs7B,EAAAt7B,GACnB9B,EAAc+8B,GAAKI,EAAAn9B,EAAAo9B,EAAAp9B,GACnBg5B,EAAoB+D,GAAKI,EAAAnE,QAAAoE,EAAApE,SACzB,gBAAA/3B,GAKA,OAJAk8B,EAAAzhB,IAAAza,GACAk8B,EAAAr7B,IAAAb,GACAk8B,EAAAn9B,IAAAsK,KAAA4R,IAAAjb,EAAA45B,IACAsC,EAAAnE,UAAA/3B,GACAk8B,EAAA,IAMA,OAlBAtC,KAgBAuG,EAAAtE,MAAAqE,EAEAC,EAnBA,CAoBG,GAGYF,GAAUrE,IAAV,IACRwE,GAAoBH,GAAUnE,IC5BtB,ICEAuE,GAAA,SAAAC,GACf,OAAShE,GAAmBgE,IAAAh/B,OAAA,KCYbi/B,GAAAF,GAZE,IAAAt/B,MAAA,GAAA4C,OACjB,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAoC,IAAM0mB,KCES+T,GAAAH,GAZE,IAAAt/B,MAAA,GAAA4C,OACjB,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAoC,IAAM0mB,KCESgU,GAAAJ,GAZE,IAAAt/B,MAAA,GAAA4C,OACjB,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAoC,IAAM0mB,KCESiU,GAAAL,GAZE,IAAAt/B,MAAA,GAAA4C,OACjB,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAoC,IAAM0mB,KCESkU,GAAAN,GAZE,IAAAt/B,MAAA,GAAA4C,OACjB,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAoC,IAAM0mB,KCESmU,GAAAP,GAZE,IAAAt/B,MAAA,GAAA4C,OACjB,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAoC,IAAM0mB,KCESoU,GAAAR,GAZE,IAAAt/B,MAAA,GAAA4C,OACjB,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAoC,IAAM0mB,KCESqU,GAAAT,GAZE,IAAAt/B,MAAA,GAAA4C,OACjB,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAoC,IAAM0mB,KCESsU,GAAAV,GAZE,IAAAt/B,MAAA,GAAA4C,OACjB,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAoC,IAAM0mB,KCASuU,GAAAX,GAVE,IAAAt/B,MAAA,GAAA4C,OACjB,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAoC,IAAM0mB,KCESwU,GAAAZ,GAVE,IAAAt/B,MAAA,GAAA4C,OACjB,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAoC,IAAM0mB,KCESyU,GAAAb,GAVE,IAAAt/B,MAAA,GAAA4C,OACjB,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAoC,IAAM0mB,KCES0U,GAAAd,GAVE,IAAAt/B,MAAA,GAAA4C,OACjB,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAoC,IAAM0mB,KCES2U,GAAAf,GAVE,IAAAt/B,MAAA,GAAA4C,OACjB,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAoC,IAAM0mB,KCES4U,GAAAhB,GAVE,IAAAt/B,MAAA,GAAA4C,OACjB,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAoC,IAAM0mB,KCES6U,GAAAjB,GAVE,IAAAt/B,MAAA,GAAA4C,OACjB,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAoC,IAAM0mB,KCES8U,GAAAlB,GAVE,IAAAt/B,MAAA,GAAA4C,OACjB,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAoC,IAAM0mB,KCES+U,GA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","file":"LineUpJS.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"LineUpJS\"] = factory();\n\telse\n\t\troot[\"LineUpJS\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n","'use strict';\n\nvar isArray = Array.isArray;\nvar keyList = Object.keys;\nvar hasProp = Object.prototype.hasOwnProperty;\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    var arrA = isArray(a)\n      , arrB = isArray(b)\n      , i\n      , length\n      , key;\n\n    if (arrA && arrB) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n    if (arrA != arrB) return false;\n\n    var dateA = a instanceof Date\n      , dateB = b instanceof Date;\n    if (dateA != dateB) return false;\n    if (dateA && dateB) return a.getTime() == b.getTime();\n\n    var regexpA = a instanceof RegExp\n      , regexpB = b instanceof RegExp;\n    if (regexpA != regexpB) return false;\n    if (regexpA && regexpB) return a.toString() == b.toString();\n\n    var keys = keyList(a);\n    length = keys.length;\n\n    if (length !== keyList(b).length)\n      return false;\n\n    for (i = length; i-- !== 0;)\n      if (!hasProp.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      key = keys[i];\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  return a!==a && b!==b;\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar BrowserInfo = /** @class */ (function () {\n    function BrowserInfo(name, version, os) {\n        this.name = name;\n        this.version = version;\n        this.os = os;\n    }\n    return BrowserInfo;\n}());\nexports.BrowserInfo = BrowserInfo;\nvar NodeInfo = /** @class */ (function () {\n    function NodeInfo(version) {\n        this.version = version;\n        this.name = 'node';\n        this.os = process.platform;\n    }\n    return NodeInfo;\n}());\nexports.NodeInfo = NodeInfo;\nvar BotInfo = /** @class */ (function () {\n    function BotInfo() {\n        this.bot = true; // NOTE: deprecated test name instead\n        this.name = 'bot';\n        this.version = null;\n        this.os = null;\n    }\n    return BotInfo;\n}());\nexports.BotInfo = BotInfo;\n// tslint:disable-next-line:max-line-length\nvar SEARCHBOX_UA_REGEX = /alexa|bot|crawl(er|ing)|facebookexternalhit|feedburner|google web preview|nagios|postrank|pingdom|slurp|spider|yahoo!|yandex/;\nvar SEARCHBOT_OS_REGEX = /(nuhk)|(Googlebot)|(Yammybot)|(Openbot)|(Slurp)|(MSNBot)|(Ask Jeeves\\/Teoma)|(ia_archiver)/;\nvar REQUIRED_VERSION_PARTS = 3;\nvar userAgentRules = [\n    ['aol', /AOLShield\\/([0-9\\._]+)/],\n    ['edge', /Edge\\/([0-9\\._]+)/],\n    ['yandexbrowser', /YaBrowser\\/([0-9\\._]+)/],\n    ['vivaldi', /Vivaldi\\/([0-9\\.]+)/],\n    ['kakaotalk', /KAKAOTALK\\s([0-9\\.]+)/],\n    ['samsung', /SamsungBrowser\\/([0-9\\.]+)/],\n    ['silk', /\\bSilk\\/([0-9._-]+)\\b/],\n    ['miui', /MiuiBrowser\\/([0-9\\.]+)$/],\n    ['beaker', /BeakerBrowser\\/([0-9\\.]+)/],\n    ['edge-chromium', /Edg\\/([0-9\\.]+)/],\n    ['chromium-webview', /(?!Chrom.*OPR)wv\\).*Chrom(?:e|ium)\\/([0-9\\.]+)(:?\\s|$)/],\n    ['chrome', /(?!Chrom.*OPR)Chrom(?:e|ium)\\/([0-9\\.]+)(:?\\s|$)/],\n    ['phantomjs', /PhantomJS\\/([0-9\\.]+)(:?\\s|$)/],\n    ['crios', /CriOS\\/([0-9\\.]+)(:?\\s|$)/],\n    ['firefox', /Firefox\\/([0-9\\.]+)(?:\\s|$)/],\n    ['fxios', /FxiOS\\/([0-9\\.]+)/],\n    ['opera-mini', /Opera Mini.*Version\\/([0-9\\.]+)/],\n    ['opera', /Opera\\/([0-9\\.]+)(?:\\s|$)/],\n    ['opera', /OPR\\/([0-9\\.]+)(:?\\s|$)/],\n    ['ie', /Trident\\/7\\.0.*rv\\:([0-9\\.]+).*\\).*Gecko$/],\n    ['ie', /MSIE\\s([0-9\\.]+);.*Trident\\/[4-7].0/],\n    ['ie', /MSIE\\s(7\\.0)/],\n    ['bb10', /BB10;\\sTouch.*Version\\/([0-9\\.]+)/],\n    ['android', /Android\\s([0-9\\.]+)/],\n    ['ios', /Version\\/([0-9\\._]+).*Mobile.*Safari.*/],\n    ['safari', /Version\\/([0-9\\._]+).*Safari/],\n    ['facebook', /FBAV\\/([0-9\\.]+)/],\n    ['instagram', /Instagram\\s([0-9\\.]+)/],\n    ['ios-webview', /AppleWebKit\\/([0-9\\.]+).*Mobile/],\n    ['ios-webview', /AppleWebKit\\/([0-9\\.]+).*Gecko\\)$/],\n    ['searchbot', SEARCHBOX_UA_REGEX],\n];\nvar operatingSystemRules = [\n    ['iOS', /iP(hone|od|ad)/],\n    ['Android OS', /Android/],\n    ['BlackBerry OS', /BlackBerry|BB10/],\n    ['Windows Mobile', /IEMobile/],\n    ['Amazon OS', /Kindle/],\n    ['Windows 3.11', /Win16/],\n    ['Windows 95', /(Windows 95)|(Win95)|(Windows_95)/],\n    ['Windows 98', /(Windows 98)|(Win98)/],\n    ['Windows 2000', /(Windows NT 5.0)|(Windows 2000)/],\n    ['Windows XP', /(Windows NT 5.1)|(Windows XP)/],\n    ['Windows Server 2003', /(Windows NT 5.2)/],\n    ['Windows Vista', /(Windows NT 6.0)/],\n    ['Windows 7', /(Windows NT 6.1)/],\n    ['Windows 8', /(Windows NT 6.2)/],\n    ['Windows 8.1', /(Windows NT 6.3)/],\n    ['Windows 10', /(Windows NT 10.0)/],\n    ['Windows ME', /Windows ME/],\n    ['Open BSD', /OpenBSD/],\n    ['Sun OS', /SunOS/],\n    ['Chrome OS', /CrOS/],\n    ['Linux', /(Linux)|(X11)/],\n    ['Mac OS', /(Mac_PowerPC)|(Macintosh)/],\n    ['QNX', /QNX/],\n    ['BeOS', /BeOS/],\n    ['OS/2', /OS\\/2/],\n    ['Search Bot', SEARCHBOT_OS_REGEX],\n];\nfunction detect() {\n    if (typeof navigator !== 'undefined') {\n        return parseUserAgent(navigator.userAgent);\n    }\n    return getNodeVersion();\n}\nexports.detect = detect;\nfunction parseUserAgent(ua) {\n    // opted for using reduce here rather than Array#first with a regex.test call\n    // this is primarily because using the reduce we only perform the regex\n    // execution once rather than once for the test and for the exec again below\n    // probably something that needs to be benchmarked though\n    var matchedRule = ua !== '' &&\n        userAgentRules.reduce(function (matched, _a) {\n            var browser = _a[0], regex = _a[1];\n            if (matched) {\n                return matched;\n            }\n            var uaMatch = regex.exec(ua);\n            return !!uaMatch && [browser, uaMatch];\n        }, false);\n    if (!matchedRule) {\n        return null;\n    }\n    var name = matchedRule[0], match = matchedRule[1];\n    if (name === 'searchbot') {\n        return new BotInfo();\n    }\n    var versionParts = match[1] && match[1].split(/[._]/).slice(0, 3);\n    if (versionParts) {\n        if (versionParts.length < REQUIRED_VERSION_PARTS) {\n            versionParts = versionParts.concat(createVersionParts(REQUIRED_VERSION_PARTS - versionParts.length));\n        }\n    }\n    else {\n        versionParts = [];\n    }\n    return new BrowserInfo(name, versionParts.join('.'), detectOS(ua));\n}\nexports.parseUserAgent = parseUserAgent;\nfunction detectOS(ua) {\n    for (var ii = 0, count = operatingSystemRules.length; ii < count; ii++) {\n        var _a = operatingSystemRules[ii], os = _a[0], regex = _a[1];\n        var match = regex.test(ua);\n        if (match) {\n            return os;\n        }\n    }\n    return null;\n}\nexports.detectOS = detectOS;\nfunction getNodeVersion() {\n    var isNode = typeof process !== 'undefined' && process.version;\n    return isNode ? new NodeInfo(process.version.slice(1)) : null;\n}\nexports.getNodeVersion = getNodeVersion;\nfunction createVersionParts(count) {\n    var output = [];\n    for (var ii = 0; ii < count; ii++) {\n        output.push('0');\n    }\n    return output;\n}\n","/*! *****************************************************************************\nCopyright (C) Microsoft. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\nvar Reflect;\n(function (Reflect) {\n    // Metadata Proposal\n    // https://rbuckton.github.io/reflect-metadata/\n    (function (factory) {\n        var root = typeof global === \"object\" ? global :\n            typeof self === \"object\" ? self :\n                typeof this === \"object\" ? this :\n                    Function(\"return this;\")();\n        var exporter = makeExporter(Reflect);\n        if (typeof root.Reflect === \"undefined\") {\n            root.Reflect = Reflect;\n        }\n        else {\n            exporter = makeExporter(root.Reflect, exporter);\n        }\n        factory(exporter);\n        function makeExporter(target, previous) {\n            return function (key, value) {\n                if (typeof target[key] !== \"function\") {\n                    Object.defineProperty(target, key, { configurable: true, writable: true, value: value });\n                }\n                if (previous)\n                    previous(key, value);\n            };\n        }\n    })(function (exporter) {\n        var hasOwn = Object.prototype.hasOwnProperty;\n        // feature test for Symbol support\n        var supportsSymbol = typeof Symbol === \"function\";\n        var toPrimitiveSymbol = supportsSymbol && typeof Symbol.toPrimitive !== \"undefined\" ? Symbol.toPrimitive : \"@@toPrimitive\";\n        var iteratorSymbol = supportsSymbol && typeof Symbol.iterator !== \"undefined\" ? Symbol.iterator : \"@@iterator\";\n        var supportsCreate = typeof Object.create === \"function\"; // feature test for Object.create support\n        var supportsProto = { __proto__: [] } instanceof Array; // feature test for __proto__ support\n        var downLevel = !supportsCreate && !supportsProto;\n        var HashMap = {\n            // create an object in dictionary mode (a.k.a. \"slow\" mode in v8)\n            create: supportsCreate\n                ? function () { return MakeDictionary(Object.create(null)); }\n                : supportsProto\n                    ? function () { return MakeDictionary({ __proto__: null }); }\n                    : function () { return MakeDictionary({}); },\n            has: downLevel\n                ? function (map, key) { return hasOwn.call(map, key); }\n                : function (map, key) { return key in map; },\n            get: downLevel\n                ? function (map, key) { return hasOwn.call(map, key) ? map[key] : undefined; }\n                : function (map, key) { return map[key]; },\n        };\n        // Load global or shim versions of Map, Set, and WeakMap\n        var functionPrototype = Object.getPrototypeOf(Function);\n        var usePolyfill = typeof process === \"object\" && process.env && process.env[\"REFLECT_METADATA_USE_MAP_POLYFILL\"] === \"true\";\n        var _Map = !usePolyfill && typeof Map === \"function\" && typeof Map.prototype.entries === \"function\" ? Map : CreateMapPolyfill();\n        var _Set = !usePolyfill && typeof Set === \"function\" && typeof Set.prototype.entries === \"function\" ? Set : CreateSetPolyfill();\n        var _WeakMap = !usePolyfill && typeof WeakMap === \"function\" ? WeakMap : CreateWeakMapPolyfill();\n        // [[Metadata]] internal slot\n        // https://rbuckton.github.io/reflect-metadata/#ordinary-object-internal-methods-and-internal-slots\n        var Metadata = new _WeakMap();\n        /**\n         * Applies a set of decorators to a property of a target object.\n         * @param decorators An array of decorators.\n         * @param target The target object.\n         * @param propertyKey (Optional) The property key to decorate.\n         * @param attributes (Optional) The property descriptor for the target key.\n         * @remarks Decorators are applied in reverse order.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     Example = Reflect.decorate(decoratorsArray, Example);\n         *\n         *     // property (on constructor)\n         *     Reflect.decorate(decoratorsArray, Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     Reflect.decorate(decoratorsArray, Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     Object.defineProperty(Example, \"staticMethod\",\n         *         Reflect.decorate(decoratorsArray, Example, \"staticMethod\",\n         *             Object.getOwnPropertyDescriptor(Example, \"staticMethod\")));\n         *\n         *     // method (on prototype)\n         *     Object.defineProperty(Example.prototype, \"method\",\n         *         Reflect.decorate(decoratorsArray, Example.prototype, \"method\",\n         *             Object.getOwnPropertyDescriptor(Example.prototype, \"method\")));\n         *\n         */\n        function decorate(decorators, target, propertyKey, attributes) {\n            if (!IsUndefined(propertyKey)) {\n                if (!IsArray(decorators))\n                    throw new TypeError();\n                if (!IsObject(target))\n                    throw new TypeError();\n                if (!IsObject(attributes) && !IsUndefined(attributes) && !IsNull(attributes))\n                    throw new TypeError();\n                if (IsNull(attributes))\n                    attributes = undefined;\n                propertyKey = ToPropertyKey(propertyKey);\n                return DecorateProperty(decorators, target, propertyKey, attributes);\n            }\n            else {\n                if (!IsArray(decorators))\n                    throw new TypeError();\n                if (!IsConstructor(target))\n                    throw new TypeError();\n                return DecorateConstructor(decorators, target);\n            }\n        }\n        exporter(\"decorate\", decorate);\n        // 4.1.2 Reflect.metadata(metadataKey, metadataValue)\n        // https://rbuckton.github.io/reflect-metadata/#reflect.metadata\n        /**\n         * A default metadata decorator factory that can be used on a class, class member, or parameter.\n         * @param metadataKey The key for the metadata entry.\n         * @param metadataValue The value for the metadata entry.\n         * @returns A decorator function.\n         * @remarks\n         * If `metadataKey` is already defined for the target and target key, the\n         * metadataValue for that key will be overwritten.\n         * @example\n         *\n         *     // constructor\n         *     @Reflect.metadata(key, value)\n         *     class Example {\n         *     }\n         *\n         *     // property (on constructor, TypeScript only)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         static staticProperty;\n         *     }\n         *\n         *     // property (on prototype, TypeScript only)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         property;\n         *     }\n         *\n         *     // method (on constructor)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         static staticMethod() { }\n         *     }\n         *\n         *     // method (on prototype)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         method() { }\n         *     }\n         *\n         */\n        function metadata(metadataKey, metadataValue) {\n            function decorator(target, propertyKey) {\n                if (!IsObject(target))\n                    throw new TypeError();\n                if (!IsUndefined(propertyKey) && !IsPropertyKey(propertyKey))\n                    throw new TypeError();\n                OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\n            }\n            return decorator;\n        }\n        exporter(\"metadata\", metadata);\n        /**\n         * Define a unique metadata entry on the target.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param metadataValue A value that contains attached metadata.\n         * @param target The target object on which to define metadata.\n         * @param propertyKey (Optional) The property key for the target.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example);\n         *\n         *     // property (on constructor)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"method\");\n         *\n         *     // decorator factory as metadata-producing annotation.\n         *     function MyAnnotation(options): Decorator {\n         *         return (target, key?) => Reflect.defineMetadata(\"custom:annotation\", options, target, key);\n         *     }\n         *\n         */\n        function defineMetadata(metadataKey, metadataValue, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\n        }\n        exporter(\"defineMetadata\", defineMetadata);\n        /**\n         * Gets a value indicating whether the target object or its prototype chain has the provided metadata key defined.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata key was defined on the target object or its prototype chain; otherwise, `false`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function hasMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryHasMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"hasMetadata\", hasMetadata);\n        /**\n         * Gets a value indicating whether the target object has the provided metadata key defined.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata key was defined on the target object; otherwise, `false`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function hasOwnMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryHasOwnMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"hasOwnMetadata\", hasOwnMetadata);\n        /**\n         * Gets the metadata value for the provided metadata key on the target object or its prototype chain.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function getMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryGetMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"getMetadata\", getMetadata);\n        /**\n         * Gets the metadata value for the provided metadata key on the target object.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function getOwnMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryGetOwnMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"getOwnMetadata\", getOwnMetadata);\n        /**\n         * Gets the metadata keys defined on the target object or its prototype chain.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns An array of unique metadata keys.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getMetadataKeys(Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getMetadataKeys(Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getMetadataKeys(Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getMetadataKeys(Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getMetadataKeys(Example.prototype, \"method\");\n         *\n         */\n        function getMetadataKeys(target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryMetadataKeys(target, propertyKey);\n        }\n        exporter(\"getMetadataKeys\", getMetadataKeys);\n        /**\n         * Gets the unique metadata keys defined on the target object.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns An array of unique metadata keys.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getOwnMetadataKeys(Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getOwnMetadataKeys(Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getOwnMetadataKeys(Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"method\");\n         *\n         */\n        function getOwnMetadataKeys(target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryOwnMetadataKeys(target, propertyKey);\n        }\n        exporter(\"getOwnMetadataKeys\", getOwnMetadataKeys);\n        /**\n         * Deletes the metadata entry from the target object with the provided key.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata entry was found and deleted; otherwise, false.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function deleteMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            var metadataMap = GetOrCreateMetadataMap(target, propertyKey, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return false;\n            if (!metadataMap.delete(metadataKey))\n                return false;\n            if (metadataMap.size > 0)\n                return true;\n            var targetMetadata = Metadata.get(target);\n            targetMetadata.delete(propertyKey);\n            if (targetMetadata.size > 0)\n                return true;\n            Metadata.delete(target);\n            return true;\n        }\n        exporter(\"deleteMetadata\", deleteMetadata);\n        function DecorateConstructor(decorators, target) {\n            for (var i = decorators.length - 1; i >= 0; --i) {\n                var decorator = decorators[i];\n                var decorated = decorator(target);\n                if (!IsUndefined(decorated) && !IsNull(decorated)) {\n                    if (!IsConstructor(decorated))\n                        throw new TypeError();\n                    target = decorated;\n                }\n            }\n            return target;\n        }\n        function DecorateProperty(decorators, target, propertyKey, descriptor) {\n            for (var i = decorators.length - 1; i >= 0; --i) {\n                var decorator = decorators[i];\n                var decorated = decorator(target, propertyKey, descriptor);\n                if (!IsUndefined(decorated) && !IsNull(decorated)) {\n                    if (!IsObject(decorated))\n                        throw new TypeError();\n                    descriptor = decorated;\n                }\n            }\n            return descriptor;\n        }\n        function GetOrCreateMetadataMap(O, P, Create) {\n            var targetMetadata = Metadata.get(O);\n            if (IsUndefined(targetMetadata)) {\n                if (!Create)\n                    return undefined;\n                targetMetadata = new _Map();\n                Metadata.set(O, targetMetadata);\n            }\n            var metadataMap = targetMetadata.get(P);\n            if (IsUndefined(metadataMap)) {\n                if (!Create)\n                    return undefined;\n                metadataMap = new _Map();\n                targetMetadata.set(P, metadataMap);\n            }\n            return metadataMap;\n        }\n        // 3.1.1.1 OrdinaryHasMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasmetadata\n        function OrdinaryHasMetadata(MetadataKey, O, P) {\n            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\n            if (hasOwn)\n                return true;\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (!IsNull(parent))\n                return OrdinaryHasMetadata(MetadataKey, parent, P);\n            return false;\n        }\n        // 3.1.2.1 OrdinaryHasOwnMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasownmetadata\n        function OrdinaryHasOwnMetadata(MetadataKey, O, P) {\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return false;\n            return ToBoolean(metadataMap.has(MetadataKey));\n        }\n        // 3.1.3.1 OrdinaryGetMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarygetmetadata\n        function OrdinaryGetMetadata(MetadataKey, O, P) {\n            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\n            if (hasOwn)\n                return OrdinaryGetOwnMetadata(MetadataKey, O, P);\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (!IsNull(parent))\n                return OrdinaryGetMetadata(MetadataKey, parent, P);\n            return undefined;\n        }\n        // 3.1.4.1 OrdinaryGetOwnMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarygetownmetadata\n        function OrdinaryGetOwnMetadata(MetadataKey, O, P) {\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return undefined;\n            return metadataMap.get(MetadataKey);\n        }\n        // 3.1.5.1 OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarydefineownmetadata\n        function OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P) {\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ true);\n            metadataMap.set(MetadataKey, MetadataValue);\n        }\n        // 3.1.6.1 OrdinaryMetadataKeys(O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarymetadatakeys\n        function OrdinaryMetadataKeys(O, P) {\n            var ownKeys = OrdinaryOwnMetadataKeys(O, P);\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (parent === null)\n                return ownKeys;\n            var parentKeys = OrdinaryMetadataKeys(parent, P);\n            if (parentKeys.length <= 0)\n                return ownKeys;\n            if (ownKeys.length <= 0)\n                return parentKeys;\n            var set = new _Set();\n            var keys = [];\n            for (var _i = 0, ownKeys_1 = ownKeys; _i < ownKeys_1.length; _i++) {\n                var key = ownKeys_1[_i];\n                var hasKey = set.has(key);\n                if (!hasKey) {\n                    set.add(key);\n                    keys.push(key);\n                }\n            }\n            for (var _a = 0, parentKeys_1 = parentKeys; _a < parentKeys_1.length; _a++) {\n                var key = parentKeys_1[_a];\n                var hasKey = set.has(key);\n                if (!hasKey) {\n                    set.add(key);\n                    keys.push(key);\n                }\n            }\n            return keys;\n        }\n        // 3.1.7.1 OrdinaryOwnMetadataKeys(O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryownmetadatakeys\n        function OrdinaryOwnMetadataKeys(O, P) {\n            var keys = [];\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return keys;\n            var keysObj = metadataMap.keys();\n            var iterator = GetIterator(keysObj);\n            var k = 0;\n            while (true) {\n                var next = IteratorStep(iterator);\n                if (!next) {\n                    keys.length = k;\n                    return keys;\n                }\n                var nextValue = IteratorValue(next);\n                try {\n                    keys[k] = nextValue;\n                }\n                catch (e) {\n                    try {\n                        IteratorClose(iterator);\n                    }\n                    finally {\n                        throw e;\n                    }\n                }\n                k++;\n            }\n        }\n        // 6 ECMAScript Data Typ0es and Values\n        // https://tc39.github.io/ecma262/#sec-ecmascript-data-types-and-values\n        function Type(x) {\n            if (x === null)\n                return 1 /* Null */;\n            switch (typeof x) {\n                case \"undefined\": return 0 /* Undefined */;\n                case \"boolean\": return 2 /* Boolean */;\n                case \"string\": return 3 /* String */;\n                case \"symbol\": return 4 /* Symbol */;\n                case \"number\": return 5 /* Number */;\n                case \"object\": return x === null ? 1 /* Null */ : 6 /* Object */;\n                default: return 6 /* Object */;\n            }\n        }\n        // 6.1.1 The Undefined Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-undefined-type\n        function IsUndefined(x) {\n            return x === undefined;\n        }\n        // 6.1.2 The Null Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-null-type\n        function IsNull(x) {\n            return x === null;\n        }\n        // 6.1.5 The Symbol Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-symbol-type\n        function IsSymbol(x) {\n            return typeof x === \"symbol\";\n        }\n        // 6.1.7 The Object Type\n        // https://tc39.github.io/ecma262/#sec-object-type\n        function IsObject(x) {\n            return typeof x === \"object\" ? x !== null : typeof x === \"function\";\n        }\n        // 7.1 Type Conversion\n        // https://tc39.github.io/ecma262/#sec-type-conversion\n        // 7.1.1 ToPrimitive(input [, PreferredType])\n        // https://tc39.github.io/ecma262/#sec-toprimitive\n        function ToPrimitive(input, PreferredType) {\n            switch (Type(input)) {\n                case 0 /* Undefined */: return input;\n                case 1 /* Null */: return input;\n                case 2 /* Boolean */: return input;\n                case 3 /* String */: return input;\n                case 4 /* Symbol */: return input;\n                case 5 /* Number */: return input;\n            }\n            var hint = PreferredType === 3 /* String */ ? \"string\" : PreferredType === 5 /* Number */ ? \"number\" : \"default\";\n            var exoticToPrim = GetMethod(input, toPrimitiveSymbol);\n            if (exoticToPrim !== undefined) {\n                var result = exoticToPrim.call(input, hint);\n                if (IsObject(result))\n                    throw new TypeError();\n                return result;\n            }\n            return OrdinaryToPrimitive(input, hint === \"default\" ? \"number\" : hint);\n        }\n        // 7.1.1.1 OrdinaryToPrimitive(O, hint)\n        // https://tc39.github.io/ecma262/#sec-ordinarytoprimitive\n        function OrdinaryToPrimitive(O, hint) {\n            if (hint === \"string\") {\n                var toString_1 = O.toString;\n                if (IsCallable(toString_1)) {\n                    var result = toString_1.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n                var valueOf = O.valueOf;\n                if (IsCallable(valueOf)) {\n                    var result = valueOf.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n            }\n            else {\n                var valueOf = O.valueOf;\n                if (IsCallable(valueOf)) {\n                    var result = valueOf.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n                var toString_2 = O.toString;\n                if (IsCallable(toString_2)) {\n                    var result = toString_2.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n            }\n            throw new TypeError();\n        }\n        // 7.1.2 ToBoolean(argument)\n        // https://tc39.github.io/ecma262/2016/#sec-toboolean\n        function ToBoolean(argument) {\n            return !!argument;\n        }\n        // 7.1.12 ToString(argument)\n        // https://tc39.github.io/ecma262/#sec-tostring\n        function ToString(argument) {\n            return \"\" + argument;\n        }\n        // 7.1.14 ToPropertyKey(argument)\n        // https://tc39.github.io/ecma262/#sec-topropertykey\n        function ToPropertyKey(argument) {\n            var key = ToPrimitive(argument, 3 /* String */);\n            if (IsSymbol(key))\n                return key;\n            return ToString(key);\n        }\n        // 7.2 Testing and Comparison Operations\n        // https://tc39.github.io/ecma262/#sec-testing-and-comparison-operations\n        // 7.2.2 IsArray(argument)\n        // https://tc39.github.io/ecma262/#sec-isarray\n        function IsArray(argument) {\n            return Array.isArray\n                ? Array.isArray(argument)\n                : argument instanceof Object\n                    ? argument instanceof Array\n                    : Object.prototype.toString.call(argument) === \"[object Array]\";\n        }\n        // 7.2.3 IsCallable(argument)\n        // https://tc39.github.io/ecma262/#sec-iscallable\n        function IsCallable(argument) {\n            // NOTE: This is an approximation as we cannot check for [[Call]] internal method.\n            return typeof argument === \"function\";\n        }\n        // 7.2.4 IsConstructor(argument)\n        // https://tc39.github.io/ecma262/#sec-isconstructor\n        function IsConstructor(argument) {\n            // NOTE: This is an approximation as we cannot check for [[Construct]] internal method.\n            return typeof argument === \"function\";\n        }\n        // 7.2.7 IsPropertyKey(argument)\n        // https://tc39.github.io/ecma262/#sec-ispropertykey\n        function IsPropertyKey(argument) {\n            switch (Type(argument)) {\n                case 3 /* String */: return true;\n                case 4 /* Symbol */: return true;\n                default: return false;\n            }\n        }\n        // 7.3 Operations on Objects\n        // https://tc39.github.io/ecma262/#sec-operations-on-objects\n        // 7.3.9 GetMethod(V, P)\n        // https://tc39.github.io/ecma262/#sec-getmethod\n        function GetMethod(V, P) {\n            var func = V[P];\n            if (func === undefined || func === null)\n                return undefined;\n            if (!IsCallable(func))\n                throw new TypeError();\n            return func;\n        }\n        // 7.4 Operations on Iterator Objects\n        // https://tc39.github.io/ecma262/#sec-operations-on-iterator-objects\n        function GetIterator(obj) {\n            var method = GetMethod(obj, iteratorSymbol);\n            if (!IsCallable(method))\n                throw new TypeError(); // from Call\n            var iterator = method.call(obj);\n            if (!IsObject(iterator))\n                throw new TypeError();\n            return iterator;\n        }\n        // 7.4.4 IteratorValue(iterResult)\n        // https://tc39.github.io/ecma262/2016/#sec-iteratorvalue\n        function IteratorValue(iterResult) {\n            return iterResult.value;\n        }\n        // 7.4.5 IteratorStep(iterator)\n        // https://tc39.github.io/ecma262/#sec-iteratorstep\n        function IteratorStep(iterator) {\n            var result = iterator.next();\n            return result.done ? false : result;\n        }\n        // 7.4.6 IteratorClose(iterator, completion)\n        // https://tc39.github.io/ecma262/#sec-iteratorclose\n        function IteratorClose(iterator) {\n            var f = iterator[\"return\"];\n            if (f)\n                f.call(iterator);\n        }\n        // 9.1 Ordinary Object Internal Methods and Internal Slots\n        // https://tc39.github.io/ecma262/#sec-ordinary-object-internal-methods-and-internal-slots\n        // 9.1.1.1 OrdinaryGetPrototypeOf(O)\n        // https://tc39.github.io/ecma262/#sec-ordinarygetprototypeof\n        function OrdinaryGetPrototypeOf(O) {\n            var proto = Object.getPrototypeOf(O);\n            if (typeof O !== \"function\" || O === functionPrototype)\n                return proto;\n            // TypeScript doesn't set __proto__ in ES5, as it's non-standard.\n            // Try to determine the superclass constructor. Compatible implementations\n            // must either set __proto__ on a subclass constructor to the superclass constructor,\n            // or ensure each class has a valid `constructor` property on its prototype that\n            // points back to the constructor.\n            // If this is not the same as Function.[[Prototype]], then this is definately inherited.\n            // This is the case when in ES6 or when using __proto__ in a compatible browser.\n            if (proto !== functionPrototype)\n                return proto;\n            // If the super prototype is Object.prototype, null, or undefined, then we cannot determine the heritage.\n            var prototype = O.prototype;\n            var prototypeProto = prototype && Object.getPrototypeOf(prototype);\n            if (prototypeProto == null || prototypeProto === Object.prototype)\n                return proto;\n            // If the constructor was not a function, then we cannot determine the heritage.\n            var constructor = prototypeProto.constructor;\n            if (typeof constructor !== \"function\")\n                return proto;\n            // If we have some kind of self-reference, then we cannot determine the heritage.\n            if (constructor === O)\n                return proto;\n            // we have a pretty good guess at the heritage.\n            return constructor;\n        }\n        // naive Map shim\n        function CreateMapPolyfill() {\n            var cacheSentinel = {};\n            var arraySentinel = [];\n            var MapIterator = /** @class */ (function () {\n                function MapIterator(keys, values, selector) {\n                    this._index = 0;\n                    this._keys = keys;\n                    this._values = values;\n                    this._selector = selector;\n                }\n                MapIterator.prototype[\"@@iterator\"] = function () { return this; };\n                MapIterator.prototype[iteratorSymbol] = function () { return this; };\n                MapIterator.prototype.next = function () {\n                    var index = this._index;\n                    if (index >= 0 && index < this._keys.length) {\n                        var result = this._selector(this._keys[index], this._values[index]);\n                        if (index + 1 >= this._keys.length) {\n                            this._index = -1;\n                            this._keys = arraySentinel;\n                            this._values = arraySentinel;\n                        }\n                        else {\n                            this._index++;\n                        }\n                        return { value: result, done: false };\n                    }\n                    return { value: undefined, done: true };\n                };\n                MapIterator.prototype.throw = function (error) {\n                    if (this._index >= 0) {\n                        this._index = -1;\n                        this._keys = arraySentinel;\n                        this._values = arraySentinel;\n                    }\n                    throw error;\n                };\n                MapIterator.prototype.return = function (value) {\n                    if (this._index >= 0) {\n                        this._index = -1;\n                        this._keys = arraySentinel;\n                        this._values = arraySentinel;\n                    }\n                    return { value: value, done: true };\n                };\n                return MapIterator;\n            }());\n            return /** @class */ (function () {\n                function Map() {\n                    this._keys = [];\n                    this._values = [];\n                    this._cacheKey = cacheSentinel;\n                    this._cacheIndex = -2;\n                }\n                Object.defineProperty(Map.prototype, \"size\", {\n                    get: function () { return this._keys.length; },\n                    enumerable: true,\n                    configurable: true\n                });\n                Map.prototype.has = function (key) { return this._find(key, /*insert*/ false) >= 0; };\n                Map.prototype.get = function (key) {\n                    var index = this._find(key, /*insert*/ false);\n                    return index >= 0 ? this._values[index] : undefined;\n                };\n                Map.prototype.set = function (key, value) {\n                    var index = this._find(key, /*insert*/ true);\n                    this._values[index] = value;\n                    return this;\n                };\n                Map.prototype.delete = function (key) {\n                    var index = this._find(key, /*insert*/ false);\n                    if (index >= 0) {\n                        var size = this._keys.length;\n                        for (var i = index + 1; i < size; i++) {\n                            this._keys[i - 1] = this._keys[i];\n                            this._values[i - 1] = this._values[i];\n                        }\n                        this._keys.length--;\n                        this._values.length--;\n                        if (key === this._cacheKey) {\n                            this._cacheKey = cacheSentinel;\n                            this._cacheIndex = -2;\n                        }\n                        return true;\n                    }\n                    return false;\n                };\n                Map.prototype.clear = function () {\n                    this._keys.length = 0;\n                    this._values.length = 0;\n                    this._cacheKey = cacheSentinel;\n                    this._cacheIndex = -2;\n                };\n                Map.prototype.keys = function () { return new MapIterator(this._keys, this._values, getKey); };\n                Map.prototype.values = function () { return new MapIterator(this._keys, this._values, getValue); };\n                Map.prototype.entries = function () { return new MapIterator(this._keys, this._values, getEntry); };\n                Map.prototype[\"@@iterator\"] = function () { return this.entries(); };\n                Map.prototype[iteratorSymbol] = function () { return this.entries(); };\n                Map.prototype._find = function (key, insert) {\n                    if (this._cacheKey !== key) {\n                        this._cacheIndex = this._keys.indexOf(this._cacheKey = key);\n                    }\n                    if (this._cacheIndex < 0 && insert) {\n                        this._cacheIndex = this._keys.length;\n                        this._keys.push(key);\n                        this._values.push(undefined);\n                    }\n                    return this._cacheIndex;\n                };\n                return Map;\n            }());\n            function getKey(key, _) {\n                return key;\n            }\n            function getValue(_, value) {\n                return value;\n            }\n            function getEntry(key, value) {\n                return [key, value];\n            }\n        }\n        // naive Set shim\n        function CreateSetPolyfill() {\n            return /** @class */ (function () {\n                function Set() {\n                    this._map = new _Map();\n                }\n                Object.defineProperty(Set.prototype, \"size\", {\n                    get: function () { return this._map.size; },\n                    enumerable: true,\n                    configurable: true\n                });\n                Set.prototype.has = function (value) { return this._map.has(value); };\n                Set.prototype.add = function (value) { return this._map.set(value, value), this; };\n                Set.prototype.delete = function (value) { return this._map.delete(value); };\n                Set.prototype.clear = function () { this._map.clear(); };\n                Set.prototype.keys = function () { return this._map.keys(); };\n                Set.prototype.values = function () { return this._map.values(); };\n                Set.prototype.entries = function () { return this._map.entries(); };\n                Set.prototype[\"@@iterator\"] = function () { return this.keys(); };\n                Set.prototype[iteratorSymbol] = function () { return this.keys(); };\n                return Set;\n            }());\n        }\n        // naive WeakMap shim\n        function CreateWeakMapPolyfill() {\n            var UUID_SIZE = 16;\n            var keys = HashMap.create();\n            var rootKey = CreateUniqueKey();\n            return /** @class */ (function () {\n                function WeakMap() {\n                    this._key = CreateUniqueKey();\n                }\n                WeakMap.prototype.has = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? HashMap.has(table, this._key) : false;\n                };\n                WeakMap.prototype.get = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? HashMap.get(table, this._key) : undefined;\n                };\n                WeakMap.prototype.set = function (target, value) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ true);\n                    table[this._key] = value;\n                    return this;\n                };\n                WeakMap.prototype.delete = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? delete table[this._key] : false;\n                };\n                WeakMap.prototype.clear = function () {\n                    // NOTE: not a real clear, just makes the previous data unreachable\n                    this._key = CreateUniqueKey();\n                };\n                return WeakMap;\n            }());\n            function CreateUniqueKey() {\n                var key;\n                do\n                    key = \"@@WeakMap@@\" + CreateUUID();\n                while (HashMap.has(keys, key));\n                keys[key] = true;\n                return key;\n            }\n            function GetOrCreateWeakMapTable(target, create) {\n                if (!hasOwn.call(target, rootKey)) {\n                    if (!create)\n                        return undefined;\n                    Object.defineProperty(target, rootKey, { value: HashMap.create() });\n                }\n                return target[rootKey];\n            }\n            function FillRandomBytes(buffer, size) {\n                for (var i = 0; i < size; ++i)\n                    buffer[i] = Math.random() * 0xff | 0;\n                return buffer;\n            }\n            function GenRandomBytes(size) {\n                if (typeof Uint8Array === \"function\") {\n                    if (typeof crypto !== \"undefined\")\n                        return crypto.getRandomValues(new Uint8Array(size));\n                    if (typeof msCrypto !== \"undefined\")\n                        return msCrypto.getRandomValues(new Uint8Array(size));\n                    return FillRandomBytes(new Uint8Array(size), size);\n                }\n                return FillRandomBytes(new Array(size), size);\n            }\n            function CreateUUID() {\n                var data = GenRandomBytes(UUID_SIZE);\n                // mark as random - RFC 4122 § 4.4\n                data[6] = data[6] & 0x4f | 0x40;\n                data[8] = data[8] & 0xbf | 0x80;\n                var result = \"\";\n                for (var offset = 0; offset < UUID_SIZE; ++offset) {\n                    var byte = data[offset];\n                    if (offset === 4 || offset === 6 || offset === 8)\n                        result += \"-\";\n                    if (byte < 16)\n                        result += \"0\";\n                    result += byte.toString(16).toLowerCase();\n                }\n                return result;\n            }\n        }\n        // uses a heuristic used by v8 and chakra to force an object into dictionary mode.\n        function MakeDictionary(obj) {\n            obj.__ = undefined;\n            delete obj.__;\n            return obj;\n        }\n    });\n})(Reflect || (Reflect = {}));\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","\nexport interface IForEachAble<T> extends Iterable<T> {\n  forEach(callback: (v: T, i: number) => void): void;\n}\n\n/**\n * @internal\n */\nexport function isForEachAble<T>(v: IForEachAble<T> | any): v is IForEachAble<T> {\n  return typeof v.forEach === 'function';\n}\n\n/**\n * generalized version of Array function similar to Scala ISeq\n */\nexport interface ISequence<T> extends IForEachAble<T> {\n  readonly length: number;\n  filter(callback: (v: T, i: number) => boolean): ISequence<T>;\n  map<U>(callback: (v: T, i: number) => U): ISequence<U>;\n\n  some(callback: (v: T, i: number) => boolean): boolean;\n  every(callback: (v: T, i: number) => boolean): boolean;\n  reduce<U>(callback: (acc: U, v: T, i: number) => U, initial: U): U;\n}\n\n/**\n * @internal\n */\nexport function isSeqEmpty(seq: ISequence<any>) {\n  return seq.every(() => false); // more efficent than counting length\n}\n\n/**\n * helper function for faster access to avoid function calls\n * @internal\n */\nexport function isIndicesAble<T>(it: Iterable<T>): it is ArrayLike<T> & Iterable<T> {\n  return Array.isArray(it) || it instanceof Uint8Array || it instanceof Uint16Array || it instanceof Uint32Array || it instanceof Float32Array || it instanceof Int8Array || it instanceof Int16Array || it instanceof Int32Array || it instanceof Float64Array;\n}\n\ndeclare type ISequenceBase<T> = ISequence<T> | (ArrayLike<T> & Iterable<T>);\n\n/**\n * sequence implementation that does the operation lazily on the fly\n */\nclass LazyFilter<T> implements ISequence<T> {\n  private _length = -1;\n\n  constructor(private readonly it: ISequenceBase<T>, private readonly filters: ((v: T, i: number) => boolean)[]) {\n\n  }\n\n  get length() {\n    // cached\n    if (this._length >= 0) {\n      return this._length;\n    }\n    let l = 0;\n    this.forEach(() => l++);\n    this._length = l;\n    return l;\n  }\n\n  filter(callback: (v: T, i: number) => boolean): ISequence<T> {\n    // propagate filter\n    return new LazyFilter(this.it, this.filters.concat(callback));\n  }\n\n  map<U>(callback: (v: T, i: number) => U): ISequence<U> {\n    // create lazy map out of myself\n    return new LazyMap1(this, callback);\n  }\n\n  forEach(callback: (v: T, i: number) => void) {\n    if (isIndicesAble(this.it)) {\n      // fast array version\n      outer: for (let i = 0; i < this.it.length; ++i) {\n        const v = this.it[i];\n        for (const f of this.filters) {\n          if (!f(v, i)) {\n            continue outer;\n          }\n        }\n        callback(v, i);\n      }\n      return;\n    }\n\n    // iterator version\n    let valid = 0;\n    const it = this.it[Symbol.iterator]();\n    let v = it.next();\n    let i = 0;\n    outer: while (!v.done) {\n      for (const f of this.filters) {\n        if (f(v.value, i)) {\n          continue;\n        }\n        v = it.next();\n        i++;\n        continue outer;\n      }\n      callback(v.value, valid++);\n      v = it.next();\n      i++;\n    }\n  }\n\n  [Symbol.iterator]() {\n    const it = this.it[Symbol.iterator]();\n    const next = () => {\n      let v = it.next();\n      let i = -1;\n      outer: while (!v.done) {\n        i++;\n        for (const f of this.filters) {\n          if (f(v.value, i)) {\n            continue;\n          }\n          // invalid go to next\n          v = it.next();\n          continue outer;\n        }\n        return v;\n      }\n      return v;\n    };\n    return {next};\n  }\n\n  some(callback: (v: T, i: number) => boolean) {\n    if (isIndicesAble(this.it)) {\n      // fast array version\n      outer: for (let i = 0; i < this.it.length; ++i) {\n        const v = this.it[i];\n        for (const f of this.filters) {\n          if (!f(v, i)) {\n            continue outer;\n          }\n        }\n        if (callback(v, i)) {\n          return true;\n        }\n      }\n      return false;\n    }\n\n    let valid = 0;\n    const it = this.it[Symbol.iterator]();\n    let v = it.next();\n    let i = 0;\n    outer: while (!v.done) {\n      for (const f of this.filters) {\n        if (f(v.value, i)) {\n          continue;\n        }\n        v = it.next();\n        i++;\n        continue outer;\n      }\n      if (callback(v.value, valid++)) {\n        return true;\n      }\n      v = it.next();\n      i++;\n    }\n    return false;\n  }\n\n  every(callback: (v: T, i: number) => boolean) {\n    if (isIndicesAble(this.it)) {\n      // fast array version\n      outer: for (let i = 0; i < this.it.length; ++i) {\n        const v = this.it[i];\n        for (const f of this.filters) {\n          if (!f(v, i)) {\n            continue outer;\n          }\n        }\n        if (!callback(v, i)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    let valid = 0;\n    const it = this.it[Symbol.iterator]();\n    let v = it.next();\n    let i = 0;\n    outer: while (!v.done) {\n      for (const f of this.filters) {\n        if (f(v.value, i)) {\n          continue;\n        }\n        v = it.next();\n        i++;\n        continue outer;\n      }\n      if (!callback(v.value, valid++)) {\n        return false;\n      }\n      v = it.next();\n      i++;\n    }\n    return true;\n  }\n\n  reduce<U>(callback: (acc: U, v: T, i: number) => U, initial: U) {\n    if (isIndicesAble(this.it)) {\n      // fast array version\n      let acc = initial;\n      let j = 0;\n      outer: for (let i = 0; i < this.it.length; ++i) {\n        const v = this.it[i];\n        for (const f of this.filters) {\n          if (!f(v, i)) {\n            continue outer;\n          }\n        }\n        acc = callback(acc, v, j++);\n      }\n      return acc;\n    }\n\n    let valid = 0;\n    const it = this.it[Symbol.iterator]();\n    let v = it.next();\n    let i = 0;\n    let r = initial;\n    outer: while (!v.done) {\n      for (const f of this.filters) {\n        if (f(v.value, i)) {\n          continue;\n        }\n        v = it.next();\n        i++;\n        continue outer;\n      }\n      r = callback(r, v.value, valid++);\n      v = it.next();\n      i++;\n    }\n    return r;\n  }\n}\n\n/**\n * lazy mapping operation\n */\nabstract class ALazyMap<T, T2> implements ISequence<T2> {\n  constructor(protected readonly it: ISequenceBase<T>) {\n\n  }\n\n  get length() {\n    return this.it.length;\n  }\n\n  filter(callback: (v: T2, i: number) => boolean): ISequence<T2> {\n    return new LazyFilter(this, [callback]);\n  }\n\n  abstract map<U>(callback: (v: T2, i: number) => U): ISequence<U>;\n  protected abstract mapV(v: T, i: number): T2;\n\n\n  forEach(callback: (v: T2, i: number) => void) {\n    if (isIndicesAble(this.it)) {\n      for (let i = 0; i < this.it.length; ++i) {\n        callback(this.mapV(this.it[i], i), i);\n      }\n      return;\n    }\n    const it = this.it[Symbol.iterator]();\n    for (let v = it.next(), i = 0; !v.done; v = it.next(), i++) {\n      callback(this.mapV(v.value, i), i);\n    }\n  }\n\n  [Symbol.iterator]() {\n    const it = this.it[Symbol.iterator]();\n    let i = 0;\n    const next = () => {\n      const v = it.next();\n      if (v.done) {\n        return {\n          value: <T2><any>undefined,\n          done: true\n        };\n      }\n      const value = this.mapV(v.value, i);\n      i++;\n      return {\n        value,\n        done: false\n      };\n    };\n    return {next};\n  }\n\n  some(callback: (v: T2, i: number) => boolean) {\n    if (isIndicesAble(this.it)) {\n      for (let i = 0; i < this.it.length; ++i) {\n        if (callback(this.mapV(this.it[i], i), i)) {\n          return true;\n        }\n      }\n      return false;\n    }\n\n    const it = this.it[Symbol.iterator]();\n    for (let v = it.next(), i = 0; !v.done; v = it.next(), i++) {\n      if (callback(this.mapV(v.value, i), i)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  every(callback: (v: T2, i: number) => boolean) {\n    if (isIndicesAble(this.it)) {\n      for (let i = 0; i < this.it.length; ++i) {\n        if (!callback(this.mapV(this.it[i], i), i)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    const it = this.it[Symbol.iterator]();\n    for (let v = it.next(), i = 0; !v.done; v = it.next(), i++) {\n      if (!callback(this.mapV(v.value, i), i)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  reduce<U>(callback: (acc: U, v: T2, i: number) => U, initial: U) {\n    if (isIndicesAble(this.it)) {\n      let acc = initial;\n      for (let i = 0; i < this.it.length; ++i) {\n        acc = callback(acc, this.mapV(this.it[i], i), i);\n      }\n      return acc;\n    }\n\n    const it = this.it[Symbol.iterator]();\n    let acc = initial;\n    for (let v = it.next(), i = 0; !v.done; v = it.next(), i++) {\n      acc = callback(acc, this.mapV(v.value, i), i);\n    }\n    return acc;\n  }\n}\n\nclass LazyMap1<T1, T2> extends ALazyMap<T1, T2> implements ISequence<T2> {\n  constructor(it: ISequenceBase<T1>, protected readonly map12: (v: T1, i: number) => T2) {\n    super(it);\n  }\n\n  protected mapV(v: T1, i: number) {\n    return this.map12(v, i);\n  }\n\n  map<U>(callback: (v: T2, i: number) => U): ISequence<U> {\n    return new LazyMap2(this.it, this.map12, callback);\n  }\n}\n\nclass LazyMap2<T1, T2, T3> extends ALazyMap<T1, T3> implements ISequence<T3> {\n  constructor(it: ISequenceBase<T1>, private readonly map12: (v: T1, i: number) => T2, private readonly map23: (v: T2, i: number) => T3) {\n    super(it);\n  }\n\n  map<U>(callback: (v: T3, i: number) => U): ISequence<U> {\n    return new LazyMap3(this.it, this.map12, this.map23, callback);\n  }\n\n  protected mapV(v: T1, i: number) {\n    return this.map23(this.map12(v, i), i);\n  }\n}\n\n\nclass LazyMap3<T1, T2, T3, T4> extends ALazyMap<T1, T4> implements ISequence<T4> {\n  constructor(it: ISequenceBase<T1>, private readonly map12: (v: T1, i: number) => T2, private readonly map23: (v: T2, i: number) => T3, private readonly map34: (v: T3, i: number) => T4) {\n    super(it);\n  }\n\n  map<U>(callback: (v: T4, i: number) => U): ISequence<U> {\n    const map1U = (v: T1, i: number) => callback(this.map34(this.map23(this.map12(v, i), i), i), i);\n    return new LazyMap1(this.it, map1U);\n  }\n\n  protected mapV(v: T1, i: number) {\n    return this.map34(this.map23(this.map12(v, i), i), i);\n  }\n}\n\nclass LazySeq<T> implements ISequence<T> {\n  private _arr: ISequenceBase<T> | null = null;\n\n  constructor(private readonly iterable: Iterable<T>) {\n\n  }\n\n  get arr() {\n    if (this._arr) {\n      return this._arr;\n    }\n    if (isIndicesAble(this.iterable)) {\n      this._arr = this.iterable;\n    } else {\n      this._arr = Array.from(this.iterable);\n    }\n    return this._arr!;\n  }\n\n  [Symbol.iterator]() {\n    return this.iterable[Symbol.iterator]();\n  }\n\n  filter(callback: (v: T, i: number) => boolean) {\n    return new LazyFilter(this.arr, [callback]);\n  }\n\n  map<U>(callback: (v: T, i: number) => U) {\n    return new LazyMap1(this.arr, callback);\n  }\n\n  forEach(callback: (v: T, i: number) => void) {\n    if (isIndicesAble(this.iterable)) {\n      for (let i = 0; i < this.iterable.length; ++i) {\n        callback(this.iterable[i], i);\n      }\n      return;\n    }\n    const it = this[Symbol.iterator]();\n    for (let v = it.next(), i = 0; !v.done; v = it.next(), i++) {\n      callback(v.value, i);\n    }\n  }\n\n  some(callback: (v: T, i: number) => boolean) {\n    if (isIndicesAble(this.iterable)) {\n      for (let i = 0; i < this.iterable.length; ++i) {\n        if (callback(this.iterable[i], i)) {\n          return true;\n        }\n      }\n      return false;\n    }\n\n    const it = this[Symbol.iterator]();\n    for (let v = it.next(), i = 0; !v.done; v = it.next(), i++) {\n      if (callback(v.value, i)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  every(callback: (v: T, i: number) => boolean) {\n    if (isIndicesAble(this.iterable)) {\n      for (let i = 0; i < this.iterable.length; ++i) {\n        if (!callback(this.iterable[i], i)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    const it = this[Symbol.iterator]();\n    for (let v = it.next(), i = 0; !v.done; v = it.next(), i++) {\n      if (!callback(v.value, i)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  reduce<U>(callback: (acc: U, v: T, i: number) => U, initial: U) {\n    if (isIndicesAble(this.iterable)) {\n      let acc = initial;\n      for (let i = 0; i < this.iterable.length; ++i) {\n        acc = callback(acc, this.iterable[i], i);\n      }\n      return acc;\n    }\n\n    const it = this[Symbol.iterator]();\n    let acc = initial;\n    for (let v = it.next(), i = 0; !v.done; v = it.next(), i++) {\n      acc = callback(acc, v.value, i);\n    }\n    return acc;\n  }\n\n  get length() {\n    const it = this.iterable;\n    if (isIndicesAble(it)) {\n      return it.length;\n    }\n    if (it instanceof Set || it instanceof Map) {\n      return it.size;\n    }\n    return this.arr.length;\n  }\n}\n\n/**\n * @internal\n */\nexport function lazySeq<T>(iterable: Iterable<T>): ISequence<T> {\n  return new LazySeq(iterable);\n}\n\n\nclass ConcatSequence<T> implements ISequence<T> {\n  constructor(private readonly seqs: ISequence<ISequence<T>>) {\n    //\n  }\n\n  [Symbol.iterator]() {\n    const seqs = Array.from(this.seqs);\n    let it = seqs.shift()![Symbol.iterator]();\n    const next = (): {value: T, done: boolean} => {\n      const v = it.next();\n      if (!v.done) {\n        return v;\n      }\n      if (seqs.length === 0) {\n        // last last\n        return v;\n      }\n      // next iterator and compute next element\n      it = seqs.shift()![Symbol.iterator]();\n      return next();\n    };\n    return {next};\n  }\n\n  filter(callback: (v: T, i: number) => boolean): ISequence<T> {\n    return new LazyFilter(this, [callback]);\n  }\n\n  map<U>(callback: (v: T, i: number) => U): ISequence<U> {\n    return new LazyMap1(this, callback);\n  }\n\n  forEach(callback: (v: T, i: number) => void) {\n    this.seqs.forEach((s) => s.forEach(callback));\n  }\n\n  some(callback: (v: T, i: number) => boolean) {\n    return this.seqs.some((s) => s.some(callback));\n  }\n\n  every(callback: (v: T, i: number) => boolean) {\n    return this.seqs.every((s) => s.every(callback));\n  }\n\n  reduce<U>(callback: (acc: U, v: T, i: number) => U, initial: U) {\n    return this.seqs.reduce((acc, s) => s.reduce(callback, acc), initial);\n  }\n\n  get length() {\n    return this.seqs.reduce((a, b) => a + b.length, 0);\n  }\n}\n\n/**\n * @internal\n */\nexport function concatSeq<T>(seqs: ISequence<ISequence<T>>): ISequence<T>;\nexport function concatSeq<T>(seq1: ISequence<T>, seq2: ISequence<T>, ...seqs: ISequence<T>[]): ISequence<T>;\nexport function concatSeq<T>(seq1: ISequence<T>[] | ISequence<T>, seq2?: ISequence<T>, ...seqs: ISequence<T>[]): ISequence<T> {\n  if (seq2) {\n    return new ConcatSequence([<ISequence<T>>seq1, seq2].concat(seqs));\n  }\n  return new ConcatSequence(<ISequence<T>[]>seq1);\n}\n","import {IWorkerMessage, INumberStatsMessageRequest, IAdvancedBoxPlotData, ICategoricalStatistics, IDateStatistics, IStatistics, ICategoricalStatsMessageRequest, IDateStatsMessageRequest, IBoxPlotStatsMessageRequest} from './';\nimport {UIntTypedArray, IndicesArray} from '../model';\n\n/**\n * @internal\n */\nexport interface IPoorManWorkerScopeEventMap {\n  message: MessageEvent;\n  error: ErrorEvent;\n}\n\ndeclare type IPoorManTransferAble = ArrayBuffer | MessagePort | ImageBitmap;\n\n/**\n * @internal\n */\nexport interface IPoorManWorkerScope {\n  onmessage: ((this: IPoorManWorkerScope, ev: MessageEvent) => any) | null;\n  onerror: ((this: IPoorManWorkerScope, ev: ErrorEvent) => any) | null;\n  close(): void;\n  postMessage(message: any, transfer?: IPoorManTransferAble[]): void;\n  addEventListener<K extends keyof IPoorManWorkerScopeEventMap>(type: K, listener: (this: IPoorManWorkerScope, ev: IPoorManWorkerScopeEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n  removeEventListener<K extends keyof IPoorManWorkerScopeEventMap>(type: K, listener: (this: IPoorManWorkerScope, ev: IPoorManWorkerScopeEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n}\n\n// function workerMain(self: IPoorManWorkerScope) {\n//   self.addEventListener('message', (evt) => {\n//     self.postMessage(`Worker: ${evt.data} - Polo`);\n//   });\n// }\n\n/**\n * @internal\n */\nexport function toFunctionBody(f: Function) {\n  const source = f.toString();\n  return source.slice(source.indexOf('{') + 1, source.lastIndexOf('}'));\n}\n\n/**\n * create a blob out of the given function or string\n * @internal\n */\nexport function createWorkerCodeBlob(fs: (string | Function)[]) {\n  const sources = fs.map((d) => d.toString()).join('\\n\\n');\n\n  const blob = new Blob([sources], {type: 'application/javascript'});\n  return URL.createObjectURL(blob);\n}\n\nconst MIN_WORKER_THREADS = 1;\nconst MAX_WORKER_THREADS = Math.max(navigator.hardwareConcurrency - 1, 1); // keep one for the ui\n\nconst THREAD_CLEANUP_TIME = 10000; // 10s\n\ninterface ITaskWorker {\n  /**\n   * worker index\n   */\n  index: number;\n  /**\n   * worker itself\n   */\n  worker: Worker;\n  /**\n   * set of active task numbers\n   */\n  tasks: Set<number>;\n  /**\n   * list of references that are stored on this worker\n   */\n  refs: Set<string>;\n}\n\n/**\n * task scheduler based on web worker\n * @internal\n */\nexport class WorkerTaskScheduler {\n  private readonly workers: ITaskWorker[] = [];\n  private cleanUpWorkerTimer: number = -1;\n  /**\n   * worker task id\n   */\n  private workerTaskCounter = 0;\n\n  constructor(private readonly blob: string) {\n    for (let i = 0; i < MIN_WORKER_THREADS; ++i) {\n      const w = new Worker(blob);\n      this.workers.push({worker: w, tasks: new Set(), refs: new Set(), index: i});\n    }\n  }\n\n  terminate() {\n    this.workers.splice(0, this.workers.length).forEach((w) => w.worker.terminate());\n  }\n\n  private readonly cleanUpWorker = () => {\n    // delete workers when they are not needed anymore and empty\n    while(this.workers.length > MIN_WORKER_THREADS) {\n      const toFree = this.workers.findIndex((d) => d.tasks.size === 0);\n      if (toFree < 0) {\n        break;\n      }\n      const w = this.workers.splice(toFree, 1)[0]!;\n      w.worker.terminate();\n    }\n    // maybe reschedule\n    this.finshedTask();\n  }\n\n  private checkOutWorker() {\n    if (this.cleanUpWorkerTimer >= 0) {\n      clearTimeout(this.cleanUpWorkerTimer);\n      this.cleanUpWorkerTimer = -1;\n    }\n\n    const emptyWorker = this.workers.find((d) => d.tasks.size === 0);\n\n    if (emptyWorker) {\n      return emptyWorker;\n    }\n\n    if (this.workers.length >= MAX_WORKER_THREADS) {\n      // find the one with the fewest tasks\n      return this.workers.reduce((a, b) => a == null || a.tasks.size > b.tasks.size ? b : a, <ITaskWorker | null>null)!;\n    }\n\n    // create new one\n    const r: ITaskWorker = {\n      worker: new Worker(this.blob),\n      tasks: new Set<number>(),\n      refs: new Set(),\n      index: this.workers.length,\n    };\n    this.workers.push(r);\n    return r;\n  }\n\n  private finshedTask() {\n    if (this.cleanUpWorkerTimer === -1 && this.workers.length > MIN_WORKER_THREADS) {\n      this.cleanUpWorkerTimer = self.setTimeout(this.cleanUpWorker, THREAD_CLEANUP_TIME);\n    }\n  }\n\n  pushStats(type: 'numberStats', args: Partial<INumberStatsMessageRequest>, refData: string, data: Float32Array, refIndices?: string, indices?: IndicesArray): Promise<IStatistics>;\n  pushStats(type: 'boxplotStats', args: Partial<IBoxPlotStatsMessageRequest>, refData: string, data: Float32Array, refIndices?: string, indices?: IndicesArray): Promise<IAdvancedBoxPlotData>;\n  pushStats(type: 'categoricalStats', args: Partial<ICategoricalStatsMessageRequest>, refData: string, data: UIntTypedArray, refIndices?: string, indices?: IndicesArray): Promise<ICategoricalStatistics>;\n  pushStats(type: 'dateStats', args: Partial<IDateStatsMessageRequest>, refData: string, data: Float64Array, refIndices?: string, indices?: IndicesArray): Promise<IDateStatistics>;\n  pushStats(type: 'numberStats' | 'boxplotStats' | 'categoricalStats' | 'dateStats', args: any, refData: string, data: Float32Array | UIntTypedArray | Float64Array, refIndices?: string, indices?: IndicesArray) {\n    return new Promise((resolve) => {\n      const uid = this.workerTaskCounter++;\n      const {worker, tasks, refs} = this.checkOutWorker();\n\n      const receiver = (msg: MessageEvent) => {\n        const r = <IWorkerMessage>msg.data;\n        if (r.uid !== uid || r.type !== type) {\n          return;\n        }\n        // console.log('worker', index, uid, 'finish', r);\n        worker.removeEventListener('message', receiver);\n        tasks.delete(uid);\n        this.finshedTask();\n        resolve((<any>r).stats);\n      };\n\n      worker.addEventListener('message', receiver);\n\n      tasks.add(uid);\n\n      const msg: any = Object.assign({\n        type,\n        uid,\n        refData,\n        refIndices: refIndices || null\n      }, args);\n\n      if (!refData || !refs.has(refData)) {\n        // need to transfer to worker\n        msg.data = data;\n        if (refData) { // save that this worker has this ref\n          refs.add(refData);\n        }\n        // console.log(index, 'set ref (i)', refData);\n      }\n      if (indices && (!refIndices || !refs.has(refIndices))) {\n        // need to transfer\n        msg.indices = indices!;\n        if (refIndices) {\n          refs.add(refIndices);\n        }\n        // console.log(index, 'set ref (i)', refIndices);\n      }\n      // console.log('worker', index, uid, msg);\n\n      worker.postMessage(msg);\n    });\n  }\n\n  push<M, R>(type: string, args: M, transferAbles: ArrayBuffer[]): Promise<R>;\n  push<M, R, T>(type: string, args: M, transferAbles: ArrayBuffer[], toResult: (r: R) => T): Promise<T>;\n  push<M, R, T>(type: string, args: M, transferAbles: ArrayBuffer[], toResult?: (r: R) => T): Promise<T> {\n    return new Promise<T>((resolve) => {\n      const uid = this.workerTaskCounter++;\n      const {worker, tasks} = this.checkOutWorker();\n\n      const receiver = (msg: MessageEvent) => {\n        const r = <IWorkerMessage>msg.data;\n        if (r.uid !== uid || r.type !== type) {\n          return;\n        }\n        // console.log('worker', index, uid, 'finish', r);\n        worker.removeEventListener('message', receiver);\n        tasks.delete(uid);\n        this.finshedTask();\n        resolve(toResult ? toResult(<any>r) : <any>r);\n      };\n\n      worker.addEventListener('message', receiver);\n      tasks.add(uid);\n      const msg = Object.assign({\n        type,\n        uid\n      }, args);\n      // console.log('worker', index, uid, msg);\n\n      worker.postMessage(msg, transferAbles);\n    });\n  }\n\n  setRef(ref: string, data: Float32Array | UIntTypedArray | Int32Array | Float64Array | IndicesArray) {\n    for (const w of this.workers) {\n      w.refs.add(ref);\n    }\n    this.broadCast('setRef', {\n      ref,\n      data\n    });\n  }\n\n  deleteRef(ref: string, startsWith = false) {\n    const uid = this.workerTaskCounter++;\n    const msg = {\n      type: 'deleteRef',\n      uid,\n      ref,\n      startsWith\n    };\n    for (const w of this.workers) {\n      // console.log(w.index, 'delete ref', ref, startsWith);\n      w.worker.postMessage(msg);\n      if (!startsWith) {\n        w.refs.delete(ref);\n        continue;\n      }\n      for (const r of Array.from(w.refs)) {\n        if (r.startsWith(ref)) {\n          w.refs.delete(r);\n        }\n      }\n    }\n  }\n\n  deleteRefs() {\n    const uid = this.workerTaskCounter++;\n    const msg = {\n      type: 'deleteRef',\n      uid,\n      ref: '',\n      startsWith: true\n    };\n    for (const w of this.workers) {\n      // console.log(w.index, 'delete refs');\n      w.worker.postMessage(msg);\n      w.refs.clear();\n    }\n  }\n\n  broadCast<T>(type: string, args: T) {\n    const uid = this.workerTaskCounter++;\n    // don't store in tasks queue since there is no response\n    const msg = Object.assign({\n      type,\n      uid\n    }, args);\n    // console.log('broadcast', msg);\n    for (const w of this.workers) {\n      w.worker.postMessage(msg);\n    }\n  }\n\n}\n","import {ICategory, IndicesArray, UIntTypedArray} from '../model';\nimport {IForEachAble, ISequence, isIndicesAble} from './interable';\nimport {createWorkerCodeBlob, IPoorManWorkerScope, toFunctionBody} from './worker';\nimport {IAdvancedBoxPlotData, IStatistics, INumberBin, IDateBin, IDateStatistics, ICategoricalStatistics, ICategoricalBin, IDateHistGranularity} from './mathInterfaces';\n\n\n/**\n * computes the optimal number of bins for a given array length\n * @internal\n * @param {number} length\n * @returns {number}\n */\nexport function getNumberOfBins(length: number) {\n  if (length === 0) {\n    return 1;\n  }\n  // as by default used in d3 the Sturges' formula\n  return Math.ceil(Math.log(length) / Math.LN2) + 1;\n}\n\n/**\n * @internal\n */\nexport function min(values: number[]): number;\nexport function min<T>(values: T[], acc: (v: T) => number): number;\nexport function min<T>(values: T[], acc?: (v: T) => number) {\n  let min = Number.POSITIVE_INFINITY;\n  for (const d of values) {\n    const v = acc ? acc(d) : <number><any>d;\n    if (v < min) {\n      min = v;\n    }\n  }\n  return min;\n}\n\n/**\n * @internal\n */\nexport function max(values: number[]): number;\nexport function max<T>(values: T[], acc: (v: T) => number): number;\nexport function max<T>(values: T[], acc?: (v: T) => number) {\n  let max = Number.NEGATIVE_INFINITY;\n  for (const d of values) {\n    const v = acc ? acc(d) : <number><any>d;\n    if (v > max) {\n      max = v;\n    }\n  }\n  return max;\n}\n\n/**\n * @internal\n */\nexport function extent(values: number[]): [number, number];\nexport function extent<T>(values: T[], acc: (v: T) => number): [number, number];\nexport function extent<T>(values: T[], acc?: (v: T) => number) {\n  let max = Number.NEGATIVE_INFINITY;\n  let min = Number.POSITIVE_INFINITY;\n  for (const d of values) {\n    const v = acc ? acc(d) : <number><any>d;\n    if (v < min) {\n      min = v;\n    }\n    if (v > max) {\n      max = v;\n    }\n  }\n  return [min, max];\n}\n\n/**\n * @internal\n */\nexport function range(length: number) {\n  const r: number[] = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    r[i] = i;\n  }\n  return r;\n}\n\n/**\n * an empty range\n * @internal\n */\nexport function empty(length: number) {\n  const r: null[] = new Array(length);\n  r.fill(null);\n  return r;\n}\n\n/**\n * computes the X quantile assumes the values are sorted\n * @internal\n */\nexport function quantile(values: ArrayLike<number>, quantile: number, length = values.length) {\n  if (length === 0) {\n    return NaN;\n  }\n  const target = (length - 1) * quantile;\n  const index = Math.floor(target);\n  if (index === target) {\n    return values[index];\n  }\n  const v = values[index];\n  const vAfter = values[index + 1];\n  return v + (vAfter - v) * (target - index); // shift by change\n}\n\n/**\n * @internal\n */\nexport function median(values: number[]): number;\nexport function median<T>(values: T[], acc: (v: T) => number): number;\nexport function median<T>(values: T[], acc?: (v: T) => number) {\n  const arr = acc ? values.map(acc) : (<number[]><any>values).slice();\n  arr.sort((a, b) => (a < b ? -1 : (a > b ? 1 : 0)));\n  return quantile(arr, 0.5);\n}\n\nfunction pushAll<T>(push: (v: T) => void) {\n  return (vs: IForEachAble<T>) => {\n    if (!isIndicesAble(vs)) {\n      vs.forEach(push);\n      return;\n    }\n    // tslint:disable-next-line:prefer-for-of\n    for (let j = 0; j < vs.length; ++j) {\n      push(vs[j]);\n    }\n  };\n}\n\n/**\n * common interface for a bulider pattern\n * @internal\n */\nexport interface IBuilder<T, R> {\n  /**\n   * push an entry\n   */\n  push(v: T): void;\n  /**\n   * push multiple values at once\n   */\n  pushAll(vs: IForEachAble<T>): void;\n\n  /**\n   * build the result\n   */\n  build(): R;\n}\n\n/**\n * @internal\n */\nexport function boxplotBuilder(fixedLength?: number): IBuilder<number, IAdvancedBoxPlotData> & {buildArr: (s: Float32Array) => IAdvancedBoxPlotData} {\n  let min = Number.POSITIVE_INFINITY;\n  let max = Number.NEGATIVE_INFINITY;\n  let sum = 0;\n  let length = 0;\n  let missing = 0;\n\n  // if fixed size use the typed array else a regular array\n  const values: number[] = [];\n  const vs: Float32Array | null = fixedLength != null ? new Float32Array(fixedLength) : null;\n\n  const push = (v: number) => {\n    length += 1;\n    if (v == null || isNaN(v)) {\n      missing += 1;\n      return;\n    }\n    if (v < min) {\n      min = v;\n    }\n    if (v > max) {\n      max = v;\n    }\n    sum += v;\n  };\n\n  const pushAndSave = (v: number) => {\n    push(v);\n    if (vs) {\n      vs[length] = v;\n    } else {\n      values.push(v);\n    }\n  };\n\n\n  const invalid = {\n    min: NaN,\n    max: NaN,\n    mean: NaN,\n    missing,\n    count: length,\n    whiskerHigh: NaN,\n    whiskerLow: NaN,\n    outlier: [],\n    median: NaN,\n    q1: NaN,\n    q3: NaN\n  };\n\n  const buildImpl = (s: ArrayLike<number>) => {\n    const valid = length - missing;\n    const median = quantile(s, 0.5, valid)!;\n    const q1 = quantile(s, 0.25, valid)!;\n    const q3 = quantile(s, 0.75, valid)!;\n\n    const iqr = q3 - q1;\n    const left = q1 - 1.5 * iqr;\n    const right = q3 + 1.5 * iqr;\n\n    let outlier: number[] = [];\n    // look for the closests value which is bigger than the computed left\n    let whiskerLow = left;\n    // tslint:disable-next-line:prefer-for-of\n    for (let i = 0; i < valid; ++i) {\n      const v = s[i];\n      if (left < v) {\n        whiskerLow = v;\n        break;\n      }\n      // outlier\n      outlier.push(v);\n    }\n    // look for the closests value which is smaller than the computed right\n    let whiskerHigh = right;\n    const reversedOutliers: number[] = [];\n    for (let i = valid - 1; i >= 0; --i) {\n      const v = s[i];\n      if (v < right) {\n        whiskerHigh = v;\n        break;\n      }\n      // outlier\n      reversedOutliers.push(v);\n    }\n\n    outlier = outlier.concat(reversedOutliers.reverse());\n\n    return {\n      min,\n      max,\n      count: length,\n      missing,\n      mean: sum / valid,\n      whiskerHigh,\n      whiskerLow,\n      outlier,\n      median,\n      q1,\n      q3\n    };\n  };\n\n  const build = () => {\n    const valid = length - missing;\n\n    if (valid === 0) {\n      return invalid;\n    }\n\n    const s = vs ? vs.sort() : Float32Array.from(values).sort();\n    return buildImpl(s);\n  };\n\n  const buildArr = (vs: Float32Array) => {\n    const s = vs.slice().sort();\n    // tslint:disable-next-line:prefer-for-of\n    for (let j = 0; j < vs.length; ++j) {\n      push(vs[j]);\n    }\n    // missing are the last\n    return buildImpl(s);\n  };\n\n  return {\n    push: pushAndSave,\n    build,\n    buildArr,\n    pushAll: pushAll(pushAndSave)\n  };\n}\n\n/**\n * @internal\n */\nexport function normalizedStatsBuilder(numberOfBins: number): IBuilder<number, IStatistics> {\n\n  const hist: INumberBin[] = [];\n\n  let x0 = 0;\n  const binWidth = 1. / numberOfBins;\n  for (let i = 0; i < numberOfBins; ++i, x0 += binWidth) {\n    hist.push({\n      x0,\n      x1: x0 + binWidth,\n      count: 0\n    });\n  }\n\n  const bin1 = 0 + binWidth;\n  const binN = 1 - binWidth;\n\n  const toBin = (v: number) => {\n    if (v < bin1) {\n      return 0;\n    }\n    if (v >= binN) {\n      return numberOfBins - 1;\n    }\n    if (numberOfBins === 3) {\n      return 1;\n    }\n    let low = 1;\n    let high = numberOfBins - 1;\n    // binary search\n    while (low < high) {\n      const center = Math.floor((high + low) / 2);\n      if (v < hist[center].x1) {\n        high = center;\n      } else {\n        low = center + 1;\n      }\n    }\n    return low;\n  };\n\n  // filter out NaN\n  let min = Number.POSITIVE_INFINITY;\n  let max = Number.NEGATIVE_INFINITY;\n  let sum = 0;\n  let length = 0;\n  let missing = 0;\n\n  const push = (v: number) => {\n    length += 1;\n    if (v == null || isNaN(v)) {\n      missing += 1;\n      return;\n    }\n    if (v < min) {\n      min = v;\n    }\n    if (v > max) {\n      max = v;\n    }\n    sum += v;\n\n    hist[toBin(v)].count++;\n  };\n\n  const build = () => {\n    const valid = length - missing;\n    if (valid === 0) {\n      return {\n        count: missing,\n        missing,\n        min: NaN,\n        max: NaN,\n        mean: NaN,\n        hist,\n        maxBin: 0\n      };\n    }\n    return {\n      count: length,\n      min,\n      max,\n      mean: sum / valid,\n      missing,\n      hist,\n      maxBin: hist.reduce((a, b) => Math.max(a, b.count), 0)\n    };\n  };\n\n  return {push, build, pushAll: pushAll(push)};\n}\n\n/**\n * guesses the histogram granularity to use based on min and max date\n */\nfunction computeGranularity(min: Date | null, max: Date | null): {histGranularity: IDateHistGranularity, hist: IDateBin[]} {\n  if (min == null || max == null) {\n    return {histGranularity: 'year', hist: []};\n  }\n  const hist: IDateBin[] = [];\n\n  if (max.getFullYear() - min.getFullYear() >= 2) {\n    // more than two years difference\n    const minYear = min.getFullYear();\n    const maxYear = max.getFullYear();\n    for (let i = minYear; i <= maxYear; ++i) {\n      hist.push({\n        x0: new Date(i, 0, 1),\n        x1: new Date(i + 1, 0, 1),\n        count: 0\n      });\n    }\n    return {hist, histGranularity: 'year'};\n  }\n\n  if ((max.getTime() - min.getTime()) <= 1000 * 60 * 60 * 24 * 31) {\n    // less than a month use day\n    let x0 = new Date(min.getFullYear(), min.getMonth(), min.getDay());\n    while (x0 <= max) {\n      const x1 = new Date(x0);\n      x1.setDate(x1.getDate() + 1);\n      hist.push({\n        x0,\n        x1,\n        count: 0\n      });\n      x0 = x1;\n    }\n    return {hist, histGranularity: 'day'};\n  }\n\n  // by month\n  let x0 = new Date(min.getFullYear(), min.getMonth(), 1);\n  while (x0 <= max) {\n    const x1 = new Date(x0);\n    x1.setMonth(x1.getMonth() + 1);\n    hist.push({\n      x0,\n      x1,\n      count: 0\n    });\n    x0 = x1;\n  }\n  return {hist, histGranularity: 'month'};\n}\n\nfunction pushDateHist(hist: IDateBin[], v: Date, count: number = 1) {\n  if (v < hist[0].x1) {\n    hist[0].count += count;\n    return;\n  }\n  const l = hist.length - 1;\n  if (v > hist[l].x0) {\n    hist[l].count += count;\n    return;\n  }\n  if (l === 2) {\n    hist[1].count += count;\n    return;\n  }\n\n  let low = 1;\n  let high = l;\n  // binary search\n  while (low < high) {\n    const center = Math.floor((high + low) / 2);\n    if (v < hist[center].x1) {\n      high = center;\n    } else {\n      low = center + 1;\n    }\n  }\n  hist[low].count += count;\n}\n/**\n * @internal\n */\nexport function dateStatsBuilder(template?: IDateStatistics): IBuilder<Date | null, IDateStatistics> {\n  let min: Date | null = null;\n  let max: Date | null = null;\n  let count = 0;\n  let missing = 0;\n\n  // yyyymmdd, count\n  const byDay = new Map<number, {x: Date, count: number}>();\n  const templateHist = template ? template.hist.map((d) => ({x0: d.x0, x1: d.x1, count: 0})) : null;\n\n  const push = (v: Date | null) => {\n    count += 1;\n    if (!v || v == null) {\n      missing += 1;\n      return;\n    }\n    if (min == null || v < min) {\n      min = v;\n    }\n    if (max == null || v > max) {\n      max = v;\n    }\n    if (templateHist) {\n      pushDateHist(templateHist, v, 1);\n      return;\n    }\n    const key = v.getFullYear() * 10000 + v.getMonth() * 100 + v.getDate();\n    if (byDay.has(key)) {\n      byDay.get(key)!.count++;\n    } else {\n      byDay.set(key, {count: 1, x: v});\n    }\n  };\n\n  const build = () => {\n    if (templateHist) {\n      return {\n        min,\n        max,\n        missing,\n        count,\n        maxBin: templateHist.reduce((acc, h) => Math.max(acc, h.count), 0),\n        hist: templateHist,\n        histGranularity: template!.histGranularity\n      };\n    }\n    // copy template else derive\n    const {histGranularity, hist} = computeGranularity(min, max);\n\n    byDay.forEach((v) => pushDateHist(hist, v.x, v.count));\n\n    return {\n      min,\n      max,\n      missing,\n      count,\n      maxBin: hist.reduce((acc, h) => Math.max(acc, h.count), 0),\n      hist,\n      histGranularity\n    };\n  };\n\n  return {push, build, pushAll: pushAll(push)};\n}\n\n/**\n * computes a categorical histogram\n * @param arr the data array\n * @param categories the list of known categories\n * @returns {{hist: {cat: string, y: number}[]}}\n * @internal\n */\nexport function categoricalStatsBuilder(categories: {name: string}[]): IBuilder<{name: string} | null, ICategoricalStatistics> {\n  const m = new Map<string, number>();\n  categories.forEach((cat) => m.set(cat.name, 0));\n\n  let missing = 0;\n  let count = 0;\n\n  const push = (v: ICategory | null) => {\n    count += 1;\n    if (v == null) {\n      missing += 1;\n    } else {\n      m.set(v.name, (m.get(v.name) || 0) + 1);\n    }\n  };\n\n  const build = () => {\n    const entries: ICategoricalBin[] = categories.map((d) => ({cat: d.name, count: m.get(d.name)!}));\n    const maxBin = entries.reduce((a, b) => Math.max(a, b.count), Number.NEGATIVE_INFINITY);\n\n    return {\n      maxBin,\n      hist: entries,\n      count,\n      missing\n    };\n  };\n\n  return {push, build, pushAll: pushAll(push)};\n}\n\n/**\n * round to the given commas similar to d3.round\n * @param {number} v\n * @param {number} precision\n * @returns {number}\n * @internal\n */\nexport function round(v: number, precision: number = 0) {\n  if (precision === 0) {\n    return Math.round(v);\n  }\n  const scale = Math.pow(10, precision);\n  return Math.round(v * scale) / scale;\n}\n\n/**\n * compares two number whether they are similar up to delta\n * @param {number} a first numbre\n * @param {number} b second number\n * @param {number} delta\n * @returns {boolean} a and b are similar\n * @internal\n */\nexport function similar(a: number, b: number, delta = 0.5) {\n  if (a === b) {\n    return true;\n  }\n  return Math.abs(a - b) < delta;\n}\n\n\n/**\n * @internal\n */\nexport function isPromiseLike<T>(value: any): value is PromiseLike<T> {\n  return value instanceof Promise || typeof value.then === 'function';\n}\n\n\n/**\n * @internal\n */\nexport function createIndexArray(length: number, dataSize = length) {\n  if (dataSize <= 255) {\n    return new Uint8Array(length);\n  }\n  if (dataSize <= 65535) {\n    return new Uint16Array(length);\n  }\n  return new Uint32Array(length);\n}\n\n/**\n * @internal\n */\nexport function toIndexArray(arr: ISequence<number> | IndicesArray, maxDataIndex?: number): UIntTypedArray {\n  if (arr instanceof Uint8Array || arr instanceof Uint16Array || arr instanceof Uint32Array) {\n    return arr.slice();\n  }\n  const l = maxDataIndex != null ? maxDataIndex : arr.length;\n  if (l <= 255) {\n    return Uint8Array.from(arr);\n  }\n  if (l <= 65535) {\n    return Uint16Array.from(arr);\n  }\n  return Uint32Array.from(arr);\n}\n\nfunction createLike(template: IndicesArray, total: number, maxDataIndex?: number) {\n  if (template instanceof Uint8Array) {\n    return new Uint8Array(total);\n  }\n  if (template instanceof Uint16Array) {\n    return new Uint16Array(total);\n  }\n  if (template instanceof Uint32Array) {\n    return new Uint32Array(total);\n  }\n  return createIndexArray(total, maxDataIndex);\n}\n\n/**\n * @internal\n */\nexport function joinIndexArrays(groups: IndicesArray[], maxDataIndex?: number) {\n  switch (groups.length) {\n    case 0:\n      return [];\n    case 1:\n      return groups[0];\n    default:\n      const total = groups.reduce((a, b) => a + b.length, 0);\n      const r = createLike(groups[0], total, maxDataIndex);\n      let shift = 0;\n      for (const g of groups) {\n        r.set(g, shift);\n        shift += g.length;\n      }\n      return r;\n  }\n}\n\n\nfunction asc(a: any, b: any) {\n  return a < b ? -1 : ((a > b) ? 1 : 0);\n}\n\nfunction desc(a: any, b: any) {\n  return a < b ? 1 : ((a > b) ? -1 : 0);\n}\n\n\nexport declare type ILookUpArray = Uint8Array | Uint16Array | Uint32Array | Int8Array | Int16Array | Int32Array | string[] | Float32Array | Float64Array;\n\n/**\n * sort the given index array based on the lookup array\n * @internal\n */\nexport function sortComplex(indices: UIntTypedArray | number[], comparators: {asc: boolean, lookup: ILookUpArray}[]) {\n  if (indices.length < 2) {\n    return indices;\n  }\n\n  switch (comparators.length) {\n    case 0:\n      // sort by indices\n      return indices.sort();\n    case 1:\n      const c = comparators[0]!.asc ? asc : desc;\n      const cLookup = comparators[0]!.lookup;\n      return indices.sort((a, b) => {\n        const r = c(cLookup[a]!, cLookup[b]!);\n        return r !== 0 ? r : a - b;\n      });\n    case 2:\n      const c1 = comparators[0]!.asc ? asc : desc;\n      const c1Lookup = comparators[0]!.lookup;\n      const c2 = comparators[1]!.asc ? asc : desc;\n      const c2Lookup = comparators[1]!.lookup;\n      return indices.sort((a, b) => {\n        let r = c1(c1Lookup[a], c1Lookup[b]);\n        r = r !== 0 ? r : c2(c2Lookup[a], c2Lookup[b]);\n        return r !== 0 ? r : a - b;\n      });\n    default:\n      const l = comparators.length;\n      const fs = comparators.map((d) => d.asc ? asc : desc);\n      return indices.sort((a, b) => {\n        for (let i = 0; i < l; ++i) {\n          const l = comparators[i].lookup;\n          const r = fs[i](l[a], l[b]);\n          if (r !== 0) {\n            return r;\n          }\n        }\n        return a - b;\n      });\n  }\n}\n\n// note the whole worker thing is in this one file to be able to copy the code\n\n/**\n * base worker message\n * @internal\n */\nexport interface IWorkerMessage {\n  type: string;\n  uid: number;\n}\n\n/**\n * @internal\n */\nexport interface IStatsWorkerMessage extends IWorkerMessage {\n  /**\n   * reference key for the indices array\n   */\n  refIndices: string | null;\n  indices?: UIntTypedArray;\n\n  /**\n   * reference key for the data indices\n   */\n  refData: string;\n  data?: UIntTypedArray | Float32Array | Int32Array | Float64Array;\n}\n\n/**\n * @internal\n */\nexport interface ISortMessageRequest {\n  type: 'sort';\n  uid: number;\n\n  ref: string;\n  indices: UIntTypedArray;\n  sortOrders?: {asc: boolean, lookup: ILookUpArray}[];\n}\n\n/**\n * @internal\n */\nexport interface ISortMessageResponse {\n  type: 'sort';\n\n  ref: string;\n  order: IndicesArray;\n}\n\n/**\n * @internal\n */\nexport interface IDeleteRefMessageRequest {\n  type: 'deleteRef';\n\n  ref: string;\n  startsWith?: boolean;\n}\n\n/**\n * @internal\n */\nexport interface ISetRefMessageRequest {\n  type: 'setRef';\n  uid: number;\n\n  ref: string;\n  data: UIntTypedArray | Float32Array | Int32Array | Float64Array | null;\n}\n\n/**\n * @internal\n */\nexport interface IDateStatsMessageRequest {\n  type: 'dateStats';\n  uid: number;\n\n  refIndices: string | null;\n  indices?: UIntTypedArray;\n\n  refData: string;\n  data?: UIntTypedArray;\n\n  template?: IDateStatistics;\n}\n\n/**\n * @internal\n */\nexport interface IDateStatsMessageResponse {\n  type: 'dateStats';\n  uid: number;\n\n  stats: IDateStatistics;\n}\n\n/**\n * @internal\n */\nexport interface INumberStatsMessageRequest {\n  type: 'numberStats';\n  uid: number;\n\n  refIndices: string | null;\n  indices?: UIntTypedArray;\n\n  refData: string;\n  data?: Float32Array;\n\n  numberOfBins: number;\n}\n\n/**\n * @internal\n */\nexport interface INumberStatsMessageResponse {\n  type: 'numberStats';\n  uid: number;\n\n  stats: IStatistics;\n}\n\n/**\n * @internal\n */\nexport interface IBoxPlotStatsMessageRequest {\n  type: 'boxplotStats';\n  uid: number;\n\n  refIndices: string | null;\n  indices?: UIntTypedArray;\n\n  refData: string;\n  data?: Float32Array;\n}\n\n/**\n * @internal\n */\nexport interface IBoxPlotStatsMessageResponse {\n  type: 'boxplotStats';\n  uid: number;\n\n  stats: IAdvancedBoxPlotData;\n}\n\n/**\n * @internal\n */\nexport interface ICategoricalStatsMessageRequest {\n  type: 'categoricalStats';\n  uid: number;\n\n  refIndices: string | null;\n  indices?: UIntTypedArray;\n\n  refData: string;\n  data?: UIntTypedArray;\n\n  categories: string[];\n}\n\n/**\n * @internal\n */\nexport interface ICategoricalStatsMessageResponse {\n  type: 'categoricalStats';\n  uid: number;\n\n  stats: ICategoricalStatistics;\n}\n\n/**\n * helper to build a value cache for dates, use dateValueCache2Value to convert back\n * @internal\n */\nexport function dateValueCacheBuilder(length: number) {\n  const vs = new Float64Array(length);\n  let i = 0;\n  return {\n    push: (d: Date | null) => vs[i++] = d == null ? NaN : d.getTime(),\n    cache: vs\n  };\n}\n\n/**\n * @internal\n */\nexport function dateValueCache2Value(v: number) {\n  return isNaN(v) ? null : new Date(v);\n}\n\n/**\n * @internal\n */\nexport function categoricalValueCacheBuilder(length: number, categories: {name: string}[]) {\n  const vs = createIndexArray(length, categories.length + 1);\n  const name2index = new Map<string, number>();\n  for (let i = 0; i < categories.length; ++i) {\n    name2index.set(categories[i].name, i + 1); // shift by one for missing = 0\n  }\n  let i = 0;\n  return {\n    push: (d: {name: string} | null) => vs[i++] = d == null ? 0 : name2index.get(d.name) || 0,\n    cache: vs\n  };\n}\n\n/**\n * @internal\n */\nexport function categoricalValueCache2Value<T extends {name: string}>(v: number, categories: T[]) {\n  return v === 0 ? null : categories[v - 1];\n}\n\n\nfunction sortWorkerMain() {\n  const wself = <IPoorManWorkerScope><any>self;\n\n  // stored refs to avoid duplicate copy\n  const refs = new Map<string, UIntTypedArray | Float32Array | Int32Array | Float64Array>();\n\n  const sort = (r: ISortMessageRequest) => {\n    if (r.sortOrders) {\n      sortComplex(r.indices, r.sortOrders);\n    }\n    const order = r.indices;\n\n    wself.postMessage(<ISortMessageResponse>{\n      type: r.type,\n      uid: r.uid,\n      ref: r.ref,\n      order\n    }, [r.indices.buffer]);\n  };\n\n  const setRef = (r: ISetRefMessageRequest) => {\n    if (r.data) {\n      refs.set(r.ref, r.data);\n    } else {\n      refs.delete(r.ref);\n    }\n  };\n\n  const deleteRef = (r: IDeleteRefMessageRequest) => {\n    if (!r.startsWith) {\n      refs.delete(r.ref);\n      return;\n    }\n\n    for (const key of Array.from(refs.keys())) {\n      if (key.startsWith(r.ref)) {\n        refs.delete(key);\n      }\n    }\n  };\n\n  const resolveRefs = <T extends UIntTypedArray | Float32Array | Int32Array>(r: IStatsWorkerMessage) => {\n    // resolve refs or save the new data\n\n    const data: T = r.data ? <T><any>r.data : <T><any>refs.get(r.refData)!;\n    const indices = r.indices ? r.indices : (r.refIndices ? <UIntTypedArray>refs.get(r.refIndices)! : undefined);\n    if (r.refData) {\n      refs.set(r.refData, data);\n    }\n    if (r.refIndices) {\n      refs.set(r.refIndices, indices!);\n    }\n    return {data, indices};\n  };\n\n  const dateStats = (r: IDateStatsMessageRequest) => {\n    const {data, indices} = resolveRefs<Int32Array>(r);\n\n    const b = dateStatsBuilder(r.template);\n    if (indices) {\n      // tslint:disable-next-line:prefer-for-of\n      for (let ii = 0; ii < indices.length; ++ii) {\n        const v = data[indices[ii]];\n        b.push(dateValueCache2Value(v));\n      }\n    } else {\n      // tslint:disable-next-line:prefer-for-of\n      for (let i = 0; i < data.length; ++i) {\n        b.push(dateValueCache2Value(data[i]));\n      }\n    }\n    wself.postMessage(<IDateStatsMessageResponse>{\n      type: r.type,\n      uid: r.uid,\n      stats: b.build()\n    });\n  };\n\n  const categoricalStats = (r: ICategoricalStatsMessageRequest) => {\n    const {data, indices} = resolveRefs<UIntTypedArray>(r);\n\n    const cats = r.categories.map((name) => ({name}));\n    const b = categoricalStatsBuilder(cats);\n    if (indices) {\n      // tslint:disable-next-line:prefer-for-of\n      for (let ii = 0; ii < indices.length; ++ii) {\n        b.push(categoricalValueCache2Value(data[indices[ii]], cats));\n      }\n    } else {\n      // tslint:disable-next-line:prefer-for-of\n      for (let i = 0; i < data.length; ++i) {\n        b.push(categoricalValueCache2Value(data[i], cats));\n      }\n    }\n\n    wself.postMessage(<ICategoricalStatsMessageResponse>{\n      type: r.type,\n      uid: r.uid,\n      stats: b.build()\n    });\n  };\n\n  const numberStats = (r: INumberStatsMessageRequest) => {\n    const {data, indices} = resolveRefs<Float32Array>(r);\n\n    const b = normalizedStatsBuilder(r.numberOfBins);\n\n    if (indices) {\n      // tslint:disable-next-line:prefer-for-of\n      for (let ii = 0; ii < indices.length; ++ii) {\n        b.push(data[indices[ii]]);\n      }\n    } else {\n      // tslint:disable-next-line:prefer-for-of\n      for (let i = 0; i < data.length; ++i) {\n        b.push(data[i]);\n      }\n    }\n\n    wself.postMessage(<INumberStatsMessageResponse>{\n      type: r.type,\n      uid: r.uid,\n      stats: b.build()\n    });\n  };\n\n  const boxplotStats = (r: IBoxPlotStatsMessageRequest) => {\n    const {data, indices} = resolveRefs<Float32Array>(r);\n\n    const b = boxplotBuilder(indices ? indices.length : undefined);\n\n    let stats: IAdvancedBoxPlotData;\n    if (!indices) {\n      stats = b.buildArr(data);\n    } else {\n      // tslint:disable-next-line:prefer-for-of\n      for (let ii = 0; ii < indices.length; ++ii) {\n        b.push(data[indices[ii]]);\n      }\n      stats = b.build();\n    }\n\n    wself.postMessage(<IBoxPlotStatsMessageResponse>{\n      type: r.type,\n      uid: r.uid,\n      stats\n    });\n  };\n\n  // message type to handler function\n  const msgHandlers: {[key: string]: (r: any) => void} = {\n    sort,\n    setRef,\n    deleteRef,\n    dateStats,\n    categoricalStats,\n    numberStats,\n    boxplotStats\n  };\n\n  wself.addEventListener('message', (evt) => {\n    const r = evt.data;\n    if (typeof r.uid !== 'number' || typeof r.type !== 'string') {\n      return;\n    }\n    const h = msgHandlers[r.type];\n    if (h) {\n      h(r);\n    }\n  });\n}\n\n/**\n * copy source code of a worker and create a blob out of it\n * to avoid webpack imports all the code functions need to be in this file\n * @internal\n */\nexport function createWorkerBlob() {\n  return createWorkerCodeBlob([\n    pushAll.toString(),\n    quantile.toString(),\n    normalizedStatsBuilder.toString(),\n    boxplotBuilder.toString(),\n    computeGranularity.toString(),\n    pushDateHist.toString(),\n    dateStatsBuilder.toString(),\n    categoricalStatsBuilder.toString(),\n    createIndexArray.toString(),\n    asc.toString(),\n    desc.toString(),\n    sortComplex.toString(),\n    dateValueCache2Value.toString(),\n    categoricalValueCache2Value.toString(),\n    toFunctionBody(sortWorkerMain)\n  ]);\n}\n","\n/** @internal */\nexport function equalArrays<T>(a: T[], b: T[]) {\n  if (a.length !== b.length) {\n    return false;\n  }\n  return a.every((ai, i) => ai === b[i]);\n}\n\n\n/**\n * converts a given id to css compatible one\n * @param id\n * @return {string|void}\n * @internal\n */\nexport function fixCSS(id: string) {\n  return id.replace(/[\\s!#$%&'()*+,.\\/:;<=>?@\\[\\\\\\]^`{|}~]+/g, '_'); //replace non css stuff to _\n}\n\n/**\n * clear node clearing\n * @param node\n * @internal\n */\nexport function clear<T extends Node>(node: T) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n  return node;\n}\n\n/**\n * @internal\n * to avoid [].concat(...) which doesn't work for large arrays\n * @param arrs\n */\nexport function concat<T>(arrs: (T[] | T)[]): T[] {\n  const r: T[] = [];\n  for (const a of arrs) {\n    if (!Array.isArray(a)) {\n      r.push(a);\n      continue;\n    }\n    for (const ai of a) {\n      r.push(ai);\n    }\n  }\n  return r;\n}\n","var noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nexport default dispatch;\n","import {dispatch, Dispatch} from 'd3-dispatch';\n\n/**\n * helper function to suffix the given event types\n * @internal\n */\nexport function suffix(suffix: string, ...prefix: string[]) {\n  return prefix.map((p) => `${p}${suffix}`);\n}\n\nexport interface IEventContext {\n  /**\n   * who is sending this event\n   */\n  readonly source: AEventDispatcher;\n\n  /**\n   * who was sending this event in case of forwarding\n   */\n  readonly origin: AEventDispatcher;\n  /**\n   * the event type\n   */\n  readonly type: string;\n  /**\n   * in case of multi propagation the 'main' event type, aka the first one\n   */\n  readonly primaryType: string;\n  /**\n   * the arguments to the listener\n   */\n  readonly args: any[];\n}\n\nexport interface IEventListener {\n  (this: IEventContext, ...args: any[]): any;\n}\n\nexport interface IEventHandler {\n  on(type: string | string[], listener: IEventListener | null): this;\n}\n\nconst __DEBUG = false;\n\n/**\n * base class for event dispatching using d3 event mechanism, thus .suffix is supported for multiple registrations\n */\nexport default class AEventDispatcher implements IEventHandler {\n  private readonly listeners: Dispatch<any>;\n  private readonly listenerEvents: Set<string>;\n  private readonly forwarder: (...args: any[]) => void;\n\n  constructor() {\n    const events = this.createEventList();\n    this.listenerEvents = new Set(events);\n    this.listeners = dispatch(...events);\n\n    const that = this;\n    this.forwarder = function (this: IEventContext, ...args: any[]) {\n      that.fireImpl(this.type, this.primaryType, this.origin, ...args);\n    };\n  }\n\n  on(type: string | string[], listener: IEventListener | null): this {\n    if (Array.isArray(type)) {\n      type.forEach((d) => {\n        if (this.listenerEvents.has(d.split('.')[0])) {\n          this.listenersChanged(d, Boolean(listener!));\n          this.listeners.on(d, listener!);\n        } else if (__DEBUG && !d.includes('.')) {\n          console.warn(this, 'invalid event type', d);\n        }\n      });\n    } else if (this.listenerEvents.has((<string>type).split('.')[0])) {\n      this.listenersChanged(<string>type, Boolean(listener!));\n      this.listeners.on(<string>type, listener!);\n    } else if (__DEBUG && !type.includes('.')) {\n      console.warn(this, 'invalid event type', type);\n    }\n    return this;\n  }\n\n  /**\n   * helper function that will be called upon a listener has changed\n   * @param _type event type\n   * @param _active registered or deregistered\n   */\n  protected listenersChanged(_type: string, _active: boolean) {\n    // hook\n  }\n\n  /**\n   * return the list of events to be able to dispatch\n   * @return {Array} by default no events\n   */\n  protected createEventList(): string[] {\n    return [];\n  }\n\n  protected fire(type: string | string[], ...args: any[]) {\n    const primaryType = Array.isArray(type) ? type[0] : type;\n    this.fireImpl(type, primaryType, this, ...args);\n  }\n\n  private fireImpl(type: string | string[], primaryType: string, origin: AEventDispatcher, ...args: any[]) {\n    const fireImpl = (t: string) => {\n      if (!this.listenerEvents.has(t)) {\n        if (__DEBUG) {\n          console.warn(this, 'invalid event type', t);\n        }\n        return;\n      }\n      //local context per event, set a this argument\n      const context: IEventContext = {\n        source: this, //who is sending this event,\n        origin,\n        type: t, //the event type\n        primaryType, //in case of multi propagation the 'main' event type\n        args //the arguments to the listener\n      };\n      this.listeners.apply(t, context, args);\n    };\n    if (Array.isArray(type)) {\n      type.forEach(fireImpl);\n    } else {\n      fireImpl(<string>type);\n    }\n  }\n\n  /**\n   * forwards one or more events from a given dispatcher to the current one\n   * i.e. when one of the given events is fired in 'from' it will be forwarded to all my listeners\n   * @param {IEventHandler} from the event dispatcher to forward from\n   * @param {string[]} types the event types to forward\n   */\n  protected forward(from: IEventHandler, ...types: string[]) {\n    from.on(types, this.forwarder);\n  }\n\n  /**\n   * removes the forwarding declarations\n   * @param {IEventHandler} from the originated dispatcher\n   * @param {string[]} types event types to forward\n   */\n  protected unforward(from: IEventHandler, ...types: string[]) {\n    from.on(types, null);\n  }\n}\n","import Column from './Column';\nimport Ranking from './Ranking';\nimport CompositeColumn from './CompositeColumn';\nimport {IColorMappingFunction, IMappingFunction} from './INumberColumn';\nimport {ICategoricalColorMappingFunction, ICategory} from './ICategoricalColumn';\nimport {IScriptMappingFunctionType} from './MappingFunction';\n\n\nexport interface IColumnConstructor {\n  new(id: string, desc: Readonly<IColumnDesc> & any, factory: ITypeFactory): Column;\n}\n\nexport interface IStyleColumn {\n  /**\n   * column description\n   */\n  description: string;\n\n  /**\n   * color of this column\n   * @deprecated not used anymore\n   */\n  color: string;\n\n  /**\n   * frozen column\n   * @default isSupportType\n   */\n  frozen: boolean;\n\n  /**\n   * whether the column can be removed or not\n   * @default false\n   */\n  fixed: boolean;\n\n  /**\n   * default renderer to use\n   */\n  renderer: string;\n\n  /**\n   * default group renderer to use\n   */\n  groupRenderer: string;\n\n  /**\n   * default summary renderer to use\n   */\n  summaryRenderer: string;\n\n  /**\n   * initial width of the column\n   * @default 100 or 200 for strings\n   */\n  width: number;\n\n  /**\n   * is this column visible by default\n   * @default true\n   */\n  visible: boolean;\n}\n\n/**\n * default color that should be used\n * @type {string}\n */\nexport const DEFAULT_COLOR = '#C1C1C1';\n\n\nexport interface IColumnDesc extends Partial<IStyleColumn> {\n  /**\n   * label of the column\n   */\n  label: string;\n  /**\n   * the column type\n   */\n  type: string;\n}\n\nexport interface IValueColumnDesc<T> extends IColumnDesc {\n  /**\n   * is the data lazy loaded and not yet available\n   * @default false\n   */\n  lazyLoaded?: boolean;\n\n  /**\n   * value accessor of this column\n   * @param row the current row\n   * @param desc the description of this column\n   */\n  accessor?(row: IDataRow, desc: Readonly<IValueColumnDesc<T>>): T;\n}\n\nexport interface IFlatColumn {\n  readonly col: Column;\n  readonly offset: number;\n  readonly width: number;\n}\n\nexport interface IColumnParent {\n  remove(col: Column): boolean;\n\n  insert(col: Column, index?: number): Column | null;\n\n  insertAfter(col: Column, reference: Column): Column | null;\n\n  move(col: Column, index?: number): Column | null;\n\n  moveAfter(col: Column, reference: Column): Column | null;\n\n  findMyRanker(): Ranking | null;\n\n  readonly fqid: string;\n\n  indexOf(col: Column): number;\n\n  at(index: number): Column;\n\n  readonly fqpath: string;\n\n}\n\n\nexport interface IColumnMetaData {\n  label: string;\n  description: string;\n}\n\nexport declare type ICompareValue = string | number | null;\n\n\n/**\n * a data row for rendering\n */\nexport interface IDataRow {\n  /**\n   * the value\n   */\n  readonly v: any;\n  /**\n   * the underlying data index\n   */\n  readonly i: number;\n}\n\n\nexport interface IGroup {\n  name: string;\n  color: string;\n  parent?: Readonly<IGroupParent> | null;\n}\n\nexport declare type IndicesArray = (ReadonlyArray<number> | UIntTypedArray) & ArrayLike<number>;\n\nexport interface IOrderedGroup extends IGroup {\n  order: IndicesArray;\n}\n\nexport const defaultGroup: IGroup = {\n  name: 'Default',\n  color: 'gray'\n};\n\nexport const othersGroup: IGroup = {\n  name: 'Others',\n  color: 'gray'\n};\n\n\nexport interface IGroupParent extends IGroup {\n  subGroups: (Readonly<IGroupParent> | Readonly<IGroup>)[];\n}\n\nexport interface IGroupItem {\n  readonly dataIndex: number;\n  readonly group: Readonly<IOrderedGroup>;\n  readonly relativeIndex: number;\n}\n\nexport declare type IGroupData = Readonly<IOrderedGroup>;\n\nexport function isGroup(item: IGroupData | IGroupItem): item is IGroupData {\n  return item && (<IGroupItem>item).group == null; // use .group as separator\n}\n\nexport declare type UIntTypedArray = Uint8Array | Uint16Array | Uint32Array;\n\nexport enum ECompareValueType {\n  BINARY,\n  COUNT, // count max to the number of rows\n  UINT8,\n  UINT16,\n  UINT32,\n  INT8,\n  INT16,\n  INT32,\n  FLOAT,\n  FLOAT_ASC,\n  DOUBLE,\n  DOUBLE_ASC,\n  STRING\n}\n\n\nexport interface ITypedDump {\n  readonly type: string;\n  [key: string]: any;\n}\n\n\nexport interface IColumnDump {\n  id: string;\n  width?: number;\n  desc: any;\n  label?: string;\n  renderer?: string;\n  /**\n   * @deprecated\n   */\n  rendererType?: string;\n  groupRenderer?: string;\n  summaryRenderer?: string;\n\n  // type specific\n  [key: string]: any;\n}\n\nexport interface IRankingDump {\n  /**\n   * columsn of this ranking\n   */\n  columns?: IColumnDump[];\n\n  /**\n   * sort criteria\n   */\n  sortCriteria?: {asc: boolean, sortBy: string}[];\n\n  /**\n   * group sort criteria\n   */\n  groupSortCriteria?: {asc: boolean, sortBy: string}[];\n\n  /**\n   * uids of group columns\n   */\n  groupColumns?: string[];\n\n  /**\n   * compatability\n   * @deprecated\n   */\n  sortColumn?: {sortBy: string, asc: boolean};\n}\n\nexport interface ITypeFactory {\n  (dump: IColumnDump): Column;\n\n  colorMappingFunction(dump?: ITypedDump | string | ((v: number) => string)): IColorMappingFunction;\n  mappingFunction(dump?: ITypedDump | IScriptMappingFunctionType): IMappingFunction;\n  categoricalColorMappingFunction(dump: ITypedDump | undefined, categories: ICategory[]): ICategoricalColorMappingFunction;\n}\n\nexport interface IMultiLevelColumn extends CompositeColumn {\n  getCollapsed(): boolean;\n\n  setCollapsed(value: boolean): void;\n}\n\nexport function isMultiLevelColumn(col: Column): col is IMultiLevelColumn {\n  return typeof ((<IMultiLevelColumn>col).getCollapsed) === 'function';\n}\n\nexport interface ISortCriteria {\n  readonly col: Column;\n  readonly asc: boolean;\n}\n","import {AEventDispatcher, ISequence, similar, fixCSS, IEventListener} from '../internal';\nimport {isSortingAscByDefault} from './annotations';\nimport {IColumnDump, ISortCriteria, defaultGroup, ECompareValueType, IColumnDesc, IDataRow, IGroup, IColumnParent, IColumnMetaData, IFlatColumn, ICompareValue, DEFAULT_COLOR, ITypeFactory} from './interfaces';\nimport Ranking from './Ranking';\n\n/**\n * emitted when the width property changes\n * @asMemberOf Column\n * @event\n */\nexport declare function widthChanged(previous: number, current: number): void;\n\n/**\n * emitted when the label property changes\n * @asMemberOf Column\n * @event\n */\nexport declare function labelChanged(previous: string, current: string): void;\n\n/**\n * emitted when the meta data property changes\n * @asMemberOf Column\n * @event\n */\nexport declare function metaDataChanged(previous: IColumnMetaData, current: IColumnMetaData): void;\n\n/**\n * emitted when state of the column is dirty\n * @asMemberOf Column\n * @event\n */\nexport declare function dirty(): void;\n\n/**\n * emitted when state of the column related to its header is dirty\n * @asMemberOf Column\n * @event\n */\nexport declare function dirtyHeader(): void;\n\n/**\n * emitted when state of the column related to its values is dirty\n * @asMemberOf Column\n * @event\n */\nexport declare function dirtyValues(): void;\n\n/**\n * emitted when state of the column related to cached values (hist, compare, ...) is dirty\n * @asMemberOf Column\n * @event\n */\nexport declare function dirtyCaches(): void;\n\n/**\n * emitted when the renderer type property changes\n * @asMemberOf Column\n * @event\n */\nexport declare function rendererTypeChanged(previous: string, current: string): void;\n\n/**\n * emitted when the group renderer property changes\n * @asMemberOf Column\n * @event\n */\nexport declare function groupRendererChanged(previous: string, current: string): void;\n\n/**\n * emitted when the pattern property changes\n * @asMemberOf Column\n * @event\n */\nexport declare function summaryRendererChanged(previous: string, current: string): void;\n\n/**\n * emitted when the visibility of this column changes\n * @asMemberOf Column\n * @event\n */\nexport declare function visibilityChanged(previous: boolean, current: boolean): void;\n\n/**\n * a column in LineUp\n */\nexport default class Column extends AEventDispatcher {\n  /**\n   * magic variable for showing all columns\n   * @type {number}\n   */\n  static readonly FLAT_ALL_COLUMNS = -1;\n\n  static readonly EVENT_WIDTH_CHANGED = 'widthChanged';\n  static readonly EVENT_LABEL_CHANGED = 'labelChanged';\n  static readonly EVENT_METADATA_CHANGED = 'metaDataChanged';\n  static readonly EVENT_DIRTY = 'dirty';\n  static readonly EVENT_DIRTY_HEADER = 'dirtyHeader';\n  static readonly EVENT_DIRTY_VALUES = 'dirtyValues';\n  static readonly EVENT_DIRTY_CACHES = 'dirtyCaches';\n  static readonly EVENT_RENDERER_TYPE_CHANGED = 'rendererTypeChanged';\n  static readonly EVENT_GROUP_RENDERER_TYPE_CHANGED = 'groupRendererChanged';\n  static readonly EVENT_SUMMARY_RENDERER_TYPE_CHANGED = 'summaryRendererChanged';\n  static readonly EVENT_VISIBILITY_CHANGED = 'visibilityChanged';\n\n  /**\n   * the id of this column\n   */\n  private uid: string;\n\n  /**\n   * width of the column\n   * @type {number}\n   * @private\n   */\n  private width: number = 100;\n\n  /**\n   * parent column of this column, set when added to a ranking or combined column\n   */\n  parent: Readonly<IColumnParent> | null = null;\n\n  private metadata: Readonly<IColumnMetaData>;\n  private renderer: string;\n  private groupRenderer: string;\n  private summaryRenderer: string;\n  private visible: boolean;\n\n  constructor(id: string, public readonly desc: Readonly<IColumnDesc>) {\n    super();\n    this.uid = fixCSS(id);\n    this.renderer = this.desc.renderer || this.desc.type;\n    this.groupRenderer = this.desc.groupRenderer || this.desc.type;\n    this.summaryRenderer = this.desc.summaryRenderer || this.desc.type;\n    this.width = this.desc.width != null && this.desc.width > 0 ? this.desc.width : 100;\n    this.visible = this.desc.visible !== false;\n\n    this.metadata = {\n      label: desc.label || this.id,\n      description: desc.description || ''\n    };\n  }\n\n  get fixed() {\n    return Boolean(this.desc.fixed);\n  }\n\n  get frozen() {\n    return Boolean(this.desc.frozen);\n  }\n\n  get id() {\n    return this.uid;\n  }\n\n  assignNewId(idGenerator: () => string) {\n    this.uid = fixCSS(idGenerator());\n  }\n\n  get label() {\n    return this.metadata.label;\n  }\n\n  get description() {\n    return this.metadata.description;\n  }\n\n  /**\n   * returns the fully qualified id i.e. path the parent\n   * @returns {string}\n   */\n  get fqid() {\n    return this.parent ? `${this.parent.fqid}_${this.id}` : this.id;\n  }\n\n  get fqpath() {\n    return this.parent ? `${this.parent.fqpath}@${this.parent.indexOf(this)}` : '';\n  }\n\n  protected createEventList() {\n    return super.createEventList().concat([Column.EVENT_WIDTH_CHANGED,\n    Column.EVENT_LABEL_CHANGED, Column.EVENT_METADATA_CHANGED, Column.EVENT_VISIBILITY_CHANGED, Column.EVENT_SUMMARY_RENDERER_TYPE_CHANGED,\n    Column.EVENT_RENDERER_TYPE_CHANGED, Column.EVENT_GROUP_RENDERER_TYPE_CHANGED,\n    Column.EVENT_DIRTY, Column.EVENT_DIRTY_HEADER, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY_CACHES]);\n  }\n\n  on(type: typeof Column.EVENT_WIDTH_CHANGED, listener: typeof widthChanged | null): this;\n  on(type: typeof Column.EVENT_LABEL_CHANGED, listener: typeof labelChanged | null): this;\n  on(type: typeof Column.EVENT_METADATA_CHANGED, listener: typeof metaDataChanged | null): this;\n  on(type: typeof Column.EVENT_DIRTY, listener: typeof dirty | null): this;\n  on(type: typeof Column.EVENT_DIRTY_HEADER, listener: typeof dirtyHeader | null): this;\n  on(type: typeof Column.EVENT_DIRTY_VALUES, listener: typeof dirtyValues | null): this;\n  on(type: typeof Column.EVENT_DIRTY_CACHES, listener: typeof dirtyCaches | null): this;\n  on(type: typeof Column.EVENT_RENDERER_TYPE_CHANGED, listener: typeof rendererTypeChanged | null): this;\n  on(type: typeof Column.EVENT_GROUP_RENDERER_TYPE_CHANGED, listener: typeof groupRendererChanged | null): this;\n  on(type: typeof Column.EVENT_SUMMARY_RENDERER_TYPE_CHANGED, listener: typeof summaryRendererChanged | null): this;\n  on(type: typeof Column.EVENT_VISIBILITY_CHANGED, listener: typeof visibilityChanged | null): this;\n  on(type: string | string[], listener: IEventListener | null): this; // required for correct typings in *.d.ts\n  on(type: string | string[], listener: IEventListener | null): this {\n    return super.on(type, listener);\n  }\n\n  getWidth() {\n    return this.width;\n  }\n\n  hide() {\n    this.setVisible(false);\n  }\n\n  show() {\n    this.setVisible(true);\n  }\n\n  isVisible() {\n    return this.visible;\n  }\n\n  getVisible() {\n    return this.isVisible();\n  }\n\n  setVisible(value: boolean) {\n    if (this.visible === value) {\n      return;\n    }\n    this.fire([Column.EVENT_VISIBILITY_CHANGED, Column.EVENT_DIRTY_HEADER, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY], this.visible, this.visible = value);\n  }\n\n  /**\n   * visitor pattern for flattening the columns\n   * @param {IFlatColumn} r the result array\n   * @param {number} offset left offset\n   * @param {number} _levelsToGo how many levels down\n   * @param {number} _padding padding between columns\n   * @returns {number} the used width by this column\n   */\n  flatten(r: IFlatColumn[], offset: number, _levelsToGo = 0, _padding = 0): number {\n    const w = this.getWidth();\n    r.push({col: this, offset, width: w});\n    return w;\n  }\n\n  setWidth(value: number) {\n    if (similar(this.width, value, 0.5)) {\n      return;\n    }\n    this.fire([Column.EVENT_WIDTH_CHANGED, Column.EVENT_DIRTY_HEADER, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY], this.width, this.width = value);\n  }\n\n  setWidthImpl(value: number) {\n    this.width = value;\n  }\n\n  setMetaData(value: Readonly<IColumnMetaData>) {\n    if (value.label === this.label && this.description === value.description) {\n      return;\n    }\n    const bak = this.getMetaData();\n    //copy to avoid reference\n    this.metadata = {\n      label: value.label,\n      description: value.description\n    };\n\n    this.fire([Column.EVENT_LABEL_CHANGED, Column.EVENT_METADATA_CHANGED, Column.EVENT_DIRTY_HEADER, Column.EVENT_DIRTY], bak, this.getMetaData());\n  }\n\n  getMetaData(): Readonly<IColumnMetaData> {\n    return Object.assign({}, this.metadata);\n  }\n\n  /**\n   * triggers that the ranking is sorted by this column\n   * @param ascending ascending order?\n   * @param priority sorting priority\n   * @returns {boolean} was successful\n   */\n  sortByMe(ascending = isSortingAscByDefault(this), priority = 0) {\n    const r = this.findMyRanker();\n    if (r) {\n      return r.sortBy(this, ascending, priority);\n    }\n    return false;\n  }\n\n  groupByMe(): boolean {\n    const r = this.findMyRanker();\n    if (r) {\n      return r.toggleGrouping(this);\n    }\n    return false;\n  }\n\n  /**\n   *\n   * @return {number}\n   */\n  isGroupedBy(): number {\n    const r = this.findMyRanker();\n    if (!r) {\n      return -1;\n    }\n    return r.getGroupCriteria().indexOf(this);\n  }\n\n  /**\n   * toggles the sorting order of this column in the ranking\n   * @returns {boolean} was successful\n   */\n  toggleMySorting() {\n    const r = this.findMyRanker();\n    if (r) {\n      return r.toggleSorting(this);\n    }\n    return false;\n  }\n\n  private isSortedByMeImpl(selector: ((r: Ranking) => ISortCriteria[])): {asc: 'asc' | 'desc' | undefined, priority: number | undefined} {\n    const ranker = this.findMyRanker();\n    if (!ranker) {\n      return {asc: undefined, priority: undefined};\n    }\n    const criterias = selector(ranker);\n    const index = criterias.findIndex((c) => c.col === this);\n    if (index < 0) {\n      return {asc: undefined, priority: undefined};\n    }\n    return {\n      asc: criterias[index].asc ? 'asc' : 'desc',\n      priority: index\n    };\n  }\n\n  isSortedByMe() {\n    return this.isSortedByMeImpl((r) => r.getSortCriteria());\n  }\n\n  groupSortByMe(ascending = isSortingAscByDefault(this), priority = 0) {\n    const r = this.findMyRanker();\n    if (r) {\n      return r.groupSortBy(this, ascending, priority);\n    }\n    return false;\n  }\n\n  toggleMyGroupSorting() {\n    const r = this.findMyRanker();\n    if (r) {\n      return r.toggleGroupSorting(this);\n    }\n    return false;\n  }\n\n  isGroupSortedByMe() {\n    return this.isSortedByMeImpl((r) => r.getGroupSortCriteria());\n  }\n\n  /**\n   * removes the column from the ranking\n   * @returns {boolean} was successful\n   */\n  removeMe() {\n    if (this.fixed) {\n      return false;\n    }\n    if (this.parent) {\n      return this.parent.remove(this);\n    }\n    return false;\n  }\n\n  /**\n   * called when the columns added to a ranking\n   */\n  attach(parent: IColumnParent) {\n    this.parent = parent;\n  }\n\n  /**\n   * called when the column is removed from the ranking\n   */\n  detach() {\n    this.parent = null;\n  }\n\n  /**\n   * inserts the given column after itself\n   * @param col the column to insert\n   * @returns {boolean} was successful\n   */\n  insertAfterMe(col: Column) {\n    if (this.parent) {\n      return this.parent.insertAfter(col, this) != null;\n    }\n    return false;\n  }\n\n  /**\n   * finds the underlying ranking column\n   * @returns {Ranking|null} my current ranking\n   */\n  findMyRanker(): Ranking | null {\n    if (this.parent) {\n      return this.parent.findMyRanker();\n    }\n    return null;\n  }\n\n  /**\n   * dumps this column to JSON compatible format\n   * @param toDescRef helper mapping function\n   * @returns {any} dump of this column\n   */\n  dump(toDescRef: (desc: any) => any): any {\n    const r: IColumnDump = {\n      id: this.id,\n      desc: toDescRef(this.desc),\n      width: this.width\n    };\n    if (this.label !== (this.desc.label || this.id)) {\n      r.label = this.label;\n    }\n    if (this.getRenderer() !== this.desc.type) {\n      r.renderer = this.getRenderer();\n    }\n    if (this.getGroupRenderer() !== this.desc.type) {\n      r.groupRenderer = this.getGroupRenderer();\n    }\n    if (this.getSummaryRenderer() !== this.desc.type) {\n      r.summaryRenderer = this.getSummaryRenderer();\n    }\n    return r;\n  }\n\n  /**\n   * restore the column content from a dump\n   * @param dump column dump\n   * @param _factory helper for creating columns\n   */\n  restore(dump: IColumnDump, _factory: ITypeFactory) {\n    this.width = dump.width || this.width;\n    this.metadata = {\n      label: dump.label || this.label,\n      description: this.description\n    };\n    if (dump.renderer || dump.rendererType) {\n      this.renderer = dump.renderer || dump.rendererType || this.renderer;\n    }\n    if (dump.groupRenderer) {\n      this.groupRenderer = dump.groupRenderer;\n    }\n    if (dump.summaryRenderer) {\n      this.summaryRenderer = dump.summaryRenderer;\n    }\n  }\n\n  /**\n   * return the label of a given row for the current column\n   * @param row the current row\n   * @return {string} the label of this column at the specified row\n   */\n  getLabel(row: IDataRow): string {\n    const v = this.getValue(row);\n    return v == null ? '' : String(v);\n  }\n\n  /**\n   * return the value of a given row for the current column\n   * @param _row the current row\n   * @return the value of this column at the specified row\n   */\n  getValue(_row: IDataRow): any | null {\n    return ''; //no value\n  }\n\n  /**\n   * returns the value to be used when exporting\n   * @param format format hint\n   */\n  getExportValue(row: IDataRow, format: 'text' | 'json'): any {\n    return format === 'text' ? this.getLabel(row) : this.getValue(row);\n  }\n\n  getColor(_row: IDataRow) {\n    return DEFAULT_COLOR;\n  }\n\n  toCompareValue(_row: IDataRow, _valueCache?: any): ICompareValue | ICompareValue[] {\n    return 0;\n  }\n\n  toCompareValueType(): ECompareValueType | ECompareValueType[] {\n    return ECompareValueType.UINT8;\n  }\n\n  /**\n   * group the given row into a bin/group\n   * @param _row\n   * @return {IGroup}\n   */\n  group(_row: IDataRow, _valueCache?: any): IGroup {\n    return Object.assign({}, defaultGroup);\n  }\n\n  toCompareGroupValue(_rows: ISequence<IDataRow>, group: IGroup, _valueCache?: ISequence<any>): ICompareValue | ICompareValue[] {\n    return group.name.toLowerCase();\n  }\n\n  toCompareGroupValueType(): ECompareValueType | ECompareValueType[] {\n    return ECompareValueType.STRING;\n  }\n\n  /**\n   * flag whether any filter is applied\n   * @return {boolean}\n   */\n  isFiltered() {\n    return false;\n  }\n\n  /**\n   * clear the filter\n   * @return {boolean} whether the filtered needed to be reseted\n   */\n  clearFilter() {\n    // hook to clear the filter\n    return false;\n  }\n\n  /**\n   * predicate whether the current row should be included\n   * @param row\n   * @return {boolean}\n   */\n  filter(row: IDataRow, _valueCache?: any) {\n    return row != null;\n  }\n\n  /**\n   * determines the renderer type that should be used to render this column. By default the same type as the column itself\n   * @return {string}\n   */\n  getRenderer(): string {\n    return this.renderer;\n  }\n\n  getGroupRenderer(): string {\n    return this.groupRenderer;\n  }\n\n  getSummaryRenderer(): string {\n    return this.summaryRenderer;\n  }\n\n  setRenderer(renderer: string) {\n    if (renderer === this.renderer) {\n      // nothing changes\n      return;\n    }\n    this.fire([Column.EVENT_RENDERER_TYPE_CHANGED, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY], this.renderer, this.renderer = renderer);\n  }\n\n  protected setDefaultRenderer(renderer: string) {\n    if (this.renderer !== this.desc.type || this.desc.renderer) {\n      return;\n    }\n    return this.setRenderer(renderer);\n  }\n\n  setGroupRenderer(renderer: string) {\n    if (renderer === this.groupRenderer) {\n      // nothing changes\n      return;\n    }\n    this.fire([Column.EVENT_GROUP_RENDERER_TYPE_CHANGED, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY], this.groupRenderer, this.groupRenderer = renderer);\n  }\n\n  protected setDefaultGroupRenderer(renderer: string) {\n    if (this.groupRenderer !== this.desc.type || this.desc.groupRenderer) {\n      return;\n    }\n    return this.setGroupRenderer(renderer);\n  }\n\n  setSummaryRenderer(renderer: string) {\n    if (renderer === this.summaryRenderer) {\n      // nothing changes\n      return;\n    }\n    this.fire([Column.EVENT_SUMMARY_RENDERER_TYPE_CHANGED, Column.EVENT_DIRTY_HEADER, Column.EVENT_DIRTY], this.summaryRenderer, this.summaryRenderer = renderer);\n  }\n\n  protected setDefaultSummaryRenderer(renderer: string) {\n    if (this.summaryRenderer !== this.desc.type || this.desc.summaryRenderer) {\n      return;\n    }\n    return this.setSummaryRenderer(renderer);\n  }\n\n  protected setDefaultWidth(width: number) {\n    if (this.width !== 100 || this.desc.width) {\n      return;\n    }\n    return this.setWidthImpl(width);\n  }\n\n  /**\n   * marks the header, values, or both as dirty such that the values are reevaluated\n   * @param type specify in more detail what is dirty, by default whole column\n   */\n  markDirty(type: 'header' | 'values' | 'all' = 'all') {\n    switch (type) {\n      case 'header':\n        return this.fire([Column.EVENT_DIRTY_HEADER, Column.EVENT_DIRTY]);\n      case 'values':\n        return this.fire([Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY_CACHES, Column.EVENT_DIRTY]);\n      default:\n        return this.fire([Column.EVENT_DIRTY_HEADER, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY_CACHES, Column.EVENT_DIRTY]);\n    }\n  }\n}\n","import 'reflect-metadata';\nimport Column from './Column';\nimport {IColumnDesc, IColumnConstructor} from './interfaces';\n\nconst supportType = Symbol.for('SupportType');\nconst category = Symbol.for('Category');\n\nexport function SupportType() {\n  return Reflect.metadata(supportType, true);\n}\n\nexport function SortByDefault(order: 'ascending'|'descending' = 'ascending') {\n  if (order === 'descending') {\n    return Reflect.metadata(Symbol.for('sortDescendingByDefault'), true);\n  }\n  return (d: any) => d;\n}\n\nexport function isSortingAscByDefault(col: Column) {\n  const clazz = (<any>col).constructor;\n  return !Reflect.hasMetadata(Symbol.for('sortDescendingByDefault'), clazz);\n}\n\nexport class Categories {\n  readonly string = {label: 'label', order: 1, name: 'string', featureLevel: 'basic'};\n  readonly categorical = {label: 'categorical', order: 2, name: 'categorical', featureLevel: 'basic'};\n  readonly number = {label: 'numerical', order: 3, name: 'number', featureLevel: 'basic'};\n  readonly date = {label: 'date', order: 4, name: 'date', featureLevel: 'basic'};\n  readonly array = {label: 'matrix', order: 5, name: 'array', featureLevel: 'advanced'};\n  readonly map = {label: 'map', order: 6, name: 'map', featureLevel: 'advanced'};\n  readonly composite = {label: 'combined', order: 7, name: 'composite', featureLevel: 'advanced'};\n  readonly support = {label: 'support', order: 8, name: 'support', featureLevel: 'advanced'};\n  readonly other = {label: 'others', order: 9, name: 'other', featureLevel: 'advanced'};\n}\n\nexport const categories = new Categories();\n\nexport function Category(cat: keyof Categories) {\n  return Reflect.metadata(category, cat);\n}\n\nexport function getSortType(col: Column): 'abc'|'num'|undefined {\n  const cat = categoryOf(col);\n  const type = col.desc.type;\n  if (cat === categories.string || cat === categories.categorical) {\n    return 'abc';\n  }\n  if (cat === categories.number || type === 'rank' || isSortingAscByDefault(col)) {\n    return 'num';\n  }\n  const numbers = new Set(['rank', 'number', 'numbers', 'ordinal', 'boxplot', 'script', 'reduce', 'stack']);\n  return numbers.has(type) ? 'num' : undefined;\n}\n\nexport function toolbar(...keys: string[]) {\n  return Reflect.metadata(Symbol.for('toolbarIcon'), keys);\n}\n\nexport function dialogAddons(key: string, ...keys: string[]) {\n  return Reflect.metadata(Symbol.for(`toolbarDialogAddon${key}`), keys);\n}\n\nexport function isSupportType(col: Column) {\n  const clazz = (<any>col).constructor;\n  return Reflect.hasMetadata(supportType, clazz);\n}\n\nexport interface IColumnCategory {\n  label: string;\n  name: string;\n  order: number;\n  featureLevel: 'basic' | 'advanced';\n}\n\nexport function categoryOf(col: IColumnConstructor | Column): IColumnCategory {\n  const cat = <keyof Categories>Reflect.getMetadata(category, col instanceof Column ? Object.getPrototypeOf(col).constructor : col) || 'other';\n  return <IColumnCategory>categories[cat] || categories.other;\n}\n\nexport function categoryOfDesc(col: IColumnDesc | string, models: { [key: string]: IColumnConstructor }): IColumnCategory {\n  const type = typeof col === 'string' ? col : col.type;\n  const clazz = models[type];\n  return clazz ? categoryOf(clazz) : <IColumnCategory>categories.other;\n}\n","import {IAdvancedBoxPlotData, IBoxPlotData, IForEachAble} from '../internal';\nimport Column from './Column';\nimport {IArrayColumn} from './IArrayColumn';\nimport {IColumnDesc, IDataRow, ITypedDump, ITypeFactory} from './interfaces';\n\n\nexport interface IColorMappingFunction {\n  apply(v: number): string;\n\n  toJSON(): ITypedDump | string;\n\n  clone(): IColorMappingFunction;\n\n  eq(other: IColorMappingFunction): boolean;\n}\n\nexport interface IColorMappingFunctionConstructor {\n  new(dump: ITypedDump | string, factory: ITypeFactory): IColorMappingFunction;\n}\n\nexport interface IMappingFunction {\n  //new(domain: number[]);\n\n  apply(v: number): number;\n\n  toJSON(): ITypedDump;\n\n  domain: number[];\n\n  clone(): IMappingFunction;\n\n  eq(other: IMappingFunction): boolean;\n\n  getRange(formatter: (v: number) => string): [string, string];\n}\n\nexport interface IMappingFunctionConstructor {\n  new(dump: ITypedDump): IMappingFunction;\n}\n\n\nexport interface IMapAbleDesc {\n  /**\n   * dump of mapping function\n   */\n  map?: ITypedDump;\n  /**\n   * either map or domain should be available\n   */\n  domain?: [number, number];\n  /**\n   * @default [0,1]\n   */\n  range?: [number, number];\n\n  /**\n   * @deprecated use colorMapping instead\n   */\n  color?: string;\n\n  /**\n   * color mapping\n   */\n  colorMapping?: string | ((v: number) => string) | ITypedDump;\n}\n\n\nexport interface IMapAbleColumn extends INumberColumn {\n  getOriginalMapping(): IMappingFunction;\n\n  getMapping(): IMappingFunction;\n\n  setMapping(mapping: IMappingFunction): void;\n\n  getColorMapping(): IColorMappingFunction;\n\n  setColorMapping(mapping: IColorMappingFunction): void;\n\n  getFilter(): INumberFilter;\n\n  setFilter(value: INumberFilter | null): void;\n\n  getRange(): [string, string];\n}\n\nexport function isMapAbleColumn(col: Column): col is IMapAbleColumn;\nexport function isMapAbleColumn(col: IColumnDesc): col is IMapAbleDesc & IColumnDesc;\nexport function isMapAbleColumn(col: Column | IColumnDesc) {\n  return (col instanceof Column && typeof (<IMapAbleColumn>col).getMapping === 'function' || (!(col instanceof Column) && isNumberColumn(col) && ((<IColumnDesc>col).type.startsWith('number') || (<IColumnDesc>col).type.startsWith('boxplot'))));\n}\n\n\nexport interface INumberColumn extends Column {\n  getNumber(row: IDataRow): number;\n\n  getRawNumber(row: IDataRow): number;\n\n  iterNumber(row: IDataRow): IForEachAble<number>;\n  iterRawNumber(row: IDataRow): IForEachAble<number>;\n\n  getNumberFormat(): (v: number) => string;\n}\n\nexport interface INumberDesc extends IMapAbleDesc {\n  /**\n   * d3 formatting option\n   * @default .3n\n   */\n  numberFormat?: string;\n}\n\n/**\n * checks whether the given column or description is a number column, i.e. the value is a number\n * @param col\n * @returns {boolean}\n */\nexport function isNumberColumn(col: Column): col is INumberColumn;\nexport function isNumberColumn(col: IColumnDesc): col is INumberDesc & IColumnDesc;\nexport function isNumberColumn(col: Column | IColumnDesc) {\n  return (col instanceof Column && typeof (<INumberColumn>col).getNumber === 'function' || (!(col instanceof Column) && (<IColumnDesc>col).type.match(/(number|stack|ordinal)/) != null));\n}\n\n\nexport enum ESortMethod {\n  min = 'min',\n  max = 'max',\n  median = 'median',\n  q1 = 'q1',\n  q3 = 'q3'\n}\n\nexport interface IBoxPlotColumn extends INumberColumn, IMapAbleColumn {\n  getBoxPlotData(row: IDataRow): IBoxPlotData | null;\n\n  getMapping(): IMappingFunction;\n\n  getRawBoxPlotData(row: IDataRow): IBoxPlotData | null;\n\n  getSortMethod(): string;\n\n  setSortMethod(sortMethod: string): void;\n}\n\nexport function isBoxPlotColumn(col: Column): col is IBoxPlotColumn {\n  return typeof (<IBoxPlotColumn>col).getBoxPlotData === 'function';\n}\n\nexport enum EAdvancedSortMethod {\n  min = 'min',\n  max = 'max',\n  median = 'median',\n  q1 = 'q1',\n  q3 = 'q3',\n  mean = 'mean'\n}\n\nexport interface IAdvancedBoxPlotColumn extends IBoxPlotColumn {\n  getBoxPlotData(row: IDataRow): IAdvancedBoxPlotData | null;\n\n  getRawBoxPlotData(row: IDataRow): IAdvancedBoxPlotData | null;\n}\n\nexport interface INumbersColumn extends IAdvancedBoxPlotColumn, IArrayColumn<number> {\n  getNumbers(row: IDataRow): number[];\n\n  getRawNumbers(row: IDataRow): number[];\n}\n\nexport function isNumbersColumn(col: Column): col is INumbersColumn {\n  return isBoxPlotColumn(col) && typeof (<INumbersColumn>col).getNumbers === 'function';\n}\n\n\nexport interface INumberFilter {\n  min: number;\n  max: number;\n  filterMissing: boolean;\n}\n","import Column, {widthChanged, labelChanged, metaDataChanged, dirty, dirtyHeader, dirtyValues, dirtyCaches, rendererTypeChanged, groupRendererChanged, summaryRendererChanged, visibilityChanged} from './Column';\nimport {IValueColumnDesc, IDataRow, ITypeFactory} from './interfaces';\nimport {IEventListener} from '../internal';\n\n/**\n * emitted when the data of this column has been loaded\n * @asMemberOf ValueColumn\n * @event\n */\nexport declare function dataLoaded(previous: boolean, current: boolean): void;\n\n/**\n * a column having an accessor to get the cell value\n */\nexport default class ValueColumn<T> extends Column {\n  static readonly EVENT_DATA_LOADED = 'dataLoaded';\n\n  static readonly RENDERER_LOADING = 'loading';\n\n  private readonly accessor: (row: IDataRow, desc: Readonly<IValueColumnDesc<T>>) => T;\n\n  /**\n   * is the data available\n   * @type {boolean}\n   */\n  private loaded: boolean;\n\n  constructor(id: string, desc: Readonly<IValueColumnDesc<T>>) {\n    super(id, desc);\n    //find accessor\n    this.accessor = desc.accessor! || (() => null);\n    this.loaded = desc.lazyLoaded !== true;\n  }\n\n  protected createEventList() {\n    return super.createEventList().concat([ValueColumn.EVENT_DATA_LOADED]);\n  }\n\n  on(type: typeof ValueColumn.EVENT_DATA_LOADED, listener: typeof dataLoaded | null): this;\n  on(type: typeof Column.EVENT_WIDTH_CHANGED, listener: typeof widthChanged | null): this;\n  on(type: typeof Column.EVENT_LABEL_CHANGED, listener: typeof labelChanged | null): this;\n  on(type: typeof Column.EVENT_METADATA_CHANGED, listener: typeof metaDataChanged | null): this;\n  on(type: typeof Column.EVENT_DIRTY, listener: typeof dirty | null): this;\n  on(type: typeof Column.EVENT_DIRTY_HEADER, listener: typeof dirtyHeader | null): this;\n  on(type: typeof Column.EVENT_DIRTY_VALUES, listener: typeof dirtyValues | null): this;\n  on(type: typeof Column.EVENT_DIRTY_CACHES, listener: typeof dirtyCaches | null): this;\n  on(type: typeof Column.EVENT_RENDERER_TYPE_CHANGED, listener: typeof rendererTypeChanged | null): this;\n  on(type: typeof Column.EVENT_GROUP_RENDERER_TYPE_CHANGED, listener: typeof groupRendererChanged | null): this;\n  on(type: typeof Column.EVENT_SUMMARY_RENDERER_TYPE_CHANGED, listener: typeof summaryRendererChanged | null): this;\n  on(type: typeof Column.EVENT_VISIBILITY_CHANGED, listener: typeof visibilityChanged | null): this;\n  on(type: string | string[], listener: IEventListener | null): this; // required for correct typings in *.d.ts\n  on(type: string | string[], listener: IEventListener | null): this {\n    return super.on(<any>type, listener);\n  }\n\n\n  getLabel(row: IDataRow) {\n    if (!this.isLoaded()) {\n      return '';\n    }\n    const v = this.getValue(row);\n    return v == null ? '' : String(v);\n  }\n\n  getRaw(row: IDataRow): T | null {\n    if (!this.isLoaded()) {\n      return null;\n    }\n    return this.accessor(row, this.desc);\n  }\n\n  getValue(row: IDataRow): T | null {\n    return this.getRaw(row);\n  }\n\n  isLoaded() {\n    return this.loaded;\n  }\n\n  setLoaded(loaded: boolean) {\n    if (this.loaded === loaded) {\n      return;\n    }\n    this.fire([ValueColumn.EVENT_DATA_LOADED, Column.EVENT_DIRTY_HEADER, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY_CACHES, Column.EVENT_DIRTY], this.loaded, this.loaded = loaded);\n  }\n\n  getRenderer(): string {\n    if (!this.isLoaded()) {\n      return ValueColumn.RENDERER_LOADING;\n    }\n    return super.getRenderer();\n  }\n\n  /**\n   * patch the dump such that the loaded attribute is defined (for lazy loading columns)\n   * @param toDescRef\n   * @returns {any}\n   */\n  dump(toDescRef: (desc: any) => any): any {\n    const r = super.dump(toDescRef);\n    r.loaded = this.loaded;\n\n    if (!this.loaded && r.renderer === ValueColumn.RENDERER_LOADING) {\n      delete r.renderer;\n    }\n    return r;\n  }\n\n  restore(dump: any, factory: ITypeFactory) {\n    if (dump.loaded !== undefined) {\n      this.loaded = dump.loaded;\n    }\n    super.restore(dump, factory);\n  }\n}\n","import {suffix, IEventListener} from '../internal';\nimport Column, {widthChanged, labelChanged, metaDataChanged, dirty, dirtyHeader, dirtyValues, rendererTypeChanged, groupRendererChanged, summaryRendererChanged, visibilityChanged, dirtyCaches} from './Column';\nimport {Category, toolbar} from './annotations';\nimport {IDataRow, IColumnParent, IFlatColumn, ITypeFactory} from './interfaces';\nimport {isNumberColumn} from './INumberColumn';\nimport ValueColumn from './ValueColumn';\n\n/**\n * emitted when the filter property changes\n * @asMemberOf CompositeColumn\n * @event\n */\nexport declare function filterChanged(previous: any | null, current: any | null): void;\n\n/**\n * emitted when a column has been added\n * @asMemberOf CompositeColumn\n * @event\n */\nexport declare function addColumn(col: Column, index: number): void;\n\n/**\n * emitted when a column has been moved within this composite columm\n * @asMemberOf CompositeColumn\n * @event\n */\nexport declare function moveColumn(col: Column, index: number, oldIndex: number): void;\n\n/**\n * emitted when a column has been removed\n * @asMemberOf CompositeColumn\n * @event\n */\nexport declare function removeColumn(col: Column, index: number): void;\n\n/**\n * implementation of a combine column, standard operations how to select\n */\n@toolbar('compositeContained', 'splitCombined')\n@Category('composite')\nexport default class CompositeColumn extends Column implements IColumnParent {\n  static readonly EVENT_FILTER_CHANGED = 'filterChanged';\n  static readonly EVENT_ADD_COLUMN = 'addColumn';\n  static readonly EVENT_MOVE_COLUMN = 'moveColumn';\n  static readonly EVENT_REMOVE_COLUMN = 'removeColumn';\n\n  protected readonly _children: Column[] = [];\n\n  protected createEventList() {\n    return super.createEventList().concat([CompositeColumn.EVENT_FILTER_CHANGED, CompositeColumn.EVENT_ADD_COLUMN, CompositeColumn.EVENT_MOVE_COLUMN, CompositeColumn.EVENT_REMOVE_COLUMN]);\n  }\n\n  on(type: typeof CompositeColumn.EVENT_FILTER_CHANGED, listener: typeof filterChanged | null): this;\n  on(type: typeof CompositeColumn.EVENT_ADD_COLUMN, listener: typeof addColumn | null): this;\n  on(type: typeof CompositeColumn.EVENT_MOVE_COLUMN, listener: typeof moveColumn | null): this;\n  on(type: typeof CompositeColumn.EVENT_REMOVE_COLUMN, listener: typeof removeColumn | null): this;\n  on(type: typeof Column.EVENT_WIDTH_CHANGED, listener: typeof widthChanged | null): this;\n  on(type: typeof Column.EVENT_LABEL_CHANGED, listener: typeof labelChanged | null): this;\n  on(type: typeof Column.EVENT_METADATA_CHANGED, listener: typeof metaDataChanged | null): this;\n  on(type: typeof Column.EVENT_DIRTY, listener: typeof dirty | null): this;\n  on(type: typeof Column.EVENT_DIRTY_HEADER, listener: typeof dirtyHeader | null): this;\n  on(type: typeof Column.EVENT_DIRTY_VALUES, listener: typeof dirtyValues | null): this;\n  on(type: typeof Column.EVENT_DIRTY_CACHES, listener: typeof dirtyCaches | null): this;\n  on(type: typeof Column.EVENT_RENDERER_TYPE_CHANGED, listener: typeof rendererTypeChanged | null): this;\n  on(type: typeof Column.EVENT_GROUP_RENDERER_TYPE_CHANGED, listener: typeof groupRendererChanged | null): this;\n  on(type: typeof Column.EVENT_SUMMARY_RENDERER_TYPE_CHANGED, listener: typeof summaryRendererChanged | null): this;\n  on(type: typeof Column.EVENT_VISIBILITY_CHANGED, listener: typeof visibilityChanged | null): this;\n  on(type: string | string[], listener: IEventListener | null): this; // required for correct typings in *.d.ts\n  on(type: string | string[], listener: IEventListener | null): this {\n    return super.on(type, listener);\n  }\n\n  assignNewId(idGenerator: () => string) {\n    super.assignNewId(idGenerator);\n    this._children.forEach((c) => c.assignNewId(idGenerator));\n  }\n\n  get children() {\n    return this._children.slice();\n  }\n\n  get length() {\n    return this._children.length;\n  }\n\n  flatten(r: IFlatColumn[], offset: number, levelsToGo = 0, padding = 0) {\n    let w = 0;\n    //no more levels or just this one\n    if (levelsToGo === 0 || levelsToGo <= Column.FLAT_ALL_COLUMNS) {\n      w = this.getWidth();\n      r.push({col: this, offset, width: w});\n      if (levelsToGo === 0) {\n        return w;\n      }\n    }\n    //push children\n    this._children.forEach((c) => {\n      if (c.isVisible() && levelsToGo <= Column.FLAT_ALL_COLUMNS) {\n        c.flatten(r, offset, levelsToGo - 1, padding);\n      }\n    });\n    return w;\n  }\n\n  dump(toDescRef: (desc: any) => any) {\n    const r = super.dump(toDescRef);\n    r.children = this._children.map((d) => d.dump(toDescRef));\n    return r;\n  }\n\n  restore(dump: any, factory: ITypeFactory) {\n    dump.children.map((child: any) => {\n      const c = factory(child);\n      if (c) {\n        this.push(c);\n      }\n    });\n    super.restore(dump, factory);\n  }\n\n  /**\n   * inserts a column at a the given position\n   * @param col\n   * @param index\n   * @returns {any}\n   */\n  insert(col: Column, index: number): Column | null {\n    if (!isNumberColumn(col) && this.canJustAddNumbers) { //indicator it is a number type\n      return null;\n    }\n    this._children.splice(index, 0, col);\n    //listen and propagate events\n    return this.insertImpl(col, index);\n  }\n\n  move(col: Column, index: number): Column | null {\n    if (col.parent !== this) { //not moving\n      return null;\n    }\n    const old = this._children.indexOf(col);\n    if (index === old) {\n      // no move needed\n      return col;\n    }\n    //delete first\n    this._children.splice(old, 1);\n    // adapt target index based on previous index, i.e shift by one\n    this._children.splice(old < index ? index - 1 : index, 0, col);\n    //listen and propagate events\n    return this.moveImpl(col, index, old);\n  }\n\n  protected insertImpl(col: Column, index: number) {\n    col.attach(this);\n    this.forward(col, ...suffix('.combine', Column.EVENT_DIRTY_HEADER, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY_CACHES, Column.EVENT_DIRTY, CompositeColumn.EVENT_FILTER_CHANGED, Column.EVENT_RENDERER_TYPE_CHANGED, Column.EVENT_GROUP_RENDERER_TYPE_CHANGED));\n    this.fire([CompositeColumn.EVENT_ADD_COLUMN, Column.EVENT_DIRTY_HEADER, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY_CACHES, Column.EVENT_DIRTY], col, index);\n    return col;\n  }\n\n  protected moveImpl(col: Column, index: number, oldIndex: number) {\n    this.fire([CompositeColumn.EVENT_MOVE_COLUMN, Column.EVENT_DIRTY_HEADER, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY_CACHES, Column.EVENT_DIRTY, Column.EVENT_RENDERER_TYPE_CHANGED, Column.EVENT_GROUP_RENDERER_TYPE_CHANGED], col, index, oldIndex);\n    return col;\n  }\n\n  push(col: Column) {\n    return this.insert(col, this._children.length);\n  }\n\n  at(index: number) {\n    return this._children[index];\n  }\n\n  indexOf(col: Column) {\n    return this._children.indexOf(col);\n  }\n\n  insertAfter(col: Column, ref: Column) {\n    const i = this.indexOf(ref);\n    if (i < 0) {\n      return null;\n    }\n    return this.insert(col, i + 1);\n  }\n\n  moveAfter(col: Column, ref: Column) {\n    const i = this.indexOf(ref);\n    if (i < 0) {\n      return null;\n    }\n    return this.move(col, i + 1);\n  }\n\n\n  remove(col: Column) {\n    const i = this._children.indexOf(col);\n    if (i < 0) {\n      return false;\n    }\n    this._children.splice(i, 1); //remove and deregister listeners\n    return this.removeImpl(col, i);\n  }\n\n  protected removeImpl(col: Column, index: number) {\n    col.detach();\n    this.unforward(col, ...suffix('.combine', Column.EVENT_DIRTY_HEADER, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY_CACHES, Column.EVENT_DIRTY, CompositeColumn.EVENT_FILTER_CHANGED));\n    this.fire([CompositeColumn.EVENT_REMOVE_COLUMN, Column.EVENT_DIRTY_HEADER, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY_CACHES, Column.EVENT_DIRTY], col, index);\n    return true;\n  }\n\n  isFiltered() {\n    return this._children.some((d) => d.isFiltered());\n  }\n\n  clearFilter() {\n    return this._children.map((d) => d.clearFilter()).some((d) => d);\n  }\n\n  filter(row: IDataRow) {\n    return this._children.every((d) => d.filter(row));\n  }\n\n  isLoaded(): boolean {\n    return this._children.every((c) => !(c instanceof ValueColumn || c instanceof CompositeColumn) || (<ValueColumn<any> | CompositeColumn>c).isLoaded());\n  }\n\n  get canJustAddNumbers() {\n    return false;\n  }\n}\n","export default function(specifier) {\n  var n = specifier.length / 6 | 0, colors = new Array(n), i = 0;\n  while (i < n) colors[i] = \"#\" + specifier.slice(i * 6, ++i * 6);\n  return colors;\n}\n","import colors from \"../colors\";\n\nexport default colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n","import colors from \"../colors\";\n\nexport default colors(\"7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666\");\n","import colors from \"../colors\";\n\nexport default colors(\"1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666\");\n","import colors from \"../colors\";\n\nexport default colors(\"fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2\");\n","import colors from \"../colors\";\n\nexport default colors(\"a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928\");\n","import colors from \"../colors\";\n\nexport default colors(\"b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc\");\n","import colors from \"../colors\";\n\nexport default colors(\"e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999\");\n","import colors from \"../colors\";\n\nexport default colors(\"66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3\");\n","import colors from \"../colors\";\n\nexport default colors(\"8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f\");\n","export default function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nexport function extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n","import define, {extend} from \"./define\";\n\nexport function Color() {}\n\nexport var darker = 0.7;\nexport var brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex3 = /^#([0-9a-f]{3})$/,\n    reHex6 = /^#([0-9a-f]{6})$/,\n    reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\"),\n    reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\"),\n    reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\"),\n    reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\"),\n    reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\"),\n    reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  hex: function() {\n    return this.rgb().hex();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nexport default function color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nexport function rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nexport function rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nexport function Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  hex: function() {\n    return \"#\" + hex(this.r) + hex(this.g) + hex(this.b);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hex(value) {\n  value = Math.max(0, Math.min(255, Math.round(value) || 0));\n  return (value < 16 ? \"0\" : \"\") + value.toString(16);\n}\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nexport function hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nexport function hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n","export var deg2rad = Math.PI / 180;\nexport var rad2deg = 180 / Math.PI;\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\n// https://beta.observablehq.com/@mbostock/lab-and-rgb\nvar K = 18,\n    Xn = 0.96422,\n    Yn = 1,\n    Zn = 0.82521,\n    t0 = 4 / 29,\n    t1 = 6 / 29,\n    t2 = 3 * t1 * t1,\n    t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    if (isNaN(o.h)) return new Lab(o.l, 0, 0, o.opacity);\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = rgb2lrgb(o.r),\n      g = rgb2lrgb(o.g),\n      b = rgb2lrgb(o.b),\n      y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn), x, z;\n  if (r === g && g === b) x = z = y; else {\n    x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);\n    z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);\n  }\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nexport function gray(l, opacity) {\n  return new Lab(l, 0, 0, opacity == null ? 1 : opacity);\n}\n\nexport default function lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nexport function Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    x = Xn * lab2xyz(x);\n    y = Yn * lab2xyz(y);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      lrgb2rgb( 3.1338561 * x - 1.6168667 * y - 0.4906146 * z),\n      lrgb2rgb(-0.9787684 * x + 1.9161415 * y + 0.0334540 * z),\n      lrgb2rgb( 0.0719453 * x - 0.2289914 * y + 1.4052427 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction lrgb2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2lrgb(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  if (o.a === 0 && o.b === 0) return new Hcl(NaN, 0, o.l, o.opacity);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nexport function lch(l, c, h, opacity) {\n  return arguments.length === 1 ? hclConvert(l) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + K * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - K * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb, darker, brighter} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\nvar A = -0.14861,\n    B = +1.78277,\n    C = -0.29227,\n    D = -0.90649,\n    E = +1.97294,\n    ED = E * D,\n    EB = E * B,\n    BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nexport default function cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nexport function Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n","export function basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nexport default function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import constant from \"./constant\";\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nexport function hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n}\n\nexport function gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n  };\n}\n\nexport default function nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n}\n","import {rgb as colorRgb} from \"d3-color\";\nimport basis from \"./basis\";\nimport basisClosed from \"./basisClosed\";\nimport nogamma, {gamma} from \"./color\";\n\nexport default (function rgbGamma(y) {\n  var color = gamma(y);\n\n  function rgb(start, end) {\n    var r = color((start = colorRgb(start)).r, (end = colorRgb(end)).r),\n        g = color(start.g, end.g),\n        b = color(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb.gamma = rgbGamma;\n\n  return rgb;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color;\n    for (i = 0; i < n; ++i) {\n      color = colorRgb(colors[i]);\n      r[i] = color.r || 0;\n      g[i] = color.g || 0;\n      b[i] = color.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color.opacity = 1;\n    return function(t) {\n      color.r = r(t);\n      color.g = g(t);\n      color.b = b(t);\n      return color + \"\";\n    };\n  };\n}\n\nexport var rgbBasis = rgbSpline(basis);\nexport var rgbBasisClosed = rgbSpline(basisClosed);\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n}\n","import {basis} from \"./basis\";\n\nexport default function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","import number from \"./number\";\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n    reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nexport default function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: number(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n}\n","import decompose, {identity} from \"./decompose\";\n\nvar cssNode,\n    cssRoot,\n    cssView,\n    svgNode;\n\nexport function parseCss(value) {\n  if (value === \"none\") return identity;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nexport function parseSvg(value) {\n  if (value == null) return identity;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n","import {color} from \"d3-color\";\nimport rgb from \"./rgb\";\nimport array from \"./array\";\nimport date from \"./date\";\nimport number from \"./number\";\nimport object from \"./object\";\nimport string from \"./string\";\nimport constant from \"./constant\";\n\nexport default function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant(b)\n      : (t === \"number\" ? number\n      : t === \"string\" ? ((c = color(b)) ? (b = c, rgb) : string)\n      : b instanceof color ? rgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : number)(a, b);\n}\n","export default function(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n}\n","import value from \"./value\";\n\nexport default function(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(na),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n}\n","import value from \"./value\";\n\nexport default function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = value(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n}\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n}\n","var degrees = 180 / Math.PI;\n\nexport var identity = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nexport default function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n","import number from \"../number\";\nimport {parseCss, parseSvg} from \"./parse\";\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nexport var interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nexport var interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n","var rho = Math.SQRT2,\n    rho2 = 2,\n    rho4 = 4,\n    epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nexport default function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    }\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    }\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n}\n","import {hsl as colorHsl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hsl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHsl(start)).h, (end = colorHsl(end)).h),\n        s = color(start.s, end.s),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hsl(hue);\nexport var hslLong = hsl(color);\n","import {hcl as colorHcl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hcl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHcl(start)).h, (end = colorHcl(end)).h),\n        c = color(start.c, end.c),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hcl(hue);\nexport var hclLong = hcl(color);\n","import {cubehelix as colorCubehelix} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction cubehelix(hue) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix(start, end) {\n      var h = hue((start = colorCubehelix(start)).h, (end = colorCubehelix(end)).h),\n          s = color(start.s, end.s),\n          l = color(start.l, end.l),\n          opacity = color(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix.gamma = cubehelixGamma;\n\n    return cubehelix;\n  })(1);\n}\n\nexport default cubehelix(hue);\nexport var cubehelixLong = cubehelix(color);\n","export default function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n}\n","import {interpolateRgbBasis} from \"d3-interpolate\";\n\nexport default function(scheme) {\n  return interpolateRgbBasis(scheme[scheme.length - 1]);\n}\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"d8b365f5f5f55ab4ac\",\n  \"a6611adfc27d80cdc1018571\",\n  \"a6611adfc27df5f5f580cdc1018571\",\n  \"8c510ad8b365f6e8c3c7eae55ab4ac01665e\",\n  \"8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e\",\n  \"8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e\",\n  \"8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e\",\n  \"5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30\",\n  \"5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"af8dc3f7f7f77fbf7b\",\n  \"7b3294c2a5cfa6dba0008837\",\n  \"7b3294c2a5cff7f7f7a6dba0008837\",\n  \"762a83af8dc3e7d4e8d9f0d37fbf7b1b7837\",\n  \"762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837\",\n  \"762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837\",\n  \"762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837\",\n  \"40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b\",\n  \"40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e9a3c9f7f7f7a1d76a\",\n  \"d01c8bf1b6dab8e1864dac26\",\n  \"d01c8bf1b6daf7f7f7b8e1864dac26\",\n  \"c51b7de9a3c9fde0efe6f5d0a1d76a4d9221\",\n  \"c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221\",\n  \"c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221\",\n  \"c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221\",\n  \"8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419\",\n  \"8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"998ec3f7f7f7f1a340\",\n  \"5e3c99b2abd2fdb863e66101\",\n  \"5e3c99b2abd2f7f7f7fdb863e66101\",\n  \"542788998ec3d8daebfee0b6f1a340b35806\",\n  \"542788998ec3d8daebf7f7f7fee0b6f1a340b35806\",\n  \"5427888073acb2abd2d8daebfee0b6fdb863e08214b35806\",\n  \"5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806\",\n  \"2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08\",\n  \"2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62f7f7f767a9cf\",\n  \"ca0020f4a58292c5de0571b0\",\n  \"ca0020f4a582f7f7f792c5de0571b0\",\n  \"b2182bef8a62fddbc7d1e5f067a9cf2166ac\",\n  \"b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac\",\n  \"b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac\",\n  \"b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac\",\n  \"67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061\",\n  \"67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62ffffff999999\",\n  \"ca0020f4a582bababa404040\",\n  \"ca0020f4a582ffffffbababa404040\",\n  \"b2182bef8a62fddbc7e0e0e09999994d4d4d\",\n  \"b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d\",\n  \"b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d\",\n  \"b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d\",\n  \"67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a\",\n  \"67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91bfdb\",\n  \"d7191cfdae61abd9e92c7bb6\",\n  \"d7191cfdae61ffffbfabd9e92c7bb6\",\n  \"d73027fc8d59fee090e0f3f891bfdb4575b4\",\n  \"d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4\",\n  \"d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4\",\n  \"d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4\",\n  \"a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695\",\n  \"a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91cf60\",\n  \"d7191cfdae61a6d96a1a9641\",\n  \"d7191cfdae61ffffbfa6d96a1a9641\",\n  \"d73027fc8d59fee08bd9ef8b91cf601a9850\",\n  \"d73027fc8d59fee08bffffbfd9ef8b91cf601a9850\",\n  \"d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850\",\n  \"d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850\",\n  \"a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837\",\n  \"a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf99d594\",\n  \"d7191cfdae61abdda42b83ba\",\n  \"d7191cfdae61ffffbfabdda42b83ba\",\n  \"d53e4ffc8d59fee08be6f59899d5943288bd\",\n  \"d53e4ffc8d59fee08bffffbfe6f59899d5943288bd\",\n  \"d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd\",\n  \"d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd\",\n  \"9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2\",\n  \"9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5f999d8c92ca25f\",\n  \"edf8fbb2e2e266c2a4238b45\",\n  \"edf8fbb2e2e266c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e0ecf49ebcda8856a7\",\n  \"edf8fbb3cde38c96c688419d\",\n  \"edf8fbb3cde38c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e0f3dba8ddb543a2ca\",\n  \"f0f9e8bae4bc7bccc42b8cbe\",\n  \"f0f9e8bae4bc7bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee8c8fdbb84e34a33\",\n  \"fef0d9fdcc8afc8d59d7301f\",\n  \"fef0d9fdcc8afc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ece2f0a6bddb1c9099\",\n  \"f6eff7bdc9e167a9cf02818a\",\n  \"f6eff7bdc9e167a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ece7f2a6bddb2b8cbe\",\n  \"f1eef6bdc9e174a9cf0570b0\",\n  \"f1eef6bdc9e174a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e7e1efc994c7dd1c77\",\n  \"f1eef6d7b5d8df65b0ce1256\",\n  \"f1eef6d7b5d8df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fde0ddfa9fb5c51b8a\",\n  \"feebe2fbb4b9f768a1ae017e\",\n  \"feebe2fbb4b9f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"edf8b17fcdbb2c7fb8\",\n  \"ffffcca1dab441b6c4225ea8\",\n  \"ffffcca1dab441b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"f7fcb9addd8e31a354\",\n  \"ffffccc2e69978c679238443\",\n  \"ffffccc2e69978c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fff7bcfec44fd95f0e\",\n  \"ffffd4fed98efe9929cc4c02\",\n  \"ffffd4fed98efe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ffeda0feb24cf03b20\",\n  \"ffffb2fecc5cfd8d3ce31a1c\",\n  \"ffffb2fecc5cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"deebf79ecae13182bd\",\n  \"eff3ffbdd7e76baed62171b5\",\n  \"eff3ffbdd7e76baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5e0a1d99b31a354\",\n  \"edf8e9bae4b374c476238b45\",\n  \"edf8e9bae4b374c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"f0f0f0bdbdbd636363\",\n  \"f7f7f7cccccc969696525252\",\n  \"f7f7f7cccccc969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"efedf5bcbddc756bb1\",\n  \"f2f0f7cbc9e29e9ac86a51a3\",\n  \"f2f0f7cbc9e29e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee0d2fc9272de2d26\",\n  \"fee5d9fcae91fb6a4acb181d\",\n  \"fee5d9fcae91fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee6cefdae6be6550d\",\n  \"feeddefdbe85fd8d3cd94701\",\n  \"feeddefdbe85fd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704\"\n).map(colors);\n\nexport default ramp(scheme);\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport default interpolateCubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport var warm = interpolateCubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nexport var cool = interpolateCubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar c = cubehelix();\n\nexport default function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  c.h = 360 * t - 100;\n  c.s = 1.5 - 1.5 * ts;\n  c.l = 0.8 - 0.9 * ts;\n  return c + \"\";\n}\n","import {rgb} from \"d3-color\";\n\nvar c = rgb(),\n    pi_1_3 = Math.PI / 3,\n    pi_2_3 = Math.PI * 2 / 3;\n\nexport default function(t) {\n  var x;\n  t = (0.5 - t) * Math.PI;\n  c.r = 255 * (x = Math.sin(t)) * x;\n  c.g = 255 * (x = Math.sin(t + pi_1_3)) * x;\n  c.b = 255 * (x = Math.sin(t + pi_2_3)) * x;\n  return c + \"\";\n}\n","import colors from \"../colors\";\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nexport default ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nexport var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nexport var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nexport var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n","/**\n * a set that preserves the insertion order\n * @internal\n */\nexport default class OrderedSet<T> implements Iterable<T> {\n  readonly [Symbol.toStringTag] = Symbol('OrderedSet');\n  private readonly set = new Set<T>();\n  private readonly list = <T[]>[];\n\n  constructor(values: Iterable<T> = []) {\n    this.addAll(Array.isArray(values) ? values : Array.from(values));\n  }\n\n  get size() {\n    return this.set.size;\n  }\n\n  clear() {\n    this.set.clear();\n    this.list.splice(0, this.list.length);\n  }\n\n  addAll(values: T[]) {\n    values.forEach((v) => this.add(v));\n    return this;\n  }\n\n  add(value: T) {\n    if (this.set.has(value)) {\n      return this;\n    }\n    this.set.add(value);\n    this.list.push(value);\n    return this;\n  }\n\n  has(value: T) {\n    return this.set.has(value);\n  }\n\n  delete(value: T) {\n    const r = this.set.delete(value);\n    if (!r) {\n      return false;\n    }\n    const index = this.list.indexOf(value);\n    console.assert(index >= 0);\n    this.list.splice(index, 1);\n    return true;\n  }\n\n  deleteAll(values: T[]) {\n    return values.reduce((acc, act) => this.delete(act) && acc, true);\n  }\n\n  forEach(callbackfn: (value: T, value2: T, set: Set<T>) => void, thisArg?: any) {\n    this.list.forEach(function (this: any, v: T) {\n      callbackfn.call(this, v, v, <any>this);\n    }, thisArg);\n  }\n\n  [Symbol.iterator]() {\n    return this.list[Symbol.iterator]();\n  }\n}\n","import {schemeCategory10, schemeSet3} from 'd3-scale-chromatic';\nimport Column, {defaultGroup, IGroup, IGroupParent, IndicesArray, IOrderedGroup, ECompareValueType} from '.';\nimport {OrderedSet} from '../internal';\nimport {DEFAULT_COLOR} from './interfaces';\n\n\n/** @internal */\nexport function patternFunction(pattern: string, ...args: string[]) {\n  return new Function('value', ...args, `\n  const escapedValue = encodeURIComponent(String(value));\n  return \\`${pattern}\\`;\n `);\n}\n\n\n/** @internal */\nexport function joinGroups(groups: IGroup[]): IGroup {\n  if (groups.length === 0) {\n    return {...defaultGroup}; //copy\n  }\n  if (groups.length === 1 && !groups[0].parent) {\n    return {...groups[0]}; //copy\n  }\n  // create a chain\n  const parents: IGroupParent[] = [];\n  for (const group of groups) {\n    const gparents: IGroupParent[] = [];\n    let g = group;\n    while (g.parent) {\n      // add all parents of this groups\n      gparents.unshift(g.parent);\n      g = g.parent;\n    }\n    parents.push(...gparents);\n    parents.push(Object.assign({subGroups: []}, group));\n  }\n  parents.slice(1).forEach((g, i) => {\n    g.parent = parents[i];\n    g.name = `${parents[i].name} ∩ ${g.name}`;\n    g.color = g.color !== DEFAULT_COLOR ? g.color : g.parent.color;\n    parents[i].subGroups = [g];\n  });\n\n  return parents[parents.length - 1];\n}\n\nexport function duplicateGroup<T extends IOrderedGroup | IGroupParent>(group: T) {\n  const clone = <T>Object.assign({}, group);\n  delete (<IOrderedGroup>clone).order;\n  if (isGroupParent(<any>clone)) {\n    (<any>clone).subGroups = [];\n  }\n  if (clone.parent) {\n    clone.parent = duplicateGroup(clone.parent);\n    clone.parent!.subGroups.push(clone);\n  }\n  return clone;\n}\n\n/** @internal */\nexport function toGroupID(group: IGroup) {\n  return group.name;\n}\n\n/** @internal */\nexport function isOrderedGroup(g: IOrderedGroup | Readonly<IGroupParent>): g is IOrderedGroup {\n  return (<IOrderedGroup>g).order != null;\n}\n\n\n/** @internal */\nfunction isGroupParent(g: IOrderedGroup | Readonly<IGroupParent>): g is IGroupParent {\n  return (<IGroupParent>g).subGroups != null;\n}\n\n/**\n * unify the parents of the given groups by reusing the same group parent if possible\n * @param groups\n */\nexport function unifyParents<T extends IOrderedGroup>(groups: T[]) {\n  if (groups.length <= 1) {\n    return groups;\n  }\n\n  const toPath = (group: T) => {\n    const path: (IGroupParent | T)[] = [group];\n    let p = group.parent;\n    while (p) {\n      path.unshift(p);\n      p = p.parent;\n    }\n    return path;\n  };\n  const paths = groups.map(toPath);\n\n  const isSame = (a: IGroupParent, b: (IGroupParent | T)) => {\n    return (b.name === a.name && b.parent === a.parent && isGroupParent(b) && b.subGroups.length > 0);\n  };\n\n  const removeDuplicates = (level: (IGroupParent | T)[], i: number) => {\n    const real: (IGroupParent | T)[] = [];\n    while (level.length > 0) {\n      const node = level.shift()!;\n      if (!isGroupParent(node) || node.subGroups.length === 0) { // cannot share leaves\n        real.push(node);\n        continue;\n      }\n      const root = {...node};\n      real.push(root);\n      // remove duplicates that directly follow\n      while (level.length > 0 && isSame(root, level[0]!)) {\n        root.subGroups.push(...(<IGroupParent>level.shift()!).subGroups);\n      }\n      for (const child of root.subGroups) {\n        (<(IGroupParent | T)>child).parent = root;\n      }\n      // cleanup children duplicates\n      root.subGroups = removeDuplicates(<(IGroupParent | T)[]>root.subGroups, i + 1);\n    }\n    return real;\n  };\n\n  removeDuplicates(paths.map((p) => p[0]), 0);\n\n  return groups;\n}\n\n/** @internal */\nexport function groupRoots(groups: IOrderedGroup[]) {\n  const roots = new OrderedSet<IOrderedGroup | Readonly<IGroupParent>>();\n  for (const group of groups) {\n    let root: IOrderedGroup | Readonly<IGroupParent> = group;\n    while (root.parent) {\n      root = root.parent;\n    }\n    roots.add(root);\n  }\n  return Array.from(roots);\n}\n\n\n// based on https://github.com/d3/d3-scale-chromatic#d3-scale-chromatic\nconst colors = schemeCategory10.concat(schemeSet3);\n\n/** @internal */\nexport const MAX_COLORS = colors.length;\n\n/** @internal */\nexport function colorPool() {\n  let act = 0;\n  return () => colors[(act++) % colors.length];\n}\n\n\n/**\n * @internal\n */\nexport function mapIndices<T>(arr: IndicesArray, callback: (value: number, i: number) => T): T[] {\n  const r: T[] = [];\n  for (let i = 0; i < arr.length; ++i) {\n    r.push(callback(arr[i], i));\n  }\n  return r;\n}\n\n/**\n * @internal\n */\nexport function everyIndices(arr: IndicesArray, callback: (value: number, i: number) => boolean): boolean {\n  for (let i = 0; i < arr.length; ++i) {\n    if (!callback(arr[i], i)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @internal\n */\nexport function filterIndices(arr: IndicesArray, callback: (value: number, i: number) => boolean): number[] {\n  const r: number[] = [];\n  for (let i = 0; i < arr.length; ++i) {\n    if (callback(arr[i], i)) {\n      r.push(arr[i]);\n    }\n  }\n  return r;\n}\n\n\n/**\n * @internal\n */\nexport function forEachIndices(arr: IndicesArray, callback: (value: number, i: number) => void) {\n  for (let i = 0; i < arr.length; ++i) {\n    callback(arr[i], i);\n  }\n}\n\n/**\n * @internal\n */\nexport function chooseUIntByDataLength(dataLength?: number | null) {\n  if (dataLength == null || typeof dataLength !== 'number' && !isNaN(dataLength)) {\n    return ECompareValueType.UINT32; // worst case\n  }\n  if (length <= 255) {\n    return ECompareValueType.UINT8;\n  }\n  if (length <= 65535) {\n    return ECompareValueType.UINT16;\n  }\n  return ECompareValueType.UINT32;\n}\n\n\n// side effect\nconst cache = new Map<string, string[]>();\n\n\nexport function getAllToolbarActions(col: Column) {\n  if (cache.has(col.desc.type)) {\n    return cache.get(col.desc.type)!;\n  }\n  const actions = new OrderedSet<string>();\n\n  // walk up the prototype chain\n  let obj = <any>col;\n  const toolbarIcon = Symbol.for('toolbarIcon');\n  do {\n    const m = <string[]>Reflect.getOwnMetadata(toolbarIcon, obj.constructor);\n    if (m) {\n      for (const mi of m) {\n        actions.add(mi);\n      }\n    }\n    obj = Object.getPrototypeOf(obj);\n  } while (obj);\n  const arr = Array.from(actions);\n  cache.set(col.desc.type, arr);\n  return arr;\n}\n\n\nexport function getAllToolbarDialogAddons(col: Column, key: string) {\n  const cacheKey = `${col.desc.type}@${key}`;\n  if (cache.has(cacheKey)) {\n    return cache.get(cacheKey)!;\n  }\n  const actions = new OrderedSet<string>();\n\n  // walk up the prototype chain\n  let obj = <any>col;\n  const symbol = Symbol.for(`toolbarDialogAddon${key}`);\n  do {\n    const m = <string[]>Reflect.getOwnMetadata(symbol, obj.constructor);\n    if (m) {\n      for (const mi of m) {\n        actions.add(mi);\n      }\n    }\n    obj = Object.getPrototypeOf(obj);\n  } while (obj);\n  cache.set(cacheKey, Array.from(actions));\n  const arr = Array.from(actions);\n  cache.set(cacheKey, arr);\n  return arr;\n}\n","import {equalArrays, fixCSS, IEventListener, suffix, joinIndexArrays, AEventDispatcher} from '../internal';\nimport {isSortingAscByDefault} from './annotations';\nimport Column, {dirty, dirtyCaches, dirtyHeader, dirtyValues, labelChanged, visibilityChanged, widthChanged} from './Column';\nimport CompositeColumn from './CompositeColumn';\nimport {IRankingDump, defaultGroup, IndicesArray, IOrderedGroup, IDataRow, IColumnParent, IFlatColumn, ISortCriteria, UIntTypedArray, IGroupParent, ITypeFactory} from './interfaces';\nimport {groupRoots} from './internal';\n\nexport enum EDirtyReason {\n  UNKNOWN = 'unknown',\n  FILTER_CHANGED = 'filter',\n  SORT_CRITERIA_CHANGED = 'sort_changed',\n  SORT_CRITERIA_DIRTY = 'sort_dirty',\n  GROUP_CRITERIA_CHANGED = 'group_changed',\n  GROUP_CRITERIA_DIRTY = 'group_dirty',\n  GROUP_SORT_CRITERIA_CHANGED = 'group_sort_changed',\n  GROUP_SORT_CRITERIA_DIRTY = 'group_sort_dirty'\n}\n\n\n/**\n * emitted when a column has been added\n * @asMemberOf Ranking\n * @event\n */\nexport declare function addColumn(col: Column, index: number): void;\n\n/**\n * emitted when a column has been moved within this composite columm\n * @asMemberOf Ranking\n * @event\n */\nexport declare function moveColumn(col: Column, index: number, oldIndex: number): void;\n\n/**\n * emitted when a column has been removed\n * @asMemberOf Ranking\n * @event\n */\nexport declare function removeColumn(col: Column, index: number): void;\n/**\n * emitted when the sort criteria propery changes\n * @asMemberOf Ranking\n * @event\n */\nexport declare function sortCriteriaChanged(previous: ISortCriteria[], current: ISortCriteria[]): void;\n/**\n * emitted when the sort criteria propery changes\n * @asMemberOf Ranking\n * @event\n */\nexport declare function groupCriteriaChanged(previous: Column[], current: Column[]): void;\n/**\n * emitted when the sort criteria propery changes\n * @asMemberOf Ranking\n * @event\n */\nexport declare function groupSortCriteriaChanged(previous: ISortCriteria[], current: ISortCriteria[]): void;\n/**\n * emitted when the sort criteria propery changes\n * @asMemberOf Ranking\n * @event\n */\nexport declare function dirtyOrder(reason?: EDirtyReason[]): void;\n/**\n * @asMemberOf Ranking\n * @event\n */\nexport declare function orderChanged(previous: number[], current: number[], previousGroups: IOrderedGroup[], currentGroups: IOrderedGroup[], dirtyReason: EDirtyReason[]): void;\n/**\n * @asMemberOf Ranking\n * @event\n */\nexport declare function groupsChanged(previous: number[], current: number[], previousGroups: IOrderedGroup[], currentGroups: IOrderedGroup[]): void;\n\n/**\n * emitted when the filter property changes\n * @asMemberOf NumberColumn\n * @event\n */\nexport declare function filterChanged(previous: any | null, current: any | null): void;\n/**\n * a ranking\n */\nexport default class Ranking extends AEventDispatcher implements IColumnParent {\n  static readonly EVENT_WIDTH_CHANGED = Column.EVENT_WIDTH_CHANGED;\n  static readonly EVENT_FILTER_CHANGED = 'filterChanged';\n  static readonly EVENT_LABEL_CHANGED = Column.EVENT_LABEL_CHANGED;\n  static readonly EVENT_ADD_COLUMN = CompositeColumn.EVENT_ADD_COLUMN;\n  static readonly EVENT_MOVE_COLUMN = CompositeColumn.EVENT_MOVE_COLUMN;\n  static readonly EVENT_REMOVE_COLUMN = CompositeColumn.EVENT_REMOVE_COLUMN;\n  static readonly EVENT_DIRTY = Column.EVENT_DIRTY;\n  static readonly EVENT_DIRTY_HEADER = Column.EVENT_DIRTY_HEADER;\n  static readonly EVENT_DIRTY_VALUES = Column.EVENT_DIRTY_VALUES;\n  static readonly EVENT_DIRTY_CACHES = Column.EVENT_DIRTY_CACHES;\n  static readonly EVENT_COLUMN_VISIBILITY_CHANGED = Column.EVENT_VISIBILITY_CHANGED;\n  static readonly EVENT_SORT_CRITERIA_CHANGED = 'sortCriteriaChanged';\n  static readonly EVENT_GROUP_CRITERIA_CHANGED = 'groupCriteriaChanged';\n  static readonly EVENT_GROUP_SORT_CRITERIA_CHANGED = 'groupSortCriteriaChanged';\n  static readonly EVENT_DIRTY_ORDER = 'dirtyOrder';\n  static readonly EVENT_ORDER_CHANGED = 'orderChanged';\n  static readonly EVENT_GROUPS_CHANGED = 'groupsChanged';\n\n  private static readonly FORWARD_COLUMN_EVENTS = suffix('.ranking', Column.EVENT_VISIBILITY_CHANGED, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY_CACHES, Column.EVENT_DIRTY_HEADER, Column.EVENT_DIRTY, Column.EVENT_VISIBILITY_CHANGED, Ranking.EVENT_FILTER_CHANGED);\n  private static readonly COLUMN_GROUP_SORT_DIRTY = suffix('.groupOrder', Column.EVENT_DIRTY_CACHES, 'sortMethodChanged');\n  private static readonly COLUMN_SORT_DIRTY = suffix('.order', Column.EVENT_DIRTY_CACHES);\n  private static readonly COLUMN_GROUP_DIRTY = suffix('.group', Column.EVENT_DIRTY_CACHES, 'groupingChanged');\n\n\n  private label: string;\n\n  private readonly sortCriteria: ISortCriteria[] = [];\n  private readonly groupColumns: Column[] = [];\n  private readonly groupSortCriteria: ISortCriteria[] = [];\n\n  /**\n   * columns of this ranking\n   * @type {Array}\n   * @private\n   */\n  private readonly columns: Column[] = [];\n\n  readonly dirtyOrder = (reason?: EDirtyReason[]) => {\n    this.fire([Ranking.EVENT_DIRTY_ORDER, Ranking.EVENT_DIRTY_VALUES, Ranking.EVENT_DIRTY], reason);\n  };\n  private readonly dirtyOrderSortDirty = () => this.dirtyOrder([EDirtyReason.SORT_CRITERIA_DIRTY]);\n  private readonly dirtyOrderGroupDirty = () => this.dirtyOrder([EDirtyReason.GROUP_CRITERIA_DIRTY]);\n  private readonly dirtyOrderGroupSortDirty = () => this.dirtyOrder([EDirtyReason.GROUP_SORT_CRITERIA_DIRTY]);\n  private readonly dirtyOrderFiltering = () => this.dirtyOrder([EDirtyReason.FILTER_CHANGED]);\n\n  /**\n   * the current ordering as an sorted array of indices\n   * @type {Array}\n   */\n  private groups: IOrderedGroup[] = [Object.assign({order: <number[]>[]}, defaultGroup)];\n  private order: IndicesArray = [];\n  private index2pos: IndicesArray = [];\n\n  constructor(public id: string) {\n    super();\n    this.id = fixCSS(id);\n    this.label = `Ranking ${id.startsWith('rank') ? id.slice(4) : id}`;\n  }\n\n  protected createEventList() {\n    return super.createEventList().concat([\n      Ranking.EVENT_WIDTH_CHANGED, Ranking.EVENT_FILTER_CHANGED,\n      Ranking.EVENT_LABEL_CHANGED, Ranking.EVENT_GROUPS_CHANGED,\n      Ranking.EVENT_ADD_COLUMN, Ranking.EVENT_REMOVE_COLUMN, Ranking.EVENT_GROUP_CRITERIA_CHANGED, Ranking.EVENT_MOVE_COLUMN,\n      Ranking.EVENT_DIRTY, Ranking.EVENT_DIRTY_HEADER, Ranking.EVENT_DIRTY_VALUES, Ranking.EVENT_DIRTY_CACHES,\n      Ranking.EVENT_GROUP_SORT_CRITERIA_CHANGED, Ranking.EVENT_COLUMN_VISIBILITY_CHANGED,\n      Ranking.EVENT_SORT_CRITERIA_CHANGED, Ranking.EVENT_DIRTY_ORDER, Ranking.EVENT_ORDER_CHANGED]);\n  }\n\n  on(type: typeof Ranking.EVENT_WIDTH_CHANGED, listener: typeof widthChanged | null): this;\n  on(type: typeof Ranking.EVENT_FILTER_CHANGED, listener: typeof filterChanged | null): this;\n  on(type: typeof Ranking.EVENT_LABEL_CHANGED, listener: typeof labelChanged | null): this;\n  on(type: typeof Ranking.EVENT_ADD_COLUMN, listener: typeof addColumn | null): this;\n  on(type: typeof Ranking.EVENT_MOVE_COLUMN, listener: typeof moveColumn | null): this;\n  on(type: typeof Ranking.EVENT_REMOVE_COLUMN, listener: typeof removeColumn | null): this;\n  on(type: typeof Ranking.EVENT_DIRTY, listener: typeof dirty | null): this;\n  on(type: typeof Ranking.EVENT_DIRTY_HEADER, listener: typeof dirtyHeader | null): this;\n  on(type: typeof Ranking.EVENT_DIRTY_VALUES, listener: typeof dirtyValues | null): this;\n  on(type: typeof Ranking.EVENT_DIRTY_CACHES, listener: typeof dirtyCaches | null): this;\n  on(type: typeof Ranking.EVENT_COLUMN_VISIBILITY_CHANGED, listener: typeof visibilityChanged | null): this;\n  on(type: typeof Ranking.EVENT_SORT_CRITERIA_CHANGED, listener: typeof sortCriteriaChanged | null): this;\n  on(type: typeof Ranking.EVENT_GROUP_CRITERIA_CHANGED, listener: typeof groupCriteriaChanged | null): this;\n  on(type: typeof Ranking.EVENT_GROUP_SORT_CRITERIA_CHANGED, listener: typeof groupSortCriteriaChanged | null): this;\n  on(type: typeof Ranking.EVENT_DIRTY_ORDER, listener: typeof dirtyOrder | null): this;\n  on(type: typeof Ranking.EVENT_ORDER_CHANGED, listener: typeof orderChanged | null): this;\n  on(type: typeof Ranking.EVENT_GROUPS_CHANGED, listener: typeof groupsChanged | null): this;\n  on(type: string | string[], listener: IEventListener | null): this; // required for correct typings in *.d.ts\n  on(type: string | string[], listener: IEventListener | null): this {\n    return super.on(type, listener);\n  }\n\n  assignNewId(idGenerator: () => string) {\n    this.id = fixCSS(idGenerator());\n    this.columns.forEach((c) => c.assignNewId(idGenerator));\n  }\n\n  getLabel() {\n    return this.label;\n  }\n\n  setLabel(value: string) {\n    if (value === this.label) {\n      return;\n    }\n    this.fire(Ranking.EVENT_LABEL_CHANGED, this.label, this.label = value);\n  }\n\n  setGroups(groups: IOrderedGroup[], index2pos: IndicesArray, dirtyReason: EDirtyReason[]) {\n    const old = this.order;\n    const oldGroups = this.groups;\n    this.groups = groups;\n    this.index2pos = index2pos;\n    this.order = joinIndexArrays(groups.map((d) => d.order));\n    // replace with subarrays to save memory\n    if (groups.length > 1) {\n      this.unifyGroups(groups);\n    } else if (groups.length === 1) {\n      // propagate to the top\n      let p = groups[0].parent;\n      while (p) {\n        (<IOrderedGroup><any>p).order = this.order;\n        p = p.parent;\n      }\n    }\n    this.fire([Ranking.EVENT_ORDER_CHANGED, Ranking.EVENT_GROUPS_CHANGED, Ranking.EVENT_DIRTY_VALUES, Ranking.EVENT_DIRTY], old, this.order, oldGroups, groups, dirtyReason);\n  }\n\n  private unifyGroups(groups: IOrderedGroup[]) {\n    let offset = 0;\n    const order = <UIntTypedArray>this.order;\n    const offsets = new Map<Readonly<IGroupParent> | IOrderedGroup, {\n      offset: number;\n      size: number;\n    }>();\n    for (const group of groups) {\n      const size = group.order.length;\n      group.order = order.subarray(offset, offset + size);\n      offsets.set(group, {offset, size});\n      offset += size;\n    }\n    // propgate also to the top with views\n    const roots = groupRoots(groups);\n    const resolve = (g: Readonly<IGroupParent> | IOrderedGroup): {\n      offset: number;\n      size: number;\n    } => {\n      if (offsets.has(g)) { // leaf\n        return offsets.get(g)!;\n      }\n      const subs = (<IGroupParent>g).subGroups.map((gi) => resolve(<Readonly<IGroupParent> | IOrderedGroup>gi));\n      const offset = subs.length > 0 ? subs[0].offset : 0;\n      const size = subs.reduce((a, b) => a + b.size, 0);\n      const r = {offset, size};\n      offsets.set(g, r);\n      (<IOrderedGroup><any>g).order = order.subarray(offset, offset + size);\n      return r;\n    };\n    for (const root of roots) {\n      resolve(root);\n    }\n  }\n\n  getRank(dataIndex: number) {\n    if (dataIndex < 0 || dataIndex > this.index2pos.length) {\n      return -1;\n    }\n    const v = this.index2pos[dataIndex];\n    return v != null && !isNaN(v) && v > 0 ? v : -1;\n  }\n\n  getOrder() {\n    return this.order;\n  }\n\n  getOrderLength() {\n    return this.order.length;\n  }\n\n  getGroups() {\n    return this.groups.slice();\n  }\n\n  dump(toDescRef: (desc: any) => any): IRankingDump {\n    const r: IRankingDump = {};\n    r.columns = this.columns.map((d) => d.dump(toDescRef));\n    r.sortCriteria = this.sortCriteria.map((s) => ({asc: s.asc, sortBy: s.col!.id}));\n    r.groupSortCriteria = this.groupSortCriteria.map((s) => ({asc: s.asc, sortBy: s.col!.id}));\n    r.groupColumns = this.groupColumns.map((d) => d.id);\n    return r;\n  }\n\n  restore(dump: IRankingDump, factory: ITypeFactory) {\n    this.clear();\n    (dump.columns || []).map((child: any) => {\n      const c = factory(child);\n      if (c) {\n        this.push(c);\n      }\n    });\n    // compatibility case\n    if (dump.sortColumn && dump.sortColumn.sortBy) {\n      const help = this.columns.find((d) => d.id === dump.sortColumn!.sortBy);\n      if (help) {\n        this.sortBy(help, dump.sortColumn.asc);\n      }\n    }\n    if (dump.groupColumns) {\n      const groupColumns = <Column[]>dump.groupColumns.map((id: string) => this.columns.find((d) => d.id === id)).filter((d) => d != null);\n      this.setGroupCriteria(groupColumns);\n    }\n\n    const restoreSortCriteria = (dumped: any) => {\n      return dumped.map((s: {asc: boolean, sortBy: string}) => {\n        return {\n          asc: s.asc,\n          col: this.columns.find((d) => d.id === s.sortBy) || null\n        };\n      }).filter((s: any) => s.col);\n    };\n\n    if (dump.sortCriteria) {\n      this.setSortCriteria(restoreSortCriteria(dump.sortCriteria));\n    }\n\n    if (dump.groupSortCriteria) {\n      this.setGroupSortCriteria(restoreSortCriteria(dump.groupSortCriteria));\n    }\n  }\n\n  flatten(r: IFlatColumn[], offset: number, levelsToGo = 0, padding = 0) {\n    let acc = offset; // + this.getWidth() + padding;\n    if (levelsToGo > 0 || levelsToGo <= Column.FLAT_ALL_COLUMNS) {\n      this.columns.forEach((c) => {\n        if (c.getVisible() && levelsToGo <= Column.FLAT_ALL_COLUMNS) {\n          acc += c.flatten(r, acc, levelsToGo - 1, padding) + padding;\n        }\n      });\n    }\n    return acc - offset;\n  }\n\n  getPrimarySortCriteria(): ISortCriteria | null {\n    if (this.sortCriteria.length === 0) {\n      return null;\n    }\n    return this.sortCriteria[0];\n  }\n\n  getSortCriteria(): ISortCriteria[] {\n    return this.sortCriteria.map((d) => Object.assign({}, d));\n  }\n\n  getGroupSortCriteria(): ISortCriteria[] {\n    return this.groupSortCriteria.map((d) => Object.assign({}, d));\n  }\n\n  toggleSorting(col: Column) {\n    return this.setSortCriteria(this.toggleSortingLogic(col, this.sortCriteria));\n  }\n\n  private toggleSortingLogic(col: Column, sortCriteria: ISortCriteria[]) {\n    const newSort = sortCriteria.slice();\n    const current = newSort.findIndex((d) => d.col === col);\n    const defaultAsc = isSortingAscByDefault(col);\n\n    if (current < 0) {\n      newSort.splice(0, newSort.length, {col, asc: defaultAsc});\n    } else if (newSort[current].asc === defaultAsc) {\n      // asc -> desc, or desc -> asc\n      newSort.splice(current, 1, {col, asc: !defaultAsc});\n    } else {\n      // remove\n      newSort.splice(current, 1);\n    }\n    return newSort;\n  }\n\n  toggleGrouping(col: Column) {\n    const old = this.groupColumns.indexOf(col);\n    if (old >= 0) {\n      const newGroupings = this.groupColumns.slice();\n      newGroupings.splice(old, 1);\n      return this.setGroupCriteria(newGroupings);\n    }\n    return this.setGroupCriteria([col]);\n  }\n\n  getGroupCriteria() {\n    return this.groupColumns.slice();\n  }\n\n  /**\n   * replaces, moves, or remove the given column in the sorting hierarchy\n   * @param col {Column}\n   * @param priority {number} when priority < 0 remove the column only else replace at the given priority\n   */\n  sortBy(col: Column, ascending: boolean = false, priority: number = 0) {\n    if (col.findMyRanker() !== this) {\n      return false; //not one of mine\n    }\n    return this.setSortCriteria(this.hierarchyLogic(this.sortCriteria, this.sortCriteria.findIndex((d) => d.col === col), {col, asc: ascending}, priority));\n  }\n\n  /**\n   * replaces, moves, or remove the given column in the group sorting hierarchy\n   * @param col {Column}\n   * @param priority {number} when priority < 0 remove the column only else replace at the given priority\n   */\n  groupSortBy(col: Column, ascending: boolean = false, priority: number = 0) {\n    if (col.findMyRanker() !== this) {\n      return false; //not one of mine\n    }\n    return this.setGroupSortCriteria(this.hierarchyLogic(this.groupSortCriteria, this.groupSortCriteria.findIndex((d) => d.col === col), {col, asc: ascending}, priority));\n  }\n\n  private hierarchyLogic<T>(entries: T[], index: number, entry: T, priority: number) {\n    entries = entries.slice();\n    if (index >= 0) {\n      // move at the other position\n      entries.splice(index, 1);\n      if (priority >= 0) {\n        entries.splice(Math.min(priority, entries.length), 0, entry);\n      }\n    } else if (priority >= 0) {\n      entries[Math.min(priority, entries.length)] = entry;\n    }\n    return entries;\n  }\n\n  /**\n   * replaces, moves, or remove the given column in the grouping hierarchy\n   * @param col {Column}\n   * @param priority {number} when priority < 0 remove the column only else replace at the given priority\n   */\n  groupBy(col: Column, priority: number = 0): boolean {\n    if (col.findMyRanker() !== this) {\n      return false; //not one of mine\n    }\n    return this.setGroupCriteria(this.hierarchyLogic(this.groupColumns, this.groupColumns.indexOf(col), col, priority));\n  }\n\n  setSortCriteria(value: ISortCriteria | ISortCriteria[]) {\n    const values = Array.isArray(value) ? value.slice() : [value];\n    const bak = this.sortCriteria.slice();\n\n    if (equalCriteria(values, bak)) {\n      return false;\n    }\n\n    // update listener\n    bak.forEach((d) => {\n      d.col.on(Ranking.COLUMN_SORT_DIRTY, null!);\n    });\n\n    values.forEach((d) => {\n      d.col.on(Ranking.COLUMN_SORT_DIRTY, this.dirtyOrderSortDirty);\n    });\n    this.sortCriteria.splice(0, this.sortCriteria.length, ...values.slice());\n    this.triggerResort(bak);\n    return true;\n  }\n\n  setGroupCriteria(column: Column[] | Column) {\n    const cols = Array.isArray(column) ? column : [column];\n\n    if (equalArrays(this.groupColumns, cols)) {\n      return true; //same\n    }\n    this.groupColumns.forEach((groupColumn) => {\n      groupColumn.on(Ranking.COLUMN_GROUP_DIRTY, null);\n    });\n\n    const bak = this.groupColumns.slice();\n    this.groupColumns.splice(0, this.groupColumns.length, ...cols);\n\n    this.groupColumns.forEach((groupColumn) => {\n      groupColumn.on(Ranking.COLUMN_GROUP_DIRTY, this.dirtyOrderGroupDirty);\n    });\n\n    this.fire([Ranking.EVENT_GROUP_CRITERIA_CHANGED, Ranking.EVENT_DIRTY_ORDER, Ranking.EVENT_DIRTY_HEADER,\n    Ranking.EVENT_DIRTY_VALUES, Ranking.EVENT_DIRTY_CACHES, Ranking.EVENT_DIRTY], bak, this.getGroupCriteria());\n    return true;\n  }\n\n  toggleGroupSorting(col: Column) {\n    return this.setGroupSortCriteria(this.toggleSortingLogic(col, this.groupSortCriteria));\n  }\n\n  setGroupSortCriteria(value: ISortCriteria | ISortCriteria[]) {\n    const values = Array.isArray(value) ? value.slice() : [value];\n    const bak = this.groupSortCriteria.slice();\n\n    if (equalCriteria(values, bak)) {\n      return false;\n    }\n\n    bak.forEach((d) => {\n      d.col.on(Ranking.COLUMN_GROUP_SORT_DIRTY, null!);\n    });\n\n    values.forEach((d) => {\n      d.col.on(Ranking.COLUMN_GROUP_SORT_DIRTY, this.dirtyOrderGroupSortDirty);\n    });\n    this.groupSortCriteria.splice(0, this.groupSortCriteria.length, ...values.slice());\n    this.triggerGroupResort(bak);\n    return true;\n  }\n\n  private triggerGroupResort(bak: ISortCriteria | ISortCriteria[] | null) {\n    const sortCriterias = this.getGroupSortCriteria();\n    const bakMulti = Array.isArray(bak) ? bak : sortCriterias;\n    this.fire([Ranking.EVENT_GROUP_SORT_CRITERIA_CHANGED, Ranking.EVENT_DIRTY_ORDER, Ranking.EVENT_DIRTY_HEADER,\n    Ranking.EVENT_DIRTY_VALUES, Ranking.EVENT_DIRTY], bakMulti, sortCriterias);\n  }\n\n  private triggerResort(bak: ISortCriteria | ISortCriteria[] | null) {\n    const sortCriterias = this.getSortCriteria();\n    const bakMulti = Array.isArray(bak) ? bak : sortCriterias;\n    this.fire([Ranking.EVENT_SORT_CRITERIA_CHANGED, Ranking.EVENT_DIRTY_ORDER, Ranking.EVENT_DIRTY_HEADER,\n    Ranking.EVENT_DIRTY_VALUES, Ranking.EVENT_DIRTY], bakMulti, sortCriterias);\n  }\n\n  get children() {\n    return this.columns.slice();\n  }\n\n  get length() {\n    return this.columns.length;\n  }\n\n  insert(col: Column, index: number = this.columns.length) {\n    this.columns.splice(index, 0, col);\n    col.attach(this);\n    this.forward(col, ...Ranking.FORWARD_COLUMN_EVENTS);\n    col.on(`${Ranking.EVENT_FILTER_CHANGED}.order`, this.dirtyOrderFiltering);\n    col.on(`${Column.EVENT_VISIBILITY_CHANGED}.ranking`, (oldValue, newValue) => this.fire([Ranking.EVENT_COLUMN_VISIBILITY_CHANGED, Ranking.EVENT_DIRTY_HEADER, Ranking.EVENT_DIRTY_VALUES, Ranking.EVENT_DIRTY], col, oldValue, newValue));\n\n    this.fire([Ranking.EVENT_ADD_COLUMN, Ranking.EVENT_DIRTY_HEADER, Ranking.EVENT_DIRTY_VALUES, Ranking.EVENT_DIRTY], col, index);\n\n    if (col.isFiltered()) {\n      this.dirtyOrderFiltering();\n    }\n    return col;\n  }\n\n  move(col: Column, index: number = this.columns.length) {\n    if (col.parent !== this) {\n      // not a move operation!\n      console.error('invalid move operation: ', col);\n      return null;\n    }\n    const old = this.columns.indexOf(col);\n    if (index === old) {\n      // no move needed\n      return col;\n    }\n    //delete first\n    this.columns.splice(old, 1);\n    // adapt target index based on previous index, i.e shift by one\n    this.columns.splice(old < index ? index - 1 : index, 0, col);\n\n    this.fire([Ranking.EVENT_MOVE_COLUMN, Ranking.EVENT_DIRTY_HEADER, Ranking.EVENT_DIRTY_VALUES, Ranking.EVENT_DIRTY], col, index, old);\n    return col;\n  }\n\n  moveAfter(col: Column, reference: Column) {\n    const i = this.columns.indexOf(reference);\n    if (i < 0) {\n      return null;\n    }\n    return this.move(col, i + 1);\n  }\n\n  get fqpath() {\n    return '';\n  }\n\n  findByPath(fqpath: string): Column {\n    let p: IColumnParent | Column = <any>this;\n    const indices = fqpath.split('@').map(Number).slice(1); //ignore the first entry = ranking\n    while (indices.length > 0) {\n      const i = indices.shift()!;\n      p = (<IColumnParent>p).at(i);\n    }\n    return <Column>p;\n  }\n\n  indexOf(col: Column) {\n    return this.columns.indexOf(col);\n  }\n\n  at(index: number) {\n    return this.columns[index];\n  }\n\n  insertAfter(col: Column, ref: Column) {\n    const i = this.columns.indexOf(ref);\n    if (i < 0) {\n      return null;\n    }\n    return this.insert(col, i + 1);\n  }\n\n  push(col: Column) {\n    return this.insert(col);\n  }\n\n  remove(col: Column) {\n    const i = this.columns.indexOf(col);\n    if (i < 0) {\n      return false;\n    }\n\n    this.unforward(col, ...Ranking.FORWARD_COLUMN_EVENTS);\n\n    const isSortCriteria = this.sortCriteria.findIndex((d) => d.col === col);\n    const sortCriteriaChanged = isSortCriteria >= 0;\n    if (sortCriteriaChanged) {\n      this.sortCriteria.splice(isSortCriteria, 1);\n    }\n\n    const isGroupSortCriteria = this.groupSortCriteria.findIndex((d) => d.col === col);\n    const groupSortCriteriaChanged = isGroupSortCriteria >= 0;\n    if (groupSortCriteriaChanged) {\n      this.groupSortCriteria.splice(isGroupSortCriteria, 1);\n    }\n\n    let newGrouping: Column[] | null = null;\n    const isGroupColumn = this.groupColumns.indexOf(col);\n    if (isGroupColumn >= 0) { // was my grouping criteria\n      newGrouping = this.groupColumns.slice();\n      newGrouping.splice(isGroupColumn, 1);\n    }\n\n    col.detach();\n    this.columns.splice(i, 1);\n\n    this.fire([Ranking.EVENT_REMOVE_COLUMN, Ranking.EVENT_DIRTY_HEADER, Ranking.EVENT_DIRTY_VALUES, Ranking.EVENT_DIRTY], col, i);\n\n    if (newGrouping) {\n      this.setGroupCriteria(newGrouping);\n    } else if (sortCriteriaChanged) {\n      this.triggerResort(null);\n    } else if (groupSortCriteriaChanged) {\n      this.triggerGroupResort(null);\n    } else if (col.isFiltered()) {\n      this.dirtyOrderFiltering();\n    }\n\n    return true;\n  }\n\n  clear() {\n    if (this.columns.length === 0) {\n      return;\n    }\n    this.sortCriteria.forEach((d) => {\n      d.col.on(`${Column.EVENT_DIRTY_CACHES}.order`, null!);\n    });\n    this.sortCriteria.splice(0, this.sortCriteria.length);\n    this.groupSortCriteria.forEach((d) => {\n      d.col.on(Ranking.COLUMN_GROUP_SORT_DIRTY, null!);\n    });\n    this.groupSortCriteria.splice(0, this.groupSortCriteria.length);\n\n    this.groupColumns.forEach((d) => {\n      d.on(Ranking.COLUMN_GROUP_DIRTY, null!);\n    });\n    this.groupColumns.splice(0, this.groupColumns.length);\n\n    this.columns.forEach((col) => {\n      this.unforward(col, ...Ranking.FORWARD_COLUMN_EVENTS);\n      col.detach();\n    });\n    const removed = this.columns.splice(0, this.columns.length);\n    this.fire([Ranking.EVENT_REMOVE_COLUMN, Ranking.EVENT_DIRTY_ORDER, Ranking.EVENT_DIRTY_HEADER, Ranking.EVENT_DIRTY_VALUES, Ranking.EVENT_DIRTY], removed);\n  }\n\n  get flatColumns(): Column[] {\n    const r: IFlatColumn[] = [];\n    this.flatten(r, 0, Column.FLAT_ALL_COLUMNS);\n    return r.map((d) => d.col);\n  }\n\n  find(idOrFilter: string | ((col: Column) => boolean)) {\n    const filter = typeof (idOrFilter) === 'string' ? (col: Column) => col.id === idOrFilter : idOrFilter;\n    const r = this.flatColumns;\n    for (const v of r) {\n      if (filter(v)) {\n        return v;\n      }\n    }\n    return null;\n  }\n\n  isFiltered() {\n    return this.columns.some((d) => d.isFiltered());\n  }\n\n  filter(row: IDataRow) {\n    return this.columns.every((d) => d.filter(row));\n  }\n\n  clearFilters() {\n    return this.columns.map((d) => d.clearFilter()).some((d) => d);\n  }\n\n  findMyRanker() {\n    return this;\n  }\n\n  get fqid() {\n    return this.id;\n  }\n\n  /**\n   * marks the header, values, or both as dirty such that the values are reevaluated\n   * @param type specify in more detail what is dirty, by default whole column\n   */\n  markDirty(type: 'header' | 'values' | 'all' = 'all') {\n    switch (type) {\n      case 'header':\n        return this.fire([Column.EVENT_DIRTY_HEADER, Column.EVENT_DIRTY]);\n      case 'values':\n        return this.fire([Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY]);\n      default:\n        return this.fire([Column.EVENT_DIRTY_HEADER, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY_CACHES, Column.EVENT_DIRTY]);\n    }\n  }\n}\n\nfunction equalCriteria(a: ISortCriteria[], b: ISortCriteria[]) {\n  if (a.length !== b.length) {\n    return false;\n  }\n  return a.every((ai, i) => {\n    const bi = b[i];\n    return ai.col === bi.col && ai.asc === bi.asc;\n  });\n}\n","/**\n * @internal\n */\nexport interface IDebounceContext {\n  /**\n   * aka this\n   */\n  self: any;\n  args: any[];\n}\n\n/**\n * create a delayed call, can be called multiple times but only the last one at most delayed by timeToDelay will be executed\n * @param {(...args: any[]) => void} callback the callback to call\n * @param {number} timeToDelay delay the call in milliseconds\n * @param choose optional function to merge call context\n * @return {(...args: any[]) => any} a function that can be called with the same interface as the callback but delayed\n * @internal\n */\nexport default function debounce(callback: (...args: any[]) => void, timeToDelay = 100, choose?: (current: IDebounceContext, next: IDebounceContext) => IDebounceContext) {\n  let tm = -1;\n  let ctx: IDebounceContext | null = null;\n\n  return function (this: any, ...args: any[]) {\n    if (tm >= 0) {\n      clearTimeout(tm);\n      tm = -1;\n    }\n\n    const next = {self: this, args};\n    // compute current context\n    ctx = ctx && choose ? choose(ctx, next) : next;\n\n    tm = self.setTimeout(() => {\n      console.assert(ctx != null);\n      callback.apply(ctx!.self, ctx!.args);\n      ctx = null;\n    }, timeToDelay);\n  };\n}\n","import {Category, SupportType} from './annotations';\nimport Column from './Column';\nimport {IDataRow, IColumnDesc} from './interfaces';\n\n\n/**\n * factory for creating a description creating a rank column\n * @param label\n * @returns {{type: string, label: string}}\n */\nexport function createRankDesc(label: string = 'Rank') {\n  return {type: 'rank', label};\n}\n\n/**\n * a rank column\n */\n@SupportType()\n@Category('support')\nexport default class RankColumn extends Column {\n\n  constructor(id: string, desc: IColumnDesc) {\n    super(id, desc);\n    this.setDefaultWidth(50);\n  }\n\n  getLabel(row: IDataRow) {\n    return String(this.getValue(row));\n  }\n\n  getRaw(row: IDataRow) {\n    const ranking = this.findMyRanker();\n    if (!ranking) {\n      return -1;\n    }\n    return ranking.getRank(row.i);\n  }\n\n  getValue(row: IDataRow) {\n    const r = this.getRaw(row);\n    return r === -1 ? null : r;\n  }\n\n  get frozen() {\n    return this.desc.frozen !== false;\n  }\n}\n","import {Category, SupportType, toolbar} from './annotations';\nimport Column, {widthChanged, labelChanged, metaDataChanged, dirty, dirtyHeader, dirtyValues, rendererTypeChanged, groupRendererChanged, summaryRendererChanged, visibilityChanged, dirtyCaches} from './Column';\nimport {IGroup, IColumnDesc} from './interfaces';\nimport Ranking from './Ranking';\nimport {IEventListener} from '../internal';\n\n\nexport enum EAggregationState {\n  COLLAPSE = 'collapse',\n  EXPAND = 'expand',\n  EXPAND_TOP_N = 'expand_top'\n}\n\n/**\n * factory for creating a description creating a rank column\n * @param label\n * @returns {{type: string, label: string}}\n */\nexport function createAggregateDesc(label: string = 'Aggregate Groups') {\n  return {type: 'aggregate', label, fixed: true};\n}\n\nexport interface IAggregateGroupColumnDesc extends IColumnDesc {\n  isAggregated(ranking: Ranking, group: IGroup): EAggregationState;\n\n  setAggregated(ranking: Ranking, group: IGroup, value: EAggregationState): void;\n}\n\n/**\n * emitted upon changing of the aggregate attribute\n * @aparam value -1 = no, 0 = fully aggregated, N = show top N\n * @asMemberOf AggregateGroupColumn\n * @event\n */\nexport declare function aggregate(ranking: Ranking, group: IGroup, value: boolean, state: EAggregationState): void;\n\n/**\n * a checkbox column for selections\n */\n@toolbar('setShowTopN')\n@SupportType()\n@Category('support')\nexport default class AggregateGroupColumn extends Column {\n  static readonly EVENT_AGGREGATE = 'aggregate';\n\n  constructor(id: string, desc: Readonly<IAggregateGroupColumnDesc>) {\n    super(id, desc);\n    this.setDefaultWidth(40);\n  }\n\n  get frozen() {\n    return this.desc.frozen !== false;\n  }\n\n  protected createEventList() {\n    return super.createEventList().concat([AggregateGroupColumn.EVENT_AGGREGATE]);\n  }\n\n  on(type: typeof AggregateGroupColumn.EVENT_AGGREGATE, listener: typeof aggregate | null): this;\n  on(type: typeof Column.EVENT_WIDTH_CHANGED, listener: typeof widthChanged | null): this;\n  on(type: typeof Column.EVENT_LABEL_CHANGED, listener: typeof labelChanged | null): this;\n  on(type: typeof Column.EVENT_METADATA_CHANGED, listener: typeof metaDataChanged | null): this;\n  on(type: typeof Column.EVENT_DIRTY, listener: typeof dirty | null): this;\n  on(type: typeof Column.EVENT_DIRTY_HEADER, listener: typeof dirtyHeader | null): this;\n  on(type: typeof Column.EVENT_DIRTY_VALUES, listener: typeof dirtyValues | null): this;\n  on(type: typeof Column.EVENT_DIRTY_CACHES, listener: typeof dirtyCaches | null): this;\n  on(type: typeof Column.EVENT_RENDERER_TYPE_CHANGED, listener: typeof rendererTypeChanged | null): this;\n  on(type: typeof Column.EVENT_GROUP_RENDERER_TYPE_CHANGED, listener: typeof groupRendererChanged | null): this;\n  on(type: typeof Column.EVENT_SUMMARY_RENDERER_TYPE_CHANGED, listener: typeof summaryRendererChanged | null): this;\n  on(type: typeof Column.EVENT_VISIBILITY_CHANGED, listener: typeof visibilityChanged | null): this;\n  on(type: string | string[], listener: IEventListener | null): this; // required for correct typings in *.d.ts\n  on(type: string | string[], listener: IEventListener | null): this {\n    return super.on(<any>type, listener);\n  }\n\n  isAggregated(group: IGroup) {\n    const ranking = this.findMyRanker()!;\n    if ((<IAggregateGroupColumnDesc>this.desc).isAggregated) {\n      return (<IAggregateGroupColumnDesc>this.desc).isAggregated(ranking, group);\n    }\n    return false;\n  }\n\n  setAggregated(group: IGroup, value: boolean | EAggregationState) {\n    const n: EAggregationState = typeof value === 'boolean' ? (value ? EAggregationState.EXPAND : EAggregationState.COLLAPSE): value;\n    const ranking = this.findMyRanker()!;\n    const current = ((<IAggregateGroupColumnDesc>this.desc).isAggregated) && (<IAggregateGroupColumnDesc>this.desc).isAggregated(ranking, group);\n    if (current === n) {\n      return true;\n    }\n\n    if ((<IAggregateGroupColumnDesc>this.desc).setAggregated) {\n      (<IAggregateGroupColumnDesc>this.desc).setAggregated(ranking, group, n);\n    }\n    this.fire(AggregateGroupColumn.EVENT_AGGREGATE, ranking, group, n !== EAggregationState.COLLAPSE, n);\n    return false;\n  }\n}\n","import {Category, SupportType, toolbar} from './annotations';\nimport {IndicesArray, IDataRow, IGroup, ECompareValueType, IValueColumnDesc} from './interfaces';\nimport Column, {widthChanged, labelChanged, metaDataChanged, dirty, dirtyHeader, dirtyValues, rendererTypeChanged, groupRendererChanged, summaryRendererChanged, visibilityChanged, dirtyCaches} from './Column';\nimport ValueColumn, {dataLoaded} from './ValueColumn';\nimport {IEventListener} from '../internal';\n\n/**\n * factory for creating a description creating a rank column\n * @param label\n * @returns {{type: string, label: string}}\n */\nexport function createSelectionDesc(label: string = 'Selection Checkboxes') {\n  return {type: 'selection', label, fixed: true};\n}\n\nexport interface ISelectionColumnDesc extends IValueColumnDesc<boolean> {\n  /**\n   * setter for selecting/deselecting the given row\n   */\n  setter(index: number, value: boolean): void;\n\n  /**\n   * setter for selecting/deselecting the given row\n   */\n  setterAll(indices: IndicesArray, value: boolean): void;\n}\n\n\n/**\n * emitted when rows are selected\n * @asMemberOf SelectionColumn\n * @param dataIndex the (de)seleced row\n * @param value true if selected else false\n * @param dataIndices in case of multiple rows are selected\n * @event\n */\nexport declare function select_SC(dataIndex: number, value: boolean, dataIndices?: IndicesArray): void;\n\n/**\n * a checkbox column for selections\n */\n@SupportType()\n@toolbar('sort', 'sortBy', 'group', 'groupBy', 'invertSelection')\n@Category('support')\nexport default class SelectionColumn extends ValueColumn<boolean> {\n  private static SELECTED_GROUP: IGroup = {\n    name: 'Selected',\n    color: 'orange'\n  };\n  private static NOT_SELECTED_GROUP: IGroup = {\n    name: 'Unselected',\n    color: 'gray'\n  };\n  static readonly EVENT_SELECT = 'select';\n\n  constructor(id: string, desc: Readonly<ISelectionColumnDesc>) {\n    super(id, desc);\n    this.setDefaultWidth(20);\n  }\n\n  get frozen() {\n    return this.desc.frozen !== false;\n  }\n\n  protected createEventList() {\n    return super.createEventList().concat([SelectionColumn.EVENT_SELECT]);\n  }\n\n  on(type: typeof SelectionColumn.EVENT_SELECT, listener: typeof select_SC | null): this;\n  on(type: typeof ValueColumn.EVENT_DATA_LOADED, listener: typeof dataLoaded | null): this;\n  on(type: typeof Column.EVENT_WIDTH_CHANGED, listener: typeof widthChanged | null): this;\n  on(type: typeof Column.EVENT_LABEL_CHANGED, listener: typeof labelChanged | null): this;\n  on(type: typeof Column.EVENT_METADATA_CHANGED, listener: typeof metaDataChanged | null): this;\n  on(type: typeof Column.EVENT_DIRTY, listener: typeof dirty | null): this;\n  on(type: typeof Column.EVENT_DIRTY_HEADER, listener: typeof dirtyHeader | null): this;\n  on(type: typeof Column.EVENT_DIRTY_VALUES, listener: typeof dirtyValues | null): this;\n  on(type: typeof Column.EVENT_DIRTY_CACHES, listener: typeof dirtyCaches | null): this;\n  on(type: typeof Column.EVENT_RENDERER_TYPE_CHANGED, listener: typeof rendererTypeChanged | null): this;\n  on(type: typeof Column.EVENT_GROUP_RENDERER_TYPE_CHANGED, listener: typeof groupRendererChanged | null): this;\n  on(type: typeof Column.EVENT_SUMMARY_RENDERER_TYPE_CHANGED, listener: typeof summaryRendererChanged | null): this;\n  on(type: typeof Column.EVENT_VISIBILITY_CHANGED, listener: typeof visibilityChanged | null): this;\n  on(type: string | string[], listener: IEventListener | null): this; // required for correct typings in *.d.ts\n  on(type: string | string[], listener: IEventListener | null): this {\n    return super.on(<any>type, listener);\n  }\n\n  setValue(row: IDataRow, value: boolean) {\n    const old = this.getValue(row);\n    if (old === value) {\n      return true;\n    }\n    return this.setImpl(row, value);\n  }\n\n  setValues(rows: IndicesArray, value: boolean) {\n    if (rows.length === 0) {\n      return;\n    }\n    if ((<ISelectionColumnDesc>this.desc).setterAll) {\n      (<ISelectionColumnDesc>this.desc).setterAll(rows, value);\n    }\n    this.fire(SelectionColumn.EVENT_SELECT, rows[0], value, rows);\n    return true;\n  }\n\n  private setImpl(row: IDataRow, value: boolean) {\n    if ((<ISelectionColumnDesc>this.desc).setter) {\n      (<ISelectionColumnDesc>this.desc).setter(row.i, value);\n    }\n    this.fire(SelectionColumn.EVENT_SELECT, row.i, value);\n    return true;\n  }\n\n  toggleValue(row: IDataRow) {\n    const old = this.getValue(row);\n    this.setImpl(row, !old);\n    return !old;\n  }\n\n  toCompareValue(row: IDataRow) {\n    const v = this.getValue(row) === true;\n    return v ? 1 : 0;\n  }\n\n  toCompareValueType() {\n    return ECompareValueType.BINARY;\n  }\n\n  group(row: IDataRow) {\n    const isSelected = this.getValue(row);\n    return Object.assign({}, isSelected ? SelectionColumn.SELECTED_GROUP : SelectionColumn.NOT_SELECTED_GROUP);\n  }\n}\n","import {Category, SupportType} from './annotations';\nimport {IDataRow, IColumnDesc, IGroup} from './interfaces';\nimport Column from './Column';\n\nexport interface IAction {\n  name: string;\n  icon?: string;\n  className?: string;\n\n  action(row: IDataRow): void;\n}\n\nexport interface IGroupAction {\n  name: string;\n  icon?: string;\n  className?: string;\n\n  action(group: IGroup, rows: IDataRow[]): void;\n}\n\n/**\n * utility for creating an action description with optional label\n * @param label\n * @param actions\n * @param groupActions\n * @returns {{type: string, label: string}}\n */\nexport function createActionDesc(label = 'actions', actions: Readonly<IAction>[] = [], groupActions: Readonly<IGroupAction>[] = []) {\n  return {type: 'actions', label, actions, groupActions, fixed: true};\n}\n\nexport interface IActionDesc {\n  actions?: Readonly<IAction>[];\n  groupActions?: Readonly<IGroupAction>[];\n}\n\nexport declare type IActionColumnDesc = IColumnDesc & IActionDesc;\n\n/**\n * a default column with no values\n */\n@SupportType()\n@Category('support')\nexport default class ActionColumn extends Column {\n\n  readonly actions: IAction[];\n  readonly groupActions: IGroupAction[];\n\n  constructor(id: string, desc: Readonly<IActionColumnDesc>) {\n    super(id, desc);\n\n    this.actions = desc.actions || [];\n    this.groupActions = desc.groupActions || [];\n  }\n\n  getLabel() {\n    return '';\n  }\n\n  getValue() {\n    return '';\n  }\n\n  compare() {\n    return 0; //can't compare\n  }\n}\n","import {IGroup} from './interfaces';\n\n\nexport function isMissingValue(v: any): boolean {\n  if(v == null || v === undefined || v === '' || v === 'NA' || v === 'na' || v === 'Na' || v === 'nA' || v === 'NaN' || (typeof v === 'number' && isNaN(v))) {\n    return true;\n  }\n  if (!Array.isArray(v)) {\n    return false;\n  }\n  for (const vi of v) {\n    if (!isMissingValue(vi)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function isUnknown(v?: number | null) {\n  return v == null || v === undefined || isNaN(v);\n}\n\nexport const FIRST_IS_NAN = -1;\nexport const FIRST_IS_MISSING = 1;\n\n\nexport const missingGroup: IGroup = {\n  name: 'Missing values',\n  color: 'gray'\n};\n","import {Category, toolbar, dialogAddons} from './annotations';\nimport Column, {widthChanged, labelChanged, metaDataChanged, dirty, dirtyHeader, dirtyValues, rendererTypeChanged, groupRendererChanged, summaryRendererChanged, visibilityChanged, dirtyCaches} from './Column';\nimport {defaultGroup, IDataRow, IGroup, ECompareValueType, IValueColumnDesc, othersGroup, ITypeFactory} from './interfaces';\nimport {missingGroup, isMissingValue} from './missing';\nimport ValueColumn, {dataLoaded} from './ValueColumn';\nimport {equal, IEventListener} from '../internal';\n\nexport enum EAlignment {\n  left = 'left',\n  center = 'center',\n  right = 'right'\n}\n\nexport interface IStringDesc {\n  /**\n   * column alignment: left, center, right\n   * @default left\n   */\n  alignment?: EAlignment;\n\n  /**\n   * escape html tags\n   */\n  escape?: boolean;\n}\n\n\nexport declare type IStringColumnDesc = IStringDesc & IValueColumnDesc<string>;\n\n/**\n * emitted when the filter property changes\n * @asMemberOf StringColumn\n * @event\n */\nexport declare function filterChanged_SC(previous: string | RegExp | null, current: string | RegExp | null): void;\n\n\n/**\n * emitted when the grouping property changes\n * @asMemberOf StringColumn\n * @event\n */\nexport declare function groupingChanged_SC(previous: (RegExp | string)[][], current: (RegExp | string)[][]): void;\n\n/**\n * a string column with optional alignment\n */\n@toolbar('search', 'groupBy', 'filterString')\n@dialogAddons('group', 'groupString')\n@Category('string')\nexport default class StringColumn extends ValueColumn<string> {\n  static readonly EVENT_FILTER_CHANGED = 'filterChanged';\n  static readonly EVENT_GROUPING_CHANGED = 'groupingChanged';\n\n  //magic key for filtering missing ones\n  static readonly FILTER_MISSING = '__FILTER_MISSING';\n  private currentFilter: string | RegExp | null = null;\n\n  readonly alignment: EAlignment;\n  readonly escape: boolean;\n\n  private currentGroupCriteria: (RegExp | string)[] = [];\n\n  constructor(id: string, desc: Readonly<IStringColumnDesc>) {\n    super(id, desc);\n    this.setDefaultWidth(200); //by default 200\n    this.alignment = <any>desc.alignment || EAlignment.left;\n    this.escape = desc.escape !== false;\n  }\n\n\n  protected createEventList() {\n    return super.createEventList().concat([StringColumn.EVENT_GROUPING_CHANGED, StringColumn.EVENT_FILTER_CHANGED]);\n  }\n\n  on(type: typeof StringColumn.EVENT_FILTER_CHANGED, listener: typeof filterChanged_SC | null): this;\n  on(type: typeof ValueColumn.EVENT_DATA_LOADED, listener: typeof dataLoaded | null): this;\n  on(type: typeof StringColumn.EVENT_GROUPING_CHANGED, listener: typeof groupingChanged_SC | null): this;\n  on(type: typeof Column.EVENT_WIDTH_CHANGED, listener: typeof widthChanged | null): this;\n  on(type: typeof Column.EVENT_LABEL_CHANGED, listener: typeof labelChanged | null): this;\n  on(type: typeof Column.EVENT_METADATA_CHANGED, listener: typeof metaDataChanged | null): this;\n  on(type: typeof Column.EVENT_DIRTY, listener: typeof dirty | null): this;\n  on(type: typeof Column.EVENT_DIRTY_HEADER, listener: typeof dirtyHeader | null): this;\n  on(type: typeof Column.EVENT_DIRTY_VALUES, listener: typeof dirtyValues | null): this;\n  on(type: typeof Column.EVENT_DIRTY_CACHES, listener: typeof dirtyCaches | null): this;\n  on(type: typeof Column.EVENT_RENDERER_TYPE_CHANGED, listener: typeof rendererTypeChanged | null): this;\n  on(type: typeof Column.EVENT_GROUP_RENDERER_TYPE_CHANGED, listener: typeof groupRendererChanged | null): this;\n  on(type: typeof Column.EVENT_SUMMARY_RENDERER_TYPE_CHANGED, listener: typeof summaryRendererChanged | null): this;\n  on(type: typeof Column.EVENT_VISIBILITY_CHANGED, listener: typeof visibilityChanged | null): this;\n  on(type: string | string[], listener: IEventListener | null): this; // required for correct typings in *.d.ts\n  on(type: string | string[], listener: IEventListener | null): this {\n    return super.on(<any>type, listener);\n  }\n\n  getValue(row: IDataRow): string | null {\n    const v: any = super.getValue(row);\n    return isMissingValue(v) ? null : String(v);\n  }\n\n  getLabel(row: IDataRow) {\n    return this.getValue(row) || '';\n  }\n\n  dump(toDescRef: (desc: any) => any): any {\n    const r = super.dump(toDescRef);\n    if (this.currentFilter instanceof RegExp) {\n      r.filter = `REGEX:${(<RegExp>this.currentFilter).source}`;\n    } else {\n      r.filter = this.currentFilter;\n    }\n    if (this.currentGroupCriteria) {\n      r.groupCriteria = this.currentGroupCriteria.map((d) => typeof d === 'string' ? d : `REGEX:${d.source}`);\n    }\n    return r;\n  }\n\n  restore(dump: any, factory: ITypeFactory) {\n    super.restore(dump, factory);\n    if (dump.filter && (<string>dump.filter).startsWith('REGEX:')) {\n      this.currentFilter = new RegExp(dump.filter.slice(6), 'gm');\n    } else {\n      this.currentFilter = dump.filter || null;\n    }\n    if (dump.groupCriteria) {\n      this.currentGroupCriteria = dump.groupCriteria.map((d: string) => d.startsWith('REGEX:') ? new RegExp(d.slice(6), 'gm') : d);\n    }\n  }\n\n  isFiltered() {\n    return this.currentFilter != null;\n  }\n\n  filter(row: IDataRow) {\n    if (!this.isFiltered()) {\n      return true;\n    }\n    const r = this.getLabel(row);\n    const filter = this.currentFilter;\n\n    if (filter === StringColumn.FILTER_MISSING) { //filter empty\n      return r != null && r.trim() !== '';\n    }\n    if (typeof filter === 'string' && filter.length > 0) {\n      return r !== '' && r.toLowerCase().indexOf(filter.toLowerCase()) >= 0;\n    }\n    if (filter instanceof RegExp) {\n      return r !== '' && filter.test(r);\n    }\n    return true;\n  }\n\n  getFilter() {\n    return this.currentFilter;\n  }\n\n  setFilter(filter: string | RegExp | null) {\n    if (filter === '') {\n      filter = null;\n    }\n    if (this.currentFilter === filter) {\n      return;\n    }\n    this.fire([StringColumn.EVENT_FILTER_CHANGED, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY], this.currentFilter, this.currentFilter = filter);\n  }\n\n  clearFilter() {\n    const was = this.isFiltered();\n    this.setFilter(null);\n    return was;\n  }\n\n  getGroupCriteria() {\n    return this.currentGroupCriteria.slice();\n  }\n\n  setGroupCriteria(value: (string | RegExp)[]) {\n    if (equal(this.currentGroupCriteria, value)) {\n      return;\n    }\n    const bak = this.getGroupCriteria();\n    this.currentGroupCriteria = value.slice();\n    this.fire([StringColumn.EVENT_GROUPING_CHANGED, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY], bak, value);\n  }\n\n  group(row: IDataRow): IGroup {\n    if (this.getValue(row) == null) {\n      return Object.assign({}, missingGroup);\n    }\n\n    if (this.currentGroupCriteria.length === 0) {\n      return Object.assign({}, othersGroup);\n    }\n    const value = this.getLabel(row);\n\n    if (!value) {\n      return Object.assign({}, missingGroup);\n    }\n\n    for (const criteria of this.currentGroupCriteria) {\n      if (!((criteria instanceof RegExp && criteria.test(value)) || (typeof criteria === 'string' && value.startsWith(criteria)))) {\n        continue;\n      }\n      return {\n        name: typeof criteria === 'string' ? criteria : criteria.source,\n        color: defaultGroup.color\n      };\n    }\n    return Object.assign({}, othersGroup);\n  }\n\n\n  toCompareValue(row: IDataRow) {\n    const v = this.getValue(row);\n    return v === '' || v == null ? null : v.toLowerCase();\n  }\n\n  toCompareValueType() {\n    return ECompareValueType.STRING;\n  }\n}\n\n","import * as equalImpl from 'fast-deep-equal';\n\n// keep here to have a \"real\" export for webpack not just interfaces\n\n/**\n * deep equal comparison\n */\nexport const equal: (a: any, b: any) => boolean = (typeof equalImpl === 'function' ? equalImpl : (<any>equalImpl).default);\n\nexport interface IBin<T> {\n  /**\n   * bin start\n   */\n  x0: T;\n  /**\n   * bin end\n   */\n  x1: T;\n  /**\n   * bin count\n   */\n  count: number;\n}\n\nexport declare type INumberBin = IBin<number>;\n\nexport interface IBoxPlotData {\n  readonly min: number;\n  readonly max: number;\n  readonly median: number;\n  readonly q1: number;\n  readonly q3: number;\n  readonly outlier?: number[];\n  readonly whiskerLow?: number;\n  readonly whiskerHigh?: number;\n}\n\nexport interface IAdvancedBoxPlotData extends IBoxPlotData {\n  readonly mean: number;\n\n  readonly missing: number;\n  readonly count: number;\n}\n\nexport interface IHistogramStats<T> {\n  readonly min: T | null;\n  readonly max: T | null;\n\n  readonly missing: number;\n  readonly count: number;\n\n  readonly maxBin: number;\n  readonly hist: ReadonlyArray<IBin<T>>;\n}\n\nexport interface IStatistics extends IHistogramStats<number> {\n  readonly mean: number;\n}\n\nexport interface ICategoricalBin {\n  cat: string;\n  count: number;\n}\n\nexport declare type IDateBin = IBin<Date>;\n\nexport interface ICategoricalStatistics {\n  readonly missing: number;\n  readonly count: number;\n\n  readonly maxBin: number;\n  readonly hist: ReadonlyArray<ICategoricalBin>;\n}\n\nexport declare type IDateHistGranularity = 'year' | 'month' | 'day';\n\nexport interface IDateStatistics extends IHistogramStats<Date> {\n  readonly histGranularity: IDateHistGranularity;\n}\n","import Column, {widthChanged, labelChanged, metaDataChanged, dirty, dirtyHeader, dirtyValues, rendererTypeChanged, groupRendererChanged, summaryRendererChanged, visibilityChanged, dirtyCaches} from './Column';\nimport {IDataRow, ITypeFactory} from './interfaces';\nimport StringColumn from './StringColumn';\nimport {IEventListener} from '../internal';\nimport ValueColumn, {dataLoaded} from './ValueColumn';\n\n\n/**\n * emitted when the filter property changes\n * @asMemberOf AnnotateColumn\n * @event\n */\nexport declare function filterChanged_AC(previous: string | RegExp | null, current: string | RegExp | null): void;\n\n\n/**\n * emitted when the grouping property changes\n * @asMemberOf AnnotateColumn\n * @event\n */\nexport declare function groupingChanged_AC(previous: (RegExp | string)[][], current: (RegExp | string)[][]): void;\n\n/**\n * emitted when the value of a row changes\n * @asMemberOf AnnotateColumn\n * @event\n */\nexport declare function valueChanged(dataIndex: number, previous: string, current: string): void;\n\n/**\n * a string column in which the values can be edited locally\n */\nexport default class AnnotateColumn extends StringColumn {\n  static readonly EVENT_VALUE_CHANGED = 'valueChanged';\n\n  private readonly annotations = new Map<number, string>();\n\n  protected createEventList() {\n    return super.createEventList().concat([AnnotateColumn.EVENT_VALUE_CHANGED]);\n  }\n\n  on(type: typeof AnnotateColumn.EVENT_VALUE_CHANGED, listener: typeof valueChanged | null): this;\n  on(type: typeof StringColumn.EVENT_FILTER_CHANGED, listener: typeof filterChanged_AC | null): this;\n  on(type: typeof StringColumn.EVENT_GROUPING_CHANGED, listener: typeof groupingChanged_AC | null): this;\n  on(type: typeof ValueColumn.EVENT_DATA_LOADED, listener: typeof dataLoaded | null): this;\n  on(type: typeof Column.EVENT_WIDTH_CHANGED, listener: typeof widthChanged | null): this;\n  on(type: typeof Column.EVENT_LABEL_CHANGED, listener: typeof labelChanged | null): this;\n  on(type: typeof Column.EVENT_METADATA_CHANGED, listener: typeof metaDataChanged | null): this;\n  on(type: typeof Column.EVENT_DIRTY, listener: typeof dirty | null): this;\n  on(type: typeof Column.EVENT_DIRTY_HEADER, listener: typeof dirtyHeader | null): this;\n  on(type: typeof Column.EVENT_DIRTY_VALUES, listener: typeof dirtyValues | null): this;\n  on(type: typeof Column.EVENT_DIRTY_CACHES, listener: typeof dirtyCaches | null): this;\n  on(type: typeof Column.EVENT_RENDERER_TYPE_CHANGED, listener: typeof rendererTypeChanged | null): this;\n  on(type: typeof Column.EVENT_GROUP_RENDERER_TYPE_CHANGED, listener: typeof groupRendererChanged | null): this;\n  on(type: typeof Column.EVENT_SUMMARY_RENDERER_TYPE_CHANGED, listener: typeof summaryRendererChanged | null): this;\n  on(type: typeof Column.EVENT_VISIBILITY_CHANGED, listener: typeof visibilityChanged | null): this;\n  on(type: string | string[], listener: IEventListener | null): this; // required for correct typings in *.d.ts\n  on(type: string | string[], listener: IEventListener | null): this {\n    return super.on(<any>type, listener);\n  }\n\n  getValue(row: IDataRow) {\n    if (this.annotations.has(row.i)) {\n      return this.annotations.get(row.i)!;\n    }\n    return super.getValue(row);\n  }\n\n  dump(toDescRef: (desc: any) => any): any {\n    const r = super.dump(toDescRef);\n    r.annotations = {};\n    this.annotations.forEach((v, k) => {\n      r.annotations[k] = v;\n    });\n    return r;\n  }\n\n  restore(dump: any, factory: ITypeFactory) {\n    super.restore(dump, factory);\n    if (!dump.annotations) {\n      return;\n    }\n    Object.keys(dump.annotations).forEach((k) => {\n      this.annotations.set(Number(k), dump.annotations[k]);\n    });\n  }\n\n  setValue(row: IDataRow, value: string) {\n    const old = this.getValue(row);\n    if (old === value) {\n      return true;\n    }\n    if (value === '' || value == null) {\n      this.annotations.delete(row.i);\n    } else {\n      this.annotations.set(row.i, value);\n    }\n    this.fire([AnnotateColumn.EVENT_VALUE_CHANGED, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY_CACHES, Column.EVENT_DIRTY], row.i, old, value);\n    return true;\n  }\n}\n","import {ICategory, ICategoricalColorMappingFunction} from '.';\nimport {DEFAULT_COLOR, ITypedDump} from './interfaces';\n\n\nexport const DEFAULT_CATEGORICAL_COLOR_FUNCTION: ICategoricalColorMappingFunction = {\n  apply: (v) => v ? v.color : DEFAULT_COLOR,\n  toJSON: () => null,\n  clone: () => DEFAULT_CATEGORICAL_COLOR_FUNCTION,\n  eq: (other) => other === DEFAULT_CATEGORICAL_COLOR_FUNCTION\n};\n\nexport class ReplacmentColorMappingFunction implements ICategoricalColorMappingFunction {\n  public readonly map: ReadonlyMap<string, string>;\n  constructor(map: Map<ICategory | string, string>) {\n    this.map = new Map(Array.from(map.entries()).map(([k, v]) => <[string, string]>[typeof k === 'string' ? k : k.name, v]));\n  }\n\n  apply(v: ICategory) {\n    return this.map.has(v.name) ? this.map.get(v.name)! : DEFAULT_CATEGORICAL_COLOR_FUNCTION.apply(v);\n  }\n\n  toJSON() {\n    const r: any = {};\n    this.map.forEach((v, k) => r[k] = v);\n    return {\n      type: 'replace',\n      map: r\n    };\n  }\n\n  clone() {\n    return new ReplacmentColorMappingFunction(new Map(this.map.entries()));\n  }\n\n  eq(other: ICategoricalColorMappingFunction): boolean {\n    if (!(other instanceof ReplacmentColorMappingFunction)) {\n      return false;\n    }\n    if (other.map.size !== this.map.size) {\n      return false;\n    }\n    return Array.from(this.map.keys()).every((k) => this.map.get(k) === other.map.get(k));\n  }\n\n  static restore(dump: any, categories: ICategory[]) {\n    if (dump.type === 'replace') { // new dump format\n      dump = dump.map;\n    }\n    const lookup = new Map(categories.map((d) => <[string, ICategory]>[d.name, d]));\n    const r = new Map<ICategory, string>();\n    for (const key of Object.keys(dump)) {\n      if (lookup.has(key)) {\n        r.set(lookup.get(key)!, dump[key]);\n      }\n    }\n    return new ReplacmentColorMappingFunction(r);\n  }\n}\n\n/**\n * @internal\n */\nexport function restoreCategoricalColorMapping(dump: ITypedDump | null | undefined, categories: ICategory[]): ICategoricalColorMappingFunction {\n  if (!dump) {\n    return DEFAULT_CATEGORICAL_COLOR_FUNCTION;\n  }\n  return ReplacmentColorMappingFunction.restore(dump, categories);\n}\n","import {ISequence, isSeqEmpty, empty} from '../internal';\nimport {FIRST_IS_MISSING, IDataRow, ECompareValueType, ICompareValue, ICategory, ICategoricalColumn, ICategoricalDesc, ICategoricalFilter} from '.';\nimport {colorPool} from './internal';\nimport {DEFAULT_COLOR} from './interfaces';\nimport {ICategoricalsColumn} from './ICategoricalColumn';\n\n/** @internal */\nexport function toCategory(cat: (string | Partial<ICategory>), value: number, nextColor: () => string = () => DEFAULT_COLOR) {\n  if (typeof cat === 'string') {\n    //just the category value\n    return {name: cat, label: cat, color: nextColor(), value};\n  }\n  const name = cat.name == null ? String(cat.value) : cat.name;\n  return {\n    name,\n    label: cat.label || name,\n    color: cat.color || nextColor(),\n    value: cat.value != null ? cat.value : value\n  };\n}\n\n\n/** @internal */\nexport function toCompareCategoryValue(v: ICategory | null) {\n  if (v == null) {\n    return NaN;\n  }\n  return v.value;\n}\n\nexport const COMPARE_CATEGORY_VALUE_TYPES = ECompareValueType.FLOAT_ASC;\n\nfunction findMostFrequent(rows: ISequence<ICategory | null>, valueCache?: ISequence<ICategory | null>): {cat: ICategory | null, count: number} {\n  const hist = new Map<ICategory | null, number>();\n\n  if (valueCache) {\n    valueCache.forEach((cat) => {\n      hist.set(cat, (hist.get(cat) || 0) + 1);\n    });\n  } else {\n    rows.forEach((cat) => {\n      hist.set(cat, (hist.get(cat) || 0) + 1);\n    });\n  }\n\n  if (hist.size === 0) {\n    return {\n      cat: null,\n      count: 0\n    };\n  }\n  let topCat: ICategory | null = null;\n  let topCount = 0;\n  hist.forEach((count, cat) => {\n    if (count > topCount) {\n      topCat = cat;\n      topCount = count;\n    }\n  });\n  return {\n    cat: topCat,\n    count: topCount\n  };\n}\n\n/** @internal */\nexport function toMostFrequentCategoricals(rows: ISequence<IDataRow>, col: ICategoricalsColumn): (ICategory | null)[] {\n  if (isSeqEmpty(rows)) {\n    return empty(col.dataLength!);\n  }\n  const maps = empty(col.dataLength!).map(() => new Map<ICategory | null, number>());\n  rows.forEach((row) => {\n    const vs = col.getCategories(row);\n    if (!vs) {\n      return;\n    }\n    for (let i = 0; i < maps.length; ++i) {\n      const hist = maps[i];\n      const cat = vs[i] || null;\n      hist.set(cat, (hist.get(cat) || 0) + 1);\n    }\n  });\n\n  return maps.map((hist) => {\n    if (hist.size === 0) {\n      return null;\n    }\n    let topCat: ICategory | null = null;\n    let topCount = 0;\n    hist.forEach((count, cat) => {\n      if (count > topCount) {\n        topCat = cat;\n        topCount = count;\n      }\n    });\n    return topCat;\n  });\n}\n\n/** @internal */\nexport function toGroupCompareCategoryValue(rows: ISequence<IDataRow>, col: ICategoricalColumn, valueCache?: ISequence<ICategory | null>): ICompareValue[] {\n  if (isSeqEmpty(rows)) {\n    return [NaN, 0];\n  }\n  const mostFrequent = findMostFrequent(rows.map((d) => col.getCategory(d)), valueCache);\n  if (mostFrequent.cat == null) {\n    return [NaN, 0];\n  }\n  return [mostFrequent.cat.value, mostFrequent.count];\n}\n\nexport const COMPARE_GROUP_CATEGORY_VALUE_TYPES = [ECompareValueType.FLOAT, ECompareValueType.COUNT];\n\n/** @internal */\nfunction compareCategory(a: ICategory | null, b: ICategory | null) {\n  const aNull = a == null || isNaN(a.value);\n  const bNull = b == null || isNaN(b.value);\n  if (aNull || a == null) {\n    return bNull ? 0 : FIRST_IS_MISSING;\n  }\n  if (bNull || b == null) {\n    return -FIRST_IS_MISSING;\n  }\n  if (a.value === b.value) {\n    return a.label.toLowerCase().localeCompare(b.label.toLowerCase());\n  }\n  return a.value - b.value;\n}\n\n/** @internal */\nexport function toCategories(desc: ICategoricalDesc) {\n  if (!desc.categories) {\n    return [];\n  }\n  const nextColor = colorPool();\n  const l = desc.categories.length - 1;\n  const cats = desc.categories.map((cat, i) => toCategory(cat, i / l, nextColor));\n  return cats.sort(compareCategory);\n}\n\n/** @internal */\nfunction isEmptyFilter(f: ICategoricalFilter | null) {\n  return f == null || (!f.filterMissing && (f.filter == null || f.filter === ''));\n}\n\n/** @internal */\nexport function isEqualCategoricalFilter(a: ICategoricalFilter | null, b: ICategoricalFilter | null) {\n  if (a === b) {\n    return true;\n  }\n  if (a == null || b == null) {\n    return isEmptyFilter(a) === isEmptyFilter(b);\n  }\n  if (a.filterMissing !== b.filterMissing || (typeof a.filter !== typeof b.filter)) {\n    return false;\n  }\n  if (Array.isArray(a.filter)) {\n    return arrayEquals(<string[]>a.filter, <string[]>b.filter);\n  }\n  return String(a.filter) === String(b.filter);\n}\n\nfunction arrayEquals<T>(a: T[], b: T[]) {\n  const al = a != null ? a.length : 0;\n  const bl = b != null ? b.length : 0;\n  if (al !== bl) {\n    return false;\n  }\n  if (al === 0) {\n    return true;\n  }\n  return a.every((ai, i) => ai === b[i]);\n}\n\n/** @internal */\nexport function isCategoryIncluded(filter: ICategoricalFilter | null, category: ICategory | null) {\n  if (filter == null) {\n    return true;\n  }\n  if (category == null || isNaN(category.value)) {\n    return !filter.filterMissing;\n  }\n  const filterObj = filter.filter;\n  if (Array.isArray(filterObj)) { //array mode\n    return filterObj.includes(category.name);\n  }\n  if (typeof filterObj === 'string' && filterObj.length > 0) { //search mode\n    return category.name.toLowerCase().includes(filterObj.toLowerCase());\n  }\n  if (filterObj instanceof RegExp) { //regex match mode\n    return filterObj.test(category.name);\n  }\n  return true;\n}\n","import {IEventListener, ISequence} from '../internal';\nimport {Category, toolbar} from './annotations';\nimport {DEFAULT_CATEGORICAL_COLOR_FUNCTION} from './CategoricalColorMappingFunction';\nimport Column, {dirty, dirtyCaches, dirtyHeader, dirtyValues, groupRendererChanged, labelChanged, metaDataChanged, rendererTypeChanged, summaryRendererChanged, visibilityChanged, widthChanged} from './Column';\nimport {ICategoricalColumn, ICategoricalColumnDesc, ICategoricalFilter, ICategory, ICategoricalColorMappingFunction} from './ICategoricalColumn';\nimport {IDataRow, IGroup, ICompareValue, DEFAULT_COLOR, ITypeFactory, ECompareValueType} from './interfaces';\nimport {missingGroup} from './missing';\nimport ValueColumn, {dataLoaded} from './ValueColumn';\nimport {toCategories, isCategoryIncluded, isEqualCategoricalFilter, toCompareCategoryValue, COMPARE_CATEGORY_VALUE_TYPES, toGroupCompareCategoryValue, COMPARE_GROUP_CATEGORY_VALUE_TYPES} from './internalCategorical';\n\n\n/**\n * emitted when the color mapping property changes\n * @asMemberOf CategoricalColumn\n * @event\n */\nexport declare function colorMappingChanged_CC(previous: ICategoricalColorMappingFunction, current: ICategoricalColorMappingFunction): void;\n\n\n/**\n * emitted when the filter property changes\n * @asMemberOf CategoricalColumn\n * @event\n */\nexport declare function filterChanged_CC(previous: ICategoricalFilter | null, current: ICategoricalFilter | null): void;\n\n/**\n * column for categorical values\n */\n@toolbar('group', 'groupBy', 'sortGroupBy', 'filterCategorical', 'colorMappedCategorical')\n@Category('categorical')\nexport default class CategoricalColumn extends ValueColumn<string> implements ICategoricalColumn {\n  static readonly EVENT_FILTER_CHANGED = 'filterChanged';\n  static readonly EVENT_COLOR_MAPPING_CHANGED = 'colorMappingChanged';\n\n  readonly categories: ICategory[];\n\n  private colorMapping: ICategoricalColorMappingFunction;\n\n  private readonly lookup = new Map<string, Readonly<ICategory>>();\n  /**\n   * set of categories to show\n   * @type {null}\n   * @private\n   */\n  private currentFilter: ICategoricalFilter | null = null;\n\n  constructor(id: string, desc: Readonly<ICategoricalColumnDesc>) {\n    super(id, desc);\n    this.categories = toCategories(desc);\n    this.categories.forEach((d) => this.lookup.set(d.name, d));\n    this.colorMapping = DEFAULT_CATEGORICAL_COLOR_FUNCTION;\n  }\n\n  protected createEventList() {\n    return super.createEventList().concat([CategoricalColumn.EVENT_FILTER_CHANGED, CategoricalColumn.EVENT_COLOR_MAPPING_CHANGED]);\n  }\n\n  on(type: typeof CategoricalColumn.EVENT_FILTER_CHANGED, listener: typeof filterChanged_CC | null): this;\n  on(type: typeof CategoricalColumn.EVENT_COLOR_MAPPING_CHANGED, listener: typeof colorMappingChanged_CC | null): this;\n  on(type: typeof ValueColumn.EVENT_DATA_LOADED, listener: typeof dataLoaded | null): this;\n  on(type: typeof Column.EVENT_WIDTH_CHANGED, listener: typeof widthChanged | null): this;\n  on(type: typeof Column.EVENT_LABEL_CHANGED, listener: typeof labelChanged | null): this;\n  on(type: typeof Column.EVENT_METADATA_CHANGED, listener: typeof metaDataChanged | null): this;\n  on(type: typeof Column.EVENT_DIRTY, listener: typeof dirty | null): this;\n  on(type: typeof Column.EVENT_DIRTY_HEADER, listener: typeof dirtyHeader | null): this;\n  on(type: typeof Column.EVENT_DIRTY_VALUES, listener: typeof dirtyValues | null): this;\n  on(type: typeof Column.EVENT_DIRTY_CACHES, listener: typeof dirtyCaches | null): this;\n  on(type: typeof Column.EVENT_RENDERER_TYPE_CHANGED, listener: typeof rendererTypeChanged | null): this;\n  on(type: typeof Column.EVENT_GROUP_RENDERER_TYPE_CHANGED, listener: typeof groupRendererChanged | null): this;\n  on(type: typeof Column.EVENT_SUMMARY_RENDERER_TYPE_CHANGED, listener: typeof summaryRendererChanged | null): this;\n  on(type: typeof Column.EVENT_VISIBILITY_CHANGED, listener: typeof visibilityChanged | null): this;\n  on(type: string | string[], listener: IEventListener | null): this; // required for correct typings in *.d.ts\n  on(type: string | string[], listener: IEventListener | null): this {\n    return super.on(<any>type, listener);\n  }\n\n  getValue(row: IDataRow) {\n    const v = this.getCategory(row);\n    return v ? v.name : null;\n  }\n\n  getCategory(row: IDataRow) {\n    const v = super.getValue(row);\n    if (!v) {\n      return null;\n    }\n    const vs = String(v);\n    return this.lookup.has(vs) ? this.lookup.get(vs)! : null;\n  }\n\n  get dataLength() {\n    return this.categories.length;\n  }\n\n  get labels() {\n    return this.categories.map((d) => d.label);\n  }\n\n  getLabel(row: IDataRow) {\n    const v = this.getCategory(row);\n    return v ? v.label : '';\n  }\n\n  getCategories(row: IDataRow) {\n    const v = this.getCategory(row);\n    return [v];\n  }\n\n  getValues(row: IDataRow) {\n    const v = this.getCategory(row);\n    return this.categories.map((d) => d === v);\n  }\n\n  getLabels(row: IDataRow) {\n    return this.getValues(row).map(String);\n  }\n\n  getMap(row: IDataRow) {\n    const cats = this.categories;\n    return this.getValues(row).map((value, i) => ({key: cats[i].label, value}));\n  }\n\n  getMapLabel(row: IDataRow) {\n    const cats = this.categories;\n    return this.getLabels(row).map((value, i) => ({key: cats[i].label, value}));\n  }\n\n  getSet(row: IDataRow) {\n    const cat = this.getCategory(row);\n    const r = new Set<ICategory>();\n    if (cat) {\n      r.add(cat);\n    }\n    return r;\n  }\n\n  iterCategory(row: IDataRow) {\n    return [this.getCategory(row)];\n  }\n\n  dump(toDescRef: (desc: any) => any): any {\n    const r = super.dump(toDescRef);\n    r.filter = this.currentFilter;\n    r.colorMapping = this.colorMapping.toJSON();\n    return r;\n  }\n\n  restore(dump: any, factory: ITypeFactory) {\n    super.restore(dump, factory);\n\n    this.colorMapping = factory.categoricalColorMappingFunction(dump.colorMapping, this.categories);\n\n    if ('filter' in dump) {\n      this.currentFilter = null;\n      return;\n    }\n    const bak = dump.filter;\n    if (typeof bak === 'string' || Array.isArray(bak)) {\n      this.currentFilter = {filter: bak, filterMissing: false};\n    } else {\n      this.currentFilter = bak;\n    }\n  }\n\n  getColor(row: IDataRow) {\n    const v = this.getCategory(row);\n    return v ? this.colorMapping.apply(v) : DEFAULT_COLOR;\n  }\n\n  getColorMapping() {\n    return this.colorMapping.clone();\n  }\n\n  setColorMapping(mapping: ICategoricalColorMappingFunction) {\n    if (this.colorMapping.eq(mapping)) {\n      return;\n    }\n    this.fire([CategoricalColumn.EVENT_COLOR_MAPPING_CHANGED, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY_CACHES, Column.EVENT_DIRTY_HEADER, Column.EVENT_DIRTY], this.colorMapping.clone(), this.colorMapping = mapping);\n  }\n\n  isFiltered() {\n    return this.currentFilter != null;\n  }\n\n  filter(row: IDataRow, valueCache?: any): boolean {\n    return isCategoryIncluded(this.currentFilter, valueCache !== undefined ? valueCache : this.getCategory(row));\n  }\n\n  getFilter() {\n    return this.currentFilter == null ? null : Object.assign({}, this.currentFilter);\n  }\n\n  setFilter(filter: ICategoricalFilter | null) {\n    if (isEqualCategoricalFilter(this.currentFilter, filter)) {\n      return;\n    }\n    this.fire([CategoricalColumn.EVENT_FILTER_CHANGED, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY], this.currentFilter, this.currentFilter = filter);\n  }\n\n  clearFilter() {\n    const was = this.isFiltered();\n    this.setFilter(null);\n    return was;\n  }\n\n  toCompareValue(row: IDataRow, valueCache?: any) {\n    return toCompareCategoryValue(valueCache !== undefined ? valueCache : this.getCategory(row));\n  }\n\n  toCompareValueType(): ECompareValueType {\n    return COMPARE_CATEGORY_VALUE_TYPES;\n  }\n\n  group(row: IDataRow, valueCache?: any): IGroup {\n    const cat = valueCache !== undefined ? valueCache : this.getCategory(row);\n    if (!cat) {\n      return Object.assign({}, missingGroup);\n    }\n    return {name: cat.label, color: cat.color};\n  }\n\n  toCompareGroupValue(rows: ISequence<IDataRow>, _group: IGroup, valueCache?: ISequence<any>): ICompareValue[] {\n    return toGroupCompareCategoryValue(rows, this, valueCache);\n  }\n\n  toCompareGroupValueType() {\n    return COMPARE_GROUP_CATEGORY_VALUE_TYPES;\n  }\n\n  getGroupRenderer() {\n    const current = super.getGroupRenderer();\n    if (current === this.desc.type && this.isGroupedBy() >= 0) {\n      // still the default and the stratification criteria\n      return 'catdistributionbar';\n    }\n    return current;\n  }\n}\n","import {Category, toolbar} from './annotations';\nimport CategoricalColumn from './CategoricalColumn';\nimport Column, {widthChanged, labelChanged, metaDataChanged, dirty, dirtyHeader, dirtyValues, rendererTypeChanged, groupRendererChanged, summaryRendererChanged, visibilityChanged, dirtyCaches} from './Column';\nimport ValueColumn, {dataLoaded} from './ValueColumn';\nimport {ICategoricalColumn, ICategory, ICategoricalColorMappingFunction} from './ICategoricalColumn';\nimport {IDataRow, ECompareValueType, IValueColumnDesc, ITypeFactory} from './interfaces';\nimport {IEventListener} from '../internal';\nimport {DEFAULT_CATEGORICAL_COLOR_FUNCTION} from './CategoricalColorMappingFunction';\n\nexport interface IBooleanDesc {\n  /**\n   * string to show for true\n   * @default ✓\n   */\n  trueMarker?: string;\n  /**\n   * strint to show for false\n   * @default (empty)\n   */\n  falseMarker?: string;\n}\n\nexport declare type IBooleanColumnDesc = IValueColumnDesc<boolean> & IBooleanDesc;\n\n/**\n * emitted when the color mapping property changes\n * @asMemberOf BooleanColumn\n * @event\n */\nexport declare function colorMappingChanged_BC(previous: ICategoricalColorMappingFunction, current: ICategoricalColorMappingFunction): void;\n\n/**\n * emitted when the filter property changes\n * @asMemberOf BooleanColumn\n * @event\n */\nexport declare function filterChanged_BC(previous: boolean | null, current: boolean | null): void;\n\n/**\n * a string column with optional alignment\n */\n@toolbar('group', 'groupBy', 'filterBoolean', 'colorMappedCategorical')\n@Category('categorical')\nexport default class BooleanColumn extends ValueColumn<boolean> implements ICategoricalColumn {\n  static readonly EVENT_FILTER_CHANGED = 'filterChanged';\n  static readonly EVENT_COLOR_MAPPING_CHANGED = 'colorMappingChanged';\n\n  static readonly GROUP_TRUE = {name: 'True', color: 'black'};\n  static readonly GROUP_FALSE = {name: 'False', color: 'white'};\n\n  private currentFilter: boolean | null = null;\n\n  private colorMapping: ICategoricalColorMappingFunction;\n  readonly categories: ICategory[];\n\n  constructor(id: string, desc: Readonly<IBooleanColumnDesc>) {\n    super(id, desc);\n    this.setWidthImpl(30);\n    this.categories = [\n      {\n        name: desc.trueMarker || '✓',\n        color: BooleanColumn.GROUP_TRUE.color,\n        label: BooleanColumn.GROUP_TRUE.name,\n        value: 0\n      },\n      {\n        name: desc.trueMarker || '',\n        color: BooleanColumn.GROUP_FALSE.color,\n        label: BooleanColumn.GROUP_FALSE.name,\n        value: 1\n      }\n    ];\n    this.colorMapping = DEFAULT_CATEGORICAL_COLOR_FUNCTION;\n  }\n\n  protected createEventList() {\n    return super.createEventList().concat([BooleanColumn.EVENT_COLOR_MAPPING_CHANGED, BooleanColumn.EVENT_FILTER_CHANGED]);\n  }\n\n  on(type: typeof BooleanColumn.EVENT_FILTER_CHANGED, listener: typeof filterChanged_BC | null): this;\n  on(type: typeof BooleanColumn.EVENT_COLOR_MAPPING_CHANGED, listener: typeof colorMappingChanged_BC | null): this;\n  on(type: typeof ValueColumn.EVENT_DATA_LOADED, listener: typeof dataLoaded | null): this;\n  on(type: typeof Column.EVENT_WIDTH_CHANGED, listener: typeof widthChanged | null): this;\n  on(type: typeof Column.EVENT_LABEL_CHANGED, listener: typeof labelChanged | null): this;\n  on(type: typeof Column.EVENT_METADATA_CHANGED, listener: typeof metaDataChanged | null): this;\n  on(type: typeof Column.EVENT_DIRTY, listener: typeof dirty | null): this;\n  on(type: typeof Column.EVENT_DIRTY_HEADER, listener: typeof dirtyHeader | null): this;\n  on(type: typeof Column.EVENT_DIRTY_VALUES, listener: typeof dirtyValues | null): this;\n  on(type: typeof Column.EVENT_DIRTY_CACHES, listener: typeof dirtyCaches | null): this;\n  on(type: typeof Column.EVENT_RENDERER_TYPE_CHANGED, listener: typeof rendererTypeChanged | null): this;\n  on(type: typeof Column.EVENT_GROUP_RENDERER_TYPE_CHANGED, listener: typeof groupRendererChanged | null): this;\n  on(type: typeof Column.EVENT_SUMMARY_RENDERER_TYPE_CHANGED, listener: typeof summaryRendererChanged | null): this;\n  on(type: typeof Column.EVENT_VISIBILITY_CHANGED, listener: typeof visibilityChanged | null): this;\n  on(type: string | string[], listener: IEventListener | null): this; // required for correct typings in *.d.ts\n  on(type: string | string[], listener: IEventListener | null): this {\n    return super.on(<any>type, listener);\n  }\n\n\n  get dataLength() {\n    return this.categories.length;\n  }\n\n  get labels() {\n    return this.categories.map((d) => d.label);\n  }\n\n  getValue(row: IDataRow) {\n    const v: any = super.getValue(row);\n    if (typeof (v) === 'undefined' || v == null) {\n      return false;\n    }\n    return v === true || v === 'true' || v === 'yes' || v === 'x';\n  }\n\n  getCategory(row: IDataRow) {\n    const v = this.getValue(row);\n    return this.categories[v ? 0 : 1];\n  }\n\n  getCategories(row: IDataRow) {\n    return [this.getCategory(row)];\n  }\n\n  iterCategory(row: IDataRow) {\n    return [this.getCategory(row)];\n  }\n\n  getColor(row: IDataRow) {\n    return CategoricalColumn.prototype.getColor.call(this, row);\n  }\n\n  getLabel(row: IDataRow) {\n    return CategoricalColumn.prototype.getLabel.call(this, row);\n  }\n\n  getLabels(row: IDataRow) {\n    return CategoricalColumn.prototype.getLabels.call(this, row);\n  }\n\n  getValues(row: IDataRow) {\n    return CategoricalColumn.prototype.getValues.call(this, row);\n  }\n\n  getMap(row: IDataRow) {\n    return CategoricalColumn.prototype.getMap.call(this, row);\n  }\n\n  getMapLabel(row: IDataRow) {\n    return CategoricalColumn.prototype.getMapLabel.call(this, row);\n  }\n\n  getSet(row: IDataRow) {\n    const v = this.getValue(row);\n    const r = new Set<ICategory>();\n    r.add(this.categories[v ? 0 : 1]);\n    return r;\n  }\n\n  dump(toDescRef: (desc: any) => any): any {\n    const r = super.dump(toDescRef);\n    r.colorMapping = this.colorMapping.toJSON();\n    if (this.currentFilter != null) {\n      r.filter = this.currentFilter;\n    }\n    return r;\n  }\n\n  restore(dump: any, factory: ITypeFactory) {\n    super.restore(dump, factory);\n    this.colorMapping = factory.categoricalColorMappingFunction(dump.colorMapping, this.categories);\n    if (typeof dump.filter !== 'undefined') {\n      this.currentFilter = dump.filter;\n    }\n  }\n\n  getColorMapping() {\n    return this.colorMapping.clone();\n  }\n\n  setColorMapping(mapping: ICategoricalColorMappingFunction) {\n    if (this.colorMapping.eq(mapping)) {\n      return;\n    }\n    this.fire([CategoricalColumn.EVENT_COLOR_MAPPING_CHANGED, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY_CACHES, Column.EVENT_DIRTY_HEADER, Column.EVENT_DIRTY], this.colorMapping.clone(), this.colorMapping = mapping);\n  }\n\n  isFiltered() {\n    return this.currentFilter != null;\n  }\n\n  filter(row: IDataRow) {\n    if (!this.isFiltered()) {\n      return true;\n    }\n    const r = this.getValue(row);\n    return r === this.currentFilter;\n  }\n\n  getFilter() {\n    return this.currentFilter;\n  }\n\n  setFilter(filter: boolean | null) {\n    if (this.currentFilter === filter) {\n      return;\n    }\n    this.fire([BooleanColumn.EVENT_FILTER_CHANGED, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY], this.currentFilter, this.currentFilter = filter);\n  }\n\n  clearFilter() {\n    const was = this.isFiltered();\n    this.setFilter(null);\n    return was;\n  }\n\n  toCompareValue(row: IDataRow) {\n    const v = this.getValue(row);\n    if (v == null) {\n      return NaN;\n    }\n    return v ? 1 : 0;\n  }\n\n  toCompareValueType(): ECompareValueType {\n    return ECompareValueType.BINARY;\n  }\n\n  group(row: IDataRow) {\n    const enabled = this.getValue(row);\n    return Object.assign({}, enabled ? BooleanColumn.GROUP_TRUE : BooleanColumn.GROUP_FALSE);\n  }\n}\n","import {Category} from './annotations';\nimport ValueColumn from './ValueColumn';\nimport {empty} from '../internal';\nimport {IArrayColumn, IArrayDesc} from './IArrayColumn';\nimport {IDataRow, IValueColumnDesc} from './interfaces';\n\n\nexport interface IArrayColumnDesc<T> extends IArrayDesc, IValueColumnDesc<T[]> {\n  // dummy\n}\n\n\n@Category('array')\nexport default class ArrayColumn<T> extends ValueColumn<T[]> implements IArrayColumn<T> {\n  private readonly _dataLength: number | null;\n\n  private readonly originalLabels: string[];\n\n  constructor(id: string, desc: Readonly<IArrayColumnDesc<T>>) {\n    super(id, desc);\n    this._dataLength = desc.dataLength == null || isNaN(desc.dataLength) ? null : desc.dataLength;\n    this.originalLabels = desc.labels || (empty(this._dataLength == null ? 0 : this._dataLength).map((_d, i) => `Column ${i}`));\n  }\n\n\n  get labels() {\n    return this.originalLabels;\n  }\n\n  get dataLength() {\n    return this._dataLength;\n  }\n\n  getValue(row: IDataRow) {\n    const r = this.getValues(row);\n    return r.every((d) => d === null) ? null : r;\n  }\n\n  getValues(row: IDataRow) {\n    const r = super.getValue(row);\n    return r == null ? [] : r;\n  }\n\n  getLabels(row: IDataRow) {\n    return this.getValues(row).map(String);\n  }\n\n  getLabel(row: IDataRow): string {\n    const v = this.getLabels(row);\n    if (v.length === 0) {\n      return '';\n    }\n    return v.toString();\n  }\n\n  getMap(row: IDataRow) {\n    const labels = this.labels;\n    return this.getValues(row).map((value, i) => ({key: labels[i], value}));\n  }\n\n  getMapLabel(row: IDataRow) {\n    const labels = this.labels;\n    return this.getLabels(row).map((value, i) => ({key: labels[i], value}));\n  }\n}\n\n","import ArrayColumn, {IArrayColumnDesc} from './ArrayColumn';\nimport {ISetColumn, ICategoricalColorMappingFunction} from './ICategoricalColumn';\nimport {IDataRow, DEFAULT_COLOR, ITypeFactory, ECompareValueType} from './interfaces';\nimport CategoricalColumn from './CategoricalColumn';\nimport {DEFAULT_CATEGORICAL_COLOR_FUNCTION} from './CategoricalColorMappingFunction';\nimport ValueColumn, {dataLoaded} from './ValueColumn';\nimport Column, {labelChanged, metaDataChanged, dirty, dirtyHeader, dirtyValues, rendererTypeChanged, groupRendererChanged, summaryRendererChanged, visibilityChanged, widthChanged, dirtyCaches} from './Column';\nimport {IEventListener} from '../internal';\nimport {chooseUIntByDataLength} from './internal';\nimport {toCategory} from './internalCategorical';\n\n\nexport declare type IBooleansColumnDesc = IArrayColumnDesc<boolean>;\n\n/**\n * emitted when the color mapping property changes\n * @asMemberOf BooleansColumn\n * @event\n */\nexport declare function colorMappingChanged_BCS(previous: ICategoricalColorMappingFunction, current: ICategoricalColorMappingFunction): void;\n\n\nexport default class BooleansColumn extends ArrayColumn<boolean> implements ISetColumn {\n  static readonly EVENT_COLOR_MAPPING_CHANGED = CategoricalColumn.EVENT_COLOR_MAPPING_CHANGED;\n\n  private colorMapping: ICategoricalColorMappingFunction;\n\n  constructor(id: string, desc: Readonly<IBooleansColumnDesc>) {\n    super(id, desc);\n    this.setDefaultRenderer('upset');\n    this.colorMapping = DEFAULT_CATEGORICAL_COLOR_FUNCTION;\n  }\n\n  get categories() {\n    return this.labels.map((d, i) => toCategory(d, i));\n  }\n\n  getSet(row: IDataRow) {\n    const vs = this.getValues(row);\n    return new Set(this.categories.filter((_, i) => vs[i]));\n  }\n\n  toCompareValue(row: IDataRow) {\n    const v = this.getValue(row);\n    if (v == null) {\n      return NaN;\n    }\n    return v.reduce((a, b) => a + (b ? 1 : 0), 0);\n  }\n\n  toCompareValueType(): ECompareValueType {\n    return chooseUIntByDataLength(this.dataLength);\n  }\n\n  getCategories(row: IDataRow) {\n    const categories = this.categories;\n    return super.getValues(row).map((v, i) => {\n      return v ? categories[i]! : null;\n    });\n  }\n\n  iterCategory(row: IDataRow) {\n    return this.getCategories(row);\n  }\n\n  getColors(row: IDataRow) {\n    return this.getCategories(row).map((d) => d ? this.colorMapping.apply(d) : DEFAULT_COLOR);\n  }\n\n\n  protected createEventList() {\n    return super.createEventList().concat([BooleansColumn.EVENT_COLOR_MAPPING_CHANGED]);\n  }\n\n  on(type: typeof BooleansColumn.EVENT_COLOR_MAPPING_CHANGED, listener: typeof colorMappingChanged_BCS | null): this;\n  on(type: typeof ValueColumn.EVENT_DATA_LOADED, listener: typeof dataLoaded | null): this;\n  on(type: typeof Column.EVENT_WIDTH_CHANGED, listener: typeof widthChanged | null): this;\n  on(type: typeof Column.EVENT_LABEL_CHANGED, listener: typeof labelChanged | null): this;\n  on(type: typeof Column.EVENT_METADATA_CHANGED, listener: typeof metaDataChanged | null): this;\n  on(type: typeof Column.EVENT_DIRTY, listener: typeof dirty | null): this;\n  on(type: typeof Column.EVENT_DIRTY_HEADER, listener: typeof dirtyHeader | null): this;\n  on(type: typeof Column.EVENT_DIRTY_VALUES, listener: typeof dirtyValues | null): this;\n  on(type: typeof Column.EVENT_DIRTY_CACHES, listener: typeof dirtyCaches | null): this;\n  on(type: typeof Column.EVENT_RENDERER_TYPE_CHANGED, listener: typeof rendererTypeChanged | null): this;\n  on(type: typeof Column.EVENT_GROUP_RENDERER_TYPE_CHANGED, listener: typeof groupRendererChanged | null): this;\n  on(type: typeof Column.EVENT_SUMMARY_RENDERER_TYPE_CHANGED, listener: typeof summaryRendererChanged | null): this;\n  on(type: typeof Column.EVENT_VISIBILITY_CHANGED, listener: typeof visibilityChanged | null): this;\n  on(type: string | string[], listener: IEventListener | null): this; // required for correct typings in *.d.ts\n  on(type: string | string[], listener: IEventListener | null): this {\n    return super.on(<any>type, listener);\n  }\n\n  getColorMapping() {\n    return this.colorMapping.clone();\n  }\n\n  setColorMapping(mapping: ICategoricalColorMappingFunction) {\n    return CategoricalColumn.prototype.setColorMapping.call(this, mapping);\n  }\n\n  dump(toDescRef: (desc: any) => any): any {\n    const r = super.dump(toDescRef);\n    r.colorMapping = this.colorMapping.toJSON();\n    return r;\n  }\n\n  restore(dump: any, factory: ITypeFactory) {\n    super.restore(dump, factory);\n    this.colorMapping = factory.categoricalColorMappingFunction(dump.colorMapping, this.categories);\n  }\n}\n","// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nexport default function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport default function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n}\n","// [[fill]align][sign][symbol][0][width][,][.precision][~][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?(~)?([a-z%])?$/i;\n\nexport default function formatSpecifier(specifier) {\n  return new FormatSpecifier(specifier);\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n  var match;\n  this.fill = match[1] || \" \";\n  this.align = match[2] || \">\";\n  this.sign = match[3] || \"-\";\n  this.symbol = match[4] || \"\";\n  this.zero = !!match[5];\n  this.width = match[6] && +match[6];\n  this.comma = !!match[7];\n  this.precision = match[8] && +match[8].slice(1);\n  this.trim = !!match[9];\n  this.type = match[10] || \"\";\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + (this.trim ? \"~\" : \"\")\n      + this.type;\n};\n","// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.\nexport default function(s) {\n  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (s[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      default: if (i0 > 0) { if (!+s[i]) break out; i0 = 0; } break;\n    }\n  }\n  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport var prefixExponent;\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n}\n","import formatLocale from \"./locale\";\n\nvar locale;\nexport var format;\nexport var formatPrefix;\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  format = locale.format;\n  formatPrefix = locale.formatPrefix;\n  return locale;\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n}\n","import formatPrefixAuto from \"./formatPrefixAuto\";\nimport formatRounded from \"./formatRounded\";\n\nexport default {\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n","export default function(x) {\n  return x;\n}\n","import exponent from \"./exponent\";\nimport formatGroup from \"./formatGroup\";\nimport formatNumerals from \"./formatNumerals\";\nimport formatSpecifier from \"./formatSpecifier\";\nimport formatTrim from \"./formatTrim\";\nimport formatTypes from \"./formatTypes\";\nimport {prefixExponent} from \"./formatPrefixAuto\";\nimport identity from \"./identity\";\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nexport default function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity,\n      currency = locale.currency,\n      decimal = locale.decimal,\n      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity,\n      percent = locale.percent || \"%\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        trim = specifier.trim,\n        type = specifier.type;\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === \"n\") comma = true, type = \"g\";\n\n    // The \"\" type, and any invalid type, is an alias for \".12~g\".\n    else if (!formatTypes[type]) precision == null && (precision = 12), trim = true, type = \"g\";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? 6\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Perform the initial formatting.\n        var valueNegative = value < 0;\n        value = formatType(Math.abs(value), precision);\n\n        // Trim insignificant zeros.\n        if (trim) value = formatTrim(value);\n\n        // If a negative value rounds to zero during formatting, treat as positive.\n        if (valueNegative && +value === 0) valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + valueSuffix + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n}\n","export default function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n}\n","export default function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n}\n","import exponent from \"./exponent\";\n\nexport default function(step) {\n  return Math.max(0, -exponent(Math.abs(step)));\n}\n","export default function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import ascending from \"./ascending\";\n\nexport default function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n","import ascending from \"./ascending\";\nimport bisector from \"./bisector\";\n\nvar ascendingBisect = bisector(ascending);\nexport var bisectRight = ascendingBisect.right;\nexport var bisectLeft = ascendingBisect.left;\nexport default bisectRight;\n","var array = Array.prototype;\n\nexport var slice = array.slice;\nexport var map = array.map;\n","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nexport default function(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n","export function initRange(domain, range) {\n  switch (arguments.length) {\n    case 0: break;\n    case 1: this.range(domain); break;\n    default: this.range(range).domain(domain); break;\n  }\n  return this;\n}\n\nexport function initInterpolator(domain, interpolator) {\n  switch (arguments.length) {\n    case 0: break;\n    case 1: this.interpolator(domain); break;\n    default: this.interpolator(interpolator).domain(domain); break;\n  }\n  return this;\n}\n","import {initRange} from \"./init\";\n\nexport const implicit = Symbol(\"implicit\");\n\nexport default function ordinal() {\n  var index = new Map(),\n      domain = [],\n      range = [],\n      unknown = implicit;\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = new Map();\n    for (const value of _) {\n      const key = value + \"\";\n      if (index.has(key)) continue;\n      index.set(key, domain.push(value));\n    }\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = Array.from(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal(domain, range).unknown(unknown);\n  };\n\n  initRange.apply(scale, arguments);\n\n  return scale;\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(x) {\n  return +x;\n}\n","import {bisect} from \"d3-array\";\nimport {interpolate as interpolateValue, interpolateNumber, interpolateRound} from \"d3-interpolate\";\nimport constant from \"./constant\";\nimport number from \"./number\";\n\nvar unit = [0, 1];\n\nexport function identity(x) {\n  return x;\n}\n\nfunction normalize(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant(isNaN(b) ? NaN : 0.5);\n}\n\nfunction clamper(domain) {\n  var a = domain[0], b = domain[domain.length - 1], t;\n  if (a > b) t = a, a = b, b = t;\n  return function(x) { return Math.max(a, Math.min(b, x)); };\n}\n\n// normalize(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// interpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding range value x in [a,b].\nfunction bimap(domain, range, interpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n  if (d1 < d0) d0 = normalize(d1, d0), r0 = interpolate(r1, r0);\n  else d0 = normalize(d0, d1), r0 = interpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range, interpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = normalize(domain[i], domain[i + 1]);\n    r[i] = interpolate(range[i], range[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisect(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nexport function copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp())\n      .unknown(source.unknown());\n}\n\nexport function transformer() {\n  var domain = unit,\n      range = unit,\n      interpolate = interpolateValue,\n      transform,\n      untransform,\n      unknown,\n      clamp = identity,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return isNaN(x = +x) ? unknown : (output || (output = piecewise(domain.map(transform), range, interpolate)))(transform(clamp(x)));\n  }\n\n  scale.invert = function(y) {\n    return clamp(untransform((input || (input = piecewise(range, domain.map(transform), interpolateNumber)))(y)));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = Array.from(_, number), clamp === identity || (clamp = clamper(domain)), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = Array.from(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = Array.from(_), interpolate = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = _ ? clamper(domain) : identity, scale) : clamp !== identity;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, rescale()) : interpolate;\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  return function(t, u) {\n    transform = t, untransform = u;\n    return rescale();\n  };\n}\n\nexport default function continuous(transform, untransform) {\n  return transformer()(transform, untransform);\n}\n","import {tickStep} from \"d3-array\";\nimport {format, formatPrefix, formatSpecifier, precisionFixed, precisionPrefix, precisionRound} from \"d3-format\";\n\nexport default function(start, stop, count, specifier) {\n  var step = tickStep(start, stop, count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return format(specifier);\n}\n","import exponent from \"./exponent\";\n\nexport default function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n}\n","import exponent from \"./exponent\";\n\nexport default function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent(max) - exponent(step)) + 1;\n}\n","import {ticks, tickIncrement} from \"d3-array\";\nimport continuous, {copy, identity} from \"./continuous\";\nimport {initRange} from \"./init\";\nimport tickFormat from \"./tickFormat\";\n\nexport function linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    var d = domain();\n    return tickFormat(d[0], d[d.length - 1], count == null ? 10 : count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain(),\n        i0 = 0,\n        i1 = d.length - 1,\n        start = d[i0],\n        stop = d[i1],\n        step;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n\n    step = tickIncrement(start, stop, count);\n\n    if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n      step = tickIncrement(start, stop, count);\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n      step = tickIncrement(start, stop, count);\n    }\n\n    if (step > 0) {\n      d[i0] = Math.floor(start / step) * step;\n      d[i1] = Math.ceil(stop / step) * step;\n      domain(d);\n    } else if (step < 0) {\n      d[i0] = Math.ceil(start * step) / step;\n      d[i1] = Math.floor(stop * step) / step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nexport default function linear() {\n  var scale = continuous(identity, identity);\n\n  scale.copy = function() {\n    return copy(scale, linear());\n  };\n\n  initRange.apply(scale, arguments);\n\n  return linearish(scale);\n}\n","export default function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n}\n","import {ticks} from \"d3-array\";\nimport {format} from \"d3-format\";\nimport nice from \"./nice\";\nimport {copy, transformer} from \"./continuous\";\nimport {initRange} from \"./init\";\n\nfunction transformLog(x) {\n  return Math.log(x);\n}\n\nfunction transformExp(x) {\n  return Math.exp(x);\n}\n\nfunction transformLogn(x) {\n  return -Math.log(-x);\n}\n\nfunction transformExpn(x) {\n  return -Math.exp(-x);\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nexport function loggish(transform) {\n  var scale = transform(transformLog, transformExp),\n      domain = scale.domain,\n      base = 10,\n      logs,\n      pows;\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) {\n      logs = reflect(logs), pows = reflect(pows);\n      transform(transformLogn, transformExpn);\n    } else {\n      transform(transformLog, transformExp);\n    }\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  return scale;\n}\n\nexport default function log() {\n  var scale = loggish(transformer()).domain([1, 10]);\n\n  scale.copy = function() {\n    return copy(scale, log()).base(scale.base());\n  };\n\n  initRange.apply(scale, arguments);\n\n  return scale;\n}\n","import {linearish} from \"./linear\";\nimport {copy, identity, transformer} from \"./continuous\";\nimport {initRange} from \"./init\";\n\nfunction transformPow(exponent) {\n  return function(x) {\n    return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n  };\n}\n\nfunction transformSqrt(x) {\n  return x < 0 ? -Math.sqrt(-x) : Math.sqrt(x);\n}\n\nfunction transformSquare(x) {\n  return x < 0 ? -x * x : x * x;\n}\n\nexport function powish(transform) {\n  var scale = transform(identity, identity),\n      exponent = 1;\n\n  function rescale() {\n    return exponent === 1 ? transform(identity, identity)\n        : exponent === 0.5 ? transform(transformSqrt, transformSquare)\n        : transform(transformPow(exponent), transformPow(1 / exponent));\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, rescale()) : exponent;\n  };\n\n  return linearish(scale);\n}\n\nexport default function pow() {\n  var scale = powish(transformer());\n\n  scale.copy = function() {\n    return copy(scale, pow()).exponent(scale.exponent());\n  };\n\n  initRange.apply(scale, arguments);\n\n  return scale;\n}\n\nexport function sqrt() {\n  return pow.apply(null, arguments).exponent(0.5);\n}\n","var t0 = new Date,\n    t1 = new Date;\n\nexport default function newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [], previous;\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n    while (previous < start && start < stop);\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n","import interval from \"./interval\";\n\nvar millisecond = interval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return interval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nexport default millisecond;\nexport var milliseconds = millisecond.range;\n","export var durationSecond = 1e3;\nexport var durationMinute = 6e4;\nexport var durationHour = 36e5;\nexport var durationDay = 864e5;\nexport var durationWeek = 6048e5;\n","import interval from \"./interval\";\nimport {durationSecond} from \"./duration\";\n\nvar second = interval(function(date) {\n  date.setTime(date - date.getMilliseconds());\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond);\n}, function(start, end) {\n  return (end - start) / durationSecond;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nexport default second;\nexport var seconds = second.range;\n","import interval from \"./interval\";\nimport {durationMinute, durationSecond} from \"./duration\";\n\nvar minute = interval(function(date) {\n  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getMinutes();\n});\n\nexport default minute;\nexport var minutes = minute.range;\n","import interval from \"./interval\";\nimport {durationHour, durationMinute, durationSecond} from \"./duration\";\n\nvar hour = interval(function(date) {\n  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond - date.getMinutes() * durationMinute);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getHours();\n});\n\nexport default hour;\nexport var hours = hour.range;\n","import interval from \"./interval\";\nimport {durationDay, durationMinute} from \"./duration\";\n\nvar day = interval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nexport default day;\nexport var days = day.range;\n","import interval from \"./interval\";\nimport {durationMinute, durationWeek} from \"./duration\";\n\nfunction weekday(i) {\n  return interval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nexport var sunday = weekday(0);\nexport var monday = weekday(1);\nexport var tuesday = weekday(2);\nexport var wednesday = weekday(3);\nexport var thursday = weekday(4);\nexport var friday = weekday(5);\nexport var saturday = weekday(6);\n\nexport var sundays = sunday.range;\nexport var mondays = monday.range;\nexport var tuesdays = tuesday.range;\nexport var wednesdays = wednesday.range;\nexport var thursdays = thursday.range;\nexport var fridays = friday.range;\nexport var saturdays = saturday.range;\n","import interval from \"./interval\";\n\nvar month = interval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nexport default month;\nexport var months = month.range;\n","import interval from \"./interval\";\n\nvar year = interval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nexport default year;\nexport var years = year.range;\n","import interval from \"./interval\";\nimport {durationMinute} from \"./duration\";\n\nvar utcMinute = interval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nexport default utcMinute;\nexport var utcMinutes = utcMinute.range;\n","import interval from \"./interval\";\nimport {durationHour} from \"./duration\";\n\nvar utcHour = interval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nexport default utcHour;\nexport var utcHours = utcHour.range;\n","import interval from \"./interval\";\nimport {durationDay} from \"./duration\";\n\nvar utcDay = interval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nexport default utcDay;\nexport var utcDays = utcDay.range;\n","import interval from \"./interval\";\nimport {durationWeek} from \"./duration\";\n\nfunction utcWeekday(i) {\n  return interval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek;\n  });\n}\n\nexport var utcSunday = utcWeekday(0);\nexport var utcMonday = utcWeekday(1);\nexport var utcTuesday = utcWeekday(2);\nexport var utcWednesday = utcWeekday(3);\nexport var utcThursday = utcWeekday(4);\nexport var utcFriday = utcWeekday(5);\nexport var utcSaturday = utcWeekday(6);\n\nexport var utcSundays = utcSunday.range;\nexport var utcMondays = utcMonday.range;\nexport var utcTuesdays = utcTuesday.range;\nexport var utcWednesdays = utcWednesday.range;\nexport var utcThursdays = utcThursday.range;\nexport var utcFridays = utcFriday.range;\nexport var utcSaturdays = utcSaturday.range;\n","import interval from \"./interval\";\n\nvar utcMonth = interval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nexport default utcMonth;\nexport var utcMonths = utcMonth.range;\n","import interval from \"./interval\";\n\nvar utcYear = interval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nexport default utcYear;\nexport var utcYears = utcYear.range;\n","import {\n  timeDay,\n  timeSunday,\n  timeMonday,\n  timeThursday,\n  timeYear,\n  utcDay,\n  utcSunday,\n  utcMonday,\n  utcThursday,\n  utcYear\n} from \"d3-time\";\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nexport default function formatLocale(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"f\": formatMicroseconds,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatSeconds,\n    \"u\": formatWeekdayNumberMonday,\n    \"U\": formatWeekNumberSunday,\n    \"V\": formatWeekNumberISO,\n    \"w\": formatWeekdayNumberSunday,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"f\": formatUTCMicroseconds,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatUTCSeconds,\n    \"u\": formatUTCWeekdayNumberMonday,\n    \"U\": formatUTCWeekNumberSunday,\n    \"V\": formatUTCWeekNumberISO,\n    \"w\": formatUTCWeekdayNumberSunday,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"f\": parseMicroseconds,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"Q\": parseUnixTimestamp,\n    \"s\": parseUnixTimestampSeconds,\n    \"S\": parseSeconds,\n    \"u\": parseWeekdayNumberMonday,\n    \"U\": parseWeekNumberSunday,\n    \"V\": parseWeekNumberISO,\n    \"w\": parseWeekdayNumberSunday,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0),\n          week, day;\n      if (i != string.length) return null;\n\n      // If a UNIX timestamp is specified, return it.\n      if (\"Q\" in d) return new Date(d.Q);\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"V\" in d) {\n        if (d.V < 1 || d.V > 53) return null;\n        if (!(\"w\" in d)) d.w = 1;\n        if (\"Z\" in d) {\n          week = utcDate(newYear(d.y)), day = week.getUTCDay();\n          week = day > 4 || day === 0 ? utcMonday.ceil(week) : utcMonday(week);\n          week = utcDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getUTCFullYear();\n          d.m = week.getUTCMonth();\n          d.d = week.getUTCDate() + (d.w + 6) % 7;\n        } else {\n          week = newDate(newYear(d.y)), day = week.getDay();\n          week = day > 4 || day === 0 ? timeMonday.ceil(week) : timeMonday(week);\n          week = timeDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getFullYear();\n          d.m = week.getMonth();\n          d.d = week.getDate() + (d.w + 6) % 7;\n        }\n      } else if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"u\" in d ? d.u % 7 : \"W\" in d ? 1 : 0;\n        day = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"},\n    numberRe = /^\\s*\\d+/, // note: ignores next directive\n    percentRe = /^%/,\n    requoteRe = /[\\\\^$*+?|[\\]().{}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekdayNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.u = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberISO(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.V = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?::?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMicroseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 6));\n  return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction parseUnixTimestamp(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseUnixTimestampSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = (+n[0]) * 1000, i + n[0].length) : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + timeDay.count(timeYear(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMicroseconds(d, p) {\n  return formatMilliseconds(d, p) + \"000\";\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekdayNumberMonday(d) {\n  var day = d.getDay();\n  return day === 0 ? 7 : day;\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(timeSunday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatWeekNumberISO(d, p) {\n  var day = d.getDay();\n  d = (day >= 4 || day === 0) ? timeThursday(d) : timeThursday.ceil(d);\n  return pad(timeThursday.count(timeYear(d), d) + (timeYear(d).getDay() === 4), p, 2);\n}\n\nfunction formatWeekdayNumberSunday(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(timeMonday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMicroseconds(d, p) {\n  return formatUTCMilliseconds(d, p) + \"000\";\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekdayNumberMonday(d) {\n  var dow = d.getUTCDay();\n  return dow === 0 ? 7 : dow;\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekNumberISO(d, p) {\n  var day = d.getUTCDay();\n  d = (day >= 4 || day === 0) ? utcThursday(d) : utcThursday.ceil(d);\n  return pad(utcThursday.count(utcYear(d), d) + (utcYear(d).getUTCDay() === 4), p, 2);\n}\n\nfunction formatUTCWeekdayNumberSunday(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nfunction formatUnixTimestamp(d) {\n  return +d;\n}\n\nfunction formatUnixTimestampSeconds(d) {\n  return Math.floor(+d / 1000);\n}\n","import formatLocale from \"./locale\";\n\nvar locale;\nexport var timeFormat;\nexport var timeParse;\nexport var utcFormat;\nexport var utcParse;\n\ndefaultLocale({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  timeFormat = locale.format;\n  timeParse = locale.parse;\n  utcFormat = locale.utcFormat;\n  utcParse = locale.utcParse;\n  return locale;\n}\n","import {utcFormat} from \"./defaultLocale\";\n\nexport var isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : utcFormat(isoSpecifier);\n\nexport default formatIso;\n","import {isoSpecifier} from \"./isoFormat\";\nimport {utcParse} from \"./defaultLocale\";\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : utcParse(isoSpecifier);\n\nexport default parseIso;\n","import {scaleLinear, scaleLog, scalePow, scaleSqrt} from 'd3-scale';\nimport {similar} from '../internal';\nimport {IMappingFunction, IMapAbleDesc} from '.';\nimport {ITypeFactory, ITypedDump} from './interfaces';\nimport {IMappingFunctionConstructor} from './INumberColumn';\n\n/**\n * interface of a d3 scale\n */\nexport interface IScale {\n  (v: number): number;\n\n  invert(r: number): number;\n\n  domain(): number[];\n\n  domain(domain: number[]): this;\n\n  range(): number[];\n\n  range(range: number[]): this;\n}\n\nfunction toScale(type = 'linear'): IScale {\n  switch (type) {\n    case 'log':\n      return scaleLog().clamp(true);\n    case 'sqrt':\n      return scaleSqrt().clamp(true);\n    case 'pow1.1':\n      return scalePow().exponent(1.1).clamp(true);\n    case 'pow2':\n      return scalePow().exponent(2).clamp(true);\n    case 'pow3':\n      return scalePow().exponent(3).clamp(true);\n    default:\n      return scaleLinear().clamp(true);\n  }\n}\n\nfunction isSame(a: number[], b: number[]) {\n  if (a.length !== b.length) {\n    return false;\n  }\n  return a.every((ai, i) => similar(ai, b[i], 0.0001));\n}\n\n\nfunction fixDomain(domain: number[], type: string) {\n  if (type === 'log' && domain[0] === 0) {\n    domain[0] = 0.0000001; //0 is bad\n  }\n  return domain;\n}\n\n/**\n * a mapping function based on a d3 scale (linear, sqrt, log)\n */\nexport class ScaleMappingFunction implements IMappingFunction {\n  private s: IScale;\n  private readonly type: string;\n\n  constructor();\n  constructor(dump: ITypedDump);\n  constructor(domain: number[], type: string, range: number[]);\n  constructor(domain: ITypedDump|number[] = [0, 1], type = 'linear', range: number[] = [0, 1]) {\n    if (!domain || Array.isArray(domain)) {\n      this.type = type;\n      this.s = toScale(type).domain(fixDomain(domain || [0, 1], this.type)).range(range);\n    } else {\n      const dump = domain;\n      this.type = dump.type;\n      this.s = toScale(dump.type).domain(dump.domain).range(dump.range);\n    }\n  }\n\n  get domain() {\n    return this.s.domain();\n  }\n\n  set domain(domain: number[]) {\n    this.s.domain(fixDomain(domain, this.type));\n  }\n\n  get range() {\n    return this.s.range();\n  }\n\n  set range(range: number[]) {\n    this.s.range(range);\n  }\n\n  getRange(format: (v: number) => string): [string, string] {\n    return [format(this.invert(0)), format(this.invert(1))];\n  }\n\n  apply(v: number): number {\n    return this.s(v);\n  }\n\n  invert(r: number) {\n    return this.s.invert(r);\n  }\n\n  get scaleType() {\n    return this.type;\n  }\n\n  toJSON() {\n    return {\n      type: this.type,\n      domain: this.domain,\n      range: this.range\n    };\n  }\n\n  eq(other: IMappingFunction): boolean {\n    if (!(other instanceof ScaleMappingFunction)) {\n      return false;\n    }\n    const that = <ScaleMappingFunction>other;\n    return that.type === this.type && isSame(this.domain, that.domain) && isSame(this.range, that.range);\n  }\n\n  clone() {\n    return new ScaleMappingFunction(this.domain, this.type, this.range);\n  }\n}\n\nexport interface IScriptMappingFunctionContext {\n  value_min: number;\n  value_max: number;\n  value_range: number;\n  value_domain: number[];\n  linear(v: number, min: number, max: number): number;\n}\n\nexport interface IScriptMappingFunctionType {\n  (this: IScriptMappingFunctionContext, value: number): number;\n}\n\n/**\n * a mapping function based on a custom user function using 'value' as the current value\n */\nexport class ScriptMappingFunction implements IMappingFunction {\n  private readonly f: IScriptMappingFunctionType;\n  public domain: number[];\n  public readonly code: string;\n\n  constructor();\n  constructor(dump: ITypedDump);\n  constructor(domain: number[], code?: string | IScriptMappingFunctionType);\n  constructor(domain: ITypedDump | number[] = [0, 1], code: string | IScriptMappingFunctionType = 'return this.linear(value,this.value_min,this.value_max);') {\n    if (!domain || Array.isArray(domain)) {\n      this.domain = domain || [0, 1];\n    } else {\n      const dump = domain;\n      this.domain = dump.domain;\n      code = dump.code;\n    }\n    this.code = typeof code === 'string' ? code : code.toString();\n    this.f = typeof code === 'function' ? code : <any>(new Function('value', code));\n  }\n\n  getRange(): [string, string] {\n    return ['?', '?'];\n  }\n\n  apply(v: number): number {\n    const min = this.domain[0],\n      max = this.domain[this.domain.length - 1];\n    const r = this.f.call({\n      value_min: min,\n      value_max: max,\n      value_range: max - min,\n      value_domain: this.domain.slice(),\n      linear: (v: number, mi: number, ma: number) => (v - mi) / (ma - mi)\n    }, v);\n\n    if (typeof r === 'number') {\n      return Math.max(Math.min(r, 1), 0);\n    }\n    return NaN;\n  }\n\n  toJSON() {\n    return {\n      type: 'script',\n      code: this.code,\n      domain: this.domain\n    };\n  }\n\n  eq(other: IMappingFunction): boolean {\n    if (!(other instanceof ScriptMappingFunction)) {\n      return false;\n    }\n    const that = <ScriptMappingFunction>other;\n    return that.code === this.code || that.f === this.f;\n  }\n\n  clone() {\n    return new ScriptMappingFunction(this.domain, this.f);\n  }\n}\n\n/**\n * @internal\n */\nexport function createMappingFunction(types: {[key: string]: IMappingFunctionConstructor}) {\n  return (dump: ITypedDump | IScriptMappingFunctionType): IMappingFunction => {\n    if (typeof dump === 'function') {\n      return new ScriptMappingFunction([0, 1], dump);\n    }\n    if (!dump || !dump.type) {\n      return new ScaleMappingFunction();\n    }\n    const type = types[dump.type];\n    if (!type) {\n      console.warn('invalid mapping type dump', dump);\n      return new ScaleMappingFunction(dump.domain || [0, 1], 'linear', dump.range || [0, 1]);\n    }\n    return new type(dump);\n  };\n}\n\n/** @internal */\nexport function restoreMapping(desc: IMapAbleDesc, factory: ITypeFactory): IMappingFunction {\n  if (desc.map) {\n    return factory.mappingFunction(desc.map);\n  }\n  return new ScaleMappingFunction(desc.domain || [0, 1], 'linear', desc.range || [0, 1]);\n}\n\n\nexport function mappingFunctions() {\n  return {\n    script: ScriptMappingFunction,\n    linear: ScaleMappingFunction,\n    log: ScaleMappingFunction,\n    'pow1.1': ScaleMappingFunction,\n    pow2: ScaleMappingFunction,\n    pow3: ScaleMappingFunction\n  };\n}\n","import {format} from 'd3-format';\nimport {IBoxPlotData, similar, ISequence, IAdvancedBoxPlotData, boxplotBuilder} from '../internal';\nimport {FIRST_IS_NAN, IDataRow, IBoxPlotColumn, INumberFilter, INumberColumn} from '.';\n\n\n/** @internal */\nexport const DEFAULT_FORMATTER = format('.3n');\n\n/** @internal */\nexport function compareBoxPlot(col: IBoxPlotColumn, a: IDataRow, b: IDataRow) {\n  const aVal = col.getBoxPlotData(a);\n  const bVal = col.getBoxPlotData(b);\n  const method = <keyof IBoxPlotData>col.getSortMethod();\n  if (aVal == null) {\n    return bVal == null ? 0 : FIRST_IS_NAN;\n  }\n  if (bVal == null) {\n    return FIRST_IS_NAN * -1;\n  }\n  return numberCompare(<number>aVal[method], <number>bVal[method]);\n}\n\nexport function toCompareBoxPlotValue(col: IBoxPlotColumn, row: IDataRow) {\n  const v = col.getBoxPlotData(row);\n  const method = <keyof IBoxPlotData>col.getSortMethod();\n  return v == null ? NaN : <number>v[method];\n}\n\nexport function getBoxPlotNumber(col: IBoxPlotColumn, row: IDataRow, mode: 'raw' | 'normalized'): number {\n  const data = mode === 'normalized' ? col.getBoxPlotData(row) : col.getRawBoxPlotData(row);\n  if (data == null) {\n    return NaN;\n  }\n  return <number>data[<keyof IBoxPlotData>col.getSortMethod()];\n}\n/**\n * save number comparison\n * @param a\n * @param b\n * @param aMissing\n * @param bMissing\n * @return {number}\n * @internal\n */\nexport function numberCompare(a: number | null, b: number | null, aMissing = false, bMissing = false) {\n  aMissing = aMissing || a == null || isNaN(a);\n  bMissing = bMissing || b == null || isNaN(b);\n  if (aMissing) { //NaN are smaller\n    return bMissing ? 0 : FIRST_IS_NAN;\n  }\n  if (bMissing) {\n    return FIRST_IS_NAN * -1;\n  }\n  return a! - b!;\n}\n\n/** @internal */\nexport function noNumberFilter() {\n  return ({min: -Infinity, max: Infinity, filterMissing: false});\n}\n\n/** @internal */\nexport function isEqualNumberFilter(a: INumberFilter, b: INumberFilter) {\n  return similar(a.min, b.min, 0.001) && similar(a.max, b.max, 0.001) && a.filterMissing === b.filterMissing;\n}\n\n/** @internal */\nexport function isNumberIncluded(filter: INumberFilter | null, value: number) {\n  if (!filter) {\n    return true;\n  }\n  if (isNaN(value)) {\n    return !filter.filterMissing;\n  }\n  return !((isFinite(filter.min) && value < filter.min) || (isFinite(filter.max) && value > filter.max));\n}\n\n/** @internal */\nexport function isDummyNumberFilter(filter: INumberFilter) {\n  return !filter.filterMissing && !isFinite(filter.min) && !isFinite(filter.max);\n}\n\n/** @internal */\nexport function restoreNumberFilter(v: INumberFilter): INumberFilter {\n  return {\n    min: v.min != null && isFinite(v.min) ? v.min : -Infinity,\n    max: v.max != null && isFinite(v.max) ? v.max : +Infinity,\n    filterMissing: v.filterMissing\n  };\n}\n\n\n/** @internal */\nexport function medianIndex(rows: ISequence<IDataRow>, col: INumberColumn) {\n  //return the median row\n  const data = rows.map((r, i) => ({r, i, v: col.getNumber(r)}));\n  const sorted = Array.from(data.filter((r) => !isNaN(r.v))).sort((a, b) => numberCompare(a.v, b.v));\n  const index = sorted[Math.floor(sorted.length / 2.0)];\n  if (index === undefined) {\n    return {index: 0, row: sorted[0]!.r}; //error case\n  }\n  return {index: index.i, row: index.r};\n}\n\n/** @internal */\nexport function toCompareGroupValue(rows: ISequence<IDataRow>, col: INumberColumn, sortMethod: keyof IAdvancedBoxPlotData, valueCache?: ISequence<number>) {\n  const b = boxplotBuilder();\n  if (valueCache) {\n    b.pushAll(valueCache);\n  } else {\n    b.pushAll(rows.map((d) => col.getNumber(d)));\n  }\n  const vs = b.build();\n  return <number>vs[sortMethod];\n}\n","import {format} from 'd3-format';\nimport {equalArrays, IEventListener, ISequence} from '../internal';\nimport {Category, dialogAddons, SortByDefault, toolbar} from './annotations';\nimport Column, {dirty, dirtyCaches, dirtyHeader, dirtyValues, groupRendererChanged, labelChanged, metaDataChanged, rendererTypeChanged, summaryRendererChanged, visibilityChanged, widthChanged} from './Column';\nimport {IDataRow, IGroup, ECompareValueType, IValueColumnDesc, DEFAULT_COLOR, ITypeFactory} from './interfaces';\nimport {INumberColumn, EAdvancedSortMethod, INumberDesc, INumberFilter, IMappingFunction, IColorMappingFunction, IMapAbleColumn} from './INumberColumn';\nimport {restoreMapping, ScaleMappingFunction} from './MappingFunction';\nimport {isMissingValue, isUnknown, missingGroup} from './missing';\nimport ValueColumn, {dataLoaded} from './ValueColumn';\nimport {noNumberFilter, isDummyNumberFilter, restoreNumberFilter, toCompareGroupValue, isEqualNumberFilter, isNumberIncluded} from './internalNumber';\n\nexport declare type INumberColumnDesc = INumberDesc & IValueColumnDesc<number>;\n\n\n/**\n * emitted when the mapping property changes\n * @asMemberOf NumberColumn\n * @event\n */\nexport declare function mappingChanged_NC(previous: IMappingFunction, current: IMappingFunction): void;\n\n/**\n * emitted when the color mapping property changes\n * @asMemberOf NumberColumn\n * @event\n */\nexport declare function colorMappingChanged_NC(previous: IColorMappingFunction, current: IColorMappingFunction): void;\n\n/**\n * emitted when the filter property changes\n * @asMemberOf NumberColumn\n * @event\n */\nexport declare function filterChanged_NC(previous: INumberFilter | null, current: INumberFilter | null): void;\n\n/**\n * emitted when the sort method property changes\n * @asMemberOf NumberColumn\n * @event\n */\nexport declare function sortMethodChanged_NC(previous: EAdvancedSortMethod, current: EAdvancedSortMethod): void;\n\n/**\n * emitted when the grouping property changes\n * @asMemberOf NumberColumn\n * @event\n */\nexport declare function groupingChanged_NC(previous: number[], current: number[]): void;\n\n/**\n * a number column mapped from an original input scale to an output range\n */\n@toolbar('groupBy', 'sortGroupBy', 'filterNumber', 'colorMapped', 'editMapping')\n@dialogAddons('sortGroup', 'sortNumber')\n@dialogAddons('group', 'groupNumber')\n@Category('number')\n@SortByDefault('descending')\nexport default class NumberColumn extends ValueColumn<number> implements INumberColumn, IMapAbleColumn {\n  static readonly EVENT_MAPPING_CHANGED = 'mappingChanged';\n  static readonly EVENT_COLOR_MAPPING_CHANGED = 'colorMappingChanged';\n  static readonly EVENT_FILTER_CHANGED = 'filterChanged';\n  static readonly EVENT_SORTMETHOD_CHANGED = 'sortMethodChanged';\n  static readonly EVENT_GROUPING_CHANGED = 'groupingChanged';\n\n  private mapping: IMappingFunction;\n  private colorMapping: IColorMappingFunction;\n  private original: IMappingFunction;\n\n  /**\n   * currently active filter\n   * @type {{min: number, max: number}}\n   * @private\n   */\n  private currentFilter: INumberFilter = noNumberFilter();\n\n  private readonly numberFormat: (n: number) => string = format('.2f');\n\n  private currentGroupThresholds: number[] = [];\n  private groupSortMethod: EAdvancedSortMethod = EAdvancedSortMethod.median;\n\n  constructor(id: string, desc: INumberColumnDesc, factory: ITypeFactory) {\n    super(id, desc);\n\n    this.mapping = restoreMapping(desc, factory);\n    this.original = this.mapping.clone();\n    this.colorMapping = factory.colorMappingFunction(desc.colorMapping || desc.color);\n\n    if (desc.numberFormat) {\n      this.numberFormat = format(desc.numberFormat);\n    }\n\n    this.setDefaultGroupRenderer('boxplot');\n    this.setDefaultSummaryRenderer('histogram');\n  }\n\n  getNumberFormat() {\n    return this.numberFormat;\n  }\n\n  dump(toDescRef: (desc: any) => any) {\n    const r = super.dump(toDescRef);\n    r.map = this.mapping.toJSON();\n    r.colorMapping = this.colorMapping.toJSON();\n    r.filter = isDummyNumberFilter(this.currentFilter) ? null : this.currentFilter;\n    r.groupSortMethod = this.groupSortMethod;\n    if (this.currentGroupThresholds) {\n      r.stratifyThreshholds = this.currentGroupThresholds;\n    }\n    return r;\n  }\n\n  restore(dump: any, factory: ITypeFactory) {\n    super.restore(dump, factory);\n    if (dump.map) {\n      this.mapping = factory.mappingFunction(dump.map);\n    } else if (dump.domain) {\n      this.mapping = new ScaleMappingFunction(dump.domain, 'linear', dump.range || [0, 1]);\n    }\n    if (dump.colorMapping) {\n      this.colorMapping = factory.colorMappingFunction(dump.colorMapping);\n    }\n    if (dump.groupSortMethod) {\n      this.groupSortMethod = dump.groupSortMethod;\n    }\n    if (dump.filter) {\n      this.currentFilter = restoreNumberFilter(dump.filter);\n    }\n    if (dump.stratifyThreshholds) {\n      this.currentGroupThresholds = dump.stratifyThresholds;\n    }\n  }\n\n  protected createEventList() {\n    return super.createEventList().concat([NumberColumn.EVENT_MAPPING_CHANGED, NumberColumn.EVENT_COLOR_MAPPING_CHANGED, NumberColumn.EVENT_FILTER_CHANGED, NumberColumn.EVENT_SORTMETHOD_CHANGED, NumberColumn.EVENT_GROUPING_CHANGED]);\n  }\n\n  on(type: typeof NumberColumn.EVENT_MAPPING_CHANGED, listener: typeof mappingChanged_NC | null): this;\n  on(type: typeof NumberColumn.EVENT_COLOR_MAPPING_CHANGED, listener: typeof colorMappingChanged_NC | null): this;\n  on(type: typeof NumberColumn.EVENT_FILTER_CHANGED, listener: typeof filterChanged_NC | null): this;\n  on(type: typeof NumberColumn.EVENT_SORTMETHOD_CHANGED, listener: typeof sortMethodChanged_NC | null): this;\n  on(type: typeof NumberColumn.EVENT_GROUPING_CHANGED, listener: typeof groupingChanged_NC | null): this;\n  on(type: typeof ValueColumn.EVENT_DATA_LOADED, listener: typeof dataLoaded | null): this;\n  on(type: typeof Column.EVENT_WIDTH_CHANGED, listener: typeof widthChanged | null): this;\n  on(type: typeof Column.EVENT_LABEL_CHANGED, listener: typeof labelChanged | null): this;\n  on(type: typeof Column.EVENT_METADATA_CHANGED, listener: typeof metaDataChanged | null): this;\n  on(type: typeof Column.EVENT_DIRTY, listener: typeof dirty | null): this;\n  on(type: typeof Column.EVENT_DIRTY_HEADER, listener: typeof dirtyHeader | null): this;\n  on(type: typeof Column.EVENT_DIRTY_VALUES, listener: typeof dirtyValues | null): this;\n  on(type: typeof Column.EVENT_DIRTY_CACHES, listener: typeof dirtyCaches | null): this;\n  on(type: typeof Column.EVENT_RENDERER_TYPE_CHANGED, listener: typeof rendererTypeChanged | null): this;\n  on(type: typeof Column.EVENT_GROUP_RENDERER_TYPE_CHANGED, listener: typeof groupRendererChanged | null): this;\n  on(type: typeof Column.EVENT_SUMMARY_RENDERER_TYPE_CHANGED, listener: typeof summaryRendererChanged | null): this;\n  on(type: typeof Column.EVENT_VISIBILITY_CHANGED, listener: typeof visibilityChanged | null): this;\n  on(type: string | string[], listener: IEventListener | null): this; // required for correct typings in *.d.ts\n  on(type: string | string[], listener: IEventListener | null): this {\n    return super.on(<any>type, listener);\n  }\n\n  getLabel(row: IDataRow) {\n    if ((<any>this.desc).numberFormat) {\n      const raw = this.getRawValue(row);\n      //if a dedicated format and a number use the formatter in any case\n      if (isNaN(raw)) {\n        return 'NaN';\n      }\n      if (!isFinite(raw)) {\n        return raw.toString();\n      }\n      return this.numberFormat(raw);\n    }\n    const v = super.getValue(row);\n    //keep non number if it is not a number else convert using formatter\n    if (typeof v === 'number') {\n      return this.numberFormat(+v);\n    }\n    return String(v);\n  }\n\n  getRange() {\n    return this.mapping.getRange(this.numberFormat);\n  }\n\n  getRawValue(row: IDataRow) {\n    const v: any = super.getValue(row);\n    if (isMissingValue(v)) {\n      return NaN;\n    }\n    return +v;\n  }\n\n  getExportValue(row: IDataRow, format: 'text' | 'json'): any {\n    return format === 'json' ? this.getRawValue(row) : super.getExportValue(row, format);\n  }\n\n  getValue(row: IDataRow) {\n    const v = this.getNumber(row);\n    if (isNaN(v)) {\n      return null;\n    }\n    return v;\n  }\n\n  getNumber(row: IDataRow) {\n    const v = this.getRawValue(row);\n    if (isNaN(v)) {\n      return NaN;\n    }\n    return this.mapping.apply(v);\n  }\n\n  iterNumber(row: IDataRow) {\n    return [this.getNumber(row)];\n  }\n\n  iterRawNumber(row: IDataRow) {\n    return [this.getRawNumber(row)];\n  }\n\n  getRawNumber(row: IDataRow) {\n    return this.getRawValue(row);\n  }\n\n  toCompareValue(row: IDataRow, valueCache?: any) {\n    return valueCache != null ? valueCache : this.getNumber(row);\n  }\n\n  toCompareValueType() {\n    return ECompareValueType.FLOAT;\n  }\n\n  toCompareGroupValue(rows: ISequence<IDataRow>, _group: IGroup, valueCache?: ISequence<any>): number {\n    return toCompareGroupValue(rows, this, <any>this.groupSortMethod, valueCache);\n  }\n\n  toCompareGroupValueType() {\n    return ECompareValueType.FLOAT;\n  }\n\n  getOriginalMapping() {\n    return this.original.clone();\n  }\n\n  getMapping() {\n    return this.mapping.clone();\n  }\n\n  setMapping(mapping: IMappingFunction) {\n    if (this.mapping.eq(mapping)) {\n      return;\n    }\n    this.fire([NumberColumn.EVENT_MAPPING_CHANGED, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY_CACHES, Column.EVENT_DIRTY_HEADER, Column.EVENT_DIRTY], this.mapping.clone(), this.mapping = mapping);\n  }\n\n  getColor(row: IDataRow) {\n    const v = this.getNumber(row);\n    if (isNaN(v)) {\n      return DEFAULT_COLOR;\n    }\n    return this.colorMapping.apply(v);\n  }\n\n  getColorMapping() {\n    return this.colorMapping.clone();\n  }\n\n  setColorMapping(mapping: IColorMappingFunction) {\n    if (this.colorMapping.eq(mapping)) {\n      return;\n    }\n    this.fire([NumberColumn.EVENT_COLOR_MAPPING_CHANGED, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY_HEADER, Column.EVENT_DIRTY], this.colorMapping.clone(), this.colorMapping = mapping);\n  }\n\n  isFiltered() {\n    return !isDummyNumberFilter(this.currentFilter);\n  }\n\n  getFilter(): INumberFilter {\n    return Object.assign({}, this.currentFilter);\n  }\n\n  setFilter(value: INumberFilter | null) {\n    value = value || {min: -Infinity, max: +Infinity, filterMissing: false};\n    if (isEqualNumberFilter(value, this.currentFilter)) {\n      return;\n    }\n    const bak = this.getFilter();\n    this.currentFilter.min = isUnknown(value.min) ? -Infinity : value.min;\n    this.currentFilter.max = isUnknown(value.max) ? Infinity : value.max;\n    this.currentFilter.filterMissing = value.filterMissing;\n    this.fire([NumberColumn.EVENT_FILTER_CHANGED, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY], bak, this.getFilter());\n  }\n\n  /**\n   * filter the current row if any filter is set\n   * @param row\n   * @returns {boolean}\n   */\n  filter(row: IDataRow) {\n    return isNumberIncluded(this.currentFilter, this.getRawNumber(row));\n  }\n\n  clearFilter() {\n    const was = this.isFiltered();\n    this.setFilter(null);\n    return was;\n  }\n\n  getGroupThresholds() {\n    return this.currentGroupThresholds.slice();\n  }\n\n  setGroupThresholds(value: number[]) {\n    if (equalArrays(this.currentGroupThresholds, value)) {\n      return;\n    }\n    const bak = this.getGroupThresholds();\n    this.currentGroupThresholds = value.slice();\n    this.fire([NumberColumn.EVENT_GROUPING_CHANGED, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY], bak, value);\n  }\n\n\n  group(row: IDataRow): IGroup {\n    const value = this.getRawNumber(row);\n    if (isNaN(value)) {\n      return Object.assign({}, missingGroup);\n    }\n\n    let threshold = this.currentGroupThresholds;\n    if (threshold.length === 0) {\n      // default threshold\n      const d = this.mapping.domain;\n      threshold = [(d[1] - d[0]) / 2];\n    }\n\n    const treshholdIndex = threshold.findIndex((t) => value <= t);\n    // group by thresholds / bins\n    switch (treshholdIndex) {\n      case -1:\n        //bigger than the last threshold\n        return {\n          name: `${this.label} > ${this.numberFormat(threshold[threshold.length - 1])}`,\n          color: this.colorMapping.apply(1)\n        };\n      case 0:\n        //smallest\n        return {\n          name: `${this.label} <= ${this.numberFormat(threshold[0])}`,\n          color: this.colorMapping.apply(0)\n        };\n      default:\n        return {\n          name: `${this.numberFormat(threshold[treshholdIndex - 1])} <= ${this.label} <= ${this.numberFormat(threshold[treshholdIndex])}`,\n          color: this.colorMapping.apply(this.mapping.apply((threshold[treshholdIndex - 1] + threshold[treshholdIndex]) / 2))\n        };\n    }\n  }\n\n  getSortMethod() {\n    return this.groupSortMethod;\n  }\n\n  setSortMethod(sortMethod: EAdvancedSortMethod) {\n    if (this.groupSortMethod === sortMethod) {\n      return;\n    }\n    this.fire([NumberColumn.EVENT_SORTMETHOD_CHANGED], this.groupSortMethod, this.groupSortMethod = sortMethod);\n    // sort by me if not already sorted by me\n    if (!this.isGroupSortedByMe().asc) {\n      this.toggleMyGroupSorting();\n    }\n  }\n}\n","import {format} from 'd3-format';\nimport {IBoxPlotData, IEventListener} from '../internal';\nimport {Category, dialogAddons, SortByDefault, toolbar} from './annotations';\nimport Column, {dirty, dirtyCaches, dirtyHeader, dirtyValues, groupRendererChanged, labelChanged, metaDataChanged, rendererTypeChanged, summaryRendererChanged, visibilityChanged, widthChanged} from './Column';\nimport {IDataRow, ECompareValueType, IValueColumnDesc, ITypeFactory} from './interfaces';\nimport {ESortMethod, IBoxPlotColumn, INumberDesc, INumberFilter, IColorMappingFunction, IMappingFunction} from './INumberColumn';\nimport {restoreMapping} from './MappingFunction';\nimport NumberColumn from './NumberColumn';\nimport ValueColumn, {dataLoaded} from './ValueColumn';\nimport {DEFAULT_FORMATTER, noNumberFilter, toCompareBoxPlotValue, getBoxPlotNumber, isDummyNumberFilter, restoreNumberFilter} from './internalNumber';\n\n\nexport interface IBoxPlotDesc extends INumberDesc {\n  sort?: ESortMethod;\n}\n\nexport declare type IBoxPlotColumnDesc = IBoxPlotDesc & IValueColumnDesc<IBoxPlotData>;\n\n\n/**\n * emitted when the sort method property changes\n * @asMemberOf BoxPlotColumn\n * @event\n */\nexport declare function sortMethodChanged_BPC(previous: ESortMethod, current: ESortMethod): void;\n\n/**\n * emitted when the mapping property changes\n * @asMemberOf BoxPlotColumn\n * @event\n */\nexport declare function mappingChanged_BPC(previous: IMappingFunction, current: IMappingFunction): void;\n\n/**\n * emitted when the color mapping property changes\n * @asMemberOf BoxPlotColumn\n * @event\n */\nexport declare function colorMappingChanged_BPC(previous: IColorMappingFunction, current: IColorMappingFunction): void;\n\n/**\n * emitted when the filter property changes\n * @asMemberOf BoxPlotColumn\n * @event\n */\nexport declare function filterChanged_BPC(previous: INumberFilter | null, current: INumberFilter | null): void;\n\n\n@toolbar('filterNumber', 'colorMapped', 'editMapping')\n@dialogAddons('sort', 'sortBoxPlot')\n@Category('array')\n@SortByDefault('descending')\nexport default class BoxPlotColumn extends ValueColumn<IBoxPlotData> implements IBoxPlotColumn {\n  static readonly EVENT_MAPPING_CHANGED = NumberColumn.EVENT_MAPPING_CHANGED;\n  static readonly EVENT_COLOR_MAPPING_CHANGED = NumberColumn.EVENT_COLOR_MAPPING_CHANGED;\n  static readonly EVENT_SORTMETHOD_CHANGED = NumberColumn.EVENT_SORTMETHOD_CHANGED;\n  static readonly EVENT_FILTER_CHANGED = NumberColumn.EVENT_FILTER_CHANGED;\n\n  private readonly numberFormat: (n: number) => string = DEFAULT_FORMATTER;\n\n  private sort: ESortMethod;\n\n  private mapping: IMappingFunction;\n  private colorMapping: IColorMappingFunction;\n\n  private original: Readonly<IMappingFunction>;\n  /**\n   * currently active filter\n   * @type {{min: number, max: number}}\n   * @private\n   */\n  private currentFilter: INumberFilter = noNumberFilter();\n\n\n  constructor(id: string, desc: Readonly<IBoxPlotColumnDesc>, factory: ITypeFactory) {\n    super(id, desc);\n    this.mapping = restoreMapping(desc, factory);\n    this.original = this.mapping.clone();\n    this.colorMapping = factory.colorMappingFunction(desc.colorMapping);\n\n    if (desc.numberFormat) {\n      this.numberFormat = format(desc.numberFormat);\n    }\n\n    this.sort = desc.sort || ESortMethod.min;\n  }\n\n  getNumberFormat() {\n    return this.numberFormat;\n  }\n\n  toCompareValue(row: IDataRow): number {\n    return toCompareBoxPlotValue(this, row);\n  }\n\n  toCompareValueType() {\n    return ECompareValueType.FLOAT;\n  }\n\n  getBoxPlotData(row: IDataRow): IBoxPlotData | null {\n    return this.getValue(row);\n  }\n\n  getRange() {\n    return this.mapping.getRange(this.numberFormat);\n  }\n\n  getRawBoxPlotData(row: IDataRow): IBoxPlotData | null {\n    return this.getRawValue(row);\n  }\n\n  getRawValue(row: IDataRow) {\n    return super.getValue(row);\n  }\n\n  getExportValue(row: IDataRow, format: 'text' | 'json'): any {\n    return format === 'json' ? this.getRawValue(row) : super.getExportValue(row, format);\n  }\n\n  getValue(row: IDataRow) {\n    const v = this.getRawValue(row);\n    if (v == null) {\n      return null;\n    }\n    const r: IBoxPlotData = {\n      min: this.mapping.apply(v.min),\n      max: this.mapping.apply(v.max),\n      median: this.mapping.apply(v.median),\n      q1: this.mapping.apply(v.q1),\n      q3: this.mapping.apply(v.q3)\n    };\n    if (v.outlier) {\n      Object.assign(r, {\n        outlier: v.outlier.map((d) => this.mapping.apply(d))\n      });\n    }\n    if (v.whiskerLow != null) {\n      Object.assign(r, {\n        whiskerLow: this.mapping.apply(v.whiskerLow)\n      });\n    }\n    if (v.whiskerHigh != null) {\n      Object.assign(r, {\n        whiskerHigh: this.mapping.apply(v.whiskerHigh)\n      });\n    }\n    return r;\n  }\n\n  getNumber(row: IDataRow): number {\n    return getBoxPlotNumber(this, row, 'normalized');\n  }\n\n  getRawNumber(row: IDataRow): number {\n    return getBoxPlotNumber(this, row, 'raw');\n  }\n\n  iterNumber(row: IDataRow) {\n    return [this.getNumber(row)];\n  }\n\n  iterRawNumber(row: IDataRow) {\n    return [this.getRawNumber(row)];\n  }\n\n  getLabel(row: IDataRow): string {\n    const v = this.getRawValue(row);\n    if (v == null) {\n      return '';\n    }\n    const f = this.numberFormat;\n    return `BoxPlot(min = ${f(v.min)}, q1 = ${f(v.q1)}, median = ${f(v.median)}, q3 = ${f(v.q3)}, max = ${f(v.max)})`;\n  }\n\n  getSortMethod() {\n    return this.sort;\n  }\n\n  setSortMethod(sort: ESortMethod) {\n    if (this.sort === sort) {\n      return;\n    }\n    this.fire(BoxPlotColumn.EVENT_SORTMETHOD_CHANGED, this.sort, this.sort = sort);\n    // sort by me if not already sorted by me\n    if (!this.isSortedByMe().asc) {\n      this.sortByMe();\n    }\n  }\n\n  dump(toDescRef: (desc: any) => any): any {\n    const r = super.dump(toDescRef);\n    r.sortMethod = this.getSortMethod();\n    r.filter = !isDummyNumberFilter(this.currentFilter) ? this.currentFilter : null;\n    r.map = this.mapping.toJSON();\n    r.colorMapping = this.colorMapping.toJSON();\n    return r;\n  }\n\n  restore(dump: any, factory: ITypeFactory) {\n    super.restore(dump, factory);\n    if (dump.sortMethod) {\n      this.sort = dump.sortMethod;\n    }\n    if (dump.filter) {\n      this.currentFilter = restoreNumberFilter(dump.filter);\n    }\n    if (dump.map || dump.domain) {\n      this.mapping = restoreMapping(dump, factory);\n    }\n    if (dump.colorMapping) {\n      this.colorMapping = factory.colorMappingFunction(dump.colorMapping);\n    }\n  }\n\n  protected createEventList() {\n    return super.createEventList().concat([BoxPlotColumn.EVENT_SORTMETHOD_CHANGED, BoxPlotColumn.EVENT_COLOR_MAPPING_CHANGED, BoxPlotColumn.EVENT_MAPPING_CHANGED, BoxPlotColumn.EVENT_FILTER_CHANGED]);\n  }\n\n  on(type: typeof BoxPlotColumn.EVENT_COLOR_MAPPING_CHANGED, listener: typeof colorMappingChanged_BPC | null): this;\n  on(type: typeof BoxPlotColumn.EVENT_MAPPING_CHANGED, listener: typeof mappingChanged_BPC | null): this;\n  on(type: typeof BoxPlotColumn.EVENT_SORTMETHOD_CHANGED, listener: typeof sortMethodChanged_BPC | null): this;\n  on(type: typeof BoxPlotColumn.EVENT_FILTER_CHANGED, listener: typeof filterChanged_BPC | null): this;\n  on(type: typeof ValueColumn.EVENT_DATA_LOADED, listener: typeof dataLoaded | null): this;\n  on(type: typeof Column.EVENT_WIDTH_CHANGED, listener: typeof widthChanged | null): this;\n  on(type: typeof Column.EVENT_LABEL_CHANGED, listener: typeof labelChanged | null): this;\n  on(type: typeof Column.EVENT_METADATA_CHANGED, listener: typeof metaDataChanged | null): this;\n  on(type: typeof Column.EVENT_DIRTY, listener: typeof dirty | null): this;\n  on(type: typeof Column.EVENT_DIRTY_HEADER, listener: typeof dirtyHeader | null): this;\n  on(type: typeof Column.EVENT_DIRTY_VALUES, listener: typeof dirtyValues | null): this;\n  on(type: typeof Column.EVENT_DIRTY_CACHES, listener: typeof dirtyCaches | null): this;\n  on(type: typeof Column.EVENT_RENDERER_TYPE_CHANGED, listener: typeof rendererTypeChanged | null): this;\n  on(type: typeof Column.EVENT_GROUP_RENDERER_TYPE_CHANGED, listener: typeof groupRendererChanged | null): this;\n  on(type: typeof Column.EVENT_SUMMARY_RENDERER_TYPE_CHANGED, listener: typeof summaryRendererChanged | null): this;\n  on(type: typeof Column.EVENT_VISIBILITY_CHANGED, listener: typeof visibilityChanged | null): this;\n  on(type: string | string[], listener: IEventListener | null): this; // required for correct typings in *.d.ts\n  on(type: string | string[], listener: IEventListener | null): this {\n    return super.on(<any>type, listener);\n  }\n\n  getOriginalMapping() {\n    return this.original.clone();\n  }\n\n  getMapping() {\n    return this.mapping.clone();\n  }\n\n  setMapping(mapping: IMappingFunction) {\n    if (this.mapping.eq(mapping)) {\n      return;\n    }\n    this.fire([BoxPlotColumn.EVENT_MAPPING_CHANGED, Column.EVENT_DIRTY_HEADER, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY_CACHES, Column.EVENT_DIRTY], this.mapping.clone(), this.mapping = mapping);\n  }\n\n  getColor(row: IDataRow) {\n    return NumberColumn.prototype.getColor.call(this, row);\n  }\n\n  getColorMapping() {\n    return this.colorMapping.clone();\n  }\n\n  setColorMapping(mapping: IColorMappingFunction) {\n    if (this.colorMapping.eq(mapping)) {\n      return;\n    }\n    this.fire([BoxPlotColumn.EVENT_COLOR_MAPPING_CHANGED, Column.EVENT_DIRTY_HEADER, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY_CACHES, Column.EVENT_DIRTY], this.colorMapping.clone(), this.colorMapping = mapping);\n  }\n\n  isFiltered() {\n    return NumberColumn.prototype.isFiltered.call(this);\n  }\n\n  getFilter(): INumberFilter {\n    return NumberColumn.prototype.getFilter.call(this);\n  }\n\n  setFilter(value: INumberFilter | null) {\n    NumberColumn.prototype.setFilter.call(this, value);\n  }\n\n  filter(row: IDataRow) {\n    return NumberColumn.prototype.filter.call(this, row);\n  }\n\n  clearFilter() {\n    return NumberColumn.prototype.clearFilter.call(this);\n  }\n}\n\n","import {Category} from './annotations';\nimport {IKeyValue, IMapColumn} from './IArrayColumn';\nimport {IDataRow, IValueColumnDesc} from './interfaces';\nimport ValueColumn from './ValueColumn';\n\nexport interface IMapColumnDesc<T> extends IValueColumnDesc<IKeyValue<T>[]> {\n  // dummy\n}\n\n@Category('map')\nexport default class MapColumn<T> extends ValueColumn<IKeyValue<T>[]> implements IMapColumn<T> {\n\n  constructor(id: string, desc: Readonly<IMapColumnDesc<T>>) {\n    super(id, desc);\n    this.setDefaultWidth(200); //by default 200\n  }\n\n  getValue(row: IDataRow) {\n    const r = this.getMap(row);\n    return r.length === 0 ? null : r;\n  }\n\n  getLabels(row: IDataRow): IKeyValue<string>[] {\n    const v = this.getMap(row);\n    return v.map(({key, value}) => ({key, value: String(value)}));\n  }\n\n  getMap(row: IDataRow) {\n    return toKeyValue<T>(<any>super.getValue(row));\n  }\n\n  getMapLabel(row: IDataRow) {\n    return this.getLabels(row);\n  }\n\n  getLabel(row: IDataRow) {\n    const v = this.getLabels(row);\n    return `{${v.map(({key, value}) => `${key}: ${value}`).join(', ')}}`;\n  }\n}\n\nfunction byKey(a: IKeyValue<any>, b: IKeyValue<any>) {\n  if (a === b) {\n    return 0;\n  }\n  return a.key.localeCompare(b.key);\n}\n\nfunction toKeyValue<T>(v?: Map<string, T> | { [key: string]: T } | IKeyValue<T>[]): IKeyValue<T>[] {\n  if (!v) {\n    return [];\n  }\n  if (v instanceof Map) {\n    return Array.from(v.entries()).map(([key, value]) => ({key, value})).sort(byKey);\n  }\n  if (Array.isArray(v)) {\n    return v; // keep original order\n  }\n  // object\n  return Object.keys(v).map((key) => ({key, value: v[key]})).sort(byKey);\n}\n","import {ICategoricalDesc, ICategory, ICategoricalLikeColumn, ICategoricalColorMappingFunction} from './ICategoricalColumn';\nimport {IDataRow, DEFAULT_COLOR, ITypeFactory} from './interfaces';\nimport MapColumn, {IMapColumnDesc} from './MapColumn';\nimport {DEFAULT_CATEGORICAL_COLOR_FUNCTION} from './CategoricalColorMappingFunction';\nimport CategoricalColumn from './CategoricalColumn';\nimport ValueColumn, {dataLoaded} from './ValueColumn';\nimport Column, {labelChanged, metaDataChanged, dirty, dirtyHeader, dirtyValues, rendererTypeChanged, groupRendererChanged, summaryRendererChanged, visibilityChanged, widthChanged, dirtyCaches} from './Column';\nimport {IEventListener} from '../internal';\nimport {toolbar} from './annotations';\nimport {toCategories} from './internalCategorical';\n\n\nexport declare type ICategoricalMapColumnDesc = ICategoricalDesc & IMapColumnDesc<string | null>;\n\n/**\n * emitted when the color mapping property changes\n * @asMemberOf CategoricalMapColumn\n * @event\n */\nexport declare function colorMappingChanged_CMC(previous: ICategoricalColorMappingFunction, current: ICategoricalColorMappingFunction): void;\n\n@toolbar('colorMappedCategorical')\nexport default class CategoricalMapColumn extends MapColumn<string | null> implements ICategoricalLikeColumn {\n  static readonly EVENT_COLOR_MAPPING_CHANGED = CategoricalColumn.EVENT_COLOR_MAPPING_CHANGED;\n\n  readonly categories: ICategory[];\n\n  private readonly lookup = new Map<string, Readonly<ICategory>>();\n\n  private colorMapping: ICategoricalColorMappingFunction;\n\n  constructor(id: string, desc: Readonly<ICategoricalMapColumnDesc>) {\n    super(id, desc);\n    this.categories = toCategories(desc);\n    this.categories.forEach((d) => this.lookup.set(d.name, d));\n    this.colorMapping = DEFAULT_CATEGORICAL_COLOR_FUNCTION;\n  }\n  protected createEventList() {\n    return super.createEventList().concat([CategoricalMapColumn.EVENT_COLOR_MAPPING_CHANGED]);\n  }\n\n  on(type: typeof CategoricalMapColumn.EVENT_COLOR_MAPPING_CHANGED, listener: typeof colorMappingChanged_CMC | null): this;\n  on(type: typeof ValueColumn.EVENT_DATA_LOADED, listener: typeof dataLoaded | null): this;\n  on(type: typeof Column.EVENT_WIDTH_CHANGED, listener: typeof widthChanged | null): this;\n  on(type: typeof Column.EVENT_LABEL_CHANGED, listener: typeof labelChanged | null): this;\n  on(type: typeof Column.EVENT_METADATA_CHANGED, listener: typeof metaDataChanged | null): this;\n  on(type: typeof Column.EVENT_DIRTY, listener: typeof dirty | null): this;\n  on(type: typeof Column.EVENT_DIRTY_HEADER, listener: typeof dirtyHeader | null): this;\n  on(type: typeof Column.EVENT_DIRTY_VALUES, listener: typeof dirtyValues | null): this;\n  on(type: typeof Column.EVENT_DIRTY_CACHES, listener: typeof dirtyCaches | null): this;\n  on(type: typeof Column.EVENT_RENDERER_TYPE_CHANGED, listener: typeof rendererTypeChanged | null): this;\n  on(type: typeof Column.EVENT_GROUP_RENDERER_TYPE_CHANGED, listener: typeof groupRendererChanged | null): this;\n  on(type: typeof Column.EVENT_SUMMARY_RENDERER_TYPE_CHANGED, listener: typeof summaryRendererChanged | null): this;\n  on(type: typeof Column.EVENT_VISIBILITY_CHANGED, listener: typeof visibilityChanged | null): this;\n  on(type: string | string[], listener: IEventListener | null): this; // required for correct typings in *.d.ts\n  on(type: string | string[], listener: IEventListener | null): this {\n    return super.on(<any>type, listener);\n  }\n\n\n  private parseValue(v: any) {\n    if (!v) {\n      return null;\n    }\n    const vs = String(v);\n    return this.lookup.has(vs) ? this.lookup.get(vs)! : null;\n  }\n\n  getCategoryMap(row: IDataRow) {\n    return super.getMap(row).map(({key, value}) => ({\n      key,\n      value: this.parseValue(value)\n    }));\n  }\n\n  getCategories(row: IDataRow) {\n    return this.getCategoryMap(row).map((d) => d.value);\n  }\n\n  getColors(row: IDataRow) {\n    return this.getCategoryMap(row).map(({key, value}) => ({key, value: value ? this.colorMapping.apply(value) : DEFAULT_COLOR}));\n  }\n\n  getValue(row: IDataRow) {\n    const r = this.getCategoryMap(row);\n    return r.length === 0 ? null : r.map(({key, value}) => ({\n      key,\n      value: value ? value.name : null\n    }));\n  }\n\n  getLabels(row: IDataRow) {\n    return this.getCategoryMap(row).map(({key, value}) => ({\n      key,\n      value: value ? value.label : ''\n    }));\n  }\n\n  getColorMapping() {\n    return this.colorMapping.clone();\n  }\n\n  setColorMapping(mapping: ICategoricalColorMappingFunction) {\n    return CategoricalColumn.prototype.setColorMapping.call(this, mapping);\n  }\n\n  dump(toDescRef: (desc: any) => any): any {\n    const r = super.dump(toDescRef);\n    r.colorMapping = this.colorMapping.toJSON();\n    return r;\n  }\n\n  restore(dump: any, factory: ITypeFactory) {\n    super.restore(dump, factory);\n    this.colorMapping = factory.categoricalColorMappingFunction(dump.colorMapping, this.categories);\n  }\n\n  iterCategory(row: IDataRow) {\n    return this.getCategories(row);\n  }\n}\n","import ArrayColumn, {IArrayColumnDesc} from './ArrayColumn';\nimport {ICategoricalDesc, ICategory, ICategoricalColorMappingFunction, ICategoricalsColumn} from './ICategoricalColumn';\nimport {IDataRow, DEFAULT_COLOR, ITypeFactory} from './interfaces';\nimport {toolbar} from './annotations';\nimport CategoricalColumn from './CategoricalColumn';\nimport {DEFAULT_CATEGORICAL_COLOR_FUNCTION} from './CategoricalColorMappingFunction';\nimport ValueColumn, {dataLoaded} from './ValueColumn';\nimport Column, {labelChanged, metaDataChanged, dirty, dirtyHeader, dirtyValues, rendererTypeChanged, groupRendererChanged, summaryRendererChanged, visibilityChanged, widthChanged, dirtyCaches} from './Column';\nimport {IEventListener} from '../internal';\nimport {toCategories} from './internalCategorical';\n\nexport declare type ICategoricalsColumnDesc = ICategoricalDesc & IArrayColumnDesc<string | null>;\n\n/**\n * emitted when the color mapping property changes\n * @asMemberOf CategoricalsColumn\n * @event\n */\nexport declare function colorMappingChanged_CCS(previous: ICategoricalColorMappingFunction, current: ICategoricalColorMappingFunction): void;\n\n/**\n * a string column with optional alignment\n */\n@toolbar('colorMappedCategorical')\nexport default class CategoricalsColumn extends ArrayColumn<string | null> implements ICategoricalsColumn {\n  static readonly EVENT_COLOR_MAPPING_CHANGED = CategoricalColumn.EVENT_COLOR_MAPPING_CHANGED;\n\n  readonly categories: ICategory[];\n\n  private readonly lookup = new Map<string, Readonly<ICategory>>();\n\n  private colorMapping: ICategoricalColorMappingFunction;\n\n  constructor(id: string, desc: Readonly<ICategoricalsColumnDesc>) {\n    super(id, desc);\n    this.categories = toCategories(desc);\n    this.categories.forEach((d) => this.lookup.set(d.name, d));\n    this.colorMapping = DEFAULT_CATEGORICAL_COLOR_FUNCTION;\n  }\n\n  protected createEventList() {\n    return super.createEventList().concat([CategoricalsColumn.EVENT_COLOR_MAPPING_CHANGED]);\n  }\n\n  on(type: typeof CategoricalsColumn.EVENT_COLOR_MAPPING_CHANGED, listener: typeof colorMappingChanged_CCS | null): this;\n  on(type: typeof ValueColumn.EVENT_DATA_LOADED, listener: typeof dataLoaded | null): this;\n  on(type: typeof Column.EVENT_WIDTH_CHANGED, listener: typeof widthChanged | null): this;\n  on(type: typeof Column.EVENT_LABEL_CHANGED, listener: typeof labelChanged | null): this;\n  on(type: typeof Column.EVENT_METADATA_CHANGED, listener: typeof metaDataChanged | null): this;\n  on(type: typeof Column.EVENT_DIRTY, listener: typeof dirty | null): this;\n  on(type: typeof Column.EVENT_DIRTY_HEADER, listener: typeof dirtyHeader | null): this;\n  on(type: typeof Column.EVENT_DIRTY_VALUES, listener: typeof dirtyValues | null): this;\n  on(type: typeof Column.EVENT_DIRTY_CACHES, listener: typeof dirtyCaches | null): this;\n  on(type: typeof Column.EVENT_RENDERER_TYPE_CHANGED, listener: typeof rendererTypeChanged | null): this;\n  on(type: typeof Column.EVENT_GROUP_RENDERER_TYPE_CHANGED, listener: typeof groupRendererChanged | null): this;\n  on(type: typeof Column.EVENT_SUMMARY_RENDERER_TYPE_CHANGED, listener: typeof summaryRendererChanged | null): this;\n  on(type: typeof Column.EVENT_VISIBILITY_CHANGED, listener: typeof visibilityChanged | null): this;\n  on(type: string | string[], listener: IEventListener | null): this; // required for correct typings in *.d.ts\n  on(type: string | string[], listener: IEventListener | null): this {\n    return super.on(<any>type, listener);\n  }\n\n  getCategories(row: IDataRow) {\n    return super.getValues(row).map((v) => {\n      if (!v) {\n        return null;\n      }\n      const vs = String(v);\n      return this.lookup.has(vs) ? this.lookup.get(vs)! : null;\n    });\n  }\n\n  getColors(row: IDataRow) {\n    return this.getCategories(row).map((d) => d ? this.colorMapping.apply(d) : DEFAULT_COLOR);\n  }\n\n  iterCategory(row: IDataRow) {\n    return this.getCategories(row);\n  }\n\n  getValues(row: IDataRow) {\n    return this.getCategories(row).map((v) => v ? v.name : null);\n  }\n\n  getLabels(row: IDataRow) {\n    return this.getCategories(row).map((v) => v ? v.label : '');\n  }\n\n  getColorMapping() {\n    return this.colorMapping.clone();\n  }\n\n  setColorMapping(mapping: ICategoricalColorMappingFunction) {\n    return CategoricalColumn.prototype.setColorMapping.call(this, mapping);\n  }\n\n  dump(toDescRef: (desc: any) => any): any {\n    const r = super.dump(toDescRef);\n    r.colorMapping = this.colorMapping.toJSON();\n    return r;\n  }\n\n  restore(dump: any, factory: ITypeFactory) {\n    super.restore(dump, factory);\n    this.colorMapping = factory.categoricalColorMappingFunction(dump.colorMapping, this.categories);\n  }\n}\n","import {timeDay, timeHour, timeMinute, timeMonth, timeSecond, timeWeek} from 'd3-time';\nimport {timeFormat} from 'd3-time-format';\nimport {equal, ISequence, isSeqEmpty} from '../internal';\nimport {INumberFilter, IDateGrouper, IDataRow, IDateColumn} from '.';\nimport {isNumberIncluded} from './internalNumber';\n\n/** @internal */\nexport {isDummyNumberFilter as isDummyDateFilter, isEqualNumberFilter as isEqualDateFilter, noNumberFilter as noDateFilter, restoreNumberFilter as restoreDateFilter} from './internalNumber';\n\n\n/** @internal */\nexport function isDateIncluded(filter: INumberFilter | null, value: Date | null) {\n  if (!filter) {\n    return true;\n  }\n  if (value == null || !(value instanceof Date)) {\n    return !filter.filterMissing;\n  }\n  return isNumberIncluded(filter, value!.getTime());\n}\n\n/**\n * shifts the given date such that it is on 23:59:59, or 00:00:00\n * @internal\n */\nexport function shiftFilterDateDay(date: number, type: 'min' | 'max') {\n  const d = new Date(date);\n  if (type === 'max') {\n    d.setHours(23);\n    d.setMinutes(59);\n    d.setSeconds(59);\n    d.setMilliseconds(999);\n  } else {\n    d.setHours(0);\n    d.setMinutes(0);\n    d.setSeconds(0);\n    d.setMilliseconds(0);\n  }\n  return d.getTime();\n}\n\n/**\n * @internal\n */\nexport function defaultDateGrouper(): IDateGrouper {\n  return {granularity: 'month', circular: false};\n}\n\n/**\n * @internal\n */\nexport function isDefaultDateGrouper(grouper: IDateGrouper) {\n  return equal(defaultDateGrouper(), grouper);\n}\n\n/**\n * convert the given date to the desired grouper\n * @internal\n */\nexport function toDateGroup(grouper: IDateGrouper, value: Date): {value: number, name: string} {\n  switch (grouper.granularity) {\n    case 'century':\n      const centuryP = Math.floor(value.getFullYear() / 100);\n      if (grouper.circular) {\n        const century = centuryP % 10;\n        return {\n          value: century,\n          name: `*${century}00`\n        };\n      }\n      return {\n        value: centuryP,\n        name: `${centuryP}00`\n      };\n    case 'decade':\n      const decadeP = Math.floor(value.getFullYear() / 10);\n      if (grouper.circular) {\n        const decade = decadeP % 10;\n        return {\n          value: decade,\n          name: `**${decade}0`\n        };\n      }\n      return {\n        value: decadeP,\n        name: `${decadeP}0`\n      };\n    case 'year':\n      if (grouper.circular) {\n        const year = value.getFullYear() % 10;\n        return {\n          value: year,\n          name: `***${year}`\n        };\n      }\n      return {\n        value: value.getFullYear(),\n        name: String(value.getFullYear())\n      };\n    case 'month':\n      if (grouper.circular) {\n        return {\n          value: value.getMonth(),\n          name: timeFormat('%B')(value)\n        };\n      }\n      return {\n        value: timeMonth(value).getTime(),\n        name: timeFormat('%B %Y')(value)\n      };\n    case 'week':\n      if (grouper.circular) {\n        return {\n          value: value.getMonth(),\n          name: timeFormat('%W')(value)\n        };\n      }\n      return {\n        value: timeWeek(value).getTime(),\n        name: timeFormat('%W %Y')(value)\n      };\n    case 'day_of_week':\n      if (grouper.circular) {\n        return {\n          value: value.getDay(),\n          name: timeFormat('%A')(value)\n        };\n      }\n      return {\n        value: timeDay(value).getTime(),\n        name: timeFormat('%x')(value)\n      };\n    case 'day_of_month':\n      if (grouper.circular) {\n        return {\n          value: value.getDate(),\n          name: timeFormat('%d')(value)\n        };\n      }\n      return {\n        value: timeDay(value).getTime(),\n        name: timeFormat('%x')(value)\n      };\n    case 'day_of_year':\n      if (grouper.circular) {\n        // %j = day of year\n        const v = timeFormat('%j')(value);\n        return {\n          value: parseInt(v, 10),\n          name: v\n        };\n      }\n      return {\n        value: timeDay(value).getTime(),\n        name: timeFormat('%x')(value)\n      };\n    case 'hour':\n      if (grouper.circular) {\n        return {\n          value: value.getHours(),\n          name: timeFormat('%A')(value)\n        };\n      }\n      return {\n        value: timeHour(value).getTime(),\n        name: timeFormat('%x')(value)\n      };\n    case 'minute':\n      if (grouper.circular) {\n        return {\n          value: value.getMinutes(),\n          name: timeFormat('%A')(value)\n        };\n      }\n      return {\n        value: timeMinute(value).getTime(),\n        name: timeFormat('%x')(value)\n      };\n    case 'second':\n      if (grouper.circular) {\n        return {\n          value: value.getSeconds(),\n          name: timeFormat('%A')(value)\n        };\n      }\n      return {\n        value: timeSecond(value).getTime(),\n        name: timeFormat('%x')(value)\n      };\n  }\n\n  return {\n    value: value.getTime(),\n    name: value.toString()\n  };\n}\n\n\n/**\n * @internal\n */\nexport function chooseAggregatedDate(rows: ISequence<IDataRow>, grouper: IDateGrouper | null, col: IDateColumn, valueCache?: ISequence<Date | null>): {value: number | null, name: string} {\n  const vs = <ISequence<Date>>(valueCache ? valueCache : rows.map((d) => col.getDate(d))).filter((d) => d instanceof Date);\n  if (isSeqEmpty(vs)) {\n    return {value: null, name: ''};\n  }\n  const median = trueMedian(vs.map((d) => d.getTime()))!;\n  if (!grouper) {\n    return {value: median, name: (new Date(median)).toString()};\n  }\n  return toDateGroup(grouper, new Date(median));\n}\n\nfunction trueMedian(dates: ISequence<number>) {\n  // to avoid interpolating between the centers do it manually\n  const s = Float64Array.from(dates);\n  if (s.length === 1) {\n    return s[0];\n  }\n\n  s.sort();\n  return s[Math.floor(s.length / 2)];\n}\n","import {timeFormat, timeParse} from 'd3-time-format';\nimport {ISequence, equal, IEventListener} from '../internal';\nimport {Category, dialogAddons, toolbar} from './annotations';\nimport Column, {dirty, dirtyCaches, dirtyHeader, dirtyValues, groupRendererChanged, labelChanged, metaDataChanged, rendererTypeChanged, summaryRendererChanged, visibilityChanged, widthChanged} from './Column';\nimport {IDateColumn, IDateDesc, IDateFilter, IDateGrouper} from './IDateColumn';\nimport {defaultGroup, IDataRow, IGroup, ECompareValueType, IValueColumnDesc, DEFAULT_COLOR, ITypeFactory} from './interfaces';\nimport {isMissingValue, isUnknown, missingGroup} from './missing';\nimport ValueColumn, {dataLoaded} from './ValueColumn';\nimport {noDateFilter, defaultDateGrouper, isDummyDateFilter, isDefaultDateGrouper, restoreDateFilter, isEqualDateFilter, isDateIncluded, toDateGroup, chooseAggregatedDate} from './internalDate';\n\n\nexport declare type IDateColumnDesc = IValueColumnDesc<Date> & IDateDesc;\n\n/**\n * emitted when the filter property changes\n * @asMemberOf DateColumn\n * @event\n */\nexport declare function filterChanged_DC(previous: IDateFilter | null, current: IDateFilter | null): void;\n\n/**\n * emitted when the grouping property changes\n * @asMemberOf DateColumn\n * @event\n */\nexport declare function groupingChanged_DC(previous: IDateGrouper | null, current: IDateGrouper | null): void;\n\n@toolbar('groupBy', 'sortGroupBy', 'filterDate')\n@dialogAddons('group', 'groupDate')\n@Category('date')\nexport default class DateColumn extends ValueColumn<Date> implements IDateColumn {\n  static readonly EVENT_FILTER_CHANGED = 'filterChanged';\n  static readonly EVENT_GROUPING_CHANGED = 'groupingChanged';\n\n  static readonly DEFAULT_DATE_FORMAT = '%x';\n\n  private readonly format: (date: Date | null) => string;\n  private readonly parse: (date: string) => Date | null;\n\n  /**\n   * currently active filter\n   * @type {{min: number, max: number}}\n   * @private\n   */\n  private currentFilter: IDateFilter = noDateFilter();\n  private currentGrouper: IDateGrouper = defaultDateGrouper();\n\n  constructor(id: string, desc: Readonly<IDateColumnDesc>) {\n    super(id, desc);\n    const f = timeFormat(desc.dateFormat || DateColumn.DEFAULT_DATE_FORMAT);\n    this.format = (v) => (v instanceof Date) ? f(v) : '';\n    this.parse = desc.dateParse ? timeParse(desc.dateParse) : timeParse(desc.dateFormat || DateColumn.DEFAULT_DATE_FORMAT);\n    this.setDefaultGroupRenderer('datehistogram');\n    this.setDefaultSummaryRenderer('datehistogram');\n  }\n\n  getFormatter() {\n    return this.format;\n  }\n\n  dump(toDescRef: (desc: any) => any) {\n    const r = super.dump(toDescRef);\n    r.filter = isDummyDateFilter(this.currentFilter) ? null : this.currentFilter;\n    if (this.currentGrouper && !isDefaultDateGrouper(this.currentGrouper)) {\n      r.grouper = this.currentGrouper;\n    }\n    return r;\n  }\n\n  restore(dump: any, factory: ITypeFactory) {\n    super.restore(dump, factory);\n    if (dump.filter) {\n      this.currentFilter = restoreDateFilter(dump.filter);\n    }\n    if (dump.grouper) {\n      this.currentGrouper = dump.grouper;\n    }\n  }\n\n  protected createEventList() {\n    return super.createEventList().concat([DateColumn.EVENT_FILTER_CHANGED, DateColumn.EVENT_GROUPING_CHANGED]);\n  }\n\n  on(type: typeof DateColumn.EVENT_FILTER_CHANGED, listener: typeof filterChanged_DC | null): this;\n  on(type: typeof DateColumn.EVENT_GROUPING_CHANGED, listener: typeof groupingChanged_DC | null): this;\n  on(type: typeof ValueColumn.EVENT_DATA_LOADED, listener: typeof dataLoaded | null): this;\n  on(type: typeof Column.EVENT_WIDTH_CHANGED, listener: typeof widthChanged | null): this;\n  on(type: typeof Column.EVENT_LABEL_CHANGED, listener: typeof labelChanged | null): this;\n  on(type: typeof Column.EVENT_METADATA_CHANGED, listener: typeof metaDataChanged | null): this;\n  on(type: typeof Column.EVENT_DIRTY, listener: typeof dirty | null): this;\n  on(type: typeof Column.EVENT_DIRTY_HEADER, listener: typeof dirtyHeader | null): this;\n  on(type: typeof Column.EVENT_DIRTY_VALUES, listener: typeof dirtyValues | null): this;\n  on(type: typeof Column.EVENT_DIRTY_CACHES, listener: typeof dirtyCaches | null): this;\n  on(type: typeof Column.EVENT_RENDERER_TYPE_CHANGED, listener: typeof rendererTypeChanged | null): this;\n  on(type: typeof Column.EVENT_GROUP_RENDERER_TYPE_CHANGED, listener: typeof groupRendererChanged | null): this;\n  on(type: typeof Column.EVENT_SUMMARY_RENDERER_TYPE_CHANGED, listener: typeof summaryRendererChanged | null): this;\n  on(type: typeof Column.EVENT_VISIBILITY_CHANGED, listener: typeof visibilityChanged | null): this;\n  on(type: string | string[], listener: IEventListener | null): this; // required for correct typings in *.d.ts\n  on(type: string | string[], listener: IEventListener | null): this {\n    return super.on(<any>type, listener);\n  }\n\n  getValue(row: IDataRow): Date | null {\n    return this.getDate(row);\n  }\n\n  getDate(row: IDataRow) {\n    const v = super.getValue(row);\n    if (isMissingValue(v)) {\n      return null;\n    }\n    if (v instanceof Date) {\n      return v;\n    }\n    return this.parse(String(v));\n  }\n\n  iterDate(row: IDataRow) {\n    return [this.getDate(row)];\n  }\n\n  getLabel(row: IDataRow) {\n    const v = this.getValue(row);\n    return this.format(v);\n  }\n\n  isFiltered() {\n    return !isDummyDateFilter(this.currentFilter);\n  }\n\n  clearFilter() {\n    const was = this.isFiltered();\n    this.setFilter(null);\n    return was;\n  }\n\n  getFilter(): IDateFilter {\n    return Object.assign({}, this.currentFilter);\n  }\n\n  setFilter(value: IDateFilter | null) {\n    value = value || {min: -Infinity, max: +Infinity, filterMissing: false};\n    if (isEqualDateFilter(value, this.currentFilter)) {\n      return;\n    }\n    const bak = this.getFilter();\n    this.currentFilter.min = isUnknown(value.min) ? -Infinity : value.min;\n    this.currentFilter.max = isUnknown(value.max) ? Infinity : value.max;\n    this.currentFilter.filterMissing = value.filterMissing;\n    this.fire([DateColumn.EVENT_FILTER_CHANGED, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY], bak, this.getFilter());\n  }\n\n  /**\n   * filter the current row if any filter is set\n   * @param row\n   * @returns {boolean}\n   */\n  filter(row: IDataRow, valueCache?: any) {\n    return isDateIncluded(this.currentFilter, valueCache !== undefined ? valueCache : this.getDate(row));\n  }\n\n  toCompareValue(row: IDataRow, valueCache?: any) {\n    const v = valueCache !== undefined ? valueCache : this.getValue(row);\n    if (!(v instanceof Date)) {\n      return NaN;\n    }\n    return v.getTime();\n  }\n\n  toCompareValueType() {\n    return ECompareValueType.DOUBLE_ASC;\n  }\n\n  getDateGrouper() {\n    return Object.assign({}, this.currentGrouper);\n  }\n\n  setDateGrouper(value: IDateGrouper) {\n    if (equal(this.currentGrouper, value)) {\n      return;\n    }\n    const bak = this.getDateGrouper();\n    this.currentGrouper = Object.assign({}, value);\n    this.fire([DateColumn.EVENT_GROUPING_CHANGED, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY], bak, value);\n  }\n\n  group(row: IDataRow, valueCache?: any): IGroup {\n    const v = valueCache !== undefined ? valueCache : this.getDate(row);\n    if (!v || !(v instanceof Date)) {\n      return Object.assign({}, missingGroup);\n    }\n    if (!this.currentGrouper) {\n      return Object.assign({}, defaultGroup);\n    }\n    const g = toDateGroup(this.currentGrouper, v);\n    return {\n      name: g.name,\n      color: DEFAULT_COLOR\n    };\n  }\n\n  toCompareGroupValue(rows: ISequence<IDataRow>, _group: IGroup, valueCache?: ISequence<any>): number {\n    const v = chooseAggregatedDate(rows, this.currentGrouper, this, valueCache).value;\n    return v == null ? NaN : v;\n  }\n\n  toCompareGroupValueType() {\n    return ECompareValueType.DOUBLE_ASC;\n  }\n}\n","import {timeFormat, timeParse} from 'd3-time-format';\nimport {median, min, max, IEventListener} from '../internal';\nimport {dialogAddons, toolbar} from './annotations';\nimport ArrayColumn, {IArrayColumnDesc} from './ArrayColumn';\nimport Column, {widthChanged, labelChanged, metaDataChanged, dirty, dirtyHeader, dirtyValues, rendererTypeChanged, groupRendererChanged, summaryRendererChanged, visibilityChanged, dirtyCaches} from './Column';\nimport ValueColumn, {dataLoaded} from './ValueColumn';\nimport {IDateDesc, IDatesColumn, IDateFilter} from './IDateColumn';\nimport {IDataRow, ECompareValueType, ITypeFactory} from './interfaces';\nimport {isMissingValue} from './missing';\nimport DateColumn from './DateColumn';\nimport {noDateFilter, isDummyDateFilter, restoreDateFilter} from './internalDate';\nimport {chooseUIntByDataLength} from './internal';\n\nexport enum EDateSort {\n  min = 'min',\n  max = 'max',\n  median = 'median'\n}\n\nexport interface IDatesDesc extends IDateDesc {\n  sort?: EDateSort;\n}\n\nexport declare type IDatesColumnDesc = IDatesDesc & IArrayColumnDesc<Date>;\n\n/**\n * emitted when the sort method property changes\n * @asMemberOf DatesColumn\n * @event\n */\nexport declare function sortMethodChanged_DCS(previous: EDateSort, current: EDateSort): void;\n\n/**\n * emitted when the filter property changes\n * @asMemberOf DatesColumn\n * @event\n */\nexport declare function filterChanged_DCS(previous: IDateFilter | null, current: IDateFilter | null): void;\n\n@toolbar('filterDate')\n@dialogAddons('sort', 'sortDates')\nexport default class DatesColumn extends ArrayColumn<Date | null> implements IDatesColumn {\n  static readonly EVENT_SORTMETHOD_CHANGED = 'sortMethodChanged';\n  static readonly EVENT_FILTER_CHANGED = DateColumn.EVENT_FILTER_CHANGED;\n\n  private readonly format: (date: Date | null) => string;\n  private readonly parse: (date: string) => Date | null;\n  private sort: EDateSort;\n  private currentFilter: IDateFilter = noDateFilter();\n\n  constructor(id: string, desc: Readonly<IDatesColumnDesc>) {\n    super(id, desc);\n    const f = timeFormat(desc.dateFormat || DateColumn.DEFAULT_DATE_FORMAT);\n    this.format = (v) => (v instanceof Date) ? f(v) : '';\n    this.parse = desc.dateParse ? timeParse(desc.dateParse) : timeParse(desc.dateFormat || DateColumn.DEFAULT_DATE_FORMAT);\n    this.sort = desc.sort || EDateSort.median;\n    this.setDefaultRenderer('datehistogram');\n    this.setDefaultGroupRenderer('datehistogram');\n    this.setDefaultSummaryRenderer('datehistogram');\n  }\n\n  getFormatter() {\n    return this.format;\n  }\n\n  protected createEventList() {\n    return super.createEventList().concat([DatesColumn.EVENT_SORTMETHOD_CHANGED, DatesColumn.EVENT_FILTER_CHANGED]);\n  }\n\n  on(type: typeof DatesColumn.EVENT_SORTMETHOD_CHANGED, listener: typeof sortMethodChanged_DCS | null): this;\n  on(type: typeof DatesColumn.EVENT_FILTER_CHANGED, listener: typeof filterChanged_DCS | null): this;\n  on(type: typeof ValueColumn.EVENT_DATA_LOADED, listener: typeof dataLoaded | null): this;\n  on(type: typeof Column.EVENT_WIDTH_CHANGED, listener: typeof widthChanged | null): this;\n  on(type: typeof Column.EVENT_LABEL_CHANGED, listener: typeof labelChanged | null): this;\n  on(type: typeof Column.EVENT_METADATA_CHANGED, listener: typeof metaDataChanged | null): this;\n  on(type: typeof Column.EVENT_DIRTY, listener: typeof dirty | null): this;\n  on(type: typeof Column.EVENT_DIRTY_HEADER, listener: typeof dirtyHeader | null): this;\n  on(type: typeof Column.EVENT_DIRTY_VALUES, listener: typeof dirtyValues | null): this;\n  on(type: typeof Column.EVENT_DIRTY_CACHES, listener: typeof dirtyCaches | null): this;\n  on(type: typeof Column.EVENT_RENDERER_TYPE_CHANGED, listener: typeof rendererTypeChanged | null): this;\n  on(type: typeof Column.EVENT_GROUP_RENDERER_TYPE_CHANGED, listener: typeof groupRendererChanged | null): this;\n  on(type: typeof Column.EVENT_SUMMARY_RENDERER_TYPE_CHANGED, listener: typeof summaryRendererChanged | null): this;\n  on(type: typeof Column.EVENT_VISIBILITY_CHANGED, listener: typeof visibilityChanged | null): this;\n  on(type: string | string[], listener: IEventListener | null): this; // required for correct typings in *.d.ts\n  on(type: string | string[], listener: IEventListener | null): this {\n    return super.on(<any>type, listener);\n  }\n\n  getValue(row: IDataRow): (Date | null)[] | null {\n    const r = this.getDates(row);\n    return r.every((d) => d == null) ? null : r;\n  }\n\n  getLabels(row: IDataRow) {\n    return this.getDates(row).map((v) => (v instanceof Date) ? this.format(v) : '');\n  }\n\n  getDates(row: IDataRow): (Date | null)[] {\n    return super.getValues(row).map((v) => {\n      if (isMissingValue(v)) {\n        return null;\n      }\n      if (v instanceof Date) {\n        return v;\n      }\n      return this.parse(String(v));\n    });\n  }\n\n  getDate(row: IDataRow) {\n    const av = <Date[]>this.getDates(row).filter(Boolean);\n    if (av.length === 0) {\n      return null;\n    }\n    return new Date(compute(av, this.sort));\n  }\n\n  iterDate(row: IDataRow) {\n    return this.getDates(row);\n  }\n\n  getSortMethod() {\n    return this.sort;\n  }\n\n  setSortMethod(sort: EDateSort) {\n    if (this.sort === sort) {\n      return;\n    }\n    this.fire([DatesColumn.EVENT_SORTMETHOD_CHANGED], this.sort, this.sort = sort);\n    // sort by me if not already sorted by me\n    if (!this.isSortedByMe().asc) {\n      this.sortByMe();\n    }\n  }\n\n  dump(toDescRef: (desc: any) => any): any {\n    const r = super.dump(toDescRef);\n    r.sortMethod = this.getSortMethod();\n    r.filter = !isDummyDateFilter(this.currentFilter) ? this.currentFilter : null;\n    return r;\n  }\n\n  restore(dump: any, factory: ITypeFactory) {\n    super.restore(dump, factory);\n    if (dump.sortMethod) {\n      this.sort = dump.sortMethod;\n    }\n    if (dump.filter) {\n      this.currentFilter = restoreDateFilter(dump.filter);\n    }\n  }\n\n  toCompareValue(row: IDataRow) {\n    const vs = <Date[]>this.getDates(row).filter(Boolean);\n    if (!vs) {\n      return [0, 0];\n    }\n    return [vs.length, compute(vs, this.sort)];\n  }\n\n  toCompareValueType() {\n    return [chooseUIntByDataLength(this.dataLength), ECompareValueType.DOUBLE_ASC];\n  }\n\n  isFiltered() {\n    return DateColumn.prototype.isFiltered.call(this);\n  }\n\n  getFilter(): IDateFilter {\n    return DateColumn.prototype.getFilter.call(this);\n  }\n\n  setFilter(value: IDateFilter | null) {\n    DateColumn.prototype.setFilter.call(this, value);\n  }\n\n  filter(row: IDataRow) {\n    return DateColumn.prototype.filter.call(this, row);\n  }\n\n  clearFilter() {\n    return DateColumn.prototype.clearFilter.call(this);\n  }\n}\n\nfunction compute(arr: Date[], sort: EDateSort) {\n  switch (sort) {\n    case EDateSort.min:\n      return min(arr, (d) => d.getTime())!;\n    case EDateSort.max:\n      return max(arr, (d) => d.getTime())!;\n    case EDateSort.median:\n      return median(arr, (d) => d.getTime())!;\n  }\n}\n","import {timeFormat, timeParse} from 'd3-time-format';\nimport {IDateColumn, IDateFilter} from './IDateColumn';\nimport {IKeyValue} from './IArrayColumn';\nimport {IDataRow, ITypeFactory} from './interfaces';\nimport MapColumn, {IMapColumnDesc} from './MapColumn';\nimport {isMissingValue} from './missing';\nimport DatesColumn, {EDateSort, IDatesDesc} from './DatesColumn';\nimport DateColumn from './DateColumn';\nimport {dialogAddons, toolbar} from './annotations';\nimport Column, {widthChanged, labelChanged, metaDataChanged, dirty, dirtyHeader, dirtyValues, rendererTypeChanged, groupRendererChanged, summaryRendererChanged, visibilityChanged, dirtyCaches} from './Column';\nimport ValueColumn, {dataLoaded} from './ValueColumn';\nimport {IEventListener} from '../internal';\nimport {noDateFilter, isDummyDateFilter, restoreDateFilter} from './internalDate';\n\nexport declare type IDateMapColumnDesc = IDatesDesc & IMapColumnDesc<Date | null>;\n\n/**\n * emitted when the sort method property changes\n * @asMemberOf DatesMapColumn\n * @event\n */\nexport declare function sortMethodChanged_DMC(previous: EDateSort, current: EDateSort): void;\n\n/**\n * emitted when the filter property changes\n * @asMemberOf DatesMapColumn\n * @event\n */\nexport declare function filterChanged_DMC(previous: IDateFilter | null, current: IDateFilter | null): void;\n\n\n@toolbar('filterDate')\n@dialogAddons('sort', 'sortDates')\nexport default class DatesMapColumn extends MapColumn<Date | null> implements IDateColumn {\n  static readonly EVENT_SORTMETHOD_CHANGED = DatesColumn.EVENT_SORTMETHOD_CHANGED;\n  static readonly EVENT_FILTER_CHANGED = DateColumn.EVENT_FILTER_CHANGED;\n\n  private readonly format: (date: Date | null) => string;\n  private readonly parse: (date: string) => Date | null;\n  private sort: EDateSort;\n  private currentFilter: IDateFilter = noDateFilter();\n\n  constructor(id: string, desc: Readonly<IDateMapColumnDesc>) {\n    super(id, desc);\n    const f = timeFormat(desc.dateFormat || DateColumn.DEFAULT_DATE_FORMAT);\n    this.format = (v) => (v instanceof Date) ? f(v) : '';\n    this.parse = desc.dateParse ? timeParse(desc.dateParse) : timeParse(desc.dateFormat || DateColumn.DEFAULT_DATE_FORMAT);\n    this.sort = desc.sort || EDateSort.median;\n    this.setDefaultRenderer('default');\n  }\n\n  getFormatter() {\n    return this.format;\n  }\n\n  protected createEventList() {\n    return super.createEventList().concat([DatesMapColumn.EVENT_SORTMETHOD_CHANGED, DatesMapColumn.EVENT_FILTER_CHANGED]);\n  }\n\n  on(type: typeof DatesMapColumn.EVENT_SORTMETHOD_CHANGED, listener: typeof sortMethodChanged_DMC | null): this;\n  on(type: typeof DatesMapColumn.EVENT_FILTER_CHANGED, listener: typeof filterChanged_DMC | null): this;\n  on(type: typeof ValueColumn.EVENT_DATA_LOADED, listener: typeof dataLoaded | null): this;\n  on(type: typeof Column.EVENT_WIDTH_CHANGED, listener: typeof widthChanged | null): this;\n  on(type: typeof Column.EVENT_LABEL_CHANGED, listener: typeof labelChanged | null): this;\n  on(type: typeof Column.EVENT_METADATA_CHANGED, listener: typeof metaDataChanged | null): this;\n  on(type: typeof Column.EVENT_DIRTY, listener: typeof dirty | null): this;\n  on(type: typeof Column.EVENT_DIRTY_HEADER, listener: typeof dirtyHeader | null): this;\n  on(type: typeof Column.EVENT_DIRTY_VALUES, listener: typeof dirtyValues | null): this;\n  on(type: typeof Column.EVENT_DIRTY_CACHES, listener: typeof dirtyCaches | null): this;\n  on(type: typeof Column.EVENT_RENDERER_TYPE_CHANGED, listener: typeof rendererTypeChanged | null): this;\n  on(type: typeof Column.EVENT_GROUP_RENDERER_TYPE_CHANGED, listener: typeof groupRendererChanged | null): this;\n  on(type: typeof Column.EVENT_SUMMARY_RENDERER_TYPE_CHANGED, listener: typeof summaryRendererChanged | null): this;\n  on(type: typeof Column.EVENT_VISIBILITY_CHANGED, listener: typeof visibilityChanged | null): this;\n  on(type: string | string[], listener: IEventListener | null): this; // required for correct typings in *.d.ts\n  on(type: string | string[], listener: IEventListener | null): this {\n    return super.on(<any>type, listener);\n  }\n\n  private parseValue(v: any) {\n    if (isMissingValue(v)) {\n      return null;\n    }\n    if (v instanceof Date) {\n      return v;\n    }\n    return this.parse(String(v));\n  }\n\n  getDateMap(row: IDataRow) {\n    return super.getMap(row).map(({key, value}) => ({\n      key,\n      value: this.parseValue(value)\n    }));\n  }\n\n  iterDate(row: IDataRow) {\n    return this.getDates(row);\n  }\n\n  getValue(row: IDataRow) {\n    const r = this.getDateMap(row);\n\n    return r.every((d) => d == null) ? null : r;\n  }\n\n  getLabels(row: IDataRow): IKeyValue<string>[] {\n    return this.getDateMap(row).map(({key, value}) => ({\n      key,\n      value: (value instanceof Date) ? this.format(value) : ''\n    }));\n  }\n\n  getDates(row: IDataRow): (Date | null)[] {\n    return this.getDateMap(row).map((v) => v.value);\n  }\n\n  getDate(row: IDataRow) {\n    return DatesColumn.prototype.getDate.call(this, row);\n  }\n\n  getSortMethod() {\n    return this.sort;\n  }\n\n  setSortMethod(sort: EDateSort) {\n    return DatesColumn.prototype.setSortMethod.call(this, sort);\n  }\n\n  dump(toDescRef: (desc: any) => any): any {\n    const r = super.dump(toDescRef);\n    r.sortMethod = this.getSortMethod();\n    r.filter = !isDummyDateFilter(this.currentFilter) ? this.currentFilter : null;\n    return r;\n  }\n\n  restore(dump: any, factory: ITypeFactory) {\n    super.restore(dump, factory);\n    if (dump.sortMethod) {\n      this.sort = dump.sortMethod;\n    }\n    if (dump.filter) {\n      this.currentFilter = restoreDateFilter(dump.filter);\n    }\n  }\n\n  isFiltered() {\n    return DateColumn.prototype.isFiltered.call(this);\n  }\n\n  getFilter(): IDateFilter {\n    return DateColumn.prototype.getFilter.call(this);\n  }\n\n  setFilter(value: IDateFilter | null) {\n    DateColumn.prototype.setFilter.call(this, value);\n  }\n\n  filter(row: IDataRow) {\n    return DateColumn.prototype.filter.call(this, row);\n  }\n\n  clearFilter() {\n    return DateColumn.prototype.clearFilter.call(this);\n  }\n}\n","import {Category, SupportType, toolbar, dialogAddons} from './annotations';\nimport Column, {widthChanged, labelChanged, metaDataChanged, dirty, dirtyHeader, dirtyValues, rendererTypeChanged, groupRendererChanged, summaryRendererChanged, visibilityChanged, dirtyCaches} from './Column';\nimport {IDataRow, IGroup, ECompareValueType} from './interfaces';\nimport {missingGroup} from './missing';\nimport {IEventListener, ISequence} from '../internal';\n\nexport function createGroupDesc(label = 'Group Name') {\n  return {type: 'group', label};\n}\n\nexport enum EGroupSortMethod {\n  name = 'name',\n  count = 'count'\n}\n\n/**\n * emitted when the sort method property changes\n * @asMemberOf GroupColumn\n * @event\n */\nexport declare function sortMethodChanged(previous: EGroupSortMethod, current: EGroupSortMethod): void;\n\n\n@SupportType()\n@toolbar('sortGroupBy')\n@dialogAddons('sortGroup', 'sortGroups')\n@Category('support')\nexport default class GroupColumn extends Column {\n  static readonly EVENT_SORTMETHOD_CHANGED = 'sortMethodChanged';\n\n  private groupSortMethod: EGroupSortMethod = EGroupSortMethod.name;\n\n  get frozen() {\n    return this.desc.frozen !== false;\n  }\n\n  protected createEventList() {\n    return super.createEventList().concat([GroupColumn.EVENT_SORTMETHOD_CHANGED]);\n  }\n\n  on(type: typeof GroupColumn.EVENT_SORTMETHOD_CHANGED, listener: typeof sortMethodChanged | null): this;\n  on(type: typeof Column.EVENT_WIDTH_CHANGED, listener: typeof widthChanged | null): this;\n  on(type: typeof Column.EVENT_LABEL_CHANGED, listener: typeof labelChanged | null): this;\n  on(type: typeof Column.EVENT_METADATA_CHANGED, listener: typeof metaDataChanged | null): this;\n  on(type: typeof Column.EVENT_DIRTY, listener: typeof dirty | null): this;\n  on(type: typeof Column.EVENT_DIRTY_HEADER, listener: typeof dirtyHeader | null): this;\n  on(type: typeof Column.EVENT_DIRTY_VALUES, listener: typeof dirtyValues | null): this;\n  on(type: typeof Column.EVENT_DIRTY_CACHES, listener: typeof dirtyCaches | null): this;\n  on(type: typeof Column.EVENT_RENDERER_TYPE_CHANGED, listener: typeof rendererTypeChanged | null): this;\n  on(type: typeof Column.EVENT_GROUP_RENDERER_TYPE_CHANGED, listener: typeof groupRendererChanged | null): this;\n  on(type: typeof Column.EVENT_SUMMARY_RENDERER_TYPE_CHANGED, listener: typeof summaryRendererChanged | null): this;\n  on(type: typeof Column.EVENT_VISIBILITY_CHANGED, listener: typeof visibilityChanged | null): this;\n  on(type: string | string[], listener: IEventListener | null): this; // required for correct typings in *.d.ts\n  on(type: string | string[], listener: IEventListener | null): this {\n    return super.on(<any>type, listener);\n  }\n\n  getLabel() {\n    return '';\n  }\n\n  getValue() {\n    return '';\n  }\n\n  getSortMethod() {\n    return this.groupSortMethod;\n  }\n\n  setSortMethod(sortMethod: EGroupSortMethod) {\n    if (this.groupSortMethod === sortMethod) {\n      return;\n    }\n    this.fire(GroupColumn.EVENT_SORTMETHOD_CHANGED, this.groupSortMethod, this.groupSortMethod = sortMethod);\n    // sort by me if not already sorted by me\n    if (!this.isGroupSortedByMe().asc) {\n      this.toggleMyGroupSorting();\n    }\n  }\n\n  toCompareGroupValue(rows: ISequence<IDataRow>, group: IGroup) {\n    if (this.groupSortMethod === 'count') {\n      return rows.length;\n    }\n    return group.name === missingGroup.name ? null : group.name.toLowerCase();\n  }\n\n  toCompareGroupValueType() {\n    return this.groupSortMethod === 'count' ? ECompareValueType.COUNT : ECompareValueType.STRING;\n  }\n}\n","import {Category, toolbar} from './annotations';\nimport CategoricalColumn from './CategoricalColumn';\nimport Column, {widthChanged, labelChanged, metaDataChanged, dirty, dirtyHeader, dirtyValues, dirtyCaches, rendererTypeChanged, groupRendererChanged, summaryRendererChanged, visibilityChanged} from './Column';\nimport {ICategoricalColumn, ICategory, ICategoricalColorMappingFunction} from './ICategoricalColumn';\nimport {IDataRow, IGroup, IValueColumnDesc, DEFAULT_COLOR, ITypeFactory} from './interfaces';\nimport {colorPool} from './internal';\nimport {missingGroup} from './missing';\nimport ValueColumn, {dataLoaded} from './ValueColumn';\nimport {IEventListener} from '../internal';\nimport {DEFAULT_CATEGORICAL_COLOR_FUNCTION} from './CategoricalColorMappingFunction';\n\nexport interface ICategoryNode extends ICategory {\n  children: Readonly<ICategoryNode>[];\n}\n\nexport interface IPartialCategoryNode extends Partial<ICategory> {\n  children: IPartialCategoryNode[];\n}\n\nexport interface IHierarchyDesc {\n  hierarchy: IPartialCategoryNode;\n  hierarchySeparator?: string;\n}\n\nexport declare type IHierarchyColumnDesc = IHierarchyDesc & IValueColumnDesc<string>;\n\nexport interface ICategoryInternalNode extends ICategory {\n  path: string;\n  children: Readonly<ICategoryInternalNode>[];\n}\n\nexport interface ICutOffNode {\n  node: Readonly<ICategoryInternalNode>;\n  maxDepth: number;\n}\n\n/**\n * emitted when the color mapping property changes\n * @asMemberOf HierarchyColumn\n * @event\n */\nexport declare function colorMappingChanged_HC(previous: ICategoricalColorMappingFunction, current: ICategoricalColorMappingFunction): void;\n\n\n/**\n * emitted when the cut off property changes\n * @asMemberOf HierarchyColumn\n * @event\n */\nexport declare function cutOffChanged(previous: ICutOffNode, current: ICutOffNode): void;\n\n/**\n * column for hierarchical categorical values\n */\n@toolbar('cutoff', 'group', 'groupBy', 'colorMappedCategorical')\n@Category('categorical')\nexport default class HierarchyColumn extends ValueColumn<string> implements ICategoricalColumn {\n  static readonly EVENT_CUTOFF_CHANGED = 'cutOffChanged';\n  static readonly EVENT_COLOR_MAPPING_CHANGED = 'colorMappingChanged';\n\n  private readonly hierarchySeparator: string;\n  readonly hierarchy: Readonly<ICategoryInternalNode>;\n\n  private currentNode: Readonly<ICategoryInternalNode>;\n  private currentMaxDepth: number = Infinity;\n  private currentLeaves: Readonly<ICategoryInternalNode>[] = [];\n  private readonly currentLeavesNameCache = new Map<string, Readonly<ICategoryInternalNode>>();\n  private readonly currentLeavesPathCache = new Map<string, Readonly<ICategoryInternalNode>>();\n\n  private colorMapping: ICategoricalColorMappingFunction;\n\n  constructor(id: string, desc: Readonly<IHierarchyColumnDesc>) {\n    super(id, desc);\n    this.hierarchySeparator = desc.hierarchySeparator || '.';\n    this.hierarchy = this.initHierarchy(desc.hierarchy);\n    this.currentNode = this.hierarchy;\n    this.currentLeaves = computeLeaves(this.currentNode, this.currentMaxDepth);\n    this.updateCaches();\n\n    this.setDefaultRenderer('categorical');\n    this.colorMapping = DEFAULT_CATEGORICAL_COLOR_FUNCTION;\n  }\n\n  private initHierarchy(root: IPartialCategoryNode) {\n    const colors = colorPool();\n    const s = this.hierarchySeparator;\n    const add = (prefix: string, node: IPartialCategoryNode): ICategoryInternalNode => {\n      const name = node.name == null ? String(node.value) : node.name;\n      const children = (node.children || []).map((child: IPartialCategoryNode | string): ICategoryInternalNode => {\n        if (typeof child === 'string') {\n          const path = prefix + child;\n          return {\n            path,\n            name: child,\n            label: path,\n            color: colors(),\n            value: 0,\n            children: []\n          };\n        }\n        const r = add(`${prefix}${name}${s}`, child);\n        if (!r.color) {\n          //hack to inject the next color\n          (<any>r).color = colors();\n        }\n        return r;\n      });\n      const path = prefix + name;\n      const label = node.label ? node.label : path;\n      return {path, name, children, label, color: node.color!, value: 0};\n    };\n    return add('', root);\n  }\n\n  get categories() {\n    return this.currentLeaves;\n  }\n\n  protected createEventList() {\n    return super.createEventList().concat([HierarchyColumn.EVENT_COLOR_MAPPING_CHANGED, HierarchyColumn.EVENT_CUTOFF_CHANGED]);\n  }\n\n  on(type: typeof HierarchyColumn.EVENT_CUTOFF_CHANGED, listener: typeof cutOffChanged | null): this;\n  on(type: typeof HierarchyColumn.EVENT_COLOR_MAPPING_CHANGED, listener: typeof colorMappingChanged_HC | null): this;\n  on(type: typeof ValueColumn.EVENT_DATA_LOADED, listener: typeof dataLoaded | null): this;\n  on(type: typeof Column.EVENT_WIDTH_CHANGED, listener: typeof widthChanged | null): this;\n  on(type: typeof Column.EVENT_LABEL_CHANGED, listener: typeof labelChanged | null): this;\n  on(type: typeof Column.EVENT_METADATA_CHANGED, listener: typeof metaDataChanged | null): this;\n  on(type: typeof Column.EVENT_DIRTY, listener: typeof dirty | null): this;\n  on(type: typeof Column.EVENT_DIRTY_HEADER, listener: typeof dirtyHeader | null): this;\n  on(type: typeof Column.EVENT_DIRTY_VALUES, listener: typeof dirtyValues | null): this;\n  on(type: typeof Column.EVENT_DIRTY_CACHES, listener: typeof dirtyCaches | null): this;\n  on(type: typeof Column.EVENT_RENDERER_TYPE_CHANGED, listener: typeof rendererTypeChanged | null): this;\n  on(type: typeof Column.EVENT_GROUP_RENDERER_TYPE_CHANGED, listener: typeof groupRendererChanged | null): this;\n  on(type: typeof Column.EVENT_SUMMARY_RENDERER_TYPE_CHANGED, listener: typeof summaryRendererChanged | null): this;\n  on(type: typeof Column.EVENT_VISIBILITY_CHANGED, listener: typeof visibilityChanged | null): this;\n  on(type: string | string[], listener: IEventListener | null): this; // required for correct typings in *.d.ts\n  on(type: string | string[], listener: IEventListener | null): this {\n    return super.on(<any>type, listener);\n  }\n\n  dump(toDescRef: (desc: any) => any): any {\n    const r = super.dump(toDescRef);\n    r.colorMapping = this.colorMapping.toJSON();\n    if (isFinite(this.currentMaxDepth)) {\n      r.maxDepth = this.currentMaxDepth;\n    }\n    if (this.currentNode !== this.hierarchy) {\n      r.cutOffNode = this.currentNode.path;\n    }\n    return r;\n  }\n\n  restore(dump: any, factory: ITypeFactory) {\n    super.restore(dump, factory);\n    this.colorMapping = factory.categoricalColorMappingFunction(dump.colorMapping, this.categories);\n    if (typeof dump.maxDepth !== 'undefined') {\n      this.currentMaxDepth = dump.maxDepth;\n    }\n    if (typeof dump.cutOffNode !== 'undefined') {\n      const path = dump.cutOffNode.split(this.hierarchySeparator);\n      let node: Readonly<ICategoryInternalNode> | null = this.hierarchy;\n\n      let act = path.shift();\n      while (act && node) {\n        if (node.name !== act) {\n          node = null;\n          break;\n        }\n        const next = path.shift();\n        if (!next) {\n          break;\n        }\n        act = next;\n        node = node.children.find((d) => d.name === act) || null;\n      }\n      this.currentNode = node || this.hierarchy;\n    }\n\n    if (typeof dump.maxDepth !== 'undefined' || typeof dump.cutOffNode !== 'undefined') {\n      this.currentLeaves = computeLeaves(this.currentNode, this.currentMaxDepth);\n      this.updateCaches();\n    }\n  }\n\n  getColorMapping() {\n    return this.colorMapping.clone();\n  }\n\n  setColorMapping(mapping: ICategoricalColorMappingFunction) {\n    if (this.colorMapping.eq(mapping)) {\n      return;\n    }\n    this.fire([CategoricalColumn.EVENT_COLOR_MAPPING_CHANGED, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY_HEADER, Column.EVENT_DIRTY], this.colorMapping.clone(), this.colorMapping = mapping);\n  }\n\n  getCutOff(): ICutOffNode {\n    return {\n      node: this.currentNode,\n      maxDepth: this.currentMaxDepth\n    };\n  }\n\n  setCutOff(value: ICutOffNode) {\n    const maxDepth = value.maxDepth == null ? Infinity : value.maxDepth;\n    if (this.currentNode === value.node && this.currentMaxDepth === maxDepth) {\n      return;\n    }\n    const bak = this.getCutOff();\n    this.currentNode = value.node;\n    this.currentMaxDepth = maxDepth;\n    this.currentLeaves = computeLeaves(value.node, maxDepth);\n    this.updateCaches();\n    this.fire([HierarchyColumn.EVENT_CUTOFF_CHANGED, Column.EVENT_DIRTY_HEADER, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY], bak, this.getCutOff());\n  }\n\n  getCategory(row: IDataRow) {\n    let v = super.getValue(row);\n    if (v == null || v === '') {\n      return null;\n    }\n    v = v.trim();\n    if (this.currentLeavesNameCache.has(v)) {\n      return this.currentLeavesNameCache.get(v)!;\n    }\n    if (this.currentLeavesPathCache.has(v)) {\n      return this.currentLeavesPathCache.get(v)!;\n    }\n    return this.currentLeaves.find((n) => {\n      //direct hit or is a child of it\n      return n.path === v || n.name === v || v!.startsWith(n.path + this.hierarchySeparator);\n    }) || null;\n  }\n\n  get dataLength() {\n    return this.currentLeaves.length;\n  }\n\n  get labels() {\n    return this.currentLeaves.map((d) => d.label);\n  }\n\n  getValue(row: IDataRow) {\n    const v = this.getCategory(row);\n    return v ? v.name : null;\n  }\n\n  getCategories(row: IDataRow) {\n    return [this.getCategory(row)];\n  }\n\n  iterCategory(row: IDataRow) {\n    return [this.getCategory(row)];\n  }\n\n  getLabel(row: IDataRow) {\n    return CategoricalColumn.prototype.getLabel.call(this, row);\n  }\n\n  getColor(row: IDataRow) {\n    return CategoricalColumn.prototype.getColor.call(this, row);\n  }\n\n  getLabels(row: IDataRow) {\n    return CategoricalColumn.prototype.getLabels.call(this, row);\n  }\n\n  getValues(row: IDataRow) {\n    return CategoricalColumn.prototype.getValues.call(this, row);\n  }\n\n  getMap(row: IDataRow) {\n    return CategoricalColumn.prototype.getMap.call(this, row);\n  }\n\n  getMapLabel(row: IDataRow) {\n    return CategoricalColumn.prototype.getMapLabel.call(this, row);\n  }\n\n  getSet(row: IDataRow) {\n    return CategoricalColumn.prototype.getSet.call(this, row);\n  }\n\n  toCompareValue(row: IDataRow) {\n    return CategoricalColumn.prototype.toCompareValue.call(this, row);\n  }\n\n  toCompareValueType() {\n    return CategoricalColumn.prototype.toCompareValueType.call(this);\n  }\n\n  group(row: IDataRow): IGroup {\n    const base = this.getCategory(row);\n    if (!base) {\n      return Object.assign({}, missingGroup);\n    }\n    return {name: base.label, color: base.color};\n  }\n\n  private updateCaches() {\n    this.currentLeavesPathCache.clear();\n    this.currentLeavesNameCache.clear();\n\n    this.currentLeaves.forEach((n) => {\n      this.currentLeavesPathCache.set(n.path, n);\n      this.currentLeavesNameCache.set(n.name, n);\n    });\n  }\n}\n\nfunction computeLeaves(node: ICategoryInternalNode, maxDepth: number = Infinity) {\n  const leaves: ICategoryInternalNode[] = [];\n  //depth first\n  const visit = (node: ICategoryInternalNode, depth: number) => {\n    //hit or end\n    if (depth >= maxDepth || node.children.length === 0) {\n      leaves.push(node);\n    } else {\n      // go down\n      node.children.forEach((c) => visit(c, depth + 1));\n    }\n  };\n  visit(node, 0);\n  return leaves;\n}\n\nexport function resolveInnerNodes(node: ICategoryInternalNode) {\n  //breath first\n  const queue: ICategoryInternalNode[] = [node];\n  let index = 0;\n  while (index < queue.length) {\n    const next = queue[index++];\n    for (const n of next.children) {\n      queue.push(n);\n    }\n  }\n  return queue;\n}\n\nexport function isHierarchical(categories: (string | Partial<ICategory>)[]) {\n  if (categories.length === 0 || typeof categories[0] === 'string') {\n    return false;\n  }\n  // check if any has a given parent name\n  return categories.some((c) => (<any>c).parent != null);\n}\n\nexport function deriveHierarchy(categories: (Partial<ICategory> & {parent: string | null})[]) {\n  const lookup = new Map<string, ICategoryNode>();\n  categories.forEach((c) => {\n    const p = c.parent || '';\n    // set and fill up proxy\n    const item = Object.assign(<ICategoryNode>{\n      children: [],\n      label: c.name!,\n      name: c.name!,\n      color: DEFAULT_COLOR,\n      value: 0\n    }, lookup.get(c.name!) || {}, c);\n    lookup.set(c.name!, item);\n\n    if (!lookup.has(p)) {\n      // create proxy\n      lookup.set(p, {name: p, children: [], label: p, value: 0, color: DEFAULT_COLOR});\n    }\n    lookup.get(p)!.children.push(item);\n  });\n  const root = lookup.get('')!;\n  console.assert(root !== undefined, 'hierarchy with no root');\n  if (root.children.length === 1) {\n    return root.children[0];\n  }\n  return root;\n}\n","import {interpolateBlues, interpolateGreens, interpolateGreys, interpolateOranges, interpolatePurples, interpolateReds, interpolateCool, interpolateCubehelixDefault, interpolateWarm, interpolatePlasma, interpolateMagma, interpolateViridis, interpolateInferno, interpolateYlOrRd, interpolateYlOrBr, interpolateBuGn, interpolateBuPu, interpolateGnBu, interpolateOrRd, interpolatePuBuGn, interpolatePuBu, interpolatePuRd, interpolateRdPu, interpolateYlGnBu, interpolateYlGn, interpolateRainbow, interpolateBrBG, interpolatePRGn, interpolatePiYG, interpolatePuOr, interpolateRdBu, interpolateRdGy, interpolateRdYlBu, interpolateRdYlGn, interpolateSpectral} from 'd3-scale-chromatic';\nimport {equal} from '../internal';\nimport {scaleLinear} from 'd3-scale';\nimport {IColorMappingFunction} from '.';\nimport {DEFAULT_COLOR, ITypedDump, ITypeFactory} from './interfaces';\nimport {IColorMappingFunctionConstructor} from './INumberColumn';\n\nexport class SequentialColorFunction implements IColorMappingFunction {\n  public static readonly FUNCTIONS: {[key: string]: (v: number) => string} = {\n    interpolateBlues,\n    interpolateGreens,\n    interpolateGreys,\n    interpolateOranges,\n    interpolatePurples,\n    interpolateReds,\n    interpolateCool,\n    interpolateCubehelixDefault,\n    interpolateWarm,\n    interpolatePlasma,\n    interpolateMagma,\n    interpolateViridis,\n    interpolateInferno,\n    interpolateYlOrRd,\n    interpolateYlOrBr,\n    interpolateBuGn,\n    interpolateBuPu,\n    interpolateGnBu,\n    interpolateOrRd,\n    interpolatePuBuGn,\n    interpolatePuBu,\n    interpolatePuRd,\n    interpolateRdPu,\n    interpolateYlGnBu,\n    interpolateYlGn,\n    interpolateRainbow\n  };\n\n  public readonly apply: (v: number) => string;\n\n  constructor(public readonly name: string) {\n    this.apply = SequentialColorFunction.FUNCTIONS[name] || interpolateBlues;\n  }\n\n  toJSON() {\n    return this.name;\n  }\n\n  clone() {\n    return this; // no clone needed since not parameterized\n  }\n\n  eq(other: IColorMappingFunction): boolean {\n    return other instanceof SequentialColorFunction && other.name === this.name;\n  }\n}\n\nexport class DivergentColorFunction implements IColorMappingFunction {\n  public static readonly FUNCTIONS: {[key: string]: (v: number) => string} = {\n    interpolateBrBG,\n    interpolatePRGn,\n    interpolatePiYG,\n    interpolatePuOr,\n    interpolateRdBu,\n    interpolateRdGy,\n    interpolateRdYlBu,\n    interpolateRdYlGn,\n    interpolateSpectral\n  };\n\n  public readonly apply: (v: number) => string;\n\n  constructor(public readonly name: string) {\n    this.apply = DivergentColorFunction.FUNCTIONS[name] || interpolateBlues;\n  }\n\n  toJSON() {\n    return this.name;\n  }\n\n  clone() {\n    return this; // no clone needed since not parameterized\n  }\n\n  eq(other: IColorMappingFunction): boolean {\n    return other instanceof DivergentColorFunction && other.name === this.name;\n  }\n}\n\n\nexport class UnknownColorFunction implements IColorMappingFunction {\n  constructor(public readonly apply: (v: number) => string) {\n  }\n\n  toJSON() {\n    return this.apply.toString();\n  }\n\n  clone() {\n    return this; // no clone needed since not parameterized\n  }\n\n  eq(other: IColorMappingFunction): boolean {\n    return other instanceof UnknownColorFunction && other.apply === this.apply;\n  }\n}\n\nexport class SolidColorFunction implements IColorMappingFunction {\n  constructor(public readonly color: string) {\n\n  }\n\n  apply() {\n    return this.color;\n  }\n\n  toJSON() {\n    return this.color;\n  }\n\n  clone() {\n    return this; // no clone needed since not parameterized\n  }\n\n  eq(other: IColorMappingFunction): boolean {\n    return other instanceof SolidColorFunction && other.color === this.color;\n  }\n}\n\nexport class QuantizedColorFunction implements IColorMappingFunction {\n  public readonly base: IColorMappingFunction;\n  public readonly steps: number;\n\n  constructor(dump: ITypedDump, factory: ITypeFactory);\n  constructor(base: IColorMappingFunction, steps: number)\n  constructor(base: IColorMappingFunction | ITypedDump, steps: number | ITypeFactory) {\n    if (typeof (<any>base).apply === 'function') {\n      this.base = <IColorMappingFunction>base;\n      this.steps = steps == null ? 5 : <number>steps;\n    } else {\n      const dump = <ITypedDump>base;\n      this.base = (<ITypeFactory>steps).colorMappingFunction(dump.base);\n      this.steps = dump.steps;\n    }\n  }\n\n  apply(v: number) {\n    return this.base.apply(quantize(v, this.steps));\n  }\n\n  toJSON() {\n    return {\n      type: 'quantized',\n      base: this.base.toJSON(),\n      steps: this.steps\n    };\n  }\n\n  clone(): QuantizedColorFunction {\n    return new QuantizedColorFunction(this.base.clone(), this.steps);\n  }\n\n  eq(other: IColorMappingFunction): boolean {\n    return other instanceof QuantizedColorFunction && other.base.eq(this.base) && other.steps === this.steps;\n  }\n}\n\nexport class CustomColorMappingFunction implements IColorMappingFunction {\n  private readonly scale = scaleLinear<string>();\n  public readonly entries: {value: number, color: string}[];\n\n  constructor(dump: ITypedDump);\n  constructor(entries: {value: number, color: string}[]);\n  constructor(entries: ITypedDump | {value: number, color: string}[]) {\n    this.entries = Array.isArray(entries) ? entries : entries.entries;\n    this.scale\n      .domain(this.entries.map((d) => d.value))\n      .range(this.entries.map((d) => d.color))\n      .clamp(true);\n  }\n\n  apply(v: number) {\n    return this.scale(v);\n  }\n\n  toJSON() {\n    return {\n      type: 'custom',\n      entries: this.entries\n    };\n  }\n\n  clone() {\n    return new CustomColorMappingFunction(this.entries.slice());\n  }\n\n  eq(other: IColorMappingFunction): boolean {\n    return other instanceof CustomColorMappingFunction && equal(this.entries, other.entries);\n  }\n}\n\n/**\n * @internal\n */\nexport function quantize(v: number, steps: number) {\n  const perStep = 1 / steps;\n  if (v <= perStep) {\n    return 0;\n  }\n  if (v >= (1 - perStep)) {\n    return 1;\n  }\n  for (let acc = 0; acc < 1; acc += perStep) {\n    if (v < acc) {\n      return acc - perStep / 2; // center\n    }\n  }\n  return v;\n}\n\nexport function colorMappingFunctions() {\n  const types: any = {\n    [DEFAULT_COLOR]: SolidColorFunction,\n    quantized: QuantizedColorFunction,\n    custom: CustomColorMappingFunction\n  };\n  for (const key of Object.keys(SequentialColorFunction.FUNCTIONS)) {\n    types[key] = SequentialColorFunction;\n  }\n  for (const key of Object.keys(DivergentColorFunction.FUNCTIONS)) {\n    types[key] = DivergentColorFunction;\n  }\n  return types;\n}\n\nexport const DEFAULT_COLOR_FUNCTION = new SolidColorFunction(DEFAULT_COLOR);\n\n\n/**\n * @internal\n */\nexport function createColorMappingFunction(types: {[type: string]: IColorMappingFunctionConstructor}, factory: ITypeFactory) {\n  return (dump: ITypedDump | string | ((v: number) => string)): IColorMappingFunction => {\n    if (!dump) {\n      return DEFAULT_COLOR_FUNCTION;\n    }\n    if (typeof dump === 'function') {\n      return new UnknownColorFunction(dump);\n    }\n    const typeName = typeof dump === 'string' ? dump : dump.type;\n    const type = types[typeName];\n    if (type) {\n      return new type(dump, factory);\n    }\n    if (Array.isArray(dump)) {\n      return new CustomColorMappingFunction(dump);\n    }\n    return new SolidColorFunction(dump.toString());\n  };\n}\n","import {suffix, IEventListener, ISequence} from '../internal';\nimport {toolbar, SortByDefault} from './annotations';\nimport Column, {widthChanged, labelChanged, metaDataChanged, dirty, dirtyHeader, dirtyValues, rendererTypeChanged, groupRendererChanged, summaryRendererChanged, visibilityChanged, dirtyCaches} from './Column';\nimport CompositeColumn, {addColumn, filterChanged, moveColumn, removeColumn} from './CompositeColumn';\nimport {IDataRow, IGroup, IColumnDesc, DEFAULT_COLOR} from './interfaces';\nimport {isNumberColumn, INumberColumn, isMapAbleColumn, IColorMappingFunction, IMappingFunction, IMapAbleColumn, INumberFilter} from './INumberColumn';\nimport NumberColumn from './NumberColumn';\nimport {DEFAULT_FORMATTER, noNumberFilter} from './internalNumber';\nimport {ScaleMappingFunction} from './MappingFunction';\nimport {DEFAULT_COLOR_FUNCTION} from './ColorMappingFunction';\n\n\n/**\n *  factory for creating a description creating a max column\n * @param label\n * @returns {{type: string, label: string}}\n */\nexport function createImpositionDesc(label: string = 'Imposition') {\n  return {type: 'imposition', label};\n}\n\n/**\n * emitted when the mapping property changes\n * @asMemberOf ImpositionCompositeColumn\n * @event\n */\nexport declare function mappingChanged_ICC(previous: IMappingFunction, current: IMappingFunction): void;\n\n/**\n * emitted when the color mapping property changes\n * @asMemberOf ImpositionCompositeColumn\n * @event\n */\nexport declare function colorMappingChanged_ICC(previous: IColorMappingFunction, current: IColorMappingFunction): void;\n\n/**\n * implementation of a combine column, standard operations how to select\n */\n@toolbar('filterNumber', 'colorMapped', 'editMapping')\n@SortByDefault('descending')\nexport default class ImpositionCompositeColumn extends CompositeColumn implements INumberColumn, IMapAbleColumn {\n  static readonly EVENT_MAPPING_CHANGED = NumberColumn.EVENT_MAPPING_CHANGED;\n  static readonly EVENT_COLOR_MAPPING_CHANGED = NumberColumn.EVENT_COLOR_MAPPING_CHANGED;\n\n  constructor(id: string, desc: Readonly<IColumnDesc>) {\n    super(id, desc);\n\n    this.setDefaultRenderer('number');\n    this.setDefaultGroupRenderer('boxplot');\n    this.setDefaultSummaryRenderer('histogram');\n  }\n\n  get label() {\n    const l = super.getMetaData().label;\n    const c = this._children;\n    if (l !== 'Imposition' || c.length === 0) {\n      return l;\n    }\n    if (c.length === 1) {\n      return c[0].label;\n    }\n    const w = this.wrapper;\n    const rest = this.rest;\n    return `${w ? w.label : '?'} (${rest.map((c) => c.label).join(', ')})`;\n  }\n\n  private get wrapper(): INumberColumn | null {\n    return <INumberColumn>this._children.find(isNumberColumn) || null;\n  }\n\n  private get rest() {\n    const w = this.wrapper;\n    return this._children.filter((d) => d !== w);\n  }\n\n  protected createEventList() {\n    return super.createEventList().concat([ImpositionCompositeColumn.EVENT_MAPPING_CHANGED, ImpositionCompositeColumn.EVENT_COLOR_MAPPING_CHANGED]);\n  }\n\n  on(type: typeof ImpositionCompositeColumn.EVENT_COLOR_MAPPING_CHANGED, listener: typeof colorMappingChanged_ICC | null): this;\n  on(type: typeof ImpositionCompositeColumn.EVENT_MAPPING_CHANGED, listener: typeof mappingChanged_ICC | null): this;\n  on(type: typeof CompositeColumn.EVENT_FILTER_CHANGED, listener: typeof filterChanged | null): this;\n  on(type: typeof CompositeColumn.EVENT_ADD_COLUMN, listener: typeof addColumn | null): this;\n  on(type: typeof CompositeColumn.EVENT_MOVE_COLUMN, listener: typeof moveColumn | null): this;\n  on(type: typeof CompositeColumn.EVENT_REMOVE_COLUMN, listener: typeof removeColumn | null): this;\n  on(type: typeof Column.EVENT_WIDTH_CHANGED, listener: typeof widthChanged | null): this;\n  on(type: typeof Column.EVENT_LABEL_CHANGED, listener: typeof labelChanged | null): this;\n  on(type: typeof Column.EVENT_METADATA_CHANGED, listener: typeof metaDataChanged | null): this;\n  on(type: typeof Column.EVENT_DIRTY, listener: typeof dirty | null): this;\n  on(type: typeof Column.EVENT_DIRTY_HEADER, listener: typeof dirtyHeader | null): this;\n  on(type: typeof Column.EVENT_DIRTY_VALUES, listener: typeof dirtyValues | null): this;\n  on(type: typeof Column.EVENT_DIRTY_CACHES, listener: typeof dirtyCaches | null): this;\n  on(type: typeof Column.EVENT_RENDERER_TYPE_CHANGED, listener: typeof rendererTypeChanged | null): this;\n  on(type: typeof Column.EVENT_GROUP_RENDERER_TYPE_CHANGED, listener: typeof groupRendererChanged | null): this;\n  on(type: typeof Column.EVENT_SUMMARY_RENDERER_TYPE_CHANGED, listener: typeof summaryRendererChanged | null): this;\n  on(type: typeof Column.EVENT_VISIBILITY_CHANGED, listener: typeof visibilityChanged | null): this;\n  on(type: string | string[], listener: IEventListener | null): this; // required for correct typings in *.d.ts\n  on(type: string | string[], listener: IEventListener | null): this {\n    return super.on(type, listener);\n  }\n\n  getLabel(row: IDataRow) {\n    const c = this._children;\n    if (c.length === 0) {\n      return '';\n    }\n    if (c.length === 1) {\n      return c[0].getLabel(row);\n    }\n    const w = this.wrapper;\n    const rest = this.rest;\n    return `${w ? w.getLabel(row) : '?'} (${rest.map((c) => `${c.label} = ${c.getLabel(row)}`).join(', ')})`;\n  }\n\n  getColor(row: IDataRow) {\n    const c = this._children;\n    switch (c.length) {\n      case 0:\n        return DEFAULT_COLOR;\n      case 1:\n        return c[0].getColor(row);\n      default:\n        return this.rest[0].getColor(row);\n    }\n  }\n\n  getNumberFormat() {\n    const w = this.wrapper;\n    return w ? w.getNumberFormat() : DEFAULT_FORMATTER;\n  }\n\n  getValue(row: IDataRow) {\n    const w = this.wrapper;\n    return w ? w.getValue(row) : NaN;\n  }\n\n  getNumber(row: IDataRow) {\n    const w = this.wrapper;\n    return w ? w.getNumber(row) : NaN;\n  }\n\n  getRawNumber(row: IDataRow) {\n    const w = this.wrapper;\n    return w ? w.getRawNumber(row) : NaN;\n  }\n\n  iterNumber(row: IDataRow) {\n    return [this.getNumber(row)];\n  }\n\n  iterRawNumber(row: IDataRow) {\n    return [this.getRawNumber(row)];\n  }\n\n  getExportValue(row: IDataRow, format: 'text' | 'json'): any {\n    if (format === 'json') {\n      const value = this.getRawNumber(row);\n      if (isNaN(value)) {\n        return null;\n      }\n      return {\n        label: this.getLabel(row),\n        color: this.getColor(row),\n        value\n      };\n    }\n    return super.getExportValue(row, format);\n  }\n\n  getMapping() {\n    const w = this.wrapper;\n    return w && isMapAbleColumn(w) ? w.getMapping() : new ScaleMappingFunction();\n  }\n\n  getOriginalMapping() {\n    const w = this.wrapper;\n    return w && isMapAbleColumn(w) ? w.getOriginalMapping() : new ScaleMappingFunction();\n  }\n\n  setMapping(mapping: IMappingFunction): void {\n    const w = this.wrapper;\n    return w && isMapAbleColumn(w) ? w.setMapping(mapping) : undefined;\n  }\n\n  getColorMapping() {\n    const w = this.wrapper;\n    return w && isMapAbleColumn(w) ? w.getColorMapping() : DEFAULT_COLOR_FUNCTION;\n  }\n\n  setColorMapping(mapping: IColorMappingFunction) {\n    const w = this.wrapper;\n    return w && isMapAbleColumn(w) ? w.setColorMapping(mapping) : undefined;\n  }\n\n  getFilter() {\n    const w = this.wrapper;\n    return w && isMapAbleColumn(w) ? w.getFilter() : noNumberFilter();\n  }\n\n  setFilter(value: INumberFilter | null): void {\n    const w = this.wrapper;\n    return w && isMapAbleColumn(w) ? w.setFilter(value) : undefined;\n  }\n\n  getRange(): [string, string] {\n    const w = this.wrapper;\n    return w && isMapAbleColumn(w) ? w.getRange() : ['0', '1'];\n  }\n\n  toCompareValue(row: IDataRow) {\n    return NumberColumn.prototype.toCompareValue.call(this, row);\n  }\n\n  toCompareValueType() {\n    return NumberColumn.prototype.toCompareValueType.call(this);\n  }\n\n  toCompareGroupValue(rows: ISequence<IDataRow>, group: IGroup) {\n    return NumberColumn.prototype.toCompareGroupValue.call(this, rows, group);\n  }\n\n  toCompareGroupValueType() {\n    return NumberColumn.prototype.toCompareGroupValueType.call(this);\n  }\n\n  insert(col: Column, index: number): Column | null {\n    if (this._children.length === 1 && !this.wrapper && !isNumberColumn(col)) {\n      // at least one has to be a number column\n      return null;\n    }\n    if (this._children.length >= 2) {\n      // limit to two\n      return null;\n    }\n    return super.insert(col, index);\n  }\n\n  protected insertImpl(col: Column, index: number) {\n    if (isNumberColumn(col)) {\n      this.forward(col, ...suffix('.impose', NumberColumn.EVENT_MAPPING_CHANGED));\n    }\n    if (isMapAbleColumn(col)) {\n      this.forward(col, ...suffix('.impose', NumberColumn.EVENT_COLOR_MAPPING_CHANGED));\n    }\n    return super.insertImpl(col, index);\n  }\n\n  protected removeImpl(child: Column, index: number) {\n    if (isNumberColumn(child)) {\n      this.unforward(child, ...suffix('.impose', NumberColumn.EVENT_MAPPING_CHANGED));\n    }\n    if (isMapAbleColumn(child)) {\n      this.unforward(child, ...suffix('.impose', NumberColumn.EVENT_COLOR_MAPPING_CHANGED));\n    }\n    return super.removeImpl(child, index);\n  }\n}\n","import {format} from 'd3-format';\nimport {boxplotBuilder, IAdvancedBoxPlotData, IEventListener} from '../internal';\nimport {dialogAddons, SortByDefault, toolbar} from './annotations';\nimport ArrayColumn, {IArrayColumnDesc} from './ArrayColumn';\nimport Column, {dirty, dirtyCaches, dirtyHeader, dirtyValues, groupRendererChanged, labelChanged, metaDataChanged, rendererTypeChanged, summaryRendererChanged, visibilityChanged, widthChanged} from './Column';\nimport {IArrayDesc} from './IArrayColumn';\nimport {IDataRow, ECompareValueType, ITypeFactory} from './interfaces';\nimport {DEFAULT_FORMATTER, getBoxPlotNumber, isDummyNumberFilter, noNumberFilter, restoreNumberFilter, toCompareBoxPlotValue} from './internalNumber';\nimport {EAdvancedSortMethod, IColorMappingFunction, IMappingFunction, INumberDesc, INumberFilter, INumbersColumn} from './INumberColumn';\nimport {restoreMapping} from './MappingFunction';\nimport {isMissingValue} from './missing';\nimport NumberColumn from './NumberColumn';\nimport ValueColumn, {dataLoaded} from './ValueColumn';\n\n\nexport interface INumbersDesc extends IArrayDesc, INumberDesc {\n  readonly sort?: EAdvancedSortMethod;\n}\n\nexport declare type INumbersColumnDesc = INumbersDesc & IArrayColumnDesc<number>;\n\n/**\n * emitted when the mapping property changes\n * @asMemberOf NumbersColumn\n * @event\n */\nexport declare function mappingChanged_NCS(previous: IMappingFunction, current: IMappingFunction): void;\n/**\n * emitted when the color mapping property changes\n * @asMemberOf NumbersColumn\n * @event\n */\nexport declare function colorMappingChanged_NCS(previous: IColorMappingFunction, current: IColorMappingFunction): void;\n\n/**\n * emitted when the sort method property changes\n * @asMemberOf NumbersColumn\n * @event\n */\nexport declare function sortMethodChanged_NCS(previous: EAdvancedSortMethod, current: EAdvancedSortMethod): void;\n\n/**\n * emitted when the filter property changes\n * @asMemberOf NumbersColumn\n * @event\n */\nexport declare function filterChanged_NCS(previous: INumberFilter | null, current: INumberFilter | null): void;\n\n@toolbar('filterNumber', 'colorMapped', 'editMapping')\n@dialogAddons('sort', 'sortNumbers')\n@SortByDefault('descending')\nexport default class NumbersColumn extends ArrayColumn<number> implements INumbersColumn {\n  static readonly EVENT_MAPPING_CHANGED = NumberColumn.EVENT_MAPPING_CHANGED;\n  static readonly EVENT_COLOR_MAPPING_CHANGED = NumberColumn.EVENT_COLOR_MAPPING_CHANGED;\n  static readonly EVENT_SORTMETHOD_CHANGED = NumberColumn.EVENT_SORTMETHOD_CHANGED;\n  static readonly EVENT_FILTER_CHANGED = NumberColumn.EVENT_FILTER_CHANGED;\n\n  static readonly CENTER = 0;\n\n  private readonly numberFormat: (n: number) => string = DEFAULT_FORMATTER;\n\n  private sort: EAdvancedSortMethod;\n  private mapping: IMappingFunction;\n  private original: IMappingFunction;\n  private colorMapping: IColorMappingFunction;\n  /**\n   * currently active filter\n   * @type {{min: number, max: number}}\n   * @private\n   */\n  private currentFilter: INumberFilter = noNumberFilter();\n\n  constructor(id: string, desc: Readonly<INumbersColumnDesc>, factory: ITypeFactory) {\n    super(id, desc);\n    this.mapping = restoreMapping(desc, factory);\n    this.original = this.mapping.clone();\n    this.colorMapping = factory.colorMappingFunction(desc.colorMapping || desc.color);\n\n    if (desc.numberFormat) {\n      this.numberFormat = format(desc.numberFormat);\n    }\n\n    this.sort = desc.sort || EAdvancedSortMethod.median;\n\n    // better initialize the default with based on the data length\n    if (this.dataLength) {\n      this.setDefaultWidth(Math.min(Math.max(100, this.dataLength! * 10), 500));\n    }\n    this.setDefaultRenderer('heatmap');\n    this.setDefaultGroupRenderer('heatmap');\n    this.setDefaultSummaryRenderer('histogram');\n  }\n\n  getNumberFormat() {\n    return this.numberFormat;\n  }\n\n  toCompareValue(row: IDataRow): number {\n    return toCompareBoxPlotValue(this, row);\n  }\n\n  toCompareValueType() {\n    return ECompareValueType.FLOAT;\n  }\n\n  getRawNumbers(row: IDataRow) {\n    return this.getRawValue(row);\n  }\n\n  getBoxPlotData(row: IDataRow): IAdvancedBoxPlotData | null {\n    const data = this.getRawValue(row);\n    if (data == null) {\n      return null;\n    }\n    const b = boxplotBuilder();\n    for (const d of data) {\n      b.push(isMissingValue(d) ? NaN : this.mapping.apply(d));\n    }\n    return b.build();\n  }\n\n  getRange() {\n    return this.mapping.getRange(this.numberFormat);\n  }\n\n  getRawBoxPlotData(row: IDataRow): IAdvancedBoxPlotData | null {\n    const data = this.getRawValue(row);\n    if (data == null) {\n      return null;\n    }\n    const b = boxplotBuilder();\n    for (const d of data) {\n      b.push(isMissingValue(d) ? NaN : d);\n    }\n    return b.build();\n  }\n\n  getNumbers(row: IDataRow) {\n    return this.getValues(row);\n  }\n\n  getNumber(row: IDataRow): number {\n    return getBoxPlotNumber(this, row, 'normalized');\n  }\n\n  getRawNumber(row: IDataRow): number {\n    return getBoxPlotNumber(this, row, 'raw');\n  }\n\n  getValue(row: IDataRow) {\n    const v = this.getValues(row);\n    return v.every(isNaN) ? null : v;\n  }\n\n  getValues(row: IDataRow) {\n    return this.getRawValue(row).map((d) => isNaN(d) ? NaN : this.mapping.apply(d));\n  }\n\n  iterNumber(row: IDataRow) {\n    return this.getNumbers(row);\n  }\n\n  iterRawNumber(row: IDataRow) {\n    return this.getRawNumbers(row);\n  }\n\n  getRawValue(row: IDataRow) {\n    const r = super.getRaw(row);\n    return r == null ? [] : r.map((d) => isMissingValue(d) ? NaN : +d);\n  }\n\n  getExportValue(row: IDataRow, format: 'text' | 'json'): any {\n    return format === 'json' ? this.getRawValue(row) : super.getExportValue(row, format);\n  }\n\n  getLabels(row: IDataRow) {\n    return this.getValues(row).map(this.numberFormat);\n  }\n\n  getSortMethod() {\n    return this.sort;\n  }\n\n  setSortMethod(sort: EAdvancedSortMethod) {\n    if (this.sort === sort) {\n      return;\n    }\n    this.fire([NumbersColumn.EVENT_SORTMETHOD_CHANGED, NumberColumn.EVENT_DIRTY_HEADER, NumberColumn.EVENT_DIRTY_VALUES, NumbersColumn.EVENT_DIRTY_CACHES, NumberColumn.EVENT_DIRTY], this.sort, this.sort = sort);\n    // sort by me if not already sorted by me\n    if (!this.isSortedByMe().asc) {\n      this.sortByMe();\n    }\n  }\n\n  dump(toDescRef: (desc: any) => any): any {\n    const r = super.dump(toDescRef);\n    r.sortMethod = this.getSortMethod();\n    r.filter = !isDummyNumberFilter(this.currentFilter) ? this.currentFilter : null;\n    r.map = this.mapping.toJSON();\n    r.colorMapping = this.colorMapping.toJSON();\n    return r;\n  }\n\n  restore(dump: any, factory: ITypeFactory) {\n    super.restore(dump, factory);\n    if (dump.sortMethod) {\n      this.sort = dump.sortMethod;\n    }\n    if (dump.filter) {\n      this.currentFilter = restoreNumberFilter(dump.filter);\n    }\n    if (dump.map || dump.domain) {\n      this.mapping = restoreMapping(dump, factory);\n    }\n    if (dump.colorMapping) {\n      this.colorMapping = factory.colorMappingFunction(dump.colorMapping);\n    }\n  }\n\n  protected createEventList() {\n    return super.createEventList().concat([NumbersColumn.EVENT_COLOR_MAPPING_CHANGED, NumbersColumn.EVENT_MAPPING_CHANGED, NumbersColumn.EVENT_SORTMETHOD_CHANGED, NumbersColumn.EVENT_FILTER_CHANGED]);\n  }\n\n  on(type: typeof NumbersColumn.EVENT_COLOR_MAPPING_CHANGED, listener: typeof colorMappingChanged_NCS | null): this;\n  on(type: typeof NumbersColumn.EVENT_MAPPING_CHANGED, listener: typeof mappingChanged_NCS | null): this;\n  on(type: typeof NumbersColumn.EVENT_SORTMETHOD_CHANGED, listener: typeof sortMethodChanged_NCS | null): this;\n  on(type: typeof NumbersColumn.EVENT_FILTER_CHANGED, listener: typeof filterChanged_NCS | null): this;\n  on(type: typeof ValueColumn.EVENT_DATA_LOADED, listener: typeof dataLoaded | null): this;\n  on(type: typeof Column.EVENT_WIDTH_CHANGED, listener: typeof widthChanged | null): this;\n  on(type: typeof Column.EVENT_LABEL_CHANGED, listener: typeof labelChanged | null): this;\n  on(type: typeof Column.EVENT_METADATA_CHANGED, listener: typeof metaDataChanged | null): this;\n  on(type: typeof Column.EVENT_DIRTY, listener: typeof dirty | null): this;\n  on(type: typeof Column.EVENT_DIRTY_HEADER, listener: typeof dirtyHeader | null): this;\n  on(type: typeof Column.EVENT_DIRTY_VALUES, listener: typeof dirtyValues | null): this;\n  on(type: typeof Column.EVENT_DIRTY_CACHES, listener: typeof dirtyCaches | null): this;\n  on(type: typeof Column.EVENT_RENDERER_TYPE_CHANGED, listener: typeof rendererTypeChanged | null): this;\n  on(type: typeof Column.EVENT_GROUP_RENDERER_TYPE_CHANGED, listener: typeof groupRendererChanged | null): this;\n  on(type: typeof Column.EVENT_SUMMARY_RENDERER_TYPE_CHANGED, listener: typeof summaryRendererChanged | null): this;\n  on(type: typeof Column.EVENT_VISIBILITY_CHANGED, listener: typeof visibilityChanged | null): this;\n  on(type: string | string[], listener: IEventListener | null): this; // required for correct typings in *.d.ts\n  on(type: string | string[], listener: IEventListener | null): this {\n    return super.on(<any>type, listener);\n  }\n\n  getOriginalMapping() {\n    return this.original.clone();\n  }\n\n  getMapping() {\n    return this.mapping.clone();\n  }\n\n  setMapping(mapping: IMappingFunction) {\n    if (this.mapping.eq(mapping)) {\n      return;\n    }\n    this.fire([NumbersColumn.EVENT_MAPPING_CHANGED, Column.EVENT_DIRTY_HEADER, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY_CACHES, Column.EVENT_DIRTY], this.mapping.clone(), this.mapping = mapping);\n  }\n\n  getColor(row: IDataRow) {\n    return NumberColumn.prototype.getColor.call(this, row);\n  }\n\n  getColorMapping() {\n    return this.colorMapping.clone();\n  }\n\n  setColorMapping(mapping: IColorMappingFunction) {\n    if (this.colorMapping.eq(mapping)) {\n      return;\n    }\n    this.fire([NumbersColumn.EVENT_COLOR_MAPPING_CHANGED, Column.EVENT_DIRTY_HEADER, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY_CACHES, Column.EVENT_DIRTY], this.colorMapping.clone(), this.colorMapping = mapping);\n  }\n\n  isFiltered() {\n    return NumberColumn.prototype.isFiltered.call(this);\n  }\n\n  getFilter(): INumberFilter {\n    return NumberColumn.prototype.getFilter.call(this);\n  }\n\n  setFilter(value: INumberFilter | null) {\n    NumberColumn.prototype.setFilter.call(this, value);\n  }\n\n  filter(row: IDataRow) {\n    return NumberColumn.prototype.filter.call(this, row);\n  }\n\n  clearFilter() {\n    return NumberColumn.prototype.clearFilter.call(this);\n  }\n}\n\n","import {IBoxPlotData} from '../internal';\nimport {suffix, ISequence, IEventListener} from '../internal';\nimport {toolbar, SortByDefault, dialogAddons} from './annotations';\nimport BoxPlotColumn from './BoxPlotColumn';\nimport Column, {widthChanged, labelChanged, metaDataChanged, dirty, dirtyHeader, dirtyValues, rendererTypeChanged, groupRendererChanged, summaryRendererChanged, visibilityChanged, dirtyCaches} from './Column';\nimport CompositeColumn, {addColumn, filterChanged, moveColumn, removeColumn} from './CompositeColumn';\nimport {IDataRow, IGroup, IColumnDesc, DEFAULT_COLOR} from './interfaces';\nimport {ESortMethod, IBoxPlotColumn, INumberFilter, isBoxPlotColumn, IMappingFunction, IColorMappingFunction, isMapAbleColumn} from './INumberColumn';\nimport {ScaleMappingFunction} from './MappingFunction';\nimport NumbersColumn from './NumbersColumn';\nimport {DEFAULT_COLOR_FUNCTION} from './ColorMappingFunction';\nimport {DEFAULT_FORMATTER, noNumberFilter} from './internalNumber';\n\n\n/**\n *  factory for creating a description creating a max column\n * @param label\n * @returns {{type: string, label: string}}\n */\nexport function createImpositionBoxPlotDesc(label: string = 'Imposition') {\n  return {type: 'impositions', label};\n}\n\n/**\n * emitted when the mapping property changes\n * @asMemberOf ImpositionBoxPlotColumn\n * @event\n */\nexport declare function mappingChanged_IPBC(previous: IMappingFunction, current: IMappingFunction): void;\n\n/**\n * emitted when the color mapping property changes\n * @asMemberOf ImpositionBoxPlotColumn\n * @event\n */\nexport declare function colorMappingChanged_IPBC(previous: IColorMappingFunction, current: IColorMappingFunction): void;\n\n\n/**\n * implementation of a combine column, standard operations how to select\n */\n@toolbar('filterNumber', 'colorMapped', 'editMapping')\n@dialogAddons('sort', 'sortBoxPlot')\n@SortByDefault('descending')\nexport default class ImpositionBoxPlotColumn extends CompositeColumn implements IBoxPlotColumn {\n  static readonly EVENT_MAPPING_CHANGED = NumbersColumn.EVENT_MAPPING_CHANGED;\n  static readonly EVENT_COLOR_MAPPING_CHANGED = NumbersColumn.EVENT_COLOR_MAPPING_CHANGED;\n\n  constructor(id: string, desc: Readonly<IColumnDesc>) {\n    super(id, desc);\n\n    this.setDefaultRenderer('boxplot');\n    this.setDefaultGroupRenderer('boxplot');\n    this.setDefaultSummaryRenderer('boxplot');\n  }\n\n  get label() {\n    const l = super.getMetaData().label;\n    const c = this._children;\n    if (l !== 'Imposition' || c.length === 0) {\n      return l;\n    }\n    if (c.length === 1) {\n      return c[0].label;\n    }\n    const w = this.wrapper;\n    const rest = this.rest;\n    return `${w ? w.label : '?'} (${rest.map((c) => c.label).join(', ')})`;\n  }\n\n  private get wrapper(): IBoxPlotColumn | null {\n    return <IBoxPlotColumn>this._children.find(isBoxPlotColumn) || null;\n  }\n\n  private get rest() {\n    const w = this.wrapper;\n    return this._children.filter((d) => d !== w);\n  }\n\n  getLabel(row: IDataRow) {\n    const c = this._children;\n    if (c.length === 0) {\n      return '';\n    }\n    if (c.length === 1) {\n      return c[0].getLabel(row);\n    }\n    const w = this.wrapper;\n    const rest = this.rest;\n    return `${w ? w.getLabel(row) : '?'} (${rest.map((c) => `${c.label} = ${c.getLabel(row)}`)})`;\n  }\n\n  getColor(row: IDataRow) {\n    const c = this._children;\n    switch (c.length) {\n      case 0:\n        return DEFAULT_COLOR;\n      case 1:\n        return c[0].getColor(row);\n      default:\n        return this.rest[0].getColor(row);\n    }\n  }\n\n  protected createEventList() {\n    return super.createEventList().concat([ImpositionBoxPlotColumn.EVENT_MAPPING_CHANGED, ImpositionBoxPlotColumn.EVENT_COLOR_MAPPING_CHANGED]);\n  }\n\n  on(type: typeof ImpositionBoxPlotColumn.EVENT_COLOR_MAPPING_CHANGED, listener: typeof colorMappingChanged_IPBC | null): this;\n  on(type: typeof ImpositionBoxPlotColumn.EVENT_MAPPING_CHANGED, listener: typeof mappingChanged_IPBC | null): this;\n  on(type: typeof CompositeColumn.EVENT_FILTER_CHANGED, listener: typeof filterChanged | null): this;\n  on(type: typeof CompositeColumn.EVENT_ADD_COLUMN, listener: typeof addColumn | null): this;\n  on(type: typeof CompositeColumn.EVENT_MOVE_COLUMN, listener: typeof moveColumn | null): this;\n  on(type: typeof CompositeColumn.EVENT_REMOVE_COLUMN, listener: typeof removeColumn | null): this;\n  on(type: typeof Column.EVENT_WIDTH_CHANGED, listener: typeof widthChanged | null): this;\n  on(type: typeof Column.EVENT_LABEL_CHANGED, listener: typeof labelChanged | null): this;\n  on(type: typeof Column.EVENT_METADATA_CHANGED, listener: typeof metaDataChanged | null): this;\n  on(type: typeof Column.EVENT_DIRTY, listener: typeof dirty | null): this;\n  on(type: typeof Column.EVENT_DIRTY_HEADER, listener: typeof dirtyHeader | null): this;\n  on(type: typeof Column.EVENT_DIRTY_VALUES, listener: typeof dirtyValues | null): this;\n  on(type: typeof Column.EVENT_DIRTY_CACHES, listener: typeof dirtyCaches | null): this;\n  on(type: typeof Column.EVENT_RENDERER_TYPE_CHANGED, listener: typeof rendererTypeChanged | null): this;\n  on(type: typeof Column.EVENT_GROUP_RENDERER_TYPE_CHANGED, listener: typeof groupRendererChanged | null): this;\n  on(type: typeof Column.EVENT_SUMMARY_RENDERER_TYPE_CHANGED, listener: typeof summaryRendererChanged | null): this;\n  on(type: typeof Column.EVENT_VISIBILITY_CHANGED, listener: typeof visibilityChanged | null): this;\n  on(type: string | string[], listener: IEventListener | null): this; // required for correct typings in *.d.ts\n  on(type: string | string[], listener: IEventListener | null): this {\n    return super.on(type, listener);\n  }\n\n  getNumberFormat() {\n    const w = this.wrapper;\n    return w ? w.getNumberFormat() : DEFAULT_FORMATTER;\n  }\n\n  getValue(row: IDataRow) {\n    const w = this.wrapper;\n    return w ? w.getValue(row) : null;\n  }\n\n  getNumber(row: IDataRow) {\n    const w = this.wrapper;\n    return w ? w.getNumber(row) : NaN;\n  }\n\n  getRawNumber(row: IDataRow) {\n    const w = this.wrapper;\n    return w ? w.getRawNumber(row) : NaN;\n  }\n\n  iterNumber(row: IDataRow) {\n    return [this.getNumber(row)];\n  }\n\n  iterRawNumber(row: IDataRow) {\n    return [this.getRawNumber(row)];\n  }\n\n  getExportValue(row: IDataRow, format: 'text' | 'json'): any {\n    if (format === 'json') {\n      const value = this.getRawNumber(row);\n      if (isNaN(value)) {\n        return null;\n      }\n      return {\n        label: this.getLabel(row),\n        color: this.getColor(row),\n        value\n      };\n    }\n    return super.getExportValue(row, format);\n  }\n\n  getBoxPlotData(row: IDataRow): IBoxPlotData | null {\n    const w = this.wrapper;\n    return w ? w.getBoxPlotData(row) : null;\n  }\n\n  getRawBoxPlotData(row: IDataRow): IBoxPlotData | null {\n    const w = this.wrapper;\n    return w ? w.getRawBoxPlotData(row) : null;\n  }\n\n  getMapping() {\n    const w = this.wrapper;\n    return w ? w.getMapping() : new ScaleMappingFunction();\n  }\n\n  getOriginalMapping() {\n    const w = this.wrapper;\n    return w ? w.getOriginalMapping() : new ScaleMappingFunction();\n  }\n\n  getSortMethod() {\n    const w = this.wrapper;\n    return w ? w.getSortMethod() : ESortMethod.min;\n  }\n\n  setSortMethod(value: ESortMethod) {\n    const w = this.wrapper;\n    return w ? w.setSortMethod(value) : undefined;\n  }\n\n  setMapping(mapping: IMappingFunction): void {\n    const w = this.wrapper;\n    return w ? w.setMapping(mapping) : undefined;\n  }\n\n  getColorMapping() {\n    const w = this.wrapper;\n    return w ? w.getColorMapping() : DEFAULT_COLOR_FUNCTION;\n  }\n\n  setColorMapping(mapping: IColorMappingFunction) {\n    const w = this.wrapper;\n    return w ? w.setColorMapping(mapping) : undefined;\n  }\n\n  getFilter() {\n    const w = this.wrapper;\n    return w ? w.getFilter() : noNumberFilter();\n  }\n\n  setFilter(value: INumberFilter | null): void {\n    const w = this.wrapper;\n    return w ? w.setFilter(value) : undefined;\n  }\n\n  getRange(): [string, string] {\n    const w = this.wrapper;\n    return w ? w.getRange() : ['0', '1'];\n  }\n\n  toCompareValue(row: IDataRow) {\n    return BoxPlotColumn.prototype.toCompareValue.call(this, row);\n  }\n\n  toCompareValueType() {\n    return BoxPlotColumn.prototype.toCompareValueType.call(this);\n  }\n\n  group(row: IDataRow) {\n    return BoxPlotColumn.prototype.group.call(this, row);\n  }\n\n  toCompareGroupValue(rows: ISequence<IDataRow>, group: IGroup) {\n    return BoxPlotColumn.prototype.toCompareGroupValue.call(this, rows, group);\n  }\n\n  toCompareGroupValueType() {\n    return BoxPlotColumn.prototype.toCompareGroupValueType.call(this);\n  }\n\n  insert(col: Column, index: number): Column | null {\n    if (this._children.length === 1 && !this.wrapper && !isBoxPlotColumn(col)) {\n      // at least one has to be a number column\n      return null;\n    }\n    if (this._children.length >= 2) {\n      // limit to two\n      return null;\n    }\n    return super.insert(col, index);\n  }\n\n  protected insertImpl(col: Column, index: number) {\n    if (isBoxPlotColumn(col)) {\n      this.forward(col, ...suffix('.impose', BoxPlotColumn.EVENT_MAPPING_CHANGED, BoxPlotColumn.EVENT_COLOR_MAPPING_CHANGED));\n    } else if (isMapAbleColumn(col)) {\n      this.forward(col, ...suffix('.impose', BoxPlotColumn.EVENT_COLOR_MAPPING_CHANGED));\n    }\n    return super.insertImpl(col, index);\n  }\n\n  protected removeImpl(child: Column, index: number) {\n    if (isBoxPlotColumn(child)) {\n      this.unforward(child, ...suffix('.impose', BoxPlotColumn.EVENT_MAPPING_CHANGED, BoxPlotColumn.EVENT_COLOR_MAPPING_CHANGED));\n    } else if (isMapAbleColumn(child)) {\n      this.unforward(child, ...suffix('.impose', BoxPlotColumn.EVENT_COLOR_MAPPING_CHANGED));\n    }\n    return super.removeImpl(child, index);\n  }\n}\n","import {suffix, IEventListener, IAdvancedBoxPlotData} from '../internal';\nimport {toolbar, dialogAddons, SortByDefault} from './annotations';\nimport Column, {widthChanged, labelChanged, metaDataChanged, dirty, dirtyHeader, dirtyValues, rendererTypeChanged, groupRendererChanged, summaryRendererChanged, visibilityChanged, dirtyCaches} from './Column';\nimport CompositeColumn, {addColumn, filterChanged, moveColumn, removeColumn} from './CompositeColumn';\nimport {IKeyValue} from './IArrayColumn';\nimport {IDataRow, IGroup, IColumnDesc, DEFAULT_COLOR} from './interfaces';\nimport {EAdvancedSortMethod, INumberFilter, INumbersColumn, isNumbersColumn, IMappingFunction, IColorMappingFunction, isMapAbleColumn} from './INumberColumn';\nimport {ScaleMappingFunction} from './MappingFunction';\nimport NumbersColumn from './NumbersColumn';\nimport {DEFAULT_COLOR_FUNCTION} from './ColorMappingFunction';\nimport {DEFAULT_FORMATTER, noNumberFilter} from './internalNumber';\n\n\n/**\n *  factory for creating a description creating a max column\n * @param label\n * @returns {{type: string, label: string}}\n */\nexport function createImpositionsDesc(label: string = 'Imposition') {\n  return {type: 'impositions', label};\n}\n\n/**\n * emitted when the mapping property changes\n * @asMemberOf ImpositionCompositesColumn\n * @event\n */\nexport declare function mappingChanged_ICCS(previous: IMappingFunction, current: IMappingFunction): void;\n\n/**\n * emitted when the color mapping property changes\n * @asMemberOf ImpositionCompositesColumn\n * @event\n */\nexport declare function colorMappingChanged_ICCS(previous: IColorMappingFunction, current: IColorMappingFunction): void;\n\n/**\n * implementation of a combine column, standard operations how to select\n */\n@toolbar('filterNumber', 'colorMapped', 'editMapping')\n@dialogAddons('sort', 'sortNumbers')\n@SortByDefault('descending')\nexport default class ImpositionCompositesColumn extends CompositeColumn implements INumbersColumn {\n  static readonly EVENT_MAPPING_CHANGED = NumbersColumn.EVENT_MAPPING_CHANGED;\n  static readonly EVENT_COLOR_MAPPING_CHANGED = NumbersColumn.EVENT_COLOR_MAPPING_CHANGED;\n\n  constructor(id: string, desc: Readonly<IColumnDesc>) {\n    super(id, desc);\n\n    this.setDefaultRenderer('numbers');\n    this.setDefaultGroupRenderer('numbers');\n    this.setDefaultSummaryRenderer('histogram');\n  }\n\n  get label() {\n    const l = super.getMetaData().label;\n    const c = this._children;\n    if (l !== 'Imposition' || c.length === 0) {\n      return l;\n    }\n    if (c.length === 1) {\n      return c[0].label;\n    }\n    const w = this.wrapper;\n    const rest = this.rest;\n    return `${w ? w.label : '?'} (${rest.map((c) => c.label).join(', ')})`;\n  }\n\n  private get wrapper(): INumbersColumn | null {\n    return <INumbersColumn>this._children.find(isNumbersColumn) || null;\n  }\n\n  private get rest() {\n    const w = this.wrapper;\n    return this._children.filter((d) => d !== w);\n  }\n\n  getLabel(row: IDataRow) {\n    const c = this._children;\n    if (c.length === 0) {\n      return '';\n    }\n    if (c.length === 1) {\n      return c[0].getLabel(row);\n    }\n    const w = this.wrapper;\n    const rest = this.rest;\n    return `${w ? w.getLabel(row) : '?'} (${rest.map((c) => `${c.label} = ${c.getLabel(row)}`)})`;\n  }\n\n  getColor(row: IDataRow) {\n    const c = this._children;\n    switch (c.length) {\n      case 0:\n        return DEFAULT_COLOR;\n      case 1:\n        return c[0].getColor(row);\n      default:\n        return this.rest[0].getColor(row);\n    }\n  }\n\n  protected createEventList() {\n    return super.createEventList().concat([ImpositionCompositesColumn.EVENT_MAPPING_CHANGED, ImpositionCompositesColumn.EVENT_COLOR_MAPPING_CHANGED]);\n  }\n\n  on(type: typeof ImpositionCompositesColumn.EVENT_COLOR_MAPPING_CHANGED, listener: typeof colorMappingChanged_ICCS | null): this;\n  on(type: typeof ImpositionCompositesColumn.EVENT_MAPPING_CHANGED, listener: typeof mappingChanged_ICCS | null): this;\n  on(type: typeof CompositeColumn.EVENT_FILTER_CHANGED, listener: typeof filterChanged | null): this;\n  on(type: typeof CompositeColumn.EVENT_ADD_COLUMN, listener: typeof addColumn | null): this;\n  on(type: typeof CompositeColumn.EVENT_MOVE_COLUMN, listener: typeof moveColumn | null): this;\n  on(type: typeof CompositeColumn.EVENT_REMOVE_COLUMN, listener: typeof removeColumn | null): this;\n  on(type: typeof Column.EVENT_WIDTH_CHANGED, listener: typeof widthChanged | null): this;\n  on(type: typeof Column.EVENT_LABEL_CHANGED, listener: typeof labelChanged | null): this;\n  on(type: typeof Column.EVENT_METADATA_CHANGED, listener: typeof metaDataChanged | null): this;\n  on(type: typeof Column.EVENT_DIRTY, listener: typeof dirty | null): this;\n  on(type: typeof Column.EVENT_DIRTY_HEADER, listener: typeof dirtyHeader | null): this;\n  on(type: typeof Column.EVENT_DIRTY_VALUES, listener: typeof dirtyValues | null): this;\n  on(type: typeof Column.EVENT_DIRTY_CACHES, listener: typeof dirtyCaches | null): this;\n  on(type: typeof Column.EVENT_RENDERER_TYPE_CHANGED, listener: typeof rendererTypeChanged | null): this;\n  on(type: typeof Column.EVENT_GROUP_RENDERER_TYPE_CHANGED, listener: typeof groupRendererChanged | null): this;\n  on(type: typeof Column.EVENT_SUMMARY_RENDERER_TYPE_CHANGED, listener: typeof summaryRendererChanged | null): this;\n  on(type: typeof Column.EVENT_VISIBILITY_CHANGED, listener: typeof visibilityChanged | null): this;\n  on(type: string | string[], listener: IEventListener | null): this; // required for correct typings in *.d.ts\n  on(type: string | string[], listener: IEventListener | null): this {\n    return super.on(type, listener);\n  }\n\n  get labels() {\n    const w = this.wrapper;\n    return w ? w.labels : [];\n  }\n\n  get dataLength() {\n    const w = this.wrapper;\n    return w ? w.dataLength : null;\n  }\n\n  getNumberFormat() {\n    const w = this.wrapper;\n    return w ? w.getNumberFormat() : DEFAULT_FORMATTER;\n  }\n\n  getValue(row: IDataRow) {\n    const w = this.wrapper;\n    return w ? w.getValue(row) : [];\n  }\n\n  getNumber(row: IDataRow) {\n    const w = this.wrapper;\n    return w ? w.getNumber(row) : NaN;\n  }\n\n  getRawNumber(row: IDataRow) {\n    const w = this.wrapper;\n    return w ? w.getRawNumber(row) : NaN;\n  }\n\n  getExportValue(row: IDataRow, format: 'text' | 'json'): any {\n    if (format === 'json') {\n      const value = this.getRawNumber(row);\n      if (isNaN(value)) {\n        return null;\n      }\n      return {\n        label: this.getLabels(row),\n        color: this.getColor(row)\n      };\n    }\n    return super.getExportValue(row, format);\n  }\n\n  getNumbers(row: IDataRow) {\n    const w = this.wrapper;\n    return w ? w.getNumbers(row) : [];\n  }\n\n  getRawNumbers(row: IDataRow) {\n    const w = this.wrapper;\n    return w ? w.getRawNumbers(row) : [];\n  }\n\n  iterNumber(row: IDataRow) {\n    return this.getNumbers(row);\n  }\n\n  iterRawNumber(row: IDataRow) {\n    return this.getRawNumbers(row);\n  }\n\n  getBoxPlotData(row: IDataRow): IAdvancedBoxPlotData | null {\n    const w = this.wrapper;\n    return w ? w.getBoxPlotData(row) : null;\n  }\n\n  getRawBoxPlotData(row: IDataRow): IAdvancedBoxPlotData | null {\n    const w = this.wrapper;\n    return w ? w.getRawBoxPlotData(row) : null;\n  }\n\n  getMapping() {\n    const w = this.wrapper;\n    return w ? w.getMapping() : new ScaleMappingFunction();\n  }\n\n  getOriginalMapping() {\n    const w = this.wrapper;\n    return w ? w.getOriginalMapping() : new ScaleMappingFunction();\n  }\n\n  getSortMethod() {\n    const w = this.wrapper;\n    return w ? w.getSortMethod() : EAdvancedSortMethod.min;\n  }\n\n  setSortMethod(value: EAdvancedSortMethod) {\n    const w = this.wrapper;\n    return w ? w.setSortMethod(value) : undefined;\n  }\n\n  setMapping(mapping: IMappingFunction): void {\n    const w = this.wrapper;\n    return w ? w.setMapping(mapping) : undefined;\n  }\n\n  getColorMapping() {\n    const w = this.wrapper;\n    return w ? w.getColorMapping() : DEFAULT_COLOR_FUNCTION;\n  }\n\n  setColorMapping(mapping: IColorMappingFunction) {\n    const w = this.wrapper;\n    return w ? w.setColorMapping(mapping) : undefined;\n  }\n\n  getFilter() {\n    const w = this.wrapper;\n    return w ? w.getFilter() : noNumberFilter();\n  }\n\n  setFilter(value: INumberFilter | null): void {\n    const w = this.wrapper;\n    return w ? w.setFilter(value) : undefined;\n  }\n\n  getRange(): [string, string] {\n    const w = this.wrapper;\n    return w ? w.getRange() : ['0', '1'];\n  }\n\n  getMap(row: IDataRow): IKeyValue<number>[] {\n    const w = this.wrapper;\n    return w ? w.getMap(row) : [];\n  }\n\n  getMapLabel(row: IDataRow) {\n    const w = this.wrapper;\n    return w ? w.getMapLabel(row) : [];\n  }\n\n  getLabels(row: IDataRow): string[] {\n    const w = this.wrapper;\n    return w ? w.getLabels(row) : [];\n  }\n\n  getValues(row: IDataRow) {\n    const w = this.wrapper;\n    return w ? w.getValues(row) : [];\n  }\n\n  toCompareValue(row: IDataRow) {\n    return NumbersColumn.prototype.toCompareValue.call(this, row);\n  }\n\n  toCompareValueType() {\n    return NumbersColumn.prototype.toCompareValueType.call(this);\n  }\n\n  toCompareGroupValue(rows: IDataRow[], group: IGroup) {\n    return NumbersColumn.prototype.toCompareGroupValue.call(this, rows, group);\n  }\n\n  toCompareGroupValueType() {\n    return NumbersColumn.prototype.toCompareGroupValueType.call(this);\n  }\n\n  insert(col: Column, index: number): Column | null {\n    if (this._children.length === 1 && !this.wrapper && !isNumbersColumn(col)) {\n      // at least one has to be a number column\n      return null;\n    }\n    if (this._children.length >= 2) {\n      // limit to two\n      return null;\n    }\n    return super.insert(col, index);\n  }\n\n  protected insertImpl(col: Column, index: number) {\n    if (isNumbersColumn(col)) {\n      this.forward(col, ...suffix('.impose', NumbersColumn.EVENT_MAPPING_CHANGED));\n    }\n    if (isMapAbleColumn(col)) {\n      this.forward(col, ...suffix('.impose', NumbersColumn.EVENT_COLOR_MAPPING_CHANGED));\n    }\n    return super.insertImpl(col, index);\n  }\n\n  protected removeImpl(child: Column, index: number) {\n    if (isNumbersColumn(child)) {\n      this.unforward(child, ...suffix('.impose', NumbersColumn.EVENT_MAPPING_CHANGED));\n    }\n    if (isMapAbleColumn(child)) {\n      this.unforward(child, ...suffix('.impose', NumbersColumn.EVENT_COLOR_MAPPING_CHANGED));\n    }\n    return super.removeImpl(child, index);\n  }\n}\n","import {format} from 'd3-format';\nimport CompositeColumn from './CompositeColumn';\nimport {IDataRow, IGroup, IColumnDesc} from './interfaces';\nimport {isMissingValue} from './missing';\nimport NumberColumn from './NumberColumn';\nimport {SortByDefault} from './annotations';\nimport {ISequence} from '../internal';\nimport {INumberColumn} from './INumberColumn';\n\nexport interface ICompositeNumberDesc extends IColumnDesc {\n  /**\n   * d3 format number Format\n   * @default 0.3n\n   */\n  numberFormat?: string;\n}\n\nexport declare type ICompositeNumberColumnDesc = ICompositeNumberDesc & IColumnDesc;\n\n/**\n * implementation of a combine column, standard operations how to select\n */\n@SortByDefault('descending')\nexport default class CompositeNumberColumn extends CompositeColumn implements INumberColumn {\n  private readonly numberFormat: (n: number) => string = format('.3n');\n\n  constructor(id: string, desc: Readonly<ICompositeNumberColumnDesc>) {\n    super(id, desc);\n\n    if (desc.numberFormat) {\n      this.numberFormat = format(desc.numberFormat);\n    }\n  }\n\n  getNumberFormat() {\n    return this.numberFormat;\n  }\n\n  getLabel(row: IDataRow) {\n    if (!this.isLoaded()) {\n      return '';\n    }\n    const v = this.getValue(row);\n    //keep non number if it is not a number else convert using formatter\n    return String(typeof v === 'number' && !isNaN(v) && isFinite(v) ? this.numberFormat(v) : v);\n  }\n\n  getValue(row: IDataRow) {\n    if (!this.isLoaded()) {\n      return null;\n    }\n    //weighted sum\n    const v = this.compute(row);\n    if (isMissingValue(v)) {\n      return null;\n    }\n    return v;\n  }\n\n  protected compute(_row: IDataRow) {\n    return NaN;\n  }\n\n  getNumber(row: IDataRow) {\n    const r = this.getValue(row);\n    return r == null ? NaN : r;\n  }\n\n  getRawNumber(row: IDataRow) {\n    return this.getNumber(row);\n  }\n\n  iterNumber(row: IDataRow) {\n    return [this.getNumber(row)];\n  }\n\n  iterRawNumber(row: IDataRow) {\n    return [this.getRawNumber(row)];\n  }\n\n  getExportValue(row: IDataRow, format: 'text' | 'json'): any {\n    if (format === 'json') {\n      return {\n        value: this.getRawNumber(row),\n        children: this.children.map((d) => d.getExportValue(row, format))\n      };\n    }\n    return super.getExportValue(row, format);\n  }\n\n  toCompareValue(row: IDataRow) {\n    return NumberColumn.prototype.toCompareValue.call(this, row);\n  }\n\n  toCompareValueType() {\n    return NumberColumn.prototype.toCompareValueType.call(this);\n  }\n\n  toCompareGroupValue(rows: ISequence<IDataRow>, group: IGroup) {\n    return NumberColumn.prototype.toCompareGroupValue.call(this, rows, group);\n  }\n\n  toCompareGroupValueType() {\n    return NumberColumn.prototype.toCompareGroupValueType.call(this);\n  }\n\n  getRenderer(): string {\n    return NumberColumn.prototype.getRenderer.call(this);\n  }\n}\n","import {median, quantile, IEventListener} from '../internal';\nimport {toolbar} from './annotations';\nimport Column, {widthChanged, labelChanged, metaDataChanged, dirty, dirtyHeader, dirtyValues, rendererTypeChanged, groupRendererChanged, summaryRendererChanged, visibilityChanged, dirtyCaches} from './Column';\nimport CompositeColumn, {addColumn, filterChanged, moveColumn, removeColumn} from './CompositeColumn';\nimport CompositeNumberColumn, {ICompositeNumberColumnDesc} from './CompositeNumberColumn';\nimport {IDataRow, DEFAULT_COLOR, ITypeFactory} from './interfaces';\nimport {EAdvancedSortMethod} from './INumberColumn';\n\n/**\n *  factory for creating a description creating a max column\n * @param label\n * @returns {{type: string, label: string}}\n */\nexport function createReduceDesc(label: string = 'Reduce') {\n  return {type: 'reduce', label};\n}\n\nexport interface IReduceDesc {\n  readonly reduce?: EAdvancedSortMethod;\n}\n\n\nexport declare type IReduceColumnDesc = IReduceDesc & ICompositeNumberColumnDesc;\n\n/**\n * emitted when the mapping property changes\n * @asMemberOf ReduceColumn\n * @event\n */\nexport declare function reduceChanged(previous: EAdvancedSortMethod, current: EAdvancedSortMethod): void;\n\n/**\n * combines multiple columns by using the maximal value\n */\n@toolbar('reduce')\nexport default class ReduceColumn extends CompositeNumberColumn {\n  static readonly EVENT_REDUCE_CHANGED = 'reduceChanged';\n\n  private reduce: EAdvancedSortMethod;\n\n  constructor(id: string, desc: Readonly<IReduceColumnDesc>) {\n    super(id, desc);\n    this.reduce = desc.reduce || EAdvancedSortMethod.max;\n    this.setDefaultRenderer('interleaving');\n    this.setDefaultGroupRenderer('interleaving');\n    this.setDefaultSummaryRenderer('interleaving');\n  }\n\n  get label() {\n    const l = super.getMetaData().label;\n    if (l !== 'Reduce') {\n      return l;\n    }\n    return `${this.reduce[0].toUpperCase()}${this.reduce.slice(1)}(${this.children.map((d) => d.label).join(', ')})`;\n  }\n\n  getColor(row: IDataRow) {\n    //compute the index of the maximal one\n    const c = this._children;\n    if (c.length === 0 || this.reduce === EAdvancedSortMethod.q1 || this.reduce === EAdvancedSortMethod.q3 || this.reduce === EAdvancedSortMethod.mean) {\n      return DEFAULT_COLOR;\n    }\n    const v = this.compute(row);\n    const selected = c.find((c) => c.getValue(row) === v);\n    return selected ? selected.getColor(row) : DEFAULT_COLOR;\n  }\n\n  protected compute(row: IDataRow) {\n    const vs = this._children.map((d) => d.getValue(row)).filter((d) => !isNaN(d));\n    if (vs.length === 0) {\n      return NaN;\n    }\n    switch (this.reduce) {\n      case EAdvancedSortMethod.mean:\n        return vs.reduce((a, b) => a + b, 0) / vs.length;\n      case EAdvancedSortMethod.max:\n        return vs.reduce((a, b) => Math.max(a, b), Number.NEGATIVE_INFINITY);\n      case EAdvancedSortMethod.min:\n        return vs.reduce((a, b) => Math.min(a, b), Number.POSITIVE_INFINITY);\n      case EAdvancedSortMethod.median:\n        return median(vs)!;\n      case EAdvancedSortMethod.q1:\n        return quantile(vs.sort((a, b) => a - b), 0.25)!;\n      case EAdvancedSortMethod.q3:\n        return quantile(vs.sort((a, b) => a - b), 0.75)!;\n    }\n  }\n\n  protected createEventList() {\n    return super.createEventList().concat([ReduceColumn.EVENT_REDUCE_CHANGED]);\n  }\n\n  on(type: typeof ReduceColumn.EVENT_REDUCE_CHANGED, listener: typeof reduceChanged | null): this;\n  on(type: typeof CompositeColumn.EVENT_FILTER_CHANGED, listener: typeof filterChanged | null): this;\n  on(type: typeof CompositeColumn.EVENT_ADD_COLUMN, listener: typeof addColumn | null): this;\n  on(type: typeof CompositeColumn.EVENT_MOVE_COLUMN, listener: typeof moveColumn | null): this;\n  on(type: typeof CompositeColumn.EVENT_REMOVE_COLUMN, listener: typeof removeColumn | null): this;\n  on(type: typeof Column.EVENT_WIDTH_CHANGED, listener: typeof widthChanged | null): this;\n  on(type: typeof Column.EVENT_LABEL_CHANGED, listener: typeof labelChanged | null): this;\n  on(type: typeof Column.EVENT_METADATA_CHANGED, listener: typeof metaDataChanged | null): this;\n  on(type: typeof Column.EVENT_DIRTY, listener: typeof dirty | null): this;\n  on(type: typeof Column.EVENT_DIRTY_HEADER, listener: typeof dirtyHeader | null): this;\n  on(type: typeof Column.EVENT_DIRTY_VALUES, listener: typeof dirtyValues | null): this;\n  on(type: typeof Column.EVENT_DIRTY_CACHES, listener: typeof dirtyCaches | null): this;\n  on(type: typeof Column.EVENT_RENDERER_TYPE_CHANGED, listener: typeof rendererTypeChanged | null): this;\n  on(type: typeof Column.EVENT_GROUP_RENDERER_TYPE_CHANGED, listener: typeof groupRendererChanged | null): this;\n  on(type: typeof Column.EVENT_SUMMARY_RENDERER_TYPE_CHANGED, listener: typeof summaryRendererChanged | null): this;\n  on(type: typeof Column.EVENT_VISIBILITY_CHANGED, listener: typeof visibilityChanged | null): this;\n  on(type: string | string[], listener: IEventListener | null): this; // required for correct typings in *.d.ts\n  on(type: string | string[], listener: IEventListener | null): this {\n    return super.on(type, listener);\n  }\n\n  getReduce() {\n    return this.reduce;\n  }\n\n  setReduce(reduce: EAdvancedSortMethod) {\n    if (this.reduce === reduce) {\n      return;\n    }\n    this.fire([ReduceColumn.EVENT_REDUCE_CHANGED, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY_CACHES, Column.EVENT_DIRTY], this.reduce, this.reduce = reduce);\n  }\n\n  dump(toDescRef: (desc: any) => any) {\n    const r = super.dump(toDescRef);\n    r.reduce = this.reduce;\n    return r;\n  }\n\n  restore(dump: any, factory: ITypeFactory) {\n    this.reduce = dump.reduce || this.reduce;\n    super.restore(dump, factory);\n  }\n\n  get canJustAddNumbers() {\n    return true;\n  }\n\n  getExportValue(row: IDataRow, format: 'text' | 'json'): any {\n    if (format === 'json') {\n      return {\n        value: this.getRawNumber(row),\n        children: this.children.map((d) => d.getExportValue(row, format))\n      };\n    }\n    return super.getExportValue(row, format);\n  }\n}\n","import {round, IEventListener, similar} from '../internal';\nimport {toolbar} from './annotations';\nimport Column, {widthChanged, labelChanged, metaDataChanged, dirty, dirtyHeader, dirtyValues, rendererTypeChanged, groupRendererChanged, summaryRendererChanged, visibilityChanged, dirtyCaches} from './Column';\nimport CompositeColumn, {addColumn, filterChanged, moveColumn, removeColumn} from './CompositeColumn';\nimport CompositeNumberColumn, {ICompositeNumberDesc} from './CompositeNumberColumn';\nimport {IDataRow, IFlatColumn, IMultiLevelColumn, ITypeFactory} from './interfaces';\n\n/**\n * factory for creating a description creating a stacked column\n * @param label\n * @returns {{type: string, label: string}}\n */\nexport function createStackDesc(label: string = 'Weighted Sum') {\n  return {type: 'stack', label};\n}\n\n\n/**\n * emitted when the collapse property changes\n * @asMemberOf StackColumn\n * @event\n */\nexport declare function collapseChanged(previous: boolean, current: boolean): void;\n\n\n/**\n * emitted when the weights change\n * @asMemberOf StackColumn\n * @event\n */\nexport declare function weightsChanged(previous: number[], current: number[]): void;\n\n\n/**\n * emitted when the ratios between the children changes\n * @asMemberOf StackColumn\n * @event\n */\nexport declare function nestedChildRatio(previous: number[], current: number[]): void;\n\n/**\n * implementation of the stacked column\n */\n@toolbar('editWeights', 'compress', 'expand')\nexport default class StackColumn extends CompositeNumberColumn implements IMultiLevelColumn {\n  static readonly EVENT_COLLAPSE_CHANGED = 'collapseChanged';\n  static readonly EVENT_WEIGHTS_CHANGED = 'weightsChanged';\n  static readonly EVENT_MULTI_LEVEL_CHANGED = 'nestedChildRatio';\n\n  static readonly COLLAPSED_RENDERER = 'number';\n\n  private readonly adaptChange: (old: number, newValue: number) => void;\n\n  /**\n   * whether this stack column is collapsed i.e. just looks like an ordinary number column\n   * @type {boolean}\n   * @private\n   */\n  private collapsed = false;\n\n  constructor(id: string, desc: ICompositeNumberDesc) {\n    super(id, desc);\n\n    const that = this;\n    this.adaptChange = function (this: {source: Column}, oldValue, newValue) {\n      that.adaptWidthChange(this.source, oldValue, newValue);\n    };\n\n    this.setDefaultRenderer('stack');\n    this.setDefaultGroupRenderer('stack');\n    this.setDefaultSummaryRenderer('default');\n  }\n\n  get label() {\n    const l = super.getMetaData().label;\n    const c = this._children;\n    if (l !== 'Weighted Sum' || c.length === 0) {\n      return l;\n    }\n    const weights = this.getWeights();\n    return c.map((c, i) => `${c.label} (${round(100 * weights[i], 1)}%)`).join(' + ');\n  }\n\n  protected createEventList() {\n    return super.createEventList().concat([StackColumn.EVENT_COLLAPSE_CHANGED, StackColumn.EVENT_WEIGHTS_CHANGED, StackColumn.EVENT_MULTI_LEVEL_CHANGED]);\n  }\n\n  on(type: typeof StackColumn.EVENT_COLLAPSE_CHANGED, listener: typeof collapseChanged | null): this;\n  on(type: typeof StackColumn.EVENT_WEIGHTS_CHANGED, listener: typeof weightsChanged | null): this;\n  on(type: typeof StackColumn.EVENT_MULTI_LEVEL_CHANGED, listener: typeof nestedChildRatio | null): this;\n  on(type: typeof CompositeColumn.EVENT_FILTER_CHANGED, listener: typeof filterChanged | null): this;\n  on(type: typeof CompositeColumn.EVENT_ADD_COLUMN, listener: typeof addColumn | null): this;\n  on(type: typeof CompositeColumn.EVENT_MOVE_COLUMN, listener: typeof moveColumn | null): this;\n  on(type: typeof CompositeColumn.EVENT_REMOVE_COLUMN, listener: typeof removeColumn | null): this;\n  on(type: typeof Column.EVENT_WIDTH_CHANGED, listener: typeof widthChanged | null): this;\n  on(type: typeof Column.EVENT_LABEL_CHANGED, listener: typeof labelChanged | null): this;\n  on(type: typeof Column.EVENT_METADATA_CHANGED, listener: typeof metaDataChanged | null): this;\n  on(type: typeof Column.EVENT_DIRTY, listener: typeof dirty | null): this;\n  on(type: typeof Column.EVENT_DIRTY_HEADER, listener: typeof dirtyHeader | null): this;\n  on(type: typeof Column.EVENT_DIRTY_VALUES, listener: typeof dirtyValues | null): this;\n  on(type: typeof Column.EVENT_DIRTY_CACHES, listener: typeof dirtyCaches | null): this;\n  on(type: typeof Column.EVENT_RENDERER_TYPE_CHANGED, listener: typeof rendererTypeChanged | null): this;\n  on(type: typeof Column.EVENT_GROUP_RENDERER_TYPE_CHANGED, listener: typeof groupRendererChanged | null): this;\n  on(type: typeof Column.EVENT_SUMMARY_RENDERER_TYPE_CHANGED, listener: typeof summaryRendererChanged | null): this;\n  on(type: typeof Column.EVENT_VISIBILITY_CHANGED, listener: typeof visibilityChanged | null): this;\n  on(type: string | string[], listener: IEventListener | null): this; // required for correct typings in *.d.ts\n  on(type: string | string[], listener: IEventListener | null): this {\n    return super.on(type, listener);\n  }\n\n  setCollapsed(value: boolean) {\n    if (this.collapsed === value) {\n      return;\n    }\n    this.fire([StackColumn.EVENT_COLLAPSE_CHANGED, Column.EVENT_DIRTY_HEADER, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY], this.collapsed, this.collapsed = value);\n  }\n\n  getCollapsed() {\n    return this.collapsed;\n  }\n\n  get canJustAddNumbers() {\n    return true;\n  }\n\n  flatten(r: IFlatColumn[], offset: number, levelsToGo = 0, padding = 0) {\n    let self = null;\n    const children = levelsToGo <= Column.FLAT_ALL_COLUMNS ? this._children : this._children.filter((c) => c.isVisible());\n    //no more levels or just this one\n    if (levelsToGo === 0 || levelsToGo <= Column.FLAT_ALL_COLUMNS) {\n      let w = this.getWidth();\n      if (!this.collapsed) {\n        w += (children.length - 1) * padding;\n      }\n      r.push(self = {col: this, offset, width: w});\n      if (levelsToGo === 0) {\n        return w;\n      }\n    }\n    //push children\n    let acc = offset;\n    children.forEach((c) => {\n      acc += c.flatten(r, acc, levelsToGo - 1, padding) + padding;\n    });\n    if (self) { //nesting my even increase my width\n      self.width = acc - offset - padding;\n    }\n    return acc - offset - padding;\n  }\n\n  dump(toDescRef: (desc: any) => any) {\n    const r = super.dump(toDescRef);\n    r.collapsed = this.collapsed;\n    return r;\n  }\n\n  restore(dump: any, factory: ITypeFactory) {\n    this.collapsed = dump.collapsed === true;\n    super.restore(dump, factory);\n  }\n\n  /**\n   * inserts a column at a the given position\n   */\n  insert(col: Column, index: number, weight = NaN) {\n    if (!isNaN(weight)) {\n      col.setWidth((weight / (1 - weight) * this.getWidth()));\n    }\n    col.on(`${Column.EVENT_WIDTH_CHANGED}.stack`, this.adaptChange);\n    //increase my width\n    super.setWidth(this.length === 0 ? col.getWidth() : (this.getWidth() + col.getWidth()));\n\n    return super.insert(col, index);\n  }\n\n  push(col: Column, weight = NaN) {\n    return this.insert(col, this.length, weight);\n  }\n\n  insertAfter(col: Column, ref: Column, weight = NaN) {\n    const i = this.indexOf(ref);\n    if (i < 0) {\n      return null;\n    }\n    return this.insert(col, i + 1, weight);\n  }\n\n  /**\n   * adapts weights according to an own width change\n   * @param col\n   * @param oldValue\n   * @param newValue\n   */\n  private adaptWidthChange(col: Column, oldValue: number, newValue: number) {\n    if (similar(oldValue, newValue, 0.5)) {\n      return;\n    }\n    const bak = this.getWeights();\n    const full = this.getWidth(),\n      change = (newValue - oldValue) / full;\n    const oldWeight = oldValue / full;\n    const factor = (1 - oldWeight - change) / (1 - oldWeight);\n    const widths = this._children.map((c) => {\n      if (c === col) {\n        //c.weight += change;\n        return newValue;\n      }\n      const guess = c.getWidth() * factor;\n      const w = isNaN(guess) || guess < 1 ? 0 : guess;\n      c.setWidthImpl(w);\n      return w;\n    });\n    //adapt width if needed\n    super.setWidth(widths.reduce((a, b) => a + b, 0));\n\n    this.fire([StackColumn.EVENT_WEIGHTS_CHANGED, StackColumn.EVENT_MULTI_LEVEL_CHANGED, Column.EVENT_DIRTY_HEADER, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY_CACHES, Column.EVENT_DIRTY], bak, this.getWeights());\n  }\n\n  getWeights() {\n    const w = this.getWidth();\n    return this._children.map((d) => d.getWidth() / w);\n  }\n\n  setWeights(weights: number[]) {\n    const bak = this.getWeights();\n    const delta = weights.length - this.length;\n    let s: number;\n    if (delta < 0) {\n      s = weights.reduce((p, a) => p + a, 0);\n      if (s <= 1) {\n        for (let i = 0; i < -delta; ++i) {\n          weights.push((1 - s) * (1 / -delta));\n        }\n      } else if (s <= 100) {\n        for (let i = 0; i < -delta; ++i) {\n          weights.push((100 - s) * (1 / -delta));\n        }\n      }\n    }\n    weights = weights.slice(0, this.length);\n    s = weights.reduce((p, a) => p + a, 0) / this.getWidth();\n    weights = weights.map((d) => d / s);\n\n    this._children.forEach((c, i) => {\n      c.setWidthImpl(weights[i]);\n    });\n    this.fire([StackColumn.EVENT_WEIGHTS_CHANGED, StackColumn.EVENT_MULTI_LEVEL_CHANGED, Column.EVENT_DIRTY_HEADER, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY_CACHES, Column.EVENT_DIRTY], bak, weights);\n\n  }\n\n  removeImpl(child: Column, index: number) {\n    child.on(`${Column.EVENT_WIDTH_CHANGED}.stack`, null);\n    super.setWidth(this.length === 0 ? 100 : this.getWidth() - child.getWidth());\n    return super.removeImpl(child, index);\n  }\n\n  setWidth(value: number) {\n    const factor = value / this.getWidth();\n    this._children.forEach((child) => {\n      //disable since we change it\n      child.setWidthImpl(child.getWidth() * factor);\n    });\n    super.setWidth(value);\n  }\n\n  protected compute(row: IDataRow) {\n    const w = this.getWidth();\n    return this._children.reduce((acc, d) => acc + d.getValue(row) * (d.getWidth() / w), 0);\n  }\n\n  getRenderer() {\n    if (this.getCollapsed() && this.isLoaded()) {\n      return StackColumn.COLLAPSED_RENDERER;\n    }\n    return super.getRenderer();\n  }\n\n  getExportValue(row: IDataRow, format: 'text' | 'json'): any {\n    if (format === 'json') {\n      return {\n        value: this.getRawNumber(row),\n        children: this.children.map((d) => d.getExportValue(row, format))\n      };\n    }\n    return super.getExportValue(row, format);\n  }\n}\n","import {similar, IEventListener} from '../internal';\nimport {toolbar} from './annotations';\nimport Column, {widthChanged, labelChanged, metaDataChanged, dirty, dirtyHeader, dirtyValues, rendererTypeChanged, groupRendererChanged, summaryRendererChanged, visibilityChanged, dirtyCaches} from './Column';\nimport CompositeColumn, {addColumn, filterChanged, moveColumn, removeColumn} from './CompositeColumn';\nimport {IDataRow, IColumnDesc, IFlatColumn, IMultiLevelColumn, ITypeFactory} from './interfaces';\nimport StackColumn from './StackColumn';\n\n\n/**\n * emitted when the collapse property changes\n * @asMemberOf MultiLevelCompositeColumn\n * @event\n */\nexport declare function collapseChanged_MC(previous: boolean, current: boolean): void;\n\n/**\n * emitted when the ratios between the children changes\n * @asMemberOf MultiLevelCompositeColumn\n * @event\n */\nexport declare function nestedChildRatio_MC(previous: number, current: number): void;\n\n\n@toolbar('compress', 'expand')\nexport default class MultiLevelCompositeColumn extends CompositeColumn implements IMultiLevelColumn {\n  static readonly EVENT_COLLAPSE_CHANGED = StackColumn.EVENT_COLLAPSE_CHANGED;\n  static readonly EVENT_MULTI_LEVEL_CHANGED = StackColumn.EVENT_MULTI_LEVEL_CHANGED;\n\n  private readonly adaptChange: (old: number, newValue: number) => void;\n\n  /**\n   * whether this stack column is collapsed i.e. just looks like an ordinary number column\n   * @type {boolean}\n   * @private\n   */\n  private collapsed = false;\n\n  constructor(id: string, desc: Readonly<IColumnDesc>) {\n    super(id, desc);\n    const that = this;\n    this.adaptChange = function (old, newValue) {\n      that.adaptWidthChange(old, newValue);\n    };\n  }\n\n  protected createEventList() {\n    return super.createEventList().concat([MultiLevelCompositeColumn.EVENT_COLLAPSE_CHANGED, MultiLevelCompositeColumn.EVENT_MULTI_LEVEL_CHANGED]);\n  }\n\n  on(type: typeof MultiLevelCompositeColumn.EVENT_COLLAPSE_CHANGED, listener: typeof collapseChanged_MC | null): this;\n  on(type: typeof MultiLevelCompositeColumn.EVENT_MULTI_LEVEL_CHANGED, listener: typeof nestedChildRatio_MC | null): this;\n  on(type: typeof CompositeColumn.EVENT_FILTER_CHANGED, listener: typeof filterChanged | null): this;\n  on(type: typeof CompositeColumn.EVENT_ADD_COLUMN, listener: typeof addColumn | null): this;\n  on(type: typeof CompositeColumn.EVENT_MOVE_COLUMN, listener: typeof moveColumn | null): this;\n  on(type: typeof CompositeColumn.EVENT_REMOVE_COLUMN, listener: typeof removeColumn | null): this;\n  on(type: typeof Column.EVENT_WIDTH_CHANGED, listener: typeof widthChanged | null): this;\n  on(type: typeof Column.EVENT_LABEL_CHANGED, listener: typeof labelChanged | null): this;\n  on(type: typeof Column.EVENT_METADATA_CHANGED, listener: typeof metaDataChanged | null): this;\n  on(type: typeof Column.EVENT_DIRTY, listener: typeof dirty | null): this;\n  on(type: typeof Column.EVENT_DIRTY_HEADER, listener: typeof dirtyHeader | null): this;\n  on(type: typeof Column.EVENT_DIRTY_VALUES, listener: typeof dirtyValues | null): this;\n  on(type: typeof Column.EVENT_DIRTY_CACHES, listener: typeof dirtyCaches | null): this;\n  on(type: typeof Column.EVENT_RENDERER_TYPE_CHANGED, listener: typeof rendererTypeChanged | null): this;\n  on(type: typeof Column.EVENT_GROUP_RENDERER_TYPE_CHANGED, listener: typeof groupRendererChanged | null): this;\n  on(type: typeof Column.EVENT_SUMMARY_RENDERER_TYPE_CHANGED, listener: typeof summaryRendererChanged | null): this;\n  on(type: typeof Column.EVENT_VISIBILITY_CHANGED, listener: typeof visibilityChanged | null): this;\n  on(type: string | string[], listener: IEventListener | null): this; // required for correct typings in *.d.ts\n  on(type: string | string[], listener: IEventListener | null): this {\n    return super.on(type, listener);\n  }\n\n  setCollapsed(value: boolean) {\n    if (this.collapsed === value) {\n      return;\n    }\n    this.fire([StackColumn.EVENT_COLLAPSE_CHANGED, Column.EVENT_DIRTY_HEADER, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY], this.collapsed, this.collapsed = value);\n  }\n\n  getCollapsed() {\n    return this.collapsed;\n  }\n\n  dump(toDescRef: (desc: any) => any) {\n    const r = super.dump(toDescRef);\n    r.collapsed = this.collapsed;\n    return r;\n  }\n\n  restore(dump: any, factory: ITypeFactory) {\n    this.collapsed = dump.collapsed === true;\n    super.restore(dump, factory);\n  }\n\n  flatten(r: IFlatColumn[], offset: number, levelsToGo = 0, padding = 0) {\n    return StackColumn.prototype.flatten.call(this, r, offset, levelsToGo, padding);\n  }\n\n  /**\n   * inserts a column at a the given position\n   * @param col\n   * @param index\n   */\n  insert(col: Column, index: number) {\n    col.on(`${Column.EVENT_WIDTH_CHANGED}.stack`, this.adaptChange);\n    //increase my width\n    super.setWidth(this.length === 0 ? col.getWidth() : (this.getWidth() + col.getWidth()));\n\n    return super.insert(col, index);\n  }\n\n  /**\n   * adapts weights according to an own width change\n   * @param oldValue\n   * @param newValue\n   */\n  private adaptWidthChange(oldValue: number, newValue: number) {\n    if (similar(oldValue, newValue, 0.5)) {\n      return;\n    }\n    const act = this.getWidth();\n    const next = act + (newValue - oldValue);\n    this.fire([MultiLevelCompositeColumn.EVENT_MULTI_LEVEL_CHANGED, Column.EVENT_DIRTY_HEADER, Column.EVENT_DIRTY], act, next);\n    super.setWidth(next);\n  }\n\n  removeImpl(child: Column, index: number) {\n    child.on(`${Column.EVENT_WIDTH_CHANGED}.stack`, null);\n    super.setWidth(this.length === 0 ? 100 : this.getWidth() - child.getWidth());\n    return super.removeImpl(child, index);\n  }\n\n  setWidth(value: number) {\n    const act = this.getWidth();\n    const factor = value / act;\n    this._children.forEach((child) => {\n      //disable since we change it\n      child.setWidthImpl(child.getWidth() * factor);\n    });\n    if (!similar(act, value, 0.5)) {\n      this.fire([MultiLevelCompositeColumn.EVENT_MULTI_LEVEL_CHANGED, Column.EVENT_DIRTY_HEADER, Column.EVENT_DIRTY], act, value);\n    }\n    super.setWidth(value);\n  }\n\n  getRenderer() {\n    if (this.getCollapsed()) {\n      return MultiLevelCompositeColumn.EVENT_COLLAPSE_CHANGED;\n    }\n    return super.getRenderer();\n  }\n\n  getExportValue(row: IDataRow, format: 'text' | 'json'): any {\n    if (format === 'json') {\n      return {\n        children: this.children.map((d) => d.getExportValue(row, format))\n      };\n    }\n    return super.getExportValue(row, format);\n  }\n}\n","import {IDataRow, ECompareValueType} from './interfaces';\nimport MultiLevelCompositeColumn from './MultiLevelCompositeColumn';\nimport {concat} from '../internal';\n\n/**\n * factory for creating a description creating a mean column\n * @param label\n * @returns {{type: string, label: string}}\n */\nexport function createNestedDesc(label: string = 'Nested') {\n  return {type: 'nested', label};\n}\n\n/**\n * a nested column is a composite column where the sorting order is determined by the nested ordering of the children\n * i.e., sort by the first child if equal sort by the second child,...\n */\nexport default class NestedColumn extends MultiLevelCompositeColumn {\n\n  toCompareValue(row: IDataRow) {\n    return concat(this.children.map((d) => d.toCompareValue(row)));\n  }\n\n  toCompareValueType(): ECompareValueType[] {\n    return concat(this.children.map((d) => d.toCompareValueType()));\n  }\n\n  getLabel(row: IDataRow) {\n    return this.children.map((d) => d.getLabel(row)).join(';');\n  }\n\n  getValue(row: IDataRow) {\n    return this.children.map((d) => d.getValue(row)).join(';');\n  }\n}\n","import {toolbar, SortByDefault, dialogAddons} from './annotations';\nimport Column, {widthChanged, labelChanged, metaDataChanged, dirty, dirtyHeader, dirtyValues, rendererTypeChanged, groupRendererChanged, summaryRendererChanged, visibilityChanged, dirtyCaches} from './Column';\nimport ValueColumn, {dataLoaded} from './ValueColumn';\nimport {IKeyValue} from './IArrayColumn';\nimport {IDataRow, ECompareValueType, ITypeFactory} from './interfaces';\nimport {\n  EAdvancedSortMethod, IAdvancedBoxPlotColumn, INumberDesc,\n  INumberFilter,\n  IMappingFunction,\n  IColorMappingFunction} from './INumberColumn';\nimport MapColumn, {IMapColumnDesc} from './MapColumn';\nimport {restoreMapping} from './MappingFunction';\nimport {isMissingValue} from './missing';\nimport NumberColumn from './NumberColumn';\nimport {IEventListener, IAdvancedBoxPlotData, boxplotBuilder} from '../internal';\nimport {format} from 'd3-format';\nimport {DEFAULT_FORMATTER, noNumberFilter, toCompareBoxPlotValue, getBoxPlotNumber, isDummyNumberFilter, restoreNumberFilter} from './internalNumber';\n\n\nexport interface INumberMapDesc extends INumberDesc {\n  readonly sort?: EAdvancedSortMethod;\n}\n\nexport declare type INumberMapColumnDesc = INumberMapDesc & IMapColumnDesc<number>;\n\n/**\n * emitted when the mapping property changes\n * @asMemberOf NumberMapColumn\n * @event\n */\nexport declare function mappingChanged_NMC(previous: IMappingFunction, current: IMappingFunction): void;\n/**\n * emitted when the color mapping property changes\n * @asMemberOf NumberMapColumn\n * @event\n */\nexport declare function colorMappingChanged_NMC(previous: IColorMappingFunction, current: IColorMappingFunction): void;\n\n/**\n * emitted when the sort method property changes\n * @asMemberOf NumberMapColumn\n * @event\n */\nexport declare function sortMethodChanged_NMC(previous: EAdvancedSortMethod, current: EAdvancedSortMethod): void;\n\n/**\n * emitted when the filter property changes\n * @asMemberOf NumberMapColumn\n * @event\n */\nexport declare function filterChanged_NMC(previous: INumberFilter | null, current: INumberFilter | null): void;\n\n@toolbar('filterNumber', 'colorMapped', 'editMapping')\n@dialogAddons('sort', 'sortNumbers')\n@SortByDefault('descending')\nexport default class NumberMapColumn extends MapColumn<number> implements IAdvancedBoxPlotColumn {\n  static readonly EVENT_MAPPING_CHANGED = NumberColumn.EVENT_MAPPING_CHANGED;\n  static readonly EVENT_COLOR_MAPPING_CHANGED = NumberColumn.EVENT_COLOR_MAPPING_CHANGED;\n  static readonly EVENT_SORTMETHOD_CHANGED = NumberColumn.EVENT_SORTMETHOD_CHANGED;\n  static readonly EVENT_FILTER_CHANGED = NumberColumn.EVENT_FILTER_CHANGED;\n\n  private readonly numberFormat: (n: number) => string = DEFAULT_FORMATTER;\n\n  private sort: EAdvancedSortMethod;\n  private mapping: IMappingFunction;\n  private original: IMappingFunction;\n  private colorMapping: IColorMappingFunction;\n  /**\n   * currently active filter\n   * @type {{min: number, max: number}}\n   * @private\n   */\n  private currentFilter: INumberFilter = noNumberFilter();\n\n  constructor(id: string, desc: Readonly<INumberMapColumnDesc>, factory: ITypeFactory) {\n    super(id, desc);\n    this.mapping = restoreMapping(desc, factory);\n    this.original = this.mapping.clone();\n    this.colorMapping = factory.colorMappingFunction(desc.colorMapping || desc.color);\n    this.sort = desc.sort || EAdvancedSortMethod.median;\n\n    if (desc.numberFormat) {\n      this.numberFormat = format(desc.numberFormat);\n    }\n\n    this.setDefaultRenderer('mapbars');\n  }\n\n  getNumberFormat() {\n    return this.numberFormat;\n  }\n\n  toCompareValue(row: IDataRow): number {\n    return toCompareBoxPlotValue(this, row);\n  }\n\n  toCompareValueType() {\n    return ECompareValueType.FLOAT;\n  }\n\n  getBoxPlotData(row: IDataRow): IAdvancedBoxPlotData | null {\n    const data = this.getRawValue(row);\n    if (data == null) {\n      return null;\n    }\n    const b = boxplotBuilder();\n    for (const d of data) {\n      b.push(isMissingValue(d.value) ? NaN : this.mapping.apply(d.value));\n    }\n    return b.build();\n  }\n\n  getRange() {\n    return this.mapping.getRange(this.numberFormat);\n  }\n\n  getRawBoxPlotData(row: IDataRow): IAdvancedBoxPlotData | null {\n    const data = this.getRawValue(row);\n    if (data == null) {\n      return null;\n    }\n\n    const b = boxplotBuilder();\n    for (const d of data) {\n      b.push(isMissingValue(d.value) ? NaN : d.value);\n    }\n    return b.build();\n  }\n\n  getNumber(row: IDataRow): number {\n    return getBoxPlotNumber(this, row, 'normalized');\n  }\n\n  getRawNumber(row: IDataRow): number {\n    return getBoxPlotNumber(this, row, 'raw');\n  }\n\n  iterNumber(row: IDataRow) {\n    const r = this.getValue(row);\n    return r ? r.map((d) => d.value) : [NaN];\n  }\n\n  iterRawNumber(row: IDataRow) {\n    const r = this.getRawValue(row);\n    return r ? r.map((d) => d.value) : [NaN];\n  }\n\n  getValue(row: IDataRow) {\n    const values = this.getRawValue(row);\n    return values.length === 0 ? null : values.map(({key, value}) => ({key, value: isMissingValue(value) ? NaN : this.mapping.apply(value)}));\n  }\n\n  getRawValue(row: IDataRow): IKeyValue<number>[] {\n    const r = super.getValue(row);\n    return r == null ? [] : r;\n  }\n\n  getExportValue(row: IDataRow, format: 'text' | 'json'): any {\n    return format === 'json' ? this.getRawValue(row) : super.getExportValue(row, format);\n  }\n\n  getLabels(row: IDataRow) {\n    const v = this.getRawValue(row);\n    return v.map(({key, value}) => ({key, value: this.numberFormat(value)}));\n  }\n\n  getSortMethod() {\n    return this.sort;\n  }\n\n  setSortMethod(sort: EAdvancedSortMethod) {\n    if (this.sort === sort) {\n      return;\n    }\n    this.fire([NumberMapColumn.EVENT_SORTMETHOD_CHANGED], this.sort, this.sort = sort);\n    // sort by me if not already sorted by me\n    if (!this.isSortedByMe().asc) {\n      this.sortByMe();\n    }\n  }\n\n  dump(toDescRef: (desc: any) => any): any {\n    const r = super.dump(toDescRef);\n    r.sortMethod = this.getSortMethod();\n    r.filter = !isDummyNumberFilter(this.currentFilter) ? this.currentFilter : null;\n    r.map = this.mapping.toJSON();\n    r.colorMapping = this.colorMapping.toJSON();\n    return r;\n  }\n\n  restore(dump: any, factory: ITypeFactory) {\n    super.restore(dump, factory);\n    if (dump.sortMethod) {\n      this.sort = dump.sortMethod;\n    }\n    if (dump.filter) {\n      this.currentFilter = restoreNumberFilter(dump.filter);\n    }\n    if (dump.map || dump.domain) {\n      this.mapping = restoreMapping(dump, factory);\n    }\n    if (dump.colorMapping) {\n      this.colorMapping = factory.colorMappingFunction(dump.colorMapping);\n    }\n  }\n\n  protected createEventList() {\n    return super.createEventList().concat([NumberMapColumn.EVENT_COLOR_MAPPING_CHANGED, NumberMapColumn.EVENT_MAPPING_CHANGED, NumberMapColumn.EVENT_SORTMETHOD_CHANGED, NumberMapColumn.EVENT_FILTER_CHANGED]);\n  }\n\n  on(type: typeof NumberMapColumn.EVENT_COLOR_MAPPING_CHANGED, listener: typeof colorMappingChanged_NMC | null): this;\n  on(type: typeof NumberMapColumn.EVENT_MAPPING_CHANGED, listener: typeof mappingChanged_NMC | null): this;\n  on(type: typeof NumberMapColumn.EVENT_SORTMETHOD_CHANGED, listener: typeof sortMethodChanged_NMC | null): this;\n  on(type: typeof NumberMapColumn.EVENT_FILTER_CHANGED, listener: typeof filterChanged_NMC | null): this;\n  on(type: typeof ValueColumn.EVENT_DATA_LOADED, listener: typeof dataLoaded | null): this;\n  on(type: typeof Column.EVENT_WIDTH_CHANGED, listener: typeof widthChanged | null): this;\n  on(type: typeof Column.EVENT_LABEL_CHANGED, listener: typeof labelChanged | null): this;\n  on(type: typeof Column.EVENT_METADATA_CHANGED, listener: typeof metaDataChanged | null): this;\n  on(type: typeof Column.EVENT_DIRTY, listener: typeof dirty | null): this;\n  on(type: typeof Column.EVENT_DIRTY_HEADER, listener: typeof dirtyHeader | null): this;\n  on(type: typeof Column.EVENT_DIRTY_VALUES, listener: typeof dirtyValues | null): this;\n  on(type: typeof Column.EVENT_DIRTY_CACHES, listener: typeof dirtyCaches | null): this;\n  on(type: typeof Column.EVENT_RENDERER_TYPE_CHANGED, listener: typeof rendererTypeChanged | null): this;\n  on(type: typeof Column.EVENT_GROUP_RENDERER_TYPE_CHANGED, listener: typeof groupRendererChanged | null): this;\n  on(type: typeof Column.EVENT_SUMMARY_RENDERER_TYPE_CHANGED, listener: typeof summaryRendererChanged | null): this;\n  on(type: typeof Column.EVENT_VISIBILITY_CHANGED, listener: typeof visibilityChanged | null): this;\n  on(type: string | string[], listener: IEventListener | null): this; // required for correct typings in *.d.ts\n  on(type: string | string[], listener: IEventListener | null): this {\n    return super.on(<any>type, listener);\n  }\n\n  getOriginalMapping() {\n    return this.original.clone();\n  }\n\n  getMapping() {\n    return this.mapping.clone();\n  }\n\n  setMapping(mapping: IMappingFunction) {\n    if (this.mapping.eq(mapping)) {\n      return;\n    }\n    this.fire([NumberMapColumn.EVENT_MAPPING_CHANGED, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY], this.mapping.clone(), this.mapping = mapping);\n  }\n\n  getColor(row: IDataRow) {\n    return NumberColumn.prototype.getColor.call(this, row);\n  }\n\n  getColorMapping() {\n    return this.colorMapping.clone();\n  }\n\n  setColorMapping(mapping: IColorMappingFunction) {\n    if (this.colorMapping.eq(mapping)) {\n      return;\n    }\n    this.fire([NumberMapColumn.EVENT_COLOR_MAPPING_CHANGED, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY], this.colorMapping.clone(), this.colorMapping = mapping);\n  }\n\n  isFiltered() {\n    return NumberColumn.prototype.isFiltered.call(this);\n  }\n\n  getFilter(): INumberFilter {\n    return NumberColumn.prototype.getFilter.call(this);\n  }\n\n  setFilter(value: INumberFilter | null) {\n    NumberColumn.prototype.setFilter.call(this, value);\n  }\n\n  filter(row: IDataRow) {\n    return NumberColumn.prototype.filter.call(this, row);\n  }\n\n  clearFilter() {\n    return NumberColumn.prototype.clearFilter.call(this);\n  }\n}\n\n","import {equalArrays, extent, IEventListener} from '../internal';\nimport {Category, toolbar} from './annotations';\nimport {DEFAULT_CATEGORICAL_COLOR_FUNCTION} from './CategoricalColorMappingFunction';\nimport CategoricalColumn from './CategoricalColumn';\nimport Column, {dirty, dirtyCaches, dirtyHeader, dirtyValues, groupRendererChanged, labelChanged, metaDataChanged, rendererTypeChanged, summaryRendererChanged, visibilityChanged, widthChanged} from './Column';\nimport {ICategoricalColumn, ICategoricalDesc, ICategoricalFilter, ICategory, ICategoricalColorMappingFunction} from './ICategoricalColumn';\nimport {IDataRow, IValueColumnDesc, ITypeFactory} from './interfaces';\nimport NumberColumn from './NumberColumn';\nimport {INumberColumn} from './INumberColumn';\nimport ValueColumn, {dataLoaded} from './ValueColumn';\nimport {toCategories} from './internalCategorical';\nimport {DEFAULT_FORMATTER} from './internalNumber';\n\nexport declare type IOrdinalColumnDesc = ICategoricalDesc & IValueColumnDesc<number>;\n\n/**\n * emitted when the mapping property changes\n * @asMemberOf OrdinalColumn\n * @event\n */\nexport declare function mappingChanged_OC(previous: number[], current: number[]): void;\n\n/**\n * emitted when the color mapping property changes\n * @asMemberOf OrdinalColumn\n * @event\n */\nexport declare function colorMappingChanged_OC(previous: ICategoricalColorMappingFunction, current: ICategoricalColorMappingFunction): void;\n\n/**\n * emitted when the filter property changes\n * @asMemberOf OrdinalColumn\n * @event\n */\nexport declare function filterChanged_OC(previous: ICategoricalFilter | null, current: ICategoricalFilter | null): void;\n\n/**\n * similar to a categorical column but the categories are mapped to numbers\n */\n@toolbar('group', 'filterOrdinal', 'colorMappedCategorical')\n@Category('categorical')\nexport default class OrdinalColumn extends ValueColumn<number> implements INumberColumn, ICategoricalColumn {\n  static readonly EVENT_MAPPING_CHANGED = NumberColumn.EVENT_MAPPING_CHANGED;\n  static readonly EVENT_FILTER_CHANGED = CategoricalColumn.EVENT_FILTER_CHANGED;\n  static readonly EVENT_COLOR_MAPPING_CHANGED = CategoricalColumn.EVENT_COLOR_MAPPING_CHANGED;\n\n  readonly categories: ICategory[];\n\n  private colorMapping: ICategoricalColorMappingFunction;\n\n  private readonly lookup = new Map<string, Readonly<ICategory>>();\n\n  private currentFilter: ICategoricalFilter | null = null;\n\n\n  constructor(id: string, desc: Readonly<IOrdinalColumnDesc>) {\n    super(id, desc);\n    this.categories = toCategories(desc);\n    this.categories.forEach((d) => this.lookup.set(d.name, d));\n    this.setDefaultRenderer('number');\n    this.setDefaultGroupRenderer('boxplot');\n    this.colorMapping = DEFAULT_CATEGORICAL_COLOR_FUNCTION;\n  }\n\n  protected createEventList() {\n    return super.createEventList().concat([OrdinalColumn.EVENT_COLOR_MAPPING_CHANGED, OrdinalColumn.EVENT_MAPPING_CHANGED, OrdinalColumn.EVENT_FILTER_CHANGED]);\n  }\n\n  on(type: typeof OrdinalColumn.EVENT_MAPPING_CHANGED, listener: typeof mappingChanged_OC | null): this;\n  on(type: typeof OrdinalColumn.EVENT_COLOR_MAPPING_CHANGED, listener: typeof colorMappingChanged_OC | null): this;\n  on(type: typeof OrdinalColumn.EVENT_FILTER_CHANGED, listener: typeof filterChanged_OC | null): this;\n  on(type: typeof ValueColumn.EVENT_DATA_LOADED, listener: typeof dataLoaded | null): this;\n  on(type: typeof Column.EVENT_WIDTH_CHANGED, listener: typeof widthChanged | null): this;\n  on(type: typeof Column.EVENT_LABEL_CHANGED, listener: typeof labelChanged | null): this;\n  on(type: typeof Column.EVENT_METADATA_CHANGED, listener: typeof metaDataChanged | null): this;\n  on(type: typeof Column.EVENT_DIRTY, listener: typeof dirty | null): this;\n  on(type: typeof Column.EVENT_DIRTY_HEADER, listener: typeof dirtyHeader | null): this;\n  on(type: typeof Column.EVENT_DIRTY_VALUES, listener: typeof dirtyValues | null): this;\n  on(type: typeof Column.EVENT_DIRTY_CACHES, listener: typeof dirtyCaches | null): this;\n  on(type: typeof Column.EVENT_RENDERER_TYPE_CHANGED, listener: typeof rendererTypeChanged | null): this;\n  on(type: typeof Column.EVENT_GROUP_RENDERER_TYPE_CHANGED, listener: typeof groupRendererChanged | null): this;\n  on(type: typeof Column.EVENT_SUMMARY_RENDERER_TYPE_CHANGED, listener: typeof summaryRendererChanged | null): this;\n  on(type: typeof Column.EVENT_VISIBILITY_CHANGED, listener: typeof visibilityChanged | null): this;\n  on(type: string | string[], listener: IEventListener | null): this; // required for correct typings in *.d.ts\n  on(type: string | string[], listener: IEventListener | null): this {\n    return super.on(<any>type, listener);\n  }\n\n  getNumberFormat() {\n    return DEFAULT_FORMATTER;\n  }\n\n  get dataLength() {\n    return this.categories.length;\n  }\n\n  get labels() {\n    return this.categories.map((d) => d.label);\n  }\n\n  getValue(row: IDataRow) {\n    const v = this.getNumber(row);\n    return isNaN(v) ? null : v;\n  }\n\n  getCategory(row: IDataRow) {\n    const v = super.getValue(row);\n    if (!v) {\n      return null;\n    }\n    const vs = String(v);\n    return this.lookup.has(vs) ? this.lookup.get(vs)! : null;\n  }\n\n  getCategories(row: IDataRow) {\n    return [this.getCategory(row)];\n  }\n\n  iterCategory(row: IDataRow) {\n    return [this.getCategory(row)];\n  }\n\n  iterNumber(row: IDataRow) {\n    return [this.getNumber(row)];\n  }\n\n  iterRawNumber(row: IDataRow) {\n    return [this.getRawNumber(row)];\n  }\n\n  getColor(row: IDataRow) {\n    return CategoricalColumn.prototype.getColor.call(this, row);\n  }\n\n  getLabel(row: IDataRow) {\n    return CategoricalColumn.prototype.getLabel.call(this, row);\n  }\n\n  getLabels(row: IDataRow) {\n    return CategoricalColumn.prototype.getLabels.call(this, row);\n  }\n\n  getValues(row: IDataRow) {\n    return CategoricalColumn.prototype.getValues.call(this, row);\n  }\n\n  getMap(row: IDataRow) {\n    return CategoricalColumn.prototype.getMap.call(this, row);\n  }\n\n  getMapLabel(row: IDataRow) {\n    return CategoricalColumn.prototype.getMapLabel.call(this, row);\n  }\n\n  getSet(row: IDataRow) {\n    return CategoricalColumn.prototype.getSet.call(this, row);\n  }\n\n  getNumber(row: IDataRow) {\n    const v = this.getCategory(row);\n    return v ? v.value : NaN;\n  }\n\n  getRawNumber(row: IDataRow) {\n    return this.getNumber(row);\n  }\n\n  getExportValue(row: IDataRow, format: 'text' | 'json'): any {\n    if (format === 'json') {\n      const value = this.getNumber(row);\n      if (isNaN(value)) {\n        return null;\n      }\n      return {\n        name: this.getLabel(row),\n        value\n      };\n    }\n    return super.getExportValue(row, format);\n  }\n\n  dump(toDescRef: (desc: any) => any): any {\n    const r = CategoricalColumn.prototype.dump.call(this, toDescRef);\n    r.mapping = this.getMapping();\n    return r;\n  }\n\n  restore(dump: any, factory: ITypeFactory) {\n    CategoricalColumn.prototype.restore.call(this, dump, factory);\n    if (dump.mapping) {\n      this.setMapping(dump.mapping);\n    }\n  }\n\n  getMapping() {\n    return this.categories.map((d) => d.value);\n  }\n\n  setMapping(mapping: number[]) {\n    const r = extent(mapping);\n    mapping = mapping.map((d) => (d - r[0]!) / (r[1]! - r[0]!));\n    const bak = this.getMapping();\n    if (equalArrays(bak, mapping)) {\n      return;\n    }\n    this.categories.forEach((d, i) => d.value = mapping[i] || 0);\n    this.fire([OrdinalColumn.EVENT_MAPPING_CHANGED, Column.EVENT_DIRTY_HEADER, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY_CACHES, Column.EVENT_DIRTY], bak, this.getMapping());\n  }\n\n  getColorMapping() {\n    return this.colorMapping.clone();\n  }\n\n  setColorMapping(mapping: ICategoricalColorMappingFunction) {\n    return CategoricalColumn.prototype.setColorMapping.call(this, mapping);\n  }\n\n  isFiltered() {\n    return this.currentFilter != null;\n  }\n\n  filter(row: IDataRow): boolean {\n    return CategoricalColumn.prototype.filter.call(this, row);\n  }\n\n  group(row: IDataRow) {\n    return CategoricalColumn.prototype.group.call(this, row);\n  }\n\n  getFilter() {\n    return this.currentFilter;\n  }\n\n  setFilter(filter: ICategoricalFilter | null) {\n    return CategoricalColumn.prototype.setFilter.call(this, filter);\n  }\n\n  clearFilter() {\n    return CategoricalColumn.prototype.clearFilter.call(this);\n  }\n\n  toCompareValue(row: IDataRow) {\n    return CategoricalColumn.prototype.toCompareValue.call(this, row);\n  }\n\n  toCompareValueType() {\n    return CategoricalColumn.prototype.toCompareValueType.call(this);\n  }\n\n  getRenderer(): string {\n    return NumberColumn.prototype.getRenderer.call(this);\n  }\n}\n","import {NumberColumn} from '.';\nimport {IEventListener} from '../internal';\nimport {SortByDefault, toolbar} from './annotations';\nimport Column, {dirty, dirtyCaches, dirtyHeader, dirtyValues, groupRendererChanged, labelChanged, metaDataChanged, rendererTypeChanged, summaryRendererChanged, visibilityChanged, widthChanged} from './Column';\nimport CompositeColumn, {addColumn, moveColumn, removeColumn} from './CompositeColumn';\nimport CompositeNumberColumn, {ICompositeNumberDesc} from './CompositeNumberColumn';\nimport {IDataRow, ITypeFactory} from './interfaces';\nimport {isDummyNumberFilter, noNumberFilter, restoreNumberFilter} from './internalNumber';\nimport {IColorMappingFunction, IMapAbleColumn, IMapAbleDesc, IMappingFunction, INumberFilter, isNumberColumn} from './INumberColumn';\nimport {restoreMapping} from './MappingFunction';\n\nconst DEFAULT_SCRIPT = `let s = 0;\ncol.forEach((c) => s += c.v);\nreturn s / col.length`;\n\n/**\n * factory for creating a description creating a mean column\n * @param label\n * @returns {{type: string, label: string}}\n */\nexport function createScriptDesc(label: string = 'script') {\n  return {type: 'script', label, script: DEFAULT_SCRIPT};\n}\n\n\nfunction wrapWithContext(code: string) {\n  let clean = code.trim();\n  if (!clean.includes('return')) {\n    clean = `return (${clean});`;\n  }\n  return `\n  const max = function(arr) { return Math.max.apply(Math, arr); };\n  const min = function(arr) { return Math.min.apply(Math, arr); };\n  const extent = function(arr) { return [min(arr), max(arr)]; };\n  const clamp = function(v, minValue, maxValue) { return v < minValue ? minValue : (v > maxValue ? maxValue : v); };\n  const normalize = function(v, minMax, max) {\n    if (Array.isArray(minMax)) {\n      minMax = minMax[0];\n      max = minMax[1];\n    }\n    return (v - minMax) / (max - minMax);\n  };\n  const denormalize = function(v, minMax, max) {\n    if (Array.isArray(minMax)) {\n      minMax = minMax[0];\n      max = minMax[1];\n    }\n    return v * (max - minMax) + minMax;\n  };\n  const linear = function(v, source, target) {\n    target = target || [0, 1];\n    return denormalize(normalize(v, source), target);\n  };\n  const v = (function custom() {\n    ${clean}\n  })();\n\n  return typeof v === 'number' ? v : NaN`;\n}\n\ninterface IColumnWrapper {\n  v: any;\n  raw: number | null;\n  type: string;\n  name: string;\n  id: string;\n}\n\n/**\n * wrapper class for simpler column accessing\n */\nclass ColumnWrapper implements IColumnWrapper {\n  constructor(private readonly c: Column, public readonly v: any, public readonly raw: number | null) {\n\n  }\n\n  get type() {\n    return this.c.desc.type;\n  }\n\n  get name() {\n    return this.c.getMetaData().label;\n  }\n\n  get id() {\n    return this.c.id;\n  }\n}\n\nclass LazyColumnWrapper implements IColumnWrapper {\n  constructor(private readonly c: Column, private readonly row: IDataRow) {\n\n  }\n\n  get type() {\n    return this.c.desc.type;\n  }\n\n  get name() {\n    return this.c.getMetaData().label;\n  }\n\n  get id() {\n    return this.c.id;\n  }\n\n  get v() {\n    return this.c.getValue(this.row);\n  }\n\n  get raw() {\n    return isNumberColumn(this.c) ? this.c.getRawNumber(this.row) : null;\n  }\n}\n\n/**\n * helper context for accessing columns within a scripted columns\n */\nclass ColumnContext {\n  private readonly lookup = new Map<string, IColumnWrapper>();\n  private _all: ColumnContext | null = null;\n\n  constructor(private readonly children: IColumnWrapper[], private readonly allFactory?: () => ColumnContext) {\n    children.forEach((c) => {\n      this.lookup.set(`ID@${c.id}`, c);\n      this.lookup.set(`ID@${c.id.toLowerCase()}`, c);\n      this.lookup.set(`NAME@${c.name}`, c);\n      this.lookup.set(`NAME@${c.name.toLowerCase()}`, c);\n    });\n  }\n\n  /**\n   * get a column by name\n   * @param {string} name\n   * @return {IColumnWrapper}\n   */\n  byName(name: string) {\n    return this.lookup.get(`NAME@${name}`);\n  }\n\n  /**\n   * get a column by id\n   * @param {string} id\n   * @return {IColumnWrapper}\n   */\n  byID(id: string) {\n    return this.lookup.get(`ID@${id}`);\n  }\n\n  /**\n   * get a column by index\n   * @param {number} index\n   * @return {IColumnWrapper}\n   */\n  byIndex(index: number) {\n    return this.children[index];\n  }\n\n  forEach(callback: ((c: IColumnWrapper, index: number) => void)) {\n    return this.children.forEach(callback);\n  }\n\n  /**\n   * number of columns\n   * @return {number}\n   */\n  get length() {\n    return this.children.length;\n  }\n\n  /**\n   * get the all context, i.e one with all columns of this ranking\n   * @return {ColumnContext}\n   */\n  get all() {\n    if (this._all == null) {\n      this._all = this.allFactory ? this.allFactory() : null;\n    }\n    return this._all!;\n  }\n}\n\n\nexport interface IScriptDesc extends ICompositeNumberDesc, IMapAbleDesc {\n  /**\n   * the function to use, it has two parameters: children (current children) and values (their row values)\n   * @default 'return Math.max.apply(Math,values)'\n   */\n  script?: string;\n}\n\nexport declare type IScriptColumnDesc = IScriptDesc;\n\n/**\n * emitted when the script property changes\n * @asMemberOf ScriptColumn\n * @event\n */\nexport declare function scriptChanged(previous: string, current: string): void;\n\n/**\n * emitted when the mapping property changes\n * @asMemberOf ScriptColumn\n * @event\n */\nexport declare function mappingChanged(previous: IMappingFunction, current: IMappingFunction): void;\n/**\n * emitted when the color mapping property changes\n * @asMemberOf ScriptColumn\n * @event\n */\nexport declare function colorMappingChanged(previous: IColorMappingFunction, current: IColorMappingFunction): void;\n\n/**\n * emitted when the filter property changes\n * @asMemberOf ScriptColumn\n * @event\n */\nexport declare function filterChanged(previous: INumberFilter | null, current: INumberFilter | null): void;\n\n\n\n/**\n * column combiner which uses a custom JavaScript function to combined the values\n * The script iteslf can be any valid JavaScript code. It will be embedded in a function.\n * Therefore the last statement has to return a value.\n *\n * In case of a single line statement the code piece statement <code>return</code> will be automatically prefixed.\n *\n * The function signature is: <br><code>(row: any, index: number, children: Column[], values: any[], raws: (number|null)[]) => number</code>\n *  <dl>\n *    <dt>param: <code>row</code></dt>\n *    <dd>the row in the dataset to compute the value for</dd>\n *    <dt>param: <code>index</code></dt>\n *    <dd>the index of the row</dd>\n *    <dt>param: <code>children</code></dt>\n *    <dd>the list of LineUp columns that are part of this ScriptColumn</dd>\n *    <dt>param: <code>values</code></dt>\n *    <dd>the computed value of each column (see <code>children</code>) for the current row</dd>\n *    <dt>param: <code>raws</code></dt>\n *    <dd>similar to <code>values</code>. Numeric columns return by default the normalized value, this array gives access to the original \"raw\" values before mapping is applied</dd>\n *    <dt>returns:</dt>\n *    <dd>the computed number <strong>in the range [0, 1] or NaN</strong></dd>\n *  </dl>\n *\n * In addition to the standard JavaScript functions and objects (Math, ...) a couple of utility functions are available: </p>\n * <dl>\n *    <dt><code>max(arr: number[]) => number</code></dt>\n *    <dd>computes the maximum of the given array of numbers</dd>\n *    <dt><code>min(arr: number[]) => number</code></dt>\n *    <dd>computes the minimum of the given array of numbers</dd>\n *    <dt><code>extent(arr: number[]) => [number, number]</code></dt>\n *    <dd>computes both minimum and maximum and returning an array with the first element the minimum and the second the maximum</dd>\n *    <dt><code>clamp(v: number, min: number, max: number) => number</code></dt>\n *    <dd>ensures that the given value is within the given min/max value</dd>\n *    <dt><code>normalize(v: number, min: number, max: number) => number</code></dt>\n *    <dd>normalizes the given value <code>(v - min) / (max - min)</code></dd>\n *    <dt><code>denormalize(v: number, min: number, max: number) => number</code></dt>\n *    <dd>inverts a normalized value <code>v * (max - min) + min</code></dd>\n *    <dt><code>linear(v: number, input: [number, number], output: [number, number]) => number</code></dt>\n *    <dd>performs a linear mapping from input domain to output domain both given as an array of [min, max] values. <code>denormalize(normalize(v, input[0], input[1]), output[0], output[1])</code></dd>\n *  </dl>\n */\n@toolbar('script', 'filterNumber', 'colorMapped', 'editMapping')\n@SortByDefault('descending')\nexport default class ScriptColumn extends CompositeNumberColumn implements IMapAbleColumn {\n  static readonly EVENT_MAPPING_CHANGED = NumberColumn.EVENT_MAPPING_CHANGED;\n  static readonly EVENT_COLOR_MAPPING_CHANGED = NumberColumn.EVENT_COLOR_MAPPING_CHANGED;\n  static readonly EVENT_SCRIPT_CHANGED = 'scriptChanged';\n  static readonly DEFAULT_SCRIPT = DEFAULT_SCRIPT;\n\n  private script = ScriptColumn.DEFAULT_SCRIPT;\n  private f: Function | null = null;\n  private mapping: IMappingFunction;\n  private original: IMappingFunction;\n  private colorMapping: IColorMappingFunction;\n  /**\n   * currently active filter\n   * @type {{min: number, max: number}}\n   * @private\n   */\n  private currentFilter: INumberFilter = noNumberFilter();\n\n\n  constructor(id: string, desc: Readonly<IScriptColumnDesc>, factory: ITypeFactory) {\n    super(id, desc);\n    this.script = desc.script || this.script;\n    this.mapping = restoreMapping(desc, factory);\n    this.original = this.mapping.clone();\n    this.colorMapping = factory.colorMappingFunction(desc.colorMapping || desc.color);\n\n    this.setDefaultRenderer('number');\n    this.setDefaultGroupRenderer('boxplot');\n    this.setDefaultSummaryRenderer('histogram');\n  }\n\n  protected createEventList() {\n    return super.createEventList().concat([ScriptColumn.EVENT_SCRIPT_CHANGED, ScriptColumn.EVENT_COLOR_MAPPING_CHANGED, ScriptColumn.EVENT_MAPPING_CHANGED]);\n  }\n\n  on(type: typeof ScriptColumn.EVENT_COLOR_MAPPING_CHANGED, listener: typeof colorMappingChanged | null): this;\n  on(type: typeof ScriptColumn.EVENT_MAPPING_CHANGED, listener: typeof mappingChanged | null): this;\n  on(type: typeof ScriptColumn.EVENT_FILTER_CHANGED, listener: typeof filterChanged | null): this;\n  on(type: typeof ScriptColumn.EVENT_SCRIPT_CHANGED, listener: typeof scriptChanged | null): this;\n  on(type: typeof CompositeColumn.EVENT_FILTER_CHANGED, listener: typeof filterChanged | null): this;\n  on(type: typeof CompositeColumn.EVENT_ADD_COLUMN, listener: typeof addColumn | null): this;\n  on(type: typeof CompositeColumn.EVENT_MOVE_COLUMN, listener: typeof moveColumn | null): this;\n  on(type: typeof CompositeColumn.EVENT_REMOVE_COLUMN, listener: typeof removeColumn | null): this;\n  on(type: typeof Column.EVENT_WIDTH_CHANGED, listener: typeof widthChanged | null): this;\n  on(type: typeof Column.EVENT_LABEL_CHANGED, listener: typeof labelChanged | null): this;\n  on(type: typeof Column.EVENT_METADATA_CHANGED, listener: typeof metaDataChanged | null): this;\n  on(type: typeof Column.EVENT_DIRTY, listener: typeof dirty | null): this;\n  on(type: typeof Column.EVENT_DIRTY_HEADER, listener: typeof dirtyHeader | null): this;\n  on(type: typeof Column.EVENT_DIRTY_VALUES, listener: typeof dirtyValues | null): this;\n  on(type: typeof Column.EVENT_DIRTY_CACHES, listener: typeof dirtyCaches | null): this;\n  on(type: typeof Column.EVENT_RENDERER_TYPE_CHANGED, listener: typeof rendererTypeChanged | null): this;\n  on(type: typeof Column.EVENT_GROUP_RENDERER_TYPE_CHANGED, listener: typeof groupRendererChanged | null): this;\n  on(type: typeof Column.EVENT_SUMMARY_RENDERER_TYPE_CHANGED, listener: typeof summaryRendererChanged | null): this;\n  on(type: typeof Column.EVENT_VISIBILITY_CHANGED, listener: typeof visibilityChanged | null): this;\n  on(type: string | string[], listener: IEventListener | null): this; // required for correct typings in *.d.ts\n  on(type: string | string[], listener: IEventListener | null): this {\n    return super.on(type, listener);\n  }\n\n  setScript(script: string) {\n    if (this.script === script) {\n      return;\n    }\n    this.f = null;\n    this.fire([ScriptColumn.EVENT_SCRIPT_CHANGED, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY_CACHES, Column.EVENT_DIRTY], this.script, this.script = script);\n  }\n\n  getScript() {\n    return this.script;\n  }\n\n  dump(toDescRef: (desc: any) => any) {\n    const r = super.dump(toDescRef);\n    r.script = this.script;\n    r.filter = !isDummyNumberFilter(this.currentFilter) ? this.currentFilter : null;\n    r.map = this.mapping.toJSON();\n    r.colorMapping = this.colorMapping.toJSON();\n    return r;\n  }\n\n  restore(dump: any, factory: ITypeFactory) {\n    super.restore(dump, factory);\n\n    this.script = dump.script || this.script;\n    if (dump.filter) {\n      this.currentFilter = restoreNumberFilter(dump.filter);\n    }\n    if (dump.map || dump.domain) {\n      this.mapping = restoreMapping(dump.map, factory);\n    }\n    if (dump.colorMapping) {\n      this.colorMapping = factory.colorMappingFunction(dump.colorMapping);\n    }\n  }\n\n  protected compute(row: IDataRow) {\n    if (this.f == null) {\n      this.f = new Function('children', 'values', 'raws', 'col', 'row', 'index', wrapWithContext(this.script));\n    }\n    const children = this._children;\n    const values = this._children.map((d) => d.getValue(row));\n    const raws = <number[]>this._children.map((d) => isNumberColumn(d) ? d.getRawNumber(row) : null);\n    const col = new ColumnContext(children.map((c, i) => new ColumnWrapper(c, values[i], raws[i])), () => {\n      const cols = this.findMyRanker()!.flatColumns; // all except myself\n      return new ColumnContext(cols.map((c) => new LazyColumnWrapper(c, row)));\n    });\n    return this.f.call(this, children, values, raws, col, row.v, row.i);\n  }\n\n  getExportValue(row: IDataRow, format: 'text' | 'json'): any {\n    if (format === 'json') {\n      return {\n        value: this.getRawNumber(row),\n        children: this.children.map((d) => d.getExportValue(row, format))\n      };\n    }\n    return super.getExportValue(row, format);\n  }\n\n  getRange() {\n    return this.mapping.getRange(this.getNumberFormat());\n  }\n\n  getOriginalMapping() {\n    return this.original.clone();\n  }\n\n  getMapping() {\n    return this.mapping.clone();\n  }\n\n  setMapping(mapping: IMappingFunction) {\n    if (this.mapping.eq(mapping)) {\n      return;\n    }\n    this.fire([ScriptColumn.EVENT_MAPPING_CHANGED, Column.EVENT_DIRTY_HEADER, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY_CACHES, Column.EVENT_DIRTY], this.mapping.clone(), this.mapping = mapping);\n  }\n\n  getColor(row: IDataRow) {\n    return NumberColumn.prototype.getColor.call(this, row);\n  }\n\n  getColorMapping() {\n    return this.colorMapping.clone();\n  }\n\n  setColorMapping(mapping: IColorMappingFunction) {\n    if (this.colorMapping.eq(mapping)) {\n      return;\n    }\n    this.fire([ScriptColumn.EVENT_COLOR_MAPPING_CHANGED, Column.EVENT_DIRTY_HEADER, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY_CACHES, Column.EVENT_DIRTY], this.colorMapping.clone(), this.colorMapping = mapping);\n  }\n\n  isFiltered() {\n    return NumberColumn.prototype.isFiltered.call(this);\n  }\n\n  getFilter(): INumberFilter {\n    return NumberColumn.prototype.getFilter.call(this);\n  }\n\n  setFilter(value: INumberFilter | null) {\n    NumberColumn.prototype.setFilter.call(this, value);\n  }\n\n  filter(row: IDataRow) {\n    return NumberColumn.prototype.filter.call(this, row);\n  }\n\n  clearFilter() {\n    return NumberColumn.prototype.clearFilter.call(this);\n  }\n}\n","import {Category, toolbar} from './annotations';\nimport CategoricalColumn from './CategoricalColumn';\nimport Column, {labelChanged, metaDataChanged, dirty, widthChanged, dirtyHeader, dirtyValues, rendererTypeChanged, groupRendererChanged, summaryRendererChanged, visibilityChanged, dirtyCaches} from './Column';\nimport {IArrayColumn} from './IArrayColumn';\nimport {ICategoricalDesc, ICategoricalFilter, ICategory, ISetColumn, ICategoricalColorMappingFunction} from './ICategoricalColumn';\nimport {IDataRow, ECompareValueType, IValueColumnDesc, IGroup, DEFAULT_COLOR, ITypeFactory} from './interfaces';\nimport ValueColumn, {dataLoaded} from './ValueColumn';\nimport {IEventListener} from '../internal';\nimport {DEFAULT_CATEGORICAL_COLOR_FUNCTION} from './CategoricalColorMappingFunction';\nimport {toCategories, isCategoryIncluded} from './internalCategorical';\nimport {chooseUIntByDataLength} from './internal';\n\nexport interface ISetDesc extends ICategoricalDesc {\n  separator?: string;\n}\n\nexport declare type ISetColumnDesc = ISetDesc & IValueColumnDesc<string[]>;\n\n/**\n * emitted when the color mapping property changes\n * @asMemberOf SetColumn\n * @event\n */\nexport declare function colorMappingChanged_SSC(previous: ICategoricalColorMappingFunction, current: ICategoricalColorMappingFunction): void;\n\n\n/**\n * emitted when the filter property changes\n * @asMemberOf SetColumn\n * @event\n */\nexport declare function filterChanged_SSC(previous: ICategoricalFilter | null, current: ICategoricalFilter | null): void;\n\n/**\n * a string column with optional alignment\n */\n@toolbar('filterCategorical', 'colorMappedCategorical', 'group', 'groupBy')\n@Category('categorical')\nexport default class SetColumn extends ValueColumn<string[]> implements IArrayColumn<boolean>, ISetColumn {\n  static readonly EVENT_FILTER_CHANGED = CategoricalColumn.EVENT_FILTER_CHANGED;\n  static readonly EVENT_COLOR_MAPPING_CHANGED = CategoricalColumn.EVENT_COLOR_MAPPING_CHANGED;\n\n  readonly categories: ICategory[];\n\n  private readonly separator: RegExp;\n\n  private readonly lookup = new Map<string, Readonly<ICategory>>();\n\n  private colorMapping: ICategoricalColorMappingFunction;\n  /**\n   * set of categories to show\n   * @type {null}\n   * @private\n   */\n  private currentFilter: ICategoricalFilter | null = null;\n\n  constructor(id: string, desc: Readonly<ISetColumnDesc>) {\n    super(id, desc);\n    this.separator = new RegExp(desc.separator || ';');\n    this.categories = toCategories(desc);\n    this.categories.forEach((d) => this.lookup.set(d.name, d));\n    this.setDefaultRenderer('upset');\n    this.setDefaultGroupRenderer('upset');\n    this.setSummaryRenderer('categorical');\n    this.colorMapping = DEFAULT_CATEGORICAL_COLOR_FUNCTION;\n  }\n\n  protected createEventList() {\n    return super.createEventList().concat([SetColumn.EVENT_COLOR_MAPPING_CHANGED, SetColumn.EVENT_FILTER_CHANGED]);\n  }\n\n  on(type: typeof SetColumn.EVENT_FILTER_CHANGED, listener: typeof filterChanged_SSC | null): this;\n  on(type: typeof SetColumn.EVENT_COLOR_MAPPING_CHANGED, listener: typeof colorMappingChanged_SSC | null): this;\n  on(type: typeof ValueColumn.EVENT_DATA_LOADED, listener: typeof dataLoaded | null): this;\n  on(type: typeof Column.EVENT_WIDTH_CHANGED, listener: typeof widthChanged | null): this;\n  on(type: typeof Column.EVENT_LABEL_CHANGED, listener: typeof labelChanged | null): this;\n  on(type: typeof Column.EVENT_METADATA_CHANGED, listener: typeof metaDataChanged | null): this;\n  on(type: typeof Column.EVENT_DIRTY, listener: typeof dirty | null): this;\n  on(type: typeof Column.EVENT_DIRTY_HEADER, listener: typeof dirtyHeader | null): this;\n  on(type: typeof Column.EVENT_DIRTY_VALUES, listener: typeof dirtyValues | null): this;\n  on(type: typeof Column.EVENT_DIRTY_CACHES, listener: typeof dirtyCaches | null): this;\n  on(type: typeof Column.EVENT_RENDERER_TYPE_CHANGED, listener: typeof rendererTypeChanged | null): this;\n  on(type: typeof Column.EVENT_GROUP_RENDERER_TYPE_CHANGED, listener: typeof groupRendererChanged | null): this;\n  on(type: typeof Column.EVENT_SUMMARY_RENDERER_TYPE_CHANGED, listener: typeof summaryRendererChanged | null): this;\n  on(type: typeof Column.EVENT_VISIBILITY_CHANGED, listener: typeof visibilityChanged | null): this;\n  on(type: string | string[], listener: IEventListener | null): this; // required for correct typings in *.d.ts\n  on(type: string | string[], listener: IEventListener | null): this {\n    return super.on(<any>type, listener);\n  }\n\n  get labels() {\n    return this.categories.map((d) => d.label);\n  }\n\n  get dataLength() {\n    return this.categories.length;\n  }\n\n  getValue(row: IDataRow): string[] | null {\n    const v = this.getSortedSet(row);\n    if (v.length === 0) {\n      return null;\n    }\n    return v.map((d) => d.name);\n  }\n\n  getLabel(row: IDataRow) {\n    return `(${this.getSortedSet(row).map((d) => d.label).join(',')})`;\n  }\n\n  private normalize(v: any) {\n    if (typeof v === 'string') {\n      return v.split(this.separator).map((s) => s.trim());\n    }\n    if (Array.isArray(v)) {\n      return v.map((v) => String(v).trim());\n    }\n    if (v instanceof Set) {\n      return Array.from(v).map(String);\n    }\n    return [];\n  }\n\n  getSet(row: IDataRow) {\n    const sv = this.normalize(super.getValue(row));\n    const r = new Set<ICategory>();\n    sv.forEach((n) => {\n      const cat = this.lookup.get(n);\n      if (cat) {\n        r.add(cat);\n      }\n    });\n    return r;\n  }\n\n  getSortedSet(row: IDataRow) {\n    return Array.from(this.getSet(row)).sort((a, b) => a.value === b.value ? a.label.localeCompare(b.label) : a.value - b.value);\n  }\n\n  getCategories(row: IDataRow) {\n    return this.getSortedSet(row);\n  }\n\n  getColors(row: IDataRow) {\n    return this.getSortedSet(row).map((d) => this.colorMapping.apply(d));\n  }\n\n  getColorMapping() {\n    return this.colorMapping.clone();\n  }\n\n  setColorMapping(mapping: ICategoricalColorMappingFunction) {\n    return CategoricalColumn.prototype.setColorMapping.call(this, mapping);\n  }\n\n\n  getValues(row: IDataRow) {\n    const s = this.getSet(row);\n    return this.categories.map((d) => s.has(d));\n  }\n\n  getLabels(row: IDataRow) {\n    return this.getValues(row).map(String);\n  }\n\n  getMap(row: IDataRow) {\n    return this.getSortedSet(row).map((d) => ({key: d.label, value: true}));\n  }\n\n  getMapLabel(row: IDataRow) {\n    return this.getSortedSet(row).map((d) => ({key: d.label, value: 'true'}));\n  }\n\n  iterCategory(row: IDataRow) {\n    const r = this.getSet(row);\n    if (r.size > 0) {\n      return Array.from(r);\n    }\n    return [null];\n  }\n\n  dump(toDescRef: (desc: any) => any): any {\n    const r = super.dump(toDescRef);\n    r.filter = this.currentFilter;\n    r.colorMapping = this.colorMapping.toJSON();\n    return r;\n  }\n\n  restore(dump: any, factory: ITypeFactory) {\n    super.restore(dump, factory);\n    this.colorMapping = factory.categoricalColorMappingFunction(dump.colorMapping, this.categories);\n    if (!('filter' in dump)) {\n      this.currentFilter = null;\n      return;\n    }\n    const bak = dump.filter;\n    if (typeof bak === 'string' || Array.isArray(bak)) {\n      this.currentFilter = {filter: bak, filterMissing: false};\n    } else {\n      this.currentFilter = bak;\n    }\n  }\n\n  isFiltered() {\n    return this.currentFilter != null;\n  }\n\n  filter(row: IDataRow): boolean {\n    if (!this.currentFilter) {\n      return true;\n    }\n    const v = Array.from(this.getSet(row));\n    if (v.length === 0) {\n      return isCategoryIncluded(this.currentFilter, null);\n    }\n    return v.every((s) => isCategoryIncluded(this.currentFilter, s));\n  }\n\n  getFilter() {\n    return CategoricalColumn.prototype.getFilter.call(this);\n  }\n\n  setFilter(filter: ICategoricalFilter | null) {\n    return CategoricalColumn.prototype.setFilter.call(this, filter);\n  }\n\n  clearFilter() {\n    return CategoricalColumn.prototype.clearFilter.call(this);\n  }\n\n  toCompareValue(row: IDataRow) {\n    const v = this.getSet(row);\n\n    const vs = [v.size];\n    for (const cat of this.categories) {\n      vs.push(v.has(cat) ? 1 : 0);\n    }\n    return vs;\n  }\n\n  toCompareValueType() {\n    return [chooseUIntByDataLength(this.categories.length)].concat(this.categories.map(() => ECompareValueType.BINARY));\n  }\n\n  group(row: IDataRow): IGroup {\n    const v = this.getSet(row);\n    const cardinality = v.size;\n    const categories = this.categories.filter((c) => v.has(c));\n\n    // by cardinality and then by intersection\n\n    const g: IGroup = {\n      name: categories.length === 0 ? 'None' : categories.map((d) => d.name).join(', '),\n      color: categories.length === 1 ? categories[0].color : DEFAULT_COLOR\n    };\n\n    g.parent = {\n      name: `#${cardinality}`,\n      color: DEFAULT_COLOR,\n      subGroups: [g]\n    };\n\n    return g;\n  }\n}\n","import {toolbar} from './annotations';\nimport Column, {widthChanged, labelChanged, metaDataChanged, dirty, dirtyHeader, dirtyValues, rendererTypeChanged, groupRendererChanged, summaryRendererChanged, visibilityChanged, dirtyCaches} from './Column';\nimport ValueColumn, {dataLoaded} from './ValueColumn';\nimport {IDataRow} from './interfaces';\nimport MapColumn, {IMapColumnDesc} from './MapColumn';\nimport {EAlignment, IStringDesc} from './StringColumn';\nimport {IEventListener} from '../internal';\nimport {isMissingValue} from './missing';\n\nexport declare type IStringMapColumnDesc = IStringDesc & IMapColumnDesc<string>;\n\n/**\n * a string column with optional alignment\n */\n@toolbar('search')\nexport default class StringMapColumn extends MapColumn<string> {\n  readonly alignment: EAlignment;\n  readonly escape: boolean;\n\n  constructor(id: string, desc: Readonly<IStringMapColumnDesc>) {\n    super(id, desc);\n    this.setDefaultWidth(200); //by default 200\n    this.alignment = <any>desc.alignment || EAlignment.left;\n    this.escape = desc.escape !== false;\n    this.setDefaultRenderer('map');\n  }\n\n  on(type: typeof ValueColumn.EVENT_DATA_LOADED, listener: typeof dataLoaded | null): this;\n  on(type: typeof Column.EVENT_WIDTH_CHANGED, listener: typeof widthChanged | null): this;\n  on(type: typeof Column.EVENT_LABEL_CHANGED, listener: typeof labelChanged | null): this;\n  on(type: typeof Column.EVENT_METADATA_CHANGED, listener: typeof metaDataChanged | null): this;\n  on(type: typeof Column.EVENT_DIRTY, listener: typeof dirty | null): this;\n  on(type: typeof Column.EVENT_DIRTY_HEADER, listener: typeof dirtyHeader | null): this;\n  on(type: typeof Column.EVENT_DIRTY_VALUES, listener: typeof dirtyValues | null): this;\n  on(type: typeof Column.EVENT_DIRTY_CACHES, listener: typeof dirtyCaches | null): this;\n  on(type: typeof Column.EVENT_RENDERER_TYPE_CHANGED, listener: typeof rendererTypeChanged | null): this;\n  on(type: typeof Column.EVENT_GROUP_RENDERER_TYPE_CHANGED, listener: typeof groupRendererChanged | null): this;\n  on(type: typeof Column.EVENT_SUMMARY_RENDERER_TYPE_CHANGED, listener: typeof summaryRendererChanged | null): this;\n  on(type: typeof Column.EVENT_VISIBILITY_CHANGED, listener: typeof visibilityChanged | null): this;\n  on(type: string | string[], listener: IEventListener | null): this; // required for correct typings in *.d.ts\n  on(type: string | string[], listener: IEventListener | null): this {\n    return super.on(<any>type, listener);\n  }\n\n  getValue(row: IDataRow) {\n    const r = this.getMapValue(row);\n    return r.every((d) => d.value === '') ? null : r;\n  }\n\n  getMapValue(row: IDataRow) {\n    return super.getMap(row).map(({key, value}) => ({\n      key,\n      value: isMissingValue(value) ? '' : String(value)\n    }));\n  }\n}\n","import {toolbar} from './annotations';\nimport ArrayColumn, {IArrayColumnDesc} from './ArrayColumn';\nimport {IDataRow} from './interfaces';\nimport {EAlignment, IStringDesc} from './StringColumn';\nimport {isMissingValue} from './missing';\n\nexport declare type IStringsColumnDesc = IStringDesc & IArrayColumnDesc<string>;\n\n/**\n * a string column with optional alignment\n */\n@toolbar('search')\nexport default class StringsColumn extends ArrayColumn<string> {\n  readonly alignment: EAlignment;\n  readonly escape: boolean;\n\n  constructor(id: string, desc: Readonly<IStringsColumnDesc>) {\n    super(id, desc);\n    this.setDefaultWidth(200); //by default 200\n    this.alignment = <any>desc.alignment || EAlignment.left;\n    this.escape = desc.escape !== false;\n  }\n\n  getValues(row: IDataRow) {\n    return super.getValues(row).map((v) => {\n      return isMissingValue(v) ? '' : String(v);\n    });\n  }\n}\n","import {Category, toolbar, dialogAddons} from './annotations';\nimport Column, {widthChanged, labelChanged, metaDataChanged, dirty, dirtyHeader, dirtyValues, rendererTypeChanged, groupRendererChanged, summaryRendererChanged, visibilityChanged, dirtyCaches} from './Column';\nimport {IDataRow, IGroup, IValueColumnDesc, ITypeFactory} from './interfaces';\nimport {patternFunction} from './internal';\nimport ValueColumn, {dataLoaded} from './ValueColumn';\nimport {IEventListener, ISequence} from '../internal';\nimport {IStringDesc, EAlignment} from './StringColumn';\nimport StringColumn from './StringColumn';\n\nexport interface ILinkDesc extends IStringDesc {\n  /**\n   * replacement pattern, use use <code>${value}</code> for the current value, <code>${escapedValue}</code> for an url safe value and <code>${item}</code> for the whole item\n   */\n  pattern?: string;\n\n  /**\n   * optional list of pattern templates\n   */\n  patternTemplates?: string[];\n}\n\nexport interface ILink {\n  alt: string;\n  href: string;\n}\n\nexport declare type ILinkColumnDesc = ILinkDesc & IValueColumnDesc<string | ILink>;\n\n/**\n * emitted when the filter property changes\n * @asMemberOf LinkColumn\n * @event\n */\nexport declare function filterChanged_LC(previous: string | RegExp | null, current: string | RegExp | null): void;\n\n\n/**\n * emitted when the grouping property changes\n * @asMemberOf LinkColumn\n * @event\n */\nexport declare function groupingChanged_LC(previous: (RegExp | string)[][], current: (RegExp | string)[][]): void;\n\n/**\n * emitted when the pattern property changes\n * @asMemberOf LinkColumn\n * @event\n */\nexport declare function patternChanged_LC(previous: string, current: string): void;\n\n/**\n * a string column with optional alignment\n */\n@toolbar('search', 'groupBy', 'filterString', 'editPattern')\n@dialogAddons('group', 'groupString')\n@Category('string')\nexport default class LinkColumn extends ValueColumn<string | ILink> {\n  static readonly EVENT_FILTER_CHANGED = StringColumn.EVENT_FILTER_CHANGED;\n  static readonly EVENT_GROUPING_CHANGED = StringColumn.EVENT_GROUPING_CHANGED;\n  static readonly EVENT_PATTERN_CHANGED = 'patternChanged';\n\n  private pattern: string;\n  private patternFunction: Function | null = null;\n  readonly patternTemplates: string[];\n\n  private currentFilter: string | RegExp | null = null;\n  private currentGroupCriteria: (RegExp | string)[] = [];\n\n  readonly alignment: EAlignment;\n  readonly escape: boolean;\n\n  constructor(id: string, desc: Readonly<ILinkColumnDesc>) {\n    super(id, desc);\n    this.setDefaultWidth(200); //by default 200\n    this.alignment = <any>desc.alignment || EAlignment.left;\n    this.escape = desc.escape !== false;\n\n    this.pattern = desc.pattern || '';\n    this.patternTemplates = desc.patternTemplates || [];\n\n    if (this.pattern) {\n      this.setDefaultRenderer('link');\n      this.setDefaultGroupRenderer('link');\n    }\n  }\n\n  setPattern(pattern: string) {\n    if (pattern === this.pattern) {\n      return;\n    }\n    this.patternFunction = null; // reset cache\n    this.fire([LinkColumn.EVENT_PATTERN_CHANGED, Column.EVENT_DIRTY_HEADER, Column.EVENT_DIRTY_VALUES, Column.EVENT_DIRTY_CACHES, Column.EVENT_DIRTY], this.pattern, this.pattern = pattern);\n  }\n\n  getPattern() {\n    return this.pattern;\n  }\n\n  protected createEventList() {\n    return super.createEventList().concat([LinkColumn.EVENT_PATTERN_CHANGED, LinkColumn.EVENT_GROUPING_CHANGED, LinkColumn.EVENT_FILTER_CHANGED]);\n  }\n\n  on(type: typeof LinkColumn.EVENT_PATTERN_CHANGED, listener: typeof patternChanged_LC | null): this;\n  on(type: typeof LinkColumn.EVENT_FILTER_CHANGED, listener: typeof filterChanged_LC | null): this;\n  on(type: typeof ValueColumn.EVENT_DATA_LOADED, listener: typeof dataLoaded | null): this;\n  on(type: typeof LinkColumn.EVENT_GROUPING_CHANGED, listener: typeof groupingChanged_LC | null): this;\n  on(type: typeof Column.EVENT_WIDTH_CHANGED, listener: typeof widthChanged | null): this;\n  on(type: typeof Column.EVENT_LABEL_CHANGED, listener: typeof labelChanged | null): this;\n  on(type: typeof Column.EVENT_METADATA_CHANGED, listener: typeof metaDataChanged | null): this;\n  on(type: typeof Column.EVENT_DIRTY, listener: typeof dirty | null): this;\n  on(type: typeof Column.EVENT_DIRTY_HEADER, listener: typeof dirtyHeader | null): this;\n  on(type: typeof Column.EVENT_DIRTY_VALUES, listener: typeof dirtyValues | null): this;\n  on(type: typeof Column.EVENT_DIRTY_CACHES, listener: typeof dirtyCaches | null): this;\n  on(type: typeof Column.EVENT_RENDERER_TYPE_CHANGED, listener: typeof rendererTypeChanged | null): this;\n  on(type: typeof Column.EVENT_GROUP_RENDERER_TYPE_CHANGED, listener: typeof groupRendererChanged | null): this;\n  on(type: typeof Column.EVENT_SUMMARY_RENDERER_TYPE_CHANGED, listener: typeof summaryRendererChanged | null): this;\n  on(type: typeof Column.EVENT_VISIBILITY_CHANGED, listener: typeof visibilityChanged | null): this;\n  on(type: string | string[], listener: IEventListener | null): this; // required for correct typings in *.d.ts\n  on(type: string | string[], listener: IEventListener | null): this {\n    return super.on(<any>type, listener);\n  }\n\n  getValue(row: IDataRow) {\n    const l = this.getLink(row);\n    return l == null ? null : l.href;\n  }\n\n  getLink(row: IDataRow): ILink | null {\n    const v: string | null | ILink = super.getValue(row);\n    return this.transformValue(v, row);\n  }\n\n  private transformValue(v: any, row: IDataRow) {\n    if (v == null || v === '') {\n      return null;\n    }\n    if (typeof v === 'string') {\n      if (!this.pattern) {\n        return {\n          alt: v,\n          href: v\n        };\n      }\n      if (!this.patternFunction) {\n        this.patternFunction = patternFunction(this.pattern, 'item');\n      }\n      return {\n        alt: v,\n        href: this.patternFunction.call(this, v, row.v)\n      };\n    }\n    return v;\n  }\n\n  getLabel(row: IDataRow) {\n    const l = this.getLink(row);\n    return l == null ? '' : l.alt;\n  }\n\n  dump(toDescRef: (desc: any) => any): any {\n    const r = StringColumn.prototype.dump.call(this, toDescRef);\n    if (this.pattern !== (<any>this.desc).pattern) {\n      r.pattern = this.pattern;\n    }\n    return r;\n  }\n\n  restore(dump: any, factory: ITypeFactory) {\n    StringColumn.prototype.restore.call(this, dump, factory);\n    if (dump.pattern) {\n      this.pattern = dump.pattern;\n    }\n  }\n\n  isFiltered() {\n    return this.currentFilter != null;\n  }\n\n  filter(row: IDataRow) {\n    return StringColumn.prototype.filter.call(this, row);\n  }\n\n  getFilter() {\n    return this.currentFilter;\n  }\n\n  setFilter(filter: string | RegExp | null) {\n    return StringColumn.prototype.setFilter.call(this, filter);\n  }\n\n  clearFilter() {\n    return StringColumn.prototype.clearFilter.call(this);\n  }\n\n  getGroupCriteria() {\n    return this.currentGroupCriteria.slice();\n  }\n\n  setGroupCriteria(value: (string | RegExp)[]) {\n    return StringColumn.prototype.setGroupCriteria.call(this, value);\n  }\n\n  toCompareValue(a: IDataRow) {\n    return StringColumn.prototype.toCompareValue.call(this, a);\n  }\n\n  toCompareValueType() {\n    return StringColumn.prototype.toCompareValueType.call(this);\n  }\n\n  toCompareGroupValue(rows: ISequence<IDataRow>, group: IGroup) {\n    return StringColumn.prototype.toCompareGroupValue.call(this, rows, group);\n  }\n\n  toCompareGroupValueType() {\n    return StringColumn.prototype.toCompareGroupValueType.call(this);\n  }\n\n  group(row: IDataRow): IGroup {\n    return StringColumn.prototype.group.call(this, row);\n  }\n}\n\n","import {toolbar} from './annotations';\nimport Column, {widthChanged, labelChanged, metaDataChanged, dirty, dirtyHeader, dirtyValues, rendererTypeChanged, groupRendererChanged, summaryRendererChanged, visibilityChanged, dirtyCaches} from './Column';\nimport ValueColumn, {dataLoaded} from './ValueColumn';\nimport {IDataRow, ITypeFactory} from './interfaces';\nimport {patternFunction} from './internal';\nimport MapColumn, {IMapColumnDesc} from './MapColumn';\nimport LinkColumn, {ILinkDesc} from './LinkColumn';\nimport {IEventListener} from '../internal';\nimport {EAlignment} from './StringColumn';\nimport {IKeyValue} from './IArrayColumn';\nimport {ILink} from './LinkColumn';\n\nexport declare type ILinkMapColumnDesc = ILinkDesc & IMapColumnDesc<string>;\n\n/**\n * emitted when the pattern property changes\n * @asMemberOf LinkMapColumn\n * @event\n */\nexport declare function patternChanged_LMC(previous: string, current: string): void;\n\n/**\n * a string column with optional alignment\n */\n@toolbar('search', 'editPattern')\nexport default class LinkMapColumn extends MapColumn<string> {\n  static readonly EVENT_PATTERN_CHANGED = LinkColumn.EVENT_PATTERN_CHANGED;\n\n  readonly alignment: EAlignment;\n  readonly escape: boolean;\n  private pattern: string;\n  private patternFunction: Function | null = null;\n  readonly patternTemplates: string[];\n\n  constructor(id: string, desc: Readonly<ILinkMapColumnDesc>) {\n    super(id, desc);\n    this.setDefaultWidth(200); //by default 200\n    this.alignment = <any>desc.alignment || EAlignment.left;\n    this.escape = desc.escape !== false;\n    this.pattern = desc.pattern || '';\n    this.patternTemplates = desc.patternTemplates || [];\n    this.setDefaultRenderer('map');\n  }\n\n  setPattern(pattern: string) {\n    LinkColumn.prototype.setPattern.call(this, pattern);\n  }\n\n  getPattern() {\n    return this.pattern;\n  }\n\n  protected createEventList() {\n    return super.createEventList().concat([LinkColumn.EVENT_PATTERN_CHANGED]);\n  }\n\n  on(type: typeof LinkColumn.EVENT_PATTERN_CHANGED, listener: typeof patternChanged_LMC | null): this;\n  on(type: typeof ValueColumn.EVENT_DATA_LOADED, listener: typeof dataLoaded | null): this;\n  on(type: typeof Column.EVENT_WIDTH_CHANGED, listener: typeof widthChanged | null): this;\n  on(type: typeof Column.EVENT_LABEL_CHANGED, listener: typeof labelChanged | null): this;\n  on(type: typeof Column.EVENT_METADATA_CHANGED, listener: typeof metaDataChanged | null): this;\n  on(type: typeof Column.EVENT_DIRTY, listener: typeof dirty | null): this;\n  on(type: typeof Column.EVENT_DIRTY_HEADER, listener: typeof dirtyHeader | null): this;\n  on(type: typeof Column.EVENT_DIRTY_VALUES, listener: typeof dirtyValues | null): this;\n  on(type: typeof Column.EVENT_DIRTY_CACHES, listener: typeof dirtyCaches | null): this;\n  on(type: typeof Column.EVENT_RENDERER_TYPE_CHANGED, listener: typeof rendererTypeChanged | null): this;\n  on(type: typeof Column.EVENT_GROUP_RENDERER_TYPE_CHANGED, listener: typeof groupRendererChanged | null): this;\n  on(type: typeof Column.EVENT_SUMMARY_RENDERER_TYPE_CHANGED, listener: typeof summaryRendererChanged | null): this;\n  on(type: typeof Column.EVENT_VISIBILITY_CHANGED, listener: typeof visibilityChanged | null): this;\n  on(type: string | string[], listener: IEventListener | null): this; // required for correct typings in *.d.ts\n  on(type: string | string[], listener: IEventListener | null): this {\n    return super.on(<any>type, listener);\n  }\n\n  getValue(row: IDataRow) {\n    const r = this.getLinkMap(row);\n    return r.every((d) => d.value == null) ? null : r.map(({key, value}) => ({\n      key,\n      value: value ? value.href : ''\n    }));\n  }\n\n  getLabels(row: IDataRow) {\n    return this.getLinkMap(row).map(({key, value}) => ({\n      key,\n      value: value ? value.alt : ''\n    }));\n  }\n\n  getLinkMap(row: IDataRow): IKeyValue<ILink>[] {\n    return super.getMap(row).map(({key, value}) => ({\n      key,\n      value: this.transformValue(value, row, key)\n    }));\n  }\n\n  private transformValue(v: any, row: IDataRow, key: string) {\n    if (v == null || v === '') {\n      return null;\n    }\n    if (typeof v === 'string') {\n      if (!this.pattern) {\n        return {\n          alt: v,\n          href: v\n        };\n      }\n      if (!this.patternFunction) {\n        this.patternFunction = patternFunction(this.pattern, 'item', 'key');\n      }\n      return {\n        alt: v,\n        href: this.patternFunction.call(this, v, row.v, key)\n      };\n    }\n    return v;\n  }\n\n  dump(toDescRef: (desc: any) => any): any {\n    const r = super.dump(toDescRef);\n    if (this.pattern !== (<any>this.desc).pattern) {\n      r.pattern = this.pattern;\n    }\n    return r;\n  }\n\n  restore(dump: any, factory: ITypeFactory) {\n    if (dump.pattern) {\n      this.pattern = dump.pattern;\n    }\n    super.restore(dump, factory);\n  }\n}\n","import {toolbar} from './annotations';\nimport ArrayColumn, {IArrayColumnDesc} from './ArrayColumn';\nimport Column, {widthChanged, labelChanged, metaDataChanged, dirty, dirtyHeader, dirtyValues, rendererTypeChanged, groupRendererChanged, summaryRendererChanged, visibilityChanged, dirtyCaches} from './Column';\nimport ValueColumn, {dataLoaded} from './ValueColumn';\nimport {IDataRow, ITypeFactory} from './interfaces';\nimport {patternFunction} from './internal';\nimport {EAlignment} from './StringColumn';\nimport {IEventListener} from '../internal';\nimport LinkColumn, {ILink, ILinkDesc} from './LinkColumn';\n\nexport declare type ILinksColumnDesc = ILinkDesc & IArrayColumnDesc<string | ILink>;\n\n/**\n * emitted when the pattern property changes\n * @asMemberOf LinksColumn\n * @event\n */\nexport declare function patternChanged_LCS(previous: string, current: string): void;\n\n@toolbar('search', 'editPattern')\nexport default class LinksColumn extends ArrayColumn<string | ILink> {\n  static readonly EVENT_PATTERN_CHANGED = LinkColumn.EVENT_PATTERN_CHANGED;\n\n  readonly alignment: EAlignment;\n  readonly escape: boolean;\n  private pattern: string;\n  private patternFunction: Function | null = null;\n  readonly patternTemplates: string[];\n\n  constructor(id: string, desc: Readonly<ILinksColumnDesc>) {\n    super(id, desc);\n    this.setDefaultWidth(200); //by default 200\n    this.alignment = <any>desc.alignment || EAlignment.left;\n    this.escape = desc.escape !== false;\n    this.pattern = desc.pattern || '';\n    this.patternTemplates = desc.patternTemplates || [];\n  }\n\n  setPattern(pattern: string) {\n    return LinkColumn.prototype.setPattern.call(this, pattern);\n  }\n\n  getPattern() {\n    return this.pattern;\n  }\n\n  protected createEventList() {\n    return super.createEventList().concat([LinksColumn.EVENT_PATTERN_CHANGED]);\n  }\n\n  on(type: typeof LinksColumn.EVENT_PATTERN_CHANGED, listener: typeof patternChanged_LCS | null): this;\n  on(type: typeof ValueColumn.EVENT_DATA_LOADED, listener: typeof dataLoaded | null): this;\n  on(type: typeof Column.EVENT_WIDTH_CHANGED, listener: typeof widthChanged | null): this;\n  on(type: typeof Column.EVENT_LABEL_CHANGED, listener: typeof labelChanged | null): this;\n  on(type: typeof Column.EVENT_METADATA_CHANGED, listener: typeof metaDataChanged | null): this;\n  on(type: typeof Column.EVENT_DIRTY, listener: typeof dirty | null): this;\n  on(type: typeof Column.EVENT_DIRTY_HEADER, listener: typeof dirtyHeader | null): this;\n  on(type: typeof Column.EVENT_DIRTY_VALUES, listener: typeof dirtyValues | null): this;\n  on(type: typeof Column.EVENT_DIRTY_CACHES, listener: typeof dirtyCaches | null): this;\n  on(type: typeof Column.EVENT_RENDERER_TYPE_CHANGED, listener: typeof rendererTypeChanged | null): this;\n  on(type: typeof Column.EVENT_GROUP_RENDERER_TYPE_CHANGED, listener: typeof groupRendererChanged | null): this;\n  on(type: typeof Column.EVENT_SUMMARY_RENDERER_TYPE_CHANGED, listener: typeof summaryRendererChanged | null): this;\n  on(type: typeof Column.EVENT_VISIBILITY_CHANGED, listener: typeof visibilityChanged | null): this;\n  on(type: string | string[], listener: IEventListener | null): this; // required for correct typings in *.d.ts\n  on(type: string | string[], listener: IEventListener | null): this {\n    return super.on(<any>type, listener);\n  }\n\n  getValues(row: IDataRow) {\n    return this.getLinks(row).map((d) => d ? d.href : '');\n  }\n\n  getLabels(row: IDataRow) {\n    return this.getLinks(row).map((d) => d ? d.alt : '');\n  }\n\n  private transformValue(v: any, row: IDataRow, i: number) {\n    if (v == null || v === '') {\n      return null;\n    }\n    if (typeof v === 'string') {\n      if (!this.pattern) {\n        return {\n          alt: v,\n          href: v\n        };\n      }\n      if (!this.patternFunction) {\n        this.patternFunction = patternFunction(this.pattern, 'item', 'index');\n      }\n      return {\n        alt: v,\n        href: this.patternFunction.call(this, v, row.v, i)\n      };\n    }\n    return v;\n  }\n\n  getLinks(row: IDataRow): ILink[] {\n    return super.getValues(row).map((v, i) => {\n      return this.transformValue(v, row, i);\n    });\n  }\n\n  dump(toDescRef: (desc: any) => any): any {\n    const r = super.dump(toDescRef);\n    if (this.pattern !== (<any>this.desc).pattern) {\n      r.pattern = this.pattern;\n    }\n    return r;\n  }\n\n  restore(dump: any, factory: ITypeFactory) {\n    if (dump.pattern) {\n      this.pattern = dump.pattern;\n    }\n    super.restore(dump, factory);\n  }\n}\n","export function isPromiseLike(p) {\r\n    return p != null && p && typeof p.then === 'function';\r\n}\r\n/**\r\n * the symbol returned when the promise was aborted\r\n */\r\nexport var ABORTED = Symbol('aborted');\r\nfunction thenFactory(loader, isAborted, abort) {\r\n    function then(onfulfilled, _onrejected) {\r\n        var fullfiller = loader.then(function (loaded) {\r\n            var loadedOrAborted = isAborted() ? ABORTED : loaded;\r\n            var res = onfulfilled ? onfulfilled(loadedOrAborted) : loadedOrAborted;\r\n            if (isPromiseLike(res)) {\r\n                return res.then(function (r) {\r\n                    return isAborted() ? ABORTED : r;\r\n                });\r\n            }\r\n            return isAborted() ? ABORTED : res;\r\n        });\r\n        return {\r\n            then: thenFactory(fullfiller, isAborted, abort),\r\n            abort: abort,\r\n            isAborted: isAborted\r\n        };\r\n    }\r\n    return then;\r\n}\r\n/**\r\n * abort able Promise wrapper, returns a promise which can be aborted, and trying to avoid executing therefore the wrapped promise\r\n * @param {Promise<T>} loader\r\n * @returns {any}\r\n */\r\nexport default function abortAble(loader) {\r\n    var aborted = null;\r\n    var isAborted = function () { return aborted === null; };\r\n    var aborter = new Promise(function (resolve) { return aborted = resolve; });\r\n    var abort = function () {\r\n        if (aborted == null) {\r\n            return;\r\n        }\r\n        aborted(ABORTED);\r\n        aborted = null;\r\n    };\r\n    var race = Promise.race([aborter, loader]);\r\n    return {\r\n        then: thenFactory(race, isAborted, abort),\r\n        abort: abort,\r\n        isAborted: isAborted\r\n    };\r\n}\r\nexport function abortAbleFetch(input, init) {\r\n    var controller = new AbortController();\r\n    var race = new Promise(function (resolve, reject) {\r\n        var r = fetch(input, Object.assign({ signal: controller.signal }, init || {}));\r\n        r.then(resolve);\r\n        r.catch(function (error) {\r\n            if (error instanceof DOMException) {\r\n                resolve(ABORTED);\r\n            }\r\n            else {\r\n                reject(error);\r\n            }\r\n        });\r\n    });\r\n    var abort = controller.abort.bind(controller);\r\n    var isAborted = function () { return controller.signal.aborted; };\r\n    return {\r\n        then: thenFactory(race, isAborted, abort),\r\n        abort: abort,\r\n        isAborted: isAborted\r\n    };\r\n}\r\n/**\r\n * similar to Promise.all but for abortAble\r\n */\r\nexport function abortAbleAll(values) {\r\n    var loader = Promise.all(values);\r\n    var aborted = null;\r\n    var isAborted = function () { return aborted === null; };\r\n    var aborter = new Promise(function (resolve) { return aborted = resolve; });\r\n    var abort = function () {\r\n        if (aborted == null) {\r\n            return;\r\n        }\r\n        aborted(ABORTED);\r\n        for (var _i = 0, values_1 = values; _i < values_1.length; _i++) {\r\n            var v = values_1[_i];\r\n            if (isAbortAble(v)) {\r\n                v.abort();\r\n            }\r\n        }\r\n        aborted = null;\r\n    };\r\n    var race = Promise.race([aborter, loader]);\r\n    return {\r\n        then: thenFactory(race, isAborted, abort),\r\n        abort: abort,\r\n        isAborted: isAborted\r\n    };\r\n}\r\n/**\r\n * checked whether the given argument is an abortable Promise\r\n * @param {IAbortAblePromise<any> | any} abortAble\r\n * @returns {boolean}\r\n */\r\nexport function isAbortAble(abortAble) {\r\n    return abortAble != null && abortAble && typeof abortAble.then === 'function' && typeof abortAble.abort === 'function';\r\n}\r\nexport function isAsyncUpdate(update) {\r\n    return update !== undefined && update !== null && update && isAbortAble(update.ready);\r\n}\r\n/**\r\n * similar to Promise.resolve\r\n */\r\nexport function abortAbleResolveNow(value) {\r\n    function then(onfulfilled, _onrejected) {\r\n        var res = onfulfilled ? onfulfilled(value) : value;\r\n        if (isAbortAble(res)) {\r\n            return res;\r\n        }\r\n        if (isPromiseLike(res)) {\r\n            return abortAble(res);\r\n        }\r\n        return {\r\n            then: abortAbleResolveNow(res),\r\n            abort: function () { return undefined; },\r\n            isAborted: function () { return false; }\r\n        };\r\n    }\r\n    return {\r\n        then: then,\r\n        abort: function () { return undefined; },\r\n        isAborted: function () { return false; }\r\n    };\r\n}\r\n//# sourceMappingURL=abortAble.js.map","import {Column, Ranking, IColumnConstructor, IColumnDesc, IGroup, IndicesArray, IDataRow, IRankingDump, EAggregationState, IColorMappingFunctionConstructor, IMappingFunctionConstructor} from '../model';\nimport {AEventDispatcher, ISequence} from '../internal';\nimport {IRenderTasks} from '../renderer';\nimport {IAbortAblePromise} from 'lineupengine';\n\nexport {ABORTED} from 'lineupengine';\nexport declare type IAbortAblePromise<T> = IAbortAblePromise<T>;\n\nexport declare type IAggregationStrategy = 'group' | 'item' | 'group+item' | 'group+top+item' | 'group+item+top';\n\nexport interface IDataProviderOptions {\n  columnTypes: {[columnType: string]: IColumnConstructor};\n  colorMappingFunctionTypes: {[colorMappingFunctionType: string]: IColorMappingFunctionConstructor};\n  mappingFunctionTypes: {[mappingFunctionType: string]: IMappingFunctionConstructor};\n\n\n  /**\n   * allow just single selected rows\n   * @default: false\n   */\n  singleSelection: boolean;\n\n  /**\n   * show top N rows as sample rows\n   * @default 10\n   */\n  showTopN: number;\n\n  /**\n   * aggregation strategy to show upon grouping, see also showTopN\n   * @default 'item'\n   */\n  aggregationStrategy: IAggregationStrategy;\n}\n\nexport interface IDataProvider extends AEventDispatcher {\n  readonly columnTypes: {[columnType: string]: IColumnConstructor};\n\n  getTotalNumberOfRows(): number;\n\n  getTaskExecutor(): IRenderTasks;\n\n  takeSnapshot(col: Column): void;\n\n  selectAllOf(ranking: Ranking): void;\n\n  getSelection(): number[];\n\n  setSelection(dataIndices: IndicesArray): void;\n\n  toggleSelection(i: number, additional?: boolean): boolean;\n\n  isSelected(i: number): boolean;\n\n  removeRanking(ranking: Ranking): void;\n\n  ensureOneRanking(): void;\n\n  find(id: string): Column | null;\n\n  clone(col: Column): Column;\n\n  create(desc: IColumnDesc): Column | null;\n\n  toDescRef(desc: IColumnDesc): any;\n\n  fromDescRef(ref: any): IColumnDesc;\n\n  mappingSample(col: Column): Promise<ISequence<number>> | ISequence<number>;\n\n  searchAndJump(search: string | RegExp, col: Column): void;\n\n  getRankings(): Ranking[];\n\n  getFirstRanking(): Ranking | null;\n  getLastRanking(): Ranking;\n\n  getColumns(): IColumnDesc[];\n\n  getAggregationStrategy(): IAggregationStrategy;\n\n  isAggregated(ranking: Ranking, group: IGroup): boolean;\n\n  setAggregationState(ranking: Ranking, group: IGroup, state: EAggregationState): void;\n\n  getAggregationState(ranking: Ranking, group: IGroup): EAggregationState;\n\n  aggregateAllOf(ranking: Ranking, aggregateAll: boolean | number | EAggregationState, groups?: IGroup[]): void;\n\n  getTopNAggregated(ranking: Ranking, group: IGroup): number;\n\n  setTopNAggregated(ranking: Ranking, group: IGroup, value: number): void;\n\n  setShowTopN(value: number): void;\n  getShowTopN(): number;\n\n  getRow(dataIndex: number): Promise<IDataRow> | IDataRow;\n\n  clearFilters(): void;\n}\n\n\n\nexport const SCHEMA_REF = `https://lineup.js.org/develop/schema.4.0.0.json`;\n\nexport interface IDataProviderDump {\n  '$schema'?: string;\n  /**\n   * base for generating new uids\n   */\n  uid?: number;\n\n  /**\n   * current selection\n   */\n  selection?: number[];\n\n  /**\n   * list of aggregated group paths\n   */\n  aggregations?: string[] | {[key: string]: number};\n  /**\n   * ranking dumps\n   */\n  rankings?: IRankingDump[];\n\n  /**\n   * custom show top N setting\n   */\n  showTopN?: number;\n}\n\n\n\nexport interface IDeriveOptions {\n  /**\n   * maximal percentage of unique values to be treated as a categorical column\n   */\n  categoricalThreshold: number | ((unique: number, total: number) => boolean);\n\n  columns: string[];\n\n  /**\n   * date pattern to check for string matching them\n   * @default %x\n   */\n  datePattern: string;\n}\n\n\nexport interface IExportOptions {\n  /**\n   * export separator, default: '\\t'\n   */\n  separator: string;\n  /**\n   * new line character, default: '\\n'\n   */\n  newline: string;\n  /**\n   * should a header be generated, default: true\n   */\n  header: boolean;\n  /**\n   * quote strings, default: false\n   */\n  quote: boolean;\n  /**\n   * quote string to use, default: '\"'\n   */\n  quoteChar: string;\n  /**\n   * filter specific column types, default: exclude all support types (selection, action, rank)\n   * @param col the column description to filter\n   */\n  filter: (col: Column) => boolean; //!isSupportType\n\n  /**\n   * whether the description should be part of the column header\n   */\n  verboseColumnHeaders: boolean;\n}\n","import {Ranking, isNumberColumn, Column, IColumnDesc, isSupportType, isMapAbleColumn, DEFAULT_COLOR} from '../model';\nimport {colorPool, MAX_COLORS} from '../model/internal';\nimport {concat, equal, extent, range} from '../internal';\nimport {timeParse} from 'd3-time-format';\nimport {IDataProvider, IDeriveOptions, IExportOptions} from './interfaces';\n\n\n/**\n * @internal\n */\nexport function cleanCategories(categories: Set<string>) {\n  // remove missing values\n  categories.delete(<any>null);\n  categories.delete(<any>undefined);\n  categories.delete('');\n  categories.delete('NA');\n  categories.delete('NaN');\n  categories.delete('na');\n\n  return Array.from(categories).map(String).sort();\n}\n\nfunction hasDifferentSizes(data: any[][]) {\n  if (data.length === 0) {\n    return false;\n  }\n  const base = data[0].length;\n\n  return data.some((d) => d != null && base !== (Array.isArray(d) ? d.length : -1));\n}\n\nfunction isEmpty(v: any) {\n  return v == null || (Array.isArray(v) && v.length === 0) || (v instanceof Set && v.size === 0) || (v instanceof Map && v.size === 0) || equal({}, v);\n}\n\nfunction deriveBaseType(value: any, all: () => any[], column: number | string, options: IDeriveOptions) {\n  if (value == null) {\n    console.warn('cannot derive from null value for column: ', column);\n    return null;\n  }\n  // primitive\n  if (typeof value === 'number') {\n    return {\n      type: 'number',\n      domain: extent(all())\n    };\n  }\n  if (typeof value === 'boolean') {\n    return {\n      type: 'boolean'\n    };\n  }\n\n  const dateParse = timeParse(options.datePattern);\n  if (value instanceof Date || dateParse(value) != null) {\n    return {\n      type: 'date'\n    };\n  }\n  const treatAsCategorical = typeof options.categoricalThreshold === 'function' ? options.categoricalThreshold : (u: number, t: number) => u < t * (<number>options.categoricalThreshold);\n\n  if (typeof value === 'string') {\n    //maybe a categorical\n    const values = all();\n    const categories = new Set(values);\n    if (treatAsCategorical(categories.size, values.length)) {\n      return {\n        type: 'categorical',\n        categories: cleanCategories(categories)\n      };\n    }\n    return {\n      type: 'string'\n    };\n  }\n\n  if (typeof value === 'object' && value.alt != null && value.href != null) {\n    return {\n      type: 'link'\n    };\n  }\n\n  return null;\n}\n\nfunction deriveType(label: string, value: any, column: number | string, all: () => any[], options: IDeriveOptions): IColumnDesc {\n  const base: any = {\n    type: 'string',\n    label,\n    column\n  };\n\n  const primitive = deriveBaseType(value, all, column, options);\n  if (primitive != null) {\n    return Object.assign(base, primitive);\n  }\n\n  // set\n  if (value instanceof Set) {\n    const cats = new Set<string>();\n    for (const value of all()) {\n      if (!(value instanceof Set)) {\n        continue;\n      }\n      value.forEach((vi) =>  {\n        cats.add(String(vi));\n      });\n    }\n    return Object.assign(base, {\n      type: 'set',\n      categories: cleanCategories(cats)\n    });\n  }\n\n  // map\n  if (value instanceof Map) {\n    const first = Array.from(value.values()).find((d) => !isEmpty(d));\n    const mapAll = () => {\n      const r: any[] = [];\n      for (const vi of all()) {\n        if (!(vi instanceof Map)) {\n          continue;\n        }\n        vi.forEach((vii) => {\n          if (!isEmpty(vii)) {\n            r.push(vii);\n          }\n        });\n      }\n      return r;\n    };\n    const p = deriveBaseType(first, mapAll, column, options);\n    return Object.assign(base, p || {}, {\n      type: p ? `${p.type}Map` : 'stringMap'\n    });\n  }\n\n  // array\n  if (Array.isArray(value)) {\n    const values = all();\n    const sameLength = !hasDifferentSizes(values);\n    if (sameLength) {\n      base.dataLength = value.length;\n    }\n    const first = value.find((v) => !isEmpty(v));\n    const p = deriveBaseType(first, () => concat(values).filter((d) => !isEmpty(d)), column, options);\n    if (p && p.type === 'categorical' && !sameLength) {\n      return Object.assign(base, p, {\n        type : 'set'\n      });\n    }\n    if (p || isEmpty(first)) {\n      return Object.assign(base, p || {}, {\n        type: p ? `${p.type}s` : 'strings'\n      });\n    }\n\n    if (typeof first === 'object' && first.key != null && first.value != null) {\n      // key,value pair map\n      const mapAll = () => {\n        const r: any[] = [];\n        for (const vi of values) {\n          if (!Array.isArray(vi)) {\n            continue;\n          }\n          for (const vii of vi) {\n            if (!isEmpty(vii)) {\n              r.push(vii);\n            }\n          }\n        }\n        return r;\n      };\n      const p = deriveBaseType(first.value, mapAll, column, options);\n      return Object.assign(base, p || {}, {\n        type: p ? `${p.type}Map` : 'stringMap'\n      });\n    }\n  }\n\n  // check boxplot\n  const bs = ['min', 'max', 'median', 'q1', 'q3'];\n  if (typeof value === 'object' && bs.every((b) => typeof value[b] === 'number')) {\n    //  boxplot\n    const vs = all();\n    return Object.assign(base, {\n      type: 'boxplot',\n      domain: [\n        vs.reduce((a, b) => Math.min(a, b.min), Number.POSITIVE_INFINITY),\n        vs.reduce((a, b) => Math.max(a, b.max), Number.NEGATIVE_INFINITY)\n      ]\n    });\n  }\n\n  if (typeof value === 'object') {\n    // object map\n    const first = Object.keys(value).map((k) => value[k]).filter((d) => !isEmpty(d));\n    const mapAll = () => {\n      const r: any[] = [];\n      for (const vi of all()) {\n        if (vi == null) {\n          continue;\n        }\n        Object.keys(vi).forEach((k) => {\n          const vii = vi[k];\n          if (!isEmpty(vii)) {\n            r.push(vii);\n          }\n        });\n      }\n      return r;\n    };\n    const p = deriveBaseType(first, mapAll, column, options);\n    return Object.assign(base, p || {}, {\n      type: p ? `${p.type}Map` : 'stringMap'\n    });\n  }\n\n  console.log('cannot infer type of column:', column);\n  //unknown type\n  return base;\n}\n\nfunction selectColumns(existing: string[], columns: string[]) {\n  const allNots = columns.every((d) => d.startsWith('-'));\n  if (!allNots) {\n    return columns;\n  }\n  // negate case, exclude columns that are given using -notation\n  const exclude = new Set(columns);\n  return existing.filter((d) => !exclude.has(`-${d}`));\n}\n\nfunction toLabel(key: string | number) {\n  if (typeof(key) === 'number') {\n    return `Col ${key + 1}`;\n  }\n  key = key.trim();\n  if (key.length === 0) {\n    return 'Unknown';\n  }\n  return key.split(/[\\s]+/gm).map((k) => k.length === 0 ? k : `${k[0]!.toUpperCase()}${k.slice(1)}`).join(' ');\n}\n\nexport function deriveColumnDescriptions(data: any[], options: Partial<IDeriveOptions> = {}) {\n  const config = Object.assign({\n    categoricalThreshold: (u: number, n: number) => u <= MAX_COLORS && u < n * 0.7, //70% unique and less equal to 22 categories\n    columns: [],\n    datePattern: '%x'\n  }, options);\n\n  const r: IColumnDesc[] = [];\n  if (data.length === 0) {\n    // no data to derive something from\n    return r;\n  }\n\n  const first = data[0];\n  const columns: (number|string)[] = Array.isArray(first) ? range(first.length) : (config.columns.length > 0 ? selectColumns(Object.keys(first), config.columns) : Object.keys(first));\n\n  return columns.map((key) => {\n    let v = first[key];\n    if (isEmpty(v)) {\n      // cannot derive something from null try other rows\n      const foundRow = data.find((row) => !isEmpty(row[key]));\n      v = foundRow ? foundRow[key] : null;\n    }\n    return deriveType(toLabel(key), v, key, () => data.map((d) => d[key]).filter((d) => !isEmpty(d)), config);\n  });\n}\n\n\n/**\n * assigns colors to columns if they are numbers and not yet defined\n * @param columns\n * @returns {IColumnDesc[]}\n */\nexport function deriveColors(columns: IColumnDesc[]) {\n  const colors = colorPool();\n  columns.forEach((col: IColumnDesc) => {\n    if (isMapAbleColumn(col)) {\n      col.colorMapping = col.colorMapping || col.color || colors() || DEFAULT_COLOR;\n    }\n  });\n  return columns;\n}\n\n\n/**\n * utility to export a ranking to a table with the given separator\n * @param ranking\n * @param data\n * @param options\n * @returns {Promise<string>}\n */\nexport function exportRanking(ranking: Ranking, data: any[], options: Partial<IExportOptions> = {}) {\n  const opts = <IExportOptions>Object.assign({\n    separator: '\\t',\n    newline: '\\n',\n    header: true,\n    quote: false,\n    quoteChar: '\"',\n    filter: (c: Column) => !isSupportType(c),\n    verboseColumnHeaders: false\n  }, options);\n\n  //optionally quote not numbers\n  const escape = new RegExp(`[${opts.quoteChar}]`, 'g');\n\n  function quote(v: any, c?: Column) {\n    const l = String(v);\n    if ((opts.quote || l.indexOf('\\n') >= 0) && (!c || !isNumberColumn(c))) {\n      return `${opts.quoteChar}${l.replace(escape, opts.quoteChar + opts.quoteChar)}${opts.quoteChar}`;\n    }\n    return l;\n  }\n\n  const columns = ranking.flatColumns.filter((c) => opts.filter(c));\n  const order = ranking.getOrder();\n\n  const r: string[] = [];\n  if (opts.header) {\n    r.push(columns.map((d) => quote(`${d.label}${opts.verboseColumnHeaders && d.description ? `\\n${d.description}` : ''}`)).join(opts.separator));\n  }\n  data.forEach((row, i) => {\n    r.push(columns.map((c) => quote(c.getExportValue({v: row, i: order[i]}, 'text'), c)).join(opts.separator));\n  });\n  return r.join(opts.newline);\n}\n\n\n/** @internal */\nexport function map2Object<T>(map: Map<string, T>) {\n  const r : { [key: string]: T} = {};\n  map.forEach((v, k) => r[k] = v);\n  return r;\n}\n\n/** @internal */\nexport function object2Map<T>(obj: { [key: string]: T}) {\n  const r = new Map<string, T>();\n  for (const k of Object.keys(obj)) {\n    r.set(k, obj[k]);\n  }\n  return r;\n}\n\n\n/** @internal */\nexport function rangeSelection(provider: IDataProvider, rankingId: string, dataIndex: number, relIndex: number, ctrlKey: boolean) {\n  const ranking = provider.getRankings().find((d) => d.id === rankingId);\n  if (!ranking) { // no known reference\n    return false;\n  }\n  const selection = provider.getSelection();\n  if (selection.length === 0 || selection.includes(dataIndex)) {\n    return false; // no other or deselect\n  }\n  const order = ranking.getOrder();\n  const lookup = new Map(Array.from(order).map((d, i) => <[number, number]>[d, i]));\n  const distances = selection.map((d) => {\n    const index = (lookup.has(d) ? lookup.get(d)! : Infinity);\n    return {s: d, index, distance: Math.abs(relIndex - index)};\n  });\n  const nearest = distances.sort((a, b) => a.distance - b.distance)[0]!;\n  if (!isFinite(nearest.distance)) {\n    return false; // all outside\n  }\n  if (!ctrlKey) {\n    selection.splice(0, selection.length);\n    selection.push(nearest.s);\n  }\n  if (nearest.index < relIndex) {\n    for (let i = nearest.index + 1; i <= relIndex; ++i) {\n      selection.push(order[i]);\n    }\n  } else {\n    for (let i = relIndex; i <= nearest.index; ++i) {\n      selection.push(order[i]);\n    }\n  }\n  provider.setSelection(selection);\n  return true;\n}\n","import {AEventDispatcher, debounce, ISequence, OrderedSet, IDebounceContext, IEventListener, suffix, IEventContext} from '../internal';\nimport {Column, IColumnConstructor, Ranking, AggregateGroupColumn, createAggregateDesc, IAggregateGroupColumnDesc, isSupportType, EDirtyReason, RankColumn, createRankDesc, createSelectionDesc, IColumnDesc, IDataRow, IGroup, IndicesArray, IOrderedGroup, ISelectionColumnDesc, EAggregationState, IColumnDump, IRankingDump, IColorMappingFunctionConstructor, IMappingFunctionConstructor, ITypeFactory} from '../model';\nimport {models} from '../model/models';\nimport {forEachIndices, everyIndices, toGroupID, unifyParents} from '../model/internal';\nimport {IDataProvider, IDataProviderDump, IDataProviderOptions, SCHEMA_REF, IExportOptions} from './interfaces';\nimport {exportRanking, map2Object, object2Map} from './utils';\nimport {IRenderTasks} from '../renderer';\nimport {restoreCategoricalColorMapping} from '../model/CategoricalColorMappingFunction';\nimport {createColorMappingFunction, colorMappingFunctions} from '../model/ColorMappingFunction';\nimport {createMappingFunction, mappingFunctions} from '../model/MappingFunction';\n\n\n\n/**\n * emitted when a column has been added\n * @asMemberOf ADataProvider\n * @event\n */\nexport declare function addColumn(col: Column, index: number): void;\n\n/**\n * emitted when a column has been moved within this composite columm\n * @asMemberOf ADataProvider\n * @event\n */\nexport declare function moveColumn(col: Column, index: number, oldIndex: number): void;\n\n/**\n * emitted when a column has been removed\n * @asMemberOf ADataProvider\n * @event\n */\nexport declare function removeColumn(col: Column, index: number): void;\n/**\n * @asMemberOf ADataProvider\n * @event\n */\nexport declare function orderChanged(previous: number[], current: number[], previousGroups: IOrderedGroup[], currentGroups: IOrderedGroup[], dirtyReason: EDirtyReason[]): void;\n\n\n/**\n * emitted when state of the column is dirty\n * @asMemberOf ADataProvider\n * @event\n */\nexport declare function dirty(): void;\n\n/**\n * emitted when state of the column related to its header is dirty\n * @asMemberOf ADataProvider\n * @event\n */\nexport declare function dirtyHeader(): void;\n\n/**\n * emitted when state of the column related to its values is dirty\n * @asMemberOf ADataProvider\n * @event\n */\nexport declare function dirtyValues(): void;\n\n/**\n * emitted when state of the column related to cached values (hist, compare, ...) is dirty\n * @asMemberOf ADataProvider\n * @event\n */\nexport declare function dirtyCaches(): void;\n\n\n/**\n * emitted when the data changes\n * @asMemberOf ADataProvider\n * @param rows the new data rows\n * @event\n */\nexport declare function dataChanged(rows: IDataRow[]): void;\n\n/**\n * emitted when the selection changes\n * @asMemberOf ADataProvider\n * @param dataIndices the selected data indices\n * @event\n */\nexport declare function selectionChanged(dataIndices: number[]): void;\n/**\n * @asMemberOf ADataProvider\n * @event\n */\nexport declare function addRanking(ranking: Ranking, index: number): void;\n/**\n * @asMemberOf ADataProvider\n * @param ranking if null all rankings are removed else just the specific one\n * @event\n */\nexport declare function removeRanking(ranking: Ranking | null, index: number): void;\n\n/**\n * @asMemberOf ADataProvider\n * @event\n */\nexport declare function addDesc(desc: IColumnDesc): void;\n/**\n * @asMemberOf ADataProvider\n * @event\n */\nexport declare function clearDesc(): void;\n\n/**\n * @asMemberOf ADataProvider\n * @event\n */\nexport declare function showTopNChanged(previous: number, current: number): void;\n\n/**\n * emitted when the selection changes\n * @asMemberOf ADataProvider\n * @param dataIndices the selected data indices\n * @event\n */\nexport declare function jumpToNearest(dataIndices: number[]): void;\n/**\n * @asMemberOf ADataProvider\n * @event\n */\nexport declare function aggregate(ranking: Ranking, group: IGroup | IGroup[], value: boolean, state: EAggregationState): void;\n\n\n/**\n * @asMemberOf ADataProvider\n * @event\n */\nexport declare function busy(busy: boolean): void;\n\nfunction toDirtyReason(ctx: IEventContext) {\n  const primary = ctx.primaryType;\n  switch (primary || '') {\n    case Ranking.EVENT_DIRTY_ORDER:\n      return ctx.args[0] || [EDirtyReason.UNKNOWN];\n    case Ranking.EVENT_SORT_CRITERIA_CHANGED:\n      return [EDirtyReason.SORT_CRITERIA_CHANGED];\n    case Ranking.EVENT_GROUP_CRITERIA_CHANGED:\n      return [EDirtyReason.GROUP_CRITERIA_CHANGED];\n    case Ranking.EVENT_GROUP_SORT_CRITERIA_CHANGED:\n      return [EDirtyReason.GROUP_SORT_CRITERIA_CHANGED];\n    default:\n      return [EDirtyReason.UNKNOWN];\n  }\n}\n\nfunction mergeDirtyOrderContext(current: IDebounceContext, next: IDebounceContext) {\n  const currentReason = toDirtyReason(current.self);\n  const nextReason = toDirtyReason(next.self);\n  const combined = new Set(currentReason);\n  for (const r of nextReason) {\n    combined.add(r);\n  }\n  const args = [Array.from(combined)];\n  return {\n    self: {\n      primaryType: Ranking.EVENT_DIRTY_ORDER,\n      args\n    },\n    args\n  };\n}\n\n/**\n * a basic data provider holding the data and rankings\n */\nabstract class ADataProvider extends AEventDispatcher implements IDataProvider {\n  static readonly EVENT_SELECTION_CHANGED = 'selectionChanged';\n  static readonly EVENT_DATA_CHANGED = 'dataChanged';\n  static readonly EVENT_ADD_COLUMN = Ranking.EVENT_ADD_COLUMN;\n  static readonly EVENT_MOVE_COLUMN = Ranking.EVENT_MOVE_COLUMN;\n  static readonly EVENT_REMOVE_COLUMN = Ranking.EVENT_REMOVE_COLUMN;\n  static readonly EVENT_ADD_RANKING = 'addRanking';\n  static readonly EVENT_REMOVE_RANKING = 'removeRanking';\n  static readonly EVENT_DIRTY = Ranking.EVENT_DIRTY;\n  static readonly EVENT_DIRTY_HEADER = Ranking.EVENT_DIRTY_HEADER;\n  static readonly EVENT_DIRTY_VALUES = Ranking.EVENT_DIRTY_VALUES;\n  static readonly EVENT_DIRTY_CACHES = Ranking.EVENT_DIRTY_CACHES;\n  static readonly EVENT_ORDER_CHANGED = Ranking.EVENT_ORDER_CHANGED;\n  static readonly EVENT_SHOWTOPN_CHANGED = 'showTopNChanged';\n  static readonly EVENT_ADD_DESC = 'addDesc';\n  static readonly EVENT_CLEAR_DESC = 'clearDesc';\n  static readonly EVENT_JUMP_TO_NEAREST = 'jumpToNearest';\n  static readonly EVENT_GROUP_AGGREGATION_CHANGED = AggregateGroupColumn.EVENT_AGGREGATE;\n  static readonly EVENT_BUSY = 'busy';\n\n  private static readonly FORWARD_RANKING_EVENTS = suffix('.provider', Ranking.EVENT_ADD_COLUMN, Ranking.EVENT_REMOVE_COLUMN,\n    Ranking.EVENT_DIRTY, Ranking.EVENT_DIRTY_HEADER, Ranking.EVENT_MOVE_COLUMN,\n    Ranking.EVENT_ORDER_CHANGED, Ranking.EVENT_DIRTY_VALUES, Ranking.EVENT_DIRTY_CACHES);\n\n  /**\n   * all rankings\n   * @type {Array}\n   * @private\n   */\n  private readonly rankings: Ranking[] = [];\n\n  /**\n   * the current selected indices\n   * @type {OrderedSet}\n   */\n  private readonly selection = new OrderedSet<number>();\n\n  //Map<ranking.id@group.name, -1=expand,0=collapse,N=topN>\n  private readonly aggregations = new Map<string, number>(); // not part of = show all\n\n  private uid = 0;\n  private readonly typeFactory: ITypeFactory;\n\n  private readonly options: Readonly<IDataProviderOptions> = {\n    columnTypes: {},\n    colorMappingFunctionTypes: {},\n    mappingFunctionTypes: {},\n    singleSelection: false,\n    showTopN: 10,\n    aggregationStrategy: 'item'\n  };\n\n  /**\n   * lookup map of a column type to its column implementation\n   */\n  readonly columnTypes: {[columnType: string]: IColumnConstructor};\n  readonly colorMappingFunctionTypes: {[colorMappingFunctionType: string]: IColorMappingFunctionConstructor};\n  readonly mappingFunctionTypes: {[mappingFunctionType: string]: IMappingFunctionConstructor};\n\n  private showTopN: number;\n\n  constructor(options: Partial<IDataProviderOptions> = {}) {\n    super();\n    Object.assign(this.options, options);\n    this.columnTypes = Object.assign(models(), this.options.columnTypes);\n    this.colorMappingFunctionTypes = Object.assign(colorMappingFunctions(), this.options.colorMappingFunctionTypes);\n    this.mappingFunctionTypes = Object.assign(mappingFunctions(), this.options.mappingFunctionTypes);\n    this.showTopN = this.options.showTopN;\n\n    this.typeFactory = this.createTypeFactory();\n  }\n\n  private createTypeFactory() {\n    const factory = <ITypeFactory><any>((d: IColumnDump) => {\n      const desc = this.fromDescRef(d.desc);\n      if (!desc || !desc.type) {\n        console.warn('cannot restore column dump', d);\n        return new Column(d.id || '', d.desc || {});\n      }\n      this.fixDesc(desc);\n      const type = this.columnTypes[desc.type];\n      if (type == null) {\n        console.warn('invalid column type in column dump using column', d);\n        return new Column(d.id || '', desc);\n      }\n      const c = new type('', desc, factory);\n      c.restore(d, factory);\n      return c;\n    });\n    factory.colorMappingFunction = createColorMappingFunction(this.colorMappingFunctionTypes, factory);\n    factory.mappingFunction = createMappingFunction(this.mappingFunctionTypes);\n    factory.categoricalColorMappingFunction = restoreCategoricalColorMapping;\n    return factory;\n  }\n\n  /**\n   * events:\n   *  * column changes: addColumn, removeColumn\n   *  * ranking changes: addRanking, removeRanking\n   *  * dirty: dirty, dirtyHeder, dirtyValues\n   *  * selectionChanged\n   * @returns {string[]}\n   */\n  protected createEventList() {\n    return super.createEventList().concat([\n      ADataProvider.EVENT_DATA_CHANGED, ADataProvider.EVENT_BUSY,\n      ADataProvider.EVENT_SHOWTOPN_CHANGED,\n      ADataProvider.EVENT_ADD_COLUMN, ADataProvider.EVENT_REMOVE_COLUMN, ADataProvider.EVENT_MOVE_COLUMN,\n      ADataProvider.EVENT_ADD_RANKING, ADataProvider.EVENT_REMOVE_RANKING,\n      ADataProvider.EVENT_DIRTY, ADataProvider.EVENT_DIRTY_HEADER, ADataProvider.EVENT_DIRTY_VALUES, ADataProvider.EVENT_DIRTY_CACHES,\n      ADataProvider.EVENT_ORDER_CHANGED, ADataProvider.EVENT_SELECTION_CHANGED,\n      ADataProvider.EVENT_ADD_DESC, ADataProvider.EVENT_CLEAR_DESC,\n      ADataProvider.EVENT_JUMP_TO_NEAREST, ADataProvider.EVENT_GROUP_AGGREGATION_CHANGED]);\n  }\n\n  on(type: typeof ADataProvider.EVENT_BUSY, listener: typeof busy | null): this;\n  on(type: typeof ADataProvider.EVENT_DATA_CHANGED, listener: typeof dataChanged | null): this;\n  on(type: typeof ADataProvider.EVENT_SHOWTOPN_CHANGED, listener: typeof showTopNChanged | null): this;\n  on(type: typeof ADataProvider.EVENT_ADD_COLUMN, listener: typeof addColumn | null): this;\n  on(type: typeof ADataProvider.EVENT_MOVE_COLUMN, listener: typeof moveColumn | null): this;\n  on(type: typeof ADataProvider.EVENT_REMOVE_COLUMN, listener: typeof removeColumn | null): this;\n  on(type: typeof ADataProvider.EVENT_ADD_RANKING, listener: typeof addRanking | null): this;\n  on(type: typeof ADataProvider.EVENT_REMOVE_RANKING, listener: typeof removeRanking | null): this;\n  on(type: typeof ADataProvider.EVENT_DIRTY, listener: typeof dirty | null): this;\n  on(type: typeof ADataProvider.EVENT_DIRTY_HEADER, listener: typeof dirtyHeader | null): this;\n  on(type: typeof ADataProvider.EVENT_DIRTY_VALUES, listener: typeof dirtyValues | null): this;\n  on(type: typeof ADataProvider.EVENT_DIRTY_CACHES, listener: typeof dirtyCaches | null): this;\n  on(type: typeof ADataProvider.EVENT_ORDER_CHANGED, listener: typeof orderChanged | null): this;\n  on(type: typeof ADataProvider.EVENT_ADD_DESC, listener: typeof addDesc | null): this;\n  on(type: typeof ADataProvider.EVENT_CLEAR_DESC, listener: typeof clearDesc | null): this;\n  on(type: typeof ADataProvider.EVENT_JUMP_TO_NEAREST, listener: typeof jumpToNearest | null): this;\n  on(type: typeof ADataProvider.EVENT_GROUP_AGGREGATION_CHANGED, listener: typeof aggregate | null): this;\n  on(type: typeof ADataProvider.EVENT_SELECTION_CHANGED, listener: typeof selectionChanged | null): this;\n  on(type: string | string[], listener: IEventListener | null): this; // required for correct typings in *.d.ts\n  on(type: string | string[], listener: IEventListener | null): this {\n    return super.on(type, listener);\n  }\n\n  abstract getTotalNumberOfRows(): number;\n\n  /**\n   * returns a list of all known column descriptions\n   * @returns {Array}\n   */\n  abstract getColumns(): IColumnDesc[];\n\n  abstract getTaskExecutor(): IRenderTasks;\n\n  /**\n   * adds a new ranking\n   * @param existing an optional existing ranking to clone\n   * @return the new ranking\n   */\n  pushRanking(existing?: Ranking): Ranking {\n    const r = this.cloneRanking(existing);\n\n    this.insertRanking(r);\n    return r;\n  }\n\n  protected fireBusy(busy: boolean) {\n    this.fire(ADataProvider.EVENT_BUSY, busy);\n  }\n\n  takeSnapshot(col: Column): Ranking {\n    this.fireBusy(true);\n    const r = this.cloneRanking();\n    const ranking = col.findMyRanker();\n    // by convention copy all support types and the first string column\n    let hasString = col.desc.type === 'string';\n    let hasColumn = false;\n    const toClone = !ranking ? [col] : ranking.children.filter((c) => {\n      if (c === col) {\n        hasColumn = true;\n        return true;\n      }\n      if (!hasString && c.desc.type === 'string') {\n        hasString = true;\n        return true;\n      }\n      return isSupportType(c);\n    });\n\n    if (!hasColumn) {\n      // maybe a nested one thus not in the top level\n      toClone.push(col);\n    }\n\n    toClone.forEach((c) => {\n      const clone = this.clone(c);\n      r.push(clone);\n      if (c === col) {\n        clone.sortByMe();\n      }\n    });\n    this.insertRanking(r);\n    this.fireBusy(false);\n    return r;\n  }\n\n  insertRanking(r: Ranking, index = this.rankings.length) {\n    this.rankings.splice(index, 0, r);\n    this.forward(r, ...ADataProvider.FORWARD_RANKING_EVENTS);\n    //delayed reordering per ranking\n    const that = this;\n    r.on(`${Ranking.EVENT_DIRTY_ORDER}.provider`, debounce(function(this: IEventContext) {\n      that.triggerReorder(r, toDirtyReason(this));\n    }, 100, mergeDirtyOrderContext));\n    this.fire([ADataProvider.EVENT_ADD_RANKING, ADataProvider.EVENT_DIRTY_HEADER, ADataProvider.EVENT_DIRTY_VALUES, ADataProvider.EVENT_DIRTY], r, index);\n    this.triggerReorder(r);\n  }\n\n  private triggerReorder(ranking: Ranking, dirtyReason?: EDirtyReason[]) {\n    this.fireBusy(true);\n    const reason = dirtyReason || [EDirtyReason.UNKNOWN];\n    Promise.resolve(this.sort(ranking, reason)).then(({groups, index2pos}) => {\n      groups = unifyParents(groups);\n      this.initAggregateState(ranking, groups);\n      ranking.setGroups(groups, index2pos, reason);\n      this.fireBusy(false);\n    });\n  }\n\n  /**\n   * removes a ranking from this data provider\n   * @param ranking\n   * @returns {boolean}\n   */\n  removeRanking(ranking: Ranking) {\n    const i = this.rankings.indexOf(ranking);\n    if (i < 0) {\n      return false;\n    }\n    this.unforward(ranking, ...ADataProvider.FORWARD_RANKING_EVENTS);\n    this.rankings.splice(i, 1);\n    ranking.on(`${Ranking.EVENT_DIRTY_ORDER}.provider`, null);\n    this.cleanUpRanking(ranking);\n    this.fire([ADataProvider.EVENT_REMOVE_RANKING, ADataProvider.EVENT_DIRTY_HEADER, ADataProvider.EVENT_DIRTY_VALUES, ADataProvider.EVENT_DIRTY], ranking, i);\n    return true;\n  }\n\n  /**\n   * removes all rankings\n   */\n  clearRankings() {\n    this.rankings.forEach((ranking) => {\n      this.unforward(ranking, ...ADataProvider.FORWARD_RANKING_EVENTS);\n      ranking.on(`${Ranking.EVENT_DIRTY_ORDER}.provider`, null);\n      this.cleanUpRanking(ranking);\n    });\n    // clear\n    this.rankings.splice(0, this.rankings.length);\n    this.fire([ADataProvider.EVENT_REMOVE_RANKING, ADataProvider.EVENT_DIRTY_HEADER, ADataProvider.EVENT_DIRTY_VALUES, ADataProvider.EVENT_DIRTY], null, -1);\n  }\n\n  clearFilters() {\n    this.rankings.forEach((ranking) => ranking.clearFilters());\n  }\n\n  /**\n   * returns a list of all current rankings\n   * @returns {Ranking[]}\n   */\n  getRankings() {\n    return this.rankings.slice();\n  }\n\n  /**\n   * returns the last ranking for quicker access\n   * @returns {Ranking}\n   */\n  getFirstRanking() {\n    return this.rankings[0] || null;\n  }\n\n  /**\n   * returns the last ranking for quicker access\n   * @returns {Ranking}\n   */\n  getLastRanking() {\n    return this.rankings[this.rankings.length - 1];\n  }\n\n  ensureOneRanking() {\n    if (this.rankings.length === 0) {\n      const r = this.pushRanking();\n      this.push(r, createRankDesc());\n    }\n  }\n\n  destroy() {\n    // dummy\n  }\n\n  /**\n   * hook method for cleaning up a ranking\n   * @param _ranking\n   */\n  cleanUpRanking(_ranking: Ranking) {\n    // dummy\n  }\n\n  /**\n   * abstract method for cloning a ranking\n   * @param existing\n   * @returns {null}\n   */\n  abstract cloneRanking(existing?: Ranking): Ranking;\n\n  /**\n   * adds a column to a ranking described by its column description\n   * @param ranking the ranking to add the column to\n   * @param desc the description of the column\n   * @return {Column} the newly created column or null\n   */\n  push(ranking: Ranking, desc: IColumnDesc): Column | null {\n    const r = this.create(desc);\n    if (r) {\n      ranking.push(r);\n      return r;\n    }\n    return null;\n  }\n\n  /**\n   * adds a column to a ranking described by its column description\n   * @param ranking the ranking to add the column to\n   * @param index the position to insert the column\n   * @param desc the description of the column\n   * @return {Column} the newly created column or null\n   */\n  insert(ranking: Ranking, index: number, desc: IColumnDesc) {\n    const r = this.create(desc);\n    if (r) {\n      ranking.insert(r, index);\n      return r;\n    }\n    return null;\n  }\n\n  /**\n   * creates a new unique id for a column\n   * @returns {string}\n   */\n  private nextId() {\n    return `col${this.uid++}`;\n  }\n\n  private fixDesc(desc: IColumnDesc) {\n    //hacks for provider dependent descriptors\n    if (desc.type === 'selection') {\n      (<ISelectionColumnDesc>desc).accessor = (row: IDataRow) => this.isSelected(row.i);\n      (<ISelectionColumnDesc>desc).setter = (index: number, value: boolean) => value ? this.select(index) : this.deselect(index);\n      (<ISelectionColumnDesc>desc).setterAll = (indices: IndicesArray, value: boolean) => value ? this.selectAll(indices) : this.deselectAll(indices);\n    } else if (desc.type === 'aggregate') {\n      (<IAggregateGroupColumnDesc>desc).isAggregated = (ranking: Ranking, group: IGroup) => this.getAggregationState(ranking, group);\n      (<IAggregateGroupColumnDesc>desc).setAggregated = (ranking: Ranking, group: IGroup, value: EAggregationState) => this.setAggregationState(ranking, group, value);\n    }\n    return desc;\n  }\n\n  protected cleanDesc(desc: IColumnDesc) {\n    //hacks for provider dependent descriptors\n    if (desc.type === 'selection') {\n      delete (<ISelectionColumnDesc>desc).accessor;\n      delete (<ISelectionColumnDesc>desc).setter;\n      delete (<ISelectionColumnDesc>desc).setterAll;\n    } else if (desc.type === 'aggregate') {\n      delete (<IAggregateGroupColumnDesc>desc).isAggregated;\n      delete (<IAggregateGroupColumnDesc>desc).setAggregated;\n    }\n    return desc;\n  }\n\n  /**\n   * creates an internal column model out of the given column description\n   * @param desc\n   * @returns {Column} the new column or null if it can't be created\n   */\n  create(desc: IColumnDesc): Column | null {\n    this.fixDesc(desc);\n    //find by type and instantiate\n    const type = this.columnTypes[desc.type];\n    if (type) {\n      return new type(this.nextId(), desc, this.typeFactory);\n    }\n    return null;\n  }\n\n  /**\n   * clones a column by dumping and restoring\n   * @param col\n   * @returns {Column}\n   */\n  clone(col: Column) {\n    const dump = this.dumpColumn(col);\n    return this.restoreColumn(dump);\n  }\n\n  /**\n   * restores a column from a dump\n   * @param dump\n   * @returns {Column}\n   */\n  restoreColumn(dump: any): Column {\n    const c = this.typeFactory(dump);\n    c.assignNewId(this.nextId.bind(this));\n    return c;\n  }\n\n  /**\n   * finds a column in all rankings returning the first match\n   * @param idOrFilter by id or by a filter function\n   * @returns {Column}\n   */\n  find(idOrFilter: string | ((col: Column) => boolean)): Column | null {\n    //convert to function\n    const filter = typeof (idOrFilter) === 'string' ? (col: Column) => col.id === idOrFilter : idOrFilter;\n\n    for (const ranking of this.rankings) {\n      const r = ranking.find(filter);\n      if (r) {\n        return r;\n      }\n    }\n    return null;\n  }\n\n\n  /**\n   * dumps this whole provider including selection and the rankings\n   * @returns {{uid: number, selection: number[], rankings: *[]}}\n   */\n  dump(): IDataProviderDump {\n    return {\n      '$schema': SCHEMA_REF,\n      uid: this.uid,\n      selection: this.getSelection(),\n      aggregations: map2Object(this.aggregations),\n      rankings: this.rankings.map((r) => r.dump(this.toDescRef.bind(this))),\n      showTopN: this.showTopN\n    };\n  }\n\n  /**\n   * dumps a specific column\n   */\n  dumpColumn(col: Column): IColumnDump {\n    return col.dump(this.toDescRef.bind(this));\n  }\n\n  /**\n   * for better dumping describe reference, by default just return the description\n   */\n  toDescRef(desc: any): any {\n    return desc;\n  }\n\n  /**\n   * inverse operation of toDescRef\n   */\n  fromDescRef(descRef: any): any {\n    return descRef;\n  }\n\n  restoreRanking(dump: IRankingDump) {\n    const ranking = this.cloneRanking();\n    ranking.restore(dump, this.typeFactory);\n    const idGenerator = this.nextId.bind(this);\n    ranking.children.forEach((c) => c.assignNewId(idGenerator));\n    return ranking;\n  }\n\n  restore(dump: IDataProviderDump) {\n    //clean old\n    this.clearRankings();\n\n    //restore selection\n    this.uid = dump.uid || 0;\n    if (dump.selection) {\n      dump.selection.forEach((s: number) => this.selection.add(s));\n    }\n    if (dump.showTopN != null) {\n      this.showTopN = dump.showTopN;\n    }\n    if (dump.aggregations) {\n      this.aggregations.clear();\n      if (Array.isArray(dump.aggregations)) {\n        dump.aggregations.forEach((a: string) => this.aggregations.set(a, 0));\n      } else {\n        object2Map(dump.aggregations).forEach((v, k) => this.aggregations.set(k, v));\n      }\n    }\n\n\n    //restore rankings\n    if (dump.rankings) {\n      dump.rankings.forEach((r: any) => {\n        const ranking = this.cloneRanking();\n        ranking.restore(r, this.typeFactory);\n        //if no rank column add one\n        if (!ranking.children.some((d) => d instanceof RankColumn)) {\n          ranking.insert(this.create(createRankDesc())!, 0);\n        }\n        this.insertRanking(ranking);\n      });\n    }\n\n    //assign new ids\n    const idGenerator = this.nextId.bind(this);\n    this.rankings.forEach((r) => {\n      r.children.forEach((c) => c.assignNewId(idGenerator));\n    });\n  }\n\n  abstract findDesc(ref: string): IColumnDesc | null;\n\n  /**\n   * generates a default ranking by using all column descriptions ones\n   */\n  deriveDefault(addSupportType: boolean = true) {\n    const r = this.pushRanking();\n    if (addSupportType) {\n      r.push(this.create(createAggregateDesc())!);\n      r.push(this.create(createRankDesc())!);\n      if (this.options.singleSelection !== false) {\n        r.push(this.create(createSelectionDesc())!);\n      }\n    }\n    this.getColumns().forEach((col) => {\n      const c = this.create(col);\n      if (!c || isSupportType(c)) {\n        return;\n      }\n      r.push(c);\n    });\n    return r;\n  }\n\n  isAggregated(ranking: Ranking, group: IGroup) {\n    return this.getTopNAggregated(ranking, group) >= 0;\n  }\n\n  getAggregationState(ranking: Ranking, group: IGroup) {\n    const n = this.getTopNAggregated(ranking, group);\n    return n < 0 ? EAggregationState.EXPAND : (n === 0 ? EAggregationState.COLLAPSE : EAggregationState.EXPAND_TOP_N);\n  }\n\n  setAggregated(ranking: Ranking, group: IGroup, value: boolean) {\n    return this.setAggregationState(ranking, group, value ? EAggregationState.COLLAPSE : EAggregationState.EXPAND);\n  }\n\n  setAggregationState(ranking: Ranking, group: IGroup, value: EAggregationState) {\n    this.setTopNAggregated(ranking, group, value === EAggregationState.COLLAPSE ? 0 : (value === EAggregationState.EXPAND_TOP_N ? this.showTopN  : -1));\n  }\n\n  getTopNAggregated(ranking: Ranking, group: IGroup) {\n    let g: IGroup | undefined | null = group;\n    while (g) {\n      const key = `${ranking.id}@${toGroupID(g)}`;\n      if (this.aggregations.has(key)) {\n        // propagate to leaf\n        const v = this.aggregations.get(key)!;\n        this.aggregations.set(`${ranking.id}@${toGroupID(group)}`, v);\n        return v;\n      }\n      g = g.parent;\n    }\n    return -1;\n  }\n\n  private unaggregateParents(ranking: Ranking, group: IGroup) {\n    let g: IGroup | undefined | null = group.parent;\n    while (g) {\n      this.aggregations.delete(`${ranking.id}@${toGroupID(g)}`);\n      g = g.parent;\n    }\n  }\n\n  getAggregationStrategy() {\n    return this.options.aggregationStrategy;\n  }\n\n  private initAggregateState(ranking: Ranking, groups: IGroup[]) {\n    let initial = -1;\n    switch(this.getAggregationStrategy()) {\n      case 'group':\n        initial = 0;\n        break;\n      case 'item':\n      case 'group+item':\n      case 'group+item+top':\n        initial = -1;\n        break;\n      case 'group+top+item':\n        initial = this.showTopN;\n        break;\n    }\n\n    for (const group of groups) {\n      const key = `${ranking.id}@${toGroupID(group)}`;\n      if (!this.aggregations.has(key) && initial >= 0) {\n        this.aggregations.set(key, initial);\n      }\n    }\n  }\n\n  setTopNAggregated(ranking: Ranking, group: IGroup, value: number) {\n    this.unaggregateParents(ranking, group);\n    const key = `${ranking.id}@${toGroupID(group)}`;\n    const current = this.getTopNAggregated(ranking, group);\n    if (current === value) {\n      return;\n    }\n    if (value >= 0) {\n      this.aggregations.set(key, value);\n    } else {\n      this.aggregations.delete(key);\n    }\n    this.fire([ADataProvider.EVENT_GROUP_AGGREGATION_CHANGED, ADataProvider.EVENT_DIRTY_VALUES, ADataProvider.EVENT_DIRTY], ranking, group, value);\n  }\n\n  aggregateAllOf(ranking: Ranking, aggregateAll: boolean | number | EAggregationState, groups = ranking.getGroups()) {\n    let v: number;\n    if (typeof aggregateAll === 'boolean') {\n      v = aggregateAll ? 0 : -1;\n    } else if (aggregateAll === EAggregationState.COLLAPSE) {\n      v = 0;\n    } else if (aggregateAll === EAggregationState.EXPAND) {\n      v = -1;\n    } else if (aggregateAll === EAggregationState.EXPAND_TOP_N) {\n      v = this.showTopN;\n    } else {\n      v = aggregateAll;\n    }\n\n    for(const group of groups) {\n      this.unaggregateParents(ranking, group);\n      const current = this.getTopNAggregated(ranking, group);\n      if (current === v) {\n        continue;\n      }\n      const key = `${ranking.id}@${toGroupID(group)}`;\n      if (v >= 0) {\n        this.aggregations.set(key, v);\n      } else {\n        this.aggregations.delete(key);\n      }\n    }\n    this.fire([ADataProvider.EVENT_GROUP_AGGREGATION_CHANGED, ADataProvider.EVENT_DIRTY_VALUES, ADataProvider.EVENT_DIRTY], ranking, groups, v >= 0, v);\n  }\n\n  getShowTopN() {\n    return this.showTopN;\n  }\n\n  setShowTopN(value: number) {\n    if (this.showTopN === value) {\n      return;\n    }\n    // update entries\n    for (const [k, v] of Array.from(this.aggregations.entries())) {\n      if (v === this.showTopN) {\n        this.aggregations.set(k, value);\n      }\n    }\n    this.fire([ADataProvider.EVENT_SHOWTOPN_CHANGED, ADataProvider.EVENT_DIRTY_VALUES, ADataProvider.EVENT_DIRTY], this.showTopN, this.showTopN = value);\n  }\n\n  /**\n   * sorts the given ranking and eventually return a ordering of the data items\n   * @param ranking\n   * @return {Promise<any>}\n   */\n  abstract sort(ranking: Ranking, dirtyReason: EDirtyReason[]): Promise<{groups: IOrderedGroup[], index2pos: IndicesArray}> | {groups: IOrderedGroup[], index2pos: IndicesArray};\n\n  /**\n   * returns a view in the order of the given indices\n   * @param indices\n   * @return {Promise<any>}\n   */\n  abstract view(indices: ArrayLike<number>): Promise<any[]> | any[];\n\n\n  abstract getRow(index: number): Promise<IDataRow> | IDataRow;\n\n  /**\n   * returns a data sample used for the mapping editor\n   * @param col\n   * @return {Promise<any>}\n   */\n  abstract mappingSample(col: Column): Promise<ISequence<number>> | ISequence<number>;\n\n  /**\n   * is the given row selected\n   * @param index\n   * @return {boolean}\n   */\n  isSelected(index: number) {\n    return this.selection.has(index);\n  }\n\n  /**\n   * also select the given row\n   * @param index\n   */\n  select(index: number) {\n    if (this.selection.has(index)) {\n      return; //no change\n    }\n    if (this.options.singleSelection === true && this.selection.size > 0) {\n      this.selection.clear();\n    }\n    this.selection.add(index);\n    this.fire(ADataProvider.EVENT_SELECTION_CHANGED, this.getSelection());\n  }\n\n  /**\n   * hook for selecting elements matching the given arguments\n   * @param search\n   * @param col\n   */\n  abstract searchAndJump(search: string | RegExp, col: Column): void;\n\n  jumpToNearest(indices: number[]) {\n    if (indices.length === 0) {\n      return;\n    }\n    this.fire(ADataProvider.EVENT_JUMP_TO_NEAREST, indices);\n  }\n\n  /**\n   * also select all the given rows\n   * @param indices\n   */\n  selectAll(indices: IndicesArray) {\n    if (everyIndices(indices, (i) => this.selection.has(i))) {\n      return; //no change\n    }\n    if (this.options.singleSelection === true) {\n      this.selection.clear();\n      if (indices.length > 0) {\n        this.selection.add(indices[0]);\n      }\n    } else {\n      forEachIndices(indices, (index) => {\n        this.selection.add(index);\n      });\n    }\n    this.fire(ADataProvider.EVENT_SELECTION_CHANGED, this.getSelection());\n  }\n\n  selectAllOf(ranking: Ranking) {\n    this.setSelection(Array.from(ranking.getOrder()));\n  }\n\n  /**\n   * set the selection to the given rows\n   * @param indices\n   */\n  setSelection(indices: number[]) {\n    if (indices.length === 0) {\n      return this.clearSelection();\n    }\n    if (this.selection.size === indices.length && indices.every((i) => this.selection.has(i))) {\n      return; //no change\n    }\n    this.selection.clear();\n    this.selectAll(indices);\n  }\n\n  /**\n   * toggles the selection of the given data index\n   * @param index\n   * @param additional just this element or all\n   * @returns {boolean} whether the index is currently selected\n   */\n  toggleSelection(index: number, additional = false) {\n    if (this.isSelected(index)) {\n      if (additional) {\n        this.deselect(index);\n      } else {\n        this.clearSelection();\n      }\n      return false;\n    }\n    if (additional) {\n      this.select(index);\n    } else {\n      this.setSelection([index]);\n    }\n    return true;\n  }\n\n  /**\n   * deselect the given row\n   * @param index\n   */\n  deselect(index: number) {\n    if (!this.selection.has(index)) {\n      return; //no change\n    }\n    this.selection.delete(index);\n    this.fire(ADataProvider.EVENT_SELECTION_CHANGED, this.getSelection());\n  }\n\n  /**\n   * also select all the given rows\n   * @param indices\n   */\n  deselectAll(indices: IndicesArray) {\n    if (everyIndices(indices, (i) => !this.selection.has(i))) {\n      return; //no change\n    }\n    forEachIndices(indices, (index) => {\n      this.selection.delete(index);\n    });\n    this.fire(ADataProvider.EVENT_SELECTION_CHANGED, this.getSelection());\n  }\n\n  /**\n   * returns a promise containing the selected rows\n   * @return {Promise<any[]>}\n   */\n  selectedRows(): Promise<any[]> | any[] {\n    if (this.selection.size === 0) {\n      return [];\n    }\n    return this.view(this.getSelection());\n  }\n\n  /**\n   * returns the currently selected indices\n   * @returns {Array}\n   */\n  getSelection() {\n    return Array.from(this.selection);\n  }\n\n  /**\n   * clears the selection\n   */\n  clearSelection() {\n    if (this.selection.size === 0) {\n      return; //no change\n    }\n    this.selection.clear();\n    this.fire(ADataProvider.EVENT_SELECTION_CHANGED, [], false);\n  }\n\n  /**\n   * utility to export a ranking to a table with the given separator\n   * @param ranking\n   * @param options\n   * @returns {Promise<string>}\n   */\n  exportTable(ranking: Ranking, options: Partial<IExportOptions> = {}) {\n    return Promise.resolve(this.view(ranking.getOrder())).then((data) => exportRanking(ranking, data, options));\n  }\n}\n\nexport default ADataProvider;\n","import {ActionColumn, AggregateGroupColumn, AnnotateColumn, BooleanColumn, BooleansColumn, BoxPlotColumn, CategoricalColumn, CategoricalMapColumn, CategoricalsColumn, DateColumn, DatesColumn, DatesMapColumn, GroupColumn, HierarchyColumn, ImpositionBoxPlotColumn, ImpositionCompositeColumn, ImpositionCompositesColumn, LinkColumn, LinkMapColumn, LinksColumn, NestedColumn, NumberColumn, NumberMapColumn, NumbersColumn, OrdinalColumn, RankColumn, ReduceColumn, ScriptColumn, SelectionColumn, SetColumn, StackColumn, StringColumn, StringMapColumn, StringsColumn} from './';\n\n/**\n * a map of all known column types\n */\nexport function models() {\n  return {\n    actions: ActionColumn,\n    aggregate: AggregateGroupColumn,\n    annotate: AnnotateColumn,\n    boolean: BooleanColumn,\n    booleans: BooleansColumn,\n    boxplot: BoxPlotColumn,\n    categorical: CategoricalColumn,\n    categoricalMap: CategoricalMapColumn,\n    categoricals: CategoricalsColumn,\n    date: DateColumn,\n    dateMap: DatesMapColumn,\n    dates: DatesColumn,\n    group: GroupColumn,\n    hierarchy: HierarchyColumn,\n    imposition: ImpositionCompositeColumn,\n    impositionBoxPlot: ImpositionBoxPlotColumn,\n    impositions: ImpositionCompositesColumn,\n    reduce: ReduceColumn,\n    nested: NestedColumn,\n    number: NumberColumn,\n    numbers: NumbersColumn,\n    numberMap: NumberMapColumn,\n    ordinal: OrdinalColumn,\n    rank: RankColumn,\n    script: ScriptColumn,\n    selection: SelectionColumn,\n    set: SetColumn,\n    stack: StackColumn,\n    string: StringColumn,\n    stringMap: StringMapColumn,\n    strings: StringsColumn,\n    link: LinkColumn,\n    linkMap: LinkMapColumn,\n    links: LinksColumn\n  };\n}\n","import {IDataRow} from '../model';\n\n\n/**\n * @internal\n */\nexport function isComplexAccessor(column: any) {\n  // something like a.b or a[4]\n  return typeof column === 'string' && column.includes('.');\n}\n\n\n/**\n * @internal\n */\nexport function rowComplexGetter(row: IDataRow, desc: any) {\n  const column = desc.column;\n  if (row.hasOwnProperty(column)) { // well complex but a direct hit\n    return row.v[column];\n  }\n  const resolve = (obj: any, col: string) => {\n    if (obj === undefined) {\n      return obj; // propagate invalid values\n    }\n    if (/\\d+/.test(col)) { // index\n      return obj[+col];\n    }\n    return obj[col];\n  };\n  return column.split('.').reduce(resolve, row.v);\n}\n\n\n/**\n * simple row getter\n * @internal\n */\nexport function rowGetter(row: IDataRow, desc: any) {\n  return row.v[desc.column];\n}\n\n\n/**\n * @internal\n */\nexport function rowGuessGetter(row: IDataRow, desc: any) {\n  const column = desc.column;\n  if (isComplexAccessor(column)) {\n    return rowComplexGetter(row, desc);\n  }\n  return rowGetter(row, desc);\n}\n\n","import {IColumnDesc, Ranking} from '../model';\nimport ADataProvider from './ADataProvider';\nimport {IDataProviderDump, IDataProviderOptions} from './interfaces';\nimport {isComplexAccessor, rowGetter, rowComplexGetter, rowGuessGetter} from './accessor';\n\n\nfunction injectAccessor(d: any) {\n  d.accessor = d.accessor || (d.column ? (isComplexAccessor(d.column) ? rowComplexGetter : rowGetter) : rowGuessGetter);\n  d.label = d.label || d.column;\n  return d;\n}\n\n/**\n * common base implementation of a DataProvider with a fixed list of column descriptions\n */\nabstract class ACommonDataProvider extends ADataProvider {\n\n  private rankingIndex = 0;\n\n  constructor(private columns: IColumnDesc[] = [], options: Partial<IDataProviderOptions> = {}) {\n    super(options);\n    //generate the accessor\n    columns.forEach(injectAccessor);\n  }\n\n  cloneRanking(existing?: Ranking) {\n    const id = this.nextRankingId();\n    const clone = new Ranking(id);\n\n    if (existing) { //copy the ranking of the other one\n      //TODO better cloning\n      existing.children.forEach((child) => {\n        this.push(clone, child.desc);\n      });\n    }\n\n    return clone;\n  }\n\n  /**\n   * adds another column description to this data provider\n   * @param column\n   */\n  pushDesc(column: IColumnDesc) {\n    injectAccessor(column);\n    this.columns.push(column);\n    this.fire(ADataProvider.EVENT_ADD_DESC, column);\n  }\n\n  clearColumns() {\n    this.clearRankings();\n    this.columns.splice(0, this.columns.length);\n    this.fire(ADataProvider.EVENT_CLEAR_DESC);\n  }\n\n  getColumns(): IColumnDesc[] {\n    return this.columns.slice();\n  }\n\n  findDesc(ref: string) {\n    return this.columns.filter((c) => (<any>c).column === ref)[0];\n  }\n\n  /**\n   * identify by the tuple type@columnname\n   * @param desc\n   * @returns {string}\n   */\n  toDescRef(desc: any): any {\n    return typeof desc.column !== 'undefined' ? `${desc.type}@${desc.column}` : this.cleanDesc(Object.assign(desc));\n  }\n\n  fromDescRef(descRef: any): any {\n    if (typeof (descRef) === 'string') {\n      return this.columns.find((d: any) => `${d.type}@${d.column}` === descRef || d.type === descRef);\n    }\n    const existing = this.columns.find((d) => descRef.column === (<any>d).column && descRef.label === d.label && descRef.type === d.type);\n    if (existing) {\n      return existing;\n    }\n    return descRef;\n  }\n\n  restore(dump: IDataProviderDump) {\n    super.restore(dump);\n    this.rankingIndex = 1 + Math.max(...this.getRankings().map((r) => +r.id.substring(4)));\n  }\n\n  nextRankingId() {\n    return `rank${this.rankingIndex++}`;\n  }\n}\n\nexport default ACommonDataProvider;\n","import {createIndexArray, ILookUpArray} from '../internal';\nimport {FIRST_IS_MISSING, FIRST_IS_NAN, ECompareValueType, ICompareValue, Column, UIntTypedArray, Ranking, IDataRow} from '../model';\n\n\nconst missingUInt8 = FIRST_IS_MISSING > 0 ? 255 : 0;\nconst missingBinary = missingUInt8;\nconst missingUInt16 = FIRST_IS_MISSING > 0 ? 65535 : 0; // max or 0\nconst missingUInt32 = FIRST_IS_MISSING > 0 ? 4294967295 : 0; // max or 0\nconst missingInt8 = FIRST_IS_MISSING > 0 ? 127 : -128; // max or min\nconst missingInt16 = FIRST_IS_MISSING > 0 ? 32767 : -32768; // max or min\nconst missingInt32 = FIRST_IS_MISSING > 0 ? 2147483647 : -2147483648; // max or min\nconst missingFloat = FIRST_IS_NAN > 0 ? Number.POSITIVE_INFINITY : Number.NEGATIVE_INFINITY;\nconst missingFloatAsc = FIRST_IS_MISSING > 0 ? Number.POSITIVE_INFINITY : Number.NEGATIVE_INFINITY;\nconst missingString = FIRST_IS_MISSING > 0 ? '\\uffff' : '\\u0000'; // first or last character\n\n\nfunction chooseMissingByLength(length: number) {\n  if (length <= 255) {\n    return missingBinary;\n  }\n  if (length <= 65535) {\n    return missingUInt16;\n  }\n  return missingUInt32;\n}\n\n\nfunction toCompareLookUp(rawLength: number, type: ECompareValueType): ILookUpArray {\n  switch (type) {\n    case ECompareValueType.COUNT:\n      return createIndexArray(rawLength + 1);\n    case ECompareValueType.BINARY:\n    case ECompareValueType.UINT8:\n      return new Uint8Array(rawLength);\n    case ECompareValueType.UINT16:\n      return new Uint16Array(rawLength);\n    case ECompareValueType.UINT32:\n      return new Uint32Array(rawLength);\n    case ECompareValueType.INT8:\n      return new Int8Array(rawLength);\n    case ECompareValueType.INT16:\n      return new Int16Array(rawLength);\n    case ECompareValueType.INT32:\n      return new Int32Array(rawLength);\n    case ECompareValueType.STRING:\n      return <string[]>[];\n    case ECompareValueType.FLOAT_ASC:\n    case ECompareValueType.FLOAT:\n      return new Float32Array(rawLength);\n    case ECompareValueType.DOUBLE_ASC:\n    case ECompareValueType.DOUBLE:\n      return new Float64Array(rawLength);\n  }\n}\n\nfunction createSetter(type: ECompareValueType, lookup: ILookUpArray, missingCount: number): ((index: number, v: ICompareValue) => void) {\n  switch (type) {\n    case ECompareValueType.BINARY: // just 0 or 1 -> convert to 0=-Ininity 1 2 255=+Infinity\n      return (index, v) => lookup[index] = v == null || isNaN(<number>v) ? missingBinary : (<number>v) + 1;\n    case ECompareValueType.COUNT: // uint32\n      return (index, v) => lookup[index] = v == null || isNaN(<number>v) ? missingCount : (<number>v) + 1;\n    case ECompareValueType.UINT8: // shift by one to have 0 for -Inf\n      return (index, v) => lookup[index] = v == null || isNaN(<number>v) ? missingInt8 : (<number>v) + 1;\n    case ECompareValueType.UINT16: // shift by one to have 0 for -Inf\n      return (index, v) => lookup[index] = v == null || isNaN(<number>v) ? missingInt16 : (<number>v) + 1;\n    case ECompareValueType.UINT32: // shift by one to have 0 for -Inf\n      return (index, v) => lookup[index] = v == null || isNaN(<number>v) ? missingInt32 : (<number>v) + 1;\n    case ECompareValueType.INT8:\n      return (index, v) => lookup[index] = v == null || isNaN(<number>v) ? missingInt8 : (<number>v);\n    case ECompareValueType.INT16:\n      return (index, v) => lookup[index] = v == null || isNaN(<number>v) ? missingInt16 : (<number>v);\n    case ECompareValueType.INT32:\n      return (index, v) => lookup[index] = v == null || isNaN(<number>v) ? missingInt32 : (<number>v);\n    case ECompareValueType.STRING:\n      return (index, v) => lookup[index] = v == null || v === '' ? missingString : v;\n    case ECompareValueType.FLOAT:\n    case ECompareValueType.DOUBLE:\n      return (index, v) => lookup[index] = v == null || isNaN(<number>v) ? missingFloat : v;\n    case ECompareValueType.FLOAT_ASC:\n    case ECompareValueType.DOUBLE_ASC:\n      return (index, v) => lookup[index] = v == null || isNaN(<number>v) ? missingFloatAsc : v;\n  }\n}\n\nexport class CompareLookup {\n  private readonly criteria: {col: Column, valueCache?(dataIndex: number): any}[] = [];\n  private readonly data: {asc: boolean, v: ECompareValueType, lookup: ILookUpArray, setter: (dataIndex: number, value: ICompareValue) => void}[] = [];\n\n  constructor(rawLength: number, isSorting: boolean, ranking: Ranking, valueCaches?: (col: Column) => (undefined | ((i: number) => any))) {\n    const missingCount = chooseMissingByLength(rawLength + 1); // + 1 for the value shift to have 0 as start\n\n    for (const c of (isSorting ? ranking.getSortCriteria() : ranking.getGroupSortCriteria())) {\n      const v = (isSorting ? c.col.toCompareValueType() : c.col.toCompareGroupValueType());\n      const valueCache = valueCaches ? valueCaches(c.col) : undefined;\n      this.criteria.push({col: c.col, valueCache});\n      if (!Array.isArray(v)) {\n        const lookup = toCompareLookUp(rawLength, v);\n        this.data.push({asc: c.asc, v, lookup, setter: createSetter(v, lookup, missingCount)});\n        continue;\n      }\n      for (const vi of v) {\n        const lookup = toCompareLookUp(rawLength, vi);\n        this.data.push({asc: c.asc, v: vi, lookup, setter: createSetter(vi, lookup, missingCount)});\n      }\n    }\n\n    if (isSorting) {\n      return;\n    }\n\n    {\n      const v = ECompareValueType.STRING;\n      const lookup = toCompareLookUp(rawLength, v);\n      this.data.push({asc: true, v, lookup, setter: createSetter(v, lookup, missingCount)});\n    }\n  }\n\n  get sortOrders() {\n    return this.data.map((d) => ({asc: d.asc, lookup: d.lookup}));\n  }\n\n  get transferAbles() {\n    // so a typed array\n    return this.data.map((d) => d.lookup).filter((d): d is UIntTypedArray | Float32Array => !Array.isArray(d)).map((d) => d.buffer);\n  }\n\n  push(row: IDataRow) {\n    let i = 0;\n    for (const c of this.criteria) {\n      const r = c.col.toCompareValue(row, c.valueCache ? c.valueCache(row.i) : undefined);\n      if (!Array.isArray(r)) {\n        this.data[i++].setter(row.i, r);\n        continue;\n      }\n      for (const ri of r) {\n        this.data[i++].setter(row.i, ri);\n      }\n    }\n  }\n\n  pushValues(dataIndex: number, vs: ICompareValue[]) {\n    for (let i = 0; i < vs.length; ++i) {\n      this.data[i].setter(dataIndex, vs[i]);\n    }\n  }\n\n  free() {\n    // free up to save memory\n    this.data.splice(0, this.data.length);\n  }\n}\n","import {IAbortAblePromise, ABORTED, IAbortAblePromiseBase} from 'lineupengine';\nexport {ABORTED} from 'lineupengine';\n\n/**\n * @internal\n */\nexport interface IPoorManIdleDeadline {\n  didTimeout: boolean;\n  timeRemaining(): number;\n}\n\n/**\n * helper since not part of the typings\n * @internal\n */\nexport interface IPoorManIdleCallback {\n  requestIdleCallback(callback: (deadline: IPoorManIdleDeadline) => void, options?: {timeout: number}): number;\n\n  clearIdleCallback(callbackId: number): void;\n}\n\n/**\n * @internal\n */\nexport interface ITask<T> {\n  /**\n   * external task id\n   */\n  id: string;\n  /**\n   * iterator for the incremental task, return null for another round\n   */\n  it: Iterator<T | PromiseLike<T> | null>;\n  /**\n   * function to the resolve the resulting promise\n   */\n  resolve(r: T | PromiseLike<T> | symbol): void;\n  /**\n   * the resulting promise\n   */\n  result: PromiseLike<T | symbol>;\n\n  /**\n   * aborts this task\n   */\n  abort: () => void;\n\n  isAborted: boolean;\n}\n\n/**\n * iterator result for another round\n * @internal\n */\nexport const ANOTHER_ROUND = {\n  value: null,\n  done: false\n};\n\n/**\n * iterator for just one entry\n * @internal\n */\nexport function oneShotIterator<T>(calc: () => T): Iterator<T> {\n  return {\n    next: () => ({done: true, value: calc()})\n  };\n}\n\n\nfunction thenFactory<T>(wrappee: PromiseLike<T>, abort: () => void, isAborted: () => boolean) {\n  function then<TResult1 = T | symbol, TResult2 = never>(onfulfilled?: ((value: T | symbol) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): IAbortAblePromiseBase<TResult1 | TResult2> {\n    const r = wrappee.then(onfulfilled, onrejected);\n    return {\n      then: <any>thenFactory(r, abort, isAborted),\n      abort,\n      isAborted\n    };\n  }\n  return then;\n}\n\n/**\n * task scheduler for running tasks in idle callbacks\n * @internal\n */\nexport default class TaskScheduler {\n  private tasks: ITask<any>[] = [];\n  // idle callback id\n  private taskId: number = -1;\n\n  private runTasks = (deadline: IPoorManIdleDeadline) => {\n    // while more tasks and not timed out\n    while (this.tasks.length > 0 && (deadline.didTimeout || deadline.timeRemaining() > 0)) {\n      const task = this.tasks.shift()!;\n\n      let r = task.it.next();\n      // call next till done or ran out of time\n      while (!r.done && (deadline.didTimeout || deadline.timeRemaining() > 0)) {\n        r = task.it.next();\n      }\n\n      if (r.done) {\n        // resolve async\n        requestAnimationFrame(() => task.resolve(r.value));\n      } else {\n        // reschedule again\n        this.tasks.unshift(task);\n      }\n    }\n\n    this.taskId = -1;\n    this.reSchedule();\n  }\n\n  private reSchedule() {\n    if (this.tasks.length === 0 || this.taskId > -1) {\n      return;\n    }\n\n    const ww = (<IPoorManIdleCallback><any>self);\n    if (ww.requestIdleCallback) {\n      this.taskId = ww.requestIdleCallback(this.runTasks);\n    } else {\n      this.taskId = self.setTimeout(this.runTasks, 1);\n    }\n  }\n\n  /**\n   * pushes a task with multi hops using an iterator\n   * @param id task id\n   * @param it iterator to execute\n   */\n  pushMulti<T>(id: string, it: Iterator<T | PromiseLike<T> | null>, abortAble = true): IAbortAblePromise<T> {\n    // abort task with the same id\n    const abort = () => {\n      const index = this.tasks.findIndex((d) => d.id === id);\n      if (index < 0) {\n        return; // too late or none\n      }\n      const task = this.tasks[index];\n      this.tasks.splice(index, 1);\n\n      task.isAborted = true;\n      task.resolve(ABORTED);\n    };\n\n    {\n      // abort existing\n      const index = this.tasks.findIndex((d) => d.id === id);\n      if (index >= 0) {\n        const task = this.tasks[index];\n        task.abort();\n      }\n    }\n\n    let resolve: (value: T | symbol) => void;\n\n    const p = new Promise<T | symbol>((r) => {\n      // called during constructor\n      resolve = r;\n    });\n\n    const task: ITask<T> = {\n      id,\n      it,\n      result: p,\n      abort,\n      isAborted: false,\n      resolve: resolve!\n    };\n    const isAborted = () => task.isAborted;\n\n    this.tasks.push(task);\n\n    this.reSchedule();\n\n    const abortOrDummy = abortAble ? abort : () => undefined;\n    const isAbortedOrDummy = abortAble ? isAborted : () => false;\n\n    return {\n      then: thenFactory(p, abortOrDummy, isAbortedOrDummy),\n      abort: abortOrDummy,\n      isAborted: isAbortedOrDummy\n    };\n  }\n\n  /**\n   * pushes a simple task\n   * @param id task id\n   * @param calc task function\n   */\n  push<T>(id: string, calc: () => T | PromiseLike<T>): IAbortAblePromise<T> {\n    return this.pushMulti(id, oneShotIterator(calc));\n  }\n\n  /**\n   * abort a task with the given id\n   * @param id task id\n   */\n  abort(id: string) {\n    const index = this.tasks.findIndex((d) => d.id === id);\n    if (index < 0) {\n      return false; // too late or none\n    }\n    const task = this.tasks[index];\n    task.abort();\n    return true;\n  }\n\n  abortAll(filter: (task: ITask<any>) => boolean) {\n    const abort = this.tasks.filter(filter);\n    if (abort.length === 0) {\n      return;\n    }\n    this.tasks = this.tasks.filter((d) => !filter(d));\n    for (const task of abort) {\n      task.resolve(ABORTED);\n      task.abort();\n    }\n  }\n\n  clear() {\n    if (this.taskId === -1) {\n      return;\n    }\n    const ww = (<IPoorManIdleCallback><any>self);\n    if (ww.requestIdleCallback) {\n      ww.clearIdleCallback(this.taskId);\n    } else {\n      self.clearTimeout(this.taskId);\n    }\n    this.taskId = -1;\n\n    this.tasks.splice(0, this.tasks.length).forEach((d) => {\n      d.resolve(ABORTED);\n      d.abort();\n    });\n  }\n}\n","import {abortAbleAll, IAbortAblePromise} from 'lineupengine';\nimport {ANOTHER_ROUND} from '../internal/scheduler';\nimport {IForEachAble, lazySeq, boxplotBuilder, categoricalStatsBuilder, categoricalValueCacheBuilder, dateStatsBuilder, dateValueCacheBuilder, IAdvancedBoxPlotData, ICategoricalStatistics, IDateStatistics, IStatistics, normalizedStatsBuilder, dateValueCache2Value, categoricalValueCache2Value, joinIndexArrays, IBuilder, ISequence} from '../internal';\nimport {CategoricalColumn, Column, ICompareValue, DateColumn, ICategoricalLikeColumn, IDataRow, IDateColumn, IGroup, ImpositionCompositeColumn, IndicesArray, INumberColumn, NumberColumn, OrdinalColumn, Ranking, UIntTypedArray, ICategory} from '../model';\nimport {IRenderTask, IRenderTasks} from '../renderer';\nimport {CompareLookup} from './sort';\n\n\n/**\n * a render task that is already resolved\n */\nexport class TaskNow<T> implements IRenderTask<T> {\n  constructor(public readonly v: T) {\n\n  }\n\n  then<U = void>(onfullfilled: (value: T) => U) {\n    return onfullfilled(this.v);\n  }\n}\n\n/**\n * factory function for\n */\nexport function taskNow<T>(v: T) {\n  return new TaskNow(v);\n}\n\n/**\n * a render task based on an abortable promise\n */\nexport class TaskLater<T> implements IRenderTask<T> {\n  constructor(public readonly v: IAbortAblePromise<T>) {\n\n  }\n\n  then<U = void>(onfullfilled: (value: T | symbol) => U): IAbortAblePromise<U> {\n    return this.v.then(onfullfilled);\n  }\n}\n\nexport function taskLater<T>(v: IAbortAblePromise<T>) {\n  return new TaskLater(v);\n}\n\n/**\n * similar to Promise.all\n */\nexport function tasksAll<T>(tasks: IRenderTask<T>[]): IRenderTask<T[]> {\n  if (tasks.every((t) => t instanceof TaskNow)) {\n    return taskNow(tasks.map((d) => (<TaskNow<T>>d).v));\n  }\n  return taskLater(abortAbleAll((<(TaskNow<T> | TaskLater<T>)[]>tasks).map((d) => d.v)));\n}\n\n\n\nexport interface IRenderTaskExectutor extends IRenderTasks {\n  setData(data: IDataRow[]): void;\n\n  dirtyColumn(col: Column, type: 'data' | 'summary' | 'group'): void;\n  dirtyRanking(ranking: Ranking, type: 'data' | 'summary' | 'group'): void;\n\n  groupCompare(ranking: Ranking, group: IGroup, rows: IndicesArray): IRenderTask<ICompareValue[]>;\n\n  preCompute(ranking: Ranking, groups: {rows: IndicesArray, group: IGroup}[], maxDataIndex: number): void;\n  preComputeCol(col: Column): void;\n  preComputeData(ranking: Ranking): void;\n  copyData2Summary(ranking: Ranking): void;\n  copyCache(col: Column, from: Column): void;\n\n  sort(ranking: Ranking, group: IGroup, indices: IndicesArray, singleCall: boolean, maxDataIndex: number, lookups?: CompareLookup): Promise<IndicesArray>;\n\n  terminate(): void;\n\n  valueCache(col: Column): undefined | ((dataIndex: number) => any);\n}\n\nexport class MultiIndices {\n  private _joined: IndicesArray | null = null;\n\n  constructor(public readonly indices: IndicesArray[], private readonly maxDataIndex: number) {\n\n  }\n\n  get joined() {\n    if (this.indices.length === 1) {\n      return this.indices[0];\n    }\n    if (this.indices.length === 0) {\n      return new Uint8Array(0);\n    }\n    if (this._joined) {\n      return this._joined;\n    }\n    return this._joined = joinIndexArrays(this.indices, this.maxDataIndex);\n  }\n}\n\n/**\n * number of data points to build per iteration / chunk\n */\nconst CHUNK_SIZE = 100;\n\n\nexport class ARenderTasks {\n  protected readonly valueCacheData = new Map<string, Float32Array | UIntTypedArray | Int32Array | Float64Array>();\n\n  protected readonly byIndex = (i: number) => this.data[i];\n\n  constructor(protected data: IDataRow[] = []) {\n\n  }\n\n\n  protected byOrder(indices: IndicesArray): ISequence<IDataRow> {\n    return lazySeq(indices).map(this.byIndex);\n  }\n\n  protected byOrderAcc<T>(indices: IndicesArray, acc: (row: IDataRow) => T) {\n    return lazySeq(indices).map((i) => acc(this.data[i]));\n  }\n\n  /**\n   * builder factory to create an iterator that can be used to schedule\n   * @param builder the builder to use\n   * @param order the order to iterate over\n   * @param acc the accessor to get the value out of the data\n   * @param build optional build mapper\n   */\n  private builder<T, BR, B extends {push: (v: T) => void, build: () => BR}, R = BR>(builder: B, order: IndicesArray | null | MultiIndices, acc: (dataIndex: number) => T, build?: (r: BR) => R): Iterator<R | null> {\n    let i = 0;\n\n    // no indices given over the whole data\n    const nextData = (currentChunkSize: number = CHUNK_SIZE) => {\n      let chunkCounter = currentChunkSize;\n      const data = this.data;\n      for (; i < data.length && chunkCounter > 0; ++i, --chunkCounter) {\n        builder.push(acc(i));\n      }\n      if (i < data.length) { // need another round\n        return ANOTHER_ROUND;\n      }\n      // done\n      return {\n        done: true,\n        value: build ? build(builder.build()) : <R><any>builder.build()\n      };\n    };\n\n    let o = 0;\n    const orders = order instanceof MultiIndices ? order.indices : [order];\n\n    const nextOrder = (currentChunkSize: number = CHUNK_SIZE) => {\n      let chunkCounter = currentChunkSize;\n\n      while (o < orders.length) {\n        const actOrder = orders[o]!;\n        for (; i < actOrder.length && chunkCounter > 0; ++i, --chunkCounter) {\n          builder.push(acc(actOrder[i]));\n        }\n        if (i < actOrder.length) { // need another round\n          return ANOTHER_ROUND;\n        }\n        // done with this order\n        o++;\n        i = 0;\n      }\n      return {\n        done: true,\n        value: build ? build(builder.build()) : <R><any>builder.build()\n      };\n    };\n    return {next: order == null ? nextData : nextOrder};\n  }\n\n  private builderForEach<T, BR, B extends {pushAll: (v: IForEachAble<T>) => void, build: () => BR}, R = BR>(builder: B, order: IndicesArray | null | MultiIndices, acc: (dataIndex: number) => IForEachAble<T>, build?: (r: BR) => R): Iterator<R | null> {\n    return this.builder({\n      push: builder.pushAll,\n      build: builder.build\n    }, order, acc, build);\n  }\n\n  protected boxplotBuilder<R = IAdvancedBoxPlotData>(order: IndicesArray | null | MultiIndices, col: INumberColumn, raw?: boolean, build?: (stat: IAdvancedBoxPlotData) => R) {\n    const b = boxplotBuilder();\n    return this.numberStatsBuilder(b, order, col, raw, build);\n  }\n\n  protected normalizedStatsBuilder<R = IStatistics>(order: IndicesArray | null | MultiIndices, col: INumberColumn, numberOfBins: number, raw?: boolean, build?: (stat: IStatistics) => R) {\n    const b = normalizedStatsBuilder(numberOfBins);\n    return this.numberStatsBuilder(b, order, col, raw, build);\n  }\n\n  private numberStatsBuilder<R, B extends IBuilder<number, BR>, BR>(b: B, order: IndicesArray | null | MultiIndices, col: INumberColumn, raw?: boolean, build?: (stat: BR) => R) {\n    if (col instanceof NumberColumn || col instanceof OrdinalColumn || col instanceof ImpositionCompositeColumn) {\n      const key = raw ? `${col.id}:r` : col.id;\n      const dacc: (i: number) => number = raw ? (i) => col.getRawNumber(this.data[i]) : (i) => col.getNumber(this.data[i]);\n\n      if (order == null && !this.valueCacheData.has(key)) {\n        // build and valueCache\n        const vs = new Float32Array(this.data.length);\n        let i = 0;\n        return this.builder({\n          push: (v) => {\n            b.push(v);\n            vs[i++] = v;\n          },\n          build: () => {\n            this.setValueCacheData(key, vs);\n            return b.build();\n          }\n        }, null, dacc, build);\n      }\n\n      const cache = this.valueCacheData.get(key);\n      const acc: (i: number) => number = cache ? (i) => cache[i] : dacc;\n      return this.builder(b, order, acc, build);\n    }\n    const acc: (i: number) => IForEachAble<number> = raw ? (i) => col.iterRawNumber(this.data[i]) : (i) => col.iterNumber(this.data[i]);\n    return this.builderForEach(b, order, acc, build);\n  }\n\n  protected dateStatsBuilder<R = IDateStatistics>(order: IndicesArray | null | MultiIndices, col: IDateColumn, template?: IDateStatistics, build?: (stat: IDateStatistics) => R) {\n    const b = dateStatsBuilder(template);\n    if (col instanceof DateColumn) {\n      if (order == null) {\n        // build and valueCache\n        const vs = dateValueCacheBuilder(this.data.length);\n        return this.builder({\n          push: (v) => {\n            b.push(v);\n            vs.push(v);\n          },\n          build: () => {\n            this.setValueCacheData(col.id, vs.cache);\n            return b.build();\n          }\n        }, null, (i: number) => col.getDate(this.data[i]), build);\n      }\n      const cache = this.valueCacheData.get(col.id);\n      const acc: (i: number) => Date | null = cache ? (i) => dateValueCache2Value(cache[i]) : (i) => col.getDate(this.data[i]);\n      return this.builder(b, order, acc, build);\n    }\n    return this.builderForEach(b, order, (i: number) => col.iterDate(this.data[i]), build);\n  }\n\n  protected categoricalStatsBuilder<R = ICategoricalStatistics>(order: IndicesArray | null | MultiIndices, col: ICategoricalLikeColumn, build?: (stat: ICategoricalStatistics) => R) {\n    const b = categoricalStatsBuilder(col.categories);\n    if (col instanceof CategoricalColumn || col instanceof OrdinalColumn) {\n      if (order == null) {\n        // build and valueCache\n        const vs = categoricalValueCacheBuilder(this.data.length, col.categories);\n        return this.builder({\n          push: (v) => {\n            b.push(v);\n            vs.push(v);\n          },\n          build: () => {\n            this.setValueCacheData(col.id, vs.cache);\n            return b.build();\n          }\n        }, null, (i: number) => col.getCategory(this.data[i]), build);\n      }\n      const cache = this.valueCacheData.get(col.id);\n      const acc: (i: number) => ICategory | null = cache ? (i) => categoricalValueCache2Value(cache[i], col.categories) : (i) => col.getCategory(this.data[i]);\n      return this.builder(b, order, acc, build);\n    }\n    return this.builderForEach(b, order, (i: number) => col.iterCategory(this.data[i]), build);\n  }\n\n  dirtyColumn(col: Column, type: 'data' | 'summary' | 'group') {\n    if (type !== 'data') {\n      return;\n    }\n    this.valueCacheData.delete(col.id);\n    this.valueCacheData.delete(`${col.id}:r`);\n  }\n\n  protected setValueCacheData(key: string, value: Float32Array | UIntTypedArray | Int32Array | Float64Array | null) {\n    if (value == null) {\n      this.valueCacheData.delete(key);\n    } else {\n      this.valueCacheData.set(key, value);\n    }\n  }\n\n  valueCache(col: Column) {\n    const v = this.valueCacheData.get(col.id);\n    if (!v) {\n      return undefined;\n    }\n    if (col instanceof DateColumn) {\n      return (dataIndex: number) => dateValueCache2Value(v[dataIndex]);\n    }\n    if (col instanceof CategoricalColumn || col instanceof OrdinalColumn) {\n      return (dataIndex: number) => categoricalValueCache2Value(v[dataIndex], col.categories);\n    }\n    return (dataIndex: number) => v[dataIndex];\n  }\n}\n","import Column, {IDataRow, Ranking, IndicesArray, IGroup, IOrderedGroup, INumberColumn, IDateColumn, ICategoricalLikeColumn, ICompareValue} from '../model';\nimport {ARenderTasks, IRenderTaskExectutor, taskNow} from './tasks';\nimport {ISequence, toIndexArray, sortComplex, getNumberOfBins} from '../internal';\nimport {CompareLookup} from './sort';\nimport {IRenderTask} from '..';\n\n/**\n * @internal\n */\nexport function sortDirect(indices: IndicesArray, maxDataIndex: number, lookups?: CompareLookup) {\n  const order = toIndexArray(indices, maxDataIndex);\n  if (lookups) {\n    sortComplex(order, lookups.sortOrders);\n  }\n  return order;\n}\n\n/**\n * @internal\n */\nexport class DirectRenderTasks extends ARenderTasks implements IRenderTaskExectutor {\n\n  protected readonly cache = new Map<string, any>();\n\n  setData(data: IDataRow[]) {\n    this.data = data;\n    this.cache.clear();\n    this.valueCacheData.clear();\n  }\n\n\n  dirtyColumn(col: Column, type: 'data' | 'summary' | 'group') {\n    super.dirtyColumn(col, type);\n\n    if (type === 'group') {\n      return; // not cached\n    }\n    this.cache.delete(`${col.id}:summary`);\n    this.cache.delete(`${col.id}:summary:raw`);\n    this.cache.delete(`${col.id}:summary:b`);\n    this.cache.delete(`${col.id}:summary:braw`);\n\n    if (type === 'summary') {\n      return;\n    }\n    this.cache.delete(`${col.id}:data`);\n    this.cache.delete(`${col.id}:data:raw`);\n    this.cache.delete(`${col.id}:data:b`);\n    this.cache.delete(`${col.id}:data:braw`);\n  }\n\n  dirtyRanking(ranking: Ranking, type: 'data' | 'summary' | 'group') {\n    for (const col of ranking.flatColumns) {\n      this.dirtyColumn(col, type);\n    }\n  }\n\n  preCompute() {\n    // dummy\n  }\n\n  preComputeData() {\n    // dummy\n  }\n\n  preComputeCol() {\n    // dummy\n  }\n\n  copyData2Summary() {\n    // dummy\n  }\n\n  copyCache(col: Column, from: Column) {\n    const fromPrefix = `${from.id}:`;\n\n    for (const key of Array.from(this.cache.keys()).sort()) {\n      if (!key.startsWith(fromPrefix)) {\n        continue;\n      }\n      const tkey = `${col.id}:${key.slice(fromPrefix.length)}`;\n      this.cache.set(tkey, this.cache.get(key)!);\n    }\n  }\n\n  sort(_ranking: Ranking, _group: IGroup, indices: IndicesArray, _singleCall: boolean, maxDataIndex: number, lookups?: CompareLookup) {\n    return Promise.resolve(sortDirect(indices, maxDataIndex, lookups));\n  }\n\n  groupCompare(ranking: Ranking, group: IGroup, rows: IndicesArray): IRenderTask<ICompareValue[]> {\n    const rg = ranking.getGroupSortCriteria();\n    if (rg.length === 0) {\n      return taskNow([group.name.toLowerCase()]);\n    }\n    const o = this.byOrder(rows);\n    const vs: ICompareValue[] = [];\n    for (const s of rg) {\n      const r = s.col.toCompareGroupValue(o, group);\n      if (Array.isArray(r)) {\n        vs.push(...r);\n      } else {\n        vs.push(r);\n      }\n    }\n    vs.push(group.name.toLowerCase());\n    return taskNow(vs);\n  }\n\n  groupRows<T>(_col: Column, group: IOrderedGroup, _key: string, compute: (rows: ISequence<IDataRow>) => T): IRenderTask<T> {\n    return taskNow(compute(this.byOrder(group.order)));\n  }\n\n  groupExampleRows<T>(_col: Column, group: IOrderedGroup, _key: string, compute: (rows: ISequence<IDataRow>) => T): IRenderTask<T> {\n    return taskNow(compute(this.byOrder(group.order.slice(0, 5))));\n  }\n\n  groupBoxPlotStats(col: Column & INumberColumn, group: IOrderedGroup, raw?: boolean) {\n    const {summary, data} = this.summaryBoxPlotStatsD(col, raw);\n    return taskNow({group: this.boxplotBuilder(group.order, col, raw).next(Infinity).value!, summary, data});\n  }\n\n  groupNumberStats(col: Column & INumberColumn, group: IOrderedGroup, raw?: boolean) {\n    const {summary, data} = this.summaryNumberStatsD(col, raw);\n    return taskNow({group: this.normalizedStatsBuilder(group.order, col, summary.hist.length, raw).next(Infinity).value!, summary, data});\n  }\n\n  groupCategoricalStats(col: Column & ICategoricalLikeColumn, group: IOrderedGroup) {\n    const {summary, data} = this.summaryCategoricalStatsD(col);\n    return taskNow({group: this.categoricalStatsBuilder(group.order, col).next(Infinity).value!, summary, data});\n  }\n\n  groupDateStats(col: Column & IDateColumn, group: IOrderedGroup) {\n    const {summary, data} = this.summaryDateStatsD(col);\n    return taskNow({group: this.dateStatsBuilder(group.order, col, summary).next(Infinity).value!, summary, data});\n  }\n\n  summaryBoxPlotStats(col: Column & INumberColumn, raw?: boolean) {\n    return taskNow(this.summaryBoxPlotStatsD(col, raw));\n  }\n\n  summaryNumberStats(col: Column & INumberColumn, raw?: boolean) {\n    return taskNow(this.summaryNumberStatsD(col, raw));\n  }\n\n  summaryCategoricalStats(col: Column & ICategoricalLikeColumn) {\n    return taskNow(this.summaryCategoricalStatsD(col));\n  }\n\n  summaryDateStats(col: Column & IDateColumn) {\n    return taskNow(this.summaryDateStatsD(col));\n  }\n\n  private summaryNumberStatsD(col: Column & INumberColumn, raw?: boolean) {\n    return this.cached('summary', col, () => {\n      const ranking = col.findMyRanker()!.getOrder();\n      const data = this.dataNumberStats(col, raw);\n      return {summary: this.normalizedStatsBuilder(ranking, col, data.hist.length, raw).next(Infinity).value!, data};\n    }, raw ? ':raw' : '', col.findMyRanker()!.getOrderLength() === 0);\n  }\n\n  private summaryBoxPlotStatsD(col: Column & INumberColumn, raw?: boolean) {\n    return this.cached('summary', col, () => {\n      const ranking = col.findMyRanker()!.getOrder();\n      const data = this.dataBoxPlotStats(col, raw);\n      return {summary: this.boxplotBuilder(ranking, col, raw).next(Infinity).value!, data};\n    }, raw ? ':braw' : ':b' , col.findMyRanker()!.getOrderLength() === 0);\n  }\n\n  private summaryCategoricalStatsD(col: Column & ICategoricalLikeColumn) {\n    return this.cached('summary', col, () => {\n      const ranking = col.findMyRanker()!.getOrder();\n      const data = this.dataCategoricalStats(col);\n      return {summary: this.categoricalStatsBuilder(ranking, col).next(Infinity).value!, data};\n    }, '', col.findMyRanker()!.getOrderLength() === 0);\n  }\n\n  private summaryDateStatsD(col: Column & IDateColumn) {\n    return this.cached('summary', col, () => {\n      const ranking = col.findMyRanker()!.getOrder();\n      const data = this.dataDateStats(col);\n      return {summary: this.dateStatsBuilder(ranking, col, data).next(Infinity).value!, data};\n    }, '', col.findMyRanker()!.getOrderLength() === 0);\n  }\n\n  private cached<T>(prefix: string, col: Column, creator: () => T, suffix: string = '', dontCache = false): T {\n    const key = `${col.id}:${prefix}${suffix}`;\n    if (this.cache.has(key)) {\n      return this.cache.get(key)!;\n    }\n    const s = creator();\n    if (!dontCache) {\n      this.cache.set(key, s);\n    }\n    return s;\n  }\n\n  dataBoxPlotStats(col: Column & INumberColumn, raw?: boolean) {\n    return this.cached('data', col, () => this.boxplotBuilder(null, col, raw).next(Infinity).value!, raw ? ':braw' : ':b');\n  }\n\n  dataNumberStats(col: Column & INumberColumn, raw?: boolean) {\n    return this.cached('data', col, () => this.normalizedStatsBuilder(null, col, getNumberOfBins(this.data.length), raw).next(Infinity).value!, raw ? ':raw' : '');\n  }\n\n  dataCategoricalStats(col: Column & ICategoricalLikeColumn) {\n    return this.cached('data', col, () => this.categoricalStatsBuilder(null, col).next(Infinity).value!);\n  }\n\n  dataDateStats(col: Column & IDateColumn) {\n    return this.cached('data', col, () => this.dateStatsBuilder(null, col).next(Infinity).value!);\n  }\n\n  terminate() {\n    this.cache.clear();\n  }\n}\n\n\n","import Column from './Column';\nimport {IDataRow, IColumnDesc} from './interfaces';\n\n\nexport interface IArrayDesc {\n  dataLength?: number;\n  labels?: string[];\n}\n\nexport interface IKeyValue<T> {\n  key: string;\n  value: T;\n}\n\nexport interface IMapColumn<T> extends Column {\n  getMap(row: IDataRow): IKeyValue<T>[];\n\n  getMapLabel(row: IDataRow): IKeyValue<string>[];\n}\n\nexport function isMapColumn(col: Column): col is IMapColumn<any>;\nexport function isMapColumn(col: IColumnDesc): boolean;\nexport function isMapColumn(col: Column | IColumnDesc) {\n  return (col instanceof Column && typeof (<IMapColumn<any>>col).getMap === 'function' && typeof (<IMapColumn<any>>col).getMapLabel === 'function') || (!(col instanceof Column) && (<IColumnDesc>col).type.endsWith('Map'));\n}\n\nexport interface IArrayColumn<T> extends IMapColumn<T> {\n  readonly labels: string[];\n  readonly dataLength: number | null;\n\n  getLabels(row: IDataRow): string[];\n\n  getValues(row: IDataRow): T[];\n}\n\nexport function isArrayColumn(col: Column): col is IArrayColumn<any>;\nexport function isArrayColumn(col: IColumnDesc): col is IArrayDesc & IColumnDesc;\nexport function isArrayColumn(col: Column | IColumnDesc) {\n  return (col instanceof Column && typeof (<IArrayColumn<any>>col).getLabels === 'function' && typeof (<IArrayColumn<any>>col).getValues === 'function' && isMapColumn(col) || (!(col instanceof Column) && (<IColumnDesc>col).type.endsWith('s') && (<IColumnDesc>col).type !== 'actions'));\n}\n","import {IForEachAble} from '../internal';\nimport Column from './Column';\nimport {IArrayColumn, isArrayColumn} from './IArrayColumn';\nimport {IValueColumnDesc, IColumnDesc, IDataRow, ITypedDump} from './interfaces';\n\nexport interface ICategoricalDesc {\n  categories: (string | Partial<ICategory>)[];\n}\n\nexport declare type ICategoricalColumnDesc = IValueColumnDesc<string> & ICategoricalDesc;\n\nexport interface ICategoricalColorMappingFunction {\n  apply(v: ICategory): string;\n\n  toJSON(): ITypedDump | null;\n\n  clone(): ICategoricalColorMappingFunction;\n\n  eq(other: ICategoricalColorMappingFunction): boolean;\n}\n\nexport interface ICategoricalColorMappingFunctionConstructor {\n  new(dump: ITypedDump): ICategoricalColorMappingFunction;\n}\n\nexport interface ICategoricalLikeColumn extends Column {\n  readonly categories: ICategory[];\n\n  getColorMapping(): ICategoricalColorMappingFunction;\n  setColorMapping(mapping: ICategoricalColorMappingFunction): void;\n\n  iterCategory(row: IDataRow): IForEachAble<ICategory | null>;\n\n  getCategories(row: IDataRow): (ICategory | null)[];\n}\n\nexport function isCategoricalLikeColumn(col: Column): col is ICategoricalLikeColumn {\n  return typeof (<ICategoricalLikeColumn>col).categories !== 'undefined' && typeof (<ICategoricalLikeColumn>col).iterCategory === 'function';\n}\n\nexport interface ISetColumn extends IArrayColumn<boolean>, ICategoricalLikeColumn {\n  getSet(row: IDataRow): Set<ICategory>;\n}\n\nexport function isSetColumn(col: Column): col is ISetColumn {\n  return isCategoricalLikeColumn(col) && typeof (<ISetColumn>col).getSet === 'function';\n}\n\nexport interface ICategoricalColumn extends ISetColumn {\n  getCategory(row: IDataRow): ICategory | null;\n}\n\nexport interface ICategory {\n  readonly name: string;\n\n  /**\n   * optional label of this category (the one to render)\n   */\n  readonly label: string;\n  /**\n   * category color\n   * @default next in d3 color 10 range\n   */\n  readonly color: string;\n\n  value: number;\n}\n/**\n * checks whether the given column or description is a categorical column, i.e. the value is a list of categories\n * @param col\n * @returns {boolean}\n */\nexport function isCategoricalColumn(col: Column): col is ICategoricalColumn;\nexport function isCategoricalColumn(col: IColumnDesc): col is ICategoricalColumnDesc & IColumnDesc;\nexport function isCategoricalColumn(col: Column | IColumnDesc) {\n  return (col instanceof Column && typeof (<ICategoricalColumn>col).getCategory === 'function' || (!(col instanceof Column) && (<IColumnDesc>col).type.match(/(categorical|ordinal|hierarchy)/) != null));\n}\n\nexport declare type ICategoricalsColumn = ICategoricalLikeColumn & IArrayColumn<string | null>;\n\nexport function isCategoricalsColumn(col: Column): col is ICategoricalsColumn {\n  return isCategoricalLikeColumn(col) && isArrayColumn(col) && !isSetColumn(col);\n}\n\n\nexport interface ICategoricalFilter {\n  filter: string[] | string | RegExp;\n  filterMissing: boolean;\n}\n\n\nexport function isCategory(v: any): v is ICategory {\n  return typeof v.name === 'string' && typeof v.label === 'string' && typeof v.color === 'string' && typeof v.value === 'number';\n}\n","import {IForEachAble} from '../internal';\nimport Column from './Column';\nimport {IColumnDesc, IDataRow} from './interfaces';\nimport {INumberFilter} from './INumberColumn';\nimport {IArrayColumn} from './IArrayColumn';\n\nexport interface IDateColumn extends Column {\n  getFormatter(): (v: Date | null) => string;\n\n  getDate(row: IDataRow): Date | null;\n\n  iterDate(row: IDataRow): IForEachAble<Date | null>;\n\n  getFilter(): IDateFilter;\n  setFilter(value: IDateFilter | null): void;\n}\n\nexport interface IDatesColumn extends IDateColumn, IArrayColumn<Date | null> {\n  getDates(row: IDataRow): (Date | null)[];\n}\n\nexport interface IDateDesc {\n  /**\n   * d3 formatting option\n   * @default %x\n   */\n  dateFormat?: string;\n\n  /**\n   * d3 formation option\n   * @dfeault dateFormat\n   */\n  dateParse?: string;\n}\n\n\n/**\n * checks whether the given column or description is a date column, i.e. the value is a date\n * @param col\n * @returns {boolean}\n */\nexport function isDateColumn(col: Column): col is IDateColumn;\nexport function isDateColumn(col: IColumnDesc): col is IDateDesc & IColumnDesc;\nexport function isDateColumn(col: Column | IColumnDesc) {\n  return (col instanceof Column && typeof (<IDateColumn>col).getDate === 'function' || (!(col instanceof Column) && (<IColumnDesc>col).type.startsWith('date')));\n}\n\nexport function isDatesColumn(col: Column): col is IDatesColumn {\n  return typeof (<IDatesColumn>col).getDates === 'function';\n}\n\nexport declare type IDateFilter = INumberFilter;\n\nexport declare type IDateGranularity = 'century' | 'decade' | 'year' | 'month' | 'week' | 'day_of_week' | 'day_of_month' | 'day_of_year' | 'hour' | 'minute' | 'second';\n\nexport interface IDateGrouper {\n  /**\n   * granuality level for the grouping\n   */\n  granularity: IDateGranularity;\n  /**\n   * whether circular occurrences should be in the same bin\n   * e.g. granularity = month\n   * circular: 01.2018 == 01.2017\n   * not circular: 01.2018 != 01.2017\n   */\n  circular: boolean;\n}\n","import {abortAble} from 'lineupengine';\nimport {getNumberOfBins, IAdvancedBoxPlotData, ICategoricalStatistics, IDateStatistics, ISequence, ISortMessageResponse, IStatistics, lazySeq, toIndexArray, WorkerTaskScheduler, createWorkerBlob} from '../internal';\nimport TaskScheduler, {ABORTED, oneShotIterator} from '../internal/scheduler';\nimport Column, {ICategoricalLikeColumn, ICompareValue, IDataRow, IDateColumn, IGroup, IndicesArray, INumberColumn, IOrderedGroup, isCategoricalLikeColumn, isDateColumn, isNumberColumn, Ranking, UIntTypedArray} from '../model';\nimport {IRenderTask} from '../renderer';\nimport {sortDirect} from './DirectRenderTasks';\nimport {CompareLookup} from './sort';\nimport {ARenderTasks, IRenderTaskExectutor, MultiIndices, taskLater, TaskLater, taskNow, TaskNow} from './tasks';\n\nexport class ScheduleRenderTasks extends ARenderTasks implements IRenderTaskExectutor {\n\n  private readonly cache = new Map<string, IRenderTask<any>>();\n  private readonly tasks = new TaskScheduler();\n  private readonly workers = new WorkerTaskScheduler(createWorkerBlob());\n\n  setData(data: IDataRow[]) {\n    this.data = data;\n    this.cache.clear();\n    this.tasks.clear();\n    this.valueCacheData.clear();\n    this.workers.deleteRefs();\n  }\n\n  dirtyColumn(col: Column, type: 'data' | 'group' | 'summary') {\n    super.dirtyColumn(col, type);\n    // order designed such that first groups, then summaries, then data is deleted\n\n    for (const key of Array.from(this.cache.keys()).sort()) {\n      // data = all\n      // summary = summary + group\n      // group = group only\n      if ((type === 'data' && key.startsWith(`${col.id}:`) ||\n        (type === 'summary' && key.startsWith(`${col.id}:b:summary:`)) ||\n        (key.startsWith(`${col.id}:a:group`)))) {\n        this.cache.delete(key);\n        this.tasks.abort(key);\n      }\n    }\n\n    if (type !== 'data') {\n      return;\n    }\n\n    this.valueCacheData.delete(col.id);\n    this.workers.deleteRef(col.id);\n  }\n\n  dirtyRanking(ranking: Ranking, type: 'data' | 'group' | 'summary') {\n    const cols = ranking.flatColumns;\n\n    let checker: ((key: string) => boolean)[];\n    switch (type) {\n      case 'group':\n        checker = cols.map((col) => (key: string) => key.startsWith(`${col.id}:a:group`));\n        break;\n      case 'summary':\n        checker = cols.map((col) => (key: string) => key.startsWith(`${col.id}:b:summary`) || key.startsWith(`${col.id}:a:group`));\n        break;\n      case 'data':\n      default:\n        checker = cols.map((col) => (key: string) => key.startsWith(`${col.id}:`));\n        break;\n    }\n    for (const key of Array.from(this.cache.keys()).sort()) {\n      if (checker.some((f) => f(key))) {\n        this.cache.delete(key);\n        this.tasks.abort(key);\n      }\n    }\n    // group compare tasks\n    this.tasks.abortAll((t) => t.id.startsWith(`r${ranking.id}:`));\n\n    // delete remote caches\n    this.workers.deleteRef(ranking.id, true);\n\n    if (type !== 'data') {\n      return;\n    }\n\n    for (const col of cols) {\n      super.dirtyColumn(col, type);\n      this.workers.deleteRef(col.id);\n    }\n  }\n\n  preCompute(ranking: Ranking, groups: {rows: IndicesArray, group: IGroup}[], maxDataIndex: number) {\n    if (groups.length === 0) {\n      return;\n    }\n    const cols = ranking.flatColumns;\n    if (groups.length === 1) {\n      const {group, rows} = groups[0];\n      const multi = new MultiIndices([rows], maxDataIndex);\n      for (const col of cols) {\n        if (isCategoricalLikeColumn(col)) {\n          this.summaryCategoricalStats(col, multi);\n        } else if (isNumberColumn(col)) {\n          this.summaryNumberStats(col, false, multi);\n          this.summaryNumberStats(col, true, multi);\n        } else if (isDateColumn(col)) {\n          this.summaryDateStats(col, multi);\n        } else {\n          continue;\n        }\n        // copy from summary to group and create proper structure\n        this.chainCopy(`${col.id}:a:group:${group.name}`, this.cache.get(`${col.id}:b:summary`)!, (v: {summary: any, data: any}) => ({group: v.summary, summary: v.summary, data: v.data}));\n        if (isNumberColumn(col)) {\n          this.chainCopy(`${col.id}:a:group:${group.name}:raw`, this.cache.get(`${col.id}:b:summary:raw`)!, (v: {summary: any, data: any}) => ({group: v.summary, summary: v.summary, data: v.data}));\n        }\n      }\n      return;\n    }\n\n    const ogroups = groups.map(({rows, group}) => Object.assign({order: rows}, group));\n    const full = new MultiIndices(groups.map((d) => d.rows), maxDataIndex);\n    for (const col of cols) {\n      if (isCategoricalLikeColumn(col)) {\n        this.summaryCategoricalStats(col, full);\n        for (const g of ogroups) {\n          this.groupCategoricalStats(col, g);\n        }\n      } else if (isDateColumn(col)) {\n        this.summaryDateStats(col, full);\n        for (const g of ogroups) {\n          this.groupDateStats(col, g);\n        }\n      } else if (isNumberColumn(col)) {\n        this.summaryNumberStats(col, false, full);\n        this.summaryNumberStats(col, true, full);\n        for (const g of ogroups) {\n          this.groupNumberStats(col, g, false);\n          this.groupNumberStats(col, g, true);\n        }\n      }\n    }\n  }\n\n  preComputeData(ranking: Ranking) {\n    for (const col of ranking.flatColumns) {\n      if (isCategoricalLikeColumn(col)) {\n        this.dataCategoricalStats(col);\n      } else if (isNumberColumn(col)) {\n        this.dataNumberStats(col, false);\n        this.dataNumberStats(col, true);\n      } else if (isDateColumn(col)) {\n        this.dataDateStats(col);\n      }\n    }\n  }\n\n  preComputeCol(col: Column) {\n    const ranking = col.findMyRanker();\n\n    if (isCategoricalLikeColumn(col)) {\n      this.dataCategoricalStats(col);\n      if (!ranking) {\n        return;\n      }\n      this.summaryCategoricalStats(col);\n      for (const group of ranking.getGroups()) {\n        this.groupCategoricalStats(col, group);\n      }\n      return;\n    }\n\n    if (isNumberColumn(col)) {\n      this.dataNumberStats(col, false);\n      this.dataNumberStats(col, true);\n\n      if (!ranking) {\n        return;\n      }\n      this.summaryNumberStats(col, false);\n      this.summaryNumberStats(col, true);\n      for (const group of ranking.getGroups()) {\n        this.groupNumberStats(col, group, false);\n        this.groupNumberStats(col, group, true);\n      }\n      return;\n    }\n\n    if (!isDateColumn(col)) {\n      return;\n    }\n\n    this.dataDateStats(col);\n\n    if (!ranking) {\n      return;\n    }\n    this.summaryDateStats(col);\n    for (const group of ranking.getGroups()) {\n      this.groupDateStats(col, group);\n    }\n  }\n\n  copyData2Summary(ranking: Ranking) {\n    for (const col of ranking.flatColumns) {\n      if (isCategoricalLikeColumn(col)) {\n        this.dataCategoricalStats(col);\n      } else if (isNumberColumn(col)) {\n        this.dataNumberStats(col, false);\n        this.dataNumberStats(col, true);\n      } else if (isDateColumn(col)) {\n        this.dataDateStats(col);\n      } else {\n        continue;\n      }\n      // copy from data to summary and create proper structure\n      this.chainCopy(`${col.id}:b:summary`, this.cache.get(`${col.id}:c:data`)!, (data: any) => ({summary: data, data}));\n      if (isNumberColumn(col)) {\n        this.chainCopy(`${col.id}:b:summary:raw`, this.cache.get(`${col.id}:c:data:raw`)!, (data: any) => ({summary: data, data}));\n      }\n    }\n  }\n\n  copyCache(col: Column, from: Column) {\n    const fromPrefix = `${from.id}:`;\n\n    for (const key of Array.from(this.cache.keys()).sort()) {\n      if (!key.startsWith(fromPrefix)) {\n        continue;\n      }\n      const tkey = `${col.id}:${key.slice(fromPrefix.length)}`;\n      this.chainCopy(tkey, this.cache.get(key)!, (data: any) => data);\n    }\n  }\n\n  groupCompare(ranking: Ranking, group: IGroup, rows: IndicesArray) {\n    return taskLater(this.tasks.push(`r${ranking.id}:${group.name}`, () => {\n      const rg = ranking.getGroupSortCriteria();\n      if (rg.length === 0) {\n        return [group.name.toLowerCase()];\n      }\n      const o = this.byOrder(rows);\n      const vs: ICompareValue[] = [];\n      for (const s of rg) {\n        const cache = this.valueCache(s.col);\n        const r = s.col.toCompareGroupValue(o, group, cache ? lazySeq(rows).map((d) => cache(d)) : undefined);\n        if (Array.isArray(r)) {\n          vs.push(...r);\n        } else {\n          vs.push(r);\n        }\n      }\n      vs.push(group.name.toLowerCase());\n      return vs;\n    }));\n  }\n\n  groupRows<T>(col: Column, group: IOrderedGroup, key: string, compute: (rows: ISequence<IDataRow>) => T) {\n    return this.cached(`${col.id}:a:group:${group.name}:${key}`, true, oneShotIterator(() => compute(this.byOrder(group.order))));\n  }\n\n  groupExampleRows<T>(_col: Column, group: IOrderedGroup, _key: string, compute: (rows: ISequence<IDataRow>) => T) {\n    return taskNow(compute(this.byOrder(group.order.slice(0, 5))));\n  }\n\n  groupBoxPlotStats(col: Column & INumberColumn, group: IOrderedGroup, raw?: boolean) {\n    return this.chain(`${col.id}:a:group:${group.name}${raw ? ':braw' : ':b'}`, this.summaryBoxPlotStats(col, raw), ({summary, data}) => {\n      const ranking = col.findMyRanker()!;\n      const key = raw ? `${col.id}:r` : col.id;\n      if (this.valueCacheData.has(key) && group.order.length > 0) {\n        // web worker version\n        return () => this.workers.pushStats('boxplotStats', {}, key, <Float32Array>this.valueCacheData.get(key), `${ranking.id}:${group.name}`, group.order)\n          .then((group) => ({group, summary, data}));\n      }\n      return this.boxplotBuilder(group.order, col, raw, (group) => ({group, summary, data}));\n    });\n  }\n\n  groupNumberStats(col: Column & INumberColumn, group: IOrderedGroup, raw?: boolean) {\n    return this.chain(`${col.id}:a:group:${group.name}${raw ? ':raw' : ''}`, this.summaryNumberStats(col, raw), ({summary, data}) => {\n      const ranking = col.findMyRanker()!;\n      const key = raw ? `${col.id}:r` : col.id;\n      if (this.valueCacheData.has(key) && group.order.length > 0) {\n        // web worker version\n        return () => this.workers.pushStats('numberStats', {numberOfBins: summary.hist.length}, key, <Float32Array>this.valueCacheData.get(key), `${ranking.id}:${group.name}`, group.order)\n          .then((group) => ({group, summary, data}));\n      }\n      return this.normalizedStatsBuilder(group.order, col, summary.hist.length, raw, (group) => ({group, summary, data}));\n    });\n  }\n\n  groupCategoricalStats(col: Column & ICategoricalLikeColumn, group: IOrderedGroup) {\n    return this.chain(`${col.id}:a:group:${group.name}`, this.summaryCategoricalStats(col), ({summary, data}) => {\n      const ranking = col.findMyRanker()!;\n      if (this.valueCacheData.has(col.id) && group.order.length > 0) {\n        // web worker version\n        return () => this.workers.pushStats('categoricalStats', {categories: col.categories.map((d) => d.name)}, col.id, <UIntTypedArray>this.valueCacheData.get(col.id), `${ranking.id}:${group.name}`, group.order)\n          .then((group) => ({group, summary, data}));\n      }\n      return this.categoricalStatsBuilder(group.order, col, (group) => ({group, summary, data}));\n    });\n  }\n\n  groupDateStats(col: Column & IDateColumn, group: IOrderedGroup) {\n    const key = `${col.id}:a:group:${group.name}`;\n    return this.chain(key, this.summaryDateStats(col), ({summary, data}) => {\n      const ranking = col.findMyRanker()!;\n      if (this.valueCacheData.has(col.id) && group.order.length > 0) {\n        // web worker version\n        return () => this.workers.pushStats('dateStats', {template: summary}, col.id, <Float64Array>this.valueCacheData.get(col.id), `${ranking.id}:${group.name}`, group.order)\n          .then((group) => ({group, summary, data}));\n      }\n      return this.dateStatsBuilder(group.order, col, summary, (group) => ({group, summary, data}));\n    });\n  }\n\n  summaryBoxPlotStats(col: Column & INumberColumn, raw?: boolean, order?: MultiIndices) {\n    return this.chain(`${col.id}:b:summary${raw ? ':braw' : ':b'}`, this.dataBoxPlotStats(col, raw), (data) => {\n      const ranking = col.findMyRanker()!;\n      const key = raw ? `${col.id}:r` : col.id;\n      if (this.valueCacheData.has(key)) {\n        // web worker version\n        return () => this.workers.pushStats('boxplotStats', {}, key, <Float32Array>this.valueCacheData.get(key), ranking.id, order ? order.joined : ranking.getOrder())\n          .then((summary) => ({summary, data}));\n      }\n      return this.boxplotBuilder(order ? order : ranking.getOrder(), col, raw, (summary) => ({summary, data}));\n    });\n  }\n\n  summaryNumberStats(col: Column & INumberColumn, raw?: boolean, order?: MultiIndices) {\n    return this.chain(`${col.id}:b:summary${raw ? ':raw' : ''}`, this.dataNumberStats(col, raw), (data) => {\n      const ranking = col.findMyRanker()!;\n      const key = raw ? `${col.id}:r` : col.id;\n      if (this.valueCacheData.has(key)) {\n        // web worker version\n        return () => this.workers.pushStats('numberStats', {numberOfBins: data.hist.length}, key, <Float32Array>this.valueCacheData.get(key), ranking.id, order ? order.joined : ranking.getOrder())\n          .then((summary) => ({summary, data}));\n      }\n      return this.normalizedStatsBuilder(order ? order : ranking.getOrder(), col, data.hist.length, raw, (summary) => ({summary, data}));\n    });\n  }\n\n  summaryCategoricalStats(col: Column & ICategoricalLikeColumn, order?: MultiIndices) {\n    return this.chain(`${col.id}:b:summary`, this.dataCategoricalStats(col), (data) => {\n      const ranking = col.findMyRanker()!;\n      if (this.valueCacheData.has(col.id)) {\n        // web worker version\n        return () => this.workers.pushStats('categoricalStats', {categories: col.categories.map((d) => d.name)}, col.id, <UIntTypedArray>this.valueCacheData.get(col.id), ranking.id, order ? order.joined : ranking.getOrder())\n          .then((summary) => ({summary, data}));\n      }\n      return this.categoricalStatsBuilder(order ? order : ranking.getOrder(), col, (summary) => ({summary, data}));\n    });\n  }\n\n  summaryDateStats(col: Column & IDateColumn, order?: MultiIndices) {\n    return this.chain(`${col.id}:b:summary`, this.dataDateStats(col), (data) => {\n      const ranking = col.findMyRanker()!;\n      if (this.valueCacheData.has(col.id)) {\n        // web worker version\n        return () => this.workers.pushStats('dateStats', {template: data}, col.id, <Float64Array>this.valueCacheData.get(col.id), ranking.id, order ? order.joined : ranking.getOrder())\n          .then((summary) => ({summary, data}));\n      }\n      return this.dateStatsBuilder(order ? order : ranking.getOrder(), col, data, (summary) => ({summary, data}));\n    });\n  }\n\n  private cached<T>(key: string, canAbort: boolean, it: Iterator<T | null> | (() => Promise<T>)): IRenderTask<T> {\n    const dontCache = this.data.length === 0;\n\n    if (this.isValidCacheEntry(key) && !dontCache) {\n      return this.cache.get(key)!;\n    }\n\n    const task = typeof it === 'function' ? abortAble(it()) : this.tasks.pushMulti(key, it, canAbort);\n    const s = taskLater(task);\n    if (!dontCache) {\n      this.cache.set(key, s);\n    }\n    task.then((r) => {\n      if (this.cache.get(key) !== s) {\n        return;\n      }\n      if (typeof r === 'symbol') {\n        this.cache.delete(key);\n      } else {\n        this.cache.set(key, taskNow(r));\n      }\n    });\n    return s;\n  }\n\n  private chain<T, U>(key: string, task: IRenderTask<T>, creator: (data: T) => Iterator<U | null> | (() => Promise<U>)): IRenderTask<U> {\n    if (this.isValidCacheEntry(key)) {\n      return this.cache.get(key)!;\n    }\n    if (task instanceof TaskNow) {\n      if (typeof task.v === 'symbol') {\n        // aborted\n        return taskNow(ABORTED);\n      }\n      return this.cached(key, true, creator(task.v));\n    }\n\n    const v = (<TaskLater<T>>task).v;\n    const subTask = v.then((data) => {\n      if (typeof data === 'symbol') {\n        return ABORTED;\n      }\n      const created = creator(data);\n      if (typeof created === 'function') {\n        // promise\n        return created();\n      }\n      return this.tasks.pushMulti(key, created);\n    });\n    const s = taskLater(subTask);\n    this.cache.set(key, s);\n    subTask.then((r) => {\n      if (this.cache.get(key) !== s) {\n        return;\n      }\n      if (typeof r === 'symbol') {\n        this.cache.delete(key);\n      } else {\n        this.cache.set(key, taskNow(r));\n      }\n    });\n    return s;\n  }\n\n  private isValidCacheEntry(key: string) {\n    if (!this.cache.has(key)) {\n      return false;\n    }\n    const v = this.cache.get(key);\n    // not an aborted task\n    return !((v instanceof TaskNow) && typeof v.v === 'symbol') && !(v instanceof TaskLater && v.v.isAborted());\n  }\n\n  private chainCopy<T, U>(key: string, task: IRenderTask<T>, creator: (data: T) => U): IRenderTask<U> {\n    if (this.isValidCacheEntry(key)) {\n      return this.cache.get(key)!;\n    }\n    if (task instanceof TaskNow) {\n      if (typeof task.v === 'symbol') {\n        // aborted\n        return taskNow(ABORTED);\n      }\n      const subTask = taskNow(creator(task.v));\n      this.cache.set(key, subTask);\n      return subTask;\n    }\n\n    const v = (<TaskLater<T>>task).v;\n    const subTask = v.then((data) => {\n      if (typeof data === 'symbol') {\n        return ABORTED;\n      }\n      return creator(data);\n    });\n    const s = taskLater(subTask);\n    this.cache.set(key, s);\n    subTask.then((r) => {\n      if (this.cache.get(key) !== s) {\n        return;\n      }\n      if (typeof r === 'symbol') {\n        this.cache.delete(key);\n      } else {\n        this.cache.set(key, taskNow(r));\n      }\n    });\n    return s;\n  }\n\n  dataBoxPlotStats(col: Column & INumberColumn, raw?: boolean) {\n    const key = `${col.id}:c:data${raw ? ':braw' : ':b'}`;\n    const valueCacheKey = raw ? `${col.id}:r` : col.id;\n    if (this.valueCacheData.has(valueCacheKey) && this.data.length > 0) {\n      // use webworker\n      return this.cached(key, false, () => this.workers.pushStats('boxplotStats', {}, valueCacheKey, <Float32Array>this.valueCacheData.get(valueCacheKey)!));\n    }\n    return this.cached(key, false, this.boxplotBuilder<IAdvancedBoxPlotData>(null, col, raw));\n  }\n\n  dataNumberStats(col: Column & INumberColumn, raw?: boolean) {\n    return this.cached(`${col.id}:c:data${raw ? ':raw' : ''}`, false, this.normalizedStatsBuilder<IStatistics>(null, col, getNumberOfBins(this.data.length), raw));\n  }\n\n  dataCategoricalStats(col: Column & ICategoricalLikeColumn) {\n    return this.cached(`${col.id}:c:data`, false, this.categoricalStatsBuilder<ICategoricalStatistics>(null, col));\n  }\n\n  dataDateStats(col: Column & IDateColumn) {\n    return this.cached(`${col.id}:c:data`, false, this.dateStatsBuilder<IDateStatistics>(null, col));\n  }\n\n  sort(ranking: Ranking, group: IGroup, indices: IndicesArray, singleCall: boolean, maxDataIndex: number, lookups?: CompareLookup) {\n    if (!lookups || indices.length < 1000) {\n      // no thread needed\n      const order = sortDirect(indices, maxDataIndex, lookups);\n      return Promise.resolve(order);\n    }\n\n    const indexArray = toIndexArray(indices, maxDataIndex);\n    const toTransfer = [indexArray.buffer];\n\n    if (singleCall) {\n      // can transfer otherwise need to copy\n      toTransfer.push(...lookups.transferAbles);\n    }\n\n    return this.workers.push('sort', {\n      ref: `${ranking.id}:${group.name}`,\n      indices: indexArray,\n      sortOrders: lookups.sortOrders\n    }, toTransfer, (r: ISortMessageResponse) => r.order);\n  }\n\n  terminate() {\n    this.workers.terminate();\n    this.cache.clear();\n    this.valueCacheData.clear();\n  }\n}\n","import {IAbortAblePromise} from 'lineupengine';\nimport {Column, IDataRow, IOrderedGroup, INumberColumn, ICategoricalLikeColumn, IDateColumn} from '../model';\nimport {IDataProvider} from '../provider';\nimport DialogManager from '../ui/dialogs/DialogManager';\nimport {ISequence, IDateStatistics, ICategoricalStatistics, IAdvancedBoxPlotData, IStatistics} from '../internal';\n\n\nexport interface IImposer {\n  color?(row: IDataRow | null, valueHint?: number): string | null;\n}\n\nexport declare type IRenderCallback = (ctx: CanvasRenderingContext2D) => void;\n\n/**\n * a cell renderer for rendering a cell of specific column\n */\nexport interface ICellRenderer {\n  /**\n   * template as a basis for the update\n   */\n  readonly template: string;\n\n  /**\n   * update a given node (create using the template) with the given data\n   * @param node the node to update\n   * @param d the data item\n   * @param i the order relative index\n   * @param group the group this row is part of\n   */\n  update(node: HTMLElement, d: IDataRow, i: number, group: IOrderedGroup): void | IAbortAblePromise<void> | null;\n\n  /**\n   * render a low detail canvas row\n   * @return true if a dom element is needed\n   */\n  render?(ctx: CanvasRenderingContext2D, d: IDataRow, i: number, group: IOrderedGroup): void | IAbortAblePromise<IRenderCallback> | boolean | null;\n}\n\n/**\n * a cell renderer for rendering a cell of specific column\n */\nexport interface IGroupCellRenderer {\n  /**\n   * template as a basis for the update\n   */\n  readonly template: string;\n\n  /**\n   * update a given node (create using the template) with the given data\n   * @param node the node to update\n   * @param group the group to render\n   */\n  update(node: HTMLElement, group: IOrderedGroup): void | IAbortAblePromise<void> | null;\n}\n\nexport interface ISummaryRenderer {\n  /**\n   * template as a basis for the update\n   */\n  readonly template: string;\n\n  update(node: HTMLElement): void | IAbortAblePromise<void> | null;\n}\n\n\nexport interface IRenderTask<T> {\n  then<U = void>(onfullfilled: (value: T | symbol) => U): U | IAbortAblePromise<U>;\n}\n\nexport interface IRenderTasks {\n  groupRows<T>(col: Column, group: IOrderedGroup, key: string, compute: (rows: ISequence<IDataRow>) => T): IRenderTask<T>;\n  groupExampleRows<T>(col: Column, group: IOrderedGroup, key: string, compute: (rows: ISequence<IDataRow>) => T): IRenderTask<T>;\n\n  groupBoxPlotStats(col: Column & INumberColumn, group: IOrderedGroup, raw?: boolean): IRenderTask<{group: IAdvancedBoxPlotData, summary: IAdvancedBoxPlotData, data: IAdvancedBoxPlotData}>;\n  groupNumberStats(col: Column & INumberColumn, group: IOrderedGroup, raw?: boolean): IRenderTask<{group: IStatistics, summary: IStatistics, data: IStatistics}>;\n  groupCategoricalStats(col: Column & ICategoricalLikeColumn, group: IOrderedGroup): IRenderTask<{group: ICategoricalStatistics, summary: ICategoricalStatistics, data: ICategoricalStatistics}>;\n  groupDateStats(col: Column & IDateColumn, group: IOrderedGroup): IRenderTask<{group: IDateStatistics, summary: IDateStatistics, data: IDateStatistics}>;\n\n  summaryBoxPlotStats(col: Column & INumberColumn, raw?: boolean): IRenderTask<{summary: IAdvancedBoxPlotData, data: IAdvancedBoxPlotData}>;\n  summaryNumberStats(col: Column & INumberColumn, raw?: boolean): IRenderTask<{summary: IStatistics, data: IStatistics}>;\n  summaryCategoricalStats(col: Column & ICategoricalLikeColumn): IRenderTask<{summary: ICategoricalStatistics, data: ICategoricalStatistics}>;\n  summaryDateStats(col: Column & IDateColumn): IRenderTask<{summary: IDateStatistics, data: IDateStatistics}>;\n}\n\n/**\n * context for rendering, wrapped as an object for easy extensibility\n */\nexport interface IRenderContext {\n  readonly tasks: IRenderTasks;\n  /**\n   * render a column\n   * @param col\n   */\n  renderer(col: Column, imposer?: IImposer): ICellRenderer;\n\n  /**\n   * render a column\n   * @param col\n   */\n  groupRenderer(col: Column, imposer?: IImposer): IGroupCellRenderer;\n\n  summaryRenderer(co: Column, interactive: boolean, imposer?: IImposer): ISummaryRenderer;\n\n  /**\n   * prefix used for all generated id names\n   */\n  readonly idPrefix: string;\n\n  asElement(html: string): HTMLElement;\n\n  colWidth(col: Column): number;\n\n  readonly provider: IDataProvider;\n  readonly dialogManager: DialogManager;\n}\n\nexport enum ERenderMode {\n  CELL, GROUP, SUMMARY\n}\n\n\nexport interface ICellRendererFactory {\n  readonly title: string;\n  readonly groupTitle?: string;\n  readonly summaryTitle?: string;\n\n  canRender(col: Column, mode: ERenderMode): boolean;\n\n  create?(col: Column, context: IRenderContext, imposer?: IImposer): ICellRenderer;\n\n  createGroup?(col: Column, context: IRenderContext, imposer?: IImposer): IGroupCellRenderer;\n\n  createSummary?(col: Column, context: IRenderContext, interactive: boolean, imposer?: IImposer): ISummaryRenderer;\n}\n","import {createIndexArray, sortComplex, ISequence, lazySeq, IEventContext} from '../internal';\nimport {Column, EDirtyReason, Ranking, defaultGroup, IColumnDesc, ICompareValue, IDataRow, IGroup, IndicesArray, INumberColumn, IOrderedGroup, CompositeColumn} from '../model';\nimport ACommonDataProvider from './ACommonDataProvider';\nimport ADataProvider from './ADataProvider';\nimport {IDataProviderOptions} from './interfaces';\nimport {CompareLookup} from './sort';\nimport {IRenderTaskExectutor} from './tasks';\nimport {DirectRenderTasks} from './DirectRenderTasks';\nimport {ScheduleRenderTasks} from './ScheduledTasks';\nimport {joinGroups, mapIndices, duplicateGroup} from '../model/internal';\n\n\nexport interface ILocalDataProviderOptions {\n  /**\n   * whether the filter should be applied to all rankings regardless where they are\n   * default: false\n   */\n  filterGlobally: boolean;\n  /**\n   * jump to search results such that they are visible\n   * default: false\n   */\n  jumpToSearchResult: boolean;\n\n  /**\n   * specify the task executor to use direct = no delay, scheduled = run when idle\n   */\n  taskExecutor: 'direct' | 'scheduled';\n}\n\ninterface ISortHelper {\n  group: IGroup;\n  rows: IndicesArray;\n}\n\n/**\n * a data provider based on an local array\n */\nexport default class LocalDataProvider extends ACommonDataProvider {\n  private readonly ooptions: ILocalDataProviderOptions = {\n    /**\n     * whether the filter should be applied to all rankings regardless where they are\n     */\n    filterGlobally: false,\n\n    jumpToSearchResult: false,\n\n    taskExecutor: 'direct'\n  };\n\n  private readonly reorderAll: () => void;\n\n  private _dataRows: IDataRow[];\n  private filter: ((row: IDataRow) => boolean) | null = null;\n  private readonly tasks: IRenderTaskExectutor;\n\n  constructor(private _data: any[], columns: IColumnDesc[] = [], options: Partial<ILocalDataProviderOptions & IDataProviderOptions> = {}) {\n    super(columns, options);\n    Object.assign(this.ooptions, options);\n    this._dataRows = toRows(_data);\n    this.tasks = this.ooptions.taskExecutor === 'direct' ? new DirectRenderTasks() : new ScheduleRenderTasks();\n    this.tasks.setData(this._dataRows);\n\n    const that = this;\n    this.reorderAll = function (this: {source?: Ranking, type: string}) {\n      //fire for all other rankings a dirty order event, too\n      const ranking = this.source;\n      const type = this.type;\n      for (const r of that.getRankings()) {\n        if (r !== ranking) {\n          r.dirtyOrder(type === Ranking.EVENT_FILTER_CHANGED ? [EDirtyReason.FILTER_CHANGED] : [EDirtyReason.UNKNOWN]);\n        }\n      }\n    };\n  }\n\n  /**\n   * set a globally applied filter to all data without changing the data source itself\n   * @param {((row: IDataRow) => boolean) | null} filter\n   */\n  setFilter(filter: ((row: IDataRow) => boolean) | null) {\n    this.filter = filter;\n    this.reorderAll.call({type: Ranking.EVENT_FILTER_CHANGED});\n  }\n\n  getFilter() {\n    return this.filter;\n  }\n\n  getTotalNumberOfRows() {\n    return this.data.length;\n  }\n\n  getTaskExecutor() {\n    return this.tasks;\n  }\n\n  get data() {\n    return this._data;\n  }\n\n  destroy() {\n    super.destroy();\n    this.tasks.terminate();\n  }\n\n  /**\n   * replaces the dataset rows with a new one\n   * @param data\n   */\n  setData(data: any[]) {\n    this._data = data;\n    this._dataRows = toRows(data);\n    this.dataChanged();\n  }\n\n  private dataChanged() {\n    this.tasks.setData(this._dataRows);\n\n    for (const ranking of this.getRankings()) {\n      this.tasks.preComputeData(ranking);\n    }\n\n    this.fire(ADataProvider.EVENT_DATA_CHANGED, this._dataRows);\n    this.reorderAll.call({type: Ranking.EVENT_FILTER_CHANGED});\n\n  }\n\n  clearData() {\n    this.setData([]);\n  }\n\n  /**\n   * append rows to the dataset\n   * @param data\n   */\n  appendData(data: any[]) {\n    for (const d of data) {\n      this._data.push(d);\n      this._dataRows.push({v: d, i: this._dataRows.length});\n    }\n    this.dataChanged();\n  }\n\n  cloneRanking(existing?: Ranking) {\n    const ranking = super.cloneRanking(existing);\n\n    if (this.ooptions.filterGlobally) {\n      ranking.on(`${Ranking.EVENT_FILTER_CHANGED}.reorderAll`, this.reorderAll);\n    }\n\n    this.trackRanking(ranking, existing);\n    return ranking;\n  }\n\n  private trackRanking(ranking: Ranking, existing?: Ranking) {\n\n    const that = this;\n    ranking.on(`${Column.EVENT_DIRTY_CACHES}.cache`, function (this: IEventContext) {\n      let col: any = this.origin;\n      while (col instanceof Column) {\n        // console.log(col.label, 'dirty data');\n        that.tasks.dirtyColumn(col, 'data');\n        that.tasks.preComputeCol(col);\n        col = col.parent;\n      }\n    });\n\n    const cols = ranking.flatColumns;\n    const addKey = `${Ranking.EVENT_ADD_COLUMN}.cache`;\n    const removeKey = `${Ranking.EVENT_REMOVE_COLUMN}.cache`;\n\n    const removeCol = (col: Column) => {\n      this.tasks.dirtyColumn(col, 'data');\n      if (col instanceof CompositeColumn) {\n        col.on(addKey, null);\n        col.on(removeKey, null);\n      }\n    };\n\n    const addCol = (col: Column) => {\n      this.tasks.preComputeCol(col);\n      if (col instanceof CompositeColumn) {\n        col.on(addKey, addCol);\n        col.on(removeKey, removeCol);\n      }\n    };\n\n\n    ranking.on(addKey, addCol);\n    ranking.on(removeKey, removeCol);\n    for (const col of cols) {\n      if (col instanceof CompositeColumn) {\n        col.on(addKey, addCol);\n        col.on(removeKey, removeCol);\n      }\n    }\n\n    if (existing) {\n      const copy = existing.flatColumns;\n      for (let i = 0; i < cols.length; ++i) {\n        this.tasks.copyCache(cols[i], copy[i]);\n      }\n    }\n\n    this.tasks.preComputeData(ranking);\n  }\n\n  cleanUpRanking(ranking: Ranking) {\n    if (this.ooptions.filterGlobally) {\n      ranking.on(`${Ranking.EVENT_FILTER_CHANGED}.reorderAll`, null);\n    }\n\n\n    const cols = ranking.flatColumns;\n    const addKey = `${Ranking.EVENT_ADD_COLUMN}.cache`;\n    const removeKey = `${Ranking.EVENT_REMOVE_COLUMN}.cache`;\n    ranking.on(addKey, null);\n    ranking.on(removeKey, null);\n    for (const col of cols) {\n      if (col instanceof CompositeColumn) {\n        col.on(addKey, null);\n        col.on(removeKey, null);\n      }\n    }\n\n    this.tasks.dirtyRanking(ranking, 'data');\n\n    super.cleanUpRanking(ranking);\n  }\n\n  private resolveFilter(ranking: Ranking) {\n    //do the optional filtering step\n    const filter: (Column | ((d: IDataRow) => boolean))[] = [];\n\n    if (this.ooptions.filterGlobally) {\n      for (const r of this.getRankings()) {\n        if (r.isFiltered()) {\n          filter.push(...r.flatColumns.filter((d) => d.isFiltered()));\n        }\n      }\n    } else if (ranking.isFiltered()) {\n      filter.push(...ranking.flatColumns.filter((d) => d.isFiltered()));\n    }\n\n    if (this.filter) {\n      filter.push(this.filter);\n    }\n    return filter;\n  }\n\n  private noSorting(ranking: Ranking) {\n    // initial no sorting required just index mapping\n    const l = this._data.length;\n    const order = createIndexArray(l, l - 1);\n    const index2pos = order.slice();\n    for (let i = 0; i < l; ++i) {\n      order[i] = i;\n      index2pos[i] = i + 1; // shift since default is 0\n    }\n\n    this.tasks.preCompute(ranking, [{rows: order, group: defaultGroup}], l - 1);\n    return {groups: [Object.assign({order}, defaultGroup)], index2pos};\n  }\n\n  private createSorter(ranking: Ranking, filter: (Column | ((d: IDataRow) => boolean))[], needsFiltering: boolean, needsGrouping: boolean, needsSorting: boolean) {\n    const groups = new Map<string, ISortHelper>();\n    const groupOrder: ISortHelper[] = [];\n    let maxDataIndex = -1;\n\n    const groupCriteria = ranking.getGroupCriteria();\n    const lookups = needsSorting ? new CompareLookup(this._data.length, true, ranking, this.tasks.valueCache.bind(this.tasks)) : undefined;\n\n    const pushGroup = (group: IGroup, r: IDataRow) => {\n      const groupKey = group.name.toLowerCase();\n      if (groups.has(groupKey)) {\n        (<number[]>groups.get(groupKey)!.rows).push(r.i);\n        return;\n      }\n      const s = {group, rows: [r.i]};\n      groups.set(groupKey, s);\n      groupOrder.push(s);\n    };\n\n    const groupCaches = groupCriteria.map((c) => this.tasks.valueCache(c));\n    const filterCaches = filter.map((c) => typeof c === 'function' ? undefined : this.tasks.valueCache(c));\n\n    const toGroup = groupCriteria.length === 1 ?\n      (r: IDataRow) => joinGroups([groupCriteria[0].group(r, groupCaches[0] ? groupCaches[0]!(r.i) : undefined)]) :\n      (r: IDataRow) => joinGroups(groupCriteria.map((c, i) => c.group(r, groupCaches[i] ? groupCaches[i]!(r.i) : undefined)));\n\n    if (needsFiltering) {\n      // filter, group, sort\n      outer: for (const r of this._dataRows) {\n        for (let f = 0; f < filter.length; ++f) {\n          const fc = filter[f];\n          const c = filterCaches[f];\n          if ((typeof fc === 'function' && !fc(r)) || (fc instanceof Column && !fc.filter(r, c ? c(r.i) : undefined))) {\n            continue outer;\n          }\n        }\n        if (maxDataIndex < r.i) {\n          maxDataIndex = r.i;\n        }\n        if (lookups) {\n          lookups.push(r);\n        }\n        pushGroup(toGroup(r), r);\n      }\n\n      // some default sorting\n      groupOrder.sort((a, b) => a.group.name.toLowerCase().localeCompare(b.group.name.toLowerCase()));\n      return {maxDataIndex, lookups, groupOrder};\n    }\n\n    // reuse the existing groups\n\n    for (const before of ranking.getGroups()) {\n      const order = before.order;\n      if (!needsGrouping) {\n        const clone = duplicateGroup(before);\n        // reuse in full\n        groupOrder.push({group: clone, rows: order});\n\n        if (!lookups) {\n          maxDataIndex = (<ReadonlyArray<number>>order).reduce((a, b) => Math.max(a, b), maxDataIndex);\n          continue;\n        }\n        // sort\n        // tslint:disable-next-line:prefer-for-of\n        for (let o = 0; o < order.length; ++o) {\n          const i = order[o];\n          if (maxDataIndex < i) {\n            maxDataIndex = i;\n          }\n          lookups.push(this._dataRows[i]);\n        }\n        continue;\n      }\n\n      // group, [sort]\n      // tslint:disable-next-line:prefer-for-of\n      for (let o = 0; o < order.length; ++o) {\n        const i = order[o];\n        if (maxDataIndex < i) {\n          maxDataIndex = i;\n        }\n        const r = this._dataRows[i];\n        if (lookups) {\n          lookups.push(r);\n        }\n        pushGroup(toGroup(r), r);\n      }\n    }\n\n    if (needsGrouping) {\n      // some default sorting\n      groupOrder.sort((a, b) => a.group.name.toLowerCase().localeCompare(b.group.name.toLowerCase()));\n    }\n    return {maxDataIndex, lookups, groupOrder};\n  }\n\n  private sortGroup(g: ISortHelper, i: number, ranking: Ranking, lookups: CompareLookup | undefined, groupLookup: CompareLookup | undefined, singleGroup: boolean, maxDataIndex: number): Promise<IOrderedGroup> {\n    const group = g.group;\n\n    const sortTask = this.tasks.sort(ranking, group, g.rows, singleGroup, maxDataIndex, lookups);\n\n    // compute sort group value as task\n    const groupSortTask = groupLookup ? this.tasks.groupCompare(ranking, group, g.rows).then((r) => r) : <ICompareValue[]>[];\n\n    // trigger task for groups to compute for this group\n\n\n    return Promise.all([sortTask, groupSortTask]).then(([order, groupC]) => {\n      if (groupLookup && Array.isArray(groupC)) {\n        groupLookup.pushValues(i, groupC);\n      }\n      return Object.assign(group, {order});\n    });\n  }\n\n  private sortGroups(groups: IOrderedGroup[], groupLookup: CompareLookup | undefined) {\n    // sort groups\n    if (groupLookup) {\n      const groupIndices = groups.map((_, i) => i);\n      sortComplex(groupIndices, groupLookup.sortOrders);\n      return groupIndices.map((i) => groups[i]);\n    }\n    return groups.sort((a, b) => a.name.localeCompare(b.name));\n  }\n\n  private index2pos(groups: IOrderedGroup[], maxDataIndex: number) {\n    const total = groups.reduce((a, b) => a + b.order.length, 1);\n    const index2pos = createIndexArray(maxDataIndex + 1, total);\n    let offset = 1;\n    for (const g of groups) {\n      // tslint:disable-next-line\n      for (let i = 0; i < g.order.length; i++ , offset++) {\n        index2pos[g.order[i]] = offset;\n      }\n    }\n\n    return {groups, index2pos};\n  }\n\n  sort(ranking: Ranking, dirtyReason: EDirtyReason[]) {\n    const reasons = new Set(dirtyReason);\n\n    if (this._data.length === 0) {\n      return {groups: [], index2pos: []};\n    }\n\n    // console.log(dirtyReason);\n\n    const filter = this.resolveFilter(ranking);\n\n    const needsFiltering = reasons.has(EDirtyReason.UNKNOWN) || reasons.has(EDirtyReason.FILTER_CHANGED);\n    const needsGrouping = needsFiltering || reasons.has(EDirtyReason.GROUP_CRITERIA_CHANGED) || reasons.has(EDirtyReason.GROUP_CRITERIA_DIRTY);\n    const needsSorting = needsGrouping || reasons.has(EDirtyReason.SORT_CRITERIA_CHANGED) || reasons.has(EDirtyReason.SORT_CRITERIA_DIRTY);\n    const needsGroupSorting = needsGrouping || reasons.has(EDirtyReason.GROUP_SORT_CRITERIA_CHANGED) || reasons.has(EDirtyReason.GROUP_SORT_CRITERIA_DIRTY);\n\n    if (needsFiltering) {\n      this.tasks.dirtyRanking(ranking, 'summary');\n    } else if (needsGrouping) {\n      this.tasks.dirtyRanking(ranking, 'group');\n    }\n    // otherwise the summary and group summaries should still be valid\n\n    if (filter.length === 0) {\n      // all rows so summary = data\n      this.tasks.copyData2Summary(ranking);\n    }\n\n    const isGroupedBy = ranking.getGroupCriteria().length > 0;\n    const isSortedBy = ranking.getSortCriteria().length > 0;\n    const isGroupedSortedBy = ranking.getGroupSortCriteria().length > 0;\n\n    if (!isGroupedBy && !isSortedBy && filter.length === 0) {\n      return this.noSorting(ranking);\n    }\n\n    const {maxDataIndex, lookups, groupOrder} = this.createSorter(ranking, filter, needsFiltering, needsGrouping, needsSorting);\n\n    if (groupOrder.length === 0) {\n      return {groups: [], index2pos: []};\n    }\n\n    this.tasks.preCompute(ranking, groupOrder, maxDataIndex);\n\n\n    if (groupOrder.length === 1) {\n      const g = groupOrder[0]!;\n\n      // not required if: group sort criteria changed -> lookups will be none\n      return this.sortGroup(g, 0, ranking, lookups, undefined, true, maxDataIndex).then((group) => {\n        return this.index2pos([group], maxDataIndex);\n      });\n    }\n\n    const groupLookup = isGroupedSortedBy && needsGroupSorting ? new CompareLookup(groupOrder.length, false, ranking) : undefined;\n\n    return Promise.all(groupOrder.map((g, i) => {\n      // not required if: group sort criteria changed -> lookups will be none\n      return this.sortGroup(g, i, ranking, lookups, groupLookup, false, maxDataIndex);\n    })).then((groups) => {\n      // not required if: sort criteria changed -> groupLookup will be none\n      const sortedGroups = this.sortGroups(groups, groupLookup);\n      return this.index2pos(sortedGroups, maxDataIndex);\n    });\n  }\n\n  private readonly mapToDataRow = (i: number) => {\n    if (i < 0 || i >= this._dataRows.length) {\n      return {i, v: {}};\n    }\n    return this._dataRows[i];\n  };\n\n  viewRaw(indices: IndicesArray) {\n    return mapIndices(indices, (i) => this._data[i] || {});\n  }\n\n  viewRawRows(indices: IndicesArray) {\n    return mapIndices(indices, this.mapToDataRow);\n  }\n\n  getRow(index: number) {\n    return this._dataRows[index];\n  }\n\n  seq(indices: IndicesArray) {\n    return lazySeq(indices).map(this.mapToDataRow);\n  }\n\n  view(indices: IndicesArray) {\n    return this.viewRaw(indices);\n  }\n\n  mappingSample(col: INumberColumn): ISequence<number> {\n    const MAX_SAMPLE = 120; //at most 120 sample lines\n    const l = this._dataRows.length;\n    if (l <= MAX_SAMPLE) {\n      return lazySeq(this._dataRows).map((v) => col.getRawNumber(v));\n    }\n    //randomly select 500 elements\n    const indices = new Set<number>();\n\n    for (let i = 0; i < MAX_SAMPLE; ++i) {\n      let j = Math.floor(Math.random() * (l - 1));\n      while (indices.has(j)) {\n        j = Math.floor(Math.random() * (l - 1));\n      }\n      indices.add(j);\n    }\n    return lazySeq(Array.from(indices)).map((i) => col.getRawNumber(this._dataRows[i]));\n  }\n\n  searchAndJump(search: string | RegExp, col: Column) {\n    //case insensitive search\n    search = typeof search === 'string' ? search.toLowerCase() : search;\n    const f = typeof search === 'string' ? (v: string) => v.toLowerCase().indexOf((<string>search)) >= 0 : (<RegExp>search).test.bind(search);\n    const indices = <number[]>[];\n    for (let i = 0; i < this._dataRows.length; ++i) {\n      if (f(col.getLabel(this._dataRows[i]))) {\n        indices.push(i);\n      }\n    }\n    this.jumpToNearest(indices);\n  }\n\n}\n\nfunction toRows(data: any[]) {\n  return data.map((v, i) => ({v, i}));\n}\n","/**\n * number of bins before switching to dense mode\n * @internal\n */\nexport const DENSE_HISTOGRAM = 19;\n/**\n * minimal witdh of a column to show the label in the header\n * @internal\n */\nexport const MIN_LABEL_WIDTH = 30;\n/**\n * number of milliseconds to wait before a hovered canvas row will be replaced with a DOM one\n * @type {number}\n * @internal\n */\nexport const HOVER_DELAY_SHOW_DETAIL = 500;\n\nexport const GUESSED_ROW_HEIGHT = 18;\nexport const GUESSES_GROUP_HEIGHT = 40;\n","\nconst styles = new Map<string, string>();\n// {\n//   const r = /^[$]([\\w]+): ([\\w #.()'\\/,-]+)( !default)?;/gmi;\n//   const s = String(vars);\n\n//   let m: RegExpMatchArray | null = r.exec(s);\n//   while (m != null) {\n//     styles.set(m[1], m[2]);\n//     m = r.exec(s);\n//   }\n// }\n\n/** @internal */\nexport default function getStyle(key: string, defaultValue = '') {\n  if (key[0] === '$') {\n    key = key.slice(1);\n  }\n  if (styles.has(key)) {\n    return styles.get(key)!;\n  }\n  return defaultValue;\n}\n\n/** @internal */\nexport const COLUMN_PADDING = parseInt(getStyle('lu_engine_grip_gap', '5px'), 10);\n/** @internal */\nexport const FILTERED_OPACITY = parseFloat(getStyle('lu_filtered_opacity', '0.2'));\n/** @internal */\nexport const DASH = {\n  width: parseInt(getStyle('lu_missing_dash_width', '3px'), 10),\n  height: parseInt(getStyle('lu_missing_dash_height', '10px'), 10),\n  color: getStyle('lu_missing_dash_color', 'gray')\n};\n/** @internal */\nexport const UPSET = {\n  color: getStyle('lu_renderer_upset_color'),\n  inactive: parseFloat(getStyle('lu_renderer_upset_inactive_opacity', '0.1'))\n};\n/** @internal */\nexport const DOT = {\n  color: getStyle('lu_renderer_dot_color', 'gray'),\n  size: parseInt(getStyle('lu_renderer_dot_size', '5px'), 10),\n  opacity: parseFloat(getStyle('lu_renderer_dot_opacity', '0.5'))\n};\n/** @internal */\nexport const BOX_PLOT = {\n  box: getStyle('lu_renderer_boxplot_box', '#e0e0e0'),\n  stroke: getStyle('lu_renderer_boxplot_stroke', 'black'),\n  sort: getStyle('lu_renderer_boxplot_sort_indicator', '#ffa500'),\n  outlier: getStyle('lu_renderer_boxplot_outlier', '#e0e0e0')\n};\n/** @internal */\nexport const AGGREGATE = {\n  width: parseInt(getStyle('lu_aggregate_square_bracket_width', '4px'), 10),\n  strokeWidth: parseInt(getStyle('lu_aggregate_square_bracket_stroke_width', '2px'), 10),\n  color: getStyle('lu_aggregate_square_bracket_stroke_color', '#000'),\n  levelOffset: parseInt(getStyle('lu_aggregate_level_offset', '2px'), 10),\n  levelWidth: parseInt(getStyle('lu_aggregate_level_width', '22px'), 10)\n};\n/** @internal */\nexport const SLOPEGRAPH_WIDTH = parseInt(getStyle('lu_slope_width', '200px'), 10);\n/** @internal */\nexport const CANVAS_HEIGHT = 4;\n\n/** @internal */\nexport const CSS_PREFIX = getStyle('lu_css_prefix', 'lu');\n/** @internal */\nexport const ENGINE_CSS_PREFIX = 'le';\n\n/** @internal */\nexport function cssClass(suffix?: string) {\n  return suffix? `${CSS_PREFIX}-${suffix}` : CSS_PREFIX;\n}\n/** @internal */\nexport function engineCssClass(suffix?: string) {\n  return suffix? `${ENGINE_CSS_PREFIX}-${suffix}` : ENGINE_CSS_PREFIX;\n}\n\n/** @internal */\nexport function aria(text: string) {\n  return `<span class=\"${cssClass('aria')}\" aria-hidden=\"true\">${text}</span>`;\n}\n","import {MIN_LABEL_WIDTH} from '../constants';\nimport {Column, IArrayColumn, IDataRow, ICategoricalLikeColumn, isMapAbleColumn, DEFAULT_COLOR} from '../model';\nimport {hsl} from 'd3-color';\nimport {cssClass} from '../styles';\nimport {IRenderContext} from '.';\nimport {ISequence} from '../internal';\n\n/** @internal */\nexport function noop() {\n  // no op\n}\n\n/** @internal */\nexport const noRenderer = {\n  template: `<div></div>`,\n  update: noop\n};\n\n/** @internal */\nexport function setText<T extends Node>(node: T, text?: string): T {\n  if (text === undefined) {\n    return node;\n  }\n  //no performance boost if setting the text node directly\n  //const textNode = <Text>node.firstChild;\n  //if (textNode == null) {\n  //  node.appendChild(node.ownerDocument!.createTextNode(text));\n  //} else {\n  //  textNode.data = text;\n  //}\n  if (node.textContent !== text) {\n    node.textContent = text;\n  }\n  return node;\n}\n\n/**\n * for each item matching the selector execute the callback\n * @param node\n * @param selector\n * @param callback\n * @internal\n */\nexport function forEach<T extends Element>(node: Element, selector: string, callback: (d: T, i: number) => void) {\n  (<T[]>Array.from(node.querySelectorAll(selector))).forEach(callback);\n}\n\n/** @internal */\nexport function forEachChild<T extends Element>(node: Element, callback: (d: T, i: number) => void) {\n  (<T[]>Array.from(node.children)).forEach(callback);\n}\n\n/**\n * matches the columns and the dom nodes representing them\n * @param {HTMLElement} node row\n * @param columns columns to check\n * @internal\n */\nexport function matchColumns(node: HTMLElement, columns: {column: Column, template: string, rendererId: string}[], ctx: IRenderContext) {\n  if (node.childElementCount === 0) {\n    // initial call fast method\n    node.innerHTML = columns.map((c) => c.template).join('');\n    const children = Array.from(node.children);\n    columns.forEach((col, i) => {\n      const cnode = <HTMLElement>children[i];\n      // set attribute for finding again\n      cnode.dataset.columnId = col.column.id;\n      // store current renderer\n      cnode.dataset.renderer = col.rendererId;\n      cnode.classList.add(cssClass(`renderer-${col.rendererId}`));\n    });\n    return;\n  }\n\n  function matches(c: {column: Column, rendererId: string}, i: number) {\n    //do both match?\n    const n = <HTMLElement>node.children[i];\n    return n != null && n.dataset.columnId === c.column.id && n.dataset.renderer === c.rendererId;\n  }\n\n  if (columns.every(matches)) {\n    return; //nothing to do\n  }\n\n  const idsAndRenderer = new Set(columns.map((c) => `${c.column.id}@${c.rendererId}`));\n  //remove all that are not existing anymore\n  forEachChild(node, (n: HTMLElement) => {\n    const id = n.dataset.columnId;\n    const renderer = n.dataset.renderer;\n    const idAndRenderer = `${id}@${renderer}`;\n    if (!idsAndRenderer.has(idAndRenderer)) {\n      node.removeChild(n);\n    }\n  });\n  columns.forEach((col) => {\n    let cnode = <HTMLElement>node.querySelector(`[data-column-id=\"${col.column.id}\"]`);\n    if (!cnode) {\n      cnode = ctx.asElement(col.template);\n      cnode.dataset.columnId = col.column.id;\n      cnode.dataset.renderer = col.rendererId;\n      cnode.classList.add(cssClass(`renderer-${col.rendererId}`));\n    }\n    node.appendChild(cnode);\n  });\n}\n\n/** @internal */\nexport function wideEnough(col: IArrayColumn<any>, length: number = col.labels.length) {\n  const w = col.getWidth();\n  return w / length > MIN_LABEL_WIDTH; // at least 30 pixel\n}\n\n/** @internal */\nexport function wideEnoughCat(col: ICategoricalLikeColumn) {\n  const w = col.getWidth();\n  return w / col.categories.length > MIN_LABEL_WIDTH; // at least 30 pixel\n}\n\n\n\n// side effect\nconst adaptColorCache: {[bg: string]: string} = {};\n/**\n * Adapts the text color for a given background color\n * @param {string} bgColor as `#ff0000`\n * @returns {string} returns `black` or `white` for best contrast\n * @internal\n */\nexport function adaptTextColorToBgColor(bgColor: string): string {\n  const bak = adaptColorCache[bgColor];\n  if (bak) {\n    return bak;\n  }\n  return adaptColorCache[bgColor] = hsl(bgColor).l > 0.5 ? 'black' : 'white';\n}\n\n\n/**\n *\n * Adapts the text color for a given background color\n * @param {HTMLElement} node the node containing the text\n * @param {string} bgColor as `#ff0000`\n * @param {string} title the title to render\n * @param {number} width for which percentages of the cell this background applies (0..1)\n * @internal\n */\nexport function adaptDynamicColorToBgColor(node: HTMLElement, bgColor: string, title: string, width: number) {\n  const adapt = adaptTextColorToBgColor(bgColor);\n  if ((width <= 0.05 || adapt === 'black') || width > 0.9) { // almost empty or full\n    node.style.color = adapt === 'black' || width <= 0.05 ? null : adapt; // null = black\n    // node.classList.remove('lu-gradient-text');\n    // node.style.backgroundImage = null;\n    return;\n  }\n\n  node.style.color = null;\n  node.innerText = title;\n\n  const span = node.ownerDocument!.createElement('span');\n  span.classList.add(cssClass('gradient-text'));\n  span.style.color = adapt;\n  span.innerText = title;\n  node.appendChild(span);\n}\n\n\n/** @internal */\nexport const uniqueId: (prefix: string) => string = (function () {\n  // side effect but just within the function itself, so good for the library\n  let idCounter = 0;\n  return (prefix: string) => `${prefix}${(idCounter++).toString(36)}`;\n})();\n\n\nconst NUM_EXAMPLE_VALUES = 5;\n\n/** @internal */\nexport function exampleText(col: Column, rows: ISequence<IDataRow>) {\n  const examples = <string[]>[];\n  rows.every((row) => {\n    if (col.getValue(row) == null) {\n      return true;\n    }\n    const v = col.getLabel(row);\n    examples.push(v);\n    return examples.length < NUM_EXAMPLE_VALUES;\n  });\n  return `${examples.join(', ')}${examples.length < rows.length ? ', ...' : ''}`;\n}\n\n\n/** @internal */\nexport function multiLevelGridCSSClass(idPrefix: string, column: Column) {\n  return cssClass(`stacked-${idPrefix}-${column.id}`);\n}\n\n\n/** @internal */\nexport function colorOf(col: Column) {\n  if (isMapAbleColumn(col)) {\n    return col.getColorMapping().apply(0);\n  }\n  return DEFAULT_COLOR;\n}\n","import {IDataRow, IOrderedGroup, ActionColumn, Column} from '../model';\nimport {IRenderContext, ERenderMode, ICellRendererFactory} from './interfaces';\nimport {forEachChild, noRenderer} from './utils';\nimport {cssClass} from '../styles';\n\n/** @internal */\nexport default class ActionRenderer implements ICellRendererFactory {\n  readonly title = 'Default';\n\n  canRender(col: Column, mode: ERenderMode) {\n    return col instanceof ActionColumn && mode !== ERenderMode.SUMMARY;\n  }\n\n  create(col: ActionColumn) {\n    const actions = col.actions;\n    return {\n      template: `<div class=\"${cssClass('actions')} ${cssClass('hover-only')}\">${actions.map((a) => `<span title='${a.name}' class='${a.className || ''}'>${a.icon || ''}</span>`).join('')}</div>`,\n      update: (n: HTMLElement, d: IDataRow) => {\n        forEachChild(n, (ni: HTMLSpanElement, i: number) => {\n          ni.onclick = function (event) {\n            event.preventDefault();\n            event.stopPropagation();\n            setTimeout(() => actions[i].action(d), 1); // async\n          };\n        });\n      }\n    };\n  }\n\n  createGroup(col: ActionColumn, context: IRenderContext) {\n    const actions = col.groupActions;\n    return {\n      template: `<div class=\"${cssClass('actions')} ${cssClass('hover-only')}\">${actions.map((a) => `<span title='${a.name}' class='${a.className || ''}'>${a.icon || ''}</span>`).join('')}</div>`,\n      update: (n: HTMLElement, group: IOrderedGroup) => {\n        forEachChild(n, (ni: HTMLSpanElement, i: number) => {\n          ni.onclick = function (event) {\n            event.preventDefault();\n            event.stopPropagation();\n            context.tasks.groupRows(col, group, 'identity', (r) => r).then((rows) => {\n              if (typeof rows === 'symbol') {\n                return;\n              }\n              setTimeout(() => actions[i].action(group, Array.from(rows)), 1); // async\n            });\n          };\n        });\n      }\n    };\n  }\n\n  createSummary() {\n    return noRenderer;\n  }\n}\n","import {IAggregationStrategy} from './interfaces';\nimport {IOrderedGroup, IGroup, IGroupParent, IGroupData, IGroupItem, isGroup} from '../model';\n\nexport function isAlwaysShowingGroupStrategy(strategy: IAggregationStrategy) {\n  return strategy === 'group+item' || strategy === 'group+item+top' || strategy === 'group+top+item';\n}\n\nexport function hasTopNStrategy(strategy: IAggregationStrategy) {\n  return strategy === 'group+item+top' || strategy === 'group+top+item';\n}\n\nexport declare type IGroupMeta = 'first' | 'last' | 'first last' | null;\n\nexport function toItemMeta(relativeIndex: number, group: IOrderedGroup, topN: number): IGroupMeta {\n  if (relativeIndex === 0) {\n    return group.order.length === 1 ? 'first last' : 'first';\n  }\n  if ((relativeIndex === (group.order.length - 1)) || (topN > 0 && relativeIndex === (topN - 1))) {\n    return 'last';\n  }\n  return null;\n}\n\nexport function groupParents(group: IGroup, meta: IGroupMeta) {\n  const parents: {group: IGroup, meta: IGroupMeta}[] = [{group, meta}];\n\n  let prev = group;\n  let prevMeta = meta;\n  let parent: IGroupParent | undefined | null = group.parent;\n\n  while (parent) {\n    if (parent.subGroups.length === 1 && (prevMeta === 'first last')) {\n      meta = 'first last';\n    } else if (parent.subGroups[0] === prev && (prevMeta === 'first last' || prevMeta === 'first')) {\n      meta = 'first';\n    } else if (parent.subGroups[parent.subGroups.length - 1] === prev && (prevMeta === 'last' || prevMeta === 'first last')) {\n      meta = 'last';\n    } else {\n      meta = null;\n    }\n    parents.unshift({group: parent, meta});\n\n    prev = parent;\n    prevMeta = meta;\n    parent = parent.parent;\n  }\n  return parents;\n}\n\nexport interface ITopNGetter {\n  (item: IGroup): number;\n}\n\n/**\n * number of group levels this items ends\n */\nexport function groupEndLevel(item: IGroupData | IGroupItem, topNGetter: ITopNGetter) {\n  const group: IGroup = isGroup(item) ? item : item.group;\n  const last = isGroup(item) ? 'first last' : toItemMeta(item.relativeIndex, item.group, topNGetter(group));\n  if (last !== 'last' && last !== 'first last') {\n    return 0;\n  }\n\n  let prev = group;\n  let parent: IGroupParent | undefined | null = group.parent;\n  let i = 1;\n\n  while (parent) {\n    if (!(parent.subGroups.length === 1 || (parent.subGroups[parent.subGroups.length - 1] === prev))) {\n      // not last of group - end\n      return i;\n    }\n    ++i;\n    prev = parent;\n    parent = parent.parent;\n  }\n\n  return i;\n}\n\nexport function isSummaryGroup(group: IGroup, strategy: IAggregationStrategy, topNGetter: ITopNGetter) {\n  const topN = topNGetter(group);\n  return isAlwaysShowingGroupStrategy(strategy) && topN !== 0;\n}\n\nexport function toRowMeta(item: IGroupData | IGroupItem, strategy: IAggregationStrategy, topNGetter: ITopNGetter): string | null {\n  if (isGroup(item)) {\n    if (isSummaryGroup(item, strategy, topNGetter)) {\n      return 'first';\n    }\n    const level = groupEndLevel(item, topNGetter);\n    if (level === 0) {\n      return 'first';\n    }\n    return `first last${level === 1 ? '' : level - 1}`;\n  }\n\n  const last =  toItemMeta(item.relativeIndex, item.group, topNGetter(item.group));\n  if (last == null) {\n    return null;\n  }\n  const level = groupEndLevel(item, topNGetter);\n  if (level === 0) {\n    return null;\n  }\n  return `last${level === 1 ? '' : level - 1}`;\n}\n","import {IDataRow, Column, AggregateGroupColumn, EAggregationState, IOrderedGroup, IGroupParent, IGroup, defaultGroup} from '../model';\nimport {AGGREGATE, CANVAS_HEIGHT, cssClass} from '../styles';\nimport {IRenderContext, ICellRendererFactory} from './interfaces';\nimport {IDataProvider} from '../provider';\nimport {groupParents, toItemMeta, isAlwaysShowingGroupStrategy, hasTopNStrategy, isSummaryGroup} from '../provider/internal';\n\nfunction preventDefault(event: Event) {\n  event.preventDefault();\n  event.stopPropagation();\n}\n\nfunction matchNodes(node: HTMLElement, length: number, clazz = 'agg-level', addTopN = false) {\n  const doc = node.ownerDocument!;\n  const children = <HTMLElement[]>Array.from(node.children);\n  if (addTopN) { // top N buttons\n    length = length + 1;\n  }\n\n  // add missing\n  for (let i = children.length; i < length; ++i) {\n    const child = doc.createElement('div');\n    child.classList.add(cssClass(clazz));\n    children.push(child);\n    node.appendChild(child);\n  }\n  // remove too many\n  for (const r of children.splice(length, children.length - length)) {\n    r.remove();\n  }\n  if (addTopN) {\n    const last = children[children.length - 1];\n    last.classList.remove(cssClass(clazz));\n    last.classList.add(cssClass('agg-all'));\n  }\n  return children;\n}\n\nfunction renderGroups(node: HTMLElement, group: IOrderedGroup, relativeIndex: number, col: AggregateGroupColumn, provider: IDataProvider) {\n  const strategy = provider.getAggregationStrategy();\n  const ranking = col.findMyRanker()!;\n  const topNGetter = (group: IGroup) => provider.getTopNAggregated(ranking, group);\n\n  const isRow = relativeIndex >= 0;\n  const isLeafGroup = !(<IGroupParent><any>group).subGroups || (<IGroupParent><any>group).subGroups.length === 0;\n\n  const alwaysShowGroup = isAlwaysShowingGroupStrategy(strategy);\n  const isSummary = !isRow && isSummaryGroup(group, strategy, topNGetter);\n  const hasTopN = isSummary && isLeafGroup && hasTopNStrategy(strategy);\n\n  const parents = groupParents(group, relativeIndex >= 0 ? toItemMeta(relativeIndex, group, provider.getTopNAggregated(ranking, group)) : 'first last');\n  const children = matchNodes(node, parents.length, 'agg-level', hasTopN);\n\n  const lastParent = parents.length - 1;\n\n  for (let i = 0; i < parents.length; ++i) {\n    const parent = parents[i];\n    const child = children[i];\n    const state = provider.getAggregationState(ranking, parent.group);\n    const isLastGroup = i === lastParent;\n    child.dataset.level = String(parents.length - 1 - i); // count backwards\n\n    if (alwaysShowGroup && (isRow || i < lastParent)) {\n      // inner or last\n      if (!isSummary && (parent.meta === 'last' || parent.meta === 'first last')) {\n        child.dataset.meta = 'last';\n      } else {\n        delete child.dataset.meta;\n      }\n      child.classList.toggle(cssClass('agg-inner'), isRow && isLastGroup);\n      child.classList.remove(cssClass('agg-expand'), cssClass('agg-collapse'));\n      child.title = '';\n      delete child.onclick;\n      continue;\n    }\n\n    const isCollapsed = state === EAggregationState.COLLAPSE;\n    const isFirst = parent.meta === 'first' || parent.meta === 'first last';\n    const isShowAll = state === EAggregationState.EXPAND;\n    const childTopN = hasTopN && isLastGroup ? children[parents.length] : null;\n\n    let meta = parent.meta;\n    if (isSummary && parent.meta === 'first last') {\n      meta = 'first';\n    }\n\n    if (meta) {\n      child.dataset.meta = meta;\n    } else {\n      delete child.dataset.meta;\n    }\n\n    child.classList.toggle(cssClass('agg-expand'), isFirst);\n    child.classList.toggle(cssClass('agg-collapse'), isCollapsed);\n    child.title = isFirst ? (isCollapsed ? 'Expand Group' : 'Collapse Group') : '';\n\n    if (!isFirst) {\n      delete child.onclick;\n    } else {\n      child.onclick = (evt) => {\n        preventDefault(evt);\n        let nextState: EAggregationState;\n        switch (strategy) {\n          case 'group+top+item':\n            nextState = state === EAggregationState.COLLAPSE ? EAggregationState.EXPAND_TOP_N : EAggregationState.COLLAPSE;\n            break;\n          case 'group':\n          case 'item':\n          case 'group+item':\n          case 'group+item+top':\n          default:\n            nextState = state === EAggregationState.COLLAPSE ? EAggregationState.EXPAND : EAggregationState.COLLAPSE;\n            break;\n        }\n        col.setAggregated(parent.group, nextState);\n      };\n    }\n\n    if (!childTopN) {\n      continue;\n    }\n    childTopN.dataset.level = String(i); // count upwards\n    childTopN.classList.toggle(cssClass('agg-compress'), isShowAll);\n    childTopN.title = isShowAll ? `Show Top ${provider.getShowTopN()} Only` : 'Show All';\n    childTopN.onclick = (evt) => {\n      preventDefault(evt);\n      col.setAggregated(parent.group, state === EAggregationState.EXPAND ? EAggregationState.EXPAND_TOP_N : EAggregationState.EXPAND);\n    };\n  }\n}\n\nfunction isDummyGroup(group: IGroup) {\n  return group.parent == null && group.name === defaultGroup.name;\n}\n\n/** @internal */\nexport default class AggregateGroupRenderer implements ICellRendererFactory {\n  readonly title = 'Default';\n\n  canRender(col: Column) {\n    return col instanceof AggregateGroupColumn;\n  }\n\n  create(col: AggregateGroupColumn, context: IRenderContext) {\n    return {\n      template: `<div></div>`,\n      update(node: HTMLElement, _row: IDataRow, i: number, group: IOrderedGroup) {\n        if (isDummyGroup(group)) {\n          return;\n        }\n        renderGroups(node, group, i, col, context.provider);\n      },\n      render(ctx: CanvasRenderingContext2D, _row: IDataRow, i: number, group: IOrderedGroup) {\n        if (isDummyGroup(group)) {\n          return;\n        }\n        const parents = groupParents(group, toItemMeta(i, group, context.provider.getTopNAggregated(col.findMyRanker()!, group)));\n        ctx.fillStyle = AGGREGATE.color;\n        for (let i = 0; i < parents.length; ++i) {\n          ctx.fillRect(AGGREGATE.levelWidth * i + AGGREGATE.levelOffset, 0, AGGREGATE.strokeWidth, CANVAS_HEIGHT);\n        }\n        return parents.some((d) => d.meta != null);\n      }\n    };\n  }\n\n  createGroup(col: AggregateGroupColumn, context: IRenderContext) {\n    return {\n      template: `<div><div class=\"${cssClass('agg-level')}\"></div></div>`,\n      update(node: HTMLElement, group: IOrderedGroup) {\n        renderGroups(node, group, -1, col, context.provider);\n      }\n    };\n  }\n\n  createSummary(col: AggregateGroupColumn, context: IRenderContext) {\n    return {\n      template: `<div></div>`,\n      update: (node: HTMLElement) => {\n        const ranking = col.findMyRanker()!;\n        const groups = ranking.getGroups();\n        if (groups.length === 1 && groups[0].name === defaultGroup.name) {\n          return;\n        }\n\n        const gparents = groups.map((group) => groupParents(group, 'first last'));\n\n        const max = gparents.reduce((a, b) => Math.max(a, b.length), Number.NEGATIVE_INFINITY);\n        const children = matchNodes(node, max, 'agg-expand');\n\n        for (let i = 0; i < max; ++i) {\n          const child = children[i];\n          const subGroups = <IOrderedGroup[]>gparents.map((d) => d[i] ? d[i].group : null).filter((d) => d != null);\n\n          const isCollapsed = subGroups.every((d) => context.provider.getAggregationState(ranking, d) === EAggregationState.COLLAPSE);\n          child.classList.toggle(cssClass('agg-collapse'), isCollapsed);\n          child.title = isCollapsed ? 'Expand All Groups' : 'Collapse All Groups';\n\n          child.onclick = (evt) => {\n            preventDefault(evt);\n            context.provider.aggregateAllOf(ranking, isCollapsed ? EAggregationState.EXPAND : EAggregationState.COLLAPSE, subGroups);\n          };\n        }\n      }\n    };\n  }\n}\n","import {cssClass} from '../styles';\n\n/** @internal */\nexport const filterMissingText = 'Filter rows containing missing values';\n\n/** @internal */\nexport function filterMissingMarkup(bakMissing: boolean) {\n  return `<label class=\"${cssClass('checkbox')}\">\n    <input type=\"checkbox\" ${bakMissing ? 'checked=\"checked\"' : ''}>\n    <span class=\"${cssClass('filter-missing')}\">${filterMissingText}</span>\n  </label>`;\n}\n\n/** @internal */\nexport function filterMissingNumberMarkup(bakMissing: boolean, count: number) {\n  return `<label class=\"${cssClass('checkbox')}\">\n    <input type=\"checkbox\" ${bakMissing ? 'checked=\"checked\"' : ''} ${count === 0 ? 'disabled' : ''}>\n    <span class=\"${cssClass('filter-missing')} ${count === 0 ? cssClass('disabled') : ''}\">Filter ${count} missing value rows</span>\n  </label>`;\n}\n\n/** @internal */\nexport function findFilterMissing(node: HTMLElement) {\n  return <HTMLInputElement>(<HTMLElement>node.getElementsByClassName(cssClass('filter-missing'))[0]!).previousElementSibling!;\n}\n\n/** @internal */\nexport function updateFilterMissingNumberMarkup(element: HTMLElement, count: number) {\n  const checked = element.getElementsByTagName('input')![0];\n  checked.disabled = count === 0;\n  element.lastElementChild!.classList.toggle(cssClass('disabled'), count === 0);\n  element.lastElementChild!.textContent = `Filter ${count} missing value rows`;\n}\n","import {Column, IDataRow, isMissingValue} from '../model';\nimport {CANVAS_HEIGHT, DASH, cssClass} from '../styles';\n\nexport function renderMissingValue(ctx: CanvasRenderingContext2D, width: number, height: number, x = 0, y = 0) {\n\n  const dashX = Math.max(0, x + (width - DASH.width) / 2); // center horizontally\n  const dashY = Math.max(0, y + (height - DASH.height) / 2); // center vertically\n  ctx.fillStyle = DASH.color;\n  ctx.fillRect(dashX, dashY, Math.min(width, DASH.width), Math.min(height, DASH.height));\n}\n\nexport function renderMissingDOM(node: HTMLElement, col: Column, d: IDataRow) {\n  const missing = isMissingValue(col.getValue(d));\n  node.classList.toggle(cssClass('missing'), missing);\n  return missing;\n}\n\nexport function renderMissingCanvas(ctx: CanvasRenderingContext2D, col: Column, d: IDataRow, width: number, x = 0, y = 0) {\n  const missing = isMissingValue(col.getValue(d));\n  if (missing) {\n    renderMissingValue(ctx, width, CANVAS_HEIGHT, x, y);\n  }\n  return missing;\n}\n","import {StringColumn, Column, IDataRow, IOrderedGroup} from '../model';\nimport {filterMissingMarkup, findFilterMissing} from '../ui/missing';\nimport {IRenderContext, ICellRendererFactory} from './interfaces';\nimport {renderMissingDOM} from './missing';\nimport {setText, exampleText} from './utils';\nimport {cssClass} from '../styles';\n\n\n/**\n * renders a string with additional alignment behavior\n * one instance factory shared among strings\n * @internal\n */\nexport default class StringCellRenderer implements ICellRendererFactory {\n  readonly title = 'Default';\n\n  canRender(col: Column) {\n    return col instanceof StringColumn;\n  }\n\n  create(col: StringColumn) {\n    const align = col.alignment || 'left';\n    return {\n      template: `<div${align !== 'left' ? ` class=\"${cssClass(align)}\"` : ''}> </div>`,\n      update: (n: HTMLDivElement, d: IDataRow) => {\n        renderMissingDOM(n, col, d);\n        if (col.escape) {\n          setText(n, col.getLabel(d));\n        } else {\n          n.innerHTML = col.getLabel(d);\n        }\n      }\n    };\n  }\n\n\n  createGroup(col: StringColumn, context: IRenderContext) {\n    return {\n      template: `<div> </div>`,\n      update: (n: HTMLDivElement, group: IOrderedGroup) => {\n        return context.tasks.groupExampleRows(col, group, 'string', (rows) => exampleText(col, rows)).then((text) => {\n          if (typeof text === 'symbol') {\n            return;\n          }\n          if (col.escape) {\n            setText(n, text);\n          } else {\n            n.innerHTML = text;\n          }\n        });\n      }\n    };\n  }\n\n  private static interactiveSummary(col: StringColumn, node: HTMLElement) {\n    const form = <HTMLFormElement>node;\n    const filterMissing = findFilterMissing(node);\n    const input = <HTMLInputElement>node.querySelector('input[type=\"text\"]');\n    const isRegex = <HTMLInputElement>node.querySelector('input[type=\"checkbox\"]');\n\n    const update = () => {\n      input.disabled = filterMissing.checked;\n      isRegex.disabled = filterMissing.checked;\n\n      if (filterMissing.checked) {\n        col.setFilter(StringColumn.FILTER_MISSING);\n        return;\n      }\n      const valid = input.value.trim();\n      filterMissing.disabled = valid.length > 0;\n      if (valid.length <= 0) {\n        col.setFilter(null);\n        return;\n      }\n      col.setFilter(isRegex.checked ? new RegExp(input.value) : input.value);\n    };\n\n    filterMissing.onchange = update;\n    input.onchange = update;\n    isRegex.onchange = update;\n    form.onsubmit = (evt) => {\n      evt.preventDefault();\n      evt.stopPropagation();\n      update();\n      return false;\n    };\n\n    return (actCol: StringColumn) => {\n      col = actCol;\n      let bak = col.getFilter() || '';\n      const bakMissing = bak === StringColumn.FILTER_MISSING;\n      if (bakMissing) {\n        bak = '';\n      }\n      filterMissing.checked = bakMissing;\n      input.value = bak instanceof RegExp ? bak.source : bak;\n      isRegex.checked = bak instanceof RegExp;\n      filterMissing.disabled = input.value.trim().length > 0;\n      input.disabled = filterMissing.checked;\n      isRegex.disabled = filterMissing.checked;\n    };\n  }\n\n  createSummary(col: StringColumn, _context: IRenderContext, interactive: boolean) {\n    if (!interactive) {\n      return {\n        template: `<div></div>`,\n        update: (node: HTMLElement) => {\n          const filter = col.getFilter() || '';\n          node.textContent = toString(filter);\n        }\n      };\n    }\n    let bak = col.getFilter() || '';\n    const bakMissing = bak === StringColumn.FILTER_MISSING;\n    if (bakMissing) {\n      bak = '';\n    }\n    let update: (col: StringColumn) => void;\n    return {\n      template: `<form><input type=\"text\" placeholder=\"Filter ${col.desc.label}...\" autofocus value=\"${(bak instanceof RegExp) ? bak.source : bak}\">\n          <label class=\"${cssClass('checkbox')}\"><input type=\"checkbox\" ${(bak instanceof RegExp) ? 'checked=\"checked\"' : ''}><span>Use regular expressions</span></label>\n          ${filterMissingMarkup(bakMissing)}</form>`,\n      update: (node: HTMLElement) => {\n        if (!update) {\n          update = StringCellRenderer.interactiveSummary(col, node);\n        }\n        update(col);\n      }\n    };\n  }\n}\n\nfunction toString(filter: null | string | RegExp) {\n  if (filter == null || filter === '' || filter === StringColumn.FILTER_MISSING) {\n    return '';\n  }\n  if (filter instanceof RegExp) {\n    return filter.source;\n  }\n  return String(filter);\n}\n","import {IDataRow, AnnotateColumn, Column} from '../model';\nimport StringCellRenderer from './StringCellRenderer';\nimport {cssClass} from '../styles';\n\n/** @internal */\nexport default class AnnotationRenderer extends StringCellRenderer {\n  readonly title = 'Default';\n\n  canRender(col: Column) {\n    return super.canRender(col) && col instanceof AnnotateColumn;\n  }\n\n  create(col: AnnotateColumn) {\n    return {\n      template: `<div>\n        <span></span>\n        <input class=\"${cssClass('hover-only')} ${cssClass('annotate-input')}\">\n       </div>`,\n      update: (n: HTMLElement, d: IDataRow) => {\n        const label = <HTMLElement>n.firstElementChild!;\n        const input = <HTMLInputElement>n.lastElementChild!;\n        input.onchange = () => {\n          label.textContent = input.value;\n          col.setValue(d, input.value);\n        };\n        input.onclick = (event) => {\n          event.stopPropagation();\n        };\n        label.textContent = input.value = col.getLabel(d);\n      }\n    };\n  }\n}\n","import {Column, isMapAbleColumn, IDataRow, DEFAULT_COLOR} from '../model';\nimport {IImposer} from './interfaces';\n\nexport function colorOf(col: Column, row: IDataRow | null, imposer?: IImposer, valueHint?: number) {\n  if (imposer && imposer.color) {\n    return imposer.color(row, valueHint);\n  }\n  if (!row) {\n    if (isMapAbleColumn(col)) {\n      return col.getColorMapping().apply(valueHint != null ? valueHint : 0);\n    }\n    return DEFAULT_COLOR;\n  }\n  return col.getColor(row);\n}\n","import {round} from '../internal';\nimport {Column, isNumbersColumn, IDataRow, INumberColumn, isNumberColumn, DEFAULT_COLOR} from '../model';\nimport {setText, adaptDynamicColorToBgColor, noRenderer} from './utils';\nimport {CANVAS_HEIGHT, cssClass} from '../styles';\nimport {colorOf} from './impose';\nimport {IRenderContext, ERenderMode, ICellRendererFactory, IImposer} from './interfaces';\nimport {renderMissingCanvas, renderMissingDOM} from './missing';\n\n\n/** @internal */\nexport default class BarCellRenderer implements ICellRendererFactory {\n  readonly title = 'Bar';\n\n  /**\n   * flag to always render the value\n   * @type {boolean}\n   */\n\n  constructor(private readonly renderValue: boolean = false) {\n  }\n\n  canRender(col: Column, mode: ERenderMode) {\n    return mode === ERenderMode.CELL && isNumberColumn(col) && !isNumbersColumn(col);\n  }\n\n  create(col: INumberColumn, context: IRenderContext, imposer?: IImposer) {\n    const width = context.colWidth(col);\n    return {\n      template: `<div title=\"\">\n          <div class=\"${cssClass('bar-label')}\" style='background-color: ${DEFAULT_COLOR}'>\n            <span ${this.renderValue ? '' : `class=\"${cssClass('hover-only')}\"`}></span>\n          </div>\n        </div>`,\n      update: (n: HTMLDivElement, d: IDataRow) => {\n        const value = col.getNumber(d);\n        const missing = renderMissingDOM(n, col, d);\n        const w = isNaN(value) ? 0 : round(value * 100, 2);\n        const title = col.getLabel(d);\n        n.title = title;\n\n        const bar = <HTMLElement>n.firstElementChild!;\n        bar.style.width = missing ? '100%' : `${w}%`;\n        const color = colorOf(col, d, imposer, value);\n        bar.style.backgroundColor = missing ? null : color;\n        setText(bar.firstElementChild!, title);\n        const item = <HTMLElement>bar.firstElementChild!;\n        setText(item, title);\n        adaptDynamicColorToBgColor(item, color || DEFAULT_COLOR, title, w / 100);\n      },\n      render: (ctx: CanvasRenderingContext2D, d: IDataRow) => {\n        if (renderMissingCanvas(ctx, col, d, width)) {\n          return;\n        }\n        const value = col.getNumber(d);\n        ctx.fillStyle = colorOf(col, d, imposer, value) || DEFAULT_COLOR;\n        const w = width * value;\n        ctx.fillRect(0, 0, isNaN(w) ? 0 : w, CANVAS_HEIGHT);\n\n      }\n    };\n  }\n\n  createGroup() {\n    return noRenderer;\n  }\n\n  createSummary() {\n    return noRenderer;\n  }\n}\n","import {Column, IDataRow} from '../model';\nimport {ERenderMode, ICellRendererFactory, IGroupCellRenderer, ISummaryRenderer, ICellRenderer} from './interfaces';\nimport {renderMissingDOM} from './missing';\nimport {noRenderer, setText} from './utils';\n\n/**\n * default renderer instance rendering the value as a text\n * @internal\n */\nexport class DefaultCellRenderer implements ICellRendererFactory {\n  title = 'String';\n  groupTitle = 'None';\n  summaryTitle = 'None';\n\n  canRender(_col: Column, _mode: ERenderMode) {\n    return true;\n  }\n\n  create(col: Column): ICellRenderer {\n    return {\n      template: `<div> </div>`,\n      update: (n: HTMLDivElement, d: IDataRow) => {\n        renderMissingDOM(n, col, d);\n        setText(n, col.getLabel(d));\n      }\n    };\n  }\n\n  createGroup(_col: Column): IGroupCellRenderer {\n    return noRenderer;\n  }\n\n  createSummary(): ISummaryRenderer {\n    return noRenderer;\n  }\n}\n","import {Column, BooleanColumn} from '../model';\nimport {DefaultCellRenderer} from './DefaultCellRenderer';\nimport {ERenderMode} from './interfaces';\nimport {cssClass} from '../styles';\n\n/** @internal */\nexport default class BooleanCellRenderer extends DefaultCellRenderer {\n  readonly title = 'Default';\n\n  canRender(col: Column, mode: ERenderMode) {\n    return col instanceof BooleanColumn && mode === ERenderMode.CELL;\n  }\n\n  create(col: Column) {\n    const r = super.create(col);\n    (<any>r).template = `<div class=\"${cssClass('center')}\"> </div>`;\n    return r;\n  }\n}\n","import {IBoxPlotData, IAdvancedBoxPlotData, round} from '../internal';\nimport {NumberColumn, IBoxPlotColumn, INumberColumn, isBoxPlotColumn, Column, IDataRow, isNumberColumn, isMapAbleColumn, IOrderedGroup} from '../model';\nimport {BOX_PLOT, CANVAS_HEIGHT, DOT, cssClass} from '../styles';\nimport {colorOf} from './impose';\nimport {IRenderContext, ERenderMode, ICellRendererFactory, IImposer} from './interfaces';\nimport {renderMissingCanvas} from './missing';\nimport {tasksAll} from '../provider';\n\nconst BOXPLOT = `<div title=\"\">\n  <div class=\"${cssClass('boxplot-whisker')}\">\n    <div class=\"${cssClass('boxplot-box')}\"></div>\n    <div class=\"${cssClass('boxplot-median')}\"></div>\n    <div class=\"${cssClass('boxplot-mean')}\"></div>\n  </div>\n</div>`;\n\nconst MAPPED_BOXPLOT = `<div title=\"\">\n  <div class=\"${cssClass('boxplot-whisker')}\">\n    <div class=\"${cssClass('boxplot-box')}\"></div>\n    <div class=\"${cssClass('boxplot-median')}\"></div>\n    <div class=\"${cssClass('boxplot-mean')}\"></div>\n  </div>\n  <span class=\"${cssClass('mapping-hint')}\"></span><span class=\"${cssClass('mapping-hint')}\"></span>\n</div>`;\n\n\n\n/** @internal */\nexport function computeLabel(col: INumberColumn, v: IBoxPlotData | IAdvancedBoxPlotData) {\n  if (v == null) {\n    return '';\n  }\n  const f = col.getNumberFormat();\n  const mean = (<IAdvancedBoxPlotData>v).mean != null ? `mean = ${f((<IAdvancedBoxPlotData>v).mean)} (dashed line)\\n` : '';\n  return `min = ${f(v.min)}\\nq1 = ${f(v.q1)}\\nmedian = ${f(v.median)}\\n${mean}q3 = ${f(v.q3)}\\nmax = ${f(v.max)}`;\n}\n\n/** @internal */\nexport default class BoxplotCellRenderer implements ICellRendererFactory {\n  readonly title = 'Box Plot';\n\n  canRender(col: Column, mode: ERenderMode) {\n    return (isBoxPlotColumn(col) && mode === ERenderMode.CELL || (isNumberColumn(col) && mode !== ERenderMode.CELL));\n  }\n\n  create(col: IBoxPlotColumn, context: IRenderContext, imposer?: IImposer) {\n    const sortMethod = <keyof IBoxPlotData>col.getSortMethod();\n    const sortedByMe = col.isSortedByMe().asc !== undefined;\n    const width = context.colWidth(col);\n    return {\n      template: BOXPLOT,\n      update: (n: HTMLElement, d: IDataRow) => {\n        const data = col.getBoxPlotData(d);\n        if (!data) {\n          n.classList.add(cssClass('missing'));\n          return;\n        }\n        n.classList.remove(cssClass('missing'));\n        const label = col.getRawBoxPlotData(d)!;\n        renderDOMBoxPlot(col, n, data!, label, sortedByMe ? sortMethod : '', colorOf(col, d, imposer));\n      },\n      render: (ctx: CanvasRenderingContext2D, d: IDataRow) => {\n        if (renderMissingCanvas(ctx, col, d, width)) {\n          return;\n        }\n\n        // Rectangle\n        const data = col.getBoxPlotData(d);\n        if (!data) {\n          return;\n        }\n\n        const scaled = {\n          min: data.min * width,\n          median: data.median * width,\n          mean: (<IAdvancedBoxPlotData>data).mean != null ? (<IAdvancedBoxPlotData>data).mean * width : undefined,\n          q1: data.q1 * width,\n          q3: data.q3 * width,\n          max: data.max * width,\n          outlier: data.outlier ? data.outlier.map((d) => d * width) : undefined,\n          whiskerLow: data.whiskerLow != null ? data.whiskerLow * width : undefined,\n          whiskerHigh: data.whiskerHigh != null ? data.whiskerHigh * width : undefined\n        };\n        renderBoxPlot(ctx, scaled, sortedByMe ? sortMethod : '', colorOf(col, d, imposer), CANVAS_HEIGHT, 0);\n      }\n    };\n  }\n\n  createGroup(col: INumberColumn, context: IRenderContext, imposer?: IImposer) {\n    const sort = (col instanceof NumberColumn && col.isGroupSortedByMe().asc !== undefined) ? col.getSortMethod() : '';\n    return {\n      template: BOXPLOT,\n      update: (n: HTMLElement, group: IOrderedGroup) => {\n        return tasksAll([context.tasks.groupBoxPlotStats(col, group, false), context.tasks.groupBoxPlotStats(col, group, true)]).then((data) => {\n          if (typeof data === 'symbol') {\n            return;\n          }\n          // render\n          n.classList.toggle(cssClass('missing'), data === null);\n          if (data === null) {\n            return;\n          }\n          renderDOMBoxPlot(col, n, data[0].group, data[1].group, sort, colorOf(col, null, imposer));\n        });\n      }\n    };\n  }\n\n  createSummary(col: INumberColumn, context: IRenderContext, _interactive: boolean, imposer?: IImposer) {\n    return {\n      template: isMapAbleColumn(col) ? MAPPED_BOXPLOT : BOXPLOT,\n      update: (n: HTMLElement) => {\n        return context.tasks.summaryBoxPlotStats(col).then((data) => {\n          if (typeof data === 'symbol') {\n            return;\n          }\n          const {summary} = data;\n          if (summary == null) {\n            n.classList.add(cssClass('missing'));\n            return;\n          }\n          n.classList.remove(cssClass('missing'));\n          const sort = (col instanceof NumberColumn && col.isGroupSortedByMe().asc !== undefined) ? col.getSortMethod() : '';\n\n          if (isMapAbleColumn(col)) {\n            const range = col.getRange();\n            Array.from(n.getElementsByTagName('span')).forEach((d: HTMLElement, i) => d.textContent = range[i]);\n          }\n\n          renderDOMBoxPlot(col, n, summary, summary, sort, colorOf(col, null, imposer), isMapAbleColumn(col));\n        });\n      }\n    };\n  }\n}\n\nfunction renderDOMBoxPlot(col: INumberColumn, n: HTMLElement, data: IBoxPlotData | IAdvancedBoxPlotData, label: IBoxPlotData | IAdvancedBoxPlotData, sort: string, color: string | null, hasRange: boolean = false) {\n  n.title = computeLabel(col, label);\n\n  const whiskers = <HTMLElement>n.firstElementChild;\n  const box = <HTMLElement>whiskers.firstElementChild;\n  const median = <HTMLElement>box.nextElementSibling;\n  const mean = <HTMLElement>whiskers.lastElementChild;\n\n  const leftWhisker = data.whiskerLow != null ? data.whiskerLow : Math.max(data.q1 - 1.5 * (data.q3 - data.q1), data.min);\n  const rightWhisker = data.whiskerHigh != null ? data.whiskerHigh : Math.min(data.q3 + 1.5 * (data.q3 - data.q1), data.max);\n  whiskers.style.left = `${round(leftWhisker * 100, 2)}%`;\n  const range = rightWhisker - leftWhisker;\n  whiskers.style.width = `${round(range * 100, 2)}%`;\n\n  //relative within the whiskers\n  box.style.left = `${round((data.q1 - leftWhisker) / range * 100, 2)}%`;\n  box.style.width = `${round((data.q3 - data.q1) / range * 100, 2)}%`;\n  box.style.backgroundColor = color;\n\n  //relative within the whiskers\n  median.style.left = `${round((data.median - leftWhisker) / range * 100, 2)}%`;\n  if ((<IAdvancedBoxPlotData>data).mean != null) {\n    mean.style.left = `${round(((<IAdvancedBoxPlotData>data).mean - leftWhisker) / range * 100, 2)}%`;\n    mean.style.display = null;\n  } else {\n    mean.style.display = 'none';\n  }\n\n  // match lengths\n  const outliers = <HTMLElement[]>Array.from(n.children).slice(1, hasRange ? -2 : undefined);\n  const numOutliers = data.outlier ? data.outlier.length : 0;\n  outliers.splice(numOutliers, outliers.length - numOutliers).forEach((v) => v.remove());\n\n  whiskers.dataset.sort = sort;\n\n  if (!data.outlier || numOutliers === 0) {\n    return;\n  }\n\n  for (let i = outliers.length; i < numOutliers; ++i) {\n    const p = n.ownerDocument!.createElement('div');\n    p.classList.add(cssClass('boxplot-outlier'));\n    outliers.unshift(p);\n    whiskers.insertAdjacentElement('afterend', p);\n  }\n\n  data.outlier.forEach((v, i) => {\n    delete outliers[i].dataset.sort;\n    outliers[i].style.left = `${round(v * 100, 2)}%`;\n  });\n\n  if (sort === 'min' && data.outlier[0] <= leftWhisker) {\n    // first outliers is the min\n    whiskers.dataset.sort = '';\n    outliers[0].dataset.sort = 'min';\n    if (outliers.length > 1) {\n      // append at the end of the DOM to be on top\n      outliers[outliers.length - 1].insertAdjacentElement('afterend', outliers[0]);\n    }\n  } else if (sort === 'max' && data.outlier[outliers.length - 1] >= rightWhisker) {\n    // last outlier is the max\n    whiskers.dataset.sort = '';\n    outliers[outliers.length - 1].dataset.sort = 'max';\n  }\n}\n\nfunction renderBoxPlot(ctx: CanvasRenderingContext2D, box: IBoxPlotData, sort: string, color: string | null, height: number, topPadding: number) {\n  const left = box.whiskerLow != null ? box.whiskerLow : Math.max((box.q1 - 1.5 * (box.q3 - box.q1)), box.min);\n  const right = box.whiskerHigh != null ? box.whiskerHigh : Math.min((box.q3 + 1.5 * (box.q3 - box.q1)), box.max);\n\n  ctx.fillStyle = color || BOX_PLOT.box;\n  ctx.strokeStyle = BOX_PLOT.stroke;\n  ctx.beginPath();\n  ctx.rect(box.q1, 0, box.q3 - box.q1, height);\n  ctx.fill();\n  ctx.stroke();\n\n  //Line\n  const bottomPos = height - topPadding;\n  const middlePos = height / 2;\n\n  ctx.beginPath();\n  ctx.moveTo(left, middlePos);\n  ctx.lineTo(box.q1, middlePos);\n  ctx.moveTo(left, topPadding);\n  ctx.lineTo(left, bottomPos);\n  ctx.moveTo(box.median, 0);\n  ctx.lineTo(box.median, height);\n  ctx.moveTo(box.q3, middlePos);\n  ctx.lineTo(right, middlePos);\n  ctx.moveTo(right, topPadding);\n  ctx.lineTo(right, bottomPos);\n  ctx.stroke();\n  ctx.fill();\n\n  if (sort !== '') {\n    ctx.strokeStyle = BOX_PLOT.sort;\n    ctx.beginPath();\n    ctx.moveTo(<number>box[<keyof IBoxPlotData>sort], topPadding);\n    ctx.lineTo(<number>box[<keyof IBoxPlotData>sort], height - topPadding);\n    ctx.stroke();\n    ctx.fill();\n  }\n\n  if (!box.outlier) {\n    return;\n  }\n  ctx.fillStyle = BOX_PLOT.outlier;\n  box.outlier.forEach((v) => {\n    // currently dots with 3px\n    ctx.fillRect(Math.max(v - DOT.size / 2, 0), middlePos - DOT.size / 2, DOT.size, DOT.size);\n  });\n}\n","import {hsl} from 'd3-color';\nimport {Column, isNumbersColumn, IDataRow, INumberColumn, isNumberColumn, isMapAbleColumn, DEFAULT_COLOR, SolidColorFunction} from '../model';\nimport {CANVAS_HEIGHT, cssClass} from '../styles';\nimport {colorOf} from './impose';\nimport {IRenderContext, ERenderMode, ICellRendererFactory, IImposer} from './interfaces';\nimport {renderMissingCanvas, renderMissingDOM} from './missing';\nimport {noRenderer, setText} from './utils';\n\n/** @internal */\nexport function toHeatMapColor(v: number | null, row: IDataRow, col: INumberColumn, imposer?: IImposer) {\n  if (v == null || isNaN(v)) {\n    v = 1; // max = brightest\n  }\n  if (imposer || !isMapAbleColumn(col)) {\n    //hsl space encoding, encode in lightness\n    const color = hsl(colorOf(col, row, imposer, v) || DEFAULT_COLOR);\n    color.l = 1 - v; // largest value = darkest color\n    return color.toString();\n  }\n  const map = col.getColorMapping();\n  const valueColor = map.apply(v);\n  if (map instanceof SolidColorFunction) {\n    //hsl space encoding, encode in lightness\n    const color = hsl(valueColor);\n    color.l = 1 - v; // largest value = darkest color\n    return color.toString();\n  }\n  // some custom logic that maps to another value\n  return valueColor;\n}\n\n/** @internal */\nexport default class BrightnessCellRenderer implements ICellRendererFactory {\n  readonly title = 'Brightness';\n\n  canRender(col: Column, mode: ERenderMode) {\n    return isNumberColumn(col) && mode === ERenderMode.CELL && !isNumbersColumn(col);\n  }\n\n  create(col: INumberColumn, context: IRenderContext, imposer?: IImposer) {\n    const width = context.colWidth(col);\n    return {\n      template: `<div title=\"\">\n        <div class=\"${cssClass('cat-color')}\" style=\"background-color: ${DEFAULT_COLOR}\"></div><div class=\"${cssClass('cat-label')}\"> </div>\n      </div>`,\n      update: (n: HTMLElement, d: IDataRow) => {\n        const missing = renderMissingDOM(n, col, d);\n        n.title = col.getLabel(d);\n        (<HTMLDivElement>n.firstElementChild!).style.backgroundColor = missing ? null : toHeatMapColor(col.getNumber(d), d, col, imposer);\n        setText(<HTMLSpanElement>n.lastElementChild!, n.title);\n      },\n      render: (ctx: CanvasRenderingContext2D, d: IDataRow) => {\n        if (renderMissingCanvas(ctx, col, d, width)) {\n          return;\n        }\n        ctx.fillStyle = toHeatMapColor(col.getNumber(d), d, col, imposer);\n        ctx.fillRect(0, 0, width, CANVAS_HEIGHT);\n      }\n    };\n  }\n\n  createGroup() {\n    return noRenderer;\n  }\n\n  createSummary() {\n    return noRenderer;\n  }\n}\n","import {DENSE_HISTOGRAM} from '../constants';\nimport {ICategoricalStatistics, round} from '../internal';\nimport {OrdinalColumn, isCategoricalColumn, isCategoricalLikeColumn, ICategoricalLikeColumn, ICategory, Column, CategoricalColumn, ICategoricalColumn, IDataRow, IOrderedGroup, SetColumn} from '../model';\nimport {CANVAS_HEIGHT, cssClass, FILTERED_OPACITY} from '../styles';\nimport {filterMissingNumberMarkup, updateFilterMissingNumberMarkup} from '../ui/missing';\nimport {IRenderContext, ICellRendererFactory, ERenderMode} from './interfaces';\nimport {renderMissingCanvas, renderMissingDOM} from './missing';\nimport {setText, wideEnough, forEach} from './utils';\nimport {color} from 'd3-color';\n\n/** @internal */\nexport declare type HasCategoricalFilter = CategoricalColumn | OrdinalColumn | SetColumn;\n\n/** @internal */\nexport default class CategoricalCellRenderer implements ICellRendererFactory {\n  readonly title = 'Color';\n  readonly groupTitle = 'Histogram';\n\n  canRender(col: Column, mode: ERenderMode) {\n    return isCategoricalLikeColumn(col) && (mode !== ERenderMode.CELL || isCategoricalColumn(col));\n  }\n\n  create(col: ICategoricalColumn, context: IRenderContext) {\n    const width = context.colWidth(col);\n    return {\n      template: `<div>\n        <div class=\"${cssClass('cat-color')}\"></div><div class=\"${cssClass('cat-label')}\"></div>\n      </div>`,\n      update: (n: HTMLElement, d: IDataRow) => {\n        renderMissingDOM(n, col, d);\n        const v = col.getCategory(d);\n        (<HTMLDivElement>n.firstElementChild!).style.backgroundColor = v ? col.getColor(d) : null;\n        setText(<HTMLSpanElement>n.lastElementChild!, col.getLabel(d));\n      },\n      render: (ctx: CanvasRenderingContext2D, d: IDataRow) => {\n        if (renderMissingCanvas(ctx, col, d, width)) {\n          return;\n        }\n        const v = col.getCategory(d);\n        ctx.fillStyle = v ? col.getColor(d) : '';\n        ctx.fillRect(0, 0, width, CANVAS_HEIGHT);\n      }\n    };\n  }\n\n  createGroup(col: ICategoricalLikeColumn, context: IRenderContext) {\n    const {template, update} = hist(col, false);\n    return {\n      template: `${template}</div>`,\n      update: (n: HTMLElement, group: IOrderedGroup) => {\n        return context.tasks.groupCategoricalStats(col, group).then((data) => {\n          if (typeof data === 'symbol') {\n            return;\n          }\n          const {group} = data;\n          update(n, group);\n        });\n      }\n    };\n  }\n\n  createSummary(col: ICategoricalLikeColumn, context: IRenderContext, interactive: boolean) {\n    return (col instanceof CategoricalColumn || col instanceof OrdinalColumn || col instanceof SetColumn) ? interactiveSummary(col, context, interactive) : staticSummary(col, context, interactive);\n  }\n}\n\nfunction staticSummary(col: ICategoricalLikeColumn, context: IRenderContext, interactive: boolean) {\n  const {template, update} = hist(col, interactive);\n  return {\n    template: `${template}</div>`,\n    update: (n: HTMLElement) => {\n      return context.tasks.summaryCategoricalStats(col).then((r) => {\n        if (typeof r === 'symbol') {\n          return;\n        }\n        const {summary} = r;\n        n.classList.toggle(cssClass('missing'), !summary);\n        if (!summary) {\n          return;\n        }\n        update(n, summary);\n      });\n    }\n  };\n}\n\nfunction interactiveSummary(col: HasCategoricalFilter, context: IRenderContext, interactive: boolean) {\n  const {template, update} = hist(col, interactive || wideEnough(col));\n  let filterUpdate: (missing: number, col: HasCategoricalFilter) => void;\n  return {\n    template: `${template}${interactive ? filterMissingNumberMarkup(false, 0) : ''}</div>`,\n    update: (n: HTMLElement) => {\n      n.classList.toggle(cssClass('histogram-i'), interactive);\n\n      if (!filterUpdate) {\n        filterUpdate = interactiveHist(col, n);\n      }\n      return context.tasks.summaryCategoricalStats(col).then((r) => {\n        if (typeof r === 'symbol') {\n          return;\n        }\n        const {summary, data} = r;\n        filterUpdate((interactive && data) ? data.missing : (summary ? summary.missing : 0), col);\n\n        n.classList.toggle(cssClass('missing'), !summary);\n        if (!summary) {\n          return;\n        }\n        update(n, summary, interactive ? data : undefined);\n      });\n    }\n  };\n}\n\nfunction hist(col: ICategoricalLikeColumn, showLabels: boolean) {\n  const mapping = col.getColorMapping();\n  const bins = col.categories.map((c) => `<div class=\"${cssClass('histogram-bin')}\" title=\"${c.label}: 0\" data-cat=\"${c.name}\" ${showLabels ? `data-title=\"${c.label}\"` : ''}><div style=\"height: 0; background-color: ${mapping.apply(c)}\"></div></div>`).join('');\n  const template = `<div class=\"${cssClass('histogram')} ${col.categories.length! > DENSE_HISTOGRAM ? cssClass('dense') : ''}\">${bins}`; // no closing div to be able to append things\n\n\n  return {\n    template,\n    update: (n: HTMLElement, hist: ICategoricalStatistics, gHist?: ICategoricalStatistics) => {\n      const mapping = col.getColorMapping();\n\n      const selected = col.categories.map((d) => {\n        const c = color(mapping.apply(d))!;\n        c.opacity = FILTERED_OPACITY;\n        return c.toString();\n      });\n\n      const maxBin = gHist ? gHist.maxBin : hist.maxBin;\n      forEach(n, '[data-cat]', (d: HTMLElement, i) => {\n        const cat = col.categories[i];\n        const {count} = hist.hist[i];\n        const inner = <HTMLElement>d.firstElementChild!;\n        if (gHist) {\n          const {count: gCount} = gHist.hist[i];\n          d.title = `${cat.label}: ${count} of ${gCount}`;\n          inner.style.height = `${round(gCount * 100 / maxBin, 2)}%`;\n          const relY = 100 - round(count * 100 / gCount, 2);\n          inner.style.background = relY === 0 ? mapping.apply(cat) : (relY === 100 ? selected[i] : `linear-gradient(${selected[i]} ${relY}%, ${mapping.apply(cat)} ${relY}%, ${mapping.apply(cat)} 100%)`);\n        } else {\n          d.title = `${col.categories[i].label}: ${count}`;\n          const inner = <HTMLElement>d.firstElementChild!;\n          inner.style.height = `${Math.round(count * 100 / maxBin)}%`;\n          inner.style.background = mapping.apply(cat);\n        }\n      });\n    }\n  };\n}\n\n/** @internal */\nexport function interactiveHist(col: HasCategoricalFilter, node: HTMLElement) {\n  const bins = <HTMLElement[]>Array.from(node.querySelectorAll('[data-cat]'));\n\n  const markFilter = (bin: HTMLElement, cat: ICategory, value: boolean) => {\n    // update filter highlight eagerly for better user feedback\n    const inner = <HTMLElement>bin.firstElementChild!;\n    const base = col.getColorMapping().apply(cat);\n    if (value) {\n      inner.style.background = base;\n      return;\n    }\n    const c = color(base)!;\n    c.opacity = FILTERED_OPACITY;\n    inner.style.background = c.toString();\n  };\n\n  bins.forEach((bin, i) => {\n    const cat = col.categories[i];\n\n    bin.onclick = (evt) => {\n      evt.preventDefault();\n      evt.stopPropagation();\n\n      // toggle filter\n      const old = col.getFilter();\n      if (old == null || !Array.isArray(old.filter)) {\n        // deselect\n        markFilter(bin, cat, false);\n        const included = col.categories.slice();\n        included.splice(i, 1);\n        col.setFilter({\n          filterMissing: old ? old.filterMissing : false,\n          filter: included.map((d) => d.name)\n        });\n        return;\n      }\n      const filter = old.filter.slice();\n      const contained = filter.indexOf(cat.name);\n      if (contained >= 0) {\n        // remove\n        filter.splice(contained, 1);\n        markFilter(bin, cat, false);\n      } else {\n        // readd\n        filter.push(cat.name);\n        markFilter(bin, cat, true);\n      }\n      if (!old.filterMissing && filter.length === col.categories.length) {\n        // dummy filter\n        col.setFilter(null);\n        return;\n      }\n      col.setFilter({\n        filterMissing: old.filterMissing,\n        filter\n      });\n    };\n  });\n\n\n  const filterMissing = <HTMLInputElement>node.getElementsByTagName('input')[0]!;\n\n  if (filterMissing) {\n    filterMissing.onchange = () => {\n      // toggle filter\n      const v = filterMissing.checked;\n      const old = col.getFilter();\n      if (old == null) {\n        col.setFilter(v ? {filterMissing: v, filter: col.categories.map((d) => d.name)} : null);\n      } else if (!v && Array.isArray(old.filter) && old.filter.length === col.categories.length) {\n        // dummy\n        col.setFilter(null);\n      } else {\n        col.setFilter({filterMissing: v, filter: old.filter});\n      }\n    };\n  }\n\n\n  return (missing: number, actCol: HasCategoricalFilter) => {\n    col = actCol;\n    const f = col.getFilter();\n    if (filterMissing) {\n      filterMissing.checked = f != null && f.filterMissing;\n      updateFilterMissingNumberMarkup(<HTMLElement>filterMissing.parentElement, missing);\n    }\n  };\n}\n","import {Column, ICategoricalsColumn, ICategory, IDataRow, IOrderedGroup, isCategoricalsColumn} from '../model';\nimport {toMostFrequentCategoricals} from '../model/internalCategorical';\nimport {CANVAS_HEIGHT, cssClass} from '../styles';\nimport {ICellRendererFactory, IRenderContext} from './interfaces';\nimport {renderMissingDOM, renderMissingValue} from './missing';\nimport {noop, wideEnough} from './utils';\nimport {GUESSED_ROW_HEIGHT} from '../constants';\n\n/** @internal */\nexport default class CategoricalHeatmapCellRenderer implements ICellRendererFactory {\n  readonly title = 'Heatmap';\n\n  canRender(col: Column) {\n    return isCategoricalsColumn(col) && Boolean(col.dataLength);\n  }\n\n  private createContext(col: ICategoricalsColumn, context: IRenderContext) {\n    const width = context.colWidth(col);\n    const cellDimension = width / col.dataLength!;\n    const labels = col.labels;\n    const render = (ctx: CanvasRenderingContext2D, data: (ICategory | null)[], height: number) => {\n      data.forEach((d: ICategory | null, j: number) => {\n        const x = j * cellDimension;\n        if (d == null) {\n          renderMissingValue(ctx, cellDimension, height, x, 0);\n          return;\n        }\n        ctx.fillStyle = d.color;\n        ctx.fillRect(x, 0, cellDimension, height);\n      });\n    };\n    return {\n      template: `<canvas height=\"${GUESSED_ROW_HEIGHT}\" title=\"\"></canvas>`,\n      render,\n      width,\n      mover: (n: HTMLElement, values: string[]) => (evt: MouseEvent) => {\n        const percent = evt.offsetX / width;\n        const index = Math.max(0, Math.min(col.dataLength! - 1, Math.floor(percent * (col.dataLength! - 1) + 0.5)));\n        n.title = `${labels[index]}: ${values[index]}`;\n      }\n    };\n  }\n\n  create(col: ICategoricalsColumn, context: IRenderContext) {\n    const {template, render, mover, width} = this.createContext(col, context);\n\n    return {\n      template,\n      update: (n: HTMLElement, d: IDataRow) => {\n        const ctx = (<HTMLCanvasElement>n).getContext('2d')!;\n        ctx.canvas.width = width;\n        ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n\n        if (renderMissingDOM(n, col, d)) {\n          return;\n        }\n        n.onmousemove = mover(n, col.getLabels(d));\n        n.onmouseleave = () => n.title = '';\n        render(ctx, col.getCategories(d), GUESSED_ROW_HEIGHT);\n      },\n      render: (ctx: CanvasRenderingContext2D, d: IDataRow) => {\n        render(ctx, col.getCategories(d), CANVAS_HEIGHT);\n      }\n    };\n  }\n\n  createGroup(col: ICategoricalsColumn, context: IRenderContext) {\n    const {template, render, mover, width} = this.createContext(col, context);\n\n    return {\n      template,\n      update: (n: HTMLElement, group: IOrderedGroup) => {\n        return context.tasks.groupRows(col, group, this.title, (rows) => toMostFrequentCategoricals(rows, col)).then((data) => {\n          if (typeof data === 'symbol') {\n            return;\n          }\n          const ctx = (<HTMLCanvasElement>n).getContext('2d')!;\n          ctx.canvas.width = width;\n          ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n          n.onmousemove = mover(n, data.map((d) => d ? d.label : 'missing'));\n          n.onmouseleave = () => n.title = '';\n          render(ctx, data, GUESSED_ROW_HEIGHT);\n        });\n      }\n    };\n  }\n\n  createSummary(col: ICategoricalsColumn) {\n    let labels = col.labels.slice();\n    while (labels.length > 0 && !wideEnough(col, labels.length)) {\n      labels = labels.filter((_, i) => i % 2 === 0); // even\n    }\n    let templateRows = `<div class=\"${cssClass('heatmap')}\">`;\n    for (const label of labels) {\n      templateRows += `<div class=\"${cssClass('heatmap-cell')}\"  title=\"${label}\" data-title=\"${label}\"></div>`;\n    }\n    templateRows += '</div>';\n    return {\n      template: templateRows,\n      update: noop\n    };\n  }\n}\n","import {ICategoricalStatistics, round} from '../internal';\nimport {CategoricalColumn, Column, OrdinalColumn, ICategoricalColumn, isCategoricalColumn, IOrderedGroup, ISetColumn, DEFAULT_COLOR} from '../model';\nimport {filterMissingNumberMarkup} from '../ui/missing';\nimport {interactiveHist, HasCategoricalFilter} from './CategoricalCellRenderer';\nimport {IRenderContext, ERenderMode, ICellRendererFactory} from './interfaces';\nimport {noRenderer, adaptTextColorToBgColor} from './utils';\nimport {cssClass, FILTERED_OPACITY} from '../styles';\nimport {color} from 'd3-color';\n\n/** @internal */\nexport default class CategoricalStackedDistributionlCellRenderer implements ICellRendererFactory {\n  readonly title = 'Distribution Bar';\n\n  canRender(col: Column, mode: ERenderMode) {\n    return isCategoricalColumn(col) && mode !== ERenderMode.CELL;\n  }\n\n  create() {\n    return noRenderer;\n  }\n\n  createGroup(col: ICategoricalColumn, context: IRenderContext) {\n    const {template, update} = stackedBar(col);\n    return {\n      template: `${template}</div>`,\n      update: (n: HTMLElement, group: IOrderedGroup) => {\n        return context.tasks.groupCategoricalStats(col, group).then((r) => {\n          if (typeof r === 'symbol') {\n            return;\n          }\n          const {group} = r;\n\n          update(n, group);\n        });\n      }\n    };\n  }\n\n  createSummary(col: ICategoricalColumn, context: IRenderContext, interactive: boolean) {\n    return (col instanceof CategoricalColumn || col instanceof OrdinalColumn) ? interactiveSummary(col, context, interactive) : staticSummary(col, context);\n  }\n}\n\nfunction staticSummary(col: ICategoricalColumn, context: IRenderContext) {\n  const {template, update} = stackedBar(col);\n  return {\n    template: `${template}</div>`,\n    update: (n: HTMLElement) => {\n      return context.tasks.summaryCategoricalStats(col).then((r) => {\n        if (typeof r === 'symbol') {\n          return;\n        }\n        const {summary, data} = r;\n\n        n.classList.toggle(cssClass('missing'), !summary);\n        if (!summary) {\n          return;\n        }\n        update(n, summary, data);\n      });\n    }\n  };\n}\n\nfunction interactiveSummary(col: HasCategoricalFilter, context: IRenderContext, interactive: boolean) {\n  const {template, update} = stackedBar(col);\n  let filterUpdate: (missing: number, col: HasCategoricalFilter) => void;\n  return {\n    template: `${template}${interactive ? filterMissingNumberMarkup(false, 0) : ''}</div>`,\n    update: (n: HTMLElement) => {\n      if (!filterUpdate) {\n        filterUpdate = interactiveHist(col, n);\n      }\n      return context.tasks.summaryCategoricalStats(col).then((r) => {\n        if (typeof r === 'symbol') {\n          return;\n        }\n        const {summary, data} = r;\n\n        const missing = interactive && data ? data.missing : (summary ? summary.missing : 0);\n        filterUpdate(missing, col);\n\n        n.classList.toggle(cssClass('missing'), !summary);\n        if (!summary) {\n          return;\n        }\n        update(n, summary, data);\n      });\n    }\n  };\n}\n\nfunction selectedCol(value: string) {\n  const c = color(value)!;\n  c.opacity = FILTERED_OPACITY;\n  return c.toString();\n}\n\nfunction stackedBar(col: ISetColumn) {\n  const mapping = col.getColorMapping();\n  const cats = col.categories.map((c) => ({\n    label: c.label,\n    name: c.name,\n    color: mapping.apply(c),\n    selected: selectedCol(mapping.apply(c))\n  }));\n  cats.push({label: 'Missing Values', name: 'missing', color: DEFAULT_COLOR, selected: 'transparent'});\n\n  const bins = cats.map((c) => `<div class=\"${cssClass('distribution-bar')}\" style=\"background-color: ${c.color}; color: ${adaptTextColorToBgColor(c.color)}\" title=\"${c.label}: 0\" data-cat=\"${c.name}\"><span>${c.label}</span></div>`).join('');\n\n  return {\n    template: `<div>${bins}`, // no closing div to be able to append things\n    update: (n: HTMLElement, hist: ICategoricalStatistics, gHist?: ICategoricalStatistics) => {\n      const bins: {count: number}[] = hist.hist.slice();\n      bins.push({count: hist.missing});\n      const children = <HTMLElement[]>Array.from(n.children);\n\n      if (!gHist) {\n        const total = bins.reduce((acc, {count}) => acc + count, 0);\n\n        for (let i = 0; i < cats.length; ++i) {\n          const d = children[i];\n          const count = bins[i].count;\n          const label = cats[i].label;\n          d.style.flexGrow = `${round(total === 0 ? 0 : count, 2)}`;\n          d.title = `${label}: ${count}`;\n        }\n        return;\n      }\n\n      const gBins: {count: number}[] = gHist.hist.slice();\n      gBins.push({count: gHist.missing});\n      const total = gBins.reduce((acc, {count}) => acc + count, 9);\n\n      for (let i = 0; i < cats.length; ++i) {\n        const d = children[i];\n        const count = bins[i].count;\n        const label = cats[i].label;\n        const gCount = gBins[i].count;\n\n        d.style.flexGrow = `${round(total === 0 ? 0 : gCount, 2)}`;\n        d.title = `${label}: ${count} of ${gCount}`;\n        const relY = 100 - round(count * 100 / gCount, 2);\n        d.style.background = relY === 0 ? cats[i].color : (relY === 100 ? cats[i].selected : `linear-gradient(${cats[i].selected} ${relY}%, ${cats[i].color} ${relY}%, ${cats[i].color} 100%)`);\n      }\n    }\n  };\n}\n","import {Column, isNumbersColumn, IDataRow, INumberColumn, isNumberColumn} from '../model';\nimport {colorOf} from './impose';\nimport {IRenderContext, ERenderMode, ICellRendererFactory, IImposer} from './interfaces';\nimport {renderMissingDOM} from './missing';\nimport {noRenderer, setText} from './utils';\nimport {cssClass} from '../styles';\n\n/** @internal */\nexport default class CircleCellRenderer implements ICellRendererFactory {\n  readonly title = 'Proportional Symbol';\n\n  canRender(col: Column, mode: ERenderMode) {\n    return isNumberColumn(col) && mode === ERenderMode.CELL && !isNumbersColumn(col);\n  }\n\n  create(col: INumberColumn, _context: IRenderContext, imposer?: IImposer) {\n    return {\n      template: `<div style=\"background: radial-gradient(circle closest-side, red 100%, transparent 100%)\" title=\"\">\n              <div class=\"${cssClass('hover-only')} ${cssClass('bar-label')}\"></div>\n          </div>`,\n      update: (n: HTMLElement, d: IDataRow) => {\n        const v = col.getNumber(d);\n        const p = Math.round(v * 100);\n        const missing = renderMissingDOM(n, col, d);\n        n.style.background = missing ? null : `radial-gradient(circle closest-side, ${colorOf(col, d, imposer)} ${p}%, transparent ${p}%)`;\n        setText(n.firstElementChild!, col.getLabel(d));\n      }\n    };\n  }\n\n  createGroup() {\n    return noRenderer;\n  }\n\n  createSummary() {\n    return noRenderer;\n  }\n}\n","import {GUESSES_GROUP_HEIGHT} from '../constants';\nimport {concatSeq, ISequence, round} from '../internal';\nimport {Column, DEFAULT_COLOR, IDataRow, INumberColumn, IOrderedGroup, isNumberColumn, isNumbersColumn} from '../model';\nimport {CANVAS_HEIGHT, DOT} from '../styles';\nimport {colorOf} from './impose';\nimport {ERenderMode, ICellRendererFactory, IImposer, IRenderContext} from './interfaces';\nimport {renderMissingCanvas, renderMissingDOM} from './missing';\nimport {noRenderer} from './utils';\n\n\n\n/** @internal */\nexport default class DotCellRenderer implements ICellRendererFactory {\n  readonly title = 'Dot';\n  readonly groupTitle = 'Dots';\n\n  canRender(col: Column, mode: ERenderMode) {\n    return isNumberColumn(col) && mode !== ERenderMode.SUMMARY;\n  }\n\n  private static getCanvasRenderer(col: INumberColumn, context: IRenderContext) {\n    const width = context.colWidth(col);\n    const pi2 = Math.PI * 2;\n    const radius = DOT.size / 2;\n    const render = (ctx: CanvasRenderingContext2D, vs: {value: number, color: (string | null)}[], width: number) => {\n      ctx.save();\n      ctx.globalAlpha = DOT.opacity;\n      for (const v of vs) {\n        ctx.fillStyle = v.color || DOT.color;\n        const x = Math.min(width - radius, Math.max(radius, v.value * width));\n        const y = round(Math.random() * (GUESSES_GROUP_HEIGHT - DOT.size) + radius, 2);\n        ctx.beginPath();\n        ctx.moveTo(x + radius, y);\n        ctx.arc(x, y, radius, 0, pi2, true);\n        ctx.fill();\n      }\n      ctx.restore();\n    };\n    return {\n      template: `<canvas height=\"${GUESSES_GROUP_HEIGHT}\"></canvas>`,\n      render,\n      width\n    };\n  }\n\n  private static getDOMRenderer(col: INumberColumn) {\n    const dots = isNumbersColumn(col) ? col.dataLength! : 1;\n    let tmp = '';\n    for (let i = 0; i < dots; ++i) {\n      tmp += `<div style='background-color: ${DEFAULT_COLOR}' title=''></div>`;\n    }\n\n    const update = (n: HTMLElement, data: ISequence<{value: number, label: string, color: string | null}>) => {\n      //adapt the number of children\n      const l = data.length;\n      if (n.children.length !== l) {\n        n.innerHTML = data.reduce((tmp, r) => {\n          return `${tmp}<div style='background-color: ${r.color}' title='${r.label}'></div>`;\n        }, '');\n      }\n      const children = n.children;\n      data.forEach((v, i) => {\n        const d = <HTMLElement>children[i];\n        d.title = v.label;\n        d.style.display = isNaN(v.value) ? 'none' : null;\n        d.style.left = `${round(v.value * 100, 2)}%`;\n        // jitter\n        d.style.top = l > 1 ? `${round(Math.random() * 80 + 10, 2)}%` : null;\n        d.style.backgroundColor = v.color;\n      });\n    };\n\n    const render = (ctx: CanvasRenderingContext2D, vs: number[], colors: (string | null)[], width: number) => {\n      ctx.save();\n      ctx.globalAlpha = DOT.opacity;\n      vs.forEach((v, i) => {\n        ctx.fillStyle = colors[i] || DOT.color;\n        ctx.fillRect(Math.max(0, v * width - DOT.size / 2), 0, DOT.size, CANVAS_HEIGHT);\n      });\n      ctx.restore();\n    };\n\n    return {template: `<div>${tmp}</div>`, update, render};\n  }\n\n  create(col: INumberColumn, context: IRenderContext, imposer?: IImposer) {\n    const {template, render, update} = DotCellRenderer.getDOMRenderer(col);\n    const width = context.colWidth(col);\n    const formatter = col.getNumberFormat();\n    return {\n      template,\n      update: (n: HTMLElement, d: IDataRow) => {\n        if (renderMissingDOM(n, col, d)) {\n          return;\n        }\n        const color = colorOf(col, d, imposer);\n        if (!isNumbersColumn(col)) {\n          const v = col.getNumber(d);\n          return update(n, [{value: v, label: col.getLabel(d), color}]);\n        }\n        const data = col.getNumbers(d).filter((vi: number) => !isNaN(vi)).map((value) => ({value, label: formatter(value), color}));\n        return update(n, data);\n      },\n      render: (ctx: CanvasRenderingContext2D, d: IDataRow) => {\n        if (renderMissingCanvas(ctx, col, d, width)) {\n          return;\n        }\n        const color = colorOf(col, d, imposer);\n        if (!isNumbersColumn(col)) {\n          const v = col.getNumber(d);\n          return render(ctx, [v], [color], width);\n        }\n        const vs: number[] = col.getNumbers(d).filter((vi: number) => !isNaN(vi));\n        return render(ctx, vs, vs.map((_: any) => color), width);\n      }\n    };\n  }\n\n  createGroup(col: INumberColumn, context: IRenderContext, imposer?: IImposer) {\n    const {template, render, width} = DotCellRenderer.getCanvasRenderer(col, context);\n\n    return {\n      template,\n      update: (n: HTMLElement, group: IOrderedGroup) => {\n        return context.tasks.groupRows(col, group, 'dot', (rows) => {\n          //value, color, label,\n\n          if (!isNumbersColumn(col)) {\n            return Array.from(rows.map((r) => ({value: col.getNumber(r), color: colorOf(col, r, imposer)})));\n          }\n          // concatenate all columns\n          const vs = rows.map((r) => {\n            const color = colorOf(col, r, imposer);\n            return col.getNumbers(r)\n              .filter((vi: number) => !isNaN(vi))\n              .map((value) => ({value, color}));\n          });\n          return Array.from(concatSeq(vs));\n        }).then((data) => {\n          if (typeof data === 'symbol') {\n            return;\n          }\n          const ctx = (<HTMLCanvasElement>n).getContext('2d')!;\n          ctx.canvas.width = width;\n          ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n          render(ctx, data, width);\n        });\n      }\n    };\n  }\n\n  createSummary() {\n    return noRenderer;\n  }\n}\n","import {Column, GroupColumn, IOrderedGroup, IGroup, defaultGroup, IDataRow} from '../model';\nimport {ICellRendererFactory} from './interfaces';\nimport {noRenderer} from './utils';\n\n\nfunction isDummyGroup(group: IGroup) {\n  return group.parent == null && group.name === defaultGroup.name;\n}\n\n/** @internal */\nexport default class GroupCellRenderer implements ICellRendererFactory {\n  readonly title = 'Default';\n\n  canRender(col: Column) {\n    return col instanceof GroupColumn;\n  }\n\n  create() {\n    return {\n      template: `<div><div></div></div>`,\n      update(node: HTMLElement, _row: IDataRow, i: number, group: IOrderedGroup) {\n        (<HTMLElement>node.firstElementChild!).textContent = isDummyGroup(group) || i > 0 ? '' : `${group.name} (${group.order.length})`;\n      },\n      render(_ctx: CanvasRenderingContext2D, _row: IDataRow, i: number) {\n        return i === 0;\n      }\n    };\n  }\n\n  createGroup() {\n    return {\n      template: `<div><div></div></div>`,\n      update(node: HTMLElement, group: IOrderedGroup) {\n        (<HTMLElement>node.firstElementChild!).textContent = isDummyGroup(group) ? '' : `${group.name} (${group.order.length})`;\n      }\n    };\n  }\n\n  createSummary() {\n    return noRenderer;\n  }\n}\n","import {IDataRow, INumbersColumn, EAdvancedSortMethod, IOrderedGroup} from '../model';\nimport {IRenderContext, IImposer} from './interfaces';\nimport {renderMissingCanvas, renderMissingDOM} from './missing';\nimport {ISequence, boxplotBuilder} from '../internal';\n\n/** @internal */\nexport abstract class ANumbersCellRenderer {\n  abstract readonly title: string;\n\n  protected abstract createContext(col: INumbersColumn, context: IRenderContext, imposer?: IImposer): {\n    clazz: string,\n    templateRow: string,\n    update: (row: HTMLElement, data: number[], raw: number[], d: IDataRow) => void,\n    render: (ctx: CanvasRenderingContext2D, data: number[], d: IDataRow) => void,\n  };\n\n  static choose(col: INumbersColumn, rows: ISequence<IDataRow>) {\n    let row: IDataRow | null = null;\n    const data = rows.map((r, i) => {\n      if (i === 0) {\n        row = r;\n      }\n      return {n: col.getNumbers(r), raw: col.getRawNumbers(r)};\n    });\n    const cols = col.dataLength!;\n    const normalized = <number[]>[];\n    const raw = <number[]>[];\n    // mean column)\n    for (let i = 0; i < cols; ++i) {\n      const vs = data.map((d) => ({n: d.n[i], raw: d.raw[i]})).filter((d) => !isNaN(d.n));\n      if (vs.length === 0) {\n        normalized.push(NaN);\n        raw.push(NaN);\n      } else {\n        const bbn = boxplotBuilder();\n        const bbr = boxplotBuilder();\n        const s: EAdvancedSortMethod = <any>col.getSortMethod();\n        vs.forEach((d) => {\n          bbn.push(d.n);\n          bbr.push(d.raw);\n        });\n        normalized.push(bbn.build()[s]!);\n        raw.push(bbr.build()[s]!);\n      }\n    }\n    return {normalized, raw, row};\n  }\n\n  create(col: INumbersColumn, context: IRenderContext, imposer?: IImposer) {\n    const width = context.colWidth(col);\n    const {templateRow, render, update, clazz} = this.createContext(col, context, imposer);\n    return {\n      template: `<div class=\"${clazz}\">${templateRow}</div>`,\n      update: (n: HTMLElement, d: IDataRow) => {\n        if (renderMissingDOM(n, col, d)) {\n          return;\n        }\n        update(n, col.getNumbers(d), col.getRawNumbers(d), d);\n      },\n      render: (ctx: CanvasRenderingContext2D, d: IDataRow) => {\n        if (renderMissingCanvas(ctx, col, d, width)) {\n          return;\n        }\n        render(ctx, col.getNumbers(d), d);\n      },\n    };\n  }\n\n  createGroup(col: INumbersColumn, context: IRenderContext, imposer?: IImposer) {\n    const {templateRow, update, clazz} = this.createContext(col, context, imposer);\n    return {\n      template: `<div class=\"${clazz}\">${templateRow}</div>`,\n      update: (n: HTMLDivElement, group: IOrderedGroup) => {\n        // render a heatmap\n        return context.tasks.groupRows(col, group, this.title, (rows) => ANumbersCellRenderer.choose(col, rows)).then((data) => {\n          if (typeof data !== 'symbol') {\n            update(n, data.normalized, data.raw, data.row!);\n          }\n        });\n      }\n    };\n  }\n}\n\n/** @internal */\nexport function matchRows(n: HTMLElement | SVGElement, length: number, template: string) {\n  // first match the number of rows\n  const children = <(HTMLElement | SVGElement)[]>Array.from(n.children);\n  if (children.length > length) {\n    children.slice(length).forEach((c) => c.remove());\n  } else if (length > children.length) {\n    n.insertAdjacentHTML('beforeend', template.repeat(length - children.length));\n  }\n}\n","/**!\n * @fileOverview Kickass library to create and place poppers near their reference elements.\n * @version 1.15.0\n * @license\n * Copyright (c) 2016 Federico Zivolo and contributors\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined';\n\nvar longerTimeoutBrowsers = ['Edge', 'Trident', 'Firefox'];\nvar timeoutDuration = 0;\nfor (var i = 0; i < longerTimeoutBrowsers.length; i += 1) {\n  if (isBrowser && navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0) {\n    timeoutDuration = 1;\n    break;\n  }\n}\n\nfunction microtaskDebounce(fn) {\n  var called = false;\n  return function () {\n    if (called) {\n      return;\n    }\n    called = true;\n    window.Promise.resolve().then(function () {\n      called = false;\n      fn();\n    });\n  };\n}\n\nfunction taskDebounce(fn) {\n  var scheduled = false;\n  return function () {\n    if (!scheduled) {\n      scheduled = true;\n      setTimeout(function () {\n        scheduled = false;\n        fn();\n      }, timeoutDuration);\n    }\n  };\n}\n\nvar supportsMicroTasks = isBrowser && window.Promise;\n\n/**\n* Create a debounced version of a method, that's asynchronously deferred\n* but called in the minimum time possible.\n*\n* @method\n* @memberof Popper.Utils\n* @argument {Function} fn\n* @returns {Function}\n*/\nvar debounce = supportsMicroTasks ? microtaskDebounce : taskDebounce;\n\n/**\n * Check if the given variable is a function\n * @method\n * @memberof Popper.Utils\n * @argument {Any} functionToCheck - variable to check\n * @returns {Boolean} answer to: is a function?\n */\nfunction isFunction(functionToCheck) {\n  var getType = {};\n  return functionToCheck && getType.toString.call(functionToCheck) === '[object Function]';\n}\n\n/**\n * Get CSS computed property of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Eement} element\n * @argument {String} property\n */\nfunction getStyleComputedProperty(element, property) {\n  if (element.nodeType !== 1) {\n    return [];\n  }\n  // NOTE: 1 DOM access here\n  var window = element.ownerDocument.defaultView;\n  var css = window.getComputedStyle(element, null);\n  return property ? css[property] : css;\n}\n\n/**\n * Returns the parentNode or the host of the element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} parent\n */\nfunction getParentNode(element) {\n  if (element.nodeName === 'HTML') {\n    return element;\n  }\n  return element.parentNode || element.host;\n}\n\n/**\n * Returns the scrolling parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} scroll parent\n */\nfunction getScrollParent(element) {\n  // Return body, `getScroll` will take care to get the correct `scrollTop` from it\n  if (!element) {\n    return document.body;\n  }\n\n  switch (element.nodeName) {\n    case 'HTML':\n    case 'BODY':\n      return element.ownerDocument.body;\n    case '#document':\n      return element.body;\n  }\n\n  // Firefox want us to check `-x` and `-y` variations as well\n\n  var _getStyleComputedProp = getStyleComputedProperty(element),\n      overflow = _getStyleComputedProp.overflow,\n      overflowX = _getStyleComputedProp.overflowX,\n      overflowY = _getStyleComputedProp.overflowY;\n\n  if (/(auto|scroll|overlay)/.test(overflow + overflowY + overflowX)) {\n    return element;\n  }\n\n  return getScrollParent(getParentNode(element));\n}\n\nvar isIE11 = isBrowser && !!(window.MSInputMethodContext && document.documentMode);\nvar isIE10 = isBrowser && /MSIE 10/.test(navigator.userAgent);\n\n/**\n * Determines if the browser is Internet Explorer\n * @method\n * @memberof Popper.Utils\n * @param {Number} version to check\n * @returns {Boolean} isIE\n */\nfunction isIE(version) {\n  if (version === 11) {\n    return isIE11;\n  }\n  if (version === 10) {\n    return isIE10;\n  }\n  return isIE11 || isIE10;\n}\n\n/**\n * Returns the offset parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} offset parent\n */\nfunction getOffsetParent(element) {\n  if (!element) {\n    return document.documentElement;\n  }\n\n  var noOffsetParent = isIE(10) ? document.body : null;\n\n  // NOTE: 1 DOM access here\n  var offsetParent = element.offsetParent || null;\n  // Skip hidden elements which don't have an offsetParent\n  while (offsetParent === noOffsetParent && element.nextElementSibling) {\n    offsetParent = (element = element.nextElementSibling).offsetParent;\n  }\n\n  var nodeName = offsetParent && offsetParent.nodeName;\n\n  if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {\n    return element ? element.ownerDocument.documentElement : document.documentElement;\n  }\n\n  // .offsetParent will return the closest TH, TD or TABLE in case\n  // no offsetParent is present, I hate this job...\n  if (['TH', 'TD', 'TABLE'].indexOf(offsetParent.nodeName) !== -1 && getStyleComputedProperty(offsetParent, 'position') === 'static') {\n    return getOffsetParent(offsetParent);\n  }\n\n  return offsetParent;\n}\n\nfunction isOffsetContainer(element) {\n  var nodeName = element.nodeName;\n\n  if (nodeName === 'BODY') {\n    return false;\n  }\n  return nodeName === 'HTML' || getOffsetParent(element.firstElementChild) === element;\n}\n\n/**\n * Finds the root node (document, shadowDOM root) of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} node\n * @returns {Element} root node\n */\nfunction getRoot(node) {\n  if (node.parentNode !== null) {\n    return getRoot(node.parentNode);\n  }\n\n  return node;\n}\n\n/**\n * Finds the offset parent common to the two provided nodes\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element1\n * @argument {Element} element2\n * @returns {Element} common offset parent\n */\nfunction findCommonOffsetParent(element1, element2) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n  if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {\n    return document.documentElement;\n  }\n\n  // Here we make sure to give as \"start\" the element that comes first in the DOM\n  var order = element1.compareDocumentPosition(element2) & Node.DOCUMENT_POSITION_FOLLOWING;\n  var start = order ? element1 : element2;\n  var end = order ? element2 : element1;\n\n  // Get common ancestor container\n  var range = document.createRange();\n  range.setStart(start, 0);\n  range.setEnd(end, 0);\n  var commonAncestorContainer = range.commonAncestorContainer;\n\n  // Both nodes are inside #document\n\n  if (element1 !== commonAncestorContainer && element2 !== commonAncestorContainer || start.contains(end)) {\n    if (isOffsetContainer(commonAncestorContainer)) {\n      return commonAncestorContainer;\n    }\n\n    return getOffsetParent(commonAncestorContainer);\n  }\n\n  // one of the nodes is inside shadowDOM, find which one\n  var element1root = getRoot(element1);\n  if (element1root.host) {\n    return findCommonOffsetParent(element1root.host, element2);\n  } else {\n    return findCommonOffsetParent(element1, getRoot(element2).host);\n  }\n}\n\n/**\n * Gets the scroll value of the given element in the given side (top and left)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {String} side `top` or `left`\n * @returns {number} amount of scrolled pixels\n */\nfunction getScroll(element) {\n  var side = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'top';\n\n  var upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';\n  var nodeName = element.nodeName;\n\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    var html = element.ownerDocument.documentElement;\n    var scrollingElement = element.ownerDocument.scrollingElement || html;\n    return scrollingElement[upperSide];\n  }\n\n  return element[upperSide];\n}\n\n/*\n * Sum or subtract the element scroll values (left and top) from a given rect object\n * @method\n * @memberof Popper.Utils\n * @param {Object} rect - Rect object you want to change\n * @param {HTMLElement} element - The element from the function reads the scroll values\n * @param {Boolean} subtract - set to true if you want to subtract the scroll values\n * @return {Object} rect - The modifier rect object\n */\nfunction includeScroll(rect, element) {\n  var subtract = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n  var scrollTop = getScroll(element, 'top');\n  var scrollLeft = getScroll(element, 'left');\n  var modifier = subtract ? -1 : 1;\n  rect.top += scrollTop * modifier;\n  rect.bottom += scrollTop * modifier;\n  rect.left += scrollLeft * modifier;\n  rect.right += scrollLeft * modifier;\n  return rect;\n}\n\n/*\n * Helper to detect borders of a given element\n * @method\n * @memberof Popper.Utils\n * @param {CSSStyleDeclaration} styles\n * Result of `getStyleComputedProperty` on the given element\n * @param {String} axis - `x` or `y`\n * @return {number} borders - The borders size of the given axis\n */\n\nfunction getBordersSize(styles, axis) {\n  var sideA = axis === 'x' ? 'Left' : 'Top';\n  var sideB = sideA === 'Left' ? 'Right' : 'Bottom';\n\n  return parseFloat(styles['border' + sideA + 'Width'], 10) + parseFloat(styles['border' + sideB + 'Width'], 10);\n}\n\nfunction getSize(axis, body, html, computedStyle) {\n  return Math.max(body['offset' + axis], body['scroll' + axis], html['client' + axis], html['offset' + axis], html['scroll' + axis], isIE(10) ? parseInt(html['offset' + axis]) + parseInt(computedStyle['margin' + (axis === 'Height' ? 'Top' : 'Left')]) + parseInt(computedStyle['margin' + (axis === 'Height' ? 'Bottom' : 'Right')]) : 0);\n}\n\nfunction getWindowSizes(document) {\n  var body = document.body;\n  var html = document.documentElement;\n  var computedStyle = isIE(10) && getComputedStyle(html);\n\n  return {\n    height: getSize('Height', body, html, computedStyle),\n    width: getSize('Width', body, html, computedStyle)\n  };\n}\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n\n\n\n\nvar defineProperty = function (obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n};\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\n/**\n * Given element offsets, generate an output similar to getBoundingClientRect\n * @method\n * @memberof Popper.Utils\n * @argument {Object} offsets\n * @returns {Object} ClientRect like output\n */\nfunction getClientRect(offsets) {\n  return _extends({}, offsets, {\n    right: offsets.left + offsets.width,\n    bottom: offsets.top + offsets.height\n  });\n}\n\n/**\n * Get bounding client rect of given element\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} element\n * @return {Object} client rect\n */\nfunction getBoundingClientRect(element) {\n  var rect = {};\n\n  // IE10 10 FIX: Please, don't ask, the element isn't\n  // considered in DOM in some circumstances...\n  // This isn't reproducible in IE10 compatibility mode of IE11\n  try {\n    if (isIE(10)) {\n      rect = element.getBoundingClientRect();\n      var scrollTop = getScroll(element, 'top');\n      var scrollLeft = getScroll(element, 'left');\n      rect.top += scrollTop;\n      rect.left += scrollLeft;\n      rect.bottom += scrollTop;\n      rect.right += scrollLeft;\n    } else {\n      rect = element.getBoundingClientRect();\n    }\n  } catch (e) {}\n\n  var result = {\n    left: rect.left,\n    top: rect.top,\n    width: rect.right - rect.left,\n    height: rect.bottom - rect.top\n  };\n\n  // subtract scrollbar size from sizes\n  var sizes = element.nodeName === 'HTML' ? getWindowSizes(element.ownerDocument) : {};\n  var width = sizes.width || element.clientWidth || result.right - result.left;\n  var height = sizes.height || element.clientHeight || result.bottom - result.top;\n\n  var horizScrollbar = element.offsetWidth - width;\n  var vertScrollbar = element.offsetHeight - height;\n\n  // if an hypothetical scrollbar is detected, we must be sure it's not a `border`\n  // we make this check conditional for performance reasons\n  if (horizScrollbar || vertScrollbar) {\n    var styles = getStyleComputedProperty(element);\n    horizScrollbar -= getBordersSize(styles, 'x');\n    vertScrollbar -= getBordersSize(styles, 'y');\n\n    result.width -= horizScrollbar;\n    result.height -= vertScrollbar;\n  }\n\n  return getClientRect(result);\n}\n\nfunction getOffsetRectRelativeToArbitraryNode(children, parent) {\n  var fixedPosition = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n  var isIE10 = isIE(10);\n  var isHTML = parent.nodeName === 'HTML';\n  var childrenRect = getBoundingClientRect(children);\n  var parentRect = getBoundingClientRect(parent);\n  var scrollParent = getScrollParent(children);\n\n  var styles = getStyleComputedProperty(parent);\n  var borderTopWidth = parseFloat(styles.borderTopWidth, 10);\n  var borderLeftWidth = parseFloat(styles.borderLeftWidth, 10);\n\n  // In cases where the parent is fixed, we must ignore negative scroll in offset calc\n  if (fixedPosition && isHTML) {\n    parentRect.top = Math.max(parentRect.top, 0);\n    parentRect.left = Math.max(parentRect.left, 0);\n  }\n  var offsets = getClientRect({\n    top: childrenRect.top - parentRect.top - borderTopWidth,\n    left: childrenRect.left - parentRect.left - borderLeftWidth,\n    width: childrenRect.width,\n    height: childrenRect.height\n  });\n  offsets.marginTop = 0;\n  offsets.marginLeft = 0;\n\n  // Subtract margins of documentElement in case it's being used as parent\n  // we do this only on HTML because it's the only element that behaves\n  // differently when margins are applied to it. The margins are included in\n  // the box of the documentElement, in the other cases not.\n  if (!isIE10 && isHTML) {\n    var marginTop = parseFloat(styles.marginTop, 10);\n    var marginLeft = parseFloat(styles.marginLeft, 10);\n\n    offsets.top -= borderTopWidth - marginTop;\n    offsets.bottom -= borderTopWidth - marginTop;\n    offsets.left -= borderLeftWidth - marginLeft;\n    offsets.right -= borderLeftWidth - marginLeft;\n\n    // Attach marginTop and marginLeft because in some circumstances we may need them\n    offsets.marginTop = marginTop;\n    offsets.marginLeft = marginLeft;\n  }\n\n  if (isIE10 && !fixedPosition ? parent.contains(scrollParent) : parent === scrollParent && scrollParent.nodeName !== 'BODY') {\n    offsets = includeScroll(offsets, parent);\n  }\n\n  return offsets;\n}\n\nfunction getViewportOffsetRectRelativeToArtbitraryNode(element) {\n  var excludeScroll = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  var html = element.ownerDocument.documentElement;\n  var relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);\n  var width = Math.max(html.clientWidth, window.innerWidth || 0);\n  var height = Math.max(html.clientHeight, window.innerHeight || 0);\n\n  var scrollTop = !excludeScroll ? getScroll(html) : 0;\n  var scrollLeft = !excludeScroll ? getScroll(html, 'left') : 0;\n\n  var offset = {\n    top: scrollTop - relativeOffset.top + relativeOffset.marginTop,\n    left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft,\n    width: width,\n    height: height\n  };\n\n  return getClientRect(offset);\n}\n\n/**\n * Check if the given element is fixed or is inside a fixed parent\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {Element} customContainer\n * @returns {Boolean} answer to \"isFixed?\"\n */\nfunction isFixed(element) {\n  var nodeName = element.nodeName;\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    return false;\n  }\n  if (getStyleComputedProperty(element, 'position') === 'fixed') {\n    return true;\n  }\n  var parentNode = getParentNode(element);\n  if (!parentNode) {\n    return false;\n  }\n  return isFixed(parentNode);\n}\n\n/**\n * Finds the first parent of an element that has a transformed property defined\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} first transformed parent or documentElement\n */\n\nfunction getFixedPositionOffsetParent(element) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n  if (!element || !element.parentElement || isIE()) {\n    return document.documentElement;\n  }\n  var el = element.parentElement;\n  while (el && getStyleComputedProperty(el, 'transform') === 'none') {\n    el = el.parentElement;\n  }\n  return el || document.documentElement;\n}\n\n/**\n * Computed the boundaries limits and return them\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} popper\n * @param {HTMLElement} reference\n * @param {number} padding\n * @param {HTMLElement} boundariesElement - Element used to define the boundaries\n * @param {Boolean} fixedPosition - Is in fixed position mode\n * @returns {Object} Coordinates of the boundaries\n */\nfunction getBoundaries(popper, reference, padding, boundariesElement) {\n  var fixedPosition = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n\n  // NOTE: 1 DOM access here\n\n  var boundaries = { top: 0, left: 0 };\n  var offsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, reference);\n\n  // Handle viewport case\n  if (boundariesElement === 'viewport') {\n    boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent, fixedPosition);\n  } else {\n    // Handle other cases based on DOM element used as boundaries\n    var boundariesNode = void 0;\n    if (boundariesElement === 'scrollParent') {\n      boundariesNode = getScrollParent(getParentNode(reference));\n      if (boundariesNode.nodeName === 'BODY') {\n        boundariesNode = popper.ownerDocument.documentElement;\n      }\n    } else if (boundariesElement === 'window') {\n      boundariesNode = popper.ownerDocument.documentElement;\n    } else {\n      boundariesNode = boundariesElement;\n    }\n\n    var offsets = getOffsetRectRelativeToArbitraryNode(boundariesNode, offsetParent, fixedPosition);\n\n    // In case of HTML, we need a different computation\n    if (boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) {\n      var _getWindowSizes = getWindowSizes(popper.ownerDocument),\n          height = _getWindowSizes.height,\n          width = _getWindowSizes.width;\n\n      boundaries.top += offsets.top - offsets.marginTop;\n      boundaries.bottom = height + offsets.top;\n      boundaries.left += offsets.left - offsets.marginLeft;\n      boundaries.right = width + offsets.left;\n    } else {\n      // for all the other DOM elements, this one is good\n      boundaries = offsets;\n    }\n  }\n\n  // Add paddings\n  padding = padding || 0;\n  var isPaddingNumber = typeof padding === 'number';\n  boundaries.left += isPaddingNumber ? padding : padding.left || 0;\n  boundaries.top += isPaddingNumber ? padding : padding.top || 0;\n  boundaries.right -= isPaddingNumber ? padding : padding.right || 0;\n  boundaries.bottom -= isPaddingNumber ? padding : padding.bottom || 0;\n\n  return boundaries;\n}\n\nfunction getArea(_ref) {\n  var width = _ref.width,\n      height = _ref.height;\n\n  return width * height;\n}\n\n/**\n * Utility used to transform the `auto` placement to the placement with more\n * available space.\n * @method\n * @memberof Popper.Utils\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction computeAutoPlacement(placement, refRect, popper, reference, boundariesElement) {\n  var padding = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n\n  if (placement.indexOf('auto') === -1) {\n    return placement;\n  }\n\n  var boundaries = getBoundaries(popper, reference, padding, boundariesElement);\n\n  var rects = {\n    top: {\n      width: boundaries.width,\n      height: refRect.top - boundaries.top\n    },\n    right: {\n      width: boundaries.right - refRect.right,\n      height: boundaries.height\n    },\n    bottom: {\n      width: boundaries.width,\n      height: boundaries.bottom - refRect.bottom\n    },\n    left: {\n      width: refRect.left - boundaries.left,\n      height: boundaries.height\n    }\n  };\n\n  var sortedAreas = Object.keys(rects).map(function (key) {\n    return _extends({\n      key: key\n    }, rects[key], {\n      area: getArea(rects[key])\n    });\n  }).sort(function (a, b) {\n    return b.area - a.area;\n  });\n\n  var filteredAreas = sortedAreas.filter(function (_ref2) {\n    var width = _ref2.width,\n        height = _ref2.height;\n    return width >= popper.clientWidth && height >= popper.clientHeight;\n  });\n\n  var computedPlacement = filteredAreas.length > 0 ? filteredAreas[0].key : sortedAreas[0].key;\n\n  var variation = placement.split('-')[1];\n\n  return computedPlacement + (variation ? '-' + variation : '');\n}\n\n/**\n * Get offsets to the reference element\n * @method\n * @memberof Popper.Utils\n * @param {Object} state\n * @param {Element} popper - the popper element\n * @param {Element} reference - the reference element (the popper will be relative to this)\n * @param {Element} fixedPosition - is in fixed position mode\n * @returns {Object} An object containing the offsets which will be applied to the popper\n */\nfunction getReferenceOffsets(state, popper, reference) {\n  var fixedPosition = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\n  var commonOffsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, reference);\n  return getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent, fixedPosition);\n}\n\n/**\n * Get the outer sizes of the given element (offset size + margins)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Object} object containing width and height properties\n */\nfunction getOuterSizes(element) {\n  var window = element.ownerDocument.defaultView;\n  var styles = window.getComputedStyle(element);\n  var x = parseFloat(styles.marginTop || 0) + parseFloat(styles.marginBottom || 0);\n  var y = parseFloat(styles.marginLeft || 0) + parseFloat(styles.marginRight || 0);\n  var result = {\n    width: element.offsetWidth + y,\n    height: element.offsetHeight + x\n  };\n  return result;\n}\n\n/**\n * Get the opposite placement of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement\n * @returns {String} flipped placement\n */\nfunction getOppositePlacement(placement) {\n  var hash = { left: 'right', right: 'left', bottom: 'top', top: 'bottom' };\n  return placement.replace(/left|right|bottom|top/g, function (matched) {\n    return hash[matched];\n  });\n}\n\n/**\n * Get offsets to the popper\n * @method\n * @memberof Popper.Utils\n * @param {Object} position - CSS position the Popper will get applied\n * @param {HTMLElement} popper - the popper element\n * @param {Object} referenceOffsets - the reference offsets (the popper will be relative to this)\n * @param {String} placement - one of the valid placement options\n * @returns {Object} popperOffsets - An object containing the offsets which will be applied to the popper\n */\nfunction getPopperOffsets(popper, referenceOffsets, placement) {\n  placement = placement.split('-')[0];\n\n  // Get popper node sizes\n  var popperRect = getOuterSizes(popper);\n\n  // Add position, width and height to our offsets object\n  var popperOffsets = {\n    width: popperRect.width,\n    height: popperRect.height\n  };\n\n  // depending by the popper placement we have to compute its offsets slightly differently\n  var isHoriz = ['right', 'left'].indexOf(placement) !== -1;\n  var mainSide = isHoriz ? 'top' : 'left';\n  var secondarySide = isHoriz ? 'left' : 'top';\n  var measurement = isHoriz ? 'height' : 'width';\n  var secondaryMeasurement = !isHoriz ? 'height' : 'width';\n\n  popperOffsets[mainSide] = referenceOffsets[mainSide] + referenceOffsets[measurement] / 2 - popperRect[measurement] / 2;\n  if (placement === secondarySide) {\n    popperOffsets[secondarySide] = referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];\n  } else {\n    popperOffsets[secondarySide] = referenceOffsets[getOppositePlacement(secondarySide)];\n  }\n\n  return popperOffsets;\n}\n\n/**\n * Mimics the `find` method of Array\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nfunction find(arr, check) {\n  // use native find if supported\n  if (Array.prototype.find) {\n    return arr.find(check);\n  }\n\n  // use `filter` to obtain the same behavior of `find`\n  return arr.filter(check)[0];\n}\n\n/**\n * Return the index of the matching object\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nfunction findIndex(arr, prop, value) {\n  // use native findIndex if supported\n  if (Array.prototype.findIndex) {\n    return arr.findIndex(function (cur) {\n      return cur[prop] === value;\n    });\n  }\n\n  // use `find` + `indexOf` if `findIndex` isn't supported\n  var match = find(arr, function (obj) {\n    return obj[prop] === value;\n  });\n  return arr.indexOf(match);\n}\n\n/**\n * Loop trough the list of modifiers and run them in order,\n * each of them will then edit the data object.\n * @method\n * @memberof Popper.Utils\n * @param {dataObject} data\n * @param {Array} modifiers\n * @param {String} ends - Optional modifier name used as stopper\n * @returns {dataObject}\n */\nfunction runModifiers(modifiers, data, ends) {\n  var modifiersToRun = ends === undefined ? modifiers : modifiers.slice(0, findIndex(modifiers, 'name', ends));\n\n  modifiersToRun.forEach(function (modifier) {\n    if (modifier['function']) {\n      // eslint-disable-line dot-notation\n      console.warn('`modifier.function` is deprecated, use `modifier.fn`!');\n    }\n    var fn = modifier['function'] || modifier.fn; // eslint-disable-line dot-notation\n    if (modifier.enabled && isFunction(fn)) {\n      // Add properties to offsets to make them a complete clientRect object\n      // we do this before each modifier to make sure the previous one doesn't\n      // mess with these values\n      data.offsets.popper = getClientRect(data.offsets.popper);\n      data.offsets.reference = getClientRect(data.offsets.reference);\n\n      data = fn(data, modifier);\n    }\n  });\n\n  return data;\n}\n\n/**\n * Updates the position of the popper, computing the new offsets and applying\n * the new style.<br />\n * Prefer `scheduleUpdate` over `update` because of performance reasons.\n * @method\n * @memberof Popper\n */\nfunction update() {\n  // if popper is destroyed, don't perform any further update\n  if (this.state.isDestroyed) {\n    return;\n  }\n\n  var data = {\n    instance: this,\n    styles: {},\n    arrowStyles: {},\n    attributes: {},\n    flipped: false,\n    offsets: {}\n  };\n\n  // compute reference element offsets\n  data.offsets.reference = getReferenceOffsets(this.state, this.popper, this.reference, this.options.positionFixed);\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  data.placement = computeAutoPlacement(this.options.placement, data.offsets.reference, this.popper, this.reference, this.options.modifiers.flip.boundariesElement, this.options.modifiers.flip.padding);\n\n  // store the computed placement inside `originalPlacement`\n  data.originalPlacement = data.placement;\n\n  data.positionFixed = this.options.positionFixed;\n\n  // compute the popper offsets\n  data.offsets.popper = getPopperOffsets(this.popper, data.offsets.reference, data.placement);\n\n  data.offsets.popper.position = this.options.positionFixed ? 'fixed' : 'absolute';\n\n  // run the modifiers\n  data = runModifiers(this.modifiers, data);\n\n  // the first `update` will call `onCreate` callback\n  // the other ones will call `onUpdate` callback\n  if (!this.state.isCreated) {\n    this.state.isCreated = true;\n    this.options.onCreate(data);\n  } else {\n    this.options.onUpdate(data);\n  }\n}\n\n/**\n * Helper used to know if the given modifier is enabled.\n * @method\n * @memberof Popper.Utils\n * @returns {Boolean}\n */\nfunction isModifierEnabled(modifiers, modifierName) {\n  return modifiers.some(function (_ref) {\n    var name = _ref.name,\n        enabled = _ref.enabled;\n    return enabled && name === modifierName;\n  });\n}\n\n/**\n * Get the prefixed supported property name\n * @method\n * @memberof Popper.Utils\n * @argument {String} property (camelCase)\n * @returns {String} prefixed property (camelCase or PascalCase, depending on the vendor prefix)\n */\nfunction getSupportedPropertyName(property) {\n  var prefixes = [false, 'ms', 'Webkit', 'Moz', 'O'];\n  var upperProp = property.charAt(0).toUpperCase() + property.slice(1);\n\n  for (var i = 0; i < prefixes.length; i++) {\n    var prefix = prefixes[i];\n    var toCheck = prefix ? '' + prefix + upperProp : property;\n    if (typeof document.body.style[toCheck] !== 'undefined') {\n      return toCheck;\n    }\n  }\n  return null;\n}\n\n/**\n * Destroys the popper.\n * @method\n * @memberof Popper\n */\nfunction destroy() {\n  this.state.isDestroyed = true;\n\n  // touch DOM only if `applyStyle` modifier is enabled\n  if (isModifierEnabled(this.modifiers, 'applyStyle')) {\n    this.popper.removeAttribute('x-placement');\n    this.popper.style.position = '';\n    this.popper.style.top = '';\n    this.popper.style.left = '';\n    this.popper.style.right = '';\n    this.popper.style.bottom = '';\n    this.popper.style.willChange = '';\n    this.popper.style[getSupportedPropertyName('transform')] = '';\n  }\n\n  this.disableEventListeners();\n\n  // remove the popper if user explicity asked for the deletion on destroy\n  // do not use `remove` because IE11 doesn't support it\n  if (this.options.removeOnDestroy) {\n    this.popper.parentNode.removeChild(this.popper);\n  }\n  return this;\n}\n\n/**\n * Get the window associated with the element\n * @argument {Element} element\n * @returns {Window}\n */\nfunction getWindow(element) {\n  var ownerDocument = element.ownerDocument;\n  return ownerDocument ? ownerDocument.defaultView : window;\n}\n\nfunction attachToScrollParents(scrollParent, event, callback, scrollParents) {\n  var isBody = scrollParent.nodeName === 'BODY';\n  var target = isBody ? scrollParent.ownerDocument.defaultView : scrollParent;\n  target.addEventListener(event, callback, { passive: true });\n\n  if (!isBody) {\n    attachToScrollParents(getScrollParent(target.parentNode), event, callback, scrollParents);\n  }\n  scrollParents.push(target);\n}\n\n/**\n * Setup needed event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nfunction setupEventListeners(reference, options, state, updateBound) {\n  // Resize event listener on window\n  state.updateBound = updateBound;\n  getWindow(reference).addEventListener('resize', state.updateBound, { passive: true });\n\n  // Scroll event listener on scroll parents\n  var scrollElement = getScrollParent(reference);\n  attachToScrollParents(scrollElement, 'scroll', state.updateBound, state.scrollParents);\n  state.scrollElement = scrollElement;\n  state.eventsEnabled = true;\n\n  return state;\n}\n\n/**\n * It will add resize/scroll events and start recalculating\n * position of the popper element when they are triggered.\n * @method\n * @memberof Popper\n */\nfunction enableEventListeners() {\n  if (!this.state.eventsEnabled) {\n    this.state = setupEventListeners(this.reference, this.options, this.state, this.scheduleUpdate);\n  }\n}\n\n/**\n * Remove event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nfunction removeEventListeners(reference, state) {\n  // Remove resize event listener on window\n  getWindow(reference).removeEventListener('resize', state.updateBound);\n\n  // Remove scroll event listener on scroll parents\n  state.scrollParents.forEach(function (target) {\n    target.removeEventListener('scroll', state.updateBound);\n  });\n\n  // Reset state\n  state.updateBound = null;\n  state.scrollParents = [];\n  state.scrollElement = null;\n  state.eventsEnabled = false;\n  return state;\n}\n\n/**\n * It will remove resize/scroll events and won't recalculate popper position\n * when they are triggered. It also won't trigger `onUpdate` callback anymore,\n * unless you call `update` method manually.\n * @method\n * @memberof Popper\n */\nfunction disableEventListeners() {\n  if (this.state.eventsEnabled) {\n    cancelAnimationFrame(this.scheduleUpdate);\n    this.state = removeEventListeners(this.reference, this.state);\n  }\n}\n\n/**\n * Tells if a given input is a number\n * @method\n * @memberof Popper.Utils\n * @param {*} input to check\n * @return {Boolean}\n */\nfunction isNumeric(n) {\n  return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);\n}\n\n/**\n * Set the style to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the style to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nfunction setStyles(element, styles) {\n  Object.keys(styles).forEach(function (prop) {\n    var unit = '';\n    // add unit if the value is numeric and is one of the following\n    if (['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !== -1 && isNumeric(styles[prop])) {\n      unit = 'px';\n    }\n    element.style[prop] = styles[prop] + unit;\n  });\n}\n\n/**\n * Set the attributes to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the attributes to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nfunction setAttributes(element, attributes) {\n  Object.keys(attributes).forEach(function (prop) {\n    var value = attributes[prop];\n    if (value !== false) {\n      element.setAttribute(prop, attributes[prop]);\n    } else {\n      element.removeAttribute(prop);\n    }\n  });\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} data.styles - List of style properties - values to apply to popper element\n * @argument {Object} data.attributes - List of attribute properties - values to apply to popper element\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The same data object\n */\nfunction applyStyle(data) {\n  // any property present in `data.styles` will be applied to the popper,\n  // in this way we can make the 3rd party modifiers add custom styles to it\n  // Be aware, modifiers could override the properties defined in the previous\n  // lines of this modifier!\n  setStyles(data.instance.popper, data.styles);\n\n  // any property present in `data.attributes` will be applied to the popper,\n  // they will be set as HTML attributes of the element\n  setAttributes(data.instance.popper, data.attributes);\n\n  // if arrowElement is defined and arrowStyles has some properties\n  if (data.arrowElement && Object.keys(data.arrowStyles).length) {\n    setStyles(data.arrowElement, data.arrowStyles);\n  }\n\n  return data;\n}\n\n/**\n * Set the x-placement attribute before everything else because it could be used\n * to add margins to the popper margins needs to be calculated to get the\n * correct popper offsets.\n * @method\n * @memberof Popper.modifiers\n * @param {HTMLElement} reference - The reference element used to position the popper\n * @param {HTMLElement} popper - The HTML element used as popper\n * @param {Object} options - Popper.js options\n */\nfunction applyStyleOnLoad(reference, popper, options, modifierOptions, state) {\n  // compute reference element offsets\n  var referenceOffsets = getReferenceOffsets(state, popper, reference, options.positionFixed);\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  var placement = computeAutoPlacement(options.placement, referenceOffsets, popper, reference, options.modifiers.flip.boundariesElement, options.modifiers.flip.padding);\n\n  popper.setAttribute('x-placement', placement);\n\n  // Apply `position` to popper before anything else because\n  // without the position applied we can't guarantee correct computations\n  setStyles(popper, { position: options.positionFixed ? 'fixed' : 'absolute' });\n\n  return options;\n}\n\n/**\n * @function\n * @memberof Popper.Utils\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Boolean} shouldRound - If the offsets should be rounded at all\n * @returns {Object} The popper's position offsets rounded\n *\n * The tale of pixel-perfect positioning. It's still not 100% perfect, but as\n * good as it can be within reason.\n * Discussion here: https://github.com/FezVrasta/popper.js/pull/715\n *\n * Low DPI screens cause a popper to be blurry if not using full pixels (Safari\n * as well on High DPI screens).\n *\n * Firefox prefers no rounding for positioning and does not have blurriness on\n * high DPI screens.\n *\n * Only horizontal placement and left/right values need to be considered.\n */\nfunction getRoundedOffsets(data, shouldRound) {\n  var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n  var round = Math.round,\n      floor = Math.floor;\n\n  var noRound = function noRound(v) {\n    return v;\n  };\n\n  var referenceWidth = round(reference.width);\n  var popperWidth = round(popper.width);\n\n  var isVertical = ['left', 'right'].indexOf(data.placement) !== -1;\n  var isVariation = data.placement.indexOf('-') !== -1;\n  var sameWidthParity = referenceWidth % 2 === popperWidth % 2;\n  var bothOddWidth = referenceWidth % 2 === 1 && popperWidth % 2 === 1;\n\n  var horizontalToInteger = !shouldRound ? noRound : isVertical || isVariation || sameWidthParity ? round : floor;\n  var verticalToInteger = !shouldRound ? noRound : round;\n\n  return {\n    left: horizontalToInteger(bothOddWidth && !isVariation && shouldRound ? popper.left - 1 : popper.left),\n    top: verticalToInteger(popper.top),\n    bottom: verticalToInteger(popper.bottom),\n    right: horizontalToInteger(popper.right)\n  };\n}\n\nvar isFirefox = isBrowser && /Firefox/i.test(navigator.userAgent);\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction computeStyle(data, options) {\n  var x = options.x,\n      y = options.y;\n  var popper = data.offsets.popper;\n\n  // Remove this legacy support in Popper.js v2\n\n  var legacyGpuAccelerationOption = find(data.instance.modifiers, function (modifier) {\n    return modifier.name === 'applyStyle';\n  }).gpuAcceleration;\n  if (legacyGpuAccelerationOption !== undefined) {\n    console.warn('WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!');\n  }\n  var gpuAcceleration = legacyGpuAccelerationOption !== undefined ? legacyGpuAccelerationOption : options.gpuAcceleration;\n\n  var offsetParent = getOffsetParent(data.instance.popper);\n  var offsetParentRect = getBoundingClientRect(offsetParent);\n\n  // Styles\n  var styles = {\n    position: popper.position\n  };\n\n  var offsets = getRoundedOffsets(data, window.devicePixelRatio < 2 || !isFirefox);\n\n  var sideA = x === 'bottom' ? 'top' : 'bottom';\n  var sideB = y === 'right' ? 'left' : 'right';\n\n  // if gpuAcceleration is set to `true` and transform is supported,\n  //  we use `translate3d` to apply the position to the popper we\n  // automatically use the supported prefixed version if needed\n  var prefixedProperty = getSupportedPropertyName('transform');\n\n  // now, let's make a step back and look at this code closely (wtf?)\n  // If the content of the popper grows once it's been positioned, it\n  // may happen that the popper gets misplaced because of the new content\n  // overflowing its reference element\n  // To avoid this problem, we provide two options (x and y), which allow\n  // the consumer to define the offset origin.\n  // If we position a popper on top of a reference element, we can set\n  // `x` to `top` to make the popper grow towards its top instead of\n  // its bottom.\n  var left = void 0,\n      top = void 0;\n  if (sideA === 'bottom') {\n    // when offsetParent is <html> the positioning is relative to the bottom of the screen (excluding the scrollbar)\n    // and not the bottom of the html element\n    if (offsetParent.nodeName === 'HTML') {\n      top = -offsetParent.clientHeight + offsets.bottom;\n    } else {\n      top = -offsetParentRect.height + offsets.bottom;\n    }\n  } else {\n    top = offsets.top;\n  }\n  if (sideB === 'right') {\n    if (offsetParent.nodeName === 'HTML') {\n      left = -offsetParent.clientWidth + offsets.right;\n    } else {\n      left = -offsetParentRect.width + offsets.right;\n    }\n  } else {\n    left = offsets.left;\n  }\n  if (gpuAcceleration && prefixedProperty) {\n    styles[prefixedProperty] = 'translate3d(' + left + 'px, ' + top + 'px, 0)';\n    styles[sideA] = 0;\n    styles[sideB] = 0;\n    styles.willChange = 'transform';\n  } else {\n    // othwerise, we use the standard `top`, `left`, `bottom` and `right` properties\n    var invertTop = sideA === 'bottom' ? -1 : 1;\n    var invertLeft = sideB === 'right' ? -1 : 1;\n    styles[sideA] = top * invertTop;\n    styles[sideB] = left * invertLeft;\n    styles.willChange = sideA + ', ' + sideB;\n  }\n\n  // Attributes\n  var attributes = {\n    'x-placement': data.placement\n  };\n\n  // Update `data` attributes, styles and arrowStyles\n  data.attributes = _extends({}, attributes, data.attributes);\n  data.styles = _extends({}, styles, data.styles);\n  data.arrowStyles = _extends({}, data.offsets.arrow, data.arrowStyles);\n\n  return data;\n}\n\n/**\n * Helper used to know if the given modifier depends from another one.<br />\n * It checks if the needed modifier is listed and enabled.\n * @method\n * @memberof Popper.Utils\n * @param {Array} modifiers - list of modifiers\n * @param {String} requestingName - name of requesting modifier\n * @param {String} requestedName - name of requested modifier\n * @returns {Boolean}\n */\nfunction isModifierRequired(modifiers, requestingName, requestedName) {\n  var requesting = find(modifiers, function (_ref) {\n    var name = _ref.name;\n    return name === requestingName;\n  });\n\n  var isRequired = !!requesting && modifiers.some(function (modifier) {\n    return modifier.name === requestedName && modifier.enabled && modifier.order < requesting.order;\n  });\n\n  if (!isRequired) {\n    var _requesting = '`' + requestingName + '`';\n    var requested = '`' + requestedName + '`';\n    console.warn(requested + ' modifier is required by ' + _requesting + ' modifier in order to work, be sure to include it before ' + _requesting + '!');\n  }\n  return isRequired;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction arrow(data, options) {\n  var _data$offsets$arrow;\n\n  // arrow depends on keepTogether in order to work\n  if (!isModifierRequired(data.instance.modifiers, 'arrow', 'keepTogether')) {\n    return data;\n  }\n\n  var arrowElement = options.element;\n\n  // if arrowElement is a string, suppose it's a CSS selector\n  if (typeof arrowElement === 'string') {\n    arrowElement = data.instance.popper.querySelector(arrowElement);\n\n    // if arrowElement is not found, don't run the modifier\n    if (!arrowElement) {\n      return data;\n    }\n  } else {\n    // if the arrowElement isn't a query selector we must check that the\n    // provided DOM node is child of its popper node\n    if (!data.instance.popper.contains(arrowElement)) {\n      console.warn('WARNING: `arrow.element` must be child of its popper element!');\n      return data;\n    }\n  }\n\n  var placement = data.placement.split('-')[0];\n  var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n\n  var isVertical = ['left', 'right'].indexOf(placement) !== -1;\n\n  var len = isVertical ? 'height' : 'width';\n  var sideCapitalized = isVertical ? 'Top' : 'Left';\n  var side = sideCapitalized.toLowerCase();\n  var altSide = isVertical ? 'left' : 'top';\n  var opSide = isVertical ? 'bottom' : 'right';\n  var arrowElementSize = getOuterSizes(arrowElement)[len];\n\n  //\n  // extends keepTogether behavior making sure the popper and its\n  // reference have enough pixels in conjunction\n  //\n\n  // top/left side\n  if (reference[opSide] - arrowElementSize < popper[side]) {\n    data.offsets.popper[side] -= popper[side] - (reference[opSide] - arrowElementSize);\n  }\n  // bottom/right side\n  if (reference[side] + arrowElementSize > popper[opSide]) {\n    data.offsets.popper[side] += reference[side] + arrowElementSize - popper[opSide];\n  }\n  data.offsets.popper = getClientRect(data.offsets.popper);\n\n  // compute center of the popper\n  var center = reference[side] + reference[len] / 2 - arrowElementSize / 2;\n\n  // Compute the sideValue using the updated popper offsets\n  // take popper margin in account because we don't have this info available\n  var css = getStyleComputedProperty(data.instance.popper);\n  var popperMarginSide = parseFloat(css['margin' + sideCapitalized], 10);\n  var popperBorderSide = parseFloat(css['border' + sideCapitalized + 'Width'], 10);\n  var sideValue = center - data.offsets.popper[side] - popperMarginSide - popperBorderSide;\n\n  // prevent arrowElement from being placed not contiguously to its popper\n  sideValue = Math.max(Math.min(popper[len] - arrowElementSize, sideValue), 0);\n\n  data.arrowElement = arrowElement;\n  data.offsets.arrow = (_data$offsets$arrow = {}, defineProperty(_data$offsets$arrow, side, Math.round(sideValue)), defineProperty(_data$offsets$arrow, altSide, ''), _data$offsets$arrow);\n\n  return data;\n}\n\n/**\n * Get the opposite placement variation of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement variation\n * @returns {String} flipped placement variation\n */\nfunction getOppositeVariation(variation) {\n  if (variation === 'end') {\n    return 'start';\n  } else if (variation === 'start') {\n    return 'end';\n  }\n  return variation;\n}\n\n/**\n * List of accepted placements to use as values of the `placement` option.<br />\n * Valid placements are:\n * - `auto`\n * - `top`\n * - `right`\n * - `bottom`\n * - `left`\n *\n * Each placement can have a variation from this list:\n * - `-start`\n * - `-end`\n *\n * Variations are interpreted easily if you think of them as the left to right\n * written languages. Horizontally (`top` and `bottom`), `start` is left and `end`\n * is right.<br />\n * Vertically (`left` and `right`), `start` is top and `end` is bottom.\n *\n * Some valid examples are:\n * - `top-end` (on top of reference, right aligned)\n * - `right-start` (on right of reference, top aligned)\n * - `bottom` (on bottom, centered)\n * - `auto-end` (on the side with more space available, alignment depends by placement)\n *\n * @static\n * @type {Array}\n * @enum {String}\n * @readonly\n * @method placements\n * @memberof Popper\n */\nvar placements = ['auto-start', 'auto', 'auto-end', 'top-start', 'top', 'top-end', 'right-start', 'right', 'right-end', 'bottom-end', 'bottom', 'bottom-start', 'left-end', 'left', 'left-start'];\n\n// Get rid of `auto` `auto-start` and `auto-end`\nvar validPlacements = placements.slice(3);\n\n/**\n * Given an initial placement, returns all the subsequent placements\n * clockwise (or counter-clockwise).\n *\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement - A valid placement (it accepts variations)\n * @argument {Boolean} counter - Set to true to walk the placements counterclockwise\n * @returns {Array} placements including their variations\n */\nfunction clockwise(placement) {\n  var counter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  var index = validPlacements.indexOf(placement);\n  var arr = validPlacements.slice(index + 1).concat(validPlacements.slice(0, index));\n  return counter ? arr.reverse() : arr;\n}\n\nvar BEHAVIORS = {\n  FLIP: 'flip',\n  CLOCKWISE: 'clockwise',\n  COUNTERCLOCKWISE: 'counterclockwise'\n};\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction flip(data, options) {\n  // if `inner` modifier is enabled, we can't use the `flip` modifier\n  if (isModifierEnabled(data.instance.modifiers, 'inner')) {\n    return data;\n  }\n\n  if (data.flipped && data.placement === data.originalPlacement) {\n    // seems like flip is trying to loop, probably there's not enough space on any of the flippable sides\n    return data;\n  }\n\n  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, options.boundariesElement, data.positionFixed);\n\n  var placement = data.placement.split('-')[0];\n  var placementOpposite = getOppositePlacement(placement);\n  var variation = data.placement.split('-')[1] || '';\n\n  var flipOrder = [];\n\n  switch (options.behavior) {\n    case BEHAVIORS.FLIP:\n      flipOrder = [placement, placementOpposite];\n      break;\n    case BEHAVIORS.CLOCKWISE:\n      flipOrder = clockwise(placement);\n      break;\n    case BEHAVIORS.COUNTERCLOCKWISE:\n      flipOrder = clockwise(placement, true);\n      break;\n    default:\n      flipOrder = options.behavior;\n  }\n\n  flipOrder.forEach(function (step, index) {\n    if (placement !== step || flipOrder.length === index + 1) {\n      return data;\n    }\n\n    placement = data.placement.split('-')[0];\n    placementOpposite = getOppositePlacement(placement);\n\n    var popperOffsets = data.offsets.popper;\n    var refOffsets = data.offsets.reference;\n\n    // using floor because the reference offsets may contain decimals we are not going to consider here\n    var floor = Math.floor;\n    var overlapsRef = placement === 'left' && floor(popperOffsets.right) > floor(refOffsets.left) || placement === 'right' && floor(popperOffsets.left) < floor(refOffsets.right) || placement === 'top' && floor(popperOffsets.bottom) > floor(refOffsets.top) || placement === 'bottom' && floor(popperOffsets.top) < floor(refOffsets.bottom);\n\n    var overflowsLeft = floor(popperOffsets.left) < floor(boundaries.left);\n    var overflowsRight = floor(popperOffsets.right) > floor(boundaries.right);\n    var overflowsTop = floor(popperOffsets.top) < floor(boundaries.top);\n    var overflowsBottom = floor(popperOffsets.bottom) > floor(boundaries.bottom);\n\n    var overflowsBoundaries = placement === 'left' && overflowsLeft || placement === 'right' && overflowsRight || placement === 'top' && overflowsTop || placement === 'bottom' && overflowsBottom;\n\n    // flip the variation if required\n    var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n\n    // flips variation if reference element overflows boundaries\n    var flippedVariationByRef = !!options.flipVariations && (isVertical && variation === 'start' && overflowsLeft || isVertical && variation === 'end' && overflowsRight || !isVertical && variation === 'start' && overflowsTop || !isVertical && variation === 'end' && overflowsBottom);\n\n    // flips variation if popper content overflows boundaries\n    var flippedVariationByContent = !!options.flipVariationsByContent && (isVertical && variation === 'start' && overflowsRight || isVertical && variation === 'end' && overflowsLeft || !isVertical && variation === 'start' && overflowsBottom || !isVertical && variation === 'end' && overflowsTop);\n\n    var flippedVariation = flippedVariationByRef || flippedVariationByContent;\n\n    if (overlapsRef || overflowsBoundaries || flippedVariation) {\n      // this boolean to detect any flip loop\n      data.flipped = true;\n\n      if (overlapsRef || overflowsBoundaries) {\n        placement = flipOrder[index + 1];\n      }\n\n      if (flippedVariation) {\n        variation = getOppositeVariation(variation);\n      }\n\n      data.placement = placement + (variation ? '-' + variation : '');\n\n      // this object contains `position`, we want to preserve it along with\n      // any additional property we may add in the future\n      data.offsets.popper = _extends({}, data.offsets.popper, getPopperOffsets(data.instance.popper, data.offsets.reference, data.placement));\n\n      data = runModifiers(data.instance.modifiers, data, 'flip');\n    }\n  });\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction keepTogether(data) {\n  var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n\n  var placement = data.placement.split('-')[0];\n  var floor = Math.floor;\n  var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n  var side = isVertical ? 'right' : 'bottom';\n  var opSide = isVertical ? 'left' : 'top';\n  var measurement = isVertical ? 'width' : 'height';\n\n  if (popper[side] < floor(reference[opSide])) {\n    data.offsets.popper[opSide] = floor(reference[opSide]) - popper[measurement];\n  }\n  if (popper[opSide] > floor(reference[side])) {\n    data.offsets.popper[opSide] = floor(reference[side]);\n  }\n\n  return data;\n}\n\n/**\n * Converts a string containing value + unit into a px value number\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} str - Value + unit string\n * @argument {String} measurement - `height` or `width`\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @returns {Number|String}\n * Value in pixels, or original string if no values were extracted\n */\nfunction toValue(str, measurement, popperOffsets, referenceOffsets) {\n  // separate value from unit\n  var split = str.match(/((?:\\-|\\+)?\\d*\\.?\\d*)(.*)/);\n  var value = +split[1];\n  var unit = split[2];\n\n  // If it's not a number it's an operator, I guess\n  if (!value) {\n    return str;\n  }\n\n  if (unit.indexOf('%') === 0) {\n    var element = void 0;\n    switch (unit) {\n      case '%p':\n        element = popperOffsets;\n        break;\n      case '%':\n      case '%r':\n      default:\n        element = referenceOffsets;\n    }\n\n    var rect = getClientRect(element);\n    return rect[measurement] / 100 * value;\n  } else if (unit === 'vh' || unit === 'vw') {\n    // if is a vh or vw, we calculate the size based on the viewport\n    var size = void 0;\n    if (unit === 'vh') {\n      size = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n    } else {\n      size = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\n    }\n    return size / 100 * value;\n  } else {\n    // if is an explicit pixel unit, we get rid of the unit and keep the value\n    // if is an implicit unit, it's px, and we return just the value\n    return value;\n  }\n}\n\n/**\n * Parse an `offset` string to extrapolate `x` and `y` numeric offsets.\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} offset\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @argument {String} basePlacement\n * @returns {Array} a two cells array with x and y offsets in numbers\n */\nfunction parseOffset(offset, popperOffsets, referenceOffsets, basePlacement) {\n  var offsets = [0, 0];\n\n  // Use height if placement is left or right and index is 0 otherwise use width\n  // in this way the first offset will use an axis and the second one\n  // will use the other one\n  var useHeight = ['right', 'left'].indexOf(basePlacement) !== -1;\n\n  // Split the offset string to obtain a list of values and operands\n  // The regex addresses values with the plus or minus sign in front (+10, -20, etc)\n  var fragments = offset.split(/(\\+|\\-)/).map(function (frag) {\n    return frag.trim();\n  });\n\n  // Detect if the offset string contains a pair of values or a single one\n  // they could be separated by comma or space\n  var divider = fragments.indexOf(find(fragments, function (frag) {\n    return frag.search(/,|\\s/) !== -1;\n  }));\n\n  if (fragments[divider] && fragments[divider].indexOf(',') === -1) {\n    console.warn('Offsets separated by white space(s) are deprecated, use a comma (,) instead.');\n  }\n\n  // If divider is found, we divide the list of values and operands to divide\n  // them by ofset X and Y.\n  var splitRegex = /\\s*,\\s*|\\s+/;\n  var ops = divider !== -1 ? [fragments.slice(0, divider).concat([fragments[divider].split(splitRegex)[0]]), [fragments[divider].split(splitRegex)[1]].concat(fragments.slice(divider + 1))] : [fragments];\n\n  // Convert the values with units to absolute pixels to allow our computations\n  ops = ops.map(function (op, index) {\n    // Most of the units rely on the orientation of the popper\n    var measurement = (index === 1 ? !useHeight : useHeight) ? 'height' : 'width';\n    var mergeWithPrevious = false;\n    return op\n    // This aggregates any `+` or `-` sign that aren't considered operators\n    // e.g.: 10 + +5 => [10, +, +5]\n    .reduce(function (a, b) {\n      if (a[a.length - 1] === '' && ['+', '-'].indexOf(b) !== -1) {\n        a[a.length - 1] = b;\n        mergeWithPrevious = true;\n        return a;\n      } else if (mergeWithPrevious) {\n        a[a.length - 1] += b;\n        mergeWithPrevious = false;\n        return a;\n      } else {\n        return a.concat(b);\n      }\n    }, [])\n    // Here we convert the string values into number values (in px)\n    .map(function (str) {\n      return toValue(str, measurement, popperOffsets, referenceOffsets);\n    });\n  });\n\n  // Loop trough the offsets arrays and execute the operations\n  ops.forEach(function (op, index) {\n    op.forEach(function (frag, index2) {\n      if (isNumeric(frag)) {\n        offsets[index] += frag * (op[index2 - 1] === '-' ? -1 : 1);\n      }\n    });\n  });\n  return offsets;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @argument {Number|String} options.offset=0\n * The offset value as described in the modifier description\n * @returns {Object} The data object, properly modified\n */\nfunction offset(data, _ref) {\n  var offset = _ref.offset;\n  var placement = data.placement,\n      _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n\n  var basePlacement = placement.split('-')[0];\n\n  var offsets = void 0;\n  if (isNumeric(+offset)) {\n    offsets = [+offset, 0];\n  } else {\n    offsets = parseOffset(offset, popper, reference, basePlacement);\n  }\n\n  if (basePlacement === 'left') {\n    popper.top += offsets[0];\n    popper.left -= offsets[1];\n  } else if (basePlacement === 'right') {\n    popper.top += offsets[0];\n    popper.left += offsets[1];\n  } else if (basePlacement === 'top') {\n    popper.left += offsets[0];\n    popper.top -= offsets[1];\n  } else if (basePlacement === 'bottom') {\n    popper.left += offsets[0];\n    popper.top += offsets[1];\n  }\n\n  data.popper = popper;\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction preventOverflow(data, options) {\n  var boundariesElement = options.boundariesElement || getOffsetParent(data.instance.popper);\n\n  // If offsetParent is the reference element, we really want to\n  // go one step up and use the next offsetParent as reference to\n  // avoid to make this modifier completely useless and look like broken\n  if (data.instance.reference === boundariesElement) {\n    boundariesElement = getOffsetParent(boundariesElement);\n  }\n\n  // NOTE: DOM access here\n  // resets the popper's position so that the document size can be calculated excluding\n  // the size of the popper element itself\n  var transformProp = getSupportedPropertyName('transform');\n  var popperStyles = data.instance.popper.style; // assignment to help minification\n  var top = popperStyles.top,\n      left = popperStyles.left,\n      transform = popperStyles[transformProp];\n\n  popperStyles.top = '';\n  popperStyles.left = '';\n  popperStyles[transformProp] = '';\n\n  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, boundariesElement, data.positionFixed);\n\n  // NOTE: DOM access here\n  // restores the original style properties after the offsets have been computed\n  popperStyles.top = top;\n  popperStyles.left = left;\n  popperStyles[transformProp] = transform;\n\n  options.boundaries = boundaries;\n\n  var order = options.priority;\n  var popper = data.offsets.popper;\n\n  var check = {\n    primary: function primary(placement) {\n      var value = popper[placement];\n      if (popper[placement] < boundaries[placement] && !options.escapeWithReference) {\n        value = Math.max(popper[placement], boundaries[placement]);\n      }\n      return defineProperty({}, placement, value);\n    },\n    secondary: function secondary(placement) {\n      var mainSide = placement === 'right' ? 'left' : 'top';\n      var value = popper[mainSide];\n      if (popper[placement] > boundaries[placement] && !options.escapeWithReference) {\n        value = Math.min(popper[mainSide], boundaries[placement] - (placement === 'right' ? popper.width : popper.height));\n      }\n      return defineProperty({}, mainSide, value);\n    }\n  };\n\n  order.forEach(function (placement) {\n    var side = ['left', 'top'].indexOf(placement) !== -1 ? 'primary' : 'secondary';\n    popper = _extends({}, popper, check[side](placement));\n  });\n\n  data.offsets.popper = popper;\n\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction shift(data) {\n  var placement = data.placement;\n  var basePlacement = placement.split('-')[0];\n  var shiftvariation = placement.split('-')[1];\n\n  // if shift shiftvariation is specified, run the modifier\n  if (shiftvariation) {\n    var _data$offsets = data.offsets,\n        reference = _data$offsets.reference,\n        popper = _data$offsets.popper;\n\n    var isVertical = ['bottom', 'top'].indexOf(basePlacement) !== -1;\n    var side = isVertical ? 'left' : 'top';\n    var measurement = isVertical ? 'width' : 'height';\n\n    var shiftOffsets = {\n      start: defineProperty({}, side, reference[side]),\n      end: defineProperty({}, side, reference[side] + reference[measurement] - popper[measurement])\n    };\n\n    data.offsets.popper = _extends({}, popper, shiftOffsets[shiftvariation]);\n  }\n\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction hide(data) {\n  if (!isModifierRequired(data.instance.modifiers, 'hide', 'preventOverflow')) {\n    return data;\n  }\n\n  var refRect = data.offsets.reference;\n  var bound = find(data.instance.modifiers, function (modifier) {\n    return modifier.name === 'preventOverflow';\n  }).boundaries;\n\n  if (refRect.bottom < bound.top || refRect.left > bound.right || refRect.top > bound.bottom || refRect.right < bound.left) {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === true) {\n      return data;\n    }\n\n    data.hide = true;\n    data.attributes['x-out-of-boundaries'] = '';\n  } else {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === false) {\n      return data;\n    }\n\n    data.hide = false;\n    data.attributes['x-out-of-boundaries'] = false;\n  }\n\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction inner(data) {\n  var placement = data.placement;\n  var basePlacement = placement.split('-')[0];\n  var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n\n  var isHoriz = ['left', 'right'].indexOf(basePlacement) !== -1;\n\n  var subtractLength = ['top', 'left'].indexOf(basePlacement) === -1;\n\n  popper[isHoriz ? 'left' : 'top'] = reference[basePlacement] - (subtractLength ? popper[isHoriz ? 'width' : 'height'] : 0);\n\n  data.placement = getOppositePlacement(placement);\n  data.offsets.popper = getClientRect(popper);\n\n  return data;\n}\n\n/**\n * Modifier function, each modifier can have a function of this type assigned\n * to its `fn` property.<br />\n * These functions will be called on each update, this means that you must\n * make sure they are performant enough to avoid performance bottlenecks.\n *\n * @function ModifierFn\n * @argument {dataObject} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {dataObject} The data object, properly modified\n */\n\n/**\n * Modifiers are plugins used to alter the behavior of your poppers.<br />\n * Popper.js uses a set of 9 modifiers to provide all the basic functionalities\n * needed by the library.\n *\n * Usually you don't want to override the `order`, `fn` and `onLoad` props.\n * All the other properties are configurations that could be tweaked.\n * @namespace modifiers\n */\nvar modifiers = {\n  /**\n   * Modifier used to shift the popper on the start or end of its reference\n   * element.<br />\n   * It will read the variation of the `placement` property.<br />\n   * It can be one either `-end` or `-start`.\n   * @memberof modifiers\n   * @inner\n   */\n  shift: {\n    /** @prop {number} order=100 - Index used to define the order of execution */\n    order: 100,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: shift\n  },\n\n  /**\n   * The `offset` modifier can shift your popper on both its axis.\n   *\n   * It accepts the following units:\n   * - `px` or unit-less, interpreted as pixels\n   * - `%` or `%r`, percentage relative to the length of the reference element\n   * - `%p`, percentage relative to the length of the popper element\n   * - `vw`, CSS viewport width unit\n   * - `vh`, CSS viewport height unit\n   *\n   * For length is intended the main axis relative to the placement of the popper.<br />\n   * This means that if the placement is `top` or `bottom`, the length will be the\n   * `width`. In case of `left` or `right`, it will be the `height`.\n   *\n   * You can provide a single value (as `Number` or `String`), or a pair of values\n   * as `String` divided by a comma or one (or more) white spaces.<br />\n   * The latter is a deprecated method because it leads to confusion and will be\n   * removed in v2.<br />\n   * Additionally, it accepts additions and subtractions between different units.\n   * Note that multiplications and divisions aren't supported.\n   *\n   * Valid examples are:\n   * ```\n   * 10\n   * '10%'\n   * '10, 10'\n   * '10%, 10'\n   * '10 + 10%'\n   * '10 - 5vh + 3%'\n   * '-10px + 5vh, 5px - 6%'\n   * ```\n   * > **NB**: If you desire to apply offsets to your poppers in a way that may make them overlap\n   * > with their reference element, unfortunately, you will have to disable the `flip` modifier.\n   * > You can read more on this at this [issue](https://github.com/FezVrasta/popper.js/issues/373).\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  offset: {\n    /** @prop {number} order=200 - Index used to define the order of execution */\n    order: 200,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: offset,\n    /** @prop {Number|String} offset=0\n     * The offset value as described in the modifier description\n     */\n    offset: 0\n  },\n\n  /**\n   * Modifier used to prevent the popper from being positioned outside the boundary.\n   *\n   * A scenario exists where the reference itself is not within the boundaries.<br />\n   * We can say it has \"escaped the boundaries\" — or just \"escaped\".<br />\n   * In this case we need to decide whether the popper should either:\n   *\n   * - detach from the reference and remain \"trapped\" in the boundaries, or\n   * - if it should ignore the boundary and \"escape with its reference\"\n   *\n   * When `escapeWithReference` is set to`true` and reference is completely\n   * outside its boundaries, the popper will overflow (or completely leave)\n   * the boundaries in order to remain attached to the edge of the reference.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  preventOverflow: {\n    /** @prop {number} order=300 - Index used to define the order of execution */\n    order: 300,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: preventOverflow,\n    /**\n     * @prop {Array} [priority=['left','right','top','bottom']]\n     * Popper will try to prevent overflow following these priorities by default,\n     * then, it could overflow on the left and on top of the `boundariesElement`\n     */\n    priority: ['left', 'right', 'top', 'bottom'],\n    /**\n     * @prop {number} padding=5\n     * Amount of pixel used to define a minimum distance between the boundaries\n     * and the popper. This makes sure the popper always has a little padding\n     * between the edges of its container\n     */\n    padding: 5,\n    /**\n     * @prop {String|HTMLElement} boundariesElement='scrollParent'\n     * Boundaries used by the modifier. Can be `scrollParent`, `window`,\n     * `viewport` or any DOM element.\n     */\n    boundariesElement: 'scrollParent'\n  },\n\n  /**\n   * Modifier used to make sure the reference and its popper stay near each other\n   * without leaving any gap between the two. Especially useful when the arrow is\n   * enabled and you want to ensure that it points to its reference element.\n   * It cares only about the first axis. You can still have poppers with margin\n   * between the popper and its reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  keepTogether: {\n    /** @prop {number} order=400 - Index used to define the order of execution */\n    order: 400,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: keepTogether\n  },\n\n  /**\n   * This modifier is used to move the `arrowElement` of the popper to make\n   * sure it is positioned between the reference element and its popper element.\n   * It will read the outer size of the `arrowElement` node to detect how many\n   * pixels of conjunction are needed.\n   *\n   * It has no effect if no `arrowElement` is provided.\n   * @memberof modifiers\n   * @inner\n   */\n  arrow: {\n    /** @prop {number} order=500 - Index used to define the order of execution */\n    order: 500,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: arrow,\n    /** @prop {String|HTMLElement} element='[x-arrow]' - Selector or node used as arrow */\n    element: '[x-arrow]'\n  },\n\n  /**\n   * Modifier used to flip the popper's placement when it starts to overlap its\n   * reference element.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   *\n   * **NOTE:** this modifier will interrupt the current update cycle and will\n   * restart it if it detects the need to flip the placement.\n   * @memberof modifiers\n   * @inner\n   */\n  flip: {\n    /** @prop {number} order=600 - Index used to define the order of execution */\n    order: 600,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: flip,\n    /**\n     * @prop {String|Array} behavior='flip'\n     * The behavior used to change the popper's placement. It can be one of\n     * `flip`, `clockwise`, `counterclockwise` or an array with a list of valid\n     * placements (with optional variations)\n     */\n    behavior: 'flip',\n    /**\n     * @prop {number} padding=5\n     * The popper will flip if it hits the edges of the `boundariesElement`\n     */\n    padding: 5,\n    /**\n     * @prop {String|HTMLElement} boundariesElement='viewport'\n     * The element which will define the boundaries of the popper position.\n     * The popper will never be placed outside of the defined boundaries\n     * (except if `keepTogether` is enabled)\n     */\n    boundariesElement: 'viewport',\n    /**\n     * @prop {Boolean} flipVariations=false\n     * The popper will switch placement variation between `-start` and `-end` when\n     * the reference element overlaps its boundaries.\n     *\n     * The original placement should have a set variation.\n     */\n    flipVariations: false,\n    /**\n     * @prop {Boolean} flipVariationsByContent=false\n     * The popper will switch placement variation between `-start` and `-end` when\n     * the popper element overlaps its reference boundaries.\n     *\n     * The original placement should have a set variation.\n     */\n    flipVariationsByContent: false\n  },\n\n  /**\n   * Modifier used to make the popper flow toward the inner of the reference element.\n   * By default, when this modifier is disabled, the popper will be placed outside\n   * the reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  inner: {\n    /** @prop {number} order=700 - Index used to define the order of execution */\n    order: 700,\n    /** @prop {Boolean} enabled=false - Whether the modifier is enabled or not */\n    enabled: false,\n    /** @prop {ModifierFn} */\n    fn: inner\n  },\n\n  /**\n   * Modifier used to hide the popper when its reference element is outside of the\n   * popper boundaries. It will set a `x-out-of-boundaries` attribute which can\n   * be used to hide with a CSS selector the popper when its reference is\n   * out of boundaries.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   * @memberof modifiers\n   * @inner\n   */\n  hide: {\n    /** @prop {number} order=800 - Index used to define the order of execution */\n    order: 800,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: hide\n  },\n\n  /**\n   * Computes the style that will be applied to the popper element to gets\n   * properly positioned.\n   *\n   * Note that this modifier will not touch the DOM, it just prepares the styles\n   * so that `applyStyle` modifier can apply it. This separation is useful\n   * in case you need to replace `applyStyle` with a custom implementation.\n   *\n   * This modifier has `850` as `order` value to maintain backward compatibility\n   * with previous versions of Popper.js. Expect the modifiers ordering method\n   * to change in future major versions of the library.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  computeStyle: {\n    /** @prop {number} order=850 - Index used to define the order of execution */\n    order: 850,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: computeStyle,\n    /**\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3D transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties\n     */\n    gpuAcceleration: true,\n    /**\n     * @prop {string} [x='bottom']\n     * Where to anchor the X axis (`bottom` or `top`). AKA X offset origin.\n     * Change this if your popper should grow in a direction different from `bottom`\n     */\n    x: 'bottom',\n    /**\n     * @prop {string} [x='left']\n     * Where to anchor the Y axis (`left` or `right`). AKA Y offset origin.\n     * Change this if your popper should grow in a direction different from `right`\n     */\n    y: 'right'\n  },\n\n  /**\n   * Applies the computed styles to the popper element.\n   *\n   * All the DOM manipulations are limited to this modifier. This is useful in case\n   * you want to integrate Popper.js inside a framework or view library and you\n   * want to delegate all the DOM manipulations to it.\n   *\n   * Note that if you disable this modifier, you must make sure the popper element\n   * has its position set to `absolute` before Popper.js can do its work!\n   *\n   * Just disable this modifier and define your own to achieve the desired effect.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  applyStyle: {\n    /** @prop {number} order=900 - Index used to define the order of execution */\n    order: 900,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: applyStyle,\n    /** @prop {Function} */\n    onLoad: applyStyleOnLoad,\n    /**\n     * @deprecated since version 1.10.0, the property moved to `computeStyle` modifier\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3D transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties\n     */\n    gpuAcceleration: undefined\n  }\n};\n\n/**\n * The `dataObject` is an object containing all the information used by Popper.js.\n * This object is passed to modifiers and to the `onCreate` and `onUpdate` callbacks.\n * @name dataObject\n * @property {Object} data.instance The Popper.js instance\n * @property {String} data.placement Placement applied to popper\n * @property {String} data.originalPlacement Placement originally defined on init\n * @property {Boolean} data.flipped True if popper has been flipped by flip modifier\n * @property {Boolean} data.hide True if the reference element is out of boundaries, useful to know when to hide the popper\n * @property {HTMLElement} data.arrowElement Node used as arrow by arrow modifier\n * @property {Object} data.styles Any CSS property defined here will be applied to the popper. It expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.arrowStyles Any CSS property defined here will be applied to the popper arrow. It expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.boundaries Offsets of the popper boundaries\n * @property {Object} data.offsets The measurements of popper, reference and arrow elements\n * @property {Object} data.offsets.popper `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.reference `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.arrow] `top` and `left` offsets, only one of them will be different from 0\n */\n\n/**\n * Default options provided to Popper.js constructor.<br />\n * These can be overridden using the `options` argument of Popper.js.<br />\n * To override an option, simply pass an object with the same\n * structure of the `options` object, as the 3rd argument. For example:\n * ```\n * new Popper(ref, pop, {\n *   modifiers: {\n *     preventOverflow: { enabled: false }\n *   }\n * })\n * ```\n * @type {Object}\n * @static\n * @memberof Popper\n */\nvar Defaults = {\n  /**\n   * Popper's placement.\n   * @prop {Popper.placements} placement='bottom'\n   */\n  placement: 'bottom',\n\n  /**\n   * Set this to true if you want popper to position it self in 'fixed' mode\n   * @prop {Boolean} positionFixed=false\n   */\n  positionFixed: false,\n\n  /**\n   * Whether events (resize, scroll) are initially enabled.\n   * @prop {Boolean} eventsEnabled=true\n   */\n  eventsEnabled: true,\n\n  /**\n   * Set to true if you want to automatically remove the popper when\n   * you call the `destroy` method.\n   * @prop {Boolean} removeOnDestroy=false\n   */\n  removeOnDestroy: false,\n\n  /**\n   * Callback called when the popper is created.<br />\n   * By default, it is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onCreate}\n   */\n  onCreate: function onCreate() {},\n\n  /**\n   * Callback called when the popper is updated. This callback is not called\n   * on the initialization/creation of the popper, but only on subsequent\n   * updates.<br />\n   * By default, it is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onUpdate}\n   */\n  onUpdate: function onUpdate() {},\n\n  /**\n   * List of modifiers used to modify the offsets before they are applied to the popper.\n   * They provide most of the functionalities of Popper.js.\n   * @prop {modifiers}\n   */\n  modifiers: modifiers\n};\n\n/**\n * @callback onCreate\n * @param {dataObject} data\n */\n\n/**\n * @callback onUpdate\n * @param {dataObject} data\n */\n\n// Utils\n// Methods\nvar Popper = function () {\n  /**\n   * Creates a new Popper.js instance.\n   * @class Popper\n   * @param {Element|referenceObject} reference - The reference element used to position the popper\n   * @param {Element} popper - The HTML / XML element used as the popper\n   * @param {Object} options - Your custom options to override the ones defined in [Defaults](#defaults)\n   * @return {Object} instance - The generated Popper.js instance\n   */\n  function Popper(reference, popper) {\n    var _this = this;\n\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    classCallCheck(this, Popper);\n\n    this.scheduleUpdate = function () {\n      return requestAnimationFrame(_this.update);\n    };\n\n    // make update() debounced, so that it only runs at most once-per-tick\n    this.update = debounce(this.update.bind(this));\n\n    // with {} we create a new object with the options inside it\n    this.options = _extends({}, Popper.Defaults, options);\n\n    // init state\n    this.state = {\n      isDestroyed: false,\n      isCreated: false,\n      scrollParents: []\n    };\n\n    // get reference and popper elements (allow jQuery wrappers)\n    this.reference = reference && reference.jquery ? reference[0] : reference;\n    this.popper = popper && popper.jquery ? popper[0] : popper;\n\n    // Deep merge modifiers options\n    this.options.modifiers = {};\n    Object.keys(_extends({}, Popper.Defaults.modifiers, options.modifiers)).forEach(function (name) {\n      _this.options.modifiers[name] = _extends({}, Popper.Defaults.modifiers[name] || {}, options.modifiers ? options.modifiers[name] : {});\n    });\n\n    // Refactoring modifiers' list (Object => Array)\n    this.modifiers = Object.keys(this.options.modifiers).map(function (name) {\n      return _extends({\n        name: name\n      }, _this.options.modifiers[name]);\n    })\n    // sort the modifiers by order\n    .sort(function (a, b) {\n      return a.order - b.order;\n    });\n\n    // modifiers have the ability to execute arbitrary code when Popper.js get inited\n    // such code is executed in the same order of its modifier\n    // they could add new properties to their options configuration\n    // BE AWARE: don't add options to `options.modifiers.name` but to `modifierOptions`!\n    this.modifiers.forEach(function (modifierOptions) {\n      if (modifierOptions.enabled && isFunction(modifierOptions.onLoad)) {\n        modifierOptions.onLoad(_this.reference, _this.popper, _this.options, modifierOptions, _this.state);\n      }\n    });\n\n    // fire the first update to position the popper in the right place\n    this.update();\n\n    var eventsEnabled = this.options.eventsEnabled;\n    if (eventsEnabled) {\n      // setup event listeners, they will take care of update the position in specific situations\n      this.enableEventListeners();\n    }\n\n    this.state.eventsEnabled = eventsEnabled;\n  }\n\n  // We can't use class properties because they don't get listed in the\n  // class prototype and break stuff like Sinon stubs\n\n\n  createClass(Popper, [{\n    key: 'update',\n    value: function update$$1() {\n      return update.call(this);\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy$$1() {\n      return destroy.call(this);\n    }\n  }, {\n    key: 'enableEventListeners',\n    value: function enableEventListeners$$1() {\n      return enableEventListeners.call(this);\n    }\n  }, {\n    key: 'disableEventListeners',\n    value: function disableEventListeners$$1() {\n      return disableEventListeners.call(this);\n    }\n\n    /**\n     * Schedules an update. It will run on the next UI update available.\n     * @method scheduleUpdate\n     * @memberof Popper\n     */\n\n\n    /**\n     * Collection of utilities useful when writing custom modifiers.\n     * Starting from version 1.7, this method is available only if you\n     * include `popper-utils.js` before `popper.js`.\n     *\n     * **DEPRECATION**: This way to access PopperUtils is deprecated\n     * and will be removed in v2! Use the PopperUtils module directly instead.\n     * Due to the high instability of the methods contained in Utils, we can't\n     * guarantee them to follow semver. Use them at your own risk!\n     * @static\n     * @private\n     * @type {Object}\n     * @deprecated since version 1.8\n     * @member Utils\n     * @memberof Popper\n     */\n\n  }]);\n  return Popper;\n}();\n\n/**\n * The `referenceObject` is an object that provides an interface compatible with Popper.js\n * and lets you use it as replacement of a real DOM node.<br />\n * You can use this method to position a popper relatively to a set of coordinates\n * in case you don't have a DOM node to use as reference.\n *\n * ```\n * new Popper(referenceObject, popperNode);\n * ```\n *\n * NB: This feature isn't supported in Internet Explorer 10.\n * @name referenceObject\n * @property {Function} data.getBoundingClientRect\n * A function that returns a set of coordinates compatible with the native `getBoundingClientRect` method.\n * @property {number} data.clientWidth\n * An ES6 getter that will return the width of the virtual reference element.\n * @property {number} data.clientHeight\n * An ES6 getter that will return the height of the virtual reference element.\n */\n\n\nPopper.Utils = (typeof window !== 'undefined' ? window : global).PopperUtils;\nPopper.placements = placements;\nPopper.Defaults = Defaults;\n\nexport default Popper;\n//# sourceMappingURL=popper.js.map\n","import {Column, INumbersColumn, isNumbersColumn, IDataRow, IOrderedGroup} from '../model';\nimport {CANVAS_HEIGHT, cssClass} from '../styles';\nimport {ANumbersCellRenderer} from './ANumbersCellRenderer';\nimport {toHeatMapColor} from './BrightnessCellRenderer';\nimport {IRenderContext, ICellRendererFactory, IImposer} from './interfaces';\nimport {renderMissingValue, renderMissingDOM} from './missing';\nimport {noop, wideEnough} from './utils';\nimport {GUESSED_ROW_HEIGHT} from '../constants';\n\n\n/** @internal */\nexport default class HeatmapCellRenderer implements ICellRendererFactory {\n  readonly title = 'Heatmap';\n\n  canRender(col: Column) {\n    return isNumbersColumn(col) && Boolean(col.dataLength);\n  }\n\n  private createContext(col: INumbersColumn, context: IRenderContext, imposer?: IImposer) {\n    const width = context.colWidth(col);\n    const cellDimension = width / col.dataLength!;\n    const labels = col.labels;\n    const render = (ctx: CanvasRenderingContext2D, data: number[], item: IDataRow, height: number) => {\n      data.forEach((d: number, j: number) => {\n        const x = j * cellDimension;\n        if (isNaN(d)) {\n          renderMissingValue(ctx, cellDimension, height, x, 0);\n          return;\n        }\n        ctx.fillStyle = toHeatMapColor(d, item, col, imposer);\n        ctx.fillRect(x, 0, cellDimension, height);\n      });\n    };\n    return {\n      template: `<canvas height=\"${GUESSED_ROW_HEIGHT}\" title=\"\"></canvas>`,\n      render,\n      width,\n      mover: (n: HTMLElement, values: string[]) => (evt: MouseEvent) => {\n        const percent = evt.offsetX / width;\n        const index = Math.max(0, Math.min(col.dataLength! - 1, Math.floor(percent * (col.dataLength! - 1) + 0.5)));\n        n.title = `${labels[index]}: ${values[index]}`;\n      }\n    };\n  }\n\n  create(col: INumbersColumn, context: IRenderContext, _hist: any, imposer?: IImposer) {\n    const {template, render, mover, width} = this.createContext(col, context, imposer);\n\n    return {\n      template,\n      update: (n: HTMLElement, d: IDataRow) => {\n        const ctx = (<HTMLCanvasElement>n).getContext('2d')!;\n        ctx.canvas.width = width;\n        ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n\n        if (renderMissingDOM(n, col, d)) {\n          return;\n        }\n        n.onmousemove = mover(n, col.getLabels(d));\n        n.onmouseleave = () => n.title = '';\n        render(ctx, col.getNumbers(d), d, GUESSED_ROW_HEIGHT);\n      },\n      render: (ctx: CanvasRenderingContext2D, d: IDataRow) => {\n        render(ctx, col.getNumbers(d), d, CANVAS_HEIGHT);\n      }\n    };\n  }\n\n  createGroup(col: INumbersColumn, context: IRenderContext, imposer?: IImposer) {\n    const {template, render, mover, width} = this.createContext(col, context, imposer);\n    const formatter = col.getNumberFormat();\n\n    return {\n      template,\n      update: (n: HTMLElement, group: IOrderedGroup) => {\n        return context.tasks.groupRows(col, group, this.title, (rows) => ANumbersCellRenderer.choose(col, rows)).then((data) => {\n          if (typeof data === 'symbol') {\n            return;\n          }\n          const ctx = (<HTMLCanvasElement>n).getContext('2d')!;\n          ctx.canvas.width = width;\n          ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n          n.onmousemove = mover(n, data.raw.map(formatter));\n          n.onmouseleave = () => n.title = '';\n          render(ctx, data.normalized, data.row!, GUESSED_ROW_HEIGHT);\n        });\n      }\n    };\n  }\n\n  createSummary(col: INumbersColumn) {\n    let labels = col.labels.slice();\n    while (labels.length > 0 && !wideEnough(col, labels.length)) {\n      labels = labels.filter((_, i) => i % 2 === 0); // even\n    }\n    let templateRows = `<div class=\"${cssClass('heatmap')}\">`;\n    for (const label of labels) {\n      templateRows += `<div class=\"${cssClass('heatmap-cell')}\"  title=\"${label}\" data-title=\"${label}\"></div>`;\n    }\n    templateRows += '</div>';\n    return {\n      template: templateRows,\n      update: noop\n    };\n  }\n}\n","const TYPE_OBJECT = '[object Object]';\n\n/**\n * deep merge the source object into the target object and return the target object.\n * will concatenate arrays instead of replacing them.\n * @internal\n */\nexport default function merge<T1, T2>(target: T1, source: T2): T1 | T2 {\n  const result: any = target;\n\n  if (!source) {\n    return result;\n  }\n\n  const bKeys: (keyof T2)[] = <(keyof T2)[]>Object.keys(source);\n  if (bKeys.length === 0) {\n    return result;\n  }\n\n  for (const key of bKeys) {\n    const value = source[key];\n\n    //merge just POJOs\n    if (Object.prototype.toString.call(value) === TYPE_OBJECT && (Object.getPrototypeOf(value) === Object.prototype)) { //pojo\n      if (result[key] == null) {\n        result[key] = {};\n      }\n      result[key] = merge(result[key], value);\n    } else if (Array.isArray(value)) {\n      if (result[key] == null) {\n        result[key] = [];\n      }\n      result[key] = result[key].concat(value);\n    } else {\n      result[key] = value;\n    }\n  }\n  return result;\n}\n","import Popper from 'popper.js';\nimport DialogManager from './DialogManager';\nimport {merge} from '../../internal';\nimport {cssClass} from '../../styles';\nimport {IRankingHeaderContext} from '../interfaces';\n\nexport interface IDialogOptions {\n  title: string;\n  fullDialog: boolean;\n  resetPossible: boolean;\n\n  // popper options\n  placement?: Popper.Placement;\n  eventsEnabled?: boolean;\n  modifiers?: Popper.Modifiers;\n  toggleDialog: boolean;\n}\n\nexport interface IDialogContext {\n  attachment: HTMLElement;\n  level: number;\n  manager: DialogManager;\n  idPrefix: string;\n}\n\nexport function dialogContext(ctx: IRankingHeaderContext, level: number, attachment: HTMLElement | MouseEvent): IDialogContext {\n  return {\n    attachment: (<MouseEvent>attachment).currentTarget != null ? <HTMLElement>(<MouseEvent>attachment).currentTarget : <HTMLElement>attachment,\n    level,\n    manager: ctx.dialogManager,\n    idPrefix: ctx.idPrefix\n  };\n}\n\nabstract class ADialog {\n\n  private readonly options: Readonly<IDialogOptions> = {\n    title: '',\n    fullDialog: false,\n    resetPossible: true,\n    placement: 'bottom-start',\n    toggleDialog: true,\n    modifiers: {\n    }\n  };\n\n  readonly node: HTMLFormElement;\n  private popper: Popper | null = null;\n\n  constructor(protected readonly dialog: Readonly<IDialogContext>, options: Partial<IDialogOptions> = {}) {\n    Object.assign(this.options, options);\n    this.node = dialog.attachment.ownerDocument!.createElement('form');\n    this.node.classList.add(cssClass('dialog'));\n  }\n\n  get attachment() {\n    return this.dialog.attachment;\n  }\n\n  get level() {\n    return this.dialog.level;\n  }\n\n  protected abstract build(node: HTMLElement): boolean | void;\n\n  equals(that: ADialog) {\n    return this.dialog.level === that.dialog.level && this.dialog.attachment === that.dialog.attachment;\n  }\n\n  protected appendDialogButtons() {\n    this.node.insertAdjacentHTML('beforeend', `<div class=\"${cssClass('dialog-buttons')}\">\n      <button class=\"${cssClass('dialog-button')}\" type=\"submit\" title=\"Apply\"></button>\n      <button class=\"${cssClass('dialog-button')}\" type=\"button\" title=\"Cancel\"></button>\n      <button class=\"${cssClass('dialog-button')}\" type=\"reset\" title=\"Reset to default values\" ${!this.options.resetPossible ? 'style=\"visibility: hidden\"': ''}></button>\n    </div>`);\n  }\n\n  open() {\n    if (this.options.toggleDialog && this.dialog.manager.removeLike(this)) {\n      return;\n    }\n    if (this.build(this.node) === false) {\n      return;\n    }\n    const parent = <HTMLElement>this.attachment.closest(`.${cssClass()}`)!;\n\n    if (this.options.title) {\n      this.node.insertAdjacentHTML('afterbegin', `<strong>${this.options.title}</strong>`);\n    }\n    if (this.options.fullDialog) {\n      this.appendDialogButtons();\n    }\n\n    parent.appendChild(this.node);\n    this.popper = new Popper(this.attachment, this.node, merge({\n      modifiers: {\n        preventOverflow: {\n          boundariesElement: parent\n        }\n      }\n    }, this.options));\n\n    const auto = this.find<HTMLInputElement>('input[autofocus]');\n    if (auto) {\n      // delay such that it works\n      self.setTimeout(() => auto.focus());\n    }\n\n    const reset = this.find<HTMLButtonElement>('button[type=reset]');\n    if (reset) {\n      reset.onclick = (evt) => {\n        evt.stopPropagation();\n        evt.preventDefault();\n        this.reset();\n      };\n    }\n    this.node.onsubmit = (evt) => {\n      evt.stopPropagation();\n      evt.preventDefault();\n      if (!this.node.checkValidity()) {\n        return false;\n      }\n      if (this.submit()) {\n        this.destroy();\n      }\n      return false;\n    };\n    const cancel = this.find<HTMLButtonElement>('button[title=Cancel]');\n    if (cancel) {\n      cancel.onclick = (evt) => {\n        evt.stopPropagation();\n        evt.preventDefault();\n        this.destroy();\n      };\n    }\n\n    this.dialog.manager.push(this);\n  }\n\n  protected find<T extends HTMLElement>(selector: string): T {\n    return <T>this.node.querySelector(selector);\n  }\n\n  protected findInput(selector: string) {\n    return this.find<HTMLInputElement>(selector);\n  }\n\n  protected forEach<M extends Element, T>(selector: string, callback: (d: M, i: number) => T): T[] {\n    return (<M[]>Array.from(this.node.querySelectorAll(selector))).map(callback);\n  }\n\n  protected reset() {\n    // hook\n  }\n\n  protected submit(): boolean {\n    // hook\n    return true;\n  }\n\n  destroy() {\n    this.dialog.manager.remove(this);\n    if (this.popper) {\n      this.popper.destroy();\n    }\n    this.node.remove();\n  }\n}\n\nexport default ADialog;\n","import ADialog, {IDialogContext} from './ADialog';\n\n/** @internal */\nexport interface IInputNumberOptions {\n  min: number;\n  max: number;\n  step: number | 'any';\n  value: number;\n  label: string | null;\n}\n\n/** @internal */\nexport default class InputNumberDialog extends ADialog {\n\n  private readonly ioptions: Readonly<IInputNumberOptions> = {\n    min: NaN,\n    max: NaN,\n    step: 'any',\n    value: NaN,\n    label: null\n  };\n\n  constructor(dialog: IDialogContext, private readonly callback: (value: number) => void, options: Partial<IInputNumberOptions> = {}) {\n    super(dialog);\n    Object.assign(this.ioptions, options);\n  }\n\n  protected build(node: HTMLElement) {\n    const o = this.ioptions;\n    node.insertAdjacentHTML('beforeend', `\n     <input type=\"number\" value=\"${isNaN(o.value) ? '' : String(o.value)}\" required autofocus placeholder=\"${o.label ? o.label : 'enter number'}\" ${isNaN(o.min) ? '' : ` min=\"${o.min}\"`} ${isNaN(o.max) ? '' : ` max=\"${o.max}\"`} step=\"${o.step}\">\n    `);\n  }\n\n  submit() {\n    this.callback(this.findInput('input[type=number]').valueAsNumber);\n    return true;\n  }\n}\n","\n/** @internal */\nexport interface IDragHandleOptions {\n  /**\n   * drag base container\n   * @default handle parentElement\n   */\n  container: HTMLElement | SVGElement;\n  /**\n   * filter to certain mouse events, e.g. shift only\n   */\n  filter(evt: MouseEvent): boolean;\n\n  onStart(handle: HTMLElement | SVGElement, x: number, delta: number, evt: MouseEvent): void;\n\n  onDrag(handle: HTMLElement | SVGElement, x: number, delta: number, evt: MouseEvent): void;\n\n  onEnd(handle: HTMLElement | SVGElement, x: number, delta: number, evt: MouseEvent): void;\n\n  /**\n   * minimal pixel delta\n   * @default 2\n   */\n  minDelta: number;\n}\n\n/**\n * allow to change the width of a column using dragging the handle\n * @internal\n */\nexport function dragHandle(handle: HTMLElement | SVGElement, options: Partial<IDragHandleOptions> = {}) {\n  const o: Readonly<IDragHandleOptions> = Object.assign({\n    container: handle.parentElement!,\n    filter: () => true,\n    onStart: () => undefined,\n    onDrag: () => undefined,\n    onEnd: () => undefined,\n    minDelta: 2\n  }, options);\n\n  // converts the given x coordinate to be relative to the given element\n  const toContainerRelative = (x: number, elem: HTMLElement | SVGElement) => {\n    const rect = elem.getBoundingClientRect();\n    return x - rect.left - elem.clientLeft;\n  };\n\n  let start = 0;\n  let last = 0;\n  let handleShift = 0;\n\n  const mouseMove = (evt: MouseEvent) => {\n    if (!o.filter(evt)) {\n      return;\n    }\n    evt.stopPropagation();\n    evt.preventDefault();\n\n    const end = toContainerRelative(evt.clientX, o.container) - handleShift;\n    if (Math.abs(last - end) < o.minDelta) {\n      //ignore\n      return;\n    }\n\n    last = end;\n    o.onDrag(handle, end, last - end, evt);\n  };\n\n  const mouseUp = (evt: MouseEvent) => {\n    if (!o.filter(evt)) {\n      return;\n    }\n    evt.stopPropagation();\n    evt.preventDefault();\n\n    const end = toContainerRelative(evt.clientX, o.container) - handleShift;\n    o.container.removeEventListener('mousemove', <any>mouseMove);\n    o.container.removeEventListener('mouseup', <any>mouseUp);\n    o.container.removeEventListener('mouseleave', <any>mouseUp);\n\n    if (Math.abs(start - end) < 2) {\n      //ignore\n      return;\n    }\n\n    o.onEnd(handle, end, start - end, evt);\n  };\n\n  handle.onmousedown = (evt) => {\n    if (!o.filter(evt)) {\n      return;\n    }\n    evt.stopPropagation();\n    evt.preventDefault();\n\n    handleShift = toContainerRelative(evt.clientX, handle);\n    start = last = toContainerRelative(evt.clientX, o.container) - handleShift;\n\n    // register other event listeners\n    o.container.addEventListener('mousemove', <any>mouseMove);\n    o.container.addEventListener('mouseup', <any>mouseUp);\n    o.container.addEventListener('mouseleave', <any>mouseUp);\n\n    o.onStart(handle, start, 0, evt);\n  };\n}\n","import {DENSE_HISTOGRAM} from '../constants';\nimport {IBin, round, IDragHandleOptions, dragHandle} from '../internal';\nimport {cssClass, FILTERED_OPACITY} from '../styles';\nimport {color} from 'd3-color';\nimport {filterMissingNumberMarkup, updateFilterMissingNumberMarkup} from '../ui/missing';\n\nfunction filteredColor(input: string) {\n  const c = color(input)!;\n  c.opacity = FILTERED_OPACITY;\n  return c.toString();\n}\n\n/**\n * @internal\n */\nexport function histogramTemplate(guessedBins: number) {\n  let bins = '';\n  for (let i = 0; i < guessedBins; ++i) {\n    bins += `<div class=\"${cssClass('histogram-bin')}\" title=\"Bin ${i}: 0\" data-x=\"\"><div style=\"height: 0\" ></div></div>`;\n  }\n  // no closing div to be able to append things\n  return `<div class=\"${cssClass('histogram')} ${guessedBins > DENSE_HISTOGRAM ? cssClass('dense') : ''}\">${bins}`;\n}\n\nfunction matchBins(n: HTMLElement, bins: number) {\n  //adapt the number of children\n  let nodes = <HTMLElement[]>Array.from(n.querySelectorAll('[data-x]'));\n  if (nodes.length > bins) {\n    nodes.splice(bins, nodes.length - bins).forEach((d) => d.remove());\n  } else if (nodes.length < bins) {\n    for (let i = nodes.length; i < bins; ++i) {\n      n.insertAdjacentHTML('afterbegin', `<div class=\"${cssClass('histogram-bin')}\" title=\"Bin ${i}: 0\" data-x=\"\"><div style=\"height: 0\" ></div></div>`);\n    }\n    nodes = Array.from(n.querySelectorAll('[data-x]'));\n  }\n  n.classList.toggle(cssClass('dense'), bins > DENSE_HISTOGRAM);\n  return nodes;\n}\n\nexport interface IHistogramLike<T> {\n  readonly maxBin: number;\n  readonly hist: ReadonlyArray<IBin<T>>;\n}\n\n/** @internal */\nexport function histogramUpdate<T>(n: HTMLElement, stats: IHistogramLike<T>, unfiltered: IHistogramLike<T> | null, formatter: (v: T) => string, colorOf: (bin: IBin<T>) => string) {\n  const hist = stats.hist;\n  const nodes = matchBins(n, hist.length);\n\n  nodes.forEach((d: HTMLElement, i) => {\n    const bin = hist[i];\n    const inner = <HTMLElement>d.firstElementChild!;\n    if (!bin) {\n      inner.style.height = '0%';\n      return;\n    }\n\n    const {x0, x1, count} = bin;\n    const color = colorOf(bin);\n    d.dataset.x = formatter(x0);\n\n    if (unfiltered) {\n      const gCount = (unfiltered.hist[i] || {count}).count;\n      d.title = `${formatter(x0)} - ${formatter(x1)} (${count} of ${gCount})`;\n      inner.style.height = `${round(gCount * 100 / unfiltered.maxBin, 2)}%`;\n      const relY = 100 - round(count * 100 / gCount, 2);\n      inner.style.background = relY === 0 ? color : (relY === 100 ? filteredColor(color) : `linear-gradient(${filteredColor(color)} ${relY}%, ${color} ${relY}%, ${color} 100%)`);\n    } else {\n      d.title = `${formatter(x0)} - ${formatter(x1)} (${count})`;\n      inner.style.height = `${round(count * 100 / stats.maxBin, 2)}%`;\n      inner.style.backgroundColor = color;\n    }\n  });\n}\n\n/**\n * @internal\n */\nexport function mappingHintTemplate(range: [string, string]) {\n  return `<span class=\"${cssClass('mapping-hint')}\">${range[0]}</span><span class=\"${cssClass('mapping-hint')}\">${range[1]}</span>`;\n}\n\n/**\n * @internal\n */\nexport function mappingHintUpdate(n: HTMLElement, range: [string, string]) {\n  Array.from(n.getElementsByTagName('span')).forEach((d: HTMLElement, i) => d.textContent = range[i]);\n}\n\n\nexport interface IFilterContext<T> {\n  percent(v: T): number;\n  unpercent(p: number): T;\n  format(v: T): string;\n  setFilter(filterMissing: boolean, min: T, max: T): void;\n  edit(value: T, attachment: HTMLElement, type: 'min' | 'max'): Promise<T>;\n  domain: [T, T];\n}\n/**\n * @internal\n */\nexport interface IFilterInfo<T> {\n  filterMissing: boolean;\n  filterMin: T;\n  filterMax: T;\n}\n\n\nexport function filteredHistTemplate<T>(c: IFilterContext<T>, f: IFilterInfo<T>) {\n  return `\n    <div class=\"${cssClass('histogram-min-hint')}\" style=\"width: ${c.percent(f.filterMin)}%\"></div>\n    <div class=\"${cssClass('histogram-max-hint')}\" style=\"width: ${100 - c.percent(f.filterMax)}%\"></div>\n    <div class=\"${cssClass('histogram-min')}\" data-value=\"${c.format(f.filterMin)}\" style=\"left: ${c.percent(f.filterMin)}%\" title=\"min filter, drag or shift click to change\"></div>\n    <div class=\"${cssClass('histogram-max')}\" data-value=\"${c.format(f.filterMax)}\" style=\"right: ${100 - c.percent(f.filterMax)}%\" title=\"max filter, drag or shift click to change\"></div>\n    ${filterMissingNumberMarkup(f.filterMissing, 0)}\n  `;\n}\n\n\nexport function initFilter<T>(node: HTMLElement, context: IFilterContext<T>) {\n  const min = <HTMLElement>node.getElementsByClassName(cssClass('histogram-min'))[0];\n  const max = <HTMLElement>node.getElementsByClassName(cssClass('histogram-max'))[0];\n  const minHint = <HTMLElement>node.getElementsByClassName(cssClass('histogram-min-hint'))[0];\n  const maxHint = <HTMLElement>node.getElementsByClassName(cssClass('histogram-max-hint'))[0];\n  const filterMissing = <HTMLInputElement>node.getElementsByTagName('input')[0];\n\n  const setFilter = () => {\n    const minValue = context.unpercent(parseFloat(min.style.left!));\n    const maxValue = context.unpercent(100 - parseFloat(max.style.right!));\n    context.setFilter(filterMissing.checked, minValue, maxValue);\n  };\n\n  min.onclick = (evt) => {\n    if (!evt.shiftKey && !evt.ctrlKey) {\n      return;\n    }\n    evt.preventDefault();\n    evt.stopPropagation();\n\n    const value = context.unpercent(parseFloat(min.style.left!));\n\n    context.edit(value, min, 'min').then((newValue) => {\n      minHint.style.width = `${context.percent(newValue)}%`;\n      min.dataset.value = context.format(newValue);\n      min.style.left = `${context.percent(newValue)}%`;\n      min.classList.toggle(cssClass('swap-hint'), context.percent(newValue) > 15);\n      setFilter();\n    });\n  };\n\n  max.onclick = (evt) => {\n    if (!evt.shiftKey && !evt.ctrlKey) {\n      return;\n    }\n    evt.preventDefault();\n    evt.stopPropagation();\n\n    const value = context.unpercent(100 - parseFloat(max.style.right!));\n\n    context.edit(value, max, 'max').then((newValue) => {\n      maxHint.style.width = `${100 - context.percent(newValue)}%`;\n      max.dataset.value = context.format(newValue);\n      max.style.right = `${100 - context.percent(newValue)}%`;\n      min.classList.toggle(cssClass('swap-hint'), context.percent(newValue) < 85);\n      setFilter();\n    });\n  };\n\n  filterMissing.onchange = () => setFilter();\n\n  const options: Partial<IDragHandleOptions> = {\n    minDelta: 0,\n    filter: (evt) => evt.button === 0 && !evt.shiftKey && !evt.ctrlKey,\n    onStart: (handle) => handle.classList.add(cssClass('hist-dragging')),\n    onDrag: (handle, x) => {\n      const total = node.clientWidth;\n      const px = Math.max(0, Math.min(x, total));\n      const percent = Math.round(100 * px / total);\n      (<HTMLElement>handle).dataset.value = context.format(context.unpercent(percent));\n\n      if ((<HTMLElement>handle).classList.contains(cssClass('histogram-min'))) {\n        handle.style.left = `${percent}%`;\n        handle.classList.toggle(cssClass('swap-hint'), percent > 15);\n        minHint.style.width = `${percent}%`;\n        return;\n      }\n      handle.style.right = `${100 - percent}%`;\n      handle.classList.toggle(cssClass('swap-hint'), percent < 85);\n      maxHint.style.width = `${100 - percent}%`;\n    },\n    onEnd: (handle) => {\n      handle.classList.remove(cssClass('hist-dragging'));\n      setFilter();\n    }\n  };\n  dragHandle(min, options);\n  dragHandle(max, options);\n\n  return (missing: number, f: IFilterInfo<T>) => {\n    minHint.style.width = `${context.percent(f.filterMin)}%`;\n    maxHint.style.width = `${100 - context.percent(f.filterMax)}%`;\n    min.dataset.value = context.format(f.filterMin);\n    max.dataset.value = context.format(f.filterMax);\n    min.style.left = `${context.percent(f.filterMin)}%`;\n    max.style.right = `${100 - context.percent(f.filterMax)}%`;\n    filterMissing.checked = f.filterMissing;\n    updateFilterMissingNumberMarkup(<HTMLElement>filterMissing.parentElement, missing);\n  };\n}\n","import {normalizedStatsBuilder, IStatistics, round, getNumberOfBins} from '../internal';\nimport {Column, IDataRow, IOrderedGroup, INumberColumn, INumbersColumn, isNumberColumn, isNumbersColumn, IMapAbleColumn, isMapAbleColumn} from '../model';\nimport InputNumberDialog from '../ui/dialogs/InputNumberDialog';\nimport {colorOf} from './impose';\nimport {IRenderContext, ERenderMode, ICellRendererFactory, IImposer} from './interfaces';\nimport {renderMissingDOM} from './missing';\nimport {cssClass} from '../styles';\nimport {histogramUpdate, histogramTemplate, IHistogramLike, mappingHintTemplate, mappingHintUpdate, IFilterInfo, filteredHistTemplate, IFilterContext, initFilter} from './histogram';\n\n/** @internal */\nexport default class HistogramCellRenderer implements ICellRendererFactory {\n  readonly title = 'Histogram';\n\n  canRender(col: Column, mode: ERenderMode) {\n    return (isNumberColumn(col) && mode !== ERenderMode.CELL) || (isNumbersColumn(col) && mode === ERenderMode.CELL);\n  }\n\n  create(col: INumbersColumn, _context: IRenderContext, imposer?: IImposer) {\n    const {template, render, guessedBins} = getHistDOMRenderer(col, imposer);\n    return {\n      template: `${template}</div>`,\n      update: (n: HTMLElement, row: IDataRow) => {\n        if (renderMissingDOM(n, col, row)) {\n          return;\n        }\n        const b = normalizedStatsBuilder(guessedBins);\n        for (const n of col.getNumbers(row)) {\n          b.push(n);\n        }\n        const hist = b.build();\n        render(n, hist);\n      }\n    };\n  }\n\n  createGroup(col: INumberColumn, context: IRenderContext, imposer?: IImposer) {\n    const {template, render} = getHistDOMRenderer(col, imposer);\n    return {\n      template: `${template}</div>`,\n      update: (n: HTMLElement, group: IOrderedGroup) => {\n        return context.tasks.groupNumberStats(col, group).then((r) => {\n          if (typeof r === 'symbol') {\n            return;\n          }\n          const {summary, group} = r;\n\n          render(n, group, summary);\n        });\n      }\n    };\n  }\n\n  createSummary(col: INumberColumn, context: IRenderContext, interactive: boolean, imposer?: IImposer) {\n    const r = getHistDOMRenderer(col, imposer);\n\n    const staticHist = !interactive || !isMapAbleColumn(col);\n    return staticHist ? staticSummary(col, context, r.template, r.render) : interactiveSummary(<IMapAbleColumn>col, context, r.template, r.render);\n  }\n}\n\n\nfunction staticSummary(col: INumberColumn, context: IRenderContext, template: string, render: (n: HTMLElement, stats: IStatistics, unfiltered?: IStatistics) => void) {\n  if (isMapAbleColumn(col)) {\n    template += mappingHintTemplate(col.getRange());\n  }\n  return {\n    template: `${template}</div>`,\n    update: (node: HTMLElement) => {\n      if (isMapAbleColumn(col)) {\n        mappingHintUpdate(node, col.getRange());\n      }\n\n      return context.tasks.summaryNumberStats(col).then((r) => {\n        if (typeof r === 'symbol') {\n          return;\n        }\n        const {summary} = r;\n\n        node.classList.toggle(cssClass('missing'), !summary);\n        if (!summary) {\n          return;\n        }\n        render(node, summary);\n      });\n    }\n  };\n}\n\nfunction interactiveSummary(col: IMapAbleColumn, context: IRenderContext, template: string, render: (n: HTMLElement, stats: IStatistics, unfiltered?: IStatistics) => void) {\n  const fContext = createFilterContext(col, context);\n  template += filteredHistTemplate(fContext, createFilterInfo(col));\n\n  let updateFilter: (missing: number, f: IFilterInfo<number>) => void;\n\n  return {\n    template: `${template}</div>`,\n    update: (node: HTMLElement) => {\n      if (!updateFilter) {\n        updateFilter = initFilter(node, fContext);\n      }\n      return context.tasks.summaryNumberStats(col).then((r) => {\n        if (typeof r === 'symbol') {\n          return;\n        }\n        const {summary, data} = r;\n\n        updateFilter(data ? data.missing : (summary ? summary.missing : 0), createFilterInfo(col));\n\n        node.classList.add(cssClass('histogram-i'));\n        node.classList.toggle(cssClass('missing'), !summary);\n        if (!summary) {\n          return;\n        }\n        render(node, summary, data);\n      });\n    }\n  };\n}\n\n/** @internal */\nexport function getHistDOMRenderer(col: INumberColumn, imposer?: IImposer) {\n  const ranking = col.findMyRanker();\n  const guessedBins = ranking ? getNumberOfBins(ranking.getOrderLength()) : 10;\n  const formatter = col.getNumberFormat();\n\n  const render = (n: HTMLElement, stats: IHistogramLike<number>, unfiltered?: IHistogramLike<number>) => {\n    return histogramUpdate(n, stats, unfiltered || null, formatter, (bin) => colorOf(col, null, imposer, (bin.x1 + bin.x0) / 2)!);\n  };\n  return {\n    template: histogramTemplate(guessedBins),\n    render,\n    guessedBins\n  };\n}\n\nfunction createFilterInfo(col: IMapAbleColumn): IFilterInfo<number> {\n  const filter = col.getFilter();\n  const domain = col.getMapping().domain;\n  const filterMin = isFinite(filter.min) ? filter.min : domain[0];\n  const filterMax = isFinite(filter.max) ? filter.max : domain[1];\n  return {\n    filterMissing: filter.filterMissing,\n    filterMin,\n    filterMax\n  };\n}\n\nfunction createFilterContext(col: IMapAbleColumn, context: IRenderContext): IFilterContext<number> {\n  const domain = col.getMapping().domain;\n  const percent = (v: number) => Math.round(100 * (v - domain[0]) / (domain[1] - domain[0]));\n  const unpercent = (v: number) => ((v / 100) * (domain[1] - domain[0]) + domain[0]);\n  return {\n    percent,\n    unpercent,\n    domain: <[number, number]>domain,\n    format: (v) => round(v, 2).toString(),\n    setFilter: (filterMissing, minValue, maxValue) => col.setFilter({\n      filterMissing,\n      min: Math.abs(minValue - domain[0]) < 0.001 ? NaN : minValue,\n      max: Math.abs(maxValue - domain[1]) < 0.001 ? NaN : maxValue\n    }),\n    edit: (value, attachment) => {\n      return new Promise((resolve) => {\n        const dialogCtx = {\n          attachment,\n          manager: context.dialogManager,\n          level: 1,\n          idPrefix: context.idPrefix\n        };\n        const dialog = new InputNumberDialog(dialogCtx, resolve, {\n            value, min: domain[0], max: domain[1]\n          });\n        dialog.open();\n      });\n    }\n  };\n}\n","import {Column, IDataRow, LinkColumn} from '../model';\nimport {ERenderMode, ICellRendererFactory} from './interfaces';\nimport {renderMissingDOM} from './missing';\nimport {noRenderer} from './utils';\nimport {abortAble} from 'lineupengine';\n\nfunction loadImage(src: string) {\n  return new Promise<HTMLImageElement>((resolve) => {\n    const image = new Image();\n    image.onload = () => resolve(image);\n    image.src = src;\n  });\n}\n\n/** @internal */\nexport default class ImageCellRenderer implements ICellRendererFactory {\n  readonly title = 'Image';\n\n  canRender(col: Column, mode: ERenderMode) {\n    return col instanceof LinkColumn && mode === ERenderMode.CELL;\n  }\n\n  create(col: LinkColumn) {\n    return {\n      template: `<div></div>`,\n      update: (n: HTMLElement, d: IDataRow) => {\n        const missing = renderMissingDOM(n, col, d);\n        n.style.backgroundImage = null;\n        if (missing) {\n          n.title = '';\n          return;\n        }\n        const v = col.getLink(d);\n        n.title = v ? v.alt : '';\n        if (!v) {\n          return;\n        }\n        return abortAble(loadImage(v.href)).then((image) => {\n          if (typeof image === 'symbol') {\n            return;\n          }\n          n.style.backgroundImage = missing || !v ? null : `url('${image.src}')`;\n        });\n      }\n    };\n  }\n\n  createGroup() {\n    return noRenderer;\n  }\n\n  createSummary() {\n    return noRenderer;\n  }\n}\n","import {ISequence} from '../internal';\nimport {Column, IDataRow, IOrderedGroup} from '../model';\nimport {ERenderMode, ICellRenderer, ICellRendererFactory, IGroupCellRenderer, IImposer, IRenderContext} from './interfaces';\nimport {noRenderer} from './utils';\n\n/**\n * helper class that renders a group renderer as a selected (e.g. median) single item\n * @internal\n */\nexport abstract class AAggregatedGroupRenderer<T extends Column> implements ICellRendererFactory {\n  abstract readonly title: string;\n\n  abstract canRender(col: Column, mode: ERenderMode): boolean;\n\n  abstract create(col: T, context: IRenderContext, imposer?: IImposer): ICellRenderer;\n\n  protected abstract aggregatedIndex(rows: ISequence<IDataRow>, col: T): {row: IDataRow, index: number};\n\n  createGroup(col: T, context: IRenderContext, imposer?: IImposer): IGroupCellRenderer {\n    const single = this.create(col, context, imposer);\n    return {\n      template: single.template,\n      update: (node: HTMLElement, group: IOrderedGroup) => {\n        return context.tasks.groupRows(col, group, 'aagreated', (rows) => this.aggregatedIndex(rows, col)).then((data) => {\n          if (typeof data !== 'symbol') {\n            single.update(node, data.row, data.index, group);\n          }\n        });\n      }\n    };\n  }\n\n  createSummary() {\n    return noRenderer;\n  }\n}\n\n/**\n * @internal\n */\nexport default AAggregatedGroupRenderer;\n","import {ISequence, round} from '../internal';\nimport {Column, IDataRow, INumberColumn, isNumberColumn, IMultiLevelColumn, isMultiLevelColumn, IOrderedGroup} from '../model';\nimport {medianIndex} from '../model/internalNumber';\nimport {COLUMN_PADDING} from '../styles';\nimport {AAggregatedGroupRenderer} from './AAggregatedGroupRenderer';\nimport {IRenderContext, ERenderMode, ICellRendererFactory, IImposer, IRenderCallback} from './interfaces';\nimport {renderMissingCanvas, renderMissingDOM} from './missing';\nimport {matchColumns, multiLevelGridCSSClass} from './utils';\nimport {cssClass} from '../styles';\nimport {IAbortAblePromise, abortAbleAll} from 'lineupengine';\n\n/** @internal */\nexport function createData(parent: {children: Column[]} & Column, context: IRenderContext, stacked: boolean, mode: ERenderMode, imposer?: IImposer) {\n  const padding = COLUMN_PADDING;\n  let offset = 0;\n  const cols = parent.children.map((column) => {\n    const shift = offset;\n    const width = column.getWidth();\n    offset += width;\n    offset += (!stacked ? padding : 0);\n\n    const renderer = mode === ERenderMode.CELL ? context.renderer(column, imposer) : null;\n    const groupRenderer = mode === ERenderMode.GROUP ? context.groupRenderer(column, imposer) : null;\n    const summaryRenderer = mode === ERenderMode.GROUP ? context.summaryRenderer(column, false, imposer) : null;\n    let template: string = '';\n    let rendererId: string = '';\n    switch (mode) {\n      case ERenderMode.CELL:\n        template = renderer!.template;\n        rendererId = column.getRenderer();\n        break;\n      case ERenderMode.GROUP:\n        template = groupRenderer!.template;\n        rendererId = column.getGroupRenderer();\n        break;\n      case ERenderMode.SUMMARY:\n        template = summaryRenderer!.template;\n        rendererId = column.getSummaryRenderer();\n        break;\n    }\n    // inject data attributes\n    template = template.replace(/^<([^ >]+)([ >])/, `<$1 data-column-id=\"${column.id}\" data-renderer=\"${rendererId}\"$2`);\n    // inject classes\n    if (/^<([^>]+) class=\"([ >]*)/.test(template)) {\n      // has class attribute\n      template = template.replace(/^<([^>]+) class=\"([ >]*)/, `<$1 class=\"${cssClass(`renderer-${rendererId}`)} $2`);\n    } else {\n      // inject as the others\n      template = template.replace(/^<([^ >]+)([ >])/, `<$1 class=\"${cssClass(`renderer-${rendererId}`)}\"$2`);\n    }\n    return {\n      column,\n      shift,\n      width,\n      template,\n      rendererId,\n      renderer,\n      groupRenderer,\n      summaryRenderer\n    };\n  });\n  return {cols, stacked, padding};\n}\n\n/** @internal */\nexport default class MultiLevelCellRenderer extends AAggregatedGroupRenderer<IMultiLevelColumn & Column> implements ICellRendererFactory {\n  readonly title: string;\n\n  constructor(private readonly stacked: boolean = true) {\n    super();\n    this.title = this.stacked ? 'Stacked Bar' : 'Nested';\n  }\n\n  canRender(col: Column, mode: ERenderMode) {\n    return isMultiLevelColumn(col) && mode !== ERenderMode.SUMMARY;\n  }\n\n  create(col: IMultiLevelColumn & Column, context: IRenderContext, imposer?: IImposer) {\n    const {cols, stacked} = createData(col, context, this.stacked, ERenderMode.CELL, imposer);\n    const width = context.colWidth(col);\n    return {\n      template: `<div class='${multiLevelGridCSSClass(context.idPrefix, col)} ${!stacked ? cssClass('grid-space') : ''}'>${cols.map((d) => d.template).join('')}</div>`,\n      update: (n: HTMLDivElement, d: IDataRow, i: number, group: IOrderedGroup) => {\n        if (renderMissingDOM(n, col, d)) {\n          return null;\n        }\n        matchColumns(n, cols, context);\n\n        const toWait: IAbortAblePromise<void>[] = [];\n        const children = <HTMLElement[]>Array.from(n.children);\n        const total = col.getWidth();\n        let missingWeight = 0;\n        cols.forEach((col, ci) => {\n          const weight = col.column.getWidth() / total;\n          const cnode = children[ci];\n          cnode.classList.add(cssClass(this.stacked ? 'stack-sub' : 'nested-sub'), cssClass('detail'));\n          cnode.dataset.group = 'd';\n          cnode.style.transform = stacked ? `translate(-${round((missingWeight / weight) * 100, 4)}%,0)` : null;\n          (<any>cnode.style).gridColumnStart = (ci + 1).toString();\n          const r = col.renderer!.update(cnode, d, i, group);\n          if (stacked) {\n            missingWeight += (1 - (<INumberColumn>col.column).getNumber(d)) * weight;\n          }\n          if (r) {\n            toWait.push(r);\n          }\n        });\n\n        if (toWait.length > 0) {\n          return <IAbortAblePromise<void>>abortAbleAll(toWait);\n        }\n        return null;\n      },\n      render: (ctx: CanvasRenderingContext2D, d: IDataRow, i: number, group: IOrderedGroup) => {\n        if (renderMissingCanvas(ctx, col, d, width)) {\n          return null;\n        }\n        const toWait: {shift: number, r: IAbortAblePromise<IRenderCallback>}[] = [];\n        let stackShift = 0;\n        for (const col of cols) {\n          const cr = col.renderer!;\n          if (cr.render) {\n            const shift = col.shift - stackShift;\n            ctx.translate(shift, 0);\n            const r = cr.render(ctx, d, i, group);\n            if (typeof r !== 'boolean' && r) {\n              toWait.push({shift, r});\n            }\n            ctx.translate(-shift, 0);\n          }\n          if (stacked) {\n            stackShift += col.width * (1 - (<INumberColumn>col.column).getNumber(d));\n          }\n        }\n\n        if (toWait.length === 0) {\n          return null;\n        }\n\n        return abortAbleAll(toWait.map((d) => d.r)).then((callbacks) => {\n          return (ctx: CanvasRenderingContext2D) => {\n            if (typeof callbacks === 'symbol') {\n              return;\n            }\n            for (let i = 0; i < callbacks.length; ++i) {\n              const callback = callbacks[i];\n              if (typeof callback !== 'function') {\n                continue;\n              }\n              const shift = toWait[i].shift;\n              ctx.translate(shift, 0);\n              callback(ctx);\n              ctx.translate(-shift, 0);\n            }\n          };\n        });\n      }\n    };\n  }\n\n\n  createGroup(col: IMultiLevelColumn & Column, context: IRenderContext, imposer?: IImposer) {\n    if (this.stacked && isNumberColumn(col)) {\n      return super.createGroup(col, context, imposer);\n    }\n\n    const {cols} = createData(col, context, false, ERenderMode.GROUP, imposer);\n    return {\n      template: `<div class='${multiLevelGridCSSClass(context.idPrefix, col)} ${cssClass('grid-space')}'>${cols.map((d) => d.template).join('')}</div>`,\n      update: (n: HTMLElement, group: IOrderedGroup) => {\n        matchColumns(n, cols, context);\n\n        const toWait: IAbortAblePromise<void>[] = [];\n        const children = <HTMLElement[]>Array.from(n.children);\n        cols.forEach((col, ci) => {\n          const cnode = children[ci];\n          cnode.classList.add(cssClass(this.stacked ? 'stack-sub' : 'nested-sub'), cssClass('group'));\n          cnode.dataset.group = 'g';\n          (<any>cnode.style).gridColumnStart = (ci + 1).toString();\n          const r = col.groupRenderer!.update(cnode, group);\n          if (r) {\n            toWait.push(r);\n          }\n        });\n\n        if (toWait.length > 0) {\n          return <IAbortAblePromise<void>>abortAbleAll(toWait);\n        }\n        return null;\n      }\n    };\n  }\n\n  protected aggregatedIndex(rows: ISequence<IDataRow>, col: IMultiLevelColumn & Column) {\n    console.assert(isNumberColumn(col));\n    return medianIndex(rows, (<INumberColumn><any>col));\n  }\n}\n","import {INumberBin, IStatistics} from '../internal';\nimport {Column, CompositeNumberColumn, IDataRow, IOrderedGroup, INumberColumn} from '../model';\nimport {CANVAS_HEIGHT, cssClass} from '../styles';\nimport {getHistDOMRenderer} from './HistogramCellRenderer';\nimport {IRenderContext, ERenderMode, ICellRendererFactory} from './interfaces';\nimport {renderMissingCanvas, renderMissingDOM} from './missing';\nimport {createData} from './MultiLevelCellRenderer';\nimport {colorOf, matchColumns, forEachChild} from './utils';\nimport {tasksAll} from '../provider';\nimport {IHistogramLike} from './histogram';\n\n\n/** @internal */\nexport default class InterleavingCellRenderer implements ICellRendererFactory {\n  readonly title = 'Interleaved';\n\n  canRender(col: Column) {\n    return col instanceof CompositeNumberColumn;\n  }\n\n  create(col: CompositeNumberColumn, context: IRenderContext) {\n    const {cols} = createData(col, context, false, ERenderMode.CELL);\n    const width = context.colWidth(col);\n    return {\n      template: `<div>${cols.map((r) => r.template).join('')}</div>`,\n      update: (n: HTMLDivElement, d: IDataRow, i: number, group: IOrderedGroup) => {\n        const missing = renderMissingDOM(n, col, d);\n        if (missing) {\n          return;\n        }\n        matchColumns(n, cols, context);\n        forEachChild(n, (ni: HTMLElement, j) => {\n          cols[j].renderer!.update(ni, d, i, group);\n        });\n      },\n      render: (ctx: CanvasRenderingContext2D, d: IDataRow, _i: number, group: IOrderedGroup) => {\n        if (renderMissingCanvas(ctx, col, d, width)) {\n          return;\n        }\n\n        ctx.save();\n        ctx.scale(1, 1 / cols.length); // scale since internal use the height, too\n        cols.forEach((r, i) => {\n          const rr = r.renderer!;\n          if (rr.render) {\n            rr.render(ctx, d, i, group);\n          }\n          ctx.translate(0, CANVAS_HEIGHT);\n        });\n        ctx.restore();\n      }\n    };\n  }\n\n  createGroup(col: CompositeNumberColumn, context: IRenderContext) {\n    const {cols} = createData(col, context, false, ERenderMode.GROUP);\n    return {\n      template: `<div>${cols.map((r) => r.template).join('')}</div>`,\n      update: (n: HTMLElement, group: IOrderedGroup) => {\n        matchColumns(n, cols, context);\n        forEachChild(n, (ni: HTMLElement, j) => {\n          cols[j].groupRenderer!.update(ni, group);\n        });\n      }\n    };\n  }\n\n  createSummary(col: CompositeNumberColumn, context: IRenderContext, _interactive: boolean) {\n    const cols = col.children;\n    let acc = 0;\n    const {template, render} = getHistDOMRenderer(col, {\n      color: () => colorOf(cols[(acc++) % cols.length])\n    });\n    return {\n      template,\n      update: (n: HTMLElement) => {\n        const tasks = cols.map((col) => context.tasks.summaryNumberStats(<INumberColumn>col));\n\n        return tasksAll(tasks).then((vs) => {\n          if (typeof vs === 'symbol') {\n            return;\n          }\n          const summaries = vs.map((d) => d.summary);\n          if (!summaries.some(Boolean)) {\n            n.classList.add(cssClass('missing'));\n            return;\n          }\n          n.classList.remove(cssClass('missing'));\n          const grouped = groupedHist(summaries)!;\n          render(n, grouped);\n        });\n      }\n    };\n  }\n}\n\nconst dummyBin: INumberBin = {\n  count: 0,\n  x0: 0,\n  x1: 0\n};\n\nfunction groupedHist(stats: (IStatistics | null)[]): IHistogramLike<number> | null {\n  const sample = stats.find(Boolean)!;\n  if (!sample) {\n    return null;\n  }\n\n  const bins = sample.hist.length;\n  // assert all have the same bin size\n  const hist = <INumberBin[]>[];\n  let maxBin = 0;\n  for (let i = 0; i < bins; ++i) {\n    stats.forEach((s) => {\n      const bin = s ? s.hist[i] : null;\n      if (!bin) {\n        hist.push(dummyBin);\n        return;\n      }\n      if (bin.count > maxBin) {\n        maxBin = bin.count;\n      }\n      hist.push(bin);\n    });\n  }\n  return {\n    maxBin,\n    hist\n  };\n}\n","import {LinkColumn, Column, IDataRow, IOrderedGroup} from '../model';\nimport {IRenderContext, ERenderMode, ICellRendererFactory} from './interfaces';\nimport {renderMissingDOM} from './missing';\nimport {noRenderer, setText} from './utils';\nimport {cssClass} from '../styles';\nimport {ISequence} from '../internal';\n\n/** @internal */\nexport default class LinkCellRenderer implements ICellRendererFactory {\n  readonly title = 'Link';\n\n  canRender(col: Column, mode: ERenderMode) {\n    return col instanceof LinkColumn && mode !== ERenderMode.SUMMARY;\n  }\n\n  create(col: LinkColumn) {\n    const align = col.alignment || 'left';\n    return {\n      template: `<a${align !== 'left' ? ` class=\"${cssClass(align)}\"` : ''} target=\"_blank\" rel=\"noopener\" href=\"\"></a>`,\n      update: (n: HTMLAnchorElement, d: IDataRow) => {\n        if (renderMissingDOM(n, col, d)) {\n          return;\n        }\n        const v = col.getLink(d);\n        n.href = v ? v.href : '';\n        if (col.escape) {\n          setText(n, v ? v.alt : '');\n        } else {\n          n.innerHTML = v ? v.alt : '';\n        }\n      }\n    };\n  }\n\n  private static exampleText(col: LinkColumn, rows: ISequence<IDataRow>) {\n    const numExampleRows = 5;\n    const examples = <string[]>[];\n    rows.every((row) => {\n      const v = col.getLink(row);\n      if (!v) {\n        return true;\n      }\n      examples.push(`<a target=\"_blank\" rel=\"noopener\"  href=\"${v.href}\">${v.alt}</a>`);\n      return examples.length < numExampleRows;\n    });\n    return `${examples.join(', ')}${examples.length < rows.length ? ', &hellip;' : ''}`;\n  }\n\n  createGroup(col: LinkColumn, context: IRenderContext) {\n    return {\n      template: `<div> </div>`,\n      update: (n: HTMLDivElement, group: IOrderedGroup) => {\n        return context.tasks.groupExampleRows(col, group, 'link', (rows) => LinkCellRenderer.exampleText(col, rows)).then((text) => {\n          if (typeof text !== 'symbol') {\n            n.innerHTML = text;\n          }\n        });\n      }\n    };\n  }\n\n  createSummary() {\n    return noRenderer;\n  }\n}\n","import {IArrayColumn, IKeyValue, IMapColumn, isArrayColumn, isMapColumn, Column, IDataRow, isMissingValue, IOrderedGroup} from '../model';\nimport {IRenderContext, ICellRendererFactory} from './interfaces';\nimport {renderMissingDOM} from './missing';\nimport {forEach, noop} from './utils';\nimport {cssClass} from '../styles';\nimport {ISequence} from '../internal';\n\n/** @internal */\nexport default class TableCellRenderer implements ICellRendererFactory {\n  readonly title = 'Table';\n\n  canRender(col: Column) {\n    return isMapColumn(col);\n  }\n\n  create(col: IMapColumn<any>) {\n    if (isArrayColumn(col) && col.dataLength) {\n      // fixed length optimized rendering\n      return this.createFixed(col);\n    }\n    return {\n      template: `<div class=\"${cssClass('rtable')}\"></div>`,\n      update: (node: HTMLElement, d: IDataRow) => {\n        if (renderMissingDOM(node, col, d)) {\n          return;\n        }\n        node.innerHTML = col.getMapLabel(d).map(({key, value}) => `<div class=\"${cssClass('table-cell')}\">${key}</div><div class=\"${cssClass('table-cell')}\">${value}</div>`).join('');\n      }\n    };\n  }\n\n  private static template(col: IArrayColumn<any>) {\n    const labels = col.labels;\n    return `<div>${labels.map((l) => `<div class=\"${cssClass('table-cell')}\">${l}</div><div  class=\"${cssClass('table-cell')}\" data-v></div>`).join('\\n')}</div>`;\n  }\n\n  private createFixed(col: IArrayColumn<any>) {\n    return {\n      template: TableCellRenderer.template(col),\n      update: (node: HTMLElement, d: IDataRow) => {\n        if (renderMissingDOM(node, col, d)) {\n          return;\n        }\n        const value = col.getLabels(d);\n        forEach(node, '[data-v]', (n: HTMLElement, i) => {\n          n.innerHTML = value[i];\n        });\n      }\n    };\n  }\n\n  private static example(arr: IKeyValue<string>[]) {\n    const numExampleRows = 5;\n    return `${arr.slice(0, numExampleRows).map((d) => d.value).join(', ')}${numExampleRows < arr.length ? ', &hellip;' : ''}`;\n  }\n\n  createGroup(col: IMapColumn<any>, context: IRenderContext) {\n    if (isArrayColumn(col) && col.dataLength) {\n      // fixed length optimized rendering\n      return this.createFixedGroup(col, context);\n    }\n    return {\n      template: `<div class=\"${cssClass('rtable')}\"></div>`,\n      update: (node: HTMLElement, group: IOrderedGroup) => {\n        return context.tasks.groupRows(col, group, 'table', (rows) => groupByKey(rows.map((d) => col.getMapLabel(d)))).then((entries) => {\n          if (typeof entries === 'symbol') {\n            return;\n          }\n          node.innerHTML = entries.map(({key, values}) => `<div class=\"${cssClass('table-cell')}\">${key}</div><div class=\"${cssClass('table-cell')}\">${TableCellRenderer.example(values)}</div>`).join('');\n        });\n      }\n    };\n  }\n\n  private createFixedGroup(col: IArrayColumn<any>, context: IRenderContext) {\n    return {\n      template: TableCellRenderer.template(col),\n      update: (node: HTMLElement, group: IOrderedGroup) => {\n        return context.tasks.groupExampleRows(col, group, 'table', (rows) => {\n          const values: string[][] = col.labels.map(() => []);\n          rows.forEach((row) => {\n            const labels = col.getLabels(row);\n            for (let i = 0; i < Math.min(values.length, labels.length); ++i) {\n              if (!isMissingValue(labels[i])) {\n                values[i].push(labels[i]);\n              }\n            }\n          });\n          return values;\n        }).then((values) => {\n          if (typeof values === 'symbol') {\n            return;\n          }\n          forEach(node, '[data-v]', (n: HTMLElement, i) => {\n            n.innerHTML = `${values[i].join(', ')}&hellip;`;\n          });\n        });\n      }\n    };\n  }\n\n  createSummary() {\n    return {\n      template: `<div class=\"${cssClass('rtable')}\"><div>Key</div><div>Value</div></div>`,\n      update: noop\n    };\n  }\n\n}\n\n/** @internal */\nexport function groupByKey<T extends {key: string}>(arr: ISequence<ISequence<T>>) {\n  const m = new Map<string, T[]>();\n  arr.forEach((a) => a.forEach((d) => {\n    if (!m.has(d.key)) {\n      m.set(d.key, [d]);\n    } else {\n      m.get(d.key)!.push(d);\n    }\n  }));\n  return Array.from(m).sort((a, b) => a[0].localeCompare(b[0])).map(([key, values]) => ({key, values}));\n}\n","import {IDataRow, LinkMapColumn, Column, ILink, IKeyValue, IOrderedGroup} from '../model';\nimport {IRenderContext, ERenderMode, ICellRendererFactory} from './interfaces';\nimport {renderMissingDOM} from './missing';\nimport {groupByKey} from './TableCellRenderer';\nimport {noRenderer, noop} from './utils';\nimport {cssClass} from '../styles';\n\n/** @internal */\nexport default class LinkMapCellRenderer implements ICellRendererFactory {\n  readonly title = 'Table with Links';\n\n  canRender(col: Column, mode: ERenderMode) {\n    return col instanceof LinkMapColumn && mode !== ERenderMode.SUMMARY;\n  }\n\n  create(col: LinkMapColumn) {\n    const align = col.alignment || 'left';\n    return {\n      template: `<div class=\"${cssClass('rtable')}\"></div>`,\n      update: (node: HTMLElement, d: IDataRow) => {\n        if (renderMissingDOM(node, col, d)) {\n          return;\n        }\n        node.innerHTML = col.getLinkMap(d).map(({key, value}) => `\n          <div class=\"${cssClass('table-cell')}\">${key}</div>\n          <div class=\"${cssClass('table-cell')} ${align !== 'left' ? cssClass(align) : ''}\">\n            <a href=\"${value.href}\" target=\"_blank\" rel=\"noopener\">${value.alt}</a>\n          </div>`).join('');\n      },\n      render: noop\n    };\n  }\n\n  private static example(arr: IKeyValue<ILink>[]) {\n    const numExampleRows = 5;\n    const examples = <string[]>[];\n    for (const row of arr) {\n      examples.push(`<a target=\"_blank\" rel=\"noopener\" href=\"${row.value.href}\">${row.value.alt}</a>`);\n      if (examples.length >= numExampleRows) {\n        break;\n      }\n    }\n    return `${examples.join(', ')}${examples.length < arr.length} ? ', &hellip;': ''}`;\n  }\n\n  createGroup(col: LinkMapColumn, context: IRenderContext) {\n    const align = col.alignment || 'left';\n    return {\n      template: `<div class=\"${cssClass('rtable')}\"></div>`,\n      update: (node: HTMLElement, group: IOrderedGroup) => {\n        return context.tasks.groupRows(col, group, 'linkmap', (rows) => groupByKey(rows.map((d) => col.getLinkMap(d)))).then((entries) => {\n          if (typeof entries !== 'symbol') {\n            node.innerHTML = entries.map(({key, values}) => `<div>${key}</div><div${align !== 'left' ? ` class=\"${cssClass(align)}\"` : ''}>${LinkMapCellRenderer.example(values)}</div>`).join('');\n          }\n        });\n      }\n    };\n  }\n\n  createSummary() {\n    return noRenderer;\n  }\n}\n","import {ICellRendererFactory} from './interfaces';\nimport {noop} from './utils';\n\n/** @internal */\nexport default class LoadingCellRenderer implements ICellRendererFactory {\n  readonly title = 'Loading';\n\n  canRender() {\n    return false; // just direct selection\n  }\n\n  create() {\n    return {\n      template: `<div>Loading &hellip;</div>`,\n      update: noop\n    };\n  }\n\n  createGroup() {\n    return this.create();\n  }\n\n  createSummary() {\n    return this.create();\n  }\n}\n","import {round} from '../internal';\nimport {Column, IMapColumn, IMapAbleColumn, isMapAbleColumn, isMapColumn, IDataRow, isNumberColumn, INumberColumn} from '../model';\nimport {colorOf} from './impose';\nimport {ICellRendererFactory, IImposer, IRenderContext, ERenderMode} from './interfaces';\nimport {renderMissingDOM} from './missing';\nimport {noRenderer} from './utils';\nimport {cssClass} from '../styles';\n\n/** @internal */\nexport default class MapBarCellRenderer implements ICellRendererFactory {\n  readonly title = 'Bar Table';\n\n  canRender(col: Column, mode: ERenderMode) {\n    return isMapColumn(col) && isNumberColumn(col) && (mode === ERenderMode.CELL || (mode === ERenderMode.SUMMARY && isMapAbleColumn(col)));\n  }\n\n  create(col: IMapColumn<number> & INumberColumn, _context: IRenderContext, imposer?: IImposer) {\n    const formatter = col.getNumberFormat();\n\n    return {\n      template: `<div class=\"${cssClass('rtable')}\"></div>`,\n      update: (node: HTMLElement, d: IDataRow) => {\n        if (renderMissingDOM(node, col, d)) {\n          return;\n        }\n        node.innerHTML = col.getMap(d).map(({key, value}) => {\n          if (isNaN(value)) {\n            return `<div class=\"${cssClass('table-cell')}\">${key}</div><div class=\"${cssClass('table-cell')} ${cssClass('missing')}\"></div>`;\n          }\n          const w = round(value * 100, 2);\n          return `<div class=\"${cssClass('table-cell')}\">${key}</div>\n            <div class=\"${cssClass('table-cell')}\" title=\"${formatter(value)}\">\n              <div style=\"width: ${w}%; background-color: ${colorOf(col, d, imposer)}\">\n                <span class=\"${cssClass('hover-only')}\">${value}</span>\n              </div>\n            </div>`;\n        }).join('');\n      }\n    };\n  }\n\n  createGroup() {\n    return noRenderer;\n  }\n\n  createSummary(col: IMapColumn<number> & IMapAbleColumn) {\n    return {\n      template: `<div class=\"${cssClass('rtable')}\"><div>Key</div><div><span></span><span></span>Value</div></div>`,\n      update: (node: HTMLElement) => {\n        const range = col.getRange();\n        const value = <HTMLElement>node.lastElementChild!;\n        value.firstElementChild!.textContent = range[0];\n        value.children[1]!.textContent = range[1];\n      }\n    };\n  }\n}\n","import {Column, RankColumn, IDataRow, IOrderedGroup} from '../model';\nimport {ICellRendererFactory} from './interfaces';\nimport {renderMissingDOM} from './missing';\nimport {noRenderer, setText} from './utils';\nimport {cssClass} from '../styles';\n\n/** @internal */\nexport default class RankCellRenderer implements ICellRendererFactory {\n  readonly title = 'Default';\n\n  canRender(col: Column) {\n    return col instanceof RankColumn;\n  }\n\n  create(col: Column) {\n    return {\n      template: `<div class=\"${cssClass('right')}\"> </div>`,\n      update: (n: HTMLDivElement, d: IDataRow) => {\n        renderMissingDOM(n, col, d);\n        setText(n, col.getLabel(d));\n      }\n    };\n  }\n\n  createGroup(col: Column) {\n    const ranking = col.findMyRanker()!;\n    return {\n      template: `<div><div></div><div></div></div>`,\n      update: (n: HTMLElement, group: IOrderedGroup) => {\n        const fromTSpan = <HTMLElement>n.firstElementChild!;\n        const toTSpan = <HTMLElement>n.lastElementChild!;\n        if (group.order.length === 0) {\n          fromTSpan.textContent = '';\n          toTSpan.textContent = '';\n          return;\n        }\n        fromTSpan.textContent = ranking.getRank(group.order[0]).toString();\n        toTSpan.textContent = ranking.getRank(group.order[group.order.length - 1]).toString();\n      }\n    };\n  }\n\n  createSummary() {\n    return noRenderer;\n  }\n}\n","import {Column, SelectionColumn, IDataRow, IOrderedGroup} from '../model';\nimport {IRenderContext, ICellRendererFactory} from './interfaces';\nimport {cssClass} from '../styles';\nimport {everyIndices} from '../model/internal';\nimport {rangeSelection} from '../provider/utils';\n\n/** @internal */\nexport default class SelectionRenderer implements ICellRendererFactory {\n  readonly title = 'Default';\n\n  canRender(col: Column) {\n    return col instanceof SelectionColumn;\n  }\n\n  create(col: SelectionColumn, ctx: IRenderContext) {\n    return {\n      template: `<div></div>`,\n      update: (n: HTMLElement, d: IDataRow, i: number) => {\n        n.onclick = function (event) {\n          event.preventDefault();\n          event.stopPropagation();\n          if (event.shiftKey) {\n            const ranking = col.findMyRanker()!.id;\n            if (rangeSelection(ctx.provider, ranking, d.i, i, event.ctrlKey)) {\n              return;\n            }\n          }\n\n          col.toggleValue(d);\n        };\n      }\n    };\n  }\n\n  createGroup(col: SelectionColumn, context: IRenderContext) {\n    return {\n      template: `<div></div>`,\n      update: (n: HTMLElement, group: IOrderedGroup) => {\n        let selected = 0;\n        let unselected = 0;\n        const total = group.order.length;\n        everyIndices(group.order, (i) => {\n          const s = context.provider.isSelected(i);\n          if (s) {\n            selected++;\n          } else {\n            unselected++;\n          }\n          if (selected * 2 > total || unselected * 2 > total) {\n            // more than half already, can abort already decided\n            return false;\n          }\n          return true;\n        });\n\n        n.classList.toggle(cssClass('group-selected'), selected * 2 > total);\n        n.onclick = function (event) {\n          event.preventDefault();\n          event.stopPropagation();\n          const value = n.classList.toggle(cssClass('group-selected'));\n          col.setValues(group.order, value);\n        };\n      }\n    };\n  }\n\n  createSummary(col: SelectionColumn, context: IRenderContext) {\n    const unchecked = cssClass('icon-unchecked');\n    const checked = cssClass('icon-checked');\n    return {\n      template: `<div title=\"(Un)Select All\" class=\"${unchecked}\"></div>`,\n      update: (node: HTMLElement) => {\n        node.onclick = (evt) => {\n          evt.stopPropagation();\n          const isunchecked = node.classList.contains(unchecked);\n          if (isunchecked) {\n            context.provider.selectAllOf(col.findMyRanker()!);\n            node.classList.remove(unchecked);\n            node.classList.add(checked);\n          } else {\n            context.provider.setSelection([]);\n            node.classList.remove(checked);\n            node.classList.add(unchecked);\n          }\n        };\n      }\n    };\n  }\n}\n","import {Column, ICategoricalLikeColumn, IDataRow, IOrderedGroup, ISetColumn, isSetColumn} from '../model';\nimport {CANVAS_HEIGHT, cssClass} from '../styles';\nimport {ICellRendererFactory, IRenderContext} from './interfaces';\nimport {renderMissingCanvas, renderMissingDOM} from './missing';\nimport {forEachChild, noop, wideEnoughCat} from './utils';\nimport {round} from '../internal';\n\n/** @internal */\nexport default class SetCellRenderer implements ICellRendererFactory {\n  readonly title = 'Matrix';\n\n  canRender(col: Column) {\n    return isSetColumn(col);\n  }\n\n  private static createDOMContext(col: ICategoricalLikeColumn) {\n    const categories = col.categories;\n    const mapping = col.getColorMapping();\n    let templateRows = '';\n    for (const cat of categories) {\n      templateRows += `<div class=\"${cssClass('heatmap-cell')}\" title=\"${cat.label}\" style=\"background-color: ${mapping.apply(cat)}\"></div>`;\n    }\n    return {\n      templateRow: templateRows,\n      render: (n: HTMLElement, value: (number | boolean)[]) => {\n        forEachChild(n, (d: HTMLElement, i) => {\n          const v = value[i];\n          d.style.opacity = typeof v === 'boolean' ? (v ? '1' : '0') : round(v, 2).toString();\n        });\n      }\n    };\n  }\n\n  create(col: ISetColumn, context: IRenderContext) {\n    const {templateRow, render} = SetCellRenderer.createDOMContext(col);\n    const width = context.colWidth(col);\n    const cellDimension = width / col.dataLength!;\n    const cats = col.categories;\n    const mapping = col.getColorMapping();\n\n    return {\n      template: `<div class=\"${cssClass('heatmap')}\">${templateRow}</div>`,\n      update: (n: HTMLElement, d: IDataRow) => {\n        if (renderMissingDOM(n, col, d)) {\n          return;\n        }\n        render(n, col.getValues(d));\n      },\n      render: (ctx: CanvasRenderingContext2D, d: IDataRow) => {\n        if (renderMissingCanvas(ctx, col, d, width)) {\n          return;\n        }\n        // Circle\n        const data = col.getValues(d);\n\n        ctx.save();\n        cats.forEach((d, j) => {\n          if (!data[j]) {\n            return;\n          }\n          const posx = (j * cellDimension);\n          ctx.fillStyle = mapping.apply(d);\n          ctx.fillRect(posx, 0, cellDimension, CANVAS_HEIGHT);\n        });\n\n        ctx.restore();\n      }\n    };\n  }\n\n  createGroup(col: ISetColumn, context: IRenderContext) {\n    const {templateRow, render} = SetCellRenderer.createDOMContext(col);\n    return {\n      template: `<div class=\"${cssClass('heatmap')}\">${templateRow}</div>`,\n      update: (n: HTMLElement, group: IOrderedGroup) => {\n        return context.tasks.groupCategoricalStats(col, group).then((r) => {\n          if (typeof r === 'symbol') {\n            return;\n          }\n          render(n, r.group.hist.map((d) => d.count / r.group.maxBin));\n        });\n      }\n    };\n  }\n\n  createSummary(col: ICategoricalLikeColumn) {\n    const categories = col.categories;\n    const mapping = col.getColorMapping();\n    let templateRows = `<div class=\"${cssClass('heatmap')}\">`;\n    const labels = wideEnoughCat(col);\n    for (const cat of categories) {\n      templateRows += `<div class=\"${cssClass('heatmap-cell')}\" title=\"${cat.label}\"${labels ? ` data-title=\"${cat.label}\"` : ''} style=\"background-color: ${mapping.apply(cat)}\"></div>`;\n    }\n    templateRows += '</div>';\n    return {\n      template: templateRows,\n      update: noop\n    };\n  }\n}\n","import {Column, INumbersColumn, NumbersColumn, isNumbersColumn, IDataRow, IOrderedGroup} from '../model';\nimport {matchRows} from './ANumbersCellRenderer';\nimport {IRenderContext, ERenderMode, ICellRendererFactory} from './interfaces';\nimport {renderMissingDOM} from './missing';\nimport {forEachChild, noRenderer} from './utils';\nimport {ISequence} from '../internal';\n\n/** @internal */\nexport function line(data: ISequence<number>) {\n  if (data.length === 0) {\n    return '';\n  }\n  let p = '';\n  let moveNext = true;\n\n  data.forEach((d, i) => {\n    if (isNaN(d)) {\n      moveNext = true;\n    } else if (moveNext) {\n      p += `M${i},${1 - d} `;\n      moveNext = false;\n    } else {\n      p += `L${i},${1 - d} `;\n    }\n  });\n  return p;\n}\n\n/** @internal */\nexport default class SparklineCellRenderer implements ICellRendererFactory {\n  readonly title = 'Sparkline';\n\n  canRender(col: Column, mode: ERenderMode) {\n    return isNumbersColumn(col) && mode !== ERenderMode.SUMMARY;\n  }\n\n  create(col: INumbersColumn) {\n    const dataLength = col.dataLength!;\n    const yPos = 1 - col.getMapping().apply(NumbersColumn.CENTER);\n    return {\n      template: `<svg viewBox=\"0 0 ${dataLength - 1} 1\" preserveAspectRatio=\"none meet\"><line x1=\"0\" x2=\"${dataLength - 1}\" y1=\"${yPos}\" y2=\"${yPos}\"></line><path></path></svg>`,\n      update: (n: HTMLElement, d: IDataRow) => {\n        if (renderMissingDOM(n, col, d)) {\n          return;\n        }\n        const data = col.getNumbers(d);\n        n.lastElementChild!.setAttribute('d', line(data));\n      }\n    };\n  }\n\n  createGroup(col: INumbersColumn, context: IRenderContext) {\n    const dataLength = col.dataLength!;\n    const yPos = 1 - col.getMapping().apply(NumbersColumn.CENTER);\n    return {\n      template: `<svg viewBox=\"0 0 ${dataLength} 1\" preserveAspectRatio=\"none meet\"><line x1=\"0\" x2=\"${dataLength - 1}\" y1=\"${yPos}\" y2=\"${yPos}\"></line><path></path></svg>`,\n      update: (n: HTMLElement, group: IOrderedGroup) => {\n        //overlapping ones\n        matchRows(n, group.order.length, `<path></path>`);\n        return context.tasks.groupRows(col, group, 'numbers', (r) => Array.from(r.map((d) => col.getNumbers(d)))).then((vs) => {\n          if (typeof vs === 'symbol') {\n            return;\n          }\n          forEachChild(n, ((row, i) => {\n            row.setAttribute('d', line(vs[i]));\n          }));\n        });\n      }\n    };\n  }\n\n  createSummary() {\n    return noRenderer;\n  }\n\n}\n","import {Column, IDataRow, IOrderedGroup, ISetColumn, isSetColumn} from '../model';\nimport {CANVAS_HEIGHT, cssClass, UPSET} from '../styles';\nimport {ICellRendererFactory, IRenderContext} from './interfaces';\nimport {renderMissingCanvas, renderMissingDOM} from './missing';\n\n/** @internal */\nexport default class UpSetCellRenderer implements ICellRendererFactory {\n  readonly title = 'UpSet';\n\n  canRender(col: Column) {\n    return isSetColumn(col);\n  }\n\n  private static calculateSetPath(setData: boolean[], cellDimension: number) {\n    const catindexes: number[] = [];\n    setData.forEach((d: boolean, i: number) => (d) ? catindexes.push(i) : -1);\n\n    const left = (catindexes[0] * cellDimension) + (cellDimension / 2);\n    const right = (catindexes[catindexes.length - 1] * cellDimension) + (cellDimension / 2);\n\n    return {left, right};\n  }\n\n  private static createDOMContext(col: ISetColumn) {\n    const categories = col.categories;\n    let templateRows = '';\n    for (const cat of categories) {\n      templateRows += `<div class=\"${cssClass('upset-dot')}\" title=\"${cat.label}\"></div>`;\n    }\n    return {\n      template: `<div><div class=\"${cssClass('upset-line')}\"></div>${templateRows}</div>`,\n      render: (n: HTMLElement, value: boolean[]) => {\n        Array.from(n.children).slice(1).forEach((d, i) => {\n          const v = value[i];\n          d.classList.toggle(cssClass('enabled'), v);\n        });\n\n        const line = <HTMLElement>n.firstElementChild;\n        const left = value.findIndex((d) => d);\n        const right = (value.length - 1) - value.reverse().findIndex((d) => d);\n\n        if (left < 0 || left === right) {\n          line.style.display = 'none';\n          return;\n        }\n        line.style.display = null;\n        line.style.left = `${Math.round(100 * (left + 0.5) / value.length)}%`;\n        line.style.width = `${Math.round(100 * (right - left) / value.length)}%`;\n      }\n    };\n  }\n\n  create(col: ISetColumn, context: IRenderContext) {\n    const {template, render} = UpSetCellRenderer.createDOMContext(col);\n    const width = context.colWidth(col);\n    const cellDimension = width / col.categories.length;\n\n    return {\n      template,\n      update: (n: HTMLElement, d: IDataRow) => {\n        if (renderMissingDOM(n, col, d)) {\n          return;\n        }\n        render(n, col.getValues(d));\n      },\n      render: (ctx: CanvasRenderingContext2D, d: IDataRow) => {\n        if (renderMissingCanvas(ctx, col, d, width)) {\n          return;\n        }\n        // Circle\n        const data = col.getValues(d);\n\n        const hasTrueValues = data.some((d) => d); //some values are true?\n\n        ctx.save();\n        ctx.fillStyle = UPSET.color;\n        ctx.strokeStyle = UPSET.color;\n        if (hasTrueValues) {\n          const {left, right} = UpSetCellRenderer.calculateSetPath(data, cellDimension);\n          ctx.beginPath();\n          ctx.moveTo(left, CANVAS_HEIGHT / 2);\n          ctx.lineTo(right, CANVAS_HEIGHT / 2);\n          ctx.stroke();\n        }\n\n        data.forEach((d, j) => {\n          const posx = (j * cellDimension);\n          ctx.beginPath();\n          ctx.globalAlpha = d ? 1 : UPSET.inactive;\n          ctx.fillRect(posx, 0, cellDimension, CANVAS_HEIGHT);\n          ctx.fill();\n        });\n\n        ctx.restore();\n      }\n    };\n  }\n\n  createGroup(col: ISetColumn, context: IRenderContext) {\n    const {template, render} = UpSetCellRenderer.createDOMContext(col);\n    return {\n      template,\n      update: (n: HTMLElement, group: IOrderedGroup) => {\n        return context.tasks.groupCategoricalStats(col, group).then((r) => {\n          if (typeof r === 'symbol') {\n            return;\n          }\n          render(n, r.group.hist.map((d) => d.count > 0));\n        });\n      }\n    };\n  }\n\n  createSummary(col: ISetColumn, context: IRenderContext) {\n    const {template, render} = UpSetCellRenderer.createDOMContext(col);\n    return {\n      template,\n      update: (n: HTMLElement) => {\n        return context.tasks.summaryCategoricalStats(col).then((r) => {\n          if (typeof r === 'symbol') {\n            return;\n          }\n          render(n, r.summary.hist.map((d) => d.count > 0));\n        });\n      }\n    };\n  }\n}\n","import {Column, NumbersColumn, IDataRow, INumbersColumn, isNumbersColumn} from '../model';\nimport {CANVAS_HEIGHT, cssClass} from '../styles';\nimport {ANumbersCellRenderer} from './ANumbersCellRenderer';\nimport {toHeatMapColor} from './BrightnessCellRenderer';\nimport {IRenderContext, ERenderMode, ICellRendererFactory, IImposer} from './interfaces';\nimport { forEachChild, noRenderer} from './utils';\n\n/** @internal */\nexport default class VerticalBarCellRenderer extends ANumbersCellRenderer implements ICellRendererFactory {\n  readonly title = 'Bar Chart';\n\n  canRender(col: Column, mode: ERenderMode) {\n    return isNumbersColumn(col) && Boolean(col.dataLength) && mode === ERenderMode.CELL;\n  }\n\n  private static compute(v: number, threshold: number, domain: number[]) {\n    if (v < threshold) {\n      //threshold to down\n      return {height: (threshold - v), bottom: (v - domain[0])};\n    }\n    //from top to down\n    return {height: (v - threshold), bottom: (threshold - domain[0])};\n  }\n\n  protected createContext(col: INumbersColumn, context: IRenderContext, imposer?: IImposer) {\n    const cellDimension = context.colWidth(col) / col.dataLength!;\n    const threshold = col.getMapping().apply(NumbersColumn.CENTER);\n    const range = 1;\n    let templateRows = '';\n    for (let i = 0; i < col.dataLength!; ++i) {\n      templateRows += `<div class=\"${cssClass('heatmap-cell')}\" style=\"background-color: white\" title=\"\"></div>`;\n    }\n    const formatter = col.getNumberFormat();\n\n    return {\n      clazz: cssClass('heatmap'),\n      templateRow: templateRows,\n      update: (row: HTMLElement, data: number[], raw: number[], item: IDataRow) => {\n        const zero = toHeatMapColor(0, item, col, imposer);\n        const one = toHeatMapColor(1, item, col, imposer);\n\n        forEachChild(row, (d: HTMLElement, i) => {\n          const v = data[i];\n          const {bottom, height} = VerticalBarCellRenderer.compute(v, threshold, [0, 1]);\n          d.title = formatter(raw[i]);\n          d.style.backgroundColor = v < threshold ? zero : one;\n          d.style.bottom = `${Math.round((100 * bottom) / range)}%`;\n          d.style.height = `${Math.round((100 * height) / range)}%`;\n        });\n      },\n      render: (ctx: CanvasRenderingContext2D, data: number[], item: IDataRow) => {\n        const zero = toHeatMapColor(0, item, col, imposer);\n        const one = toHeatMapColor(1, item, col, imposer);\n        const scale = CANVAS_HEIGHT / range;\n        data.forEach((v, j) => {\n          ctx.fillStyle = v < threshold ? zero : one;\n          const xpos = (j * cellDimension);\n          const {bottom, height} = VerticalBarCellRenderer.compute(v, threshold, [0, 1]);\n          ctx.fillRect(xpos, (range - height - bottom) * scale, cellDimension, height * scale);\n        });\n      }\n    };\n  }\n\n  createSummary() {\n    return noRenderer;\n  }\n}\n","import {Column, IDataRow, DateColumn, IOrderedGroup} from '../model';\nimport {IRenderContext, ICellRendererFactory, IGroupCellRenderer, ISummaryRenderer, ICellRenderer} from './interfaces';\nimport {renderMissingDOM} from './missing';\nimport {noop, noRenderer, setText, exampleText} from './utils';\nimport {chooseAggregatedDate} from '../model/internalDate';\n\n/** @internal */\nexport default class DateCellRenderer implements ICellRendererFactory {\n  title = 'Date';\n  groupTitle = 'Date';\n  summaryTitle = 'Date';\n\n  canRender(col: Column) {\n    return col instanceof DateColumn;\n  }\n\n  create(col: DateColumn): ICellRenderer {\n    return {\n      template: `<div> </div>`,\n      update: (n: HTMLDivElement, d: IDataRow) => {\n        renderMissingDOM(n, col, d);\n        setText(n, col.getLabel(d));\n      },\n      render: noop\n    };\n  }\n\n  createGroup(col: DateColumn, context: IRenderContext): IGroupCellRenderer {\n    return {\n      template: `<div> </div>`,\n      update: (n: HTMLDivElement, group: IOrderedGroup) => {\n        const isGrouped = col.isGroupedBy() >= 0;\n        if (isGrouped) {\n          return context.tasks.groupRows(col, group, 'date', (rows) => chooseAggregatedDate(rows, col.getDateGrouper(), col)).then((chosen) => {\n            if (typeof chosen !== 'symbol') {\n              setText(n, chosen.name);\n            }\n          });\n        }\n        return context.tasks.groupExampleRows(col, group, 'date', (sample) => exampleText(col, sample)).then((text) => {\n          if (typeof text !== 'symbol') {\n            setText(n, text);\n          }\n        });\n      }\n    };\n  }\n\n  createSummary(): ISummaryRenderer {\n    return noRenderer;\n  }\n}\n","import ADialog, {IDialogContext} from './ADialog';\nimport {timeFormat} from 'd3-time-format';\n\n/** @internal */\nexport interface IInputDateOptions {\n  value: Date | null;\n  label: string | null;\n}\n\n/** @internal */\nexport default class InputDateDialog extends ADialog {\n\n  private readonly ioptions: Readonly<IInputDateOptions> = {\n    value: null,\n    label: null\n  };\n\n  constructor(dialog: IDialogContext, private readonly callback: (value: Date | null) => void, options: Partial<IInputDateOptions> = {}) {\n    super(dialog);\n    Object.assign(this.ioptions, options);\n  }\n\n  protected build(node: HTMLElement) {\n    const o = this.ioptions;\n\n    const f = timeFormat('%Y-%m-%d');\n\n    node.insertAdjacentHTML('beforeend', `\n     <input type=\"date\" value=\"${o.value ? f(o.value) : ''}\" required autofocus placeholder=\"${o.label ? o.label : 'enter date'}\">\n    `);\n  }\n\n  submit() {\n    this.callback(this.findInput('input[type=date]').valueAsDate);\n    return true;\n  }\n}\n","import {dateStatsBuilder, IDateStatistics} from '../internal';\nimport {Column, IDataRow, IDateColumn, IDatesColumn, IOrderedGroup, isDateColumn, isDatesColumn} from '../model';\nimport {cssClass} from '../styles';\nimport {ERenderMode, ICellRendererFactory, IRenderContext} from './interfaces';\nimport {renderMissingDOM} from './missing';\nimport {colorOf} from './utils';\nimport {histogramUpdate, histogramTemplate, mappingHintTemplate, mappingHintUpdate, IFilterInfo, IFilterContext, filteredHistTemplate, initFilter} from './histogram';\nimport InputDateDialog from '../ui/dialogs/InputDateDialog';\nimport {shiftFilterDateDay} from '../model/internalDate';\n\n/** @internal */\nexport default class DateHistogramCellRenderer implements ICellRendererFactory {\n  readonly title = 'Histogram';\n\n  canRender(col: Column, mode: ERenderMode) {\n    return (isDateColumn(col) && mode !== ERenderMode.CELL) || (isDatesColumn(col) && mode === ERenderMode.CELL);\n  }\n\n  create(col: IDatesColumn, _context: IRenderContext) {\n    const {template, render} = getHistDOMRenderer(col);\n    return {\n      template: `${template}</div>`,\n      update: (n: HTMLElement, row: IDataRow) => {\n        if (renderMissingDOM(n, col, row)) {\n          return;\n        }\n        const b = dateStatsBuilder();\n        for (const n of col.getDates(row)) {\n          b.push(n);\n        }\n        const hist = b.build();\n        render(n, hist);\n      }\n    };\n  }\n\n  createGroup(col: IDateColumn, context: IRenderContext) {\n    const {template, render} = getHistDOMRenderer(col);\n    return {\n      template: `${template}</div>`,\n      update: (n: HTMLElement, group: IOrderedGroup) => {\n        return context.tasks.groupDateStats(col, group).then((r) => {\n          if (typeof r === 'symbol') {\n            return;\n          }\n          const {group} = r;\n\n          render(n, group);\n        });\n      }\n    };\n  }\n\n  createSummary(col: IDateColumn, context: IRenderContext, interactive: boolean) {\n    const r = getHistDOMRenderer(col);\n    return interactive ? interactiveSummary(col, context, r.template, r.render) : staticSummary(col, context, false, r.template, r.render);\n  }\n}\n\n\nfunction staticSummary(col: IDateColumn, context: IRenderContext, interactive: boolean, template: string, render: (n: HTMLElement, stats: IDateStatistics, unfiltered?: IDateStatistics) => void) {\n  template += mappingHintTemplate(['', '']);\n\n  return {\n    template: `${template}</div>`,\n    update: (node: HTMLElement) => {\n      return context.tasks.summaryDateStats(col).then((r) => {\n        if (typeof r === 'symbol') {\n          return;\n        }\n        const {summary, data} = r;\n\n        node.classList.toggle(cssClass('missing'), !summary);\n        if (!summary) {\n          return;\n        }\n        const formatter = col.getFormatter();\n        mappingHintUpdate(node, [formatter(summary.min), formatter(summary.max)]);\n\n        render(node, summary, interactive ? data: undefined);\n      });\n    }\n  };\n}\n\n\nfunction interactiveSummary(col: IDateColumn, context: IRenderContext, template: string, render: (n: HTMLElement, stats: IDateStatistics, unfiltered?: IDateStatistics) => void) {\n  const filter = col.getFilter();\n  const dummyDomain: [number, number] = [isFinite(filter.min) ? filter.min : 0, isFinite(filter.max) ? filter.max : 100];\n\n  template += filteredHistTemplate(createFilterContext(col, context, dummyDomain), createFilterInfo(col, dummyDomain));\n\n  let fContext: IFilterContext<number>;\n  let updateFilter: (missing: number, f: IFilterInfo<number>) => void;\n\n  return {\n    template: `${template}</div>`,\n    update: (node: HTMLElement) => {\n      return context.tasks.summaryDateStats(col).then((r) => {\n        if (typeof r === 'symbol') {\n          return;\n        }\n        const {summary, data} = r;\n        if (!updateFilter) {\n          fContext = createFilterContext(col, context, [data.min ? data.min.getTime() : Date.now(), data.max ? data.max.getTime() : Date.now()]);\n          updateFilter = initFilter(node, fContext);\n        }\n\n        updateFilter(data ? data.missing : (summary ? summary.missing : 0), createFilterInfo(col, fContext.domain));\n\n        node.classList.add(cssClass('histogram-i'));\n        node.classList.toggle(cssClass('missing'), !summary);\n        if (!summary) {\n          return;\n        }\n        render(node, summary, data);\n      });\n    }\n  };\n}\n\nfunction getHistDOMRenderer(col: IDateColumn) {\n  const guessedBins = 10;\n\n  const formatter = col.getFormatter();\n  const color = colorOf(col)!;\n\n  const render = (n: HTMLElement, stats: IDateStatistics, unfiltered?: IDateStatistics) => {\n    return histogramUpdate(n, stats, unfiltered || null, formatter, () => color);\n  };\n  return {\n    template: histogramTemplate(guessedBins),\n    render,\n    guessedBins\n  };\n}\n\nfunction createFilterInfo(col: IDateColumn, domain: [number, number]): IFilterInfo<number> {\n  const filter = col.getFilter();\n  const filterMin = isFinite(filter.min) ? filter.min : domain[0];\n  const filterMax = isFinite(filter.max) ? filter.max : domain[1];\n  return {\n    filterMissing: filter.filterMissing,\n    filterMin,\n    filterMax\n  };\n}\n\nfunction createFilterContext(col: IDateColumn, context: IRenderContext, domain: [number, number]): IFilterContext<number> {\n  const percent = (v: number) => Math.round(100 * (v - domain[0]) / (domain[1] - domain[0]));\n  const unpercent = (v: number) => ((v / 100) * (domain[1] - domain[0]) + domain[0]);\n  return {\n    percent,\n    unpercent,\n    domain,\n    format: (v) => isNaN(v) ? '' : col.getFormatter()(new Date(v)),\n    setFilter: (filterMissing, minValue, maxValue) => col.setFilter({\n      filterMissing,\n      min: Math.abs(minValue - domain[0]) < 0.001 ? NaN : shiftFilterDateDay(minValue, 'min'),\n      max: Math.abs(maxValue - domain[1]) < 0.001 ? NaN : shiftFilterDateDay(maxValue, 'max')\n    }),\n    edit: (value, attachment, type) => {\n      return new Promise((resolve) => {\n        const dialogCtx = {\n          attachment,\n          manager: context.dialogManager,\n          level: 1,\n          idPrefix: context.idPrefix\n        };\n        const dialog = new InputDateDialog(dialogCtx, (d) => resolve(d == null ? NaN : shiftFilterDateDay(d.getTime(), type)), {value: isNaN(value) ? null : new Date(value)});\n        dialog.open();\n      });\n    }\n  };\n}\n","import {Column} from '../model';\nimport ActionRenderer from './ActionRenderer';\nimport AggregateGroupRenderer from './AggregateGroupRenderer';\nimport AnnotationRenderer from './AnnotationRenderer';\nimport BarCellRenderer from './BarCellRenderer';\nimport BooleanCellRenderer from './BooleanCellRenderer';\nimport BoxplotCellRenderer from './BoxplotCellRenderer';\nimport BrightnessCellRenderer from './BrightnessCellRenderer';\nimport CategoricalCellRenderer from './CategoricalCellRenderer';\nimport CategoricalHeatmapCellRenderer from './CategoricalHeatmapCellRenderer';\nimport CategoricalStackedDistributionlCellRenderer from './CategoricalStackedDistributionlCellRenderer';\nimport CircleCellRenderer from './CircleCellRenderer';\nimport {DefaultCellRenderer} from './DefaultCellRenderer';\nimport DotCellRenderer from './DotCellRenderer';\nimport GroupCellRenderer from './GroupCellRenderer';\nimport HeatmapCellRenderer from './HeatmapCellRenderer';\nimport HistogramCellRenderer from './HistogramCellRenderer';\nimport ImageCellRenderer from './ImageCellRenderer';\nimport {ERenderMode, ICellRendererFactory} from './interfaces';\nimport InterleavingCellRenderer from './InterleavingCellRenderer';\nimport LinkCellRenderer from './LinkCellRenderer';\nimport LinkMapCellRenderer from './LinkMapCellRenderer';\nimport LoadingCellRenderer from './LoadingCellRenderer';\nimport MapBarCellRenderer from './MapBarCellRenderer';\nimport MultiLevelCellRenderer from './MultiLevelCellRenderer';\nimport RankCellRenderer from './RankCellRenderer';\nimport SelectionRenderer from './SelectionRenderer';\nimport SetCellRenderer from './SetCellRenderer';\nimport SparklineCellRenderer from './SparklineCellRenderer';\nimport StringCellRenderer from './StringCellRenderer';\nimport TableCellRenderer from './TableCellRenderer';\nimport UpSetCellRenderer from './UpSetCellRenderer';\nimport VerticalBarCellRenderer from './VerticalBarCellRenderer';\nimport DateCellRenderer from './DateCellRenderer';\nimport DateHistogramCellRenderer from './DateHistogramCellRenderer';\n\nconst defaultCellRenderer = new DefaultCellRenderer();\n/**\n * default render factories\n */\nexport const renderers: { [key: string]: ICellRendererFactory } = {\n  actions: new ActionRenderer(),\n  aggregate: new AggregateGroupRenderer(),\n  annotate: new AnnotationRenderer(),\n  boolean: new BooleanCellRenderer(),\n  boxplot: new BoxplotCellRenderer(),\n  brightness: new BrightnessCellRenderer(),\n  catdistributionbar: new CategoricalStackedDistributionlCellRenderer(),\n  categorical: new CategoricalCellRenderer(),\n  circle: new CircleCellRenderer(),\n  date: new DateCellRenderer(),\n  default: defaultCellRenderer,\n  dot: new DotCellRenderer(),\n  group: new GroupCellRenderer(),\n  heatmap: new HeatmapCellRenderer(),\n  catheatmap: new CategoricalHeatmapCellRenderer(),\n  histogram: new HistogramCellRenderer(),\n  datehistogram: new DateHistogramCellRenderer(),\n  image: new ImageCellRenderer(),\n  interleaving: new InterleavingCellRenderer(),\n  link: new LinkCellRenderer(),\n  linkMap: new LinkMapCellRenderer(),\n  loading: new LoadingCellRenderer(),\n  nested: new MultiLevelCellRenderer(false),\n  number: new BarCellRenderer(),\n  mapbars: new MapBarCellRenderer(),\n  rank: new RankCellRenderer(),\n  selection: new SelectionRenderer(),\n  set: new SetCellRenderer(),\n  sparkline: new SparklineCellRenderer(),\n  stack: new MultiLevelCellRenderer(),\n  string: new StringCellRenderer(),\n  table: new TableCellRenderer(),\n  upset: new UpSetCellRenderer(),\n  verticalbar: new VerticalBarCellRenderer()\n};\n\nexport function chooseRenderer(col: Column, renderers: { [key: string]: ICellRendererFactory }): ICellRendererFactory {\n  const r = renderers[col.getRenderer()];\n  return r && typeof r.create === 'function' ? r : defaultCellRenderer;\n}\n\nexport function chooseGroupRenderer(col: Column, renderers: { [key: string]: ICellRendererFactory }): ICellRendererFactory {\n  const r = renderers[col.getGroupRenderer()];\n  return r && typeof r.createGroup === 'function' ? r : defaultCellRenderer;\n}\n\nexport function chooseSummaryRenderer(col: Column, renderers: { [key: string]: ICellRendererFactory }): ICellRendererFactory {\n  const r = renderers[col.getSummaryRenderer()];\n  return r && typeof r.createSummary === 'function' ? r : defaultCellRenderer;\n}\n\n/**\n * determined the list of possible renderers for a given colum\n * @param col the column to resolve the renderers\n * @param renderers map of possible renderers\n * @param canRender optional custom canRender function\n */\nexport function getPossibleRenderer(col: Column, renderers: { [key: string]: ICellRendererFactory }, canRender?: (type: string, renderer: ICellRendererFactory, col: Column, mode: ERenderMode) => boolean) {\n  const all = Object.keys(renderers).filter(Boolean).map((type) => ({type, factory: renderers[type]}));\n\n  const item = all.filter(({type, factory}) => typeof factory.create === 'function' && factory.canRender(col, ERenderMode.CELL) && (!canRender || canRender(type, factory, col, ERenderMode.CELL)));\n  const group = all.filter(({type, factory}) => typeof factory.createGroup === 'function' && factory.canRender(col, ERenderMode.GROUP) && (!canRender || canRender(type, factory, col, ERenderMode.GROUP)));\n  const summary = all.filter(({type, factory}) => typeof factory.createSummary === 'function' && factory.canRender(col, ERenderMode.SUMMARY) && (!canRender || canRender(type, factory, col, ERenderMode.SUMMARY)));\n\n  return {\n    item: item.map(({type, factory}) => ({type, label: factory.title})),\n    group: group.map(({type, factory}) => ({type, label: factory.groupTitle || factory.title})),\n    summary: summary.map(({type, factory}) => ({type, label: factory.summaryTitle || factory.groupTitle || factory.title}))\n  };\n}\n","import {Column} from '../../model';\nimport {forEach} from '../../renderer/utils';\nimport {cssClass} from '../../styles';\n\n/** @internal */\nexport function updateFilterState(attachment: HTMLElement, column: Column, filtered: boolean) {\n  const toggle = (e: Element) => {\n    const n = <HTMLElement>e;\n    if (filtered) {\n      n.dataset.active = '';\n    } else {\n      delete n.dataset.active;\n    }\n  };\n\n  toggle(attachment);\n  const root = attachment.closest(`.${cssClass()}`);\n  if (!root) {\n    return;\n  }\n  Array.from(root.querySelectorAll(`[data-col-id=\"${column.id}\"] i[title^=Filter]`)).forEach(toggle);\n}\n\n/** @internal */\nexport function sortMethods(node: HTMLElement, column: {setSortMethod(v: string): void, getSortMethod(): string}, methods: string[]) {\n  const bak = column.getSortMethod();\n  methods.forEach((d) => node.insertAdjacentHTML('beforeend', `<label class=\"${cssClass('checkbox')}\"><input type=\"radio\" name=\"multivaluesort\" value=\"${d}\"  ${(bak === d) ? 'checked' : ''} ><span>${d.slice(0, 1).toUpperCase() + d.slice(1)}</span></label>`));\n\n  forEach(node, 'input[name=multivaluesort]', (n: HTMLInputElement) => {\n    n.addEventListener('change', () => column.setSortMethod(n.value), {\n      passive: true\n    });\n  });\n}\n\n\n/** @internal */\nexport {uniqueId, forEach, forEachChild, colorOf} from '../../renderer/utils';\n","import {BooleanColumn} from '../../model';\nimport ADialog, {IDialogContext} from './ADialog';\nimport {updateFilterState} from './utils';\nimport {cssClass} from '../../styles';\n\n/** @internal */\nexport default class BooleanFilterDialog extends ADialog {\n\n  private readonly before: boolean | null;\n\n  constructor(private readonly column: BooleanColumn, dialog: IDialogContext) {\n    super(dialog, {\n      fullDialog: true\n    });\n    this.before = this.column.getFilter();\n  }\n\n  protected build(node: HTMLElement) {\n    node.insertAdjacentHTML('beforeend', `\n     <label class=\"${cssClass('checkbox')}\"><input type=\"radio\" name=\"boolean_check\" value=\"null\" ${this.before == null ? 'checked=\"checked\"' : ''}><span>No Filter</span></label>\n     <label class=\"${cssClass('checkbox')}\"><input type=\"radio\" name=\"boolean_check\" value=\"true\" ${this.before === true ? 'checked=\"checked\"' : ''}><span>True</span></label>\n     <label class=\"${cssClass('checkbox')}\"><input type=\"radio\" name=\"boolean_check\" value=\"false\" ${this.before === false ? 'checked=\"checked\"' : ''}><span>False</span></label>\n    `);\n  }\n\n  private updateFilter(filter: boolean | null) {\n    updateFilterState(this.attachment, this.column, filter != null);\n    this.column.setFilter(filter);\n  }\n\n  reset() {\n    const v = 'null';\n    this.forEach('input[type=\"radio\"]', (d: HTMLInputElement) => d.checked = d.value === v);\n    this.updateFilter(null);\n  }\n\n  submit() {\n    const isTrue = this.findInput('input[type=\"radio\"][value=\"true\"]').checked;\n    const isFalse = this.findInput('input[type=\"radio\"][value=\"false\"]').checked;\n    this.updateFilter(isTrue ? true : (isFalse ? false : null));\n    return true;\n  }\n}\n","import {ICategoricalColumn, CategoricalsColumn, CategoricalMapColumn, ICategory} from '../../model';\nimport ADialog, {IDialogContext} from './ADialog';\nimport {uniqueId} from './utils';\nimport {cssClass} from '../../styles';\nimport {color} from 'd3-color';\nimport {schemeCategory10, schemeAccent, schemeDark2, schemePastel1, schemePastel2, schemeSet1, schemeSet2, schemeSet3} from 'd3-scale-chromatic';\nimport {DEFAULT_CATEGORICAL_COLOR_FUNCTION, ReplacmentColorMappingFunction} from '../../model/CategoricalColorMappingFunction';\n\nconst sets: {[key: string]: ReadonlyArray<string>} = {schemeCategory10, schemeAccent, schemeDark2, schemePastel1, schemePastel2, schemeSet1, schemeSet2, schemeSet3};\n\n/** @internal */\nexport default class CategoricalColorMappingDialog extends ADialog {\n\n  constructor(private readonly column: ICategoricalColumn | CategoricalsColumn | CategoricalMapColumn, dialog: IDialogContext) {\n    super(dialog, {\n      fullDialog: true\n    });\n  }\n\n  protected build(node: HTMLElement) {\n    const id = uniqueId(this.dialog.idPrefix);\n    const mapping = this.column.getColorMapping();\n    node.insertAdjacentHTML('beforeend', `<div class=\"${cssClass('dialog-table')}\">\n      <div class=\"${cssClass('dialog-color-table-entry')}\">\n        <select id=\"${id}Chooser\">\n          <option value=\"\">Apply Color Scheme...</option>\n          <option value=\"schemeCategory10\">D3 Category 10 (${schemeCategory10.length})</option>\n          <option value=\"schemeSet1\">Set 1 (${schemeSet1.length})</option>\n          <option value=\"schemeSet2\">Set 2 (${schemeSet2.length})</option>\n          <option value=\"schemeSet3\">Set 3 (${schemeSet3.length})</option>\n          <option value=\"schemeAccent\">Accent (${schemeAccent.length})</option>\n          <option value=\"schemeDark2\">Dark2 (${schemeDark2.length})</option>\n          <option value=\"schemePastel1\">Pastel 1 (${schemePastel1.length})</option>\n          <option value=\"schemePastel2\">Pastel 2 (${schemePastel2.length})</option>\n        </select>\n      </div>\n      ${this.column.categories.map((d) => `\n        <label class=\"${cssClass('checkbox')} ${cssClass('dialog-color-table-entry')}\">\n          <input data-cat=\"${d.name}\" type=\"color\" value=\"${color(mapping.apply(d))!.hex()}\">\n          <span>${d.label}</span>\n        </label>`).join('')}\n    </div>`);\n\n    this.findInput('select').onchange = (evt) => {\n      const scheme = sets[(<HTMLInputElement>evt.currentTarget).value];\n      if (!scheme) {\n        return;\n      }\n      this.forEach('[data-cat]', (n: HTMLInputElement, i) => {\n        n.value = scheme[i % scheme.length];\n      });\n    };\n  }\n\n  reset() {\n    const cats = this.column.categories;\n    this.forEach('[data-cat]', (n: HTMLInputElement, i) => {\n      n.value = color(cats[i]!.color)!.hex();\n    });\n    this.column.setColorMapping(DEFAULT_CATEGORICAL_COLOR_FUNCTION);\n  }\n\n  submit() {\n    const cats = this.column.categories;\n    const map = new Map<ICategory, string>();\n    this.forEach('input[data-cat]', (n: HTMLInputElement, i) => {\n      const cat = cats[i];\n      if (color(cat.color)!.hex() !== n.value) {\n        map.set(cat, n.value);\n      }\n    });\n    if (map.size === 0) {\n      this.column.setColorMapping(DEFAULT_CATEGORICAL_COLOR_FUNCTION);\n    } else {\n      this.column.setColorMapping(new ReplacmentColorMappingFunction(map));\n    }\n    return true;\n  }\n}\n","import {SetColumn, CategoricalColumn, ICategoricalFilter} from '../../model';\nimport {filterMissingMarkup, findFilterMissing} from '../missing';\nimport ADialog, {IDialogContext} from './ADialog';\nimport {updateFilterState, forEach} from './utils';\nimport {cssClass} from '../../styles';\nimport {isCategoryIncluded} from '../../model/internalCategorical';\n\n/** @internal */\nexport default class CategoricalFilterDialog extends ADialog {\n\n  private readonly before: ICategoricalFilter;\n\n  constructor(private readonly column: CategoricalColumn | SetColumn, dialog: IDialogContext) {\n    super(dialog, {\n      fullDialog: true\n    });\n    this.before = this.column.getFilter() || {filter: this.column.categories.map((d) => d.name), filterMissing: false};\n  }\n\n  protected build(node: HTMLElement) {\n    node.insertAdjacentHTML('beforeend', `<div class=\"${cssClass('dialog-table')}\">\n        <label class=\"${cssClass('checkbox')} ${cssClass('dialog-filter-table-entry')}\">\n          <input type=\"checkbox\" checked>\n          <span>\n            <span class=\"${cssClass('dialog-filter-table-color')}\"></span>\n            <div>Un/Select All</div>\n          </span>\n        </label>\n        ${this.column.categories.map((c) => `<label class=\"${cssClass('checkbox')} ${cssClass('dialog-filter-table-entry')}\">\n          <input data-cat=\"${c.name}\" type=\"checkbox\"${isCategoryIncluded(this.before, c) ? 'checked' : ''}>\n          <span>\n            <span class=\"${cssClass('dialog-filter-table-color')}\" style=\"background-color: ${c.color}\"></span>\n            <div>${c.label}</div>\n          </span>\n        </label>`).join('')}\n    </div>`);\n    // selectAll\n    const selectAll = this.findInput('input:not([data-cat])');\n    selectAll.onchange =  () => {\n      forEach(node, 'input[data-cat]', (n: HTMLInputElement) => n.checked = selectAll.checked);\n    };\n    node.insertAdjacentHTML('beforeend', filterMissingMarkup(this.before.filterMissing));\n  }\n\n  private updateFilter(filter: string[] | null, filterMissing: boolean) {\n    const noFilter = filter == null && filterMissing === false;\n    updateFilterState(this.attachment, this.column, !noFilter);\n    this.column.setFilter(noFilter ? null : {filter: filter!, filterMissing});\n  }\n\n  reset() {\n    this.forEach('input[data-cat]', (n: HTMLInputElement) => n.checked = true);\n    this.updateFilter(null, false);\n  }\n\n  submit() {\n    let f: string[] | null = this.forEach('input[data-cat]', (n: HTMLInputElement) => n.checked ? n.dataset.cat! : '').filter(Boolean);\n    if (f.length === this.column.categories.length) { // all checked = no filter\n      f = null;\n    }\n    const filterMissing = findFilterMissing(this.node).checked;\n    this.updateFilter(f, filterMissing);\n    return true;\n  }\n}\n","import {round} from '../../internal';\nimport {OrdinalColumn, ICategoricalFilter} from '../../model';\nimport {isCategoryIncluded} from '../../model/internalCategorical';\nimport {filterMissingMarkup, findFilterMissing} from '../missing';\nimport ADialog, {IDialogContext} from './ADialog';\nimport {updateFilterState, forEach} from './utils';\nimport {cssClass} from '../../styles';\n\n/** @internal */\nexport default class CategoricalMappingFilterDialog extends ADialog {\n\n  private readonly before: ICategoricalFilter;\n\n  constructor(private readonly column: OrdinalColumn, dialog: IDialogContext) {\n    super(dialog, {\n      fullDialog: true\n    });\n    this.before = this.column.getFilter() || {filter: this.column.categories.map((d) => d.name), filterMissing: false};\n  }\n\n  protected build(node: HTMLElement) {\n    const joint = this.column.categories.map((d) => Object.assign({\n      range: round(d.value * 100, 2)\n    }));\n    joint.sort((a, b) => a.label.localeCompare(b.label));\n\n    node.insertAdjacentHTML('beforeend', `<div class=\"${cssClass('dialog-table')}\">\n        <label class=\"${cssClass('checkbox')} ${cssClass('dialog-filter-table-entry')}\">\n          <input type=\"checkbox\" checked>\n          <span>\n            <div>Un/Select All</div>\n          </span>\n        </label>\n        ${joint.map(({name, color, label, range}) => `\n          <label class=\"${cssClass('checkbox')} ${cssClass('dialog-filter-table-entry')}\">\n            <input data-cat=\"${name}\" type=\"checkbox\"${isCategoryIncluded(this.before, name) ? 'checked' : ''}>\n            <span>\n              <input type=\"number\" value=\"${range}\" min=\"0\" max=\"100\" size=\"5\">\n              <div class=\"${cssClass('dialog-filter-color-bar')}\">\n                <span style=\"background-color: ${color}; width: ${range}%\"></span>\n              </div>\n              <div>${label}</div>\n            </span>\n          </label>`).join('')}\n    </div>`);\n    // selectAll\n    const selectAll = this.findInput('input[type=checkbox]:not([data-cat])');\n    selectAll.onchange = () => {\n      forEach(node, '[data-cat]', (n: HTMLInputElement) => n.checked = selectAll.checked);\n    };\n    this.forEach('input[type=number]', (d: HTMLInputElement) => {\n      d.oninput = () => {\n        (<HTMLElement>d.nextElementSibling!.firstElementChild).style.width = `${d.value}%`;\n      };\n    });\n    node.insertAdjacentHTML('beforeend', filterMissingMarkup(this.before.filterMissing));\n  }\n\n  private updateFilter(filter: string[] | null, filterMissing: boolean) {\n    const noFilter = filter == null && filterMissing === false;\n    updateFilterState(this.attachment, this.column, !noFilter);\n    this.column.setFilter(noFilter ? null : {filter: filter!, filterMissing});\n  }\n\n  reset() {\n    this.forEach('[data-cat]', (n: HTMLInputElement) => {\n      n.checked = false;\n      (<HTMLInputElement>n.nextElementSibling!).value = '50';\n    });\n    this.updateFilter(null, false);\n    this.column.setMapping(this.column.categories.map(() => 1));\n  }\n\n  submit() {\n    const items = this.forEach('input[data-cat]', (n: HTMLInputElement) => ({\n      checked: n.checked,\n      cat: n.dataset.cat!,\n      range: (<HTMLInputElement>n.nextElementSibling)!.valueAsNumber\n    }));\n    let f: string[] | null = items.filter((d) => d.checked).map((d) => d.cat);\n    if (f.length === this.column.categories.length) { // all checked = no filter\n      f = null;\n    }\n    const filterMissing = findFilterMissing(this.node).checked;\n    this.updateFilter(f, filterMissing);\n    this.column.setMapping(items.map((d) => d.range / 100));\n    return true;\n  }\n}\n","import {Column} from '../../model';\nimport {IRankingHeaderContext, IRenderInfo} from '../interfaces';\nimport ADialog, {IDialogContext} from './ADialog';\nimport {cssClass} from '../../styles';\n\n/** @internal */\nexport default class ChangeRendererDialog extends ADialog {\n  constructor(private readonly column: Column, dialog: IDialogContext, private readonly ctx: IRankingHeaderContext) {\n    super(dialog);\n  }\n\n  protected build(node: HTMLElement) {\n    const current = this.column.getRenderer();\n    const currentGroup = this.column.getGroupRenderer();\n    const currentSummary = this.column.getSummaryRenderer();\n    const {item, group, summary} = this.ctx.getPossibleRenderer(this.column);\n\n    console.assert(item.length > 1 || group.length > 1 || summary.length > 1); // otherwise no need to show this\n\n    const byName = (a: IRenderInfo, b: IRenderInfo) => a.label.localeCompare(b.label);\n    node.insertAdjacentHTML('beforeend', `\n      <strong>Item Visualization</strong>\n      ${item.sort(byName).map((d) => ` <label class=\"${cssClass('checkbox')}\"><input type=\"radio\" name=\"renderer\" value=\"${d.type}\" ${(current === d.type) ? 'checked' : ''}><span>${d.label}</span></label>`).join('')}\n      <strong>Group Visualization</strong>\n      ${group.sort(byName).map((d) => ` <label class=\"${cssClass('checkbox')}\"><input type=\"radio\" name=\"group\" value=\"${d.type}\" ${(currentGroup === d.type) ? 'checked' : ''}><span>${d.label}</span></label>`).join('')}\n      <strong>Summary Visualization</strong>\n      ${summary.sort(byName).map((d) => ` <label class=\"${cssClass('checkbox')}\"><input type=\"radio\" name=\"summary\" value=\"${d.type}\" ${(currentSummary === d.type) ? 'checked' : ''}><span>${d.label}</span></label>`).join('')}\n    `);\n    this.forEach('input[name=\"renderer\"]', (n: HTMLInputElement) => {\n      n.addEventListener('change', () => this.column.setRenderer(n.value), { passive: true });\n    });\n    this.forEach('input[name=\"group\"]', (n: HTMLInputElement) => {\n      n.addEventListener('change', () => this.column.setGroupRenderer(n.value), { passive: true });\n    });\n    this.forEach('input[name=\"summary\"]', (n: HTMLInputElement) => {\n      n.addEventListener('change', () => this.column.setSummaryRenderer(n.value), { passive: true });\n    });\n  }\n\n}\n","import ADialog, {IDialogContext} from './ADialog';\nimport {schemeCategory10, schemeSet1, schemeSet2, schemeSet3, schemeAccent, schemeDark2, schemePastel2, schemePastel1} from 'd3-scale-chromatic';\nimport {round} from '../../internal';\nimport {uniqueId} from '../../renderer/utils';\nimport {QuantizedColorFunction, CustomColorMappingFunction, SolidColorFunction, SequentialColorFunction, DivergentColorFunction} from '../../model/ColorMappingFunction';\nimport {IMapAbleColumn, DEFAULT_COLOR} from '../../model';\nimport {cssClass} from '../../styles';\n\n/** @internal */\nexport default class ColorMappingDialog extends ADialog {\n  constructor(private readonly column: IMapAbleColumn, dialog: IDialogContext) {\n    super(dialog);\n  }\n\n  protected build(node: HTMLElement) {\n    node.classList.add(cssClass('dialog-color'));\n    const id = uniqueId('col');\n\n    const current = this.column.getColorMapping();\n    const entries = current instanceof CustomColorMappingFunction ? current.entries : [];\n\n    let h = '';\n    h += `<datalist id=\"${id}L\">${schemeCategory10.map((d) => `<option>${d}\"</option>`).join('')}</datalist>`;\n    h += `<datalist id=\"${id}LW\"><option>#FFFFFF\"</option>${schemeCategory10.slice(0, -1).map((d) => `<option>${d}</option>`).join('')}</datalist>`;\n\n    h += `<strong>Quantization</strong>\n    <label class=\"${cssClass('checkbox')}\">\n      <input name=\"kind\" type=\"radio\" id=\"${id}KC\" value=\"continuous\" ${!(current instanceof QuantizedColorFunction) ? 'checked': ''}>\n      <span>Continuous</span>\n    </label>\n    <label class=\"${cssClass('checkbox')}\">\n      <input name=\"kind\" type=\"radio\" id=\"${id}KQ\" value=\"quantized\" ${current instanceof QuantizedColorFunction ? 'checked': ''}>\n      <span><input type=\"number\" id=\"${id}KQS\" min=\"2\" step=\"1\" value=\"${current instanceof QuantizedColorFunction ? current.steps : 5}\">&nbsp; steps</span>\n    </label>`;\n\n    h += `<strong data-toggle=\"${current instanceof SolidColorFunction ? 'open' : ''}\">Solid Color</strong>`;\n    h += `<div>`;\n    {\n      const refColor = current instanceof SolidColorFunction ? current.color : '';\n      let has = false;\n      const colorsets = [schemeCategory10, schemeAccent, schemeDark2, schemePastel1, schemePastel2, schemeSet1, schemeSet2, schemeSet3];\n      for (const colors of colorsets) {\n        has = has || colors.includes(refColor);\n        h += `<div class=\"${cssClass('color-line')}\">\n          ${colors.map((d) => `<label class=\"${cssClass('checkbox-color')}\">\n              <input name=\"color\" type=\"radio\" value=\"${d}\" ${d === refColor ? 'checked=\"checked\"': ''}>\n              <span style=\"background: ${d}\"></span>\n            </label>`).join('')}\n        </div>`;\n      }\n      h += `<label class=\"${cssClass('checkbox')} ${cssClass('color-gradient')}\"><input name=\"color\" type=\"radio\" value=\"custom:solid\" ${refColor && !has ? 'checked=\"checked\"' : ''}>\n        <span class=\"${cssClass('color-custom')}\"><input type=\"color\" name=\"solid\" list=\"${id}L\" value=\"${current instanceof SolidColorFunction ? current.color : DEFAULT_COLOR}\" ${refColor && !has ? '' : 'disabled'}></span>\n      </label>`;\n    }\n    h += '</div>';\n\n    h += `<strong data-toggle=\"${current instanceof SequentialColorFunction || (current instanceof CustomColorMappingFunction && entries.length === 2) ? 'open' : ''}\">Sequential Color</strong>`;\n    h += '<div>';\n    {\n      const name = current instanceof SequentialColorFunction ? current.name : '';\n      for (const colors of Object.keys(SequentialColorFunction.FUNCTIONS)) {\n        h += `<label class=\"${cssClass('checkbox')} ${cssClass('color-gradient')}\"><input name=\"color\" type=\"radio\" value=\"${colors}\" ${colors === name ? 'checked=\"checked\"' : ''}>\n        <span data-c=\"${colors}\" style=\"background: ${gradient(SequentialColorFunction.FUNCTIONS[colors], 9)}\"></span>\n      </label>`;\n      }\n      const isCustom = entries.length === 2;\n      h += `<label class=\"${cssClass('checkbox')} ${cssClass('color-gradient')}\">\n        <input name=\"color\" type=\"radio\" value=\"custom:sequential\" ${isCustom ? 'checked': ''}>\n        <span class=\"${cssClass('color-custom')}\">\n          <input type=\"color\" name=\"interpolate0\" list=\"${id}LW\" ${!isCustom ? 'disabled': `value=\"${entries[0].color}\"`}>\n          <input type=\"color\" name=\"interpolate1\" list=\"${id}LW\" ${!isCustom ? 'disabled': `value=\"${entries[entries.length - 1].color}\"`}>\n        </span>\n      </label>`;\n    }\n    h += '</div>';\n    h += `<strong data-toggle=\"${current instanceof DivergentColorFunction || (current instanceof CustomColorMappingFunction && entries.length === 3) ? 'open' : ''}\">Diverging Color</strong>`;\n    h += '<div>';\n    {\n      const name = current instanceof SequentialColorFunction ? current.name : '';\n      for (const colors of Object.keys(DivergentColorFunction.FUNCTIONS)) {\n        h += `<label class=\"${cssClass('checkbox')} ${cssClass('color-gradient')}\"><input name=\"color\" type=\"radio\" value=\"${colors}\" ${colors === name ? 'checked=\"checked\"' : ''}>\n        <span data-c=\"${colors}\" style=\"background: ${gradient(DivergentColorFunction.FUNCTIONS[colors], 11)}\"></span>\n      </label>`;\n      }\n      const isCustom = entries.length === 3;\n      h += `<label class=\"${cssClass('checkbox')} ${cssClass('color-gradient')}\">\n        <input name=\"color\" type=\"radio\" value=\"custom:divergent\" ${isCustom ? 'checked' : ''}>\n        <span class=\"${cssClass('color-custom')}\">\n          <input type=\"color\" name=\"divergingm1\" list=\"${id}L\" ${!isCustom ? 'disabled': `value=\"${entries[0].color}\"`}>\n          <input type=\"color\" name=\"diverging0\" list=\"${id}LW\" ${!isCustom ? 'disabled': `value=\"${entries[1].color}\"`}>\n          <input type=\"color\" name=\"diverging1\" list=\"${id}L\" ${!isCustom ? 'disabled': `value=\"${entries[2].color}\"`}>\n        </span>\n      </label>`;\n    }\n    h += '</div>';\n\n    node.insertAdjacentHTML('beforeend', h);\n\n    this.interactive(node, id);\n  }\n\n  private interactive(node: HTMLElement, id: string) {\n    const continuouos = this.findInput(`#${id}KC`);\n    const quantized = this.findInput(`#${id}KQ`);\n    const steps = this.findInput(`#${id}KQS`);\n    const toggles = <HTMLElement[]>Array.from(node.querySelectorAll('strong[data-toggle]'));\n\n    for (const toggle of toggles) {\n      toggle.onclick = (evt) => {\n        evt.preventDefault();\n        evt.stopPropagation();\n        for (const t2 of toggles) {\n          t2.dataset.toggle = t2.dataset.toggle === 'open' || toggle !== t2 ? '' : 'open';\n        }\n      };\n    }\n\n    const customs: HTMLElement[] = [];\n\n    const toColor = (input: HTMLInputElement) => {\n      switch (input.value) {\n        case 'custom:solid':\n          return new SolidColorFunction((<HTMLInputElement>node.querySelector('input[name=solid]')!).value);\n        case 'custom:sequential':\n          const s0 = (<HTMLInputElement>node.querySelector('input[name=interpolate0]')!).value;\n          const s1 = (<HTMLInputElement>node.querySelector('input[name=interpolate1]')!).value;\n          return new CustomColorMappingFunction([{color: s0, value: 0}, {color: s1, value: 1}]);\n        case 'custom:diverging':\n          const dm1 = (<HTMLInputElement>node.querySelector('input[name=divergentm1]')!).value;\n          const d0 = (<HTMLInputElement>node.querySelector('input[name=divergent0]')!).value;\n          const d1 = (<HTMLInputElement>node.querySelector('input[name=divergent1]')!).value;\n          return new CustomColorMappingFunction([{color: dm1, value: 0}, {color: d0, value: 0.5}, {color: d1, value: 1}]);\n      }\n      if (input.value in SequentialColorFunction.FUNCTIONS) {\n        return new SequentialColorFunction(input.value);\n      }\n      if (input.value in DivergentColorFunction.FUNCTIONS) {\n        return new DivergentColorFunction(input.value);\n      }\n      return new SolidColorFunction(input.value);\n    };\n\n    const updateColor = (d: HTMLInputElement) => {\n      if (!d.checked) {\n        return;\n      }\n      // disable customs\n      for (const custom of customs) {\n        Array.from(custom.nextElementSibling!.getElementsByTagName('input')).forEach((s) => s.disabled = custom !== d);\n      }\n      const base = toColor(d);\n      if (quantized.checked && !(base instanceof SolidColorFunction)) {\n        this.column.setColorMapping(new QuantizedColorFunction(base, parseInt(steps.value, 10)));\n      } else {\n        this.column.setColorMapping(base);\n      }\n    };\n\n    const updateSelectedColor = () => {\n      const selected = this.findInput(`input[name=color]:checked`);\n      if (selected) {\n        updateColor(selected);\n      }\n    };\n\n    this.forEach('input[name=color]', (d: HTMLInputElement) => {\n      if (d.value.startsWith('custom:')) {\n        customs.push(d);\n      }\n      d.onchange = () => updateColor(d);\n    });\n\n    // upon changing custom parameter trigger an update\n    this.forEach(`.${cssClass('color-custom')} input[type=color]`, (d: HTMLInputElement) => {\n      d.onchange = () => {\n        const item = (<HTMLInputElement>d.parentElement!.previousElementSibling!);\n        updateColor(item);\n      };\n    });\n\n    continuouos.onchange = () => {\n      if (continuouos.checked) {\n        this.updateGradients(-1);\n        updateSelectedColor();\n      }\n    };\n    quantized.onchange = steps.onchange = () => {\n      if (!quantized.checked) {\n        this.updateGradients(-1);\n        updateSelectedColor();\n        return;\n      }\n      if (toggles[0].dataset.toggle === 'open') {\n        // auto open sequential\n        toggles[0].dataset.toggle = '';\n        toggles[1].dataset.toggle = 'open';\n      }\n      this.updateGradients(parseInt(steps.value, 10));\n      updateSelectedColor();\n    };\n  }\n\n  private updateGradients(steps: number) {\n    this.forEach(`span[data-c]`, (d: HTMLElement) => {\n      const key = d.dataset.c!;\n      const s = SequentialColorFunction.FUNCTIONS[key];\n      if (s) {\n        d.style.background = steps < 0 ? gradient(s, 9) : steppedGradient(s, steps);\n        return;\n      }\n      const di = DivergentColorFunction.FUNCTIONS[key];\n      if (di) {\n        d.style.background = steps < 0 ? gradient(di, 11) : steppedGradient(di, steps);\n        return;\n      }\n    });\n  }\n}\n\nfunction gradient(interpolate: (v: number)=>string, steps = 2) {\n  if (steps <= 1) {\n    return `${interpolate(0)}`;\n  }\n  const stepSize = 1 / (steps - 1);\n  let r = `linear-gradient(to right`;\n  for (let i = 0; i < steps; ++i) {\n    r += `, ${interpolate(i * stepSize)} ${round((i * stepSize) * 100, 2)}%`;\n  }\n  r += ')';\n  return r;\n}\n\nfunction steppedGradient(color: (v: number)=>string, count = 2) {\n  if (count === 1) {\n    return `${color(0)}`;\n  }\n  let r = `linear-gradient(to right`;\n  const stepSize = 1 / count;\n  const half = stepSize / 2;\n  for (let i = 0; i < count; ++i) {\n    // stepped\n    // first and last at border else center\n    const shift = i === 0 ? 0 : (i === (count - 1) ? stepSize : half);\n    const c = color(i * stepSize + shift);\n    r += `, ${c} ${round((i * stepSize) * 100, 2)}%, ${c} ${round(((i + 1) * stepSize) * 100, 2)}%`;\n  }\n  r += ')';\n  return r;\n}\n","import {cssClass} from '../styles';\n\n/** @internal */\nexport function hasDnDType(e: DragEvent, ...typesToCheck: string[]) {\n  const available: any = e.dataTransfer!.types;\n\n  /*\n   * In Chrome datatransfer.types is an Array,\n   * while in Firefox it is a DOMStringList\n   * that only implements a contains-method!\n   */\n  if (typeof available.indexOf === 'function') {\n    return typesToCheck.some((type) => available.indexOf(type) >= 0);\n  }\n  if (typeof available.includes === 'function') {\n    return typesToCheck.some((type) => available.includes(type));\n  }\n  if (typeof available.contains === 'function') {\n    return typesToCheck.some((type) => available.contains(type));\n  }\n  return false;\n}\n\n\n/**\n * helper storage for dnd in edge since edge doesn't support custom mime-types\n * @type {Map<number, {[p: string]: string}>}\n */\nconst dndTransferStorage = new Map<number, {[key: string]: string}>();\n\nfunction isEdgeDnD(e: DragEvent) {\n  return dndTransferStorage.size > 0 && hasDnDType(e, 'text/plain');\n}\n\n/**\n * checks whether it is a copy operation\n * @param e\n * @returns {boolean|RegExpMatchArray}\n * @internal\n */\nexport function copyDnD(e: DragEvent) {\n  const dT = e.dataTransfer!;\n  return Boolean((e.ctrlKey && dT.effectAllowed.match(/copy/gi)) || (!dT.effectAllowed.match(/move/gi)));\n}\n\n/**\n * updates the drop effect accoriding to the current copyDnD state\n * @param e\n * @internal\n */\nexport function updateDropEffect(e: DragEvent) {\n  const dT = e.dataTransfer!;\n  if (copyDnD(e)) {\n    dT.dropEffect = 'copy';\n  } else {\n    dT.dropEffect = 'move';\n  }\n}\n\n/** @internal */\nexport type IDragEffect = 'none' | 'copy' | 'copyLink' | 'copyMove' | 'link' | 'linkMove' | 'move' | 'all';\n\n/** @internal */\nexport interface IDragStartResult {\n  effectAllowed: IDragEffect;\n  data: {[mimeType: string]: string};\n}\n\n/** @internal */\nexport interface IDropResult {\n  effect: IDragEffect;\n  data: {[mimeType: string]: string};\n}\n\nlet idCounter = 0;\n\n/**\n * add drag support for the given element\n * @param {HTMLElement} node\n * @param {() => IDragStartResult} onDragStart callback to compute the payload an object of mime types\n * @param {boolean} stopPropagation whether to stop propagation in case of success\n * @internal\n */\nexport function dragAble(node: HTMLElement, onDragStart: () => IDragStartResult, stopPropagation: boolean = false) {\n  const id = ++idCounter;\n\n  node.classList.add(cssClass('dragable'));\n  node.draggable = true;\n\n  node.addEventListener('dragstart', (e) => {\n    node.classList.add(cssClass('dragging'));\n    const payload = onDragStart();\n    e.dataTransfer!.effectAllowed = payload.effectAllowed;\n\n    if (stopPropagation) {\n      e.stopPropagation();\n    }\n\n    // copy all data transfer objects\n    const keys = Object.keys(payload.data);\n    const allSucceded = keys.every((k) => {\n      try {\n        e.dataTransfer!.setData(k, payload.data[k]);\n        return true;\n      } catch (e) {\n        return false;\n      }\n    });\n    if (allSucceded) {\n      return;\n    }\n    //compatibility mode for edge\n    const text = payload.data['text/plain'] || '';\n    e.dataTransfer!.setData('text/plain', `${id}${text ? `: ${text}` : ''}`);\n    dndTransferStorage.set(id, payload.data);\n  });\n\n  node.addEventListener('dragend', (e) => {\n    node.classList.remove(cssClass('dragging'));\n\n    if (stopPropagation) {\n      e.stopPropagation();\n    }\n\n    if (dndTransferStorage.size > 0) {\n      //clear the id\n      dndTransferStorage.delete(id);\n    }\n\n    // remove all\n    const over = <HTMLElement>node.ownerDocument!.getElementsByClassName(cssClass('dragover'))[0];\n    if (over) {\n      over.classList.remove(cssClass('dragover'));\n    }\n  });\n}\n\n/**\n * add dropable support for the given node\n * @param {HTMLElement} node\n * @param {string[]} mimeTypes mimeTypes to look for\n * @param {(result: IDropResult, e: DragEvent) => boolean} onDrop callback when dropped, returns true if the drop was successful\n * @param {(e: DragEvent) => void} onDragOver optional drag over handler, e.g. for special effects\n * @param {boolean} stopPropagation flag if the event propagation should be stopped in case of success\n * @param {() => boolean} optional whether to enable dropping at all\n * @internal\n */\nexport function dropAble(node: HTMLElement, mimeTypes: string[], onDrop: (result: IDropResult, e: DragEvent) => boolean, onDragOver: null | ((e: DragEvent) => void) = null, stopPropagation: boolean = false, canDrop: () => boolean = (() => true)) {\n  node.addEventListener('dragenter', (e) => {\n    //var xy = mouse($node.node());\n    if (node.classList.contains(cssClass('dragging')) || !(hasDnDType(e, ...mimeTypes) || isEdgeDnD(e)) || !canDrop()) {\n      // not a valid mime type\n      node.classList.remove(cssClass('dragover'));\n      return;\n    }\n    node.classList.add(cssClass('dragover'));\n    if (stopPropagation) {\n      e.stopPropagation();\n    }\n    //sounds good\n    return false;\n  });\n\n  node.addEventListener('dragover', (e) => {\n    if (node.classList.contains(cssClass('dragging')) || !(hasDnDType(e, ...mimeTypes) || isEdgeDnD(e)) || !canDrop()) {\n      // not a valid mime type\n      return;\n    }\n\n    e.preventDefault();\n    updateDropEffect(e);\n    node.classList.add(cssClass('dragover'));\n\n    if (stopPropagation) {\n      e.stopPropagation();\n    }\n    if (onDragOver) {\n      onDragOver(e);\n    }\n    //sound good\n    return false;\n  });\n\n  node.addEventListener('dragleave', (evt) => {\n    // same fix as in phovea\n    (<HTMLElement>evt.target).classList.remove(cssClass('dragover'));\n  });\n\n  node.addEventListener('drop', (e) => {\n    e.preventDefault();\n    if (stopPropagation) {\n      e.stopPropagation();\n    }\n    updateDropEffect(e);\n\n    const effect = <IDragEffect>e.dataTransfer!.dropEffect;\n\n    node.classList.remove(cssClass('dragover'));\n\n    if (isEdgeDnD(e)) {\n      // retrieve from helper\n      const base = e.dataTransfer!.getData('text/plain');\n      const id = parseInt(base.indexOf(':') >= 0 ? base.substring(0, base.indexOf(':')) : base, 10);\n      if (dndTransferStorage.has(id)) {\n        const data = dndTransferStorage.get(id)!;\n        dndTransferStorage.delete(id);\n        return !onDrop({effect, data}, e);\n      }\n      return;\n    }\n\n    if (!hasDnDType(e, ...mimeTypes)) {\n      return;\n    }\n\n    // copy sub mime types\n    const data: any = {};\n    //selects the data contained in the data transfer\n    mimeTypes.forEach((mime) => {\n      const value = e.dataTransfer!.getData(mime);\n      if (value !== '') {\n        data[mime] = value;\n      }\n    });\n    return !onDrop({effect, data}, e);\n  });\n}\n","import {Column} from '../../model';\nimport {createToolbarMenuItems, updateIconState} from '../header';\nimport {IRankingHeaderContext} from '../interfaces';\nimport ADialog, {IDialogContext} from './ADialog';\nimport {cssClass} from '../../styles';\n\n/** @internal */\nexport default class MoreColumnOptionsDialog extends ADialog {\n\n  constructor(private readonly column: Column, dialog: IDialogContext, private readonly ctx: IRankingHeaderContext) {\n    super(dialog);\n  }\n\n  protected build(node: HTMLElement) {\n    node.classList.add(cssClass('more-options'));\n    createToolbarMenuItems(node, this.dialog.level + 1, this.column, this.ctx);\n\n    updateIconState(node, this.column);\n  }\n}\n","import {MIN_LABEL_WIDTH} from '../constants';\nimport {equalArrays, dragAble, dropAble, hasDnDType, IDropResult} from '../internal';\nimport {categoryOf, getSortType} from '../model';\nimport {createNestedDesc, createReduceDesc, createStackDesc, IColumnDesc, isArrayColumn, isBoxPlotColumn, isCategoricalColumn, isMapColumn, isNumberColumn, isNumbersColumn, Column, ImpositionCompositeColumn, ImpositionCompositesColumn, createImpositionDesc, createImpositionsDesc, ImpositionBoxPlotColumn, createImpositionBoxPlotDesc, CompositeColumn, IMultiLevelColumn, isMultiLevelColumn} from '../model';\nimport {aria, cssClass} from '../styles';\nimport MoreColumnOptionsDialog from './dialogs/MoreColumnOptionsDialog';\nimport {IRankingHeaderContext, IToolbarAction, IOnClickHandler} from './interfaces';\nimport {getToolbar} from './toolbar';\nimport {dialogContext} from './dialogs';\n\n/** @internal */\nexport interface IHeaderOptions {\n  dragAble: boolean;\n  mergeDropAble: boolean;\n  rearrangeAble: boolean;\n  resizeable: boolean;\n  level: number;\n  extraPrefix: string;\n}\n\n/** @internal */\nexport function createHeader(col: Column, ctx: IRankingHeaderContext, options: Partial<IHeaderOptions> = {}) {\n  options = Object.assign({\n    dragAble: true,\n    mergeDropAble: true,\n    rearrangeAble: true,\n    resizeable: true,\n    level: 0,\n    extraPrefix: ''\n  }, options);\n  const node = ctx.document.createElement('section');\n\n  const extra = options.extraPrefix ? (name: string) => `${cssClass(name)} ${cssClass(`${options.extraPrefix}-${name}`)}` : cssClass;\n\n  node.innerHTML = `\n    <div class=\"${extra('label')} ${cssClass('typed-icon')}\">${col.getWidth() < MIN_LABEL_WIDTH ? '&nbsp;' : col.label}</div>\n    <div class=\"${extra('toolbar')}\"></div>\n    <div class=\"${extra('spacing')}\"></div>\n    <div class=\"${extra('handle')} ${cssClass('feature-advanced')} ${cssClass('feature-ui')}\"></div>\n  `;\n\n  // addTooltip(node, col);\n\n  createShortcutMenuItems(<HTMLElement>node.getElementsByClassName(cssClass('toolbar'))[0]!, options.level!, col, ctx);\n\n  toggleToolbarIcons(node, col);\n\n  if (options.dragAble) {\n    dragAbleColumn(node, col, ctx);\n  }\n  if (options.mergeDropAble) {\n    mergeDropAble(node, col, ctx);\n  }\n  if (options.rearrangeAble) {\n    rearrangeDropAble(<HTMLElement>node.getElementsByClassName(cssClass('handle'))[0]!, col, ctx);\n  }\n  if (options.resizeable) {\n    dragWidth(col, node);\n  }\n  return node;\n}\n\n\n/** @internal */\nexport function updateHeader(node: HTMLElement, col: Column, minWidth = MIN_LABEL_WIDTH) {\n  const label = <HTMLElement>node.getElementsByClassName(cssClass('label'))[0]!;\n  label.innerHTML = col.getWidth() < minWidth ? '&nbsp;' : col.label;\n  node.title = col.description ? `${col.label}\\n${col.description}` : col.label;\n  node.dataset.colId = col.id;\n  node.dataset.type = col.desc.type;\n  label.dataset.typeCat = categoryOf(col).name;\n\n  updateIconState(node, col);\n}\n\n\n/** @internal */\nexport function updateIconState(node: HTMLElement, col: Column) {\n  const sort = <HTMLElement>node.getElementsByClassName(cssClass('action-sort'))[0]!;\n  if (sort) {\n    const {asc, priority} = col.isSortedByMe();\n    sort.dataset.sort = asc !== undefined ? asc : '';\n    sort.dataset.type = getSortType(col);\n    if (priority !== undefined) {\n      sort.dataset.priority = (priority + 1).toString();\n    } else {\n      delete sort.dataset.priority;\n    }\n  }\n\n  const sortGroups = <HTMLElement>node.getElementsByClassName(cssClass('action-sortgroup'))[0]!;\n  if (sortGroups) {\n    const {asc, priority} = col.isGroupSortedByMe();\n    sortGroups.dataset.sort = asc !== undefined ? asc : '';\n    sortGroups.dataset.type = getSortType(col);\n    if (priority !== undefined) {\n      sortGroups.dataset.priority = (priority + 1).toString();\n    } else {\n      delete sortGroups.dataset.priority;\n    }\n  }\n\n  const group = <HTMLElement>node.getElementsByClassName(cssClass('action-group'))[0]!;\n  if (group) {\n    const groupedBy = col.isGroupedBy();\n    group.dataset.group = groupedBy >= 0 ? 'true' : 'false';\n    if (groupedBy >= 0) {\n      group.dataset.priority = (groupedBy + 1).toString();\n    } else {\n      delete group.dataset.priority;\n    }\n  }\n\n  const filter = <HTMLElement>node.getElementsByClassName(cssClass('action-filter'))[0]!;\n  if (!filter) {\n    return;\n  }\n  if (col.isFiltered()) {\n    filter.dataset.active = '';\n  } else {\n    delete filter.dataset.active;\n  }\n}\n\n/** @internal */\nexport function actionCSSClass(title: string) {\n  if (title.endsWith('&hellip;')) {\n    title = title.slice(0, -'&hellip;'.length - 1);\n  }\n  if (title.endsWith('By')) {\n    title = title.slice(0, -3);\n  }\n  const clean = title.toLowerCase().replace(/[ +-]/mg, '-');\n  return `${cssClass('action')} ${cssClass(`action-${clean}`)}`;\n}\n\nfunction addIconDOM(node: HTMLElement, col: Column, ctx: IRankingHeaderContext, level: number, showLabel: boolean) {\n  return (action: IToolbarAction) => {\n    node.insertAdjacentHTML('beforeend', `<i data-a=\"${action.options.shortcut === 'only' ? 'o' : action.options.shortcut ? 's' : 'r'}\" title=\"${action.title}\" class=\"${actionCSSClass(action.title.toString())} ${cssClass(`feature-${action.options.featureLevel || 'basic'}`)} ${cssClass(`feature-${action.options.featureCategory || 'others'}`)}\"><span${!showLabel ? ` class=\"${cssClass('aria')}\" aria-hidden=\"true\"` : ''}>${action.title}</span> </i>`);\n    const i = <HTMLElement>node.lastElementChild;\n    i.onclick = (evt) => {\n      evt.stopPropagation();\n      ctx.dialogManager.setHighlightColumn(col);\n      action.onClick(col, <any>evt, ctx, level, !showLabel);\n    };\n    return i;\n  };\n}\n\n/** @internal */\nexport interface IAddIcon {\n  (title: string, onClick: IOnClickHandler): void;\n}\n\n/** @internal */\nexport function createShortcutMenuItems(node: HTMLElement, level: number, col: Column, ctx: IRankingHeaderContext, willAutoHide: boolean = true) {\n  const addIcon = addIconDOM(node, col, ctx, level, false);\n  const toolbar = getToolbar(col, ctx);\n  const shortcuts = toolbar.filter((d) => d.options.shortcut);\n  const hybrids = shortcuts.reduce((a, b) => a + (b.options.shortcut === true ? 1 : 0), 0);\n\n  shortcuts.forEach(addIcon);\n  const moreEntries = toolbar.length - shortcuts.length + hybrids;\n\n  if (shortcuts.length === toolbar.length || (moreEntries === hybrids && !willAutoHide)) {\n    // all visible or just hybrids that will always be visible\n    return;\n  }\n\n  // need a more entry\n  node.insertAdjacentHTML('beforeend', `<i data-a=\"m\" data-m=\"${moreEntries}\" title=\"More &hellip;\" class=\"${actionCSSClass('More')}\">${aria('More &hellip;')}</i>`);\n  const i = <HTMLElement>node.lastElementChild;\n  i.onclick = (evt) => {\n    evt.stopPropagation();\n    ctx.dialogManager.setHighlightColumn(col);\n    const dialog = new MoreColumnOptionsDialog(col, dialogContext(ctx, level, <any>evt), ctx);\n    dialog.open();\n  };\n}\n\n/** @internal */\nexport function createToolbarMenuItems(node: HTMLElement, level: number, col: Column, ctx: IRankingHeaderContext) {\n  const addIcon = addIconDOM(node, col, ctx, level, true);\n  getToolbar(col, ctx).filter((d) => d.options.shortcut !== 'only').forEach(addIcon);\n}\n\n/** @internal */\nfunction toggleRotatedHeader(node: HTMLElement, col: Column, defaultVisibleClientWidth: number) {\n  // rotate header flag if needed\n  const label = <HTMLElement>node.getElementsByClassName(cssClass('label'))[0];\n  if (col.getWidth() < MIN_LABEL_WIDTH) {\n    label.classList.remove(`.${cssClass('rotated')}`);\n    return;\n  }\n  const width = label.clientWidth;\n  const rotated = width <= 0 ? (col.label.length * defaultVisibleClientWidth / 3 * 0.6 > col.getWidth()) : (label.scrollWidth * 0.6 > label.clientWidth);\n  label.classList.toggle(`.${cssClass('rotated')}`, rotated);\n}\n\n/** @internal */\nfunction toggleToolbarIcons(node: HTMLElement, col: Column, defaultVisibleClientWidth = 22.5) {\n  toggleRotatedHeader(node, col, defaultVisibleClientWidth);\n\n  const toolbar = <HTMLElement>node.getElementsByClassName(cssClass('toolbar'))[0];\n  if (toolbar.childElementCount === 0) {\n    return;\n  }\n  const availableWidth = col.getWidth();\n  const actions = Array.from(toolbar.children).map((d) => ({node: <HTMLElement>d, width: d.clientWidth > 0 ? d.clientWidth : defaultVisibleClientWidth}));\n\n  const shortCuts = actions.filter((d) => d.node.dataset.a === 'o');\n  const hybrids = actions.filter((d) => d.node.dataset.a === 's');\n  const moreIcon = actions.find((d) => d.node.dataset.a === 'm');\n  const moreEntries = moreIcon ? parseInt(moreIcon.node.dataset.m!, 10) : 0;\n  const needMore = moreEntries > hybrids.length;\n\n  let total = actions.reduce((a, b) => a + b.width, 0);\n\n  for (const action of actions) {\n    // maybe hide not needed \"more\"\n    action.node.classList.remove(cssClass('hidden'));\n  }\n\n  // all visible\n  if (total < availableWidth) {\n    return;\n  }\n  if (moreIcon && !needMore && (total - moreIcon.width) < availableWidth) {\n    // available space is enougth we can skip the \"more\" and then it fits\n    moreIcon.node.classList.add(cssClass('hidden'));\n    return;\n  }\n\n  for (const action of hybrids.reverse().concat(shortCuts.reverse())) { // back to forth and hybrids earlier than pure shortcuts\n    // hide and check if enough\n    action.node.classList.add(cssClass('hidden'));\n    total -= action.width;\n    if (total < availableWidth) {\n      return;\n    }\n  }\n}\n\n\n/**\n * allow to change the width of a column using dragging the handle\n * @internal\n */\nexport function dragWidth(col: Column, node: HTMLElement) {\n  let ueberElement: HTMLElement;\n  const handle = <HTMLElement>node.getElementsByClassName(cssClass('handle'))[0];\n\n\n  let start = 0;\n  const mouseMove = (evt: MouseEvent) => {\n    evt.stopPropagation();\n    evt.preventDefault();\n    const end = evt.clientX;\n    const delta = end - start;\n    const width = Math.max(0, col.getWidth() + delta);\n\n    if (Math.abs(start - end) < 2) {\n      //ignore\n      return;\n    }\n    start = end;\n    node.style.width = `${width}px`;\n    col.setWidth(width);\n    toggleToolbarIcons(node, col);\n  };\n\n  const mouseUp = (evt: MouseEvent) => {\n    evt.stopPropagation();\n    evt.preventDefault();\n    const end = evt.clientX;\n    node.classList.remove(cssClass('change-width'));\n\n    ueberElement.removeEventListener('mousemove', mouseMove);\n    ueberElement.removeEventListener('mouseup', mouseUp);\n    ueberElement.removeEventListener('mouseleave', mouseUp);\n    node.style.width = null;\n\n    if (Math.abs(start - end) < 2) {\n      //ignore\n      return;\n    }\n    const delta = end - start;\n    const width = Math.max(0, col.getWidth() + delta);\n    col.setWidth(width);\n    toggleToolbarIcons(node, col);\n  };\n  handle.onmousedown = (evt) => {\n    evt.stopPropagation();\n    evt.preventDefault();\n    node.classList.add(cssClass('change-width'));\n\n    start = evt.clientX;\n    ueberElement = <HTMLElement>node.closest('header')!;\n    ueberElement.addEventListener('mousemove', mouseMove);\n    ueberElement.addEventListener('mouseup', mouseUp);\n    ueberElement.addEventListener('mouseleave', mouseUp);\n  };\n  handle.onclick = (evt) => {\n    // avoid resorting\n    evt.stopPropagation();\n    evt.preventDefault();\n  };\n}\n\n/** @internal */\nexport const MIMETYPE_PREFIX = 'text/x-caleydo-lineup-column';\n\n/**\n * allow to drag the column away\n * @internal\n */\nexport function dragAbleColumn(node: HTMLElement, column: Column, ctx: IRankingHeaderContext) {\n  dragAble(node, () => {\n    const ref = JSON.stringify(ctx.provider.toDescRef(column.desc));\n    const data: any = {\n      'text/plain': column.label,\n      [`${MIMETYPE_PREFIX}-ref`]: column.id,\n      [MIMETYPE_PREFIX]: ref\n    };\n    if (isNumberColumn(column)) {\n      data[`${MIMETYPE_PREFIX}-number`] = ref;\n      data[`${MIMETYPE_PREFIX}-number-ref`] = column.id;\n    }\n    if (isCategoricalColumn(column)) {\n      data[`${MIMETYPE_PREFIX}-categorical`] = ref;\n      data[`${MIMETYPE_PREFIX}-categorical-ref`] = column.id;\n    }\n    if (isBoxPlotColumn(column)) {\n      data[`${MIMETYPE_PREFIX}-boxplot`] = ref;\n      data[`${MIMETYPE_PREFIX}-boxplot-ref`] = column.id;\n    }\n    if (isMapColumn(column)) {\n      data[`${MIMETYPE_PREFIX}-map`] = ref;\n      data[`${MIMETYPE_PREFIX}-map-ref`] = column.id;\n    }\n    if (isArrayColumn(column)) {\n      data[`${MIMETYPE_PREFIX}-array`] = ref;\n      data[`${MIMETYPE_PREFIX}-array-ref`] = column.id;\n    }\n    if (isNumbersColumn(column)) {\n      data[`${MIMETYPE_PREFIX}-numbers`] = ref;\n      data[`${MIMETYPE_PREFIX}-numbers-ref`] = column.id;\n    }\n    return {\n      effectAllowed: 'copyMove',\n      data\n    };\n  }, true);\n}\n\n/**\n * dropper for allowing to rearrange (move, copy) columns\n * @internal\n */\nexport function rearrangeDropAble(node: HTMLElement, column: Column, ctx: IRankingHeaderContext) {\n  dropAble(node, [`${MIMETYPE_PREFIX}-ref`, MIMETYPE_PREFIX], (result) => {\n    let col: Column | null = null;\n    const data = result.data;\n    if (!(`${MIMETYPE_PREFIX}-ref` in data)) {\n      const desc = JSON.parse(data[MIMETYPE_PREFIX]);\n      col = ctx.provider.create(ctx.provider.fromDescRef(desc));\n      return col != null && column.insertAfterMe(col) != null;\n    }\n\n    // find by reference\n    const id = data[`${MIMETYPE_PREFIX}-ref`];\n    col = ctx.provider.find(id);\n    if (!col || (col === column && !result.effect.startsWith('copy'))) {\n      return false;\n    }\n    if (result.effect.startsWith('copy')) {\n      col = ctx.provider.clone(col!);\n      return col != null && column.insertAfterMe(col) != null;\n    }\n    // detect whether it is an internal move operation or an real remove/insert operation\n    const toInsertParent = col.parent;\n    if (!toInsertParent) { // no parent will always be a move\n      return column.insertAfterMe(col) != null;\n    }\n    if (toInsertParent === column.parent) {\n      // move operation\n      return toInsertParent.moveAfter(col, column) != null;\n    }\n    col.removeMe();\n    return column.insertAfterMe(col) != null;\n  }, null, true);\n}\n\n/**\n * dropper for allowing to change the order by dropping it at a certain position\n * @internal\n */\nexport function resortDropAble(node: HTMLElement, column: Column, ctx: IRankingHeaderContext, where: 'before' | 'after', autoGroup: boolean) {\n  dropAble(node, [`${MIMETYPE_PREFIX}-ref`, MIMETYPE_PREFIX], (result) => {\n    let col: Column | null = null;\n    const data = result.data;\n    if (`${MIMETYPE_PREFIX}-ref` in data) {\n      const id = data[`${MIMETYPE_PREFIX}-ref`];\n      col = ctx.provider.find(id);\n      if (!col || col === column) {\n        return false;\n      }\n    } else {\n      const desc = JSON.parse(data[MIMETYPE_PREFIX]);\n      col = ctx.provider.create(ctx.provider.fromDescRef(desc));\n      if (col) {\n        column.findMyRanker()!.push(col);\n      }\n    }\n    const ranking = column.findMyRanker()!;\n    if (!col || col === column || !ranking) {\n      return false;\n    }\n\n    const criteria = ranking.getSortCriteria();\n    const groups = ranking.getGroupCriteria();\n\n    const removeFromSort = (col: Column) => {\n      const existing = criteria.findIndex((d) => d.col === col);\n      if (existing >= 0) { // remove existing column but keep asc state\n        return criteria.splice(existing, 1)[0].asc;\n      }\n      return false;\n    };\n\n    // remove the one to add\n    const asc = removeFromSort(col);\n\n    const groupIndex = groups.indexOf(column);\n    const index = criteria.findIndex((d) => d.col === column);\n\n    if (autoGroup && groupIndex >= 0) {\n      // before the grouping, so either ungroup or regroup\n      removeFromSort(column);\n      if (isCategoricalColumn(col)) { // we can group by it\n        groups.splice(groupIndex + (where === 'after' ? 1 : 0), 0, col);\n      } else {\n        // remove all before and shift to sorting + sorting\n        const removed = groups.splice(0, groups.length - groupIndex);\n        criteria.unshift(...removed.reverse().map((d) => ({asc: false, col: d}))); // now a first sorting criteria\n        criteria.unshift({asc, col});\n      }\n    } else if (index < 0) {\n      criteria.push({asc, col});\n    } else if (index === 0 && autoGroup && isCategoricalColumn(col)) {\n      // make group criteria\n      groups.push(col);\n    } else {\n      criteria.splice(index + (where === 'after' ? 1 : 0), 0, {asc, col});\n    }\n\n    if (!equalArrays(groups, ranking.getGroupCriteria())) {\n      ranking.setGroupCriteria(groups);\n    }\n    ranking.setSortCriteria(criteria);\n    return true;\n  }, null, true);\n}\n\n/**\n * dropper for merging columns\n * @internal\n */\nexport function mergeDropAble(node: HTMLElement, column: Column, ctx: IRankingHeaderContext) {\n  const resolveDrop = (result: IDropResult) => {\n    const data = result.data;\n    const copy = result.effect === 'copy';\n    const prefix = MIMETYPE_PREFIX;\n    const key = Object.keys(data).find((d) => d.startsWith(prefix) && d.endsWith('-ref'));\n    if (key) {\n      const id = data[key];\n      let col: Column = ctx.provider.find(id)!;\n      if (copy) {\n        col = ctx.provider.clone(col);\n      } else if (col === column) {\n        return null;\n      } else {\n        col.removeMe();\n      }\n      return col;\n    }\n    const alternative = Object.keys(data).find((d) => d.startsWith(prefix));\n    if (!alternative) {\n      return null;\n    }\n    const desc = JSON.parse(alternative);\n    return ctx.provider.create(ctx.provider.fromDescRef(desc))!;\n  };\n\n  const pushChild = (result: IDropResult) => {\n    const col: Column | null = resolveDrop(result);\n    return col != null && (<CompositeColumn>column).push(col) != null;\n  };\n\n  const mergeImpl = (col: Column | null, desc: IColumnDesc) => {\n    if (col == null) {\n      return false;\n    }\n    const ranking = column.findMyRanker()!;\n    const index = ranking.indexOf(column);\n    const parent = <CompositeColumn>ctx.provider.create(desc);\n    column.removeMe();\n    parent.push(column);\n    parent.push(col);\n    return ranking.insert(parent, index) != null;\n  };\n\n  const mergeWith = (desc: IColumnDesc) => (result: IDropResult) => {\n    const col: Column | null = resolveDrop(result);\n    return mergeImpl(col, desc);\n  };\n\n  const all = [`${MIMETYPE_PREFIX}-ref`, MIMETYPE_PREFIX];\n  const numberish = [`${MIMETYPE_PREFIX}-number-ref`, `${MIMETYPE_PREFIX}-number`];\n  const categorical = [`${MIMETYPE_PREFIX}-categorical-ref`, `${MIMETYPE_PREFIX}-categorical`];\n  const boxplot = [`${MIMETYPE_PREFIX}-boxplot-ref`, `${MIMETYPE_PREFIX}-boxplot`];\n  const numbers = [`${MIMETYPE_PREFIX}-numbers-ref`, `${MIMETYPE_PREFIX}-numbers`];\n\n  node.dataset.draginfo = '+';\n  if (column instanceof ImpositionCompositeColumn) {\n    return dropAble(node, categorical.concat(numberish), pushChild, (e) => {\n      if (hasDnDType(e, ...categorical)) {\n        node.dataset.draginfo = 'Color by';\n        return;\n      }\n      if (hasDnDType(e, ...numberish)) {\n        node.dataset.draginfo = 'Wrap';\n      }\n    }, false, () => column.children.length < 2);\n  }\n  if (column instanceof ImpositionBoxPlotColumn) {\n    return dropAble(node, categorical.concat(boxplot), pushChild, (e) => {\n      if (hasDnDType(e, ...categorical)) {\n        node.dataset.draginfo = 'Color by';\n        return;\n      }\n      if (hasDnDType(e, ...boxplot)) {\n        node.dataset.draginfo = 'Wrap';\n      }\n    }, false, () => column.children.length < 2);\n  }\n  if (column instanceof ImpositionCompositesColumn) {\n    return dropAble(node, categorical.concat(numbers), pushChild, (e) => {\n      if (hasDnDType(e, ...categorical)) {\n        node.dataset.draginfo = 'Color by';\n        return;\n      }\n      if (hasDnDType(e, ...numbers)) {\n        node.dataset.draginfo = 'Wrap';\n      }\n    }, false, () => column.children.length < 2);\n  }\n  if (isMultiLevelColumn(column)) {\n    // stack column or nested\n    return dropAble(node, (<IMultiLevelColumn>column).canJustAddNumbers ? numberish : all, pushChild);\n  }\n  if (column instanceof CompositeColumn) {\n    return dropAble(node, (<CompositeColumn>column).canJustAddNumbers ? numberish : all, pushChild);\n  }\n  if (isNumbersColumn(column)) {\n    node.dataset.draginfo = 'Color by';\n    return dropAble(node, categorical, mergeWith(createImpositionsDesc()));\n  }\n  if (isBoxPlotColumn(column)) {\n    node.dataset.draginfo = 'Color by';\n    return dropAble(node, categorical, mergeWith(createImpositionBoxPlotDesc()));\n  }\n  if (isNumberColumn(column)) {\n    node.dataset.draginfo = 'Merge';\n    return dropAble(node, categorical.concat(numberish), (result: IDropResult, evt: DragEvent) => {\n      const col: Column | null = resolveDrop(result);\n      if (col == null) {\n        return false;\n      }\n      if (isCategoricalColumn(col)) {\n        return mergeImpl(col, createImpositionDesc());\n      }\n      if (isNumberColumn(col)) {\n        return mergeImpl(col, evt.shiftKey ? createReduceDesc() : createStackDesc());\n      }\n      return false;\n    }, (e) => {\n      if (hasDnDType(e, ...categorical)) {\n        node.dataset.draginfo = 'Color by';\n        return;\n      }\n      if (hasDnDType(e, ...numberish)) {\n        node.dataset.draginfo = e.shiftKey ? 'Min/Max' : 'Sum';\n      }\n    });\n  }\n  node.dataset.draginfo = 'Group';\n  return dropAble(node, all, mergeWith(createNestedDesc()));\n}\n","import {debounce, clear, suffix} from '../../internal';\nimport {CompositeColumn} from '../../model';\nimport {createHeader, updateHeader} from '../header';\nimport {IRankingHeaderContext} from '../interfaces';\nimport ADialog, {IDialogContext} from './ADialog';\nimport {cssClass, engineCssClass} from '../../styles';\n\n/** @internal */\nexport default class CompositeChildrenDialog extends ADialog {\n\n  private readonly id: string;\n\n  constructor(private readonly column: CompositeColumn, dialog: IDialogContext, private ctx: IRankingHeaderContext) {\n    super(dialog);\n    this.id = `.dialog${Math.random().toString(36).slice(-8).substr(0, 3)}`;\n  }\n\n  destroy() {\n    this.column.on(suffix(this.id, CompositeColumn.EVENT_ADD_COLUMN, CompositeColumn.EVENT_REMOVE_COLUMN), null);\n    super.destroy();\n  }\n\n  protected build(node: HTMLElement) {\n    node.classList.add(cssClass('dialog-sub-nested'));\n    const createChildren = () => {\n      this.column.children.forEach((c) => {\n        const n = createHeader(c, this.ctx, {\n          mergeDropAble: false,\n          resizeable: false,\n          level: this.dialog.level + 1,\n          extraPrefix: 'sub'\n        });\n        n.className = cssClass('header');\n        updateHeader(n, c);\n        const summary = this.ctx.summaryRenderer(c, false);\n        const summaryNode = this.ctx.asElement(summary.template);\n        summaryNode.dataset.renderer = c.getSummaryRenderer();\n        summaryNode.classList.add(cssClass('summary'), cssClass('renderer'), cssClass('th-summary'));\n\n        const r = summary.update(summaryNode);\n        if (r) {\n          summaryNode.classList.add(engineCssClass('loading'));\n          r.then(() => {\n            summaryNode.classList.remove(engineCssClass('loading'));\n          });\n        }\n        n.appendChild(summaryNode);\n        node.appendChild(n);\n      });\n    };\n    createChildren();\n\n    this.column.on(suffix(this.id, CompositeColumn.EVENT_ADD_COLUMN, CompositeColumn.EVENT_REMOVE_COLUMN), debounce(() => {\n      if (!node.parentElement) {\n        // already closed\n        this.destroy();\n        return;\n      }\n      clear(node);\n      createChildren();\n    }));\n  }\n}\n","import {HierarchyColumn, ICategoryInternalNode, ICutOffNode, resolveInnerNodes} from '../../model';\nimport ADialog, {IDialogContext} from './ADialog';\n\n/** @internal */\nexport default class CutOffHierarchyDialog extends ADialog {\n\n  private readonly innerNodes: ICategoryInternalNode[];\n  private readonly innerNodePaths: string[];\n\n  private readonly before: ICutOffNode;\n\n\n  constructor(private readonly column: HierarchyColumn, dialog: IDialogContext, private readonly idPrefix: string) {\n    super(dialog, {\n      fullDialog: true\n    });\n\n    this.innerNodes = resolveInnerNodes(this.column.hierarchy);\n    this.innerNodePaths = this.innerNodes.map((n) => n.path);\n    this.before = column.getCutOff();\n  }\n\n  protected build(node: HTMLElement) {\n    node.insertAdjacentHTML('beforeend', `\n        <input type=\"text\" value=\"${this.before.node.label}\" required=\"required\" autofocus=\"autofocus\" list=\"ui${this.idPrefix}lineupHierarchyList\" placeholder=\"cut off node\">\n        <input type=\"number\" value=\"${isFinite(this.before.maxDepth) ? this.before.maxDepth : ''}\" placeholder=\"max depth (&infin;)\">\n        <datalist id=\"ui${this.idPrefix}lineupHierarchyList\">${this.innerNodes.map((node) => `<option value=\"${node.path}\">${node.label}</option>`)}</datalist>`);\n\n    //custom validation\n    const innerNodePaths = this.innerNodePaths;\n    this.findInput('input[type=\"text\"]').addEventListener('change', function (this: HTMLInputElement) {\n      const value = this.value;\n      if (innerNodePaths.indexOf(value) < 0) {\n        this.setCustomValidity('invalid node');\n      } else {\n        this.setCustomValidity('');\n      }\n    }, {\n      passive: true\n    });\n  }\n\n  protected reset() {\n    this.findInput('input[type=\"text\"]').value = this.before.node.label;\n    this.findInput('input[type=\"number\"]').value = isFinite(this.before.maxDepth) ? String(this.before.maxDepth) : '';\n    this.column.setCutOff(this.before);\n  }\n\n  protected submit() {\n    const newNode = this.findInput('input[type=\"text\"]').value;\n    const newNodeIndex = this.innerNodePaths.indexOf(newNode);\n    const node = this.innerNodes[newNodeIndex];\n    const maxDepthText = this.findInput('input[type=\"number\"]').value;\n    const maxDepth = maxDepthText === '' ? Infinity : parseInt(maxDepthText, 10);\n    this.column.setCutOff({node, maxDepth});\n    return true;\n  }\n}\n","import {filterMissingMarkup, findFilterMissing} from '../missing';\nimport ADialog, {IDialogContext} from './ADialog';\nimport {updateFilterState, uniqueId} from './utils';\nimport {DateColumn, IDateFilter} from '../../model';\nimport {isDummyDateFilter, noDateFilter, shiftFilterDateDay} from '../../model/internalDate';\nimport {timeFormat} from 'd3-time-format';\n\n/** @internal */\nexport default class DateFilterDialog extends ADialog {\n\n  constructor(private readonly column: DateColumn, dialog: IDialogContext) {\n    super(dialog);\n  }\n\n  private updateFilter(filter: IDateFilter | null) {\n    updateFilterState(this.attachment, this.column, filter != null && !isDummyDateFilter(filter));\n    this.column.setFilter(filter);\n  }\n\n  reset() {\n    this.forEach('input[type=date]', (n: HTMLInputElement) => n.value = '');\n    this.forEach('input[type=checkbox]', (n: HTMLInputElement) => n.checked = false);\n    this.updateFilter(null);\n  }\n\n  submit() {\n    const filterMissing = findFilterMissing(this.node).checked;\n    const from: Date | null = this.findInput('input[name=\"from\"]').valueAsDate;\n    const to: Date | null = this.findInput('input[name=\"to\"]').valueAsDate;\n    this.updateFilter({\n      filterMissing,\n      min: from == null ? -Infinity : shiftFilterDateDay(from.getTime(), 'min'),\n      max: to == null ? +Infinity : shiftFilterDateDay(to.getTime(), 'max')\n    });\n    return true;\n  }\n\n  protected build(node: HTMLElement) {\n    const act = this.column.getFilter() || noDateFilter();\n    const id = uniqueId(this.dialog.idPrefix);\n\n    const f = timeFormat('%Y-%m-%d');\n\n    node.insertAdjacentHTML('beforeend', `\n    <label for=\"${id}F\">From: </label>\n    <input type=\"date\" id=\"${id}F\" name=\"from\" placeholder=\"From...\" autofocus value=\"${isFinite(act.min) ? f(new Date(act.min)) : ''}\">\n    <label for=\"${id}T\">To: </label>\n    <input type=\"date\" id=\"${id}T\" name=\"to\" placeholder=\"To...\" value=\"${isFinite(act.max) ? f(new Date(act.max)) : ''}\">\n    ${filterMissingMarkup(act.filterMissing)}`);\n\n    const update = () => {\n      this.submit();\n    };\n\n    this.forEach('input', (n: HTMLInputElement) => n.onchange = update);\n  }\n}\n","import {LinkColumn, LinkMapColumn, LinksColumn} from '../../model';\nimport ADialog, {IDialogContext} from './ADialog';\n\n/** @internal */\nexport default class EditPatternDialog extends ADialog {\n\n  constructor(private readonly column: LinkColumn | LinksColumn | LinkMapColumn, dialog: IDialogContext, private readonly idPrefix: string) {\n    super(dialog, {\n      fullDialog: true\n    });\n  }\n\n  protected build(node: HTMLElement) {\n    const templates = this.column.patternTemplates;\n    node.insertAdjacentHTML('beforeend', `<strong>Edit Pattern (access via $\\{value}, $\\{item})</strong><input\n        type=\"text\"\n        size=\"30\"\n        value=\"${this.column.getPattern()}\"\n        required\n        autofocus\n        placeholder=\"pattern (access via $\\{value}, $\\{item})\"\n        ${templates.length > 0 ? `list=\"ui${this.idPrefix}lineupPatternList\"` : ''}\n      >`);\n    if (templates.length > 0) {\n      node.insertAdjacentHTML('beforeend', `<datalist id=\"ui${this.idPrefix}lineupPatternList\">${templates.map((t) => `<option value=\"${t}\">`)}</datalist>`);\n    }\n  }\n\n  protected reset() {\n    this.node.querySelector('input')!.value = '';\n    this.column.setPattern('');\n  }\n\n  protected submit() {\n    const newValue = this.node.querySelector('input')!.value;\n    this.column.setPattern(newValue);\n    return true;\n  }\n}\n","import {Column} from '../../model';\nimport ADialog, {IDialogContext} from './ADialog';\nimport {uniqueId, forEach} from './utils';\nimport {getToolbarDialogAddons} from '../toolbar';\nimport {IRankingHeaderContext, IToolbarDialogAddon} from '../interfaces';\nimport {cssClass} from '../../styles';\n\n/** @internal */\nexport default class GroupDialog extends ADialog {\n  private readonly addons: IToolbarDialogAddon[];\n\n  constructor(private readonly column: Column, dialog: IDialogContext, private readonly ctx: IRankingHeaderContext) {\n    super(dialog);\n    this.addons = getToolbarDialogAddons(this.column, 'group', ctx);\n  }\n\n  protected build(node: HTMLElement) {\n    for(const addon of this.addons) {\n      this.node.insertAdjacentHTML('beforeend', `<strong>${addon.title}</strong>`);\n      addon.append(this.column, this.node, this.dialog, this.ctx);\n    }\n\n    sortOrder(node, this.column, this.dialog.idPrefix);\n  }\n}\n\nfunction sortOrder(node: HTMLElement, column: Column, idPrefix: string) {\n  const ranking = column.findMyRanker()!;\n  const current = ranking.getGroupCriteria();\n  let order = current.indexOf(column);\n  let enabled = order >= 0;\n\n  if (order < 0) {\n    order = current.length;\n  }\n\n  const id = uniqueId(idPrefix);\n  node.insertAdjacentHTML('afterbegin', `\n        <strong>Group By</strong>\n        <label class=\"${cssClass('checkbox')}\"><input type=\"radio\" name=\"grouped\" value=\"true\" ${enabled ? 'checked' : ''} ><span>Enabled</span></label>\n        <label class=\"${cssClass('checkbox')}\"><input type=\"radio\" name=\"grouped\" value=\"false\" ${!enabled ? 'checked' : ''} ><span>Disabled</span></label>\n        <strong>Group Priority</strong>\n        <input type=\"number\" id=\"${id}P\" step=\"1\" min=\"1\" max=\"${current.length + 1}\" value=\"${order + 1}\">\n    `);\n\n  const updateDisabled = (disable: boolean) => {\n    forEach(node, 'input:not([name=grouped]), select, textarea', (d: HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement) => {\n      d.disabled = disable;\n    });\n  };\n  updateDisabled(!enabled);\n\n  const trigger = () => {\n    ranking.groupBy(column, !enabled ? -1 : order);\n    updateDisabled(!enabled);\n  };\n\n  forEach(node, 'input[name=grouped]', (n: HTMLInputElement) => {\n    n.addEventListener('change', () => {\n      enabled = n.value === 'true';\n      trigger();\n    }, {\n      passive: true\n    });\n  });\n  {\n    const priority = (<HTMLInputElement>node.querySelector(`#${id}P`));\n    priority.addEventListener('change', () => {\n      order = parseInt(priority.value, 10) - 1;\n      trigger();\n    }, {\n      passive: true\n    });\n  }\n}\n","import {round, similar, dragHandle, IDragHandleOptions} from '../../internal';\nimport ADialog, {IDialogContext} from './ADialog';\nimport {cssClass} from '../../styles';\n\nfunction clamp(v: number) {\n  return Math.max(Math.min(v, 100), 0);\n}\n\n/** @internal */\nexport interface IMappingAdapter {\n  destroyed(self: MappingLine): void;\n\n  updated(self: MappingLine): void;\n\n  domain(): number[];\n\n  normalizeRaw(v: number): number;\n\n  unnormalizeRaw(v: number): number;\n\n  dialog: IDialogContext;\n}\n\n/** @internal */\nexport default class MappingLineDialog extends ADialog {\n  constructor(private readonly line: {destroy(): void, domain: number, range: number, frozen: boolean, update(domain: number, range: number): void}, dialog: IDialogContext, private readonly adapter: IMappingAdapter) {\n    super(dialog);\n  }\n\n  build(node: HTMLElement) {\n    const domain = this.adapter.domain();\n    node.insertAdjacentHTML('beforeend', `\n        <strong>Input Domain Value (min ... max)</strong>\n        <input type=\"number\" value=\"${round(this.adapter.unnormalizeRaw(this.line.domain), 3)}\" ${this.line.frozen ? 'readonly' : ''} autofocus required min=\"${domain[0]}\" max=\"${domain[1]}\" step=\"any\">\n        <strong>Output Normalized Value (0 ... 1)</strong>\n        <input type=\"number\" value=\"${round(this.line.range / 100, 3)}\" required min=\"0\" max=\"1\" step=\"any\">\n        <button type=\"button\" ${this.line.frozen ? 'disabled' : ''} >Remove Mapping Line</button>\n      `);\n\n    this.forEach('input', (d: HTMLInputElement) => d.onchange = () => this.submit());\n    this.find('button').addEventListener('click', () => {\n      this.destroy();\n      this.line.destroy();\n    }, {\n      passive: true\n    });\n  }\n\n  protected submit() {\n    if (!this.node.checkValidity()) {\n      return false;\n    }\n    const domain = this.adapter.normalizeRaw(this.findInput('input[type=number]').valueAsNumber);\n    const range = this.findInput('input[type=number]:last-of-type').valueAsNumber * 100;\n    this.line.update(domain, range);\n    return true;\n  }\n}\n\n/** @internal */\nexport class MappingLine {\n  readonly node: SVGGElement;\n\n  constructor(g: SVGGElement, public domain: number, public range: number, private readonly adapter: IMappingAdapter) {\n    g.insertAdjacentHTML('beforeend', `<g class=\"${cssClass('dialog-mapper-mapping')}\" transform=\"translate(${domain},0)\">\n      <line x1=\"0\" x2=\"${range - domain}\" y2=\"60\"></line>\n      <line x1=\"0\" x2=\"${range - domain}\" y2=\"60\"></line>\n      <circle r=\"3\"></circle>\n      <circle cx=\"${range - domain}\" cy=\"60\" r=\"3\"></circle>\n      <title>Drag the anchor circle to change the mapping, shift click to edit</title>\n    </g>`);\n    this.node = <SVGGElement>g.lastElementChild!;\n\n    // freeze 0 and 100 domain = raw domain ones\n    this.node.classList.toggle(cssClass('frozen'), similar(0, domain) || similar(domain, 100));\n    {\n      let beforeDomain: number;\n      let beforeRange: number;\n      let shiftDomain: number;\n      let shiftRange: number;\n\n      const normalize = (x: number) => x * 100 / g.getBoundingClientRect().width;\n\n      const common: Partial<IDragHandleOptions> =  {\n        container: g.parentElement!,\n        filter: (evt) => evt.button === 0 && !evt.shiftKey,\n        onStart: (_, x) => {\n          beforeDomain = this.domain;\n          beforeRange = this.range;\n          const normalized = normalize(x);\n          shiftDomain = this.domain - normalized;\n          shiftRange = this.range - normalized;\n        } ,\n        onEnd: () => {\n          if (!similar(beforeDomain, this.domain) || !similar(beforeRange, this.range)) {\n            this.adapter.updated(this);\n          }\n        }\n      };\n\n      const line = this.node.querySelector<SVGLineElement>('line:first-of-type')!;\n      dragHandle(line, { // line\n        ...common,\n        onDrag: (_, x) => {\n          const normalized = normalize(x);\n          this.update(clamp(normalized + shiftDomain), clamp(normalized + shiftRange));\n        },\n      });\n\n      const domainCircle = this.node.querySelector<SVGLineElement>('circle:first-of-type')!;\n      dragHandle(domainCircle, {\n        ...common,\n        onDrag: (_, x) => {\n          const normalized = normalize(x);\n          this.update(clamp(normalized), this.range);\n        },\n      });\n      const rangeCircle = this.node.querySelector<SVGLineElement>('circle:last-of-type')!;\n      dragHandle(rangeCircle, {\n        ...common,\n        onDrag: (_, x) => {\n          const normalized = normalize(x);\n          this.update(this.domain, clamp(normalized));\n        },\n      });\n    }\n\n    this.node.onclick = (evt) => {\n      if (!evt.shiftKey) {\n        return;\n      }\n      const ctx = {\n        manager: this.adapter.dialog.manager,\n        level: this.adapter.dialog.level + 1,\n        attachment: <any>this.node,\n        idPrefix: this.adapter.dialog.idPrefix\n      };\n      const dialog = new MappingLineDialog(this, ctx, this.adapter);\n      dialog.open();\n    };\n  }\n\n  get frozen() {\n    return this.node.classList.contains(cssClass('frozen'));\n  }\n\n  destroy() {\n    this.node.remove();\n    this.adapter.destroyed(this);\n  }\n\n  update(domain: number, range: number) {\n    if (similar(domain, this.domain) && similar(range, this.range)) {\n      return;\n    }\n    if (this.frozen) {\n      domain = this.domain;\n    }\n    this.domain = domain;\n    this.range = range;\n    this.node.setAttribute('transform', `translate(${domain},0)`);\n    const shift = range - domain;\n    Array.from(this.node.querySelectorAll<SVGLineElement>('line')).forEach((d) => d.setAttribute('x2', String(shift)));\n    this.node.querySelector<SVGCircleElement>('circle[cx]')!.setAttribute('cx', String(shift));\n  }\n}\n","import {ISequence, round} from '../../internal';\nimport {IMapAbleColumn, IMappingFunction, isMissingValue, isMapAbleColumn} from '../../model';\nimport {IRankingHeaderContext} from '../interfaces';\nimport ADialog, {IDialogContext} from './ADialog';\nimport {IMappingAdapter, MappingLine} from './MappingLineDialog';\nimport {cssClass} from '../../styles';\nimport {ScaleMappingFunction, ScriptMappingFunction} from '../../model/MappingFunction';\n\n/** @internal */\nexport default class MappingDialog extends ADialog {\n\n  private scale: IMappingFunction;\n\n  private readonly mappingLines: MappingLine[] = [];\n  private rawDomain: [number, number];\n\n  private readonly data: Promise<ISequence<number>>;\n  private readonly idPrefix: string;\n\n  private readonly mappingAdapter: IMappingAdapter = {\n    destroyed: (self: MappingLine) => {\n      this.mappingLines.splice(this.mappingLines.indexOf(self), 1);\n    },\n    updated: () => this.updateLines(this.computeScale()),\n    domain: () => this.rawDomain,\n    normalizeRaw: this.normalizeRaw.bind(this),\n    unnormalizeRaw: this.unnormalizeRaw.bind(this),\n    dialog: this.dialog\n  };\n\n  constructor(private readonly column: IMapAbleColumn, dialog: IDialogContext, ctx: IRankingHeaderContext) {\n    super(dialog, {\n      fullDialog: true\n    });\n\n    this.idPrefix = `me${ctx.idPrefix}`;\n    this.scale = this.column.getMapping().clone();\n    const domain = this.scale.domain;\n    this.rawDomain = [domain[0], domain[domain.length - 1]];\n\n    this.data = Promise.resolve(ctx.provider.mappingSample(column));\n  }\n\n  private get scaleType() {\n    if ((this.scale instanceof ScriptMappingFunction)) {\n      return 'script';\n    }\n    if (this.scale instanceof ScaleMappingFunction) {\n      const base = this.scale.scaleType;\n      if (base !== 'linear') {\n        return base;\n      }\n      // check if invert or absolute\n      const r = this.scale.range;\n      if (r.length === 2 && r[0] === 1 && r[1] === 0) {\n        return 'linear_invert';\n      }\n      if (r.length === 3 && r[0] === 1 && r[1] === 0 && r[2] === 1) {\n        return 'linear_abs';\n      }\n      return 'linear';\n    }\n    return 'unknown';\n  }\n\n  build(node: HTMLElement) {\n    node.classList.add(cssClass('dialog-mapper'));\n\n    const r = this.column.findMyRanker();\n    const others = !r ? [] : r.flatColumns.filter((d) => isMapAbleColumn(d) && d !== this.column);\n\n    node.insertAdjacentHTML('beforeend', `\n        <div><label for=\"${this.idPrefix}mapping_type\"><strong>Normalization Scaling:</strong></label><select id=\"${this.idPrefix}mapping_type\" class=\"browser-default\">\n        <option value=\"linear\">Linear</option>\n        <option value=\"linear_invert\">Invert</option>\n        <option value=\"linear_abs\">Absolute</option>\n        <option value=\"log\">Log</option>\n        <option value=\"pow1.1\">Pow 1.1</option>\n        <option value=\"pow2\">Pow 2</option>\n        <option value=\"pow3\">Pow 3</option>\n        <option value=\"sqrt\">Sqrt</option>\n        <option value=\"script\">Custom Script</option>\n        <option value=\"unknown\">Unknown</option>\n        ${others.length > 0 ? `<optgroup label=\"Copy From\">${others.map((d) => `<option value=\"copy_${d.id}\">${d.label}</option>`).join('')}</optgroup>`: ''}\n      </select>\n      </div>\n        <div><strong>Domain (min - max): </strong><input id=\"${this.idPrefix}min\" required type=\"number\" value=\"${round(this.rawDomain[0], 3)}\" step=\"any\"> - <input id=\"${this.idPrefix}max\" required type=\"number\" value=\"${round(this.rawDomain[1], 3)}\" step=\"any\"></div>\n        <strong style=\"text-align: center\">Input Domain (min - max)</strong>\n        <svg class=\"${cssClass('dialog-mapper-details')}\" viewBox=\"0 0 106 66\">\n           <g transform=\"translate(3,3)\">\n              <line x2=\"100\"></line>\n              <rect y=\"-3\" width=\"100\" height=\"10\"></rect>\n              <line y1=\"60\" x2=\"100\" y2=\"60\"></line>\n              <rect y=\"36\" width=\"100\" height=\"10\"></rect>\n           </g>\n        </svg>\n        <strong style=\"text-align: center; margin-top: 0\">Output Normalized Domain (0 - 1)</strong>\n        <div class=\"${cssClass('dialog-mapper-script')}\">\n          <strong>Custom Normalization Script</strong>\n          <textarea class=\"${cssClass('textarea')}\"></textarea>\n        </div>`);\n\n    const g = <SVGGElement>node.querySelector(`.${cssClass('dialog-mapper-details')} > g`);\n\n    this.forEach(`.${cssClass('dialog-mapper-details')} rect`, (d: SVGRectElement) => d.onclick = (evt) => {\n      evt.preventDefault();\n      evt.stopPropagation();\n      const bb = d.getBoundingClientRect();\n      const x = round((evt.x - bb.left) * 100 / bb.width, 2);\n      const m = new MappingLine(g, x, x, this.mappingAdapter);\n      this.mappingLines.push(m);\n    });\n\n    {\n\n      const select = <HTMLSelectElement>this.find('select');\n      const textarea = <HTMLTextAreaElement>this.find('textarea');\n      select.onchange = (evt) => {\n        const select = <HTMLSelectElement>evt.currentTarget;\n        switch (select.value) {\n          case 'linear_invert':\n            this.scale = new ScaleMappingFunction(this.rawDomain.slice(), 'linear', [1, 0]);\n            break;\n          case 'linear_abs':\n            this.scale = new ScaleMappingFunction([this.rawDomain[0], (this.rawDomain[1] - this.rawDomain[0]) / 2, this.rawDomain[1]], 'linear', [1, 0, 1]);\n            break;\n          case 'script':\n            const s = new ScriptMappingFunction(this.rawDomain.slice());\n            this.scale = s;\n            textarea.value = s.code;\n            break;\n          case 'unknown':\n            // clone original again\n            this.scale = this.column.getOriginalMapping().clone();\n            break;\n          default:\n            if (select.value.startsWith('copy_')) {\n              this.copyMapping(select.value.slice('copy_'.length));\n              return;\n            }\n            this.scale = new ScaleMappingFunction(this.rawDomain.slice(), select.value, [0, 1]);\n            break;\n        }\n        this.createMappings();\n        node.dataset.scale = select.value;\n        this.updateLines();\n      };\n      const scaleType = node.dataset.scale = this.scaleType;\n      select.selectedIndex = Array.from(select.options).findIndex((d) => d.value === scaleType);\n\n      if (scaleType === 'script') {\n        textarea.value = (<ScriptMappingFunction>this.scale).code;\n      }\n      this.createMappings();\n    }\n\n    {\n      this.forEach(`#${this.idPrefix}min, #${this.idPrefix}max`, (d: HTMLInputElement, i) => d.onchange = () => {\n        const v = d.valueAsNumber;\n        if (v === this.rawDomain[i]) {\n          d.setCustomValidity('');\n          return;\n        }\n        const other = this.rawDomain[1 - i];\n        if (isNaN(v) || (i === 0 && v >= other) || (i === 1 && v <= other)) {\n          d.setCustomValidity(`value has to be ${i === 0 ? '<= max' : '>= min'}`);\n          return;\n        }\n        d.setCustomValidity('');\n        this.rawDomain[i] = v;\n        this.scale.domain = this.rawDomain.slice();\n        this.applyMapping(this.scale);\n        this.updateLines();\n      });\n    }\n\n    this.data.then((values) => {\n      values.forEach((v) => {\n        if (!isMissingValue(v)) {\n          g.insertAdjacentHTML('afterbegin', `<line data-v=\"${v}\" x1=\"${round(this.normalizeRaw(v), 2)}\" x2=\"${round(this.scale.apply(v) * 100, 2)}\" y2=\"60\"></line>`);\n        }\n      });\n    });\n  }\n\n  private createMappings() {\n    this.mappingLines.splice(0, this.mappingLines.length).forEach((d) => d.destroy());\n    if (!(this.scale instanceof ScaleMappingFunction)) {\n      return;\n    }\n    const g = <SVGGElement>this.node.querySelector(`.${cssClass('dialog-mapper-details')} > g`);\n    const domain = this.scale.domain;\n    const range = this.scale.range;\n    for (let i = 0; i < domain.length; ++i) {\n      this.mappingLines.push(new MappingLine(g, this.normalizeRaw(domain[i]), range[i] * 100, this.mappingAdapter));\n    }\n  }\n\n  private update() {\n    const scaleType = this.node.dataset.scale = this.scaleType;\n    const select = <HTMLSelectElement>this.find('select');\n    select.selectedIndex = Array.from(select.options).findIndex((d) => d.value === scaleType);\n    if (scaleType === 'script') {\n      (<HTMLTextAreaElement>this.find('textarea')).value = (<ScriptMappingFunction>this.scale).code;\n    }\n    const domain = this.scale.domain;\n    this.forEach(`.${cssClass('dialog-mapper-details')} input[type=number]`, (d: HTMLInputElement, i) => {\n      d.value = String(domain[i]);\n    });\n  }\n\n  private updateLines(scale = this.scale) {\n    this.forEach(`.${cssClass('dialog-mapper-details')}  > g > line[x1]`, (d: SVGLineElement) => {\n      const v = parseFloat(d.getAttribute('data-v')!);\n      d.setAttribute('x1', round(this.normalizeRaw(v), 2).toString());\n      d.setAttribute('x2', round(scale.apply(v) * 100, 2).toString());\n    });\n  }\n\n  private applyMapping(newScale: IMappingFunction) {\n    this.column.setMapping(newScale);\n  }\n\n  protected reset() {\n    this.scale = this.column.getOriginalMapping();\n    this.rawDomain = <[number, number]>this.scale.domain.slice();\n    this.applyMapping(this.scale);\n    this.update();\n    this.updateLines();\n    this.createMappings();\n  }\n\n  private copyMapping(columnId: string) {\n    const r = this.column.findMyRanker();\n    if (!r) {\n      return;\n    }\n    const ref = <IMapAbleColumn>r.find(columnId)!;\n    this.scale = ref.getMapping().clone();\n    this.rawDomain = <[number, number]>this.scale.domain.slice();\n    this.applyMapping(this.scale);\n    this.update();\n    this.updateLines();\n  }\n\n  private normalizeRaw(d: number) {\n    const v = (d - this.rawDomain[0]) * 100 / (this.rawDomain[1] - this.rawDomain[0]);\n    return Math.max(Math.min(v, 100), 0); // clamp\n  }\n\n  private unnormalizeRaw(d: number) {\n    return (d) * (this.rawDomain[1] - this.rawDomain[0]) / 100 + this.rawDomain[0];\n  }\n\n  private computeScale() {\n    const type = this.scaleType;\n    if (type === 'script') {\n      return new ScriptMappingFunction(this.rawDomain.slice(), this.node.querySelector('textarea')!.value);\n    }\n    this.mappingLines.sort((a, b) => a.domain - b.domain);\n    const domain = this.mappingLines.map((d) => this.unnormalizeRaw(d.domain));\n    const range = this.mappingLines.map((d) => d.range / 100);\n    return new ScaleMappingFunction(domain, type, range);\n  }\n\n  protected submit() {\n    if (!this.node.checkValidity()) {\n      return false;\n    }\n    const scale = this.computeScale();\n    this.applyMapping(scale);\n    return true;\n  }\n}\n","import {IMapAbleColumn} from '../../model';\nimport {ISummaryRenderer} from '../../renderer';\nimport {cssClass, engineCssClass} from '../../styles';\nimport {IRankingHeaderContext} from '../interfaces';\nimport ADialog, {IDialogContext} from './ADialog';\n\n/** @internal */\nexport default class NumberFilterDialog extends ADialog {\n  private readonly summary: ISummaryRenderer;\n\n  constructor(private readonly column: IMapAbleColumn, dialog: IDialogContext, private readonly ctx: IRankingHeaderContext) {\n    super(dialog);\n\n    this.summary = ctx.summaryRenderer(this.column, true);\n  }\n\n  build(node: HTMLElement) {\n    node.classList.add(cssClass('dialog-mapper'));\n\n    // patch in lu-summary and renderer\n    const summary = this.ctx.asElement(this.summary.template);\n    summary.classList.add(cssClass('summary'), cssClass('renderer'));\n    summary.dataset.renderer = this.column.getSummaryRenderer();\n    summary.dataset.interactive = '';\n    node.appendChild(summary);\n\n    const summaryNode = <HTMLElement>this.node.getElementsByClassName(cssClass('summary'))[0]!;\n    const r = this.summary.update(summaryNode);\n    if (!r) {\n      return;\n    }\n    summaryNode.classList.add(engineCssClass('loading'));\n    r.then(() => {\n      summaryNode.classList.remove(engineCssClass('loading'));\n    });\n  }\n}\n","import {EAdvancedSortMethod, ReduceColumn} from '../../model';\nimport ADialog, {IDialogContext} from './ADialog';\nimport {sortMethods} from './utils';\n\n/** @internal */\nexport default class ReduceDialog extends ADialog {\n  constructor(private readonly column: ReduceColumn, dialog: IDialogContext) {\n    super(dialog);\n  }\n\n  protected build(node: HTMLElement) {\n    const wrapper = {\n      getSortMethod: () => this.column.getReduce(),\n      setSortMethod: (s: EAdvancedSortMethod) => this.column.setReduce(s)\n    };\n    sortMethods(node, wrapper, Object.keys(EAdvancedSortMethod));\n  }\n}\n","import {Column, IColumnMetaData} from '../../model';\nimport ADialog, {IDialogContext} from './ADialog';\nimport {cssClass} from '../../styles';\n\n/** @internal */\nexport default class RenameDialog extends ADialog {\n\n  private readonly before: IColumnMetaData;\n\n  constructor(private readonly column: Column, dialog: IDialogContext) {\n    super(dialog, {\n      fullDialog: true\n    });\n    this.before = column.getMetaData();\n  }\n\n  protected build(node: HTMLElement) {\n    node.classList.add(cssClass('dialog-rename'));\n    node.insertAdjacentHTML('beforeend', `\n      <input type=\"text\" value=\"${this.column.label}\" required autofocus placeholder=\"name\">\n      <textarea class=\"${cssClass('textarea')}\" rows=\"5\" placeholder=\"description\">${this.column.description}</textarea>`);\n  }\n\n  protected reset() {\n    this.findInput('input[type=\"text\"]').value = this.before.label;\n    this.node.querySelector('textarea')!.value = this.before.description;\n    this.column.setMetaData(this.before);\n  }\n\n  protected submit() {\n    const newValue = this.findInput('input[type=\"text\"]').value;\n    const newDescription = this.node.querySelector('textarea')!.value;\n    this.column.setMetaData({label: newValue, description: newDescription});\n    return true;\n  }\n}\n","import {ScriptColumn} from '../../model';\nimport ADialog, {IDialogContext} from './ADialog';\nimport {cssClass} from '../../styles';\n\n/** @internal */\nexport default class ScriptEditDialog extends ADialog {\n  private readonly before: string;\n\n  constructor(private readonly column: ScriptColumn, dialog: IDialogContext) {\n    super(dialog, {\n      fullDialog: true\n    });\n    this.before = column.getScript();\n  }\n\n  protected build(node: HTMLElement) {\n    node.insertAdjacentHTML('beforeend', `<textarea class=\"${cssClass('textarea')}\" autofocus=\"true\" rows=\"5\" autofocus=\"autofocus\" style=\"width: 95%;\">${this.column.getScript()}</textarea>`);\n  }\n\n  protected reset() {\n    this.node.querySelector('textarea')!.value = this.before;\n    this.column.setScript(this.before);\n  }\n\n  protected submit() {\n    this.column.setScript(this.node.querySelector('textarea')!.value);\n    return true;\n  }\n}\n","import {Column} from '../../model';\nimport {IDataProvider} from '../../provider';\nimport ADialog, { IDialogContext} from './ADialog';\nimport {cssClass} from '../../styles';\n\n/** @internal */\nexport default class SearchDialog extends ADialog {\n\n  constructor(private readonly column: Column, dialog: IDialogContext, private readonly provider: IDataProvider) {\n    super(dialog);\n  }\n\n  protected build(node: HTMLElement) {\n    node.insertAdjacentHTML('beforeend', `<input type=\"text\" size=\"20\" value=\"\" required autofocus placeholder=\"search... (>= 3 chars)\"><label class=\"${cssClass('checkbox')}\"><input type=\"checkbox\"><span>Use regular expressions</span></label>`);\n\n    const input = <HTMLInputElement>node.querySelector('input[type=\"text\"]')!;\n    const checkbox = <HTMLInputElement>node.querySelector('input[type=\"checkbox\"]')!;\n    const update = () => {\n      let search: any = input.value;\n      if (search.length < 3) {\n        input.setCustomValidity('at least 3 characters');\n        return;\n      }\n      input.setCustomValidity('');\n      const isRegex = checkbox.checked;\n      if (isRegex) {\n        search = new RegExp(search);\n      }\n      this.provider.searchAndJump(search, this.column);\n    };\n    input.addEventListener('input', update, {\n      passive: true\n    });\n    checkbox.addEventListener('change', update, {\n      passive: true\n    });\n  }\n}\n","import ADialog, {IDialogContext} from './ADialog';\nimport {cssClass} from '../../styles';\nimport {IDataProvider} from '../../provider';\n\n/** @internal */\nexport default class ShowTopNDialog extends ADialog {\n\n  constructor(private readonly provider: IDataProvider, dialog: IDialogContext) {\n    super(dialog);\n  }\n\n  protected build(node: HTMLElement) {\n    node.classList.add(cssClass('dialog-rename'));\n    node.insertAdjacentHTML('beforeend', `\n      <input type=\"number\" min=\"0\" step=\"1\" value=\"${this.provider.getShowTopN()}\">`);\n\n    this.findInput('input').onchange = (evt) => {\n      const value = (<HTMLInputElement>evt.currentTarget).valueAsNumber;\n      this.provider.setShowTopN(value);\n    };\n  }\n}\n","import {Column} from '../../model';\nimport ADialog, {IDialogContext} from './ADialog';\nimport {uniqueId, forEach} from './utils';\nimport {getToolbarDialogAddons} from '../toolbar';\nimport {IRankingHeaderContext, IToolbarDialogAddon} from '../interfaces';\nimport {cssClass} from '../../styles';\n\n/** @internal */\nexport default class SortDialog extends ADialog {\n  private readonly addons: IToolbarDialogAddon[];\n\n  constructor(private readonly column: Column, private readonly groupSortBy: boolean, dialog: IDialogContext, private readonly ctx: IRankingHeaderContext) {\n    super(dialog);\n    this.addons = getToolbarDialogAddons(this.column, groupSortBy ? 'sortGroup' : 'sort', ctx);\n  }\n\n  protected build(node: HTMLElement) {\n    for(const addon of this.addons) {\n      this.node.insertAdjacentHTML('beforeend', `<strong>${addon.title}</strong>`);\n      addon.append(this.column, this.node, this.dialog, this.ctx);\n    }\n\n    sortOrder(node, this.column, this.dialog.idPrefix, this.groupSortBy);\n  }\n}\n\nfunction sortOrder(node: HTMLElement, column: Column, idPrefix: string, groupSortBy: boolean = false) {\n  const ranking = column.findMyRanker()!;\n  const current = groupSortBy  ? ranking.getGroupSortCriteria() : ranking.getSortCriteria();\n  const order = Object.assign({}, groupSortBy ? column.isGroupSortedByMe() : column.isSortedByMe());\n\n  if (order.priority === undefined) {\n    order.priority = current.length;\n  }\n\n  const id = uniqueId(idPrefix);\n  node.insertAdjacentHTML('afterbegin', `\n        <strong>Sort Order</strong>\n        <label class=\"${cssClass('checkbox')}\"><input type=\"radio\" name=\"sortorder\" value=\"asc\"  ${(order.asc === 'asc') ? 'checked' : ''} ><span>Ascending</span></label>\n        <label class=\"${cssClass('checkbox')}\"><input type=\"radio\" name=\"sortorder\" value=\"desc\"  ${(order.asc === 'desc') ? 'checked' : ''} ><span>Decending</span></label>\n        <label class=\"${cssClass('checkbox')}\"><input type=\"radio\" name=\"sortorder\" value=\"none\"  ${(order.asc === undefined) ? 'checked' : ''} ><span>Unsorted</span></label>\n        <strong>Sort Priority</strong>\n        <input type=\"number\" id=\"${id}P\" step=\"1\" min=\"1\" max=\"${current.length + 1}\" value=\"${order.priority + 1}\">\n    `);\n\n  const updateDisabled = (disable: boolean) => {\n    forEach(node, 'input:not([name=sortorder]), select, textarea', (d: HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement) => {\n      d.disabled = disable;\n    });\n  };\n  updateDisabled(order.asc === undefined);\n\n  const trigger = () => {\n    if (groupSortBy) {\n      ranking.groupSortBy(column, order.asc === 'asc', order.asc === undefined ? -1 : order.priority);\n    } else {\n      ranking.sortBy(column, order.asc === 'asc', order.asc === undefined ? -1 : order.priority);\n    }\n\n    updateDisabled(order.asc === undefined);\n  };\n\n  forEach(node, 'input[name=sortorder]', (n: HTMLInputElement) => {\n    n.addEventListener('change', () => {\n      order.asc = n.value === 'none' ? undefined : <'asc'|'desc'>n.value;\n      trigger();\n    }, {\n      passive: true\n    });\n  });\n  {\n    const priority = (<HTMLInputElement>node.querySelector(`#${id}P`));\n    priority.addEventListener('change', () => {\n      order.priority = parseInt(priority.value, 10) - 1;\n      trigger();\n    }, {\n      passive: true\n    });\n  }\n}\n","import {StringColumn} from '../../model';\nimport {filterMissingMarkup, findFilterMissing} from '../missing';\nimport ADialog, {IDialogContext} from './ADialog';\nimport {updateFilterState} from './utils';\nimport {cssClass} from '../../styles';\n\n\n/** @internal */\nexport default class StringFilterDialog extends ADialog {\n\n  constructor(private readonly column: StringColumn, dialog: IDialogContext) {\n    super(dialog, {\n      fullDialog: true\n    });\n  }\n\n  private updateFilter(filter: string | RegExp | null) {\n    updateFilterState(this.attachment, this.column, filter != null && filter !== '');\n    this.column.setFilter(filter);\n  }\n\n  reset() {\n    this.findInput('input[type=\"text\"]').value = '';\n    this.forEach('input[type=checkbox]', (n: HTMLInputElement) => n.checked = false);\n    this.updateFilter(null);\n  }\n\n  submit() {\n    const filterMissing = findFilterMissing(this.node).checked;\n    if (filterMissing) {\n      this.updateFilter(StringColumn.FILTER_MISSING);\n      return true;\n    }\n    const input = this.findInput('input[type=\"text\"]').value;\n    const isRegex = this.findInput('input[type=\"checkbox\"]').checked;\n    this.updateFilter(isRegex ? new RegExp(input) : input);\n    return true;\n  }\n\n  protected build(node: HTMLElement) {\n    let bak = this.column.getFilter() || '';\n    const bakMissing = bak === StringColumn.FILTER_MISSING;\n    if (bakMissing) {\n      bak = '';\n    }\n    node.insertAdjacentHTML('beforeend', `<input type=\"text\" placeholder=\"Filter ${this.column.desc.label}...\" autofocus value=\"${(bak instanceof RegExp) ? bak.source : bak}\" style=\"width: 100%\">\n    <label class=\"${cssClass('checkbox')}\"><input type=\"checkbox\" ${(bak instanceof RegExp) ? 'checked=\"checked\"' : ''}><span>Use regular expressions</span></label>\n    ${filterMissingMarkup(bakMissing)}`);\n\n    const filterMissing = findFilterMissing(node);\n    const input = <HTMLInputElement>node.querySelector('input[type=\"text\"]');\n    const isRegex = <HTMLInputElement>node.querySelector('input[type=\"checkbox\"]');\n\n    const update = () => {\n      input.disabled = filterMissing.checked;\n      isRegex.disabled = filterMissing.checked;\n\n      if (filterMissing.checked) {\n        this.updateFilter(StringColumn.FILTER_MISSING);\n        return;\n      }\n      const valid = input.value.trim();\n      filterMissing.disabled = valid.length > 0;\n      if (valid.length <= 0) {\n        this.updateFilter(null);\n        return;\n      }\n      this.updateFilter(isRegex.checked ? new RegExp(input.value, 'gm') : input.value);\n    };\n\n    filterMissing.onchange = update;\n    input.onchange = update;\n    isRegex.onchange = update;\n  }\n}\n","import {round} from '../../internal';\nimport {StackColumn} from '../../model';\nimport ADialog, {IDialogContext} from './ADialog';\nimport {forEach, colorOf} from './utils';\nimport {cssClass} from '../../styles';\n\n/** @internal */\nexport default class WeightsEditDialog extends ADialog {\n\n  private readonly weights: number[];\n\n  constructor(private readonly column: StackColumn, dialog: IDialogContext) {\n    super(dialog, {\n      fullDialog: true\n    });\n\n    this.weights = this.column.getWeights();\n  }\n\n  protected reset() {\n    const weight = 100 / this.weights.length;\n    forEach(this.node, 'input[type=number]', (n: HTMLInputElement) => {\n      const v = round(weight, 2);\n      n.value = String(v);\n      (<HTMLElement>n.nextElementSibling!.firstElementChild!).style.width = `${v}%`;\n    });\n    this.column.setWeights(this.weights.slice().fill(weight));\n  }\n\n  protected build(node: HTMLElement) {\n\n    const children = this.column.children;\n    node.insertAdjacentHTML('beforeend', `<div class=\"${cssClass('dialog-table')}\">\n        ${this.weights.map((weight, i) => `<div class=\"${cssClass('dialog-weights-table-entry')}\">\n          <input type=\"number\" value=\"${round(weight * 100, 2)}\" min=\"0\" max=\"100\" step=\"any\" required>\n          <span class=\"${cssClass('dialog-filter-color-bar')}\">\n            <span style=\"background-color: ${colorOf(children[i])}; width: ${round(weight * 100, 2)}%\"></span>\n          </span>\n          ${children[i].label}\n        </div>`).join('')}\n    </div>`);\n    const inputs = Array.from(this.node.querySelectorAll<HTMLInputElement>('input[type=number]'));\n    inputs.forEach((d, i) => {\n      d.oninput = () => {\n        const weight = d.valueAsNumber;\n        if (weight <= 0) {\n          d.setCustomValidity('weight cannot be zero');\n        } else {\n          d.setCustomValidity('');\n        }\n        this.updateBar(d);\n\n        if (inputs.length !== 2) {\n          return;\n        }\n\n        // corner case auto decrease the other\n        const rest = 100 - weight;\n\n        if (rest <= 0) {\n          d.setCustomValidity('weight cannot be 100 in case of two elements');\n        } else {\n          d.setCustomValidity('');\n        }\n\n        const other = inputs[1 - i]!;\n        other.value = round(rest, 2).toString();\n        this.updateBar(other);\n      };\n    });\n  }\n\n  private updateBar(input: HTMLInputElement) {\n    (<HTMLElement>input.nextElementSibling!.firstElementChild!).style.width = `${input.value}%`;\n  }\n\n  private distributeWeights() {\n    const inputs = Array.from(this.node.querySelectorAll<HTMLInputElement>('input[type=number]')).map((d) => ({input: d, weight: d.value ? d.valueAsNumber : NaN}));\n    const hasMissing = inputs.some((d) => isNaN(d.weight));\n    if (hasMissing) {\n      // compute missing ones\n      const missingIndices = inputs.filter((d) => isNaN(d.weight));\n      const correct = inputs.filter((d) => !isNaN(d.weight));\n      const sum = correct.reduce((a, b) => a + b.weight, 0);\n\n      if (sum < 100) {\n        // compute rest\n        const rest = (100 - sum) / missingIndices.length;\n        for (const input of missingIndices) {\n          input.input.value = round(rest, 2).toString();\n          this.updateBar(input.input);\n        }\n        return;\n      }\n      // already above 100, set missing to 0 and do a regular normalization (user has to deal with it)\n      for (const input of missingIndices) {\n        input.input.value = '0';\n        this.updateBar(input.input);\n      }\n    }\n\n    const weights = inputs.map((d) => d.weight);\n    if (validWeights(weights)) {\n      return; // nothing to do\n    }\n\n    // pure distribute the sum\n    const sum = weights.reduce((a, b) => a + b, 0);\n    for (const input of inputs) {\n      input.input.value = round(input.weight * 100 / sum, 2).toString();\n      this.updateBar(input.input);\n    }\n  }\n\n  protected appendDialogButtons() {\n    super.appendDialogButtons();\n    const buttons = this.node.querySelector<HTMLElement>(`.${cssClass('dialog-buttons')}`)!;\n    buttons.insertAdjacentHTML('beforeend', `<button class=\"${cssClass('dialog-button')} ${cssClass('dialog-weights-distribute-button')}\" type=\"button\" title=\"distribute weights\"></button>`);\n\n    const last = <HTMLElement>buttons.lastElementChild!;\n    last.onclick = (evt) => {\n      evt.preventDefault();\n      evt.stopPropagation();\n      this.distributeWeights();\n    };\n  }\n\n  submit() {\n    const inputs = Array.from(this.node.querySelectorAll<HTMLInputElement>('input[type=number]')).map((d) => ({input: d, weight: d.valueAsNumber}));\n    let invalid = false;\n    for (const input of inputs) {\n      if (input.weight <= 0) {\n        input.input.setCustomValidity('weight cannot be zero');\n        invalid = true;\n      } else {\n        input.input.setCustomValidity('');\n      }\n    }\n    const weights = inputs.map((d) => d.weight);\n    if (!invalid && !validWeights(weights)) {\n      inputs[inputs.length - 1].input.setCustomValidity('sum of weights has to be 100, change weights or use the redistribute button to fix');\n      invalid = true;\n    }\n    if (invalid) {\n      if (typeof (<any>this.node).reportValidity === 'function') {\n        (<any>this.node).reportValidity();\n      }\n      return false;\n    }\n\n    this.column.setWeights(weights.map((d) => d / 100));\n    return true;\n  }\n}\n\nfunction validWeights(weights: number[]) {\n  return Math.abs(weights.reduce((a, b) => a + b, 0) - 100) < 3;\n}\n","import {getAllToolbarActions, getAllToolbarDialogAddons} from '../model/internal';\nimport {Column, EDateSort, EAdvancedSortMethod, ESortMethod, isSupportType, CompositeColumn, IMultiLevelColumn, isSortingAscByDefault} from '../model';\nimport {cssClass} from '../styles';\nimport ADialog, {IDialogContext, dialogContext} from './dialogs/ADialog';\nimport BooleanFilterDialog from './dialogs/BooleanFilterDialog';\nimport CategoricalColorMappingDialog from './dialogs/CategoricalColorMappingDialog';\nimport CategoricalFilterDialog from './dialogs/CategoricalFilterDialog';\nimport CategoricalMappingFilterDialog from './dialogs/CategoricalMappingFilterDialog';\nimport ChangeRendererDialog from './dialogs/ChangeRendererDialog';\nimport ColorMappingDialog from './dialogs/ColorMappingDialog';\nimport CompositeChildrenDialog from './dialogs/CompositeChildrenDialog';\nimport CutOffHierarchyDialog from './dialogs/CutOffHierarchyDialog';\nimport DateFilterDialog from './dialogs/DateFilterDialog';\nimport EditPatternDialog from './dialogs/EditPatternDialog';\nimport appendDate from './dialogs/groupDate';\nimport GroupDialog from './dialogs/GroupDialog';\nimport appendNumber from './dialogs/groupNumber';\nimport appendString from './dialogs/groupString';\nimport MappingDialog from './dialogs/MappingDialog';\nimport NumberFilterDialog from './dialogs/NumberFilterDialog';\nimport ReduceDialog from './dialogs/ReduceDialog';\nimport RenameDialog from './dialogs/RenameDialog';\nimport ScriptEditDialog from './dialogs/ScriptEditDialog';\nimport SearchDialog from './dialogs/SearchDialog';\nimport ShowTopNDialog from './dialogs/ShowTopNDialog';\nimport SortDialog from './dialogs/SortDialog';\nimport StringFilterDialog from './dialogs/StringFilterDialog';\nimport {sortMethods} from './dialogs/utils';\nimport WeightsEditDialog from './dialogs/WeightsEditDialog';\nimport {IRankingHeaderContext, IOnClickHandler, IUIOptions, IToolbarAction, IToolbarDialogAddon} from './interfaces';\n\ninterface IDialogClass {\n  new(col: any, dialog: IDialogContext, ...args: any[]): ADialog;\n}\n\nfunction ui(title: string, onClick: IOnClickHandler, options: Partial<IUIOptions> = {}): IToolbarAction {\n  return {title, onClick, options};\n}\n\nfunction uiDialog(title: string, dialogClass: IDialogClass, extraArgs: ((ctx: IRankingHeaderContext) => any[]) = () => [], options: Partial<IUIOptions> = {}): IToolbarAction {\n  return {\n    title,\n    onClick: (col, evt, ctx, level) => {\n      const dialog = new dialogClass(col, dialogContext(ctx, level, evt), ...extraArgs(ctx));\n      dialog.open();\n    }, options\n  };\n}\n\nfunction uiSortMethod(methods: string[]): IToolbarDialogAddon {\n  methods = methods.sort((a, b) => a.toLowerCase().localeCompare(b.toLowerCase()));\n  return {\n    title: 'Sort By',\n    order: 2,\n    append(col, node) {\n      sortMethods(node, <any>col, methods);\n    }\n  };\n}\n\nconst sort: IToolbarAction = {\n  title: 'Sort', // basic ranking\n  onClick: (col, evt, ctx, level) => {\n    ctx.dialogManager.removeAboveLevel(level);\n    if (!evt.ctrlKey) {\n      col.toggleMySorting();\n      return;\n    }\n    const ranking = col.findMyRanker()!;\n    const current = ranking.getSortCriteria();\n    const order = col.isSortedByMe();\n\n    const isAscByDefault = isSortingAscByDefault(col);\n\n    if (order.priority === undefined) {\n      ranking.sortBy(col, isAscByDefault, current.length);\n      return;\n    }\n    let next: string | undefined = undefined;\n    if (isAscByDefault) {\n      next = order.asc ? 'desc' : undefined;\n    } else {\n      next = !order.asc ? 'asc' : undefined;\n    }\n    ranking.sortBy(col, next === 'asc', next ? order.priority : -1);\n  },\n  options: {\n    shortcut: 'only',\n    order: 1,\n    featureCategory: 'ranking',\n    featureLevel: 'basic'\n  }\n};\n\nconst sortBy: IToolbarAction = {\n  title: 'Sort By &hellip;', // advanced ranking\n  onClick: (col, evt, ctx, level) => {\n    const dialog = new SortDialog(col, false, dialogContext(ctx, level, evt), ctx);\n    dialog.open();\n  },\n  options: {\n    shortcut: false,\n    order: 1,\n    featureCategory: 'ranking',\n    featureLevel: 'advanced'\n  }\n};\n\nconst sortGroupBy: IToolbarAction = {\n  title: 'Sort Groups By &hellip;', // advanced ranking\n  onClick: (col, evt, ctx, level) => {\n    const dialog = new SortDialog(col, true, dialogContext(ctx, level, evt), ctx);\n    dialog.open();\n  },\n  options: {\n    shortcut: false,\n    order: 3,\n    featureCategory: 'ranking',\n    featureLevel: 'advanced'\n  }\n};\n\nconst rename: IToolbarAction = {\n  title: 'Rename &hellip;', // advanced\n  onClick: (col, evt, ctx, level) => {\n    const dialog = new RenameDialog(col, dialogContext(ctx, level, evt));\n    dialog.open();\n  },\n  options: {\n    order: 4,\n    featureCategory: 'ui',\n    featureLevel: 'advanced'\n  }\n};\n\nconst vis: IToolbarAction = {\n  title: 'Visualization &hellip;', // advanced view\n  onClick: (col, evt, ctx, level) => {\n    const dialog = new ChangeRendererDialog(col, dialogContext(ctx, level, evt), ctx);\n    dialog.open();\n  },\n  options: {\n    featureCategory: 'ui',\n    featureLevel: 'advanced'\n  }\n};\n\nconst clone: IToolbarAction = {\n  title: 'Clone', // advanced model\n  onClick: (col, _evt, ctx) => {\n    ctx.dialogManager.removeAll(); // since the column will be removed\n    ctx.provider.takeSnapshot(col);\n  },\n  options: {\n    order: 80,\n    featureCategory: 'model',\n    featureLevel: 'advanced'\n  }\n};\n\nconst remove: IToolbarAction = {\n  title: 'Remove', // advanced model\n  onClick: (col, _evt, ctx) => {\n    ctx.dialogManager.removeAll(); // since the column will be removed\n    const ranking = col.findMyRanker()!;\n    const last = ranking.children.every((d) => isSupportType(d) || d.fixed || d === col);\n    if (!last) {\n      col.removeMe();\n      return;\n    }\n    ctx.provider.removeRanking(ranking);\n    ctx.provider.ensureOneRanking();\n  },\n  options: {\n    order: 90,\n    featureCategory: 'model',\n    featureLevel: 'advanced'\n  }\n};\n\n// basic ranking\nconst group = ui('Group', (col, evt, ctx, level) => {\n  ctx.dialogManager.removeAboveLevel(level);\n\n  if (!evt.ctrlKey) {\n    col.groupByMe();\n    return;\n  }\n  const ranking = col.findMyRanker()!;\n  const current = ranking.getGroupCriteria();\n  const order = current.indexOf(col);\n\n  ranking.groupBy(col, order >= 0 ? -1 : current.length);\n}, {shortcut: 'only', order: 2, featureCategory: 'ranking', featureLevel: 'basic'});\n\n// advanced ranking\nconst groupBy = ui('Group By &hellip;', (col, evt, ctx, level) => {\n  const dialog = new GroupDialog(col, dialogContext(ctx, level, evt), ctx);\n  dialog.open();\n}, {shortcut: false, order: 2, featureCategory: 'ranking', featureLevel: 'advanced'});\n\nfunction toggleCompressExpand(col: Column, evt: MouseEvent, ctx: IRankingHeaderContext, level: number) {\n  ctx.dialogManager.removeAboveLevel(level);\n  const mcol = <IMultiLevelColumn>col;\n  mcol.setCollapsed(!mcol.getCollapsed());\n\n  const collapsed = mcol.getCollapsed();\n  const i = <HTMLElement>evt.currentTarget;\n  i.title = collapsed ? 'Expand' : 'Compress';\n  i.classList.toggle(cssClass('action-compress'), !collapsed);\n  i.classList.toggle(cssClass('action-expand'), collapsed);\n  const inner = i.getElementsByTagName('span')[0]!;\n  if (inner) {\n    inner.textContent = i.title;\n  }\n}\n\nconst compress = {\n  title: 'Compress',\n  enabled: (col: IMultiLevelColumn) => !col.getCollapsed(),\n  onClick: toggleCompressExpand,\n  options: {featureCategory: 'model', featureLevel: 'advanced'}\n};\n\nconst expand = {\n  title: 'Expand',\n  enabled: (col: IMultiLevelColumn) => col.getCollapsed(),\n  onClick: toggleCompressExpand,\n  options: {featureCategory: 'model', featureLevel: 'advanced'}\n};\n\nconst setShowTopN: IToolbarAction = {\n  title: 'Change Show Top N',\n  onClick: (_col, evt, ctx, level) => {\n    const dialog = new ShowTopNDialog(ctx.provider, dialogContext(ctx, level, evt));\n    dialog.open();\n  },\n  options: {\n    featureCategory: 'ui',\n    featureLevel: 'advanced'\n  }\n};\n\nconst toolbarAddons: {[key: string]: IToolbarDialogAddon} = {\n  sortNumber: uiSortMethod(Object.keys(EAdvancedSortMethod)),\n  sortNumbers: uiSortMethod(Object.keys(EAdvancedSortMethod)),\n  sortBoxPlot: uiSortMethod(Object.keys(ESortMethod)),\n  sortDates: uiSortMethod(Object.keys(EDateSort)),\n  sortGroups: uiSortMethod(['count', 'name']),\n  groupNumber: <IToolbarDialogAddon>{\n    title: 'Split',\n    order: 2,\n    append: appendNumber\n  },\n  groupString: <IToolbarDialogAddon>{\n    title: 'Groups',\n    order: 2,\n    append: appendString\n  },\n  groupDate: <IToolbarDialogAddon>{\n    title: 'Granularity',\n    order: 2,\n    append: appendDate\n  },\n};\n\nexport const toolbarActions: {[key: string]: IToolbarAction | IToolbarDialogAddon} = Object.assign({\n  group,\n  groupBy,\n  compress,\n  expand,\n  sort,\n  sortBy,\n  sortGroupBy,\n  clone,\n  remove,\n  rename,\n  setShowTopN,\n  search: uiDialog('Search &hellip;', SearchDialog, (ctx) => [ctx.provider], {shortcut: true, order: 3, featureCategory: 'ranking', featureLevel: 'basic'}),\n  filterNumber: uiDialog('Filter &hellip;', NumberFilterDialog, (ctx) => [ctx], {shortcut: true, featureCategory: 'ranking', featureLevel: 'basic'}),\n  filterDate: uiDialog('Filter &hellip;', DateFilterDialog, (ctx) => [ctx], {shortcut: true, featureCategory: 'ranking', featureLevel: 'basic'}),\n  filterString: uiDialog('Filter &hellip;', StringFilterDialog, () => [], {shortcut: true, featureCategory: 'ranking', featureLevel: 'basic'}),\n  filterCategorical: uiDialog('Filter &hellip;', CategoricalFilterDialog, () => [], {shortcut: true, featureCategory: 'ranking', featureLevel: 'basic'}),\n  filterOrdinal: uiDialog('Filter &hellip;', CategoricalMappingFilterDialog, () => [], {shortcut: true, featureCategory: 'ranking', featureLevel: 'basic'}),\n  filterBoolean: uiDialog('Filter &hellip;', BooleanFilterDialog, () => [], {shortcut: true, featureCategory: 'ranking', featureLevel: 'basic'}),\n  colorMapped: uiDialog('Color Mapping &hellip;', ColorMappingDialog, () => [], {shortcut: false, featureCategory: 'ui', featureLevel: 'advanced'}),\n  colorMappedCategorical: uiDialog('Color Mapping &hellip;', CategoricalColorMappingDialog, () => [], {shortcut: false, featureCategory: 'ui', featureLevel: 'advanced'}),\n  script: uiDialog('Edit Combine Script &hellip;', ScriptEditDialog, () => [], {shortcut: true, featureCategory: 'model', featureLevel: 'advanced'}),\n  reduce: uiDialog('Reduce by &hellip;', ReduceDialog, () => [], {featureCategory: 'model', featureLevel: 'advanced'}),\n  cutoff: uiDialog('Set Cut Off &hellip;', CutOffHierarchyDialog, (ctx) => [ctx.idPrefix], {featureCategory: 'model', featureLevel: 'advanced'}),\n  editMapping: uiDialog('Data Mapping &hellip;', MappingDialog, (ctx) => [ctx], {featureCategory: 'model', featureLevel: 'advanced'}),\n  editPattern: uiDialog('Edit Pattern &hellip;', EditPatternDialog, (ctx) => [ctx.idPrefix], {featureCategory: 'model', featureLevel: 'advanced'}),\n  editWeights: uiDialog('Edit Weights &hellip;', WeightsEditDialog, () => [], {shortcut: true, featureCategory: 'model', featureLevel: 'advanced'}),\n  compositeContained: uiDialog('Contained Columns &hellip;', CompositeChildrenDialog, (ctx) => [ctx], {featureCategory: 'model', featureLevel: 'advanced'}),\n  splitCombined: ui('Split Combined Column', (col, _evt, ctx, level) => {\n    ctx.dialogManager.removeAboveLevel(level - 1); // close itself\n    // split the combined column into its children\n    (<CompositeColumn>col).children.reverse().forEach((c) => col.insertAfterMe(c));\n    col.removeMe();\n  }, {featureCategory: 'model', featureLevel: 'advanced'}),\n  invertSelection: ui('Invert Selection', (col, _evt, ctx, level) => {\n    ctx.dialogManager.removeAboveLevel(level - 1); // close itself\n    const s = ctx.provider.getSelection();\n    const order = Array.from(col.findMyRanker()!.getOrder());\n    if (s.length === 0) {\n      ctx.provider.setSelection(order);\n      return;\n    }\n    const ss = new Set(s);\n    const others = order.filter((d) => !ss.has(d));\n    ctx.provider.setSelection(others);\n  }, {featureCategory: 'model', featureLevel: 'advanced'})\n}, toolbarAddons);\n\nfunction sortActions(a: IToolbarAction, b: IToolbarAction) {\n  if (a.options.order === b.options.order) {\n    return a.title.toString().localeCompare(b.title.toString());\n  }\n  return (a.options.order || 50) - (b.options.order || 50);\n}\n\nconst cache = new Map<string, IToolbarAction[]>();\nconst cacheAddon = new Map<string, IToolbarDialogAddon[]>();\n\nfunction getFullToolbar(col: Column, ctx: IRankingHeaderContext) {\n  if (cache.has(col.desc.type)) {\n    return cache.get(col.desc.type)!;\n  }\n  const icons = <{[key: string]: IToolbarAction}>ctx.toolbar;\n  const actions = new Set<IToolbarAction>();\n  if (!col.fixed) {\n    actions.add(remove);\n  }\n  {\n    const possible = ctx.getPossibleRenderer(col);\n    if (possible.item.length > 2 || possible.group.length > 2 || possible.summary.length > 2) { // default always possible\n      actions.add(vis);\n    }\n  }\n\n  if (!isSupportType(col)) {\n    actions.add(sort);\n    actions.add(sortBy);\n    actions.add(rename);\n    actions.add(clone);\n  }\n\n  const keys = getAllToolbarActions(col);\n\n  keys.forEach((key) => {\n    if (icons.hasOwnProperty(key)) {\n      actions.add(icons[key]);\n    } else {\n      console.warn('cannot find: ', col.desc.type, key);\n    }\n  });\n\n  const r = Array.from(actions).sort(sortActions);\n  cache.set(col.desc.type, r);\n  return r;\n}\n\n/** @internal */\nexport function getToolbar(col: Column, ctx: IRankingHeaderContext) {\n  const toolbar = getFullToolbar(col, ctx);\n  const flags = ctx.flags;\n\n  return toolbar.filter((a) => {\n    if (a.enabled && !a.enabled(col)) {\n      return false;\n    }\n    // level is basic or not one of disabled features\n    return a.options.featureLevel === 'basic' || !((flags.advancedModelFeatures === false && a.options.featureCategory === 'model') || (flags.advancedRankingFeatures === false && a.options.featureCategory === 'ranking') || (flags.advancedUIFeatures === false && a.options.featureCategory === 'ui'));\n  });\n}\n\n/** @internal */\nexport function getToolbarDialogAddons(col: Column, key: string, ctx: IRankingHeaderContext) {\n  const cacheKey = `${col.desc.type}@${key}`;\n  if (cacheAddon.has(cacheKey)) {\n    return cacheAddon.get(cacheKey)!;\n  }\n  const icons = <{[key: string]: IToolbarDialogAddon}>ctx.toolbar;\n  const actions = new Set<IToolbarDialogAddon>();\n\n  const keys = getAllToolbarDialogAddons(col, key);\n\n  keys.forEach((key) => {\n    if (icons.hasOwnProperty(key)) {\n      actions.add(icons[key]);\n    } else {\n      console.warn('cannot find: ', col.desc.type, key);\n    }\n  });\n\n  const r = Array.from(actions).sort((a, b) => {\n    if (a.order === b.order) {\n      return a.title.localeCompare(b.title);\n    }\n    return (a.order || 50) - (b.order || 50);\n  });\n  cacheAddon.set(cacheKey, r);\n  return r;\n}\n\n/** @internal */\nexport function isSortAble(col: Column, ctx: IRankingHeaderContext) {\n  const toolbar = getFullToolbar(col, ctx);\n  return toolbar.includes(sortBy);\n}\n\n/** @internal */\nexport function isGroupAble(col: Column, ctx: IRankingHeaderContext) {\n  const toolbar = getFullToolbar(col, ctx);\n  return toolbar.includes(groupBy);\n}\n\n/** @internal */\nexport function isGroupSortAble(col: Column, ctx: IRankingHeaderContext) {\n  const toolbar = getFullToolbar(col, ctx);\n  return toolbar.includes(sortGroupBy);\n}\n","import {NumberColumn} from '../../model';\nimport {IDialogContext} from './ADialog';\nimport {round, getNumberOfBins} from '../../internal';\nimport {forEach} from '../../renderer/utils';\nimport {cssClass} from '../../styles';\n\n\n/** @internal */\nexport default function append(col: NumberColumn, node: HTMLElement, dialog: IDialogContext) {\n  const domain = col.getMapping().domain;\n  const current = col.getGroupThresholds();\n  let isThreshold = current.length <= 1;\n  const ranking =  col.findMyRanker()!;\n  node.insertAdjacentHTML('beforeend', `\n    <label class=\"${cssClass('checkbox')}\">\n      <input type=\"radio\" name=\"threshold\" value=\"threshold\" ${isThreshold ? 'checked' : ''}>\n      <span>at&nbsp;<input type=\"number\" size=\"10\" id=\"${dialog.idPrefix}N1\" value=\"${current.length > 0 ? current[0] : round((domain[1] - domain[0]) / 2, 2)}\"\n          required min=\"${domain[0]}\" max=\"${domain[1]}\" step=\"any\" ${!isThreshold ? 'disabled': ''}>\n      </span>\n    </label>\n    <label class=\"${cssClass('checkbox')}\">\n      <input type=\"radio\" name=\"threshold\" value=\"bins\" ${!isThreshold ? 'checked' : ''}>\n      <span> in&nbsp;<input type=\"number\" size=\"5\" id=\"${dialog.idPrefix}N2\" value=\"${current.length > 1 ? current.length : getNumberOfBins(ranking.getOrderLength())}\"\n          required min=\"2\" step=\"1\" ${isThreshold ? 'disabled': ''}>&nbsp;bins\n      </span>\n    </label>\n  `);\n\n  const threshold = <HTMLInputElement>node.querySelector(`#${dialog.idPrefix}N1`);\n  const bins = <HTMLInputElement>node.querySelector(`#${dialog.idPrefix}N2`);\n\n  const update = () => {\n    threshold.disabled = !isThreshold;\n    bins.disabled = isThreshold;\n\n    if (isThreshold) {\n      col.setGroupThresholds([threshold.valueAsNumber]);\n      return;\n    }\n\n    const count = parseInt(bins.value, 10);\n    const delta = (domain[1] - domain[0]) / count;\n    let act = domain[0] + delta;\n    const thresholds = [act];\n    for(let i = 1; i < count - 1; ++i) {\n      act += delta;\n      thresholds.push(act);\n    }\n    col.setGroupThresholds(thresholds);\n  };\n\n  threshold.addEventListener('change', update, { passive: true });\n  bins.addEventListener('change', update, { passive: true });\n\n\n  forEach(node, 'input[name=threshold]', (d: HTMLInputElement) => {\n    d.addEventListener('change', () => {\n      isThreshold = d.value === 'threshold';\n      update();\n    }, { passive: true });\n  });\n}\n","import {IDialogContext} from './ADialog';\nimport {StringColumn} from '../../model';\nimport {cssClass} from '../../styles';\n\n\n/** @internal */\nexport default function append(col: StringColumn, node: HTMLElement, dialog: IDialogContext) {\n  const current = col.getGroupCriteria();\n  const isRegex = current.length > 0 && current[0] instanceof RegExp;\n  node.insertAdjacentHTML('beforeend', `\n    <label class=\"${cssClass('checkbox')}\">\n      <input type=\"radio\" name=\"regex\" value=\"startsWith\" id=\"${dialog.idPrefix}RW\" ${!isRegex ? 'checked' : ''}>\n      <span>Text starts with &hellip;</span>\n    </label>\n    <label class=\"${cssClass('checkbox')}\">\n      <input type=\"radio\" name=\"regex\" value=\"regex\" id=\"${dialog.idPrefix}RE\" ${isRegex ? 'checked' : ''}>\n      <span>Use regular expressions</span>\n    </label>\n    <textarea class=\"${cssClass('textarea')}\" required rows=\"5\" placeholder=\"e.g. Test,a.*\" id=\"${dialog.idPrefix}T\">${current.map((d) => typeof d === 'string' ? d : d.source).join('\\n')}</textarea>\n    <button class=\"${cssClass('dialog-button')}\" id=\"${dialog.idPrefix}A\">Apply</button>\n  `);\n\n  const button = node.querySelector<HTMLButtonElement>(`#${dialog.idPrefix}A`)!;\n  const isRegexCheck = node.querySelector<HTMLInputElement>(`#${dialog.idPrefix}RE`)!;\n  const groups = node.querySelector<HTMLTextAreaElement>(`#${dialog.idPrefix}T`)!;\n\n  button.onclick = (evt) => {\n    evt.preventDefault();\n    evt.stopPropagation();\n\n    let items: (string | RegExp)[] = groups.value.trim().split('\\n').map((d) => d.trim()).filter((d) => d.length > 0);\n    const invalid = items.length === 0;\n    groups.setCustomValidity(invalid ? 'At least one group is required' : '');\n    if (invalid) {\n      (<any>groups).reportValidity(); // typedoc not uptodate\n      return;\n    }\n    if (isRegexCheck.checked) {\n      items = items.map((d) => new RegExp(d.toString(), 'gm'));\n    }\n    col.setGroupCriteria(items);\n  };\n}\n","import {forEach} from '../../renderer/utils';\nimport {DateColumn, IDateGranularity} from '../../model';\nimport {cssClass} from '../../styles';\n\n\n/** @internal */\nexport default function appendDate(col: DateColumn, node: HTMLElement) {\n  const current = col.getDateGrouper();\n\n  let granularity = current.granularity;\n  let circular = current.circular;\n\n  let html: string = '';\n  for (const g of ['century', 'decade', 'year', 'month', 'week', 'day_of_week', 'day_of_month', 'day_of_year', 'hour', 'minute', 'second']) {\n    html += `<label class=\"${cssClass('checkbox')}\">\n    <input type=\"radio\" name=\"granularity\" value=\"${g}\" ${granularity === g ? 'checked' : ''}>\n    <span> by ${g} </span>\n  </label>`;\n  }\n  html += `<label class=\"${cssClass('checkbox')}\">\n    <input type=\"checkbox\" name=\"circular\" ${circular ? 'checked' : ''}>\n    <span> Circular </span>\n  </label>`;\n\n  node.insertAdjacentHTML('beforeend', html);\n\n  const update = () => {\n    col.setDateGrouper({granularity, circular});\n  };\n\n\n  node.querySelector<HTMLInputElement>('input[name=circular]')!.addEventListener('change', (evt) => {\n    circular = (<HTMLInputElement>evt.currentTarget).checked;\n    update();\n  }, { passive: true });\n\n  forEach(node, 'input[name=granularity]', (d: HTMLInputElement) => {\n    d.addEventListener('change', () => {\n      granularity = <IDateGranularity>d.value;\n      update();\n    }, { passive: true });\n  });\n}\n","import {renderers} from './renderer/renderers';\nimport {toolbarActions} from './ui/toolbar';\nimport {Column, Ranking, IGroupData, IGroupItem} from './model';\nimport {IDataProvider} from './provider';\nimport {ICellRendererFactory, ERenderMode} from './renderer';\nimport {IToolbarAction, IToolbarDialogAddon} from './ui';\n\n/**\n * custom height implementation logic\n */\nexport interface IDynamicHeight {\n  /**\n   * default height for a row for optimized styling\n   */\n  defaultHeight: number;\n\n  /**\n   * returns the height in pixel for the given row\n   * @param {IGroupItem | IGroupData} item the item to show\n   * @returns {number} its height in pixel\n   */\n  height(item: IGroupItem | IGroupData): number;\n\n  /**\n   * returns the padding in pixel after the given row\n   * @param {IGroupItem | IGroupData | null} item item to show\n   * @returns {number} its padding in pixel\n   */\n  padding(item: IGroupItem | IGroupData | null): number;\n}\n\nexport interface ILineUpFlags {\n  /**\n   * optimization flag to disable frozen columns for optimizing rendering performance\n   * @default true\n   */\n  disableFrozenColumns: boolean;\n  /**\n   * flag whether advanced ranking features are enabled\n   * @default true\n   */\n  advancedRankingFeatures: boolean;\n  /**\n   * flag whether advanced model features are enabled\n   * @default true\n   */\n  advancedModelFeatures: boolean;\n  /**\n   * flag whether advanced UI features are enabled\n   * @default true\n   */\n  advancedUIFeatures: boolean;\n}\n\nexport interface ILineUpOptions {\n  /**\n   * option to enable/disable showing a summary (histogram, ...) in the header\n   * @default true\n   */\n  summaryHeader: boolean;\n  /**\n   * option to enable/disable animated transitions\n   * @default true\n   */\n  animated: boolean;\n  /**\n   * option to enforce that the whole row is shown upon hover without overflow hidden\n   * @default false\n   */\n  expandLineOnHover: boolean;\n  /**\n   * option to enable/disable the panel\n   * @default true\n   */\n  sidePanel: boolean;\n  /**\n   * option to specify whether the panel should be collapsed by default\n   * @default false\n   */\n  sidePanelCollapsed: boolean;\n  /**\n   * show the sorting and grouping hierarchy indicators in the side panel\n   * @default true\n   */\n  hierarchyIndicator: boolean;\n\n  /**\n   * option to specify the default slope graph mode\n   * @default 'item'\n   */\n  defaultSlopeGraphMode: 'item' | 'band';\n\n  /**\n   * how many degrees should a label be rotated in case of narrow columns\n   * @default 0 no rotation\n   */\n  labelRotation: number;\n\n  /**\n   * height of a row\n   * @default 18\n   */\n  rowHeight: number;\n  /**\n   * padding between two rows\n   * @default 2\n   */\n  rowPadding: number;\n  /**\n   * height of an aggregated group in pixel\n   * @default 40\n   */\n  groupHeight: number;\n  /**\n   * padding between two groups in pixel\n   * @default 5\n   */\n  groupPadding: number;\n\n  /**\n   * custom function to compute the level of detail for a row\n   * @param {number} rowIndex the current row index to be rendered\n   * @returns {\"high\" | \"low\"}\n   */\n  levelOfDetail: (rowIndex: number) => 'high' | 'low';\n  /**\n   * custom function to compute the height of a row (group or item)\n   * @param {(IGroupItem | IGroupData)[]} data the data to render\n   * @param {Ranking} ranking the ranking of the data\n   * @returns {IDynamicHeight | null} the height compute function or null to use the default\n   */\n  dynamicHeight: (data: (IGroupItem | IGroupData)[], ranking: Ranking) => IDynamicHeight | null;\n  /**\n   * custom function to be called when updating a HTML row\n   * @param {HTMLElement} row node element to be updated\n   * @param {number} rowIndex row index to be rendered in the row\n   */\n  customRowUpdate: (row: HTMLElement, rowIndex: number) => void;\n\n  /**\n   * register custom toolbar actions and dialog addons\n   */\n  toolbar: {[key: string]: IToolbarAction | IToolbarDialogAddon};\n  /**\n   * register custom renderer factories\n   */\n  renderers: {[type: string]: ICellRendererFactory};\n\n  /**\n   * custom check whether a given renderer can render the given column in the given mode\n   */\n  canRender: (type: string, renderer: ICellRendererFactory, col: Column, mode: ERenderMode) => boolean;\n\n  /**\n   * custom flags for optimization\n   */\n  flags: Partial<ILineUpFlags>;\n\n  /**\n   * ignore incompatible browser and always show (on own risk)\n   * @default false\n   */\n  ignoreUnsupportedBrowser: boolean;\n}\n\nexport interface ITaggleOptions extends ILineUpOptions {\n  /**\n   * whether the overview mode is enabled by default\n   * @default false\n   */\n  overviewMode: boolean;\n}\n\nexport interface ILineUpLike {\n  readonly node: HTMLElement;\n  readonly data: IDataProvider;\n\n  dump(): any;\n\n  destroy(): void;\n}\n\n\nexport function defaultOptions(): ITaggleOptions {\n  return {\n    toolbar: Object.assign({}, toolbarActions),\n    renderers: Object.assign({}, renderers),\n    canRender: () => true,\n\n    labelRotation: 0,\n    summaryHeader: true,\n    animated: true,\n    expandLineOnHover: false,\n    sidePanel: true,\n    sidePanelCollapsed: false,\n    hierarchyIndicator: true,\n    defaultSlopeGraphMode: 'item',\n    overviewMode: false,\n\n    rowHeight: 18,\n    groupHeight: 40,\n    groupPadding: 5,\n    rowPadding: 2,\n\n    levelOfDetail: () => 'high',\n    customRowUpdate: () => undefined,\n    dynamicHeight: () => null,\n\n    flags: {\n      disableFrozenColumns: true, //disable by default for speed navigator.userAgent.includes('Firefox/52') // disable by default in Firefox ESR 52\n      advancedRankingFeatures: true,\n      advancedModelFeatures: true,\n      advancedUIFeatures: true\n    },\n\n    ignoreUnsupportedBrowser: false\n  };\n}\n","import {detect} from 'detect-browser';\n\nexport const SUPPORTED_FIREFOX_VERSION = 57;\nexport const SUPPORTED_CHROME_VERSION = 64;\nexport const SUPPORTED_EDGE_VERSION = 16;\n\n/**\n * @internal\n */\nexport function getUnsupportedBrowserError() {\n  const info = detect();\n  if (!info || !info.version) {\n    return 'browser cannot be detected';\n  }\n  const prefix = `unsupported browser detected:`;\n  switch (info.name) {\n    case 'firefox':\n      const fVersion = parseInt(info.version.slice(0, info.version.indexOf('.')), 10);\n      if (fVersion <= SUPPORTED_FIREFOX_VERSION && fVersion !== 52) { // ESR\n        return `${prefix} Firefox ${info.version} (&lt; ${SUPPORTED_FIREFOX_VERSION})`;\n      }\n      return null;\n    case 'edge':\n      const eVersion = parseInt(info.version.slice(0, info.version.indexOf('.')), 10);\n      if (eVersion <= SUPPORTED_EDGE_VERSION) {\n        return `${prefix} Edge ${info.version} (&lt; ${SUPPORTED_EDGE_VERSION})`;\n      }\n      return null;\n    case 'chrome':\n      const cVersion = parseInt(info.version.slice(0, info.version.indexOf('.')), 10);\n      if (cVersion <= SUPPORTED_CHROME_VERSION) {\n        return `${prefix} Chrome ${info.version} (&lt; ${SUPPORTED_CHROME_VERSION})`;\n      }\n      return null;\n    case 'ie':\n      return `${prefix} Internet Explorer`;\n  }\n  console.warn('unknown browser detected', info, 'assuming fine...');\n  return null;\n}\n/**\n * checks whether the current browser is compatible with lineupjs\n * @return boolean\n */\nexport function isBrowserSupported() {\n  return getUnsupportedBrowserError() == null;\n}\n\n","import {getUnsupportedBrowserError, SUPPORTED_CHROME_VERSION, SUPPORTED_EDGE_VERSION, SUPPORTED_FIREFOX_VERSION} from '../browser';\nimport {ILineUpLike} from '../config';\nimport {AEventDispatcher, IEventListener, clear} from '../internal';\nimport {Column} from '../model';\nimport {DataProvider, IDataProviderDump} from '../provider';\nimport {cssClass} from '../styles';\n\n\n/**\n * emitted when the highlight changes\n * @asMemberOf ALineUp\n * @param dataIndex the highlghted data index or -1 for none\n * @event\n */\nexport declare function highlightChanged(dataIndex: number): void;\n\n/**\n * emitted when the selection changes\n * @asMemberOf ALineUp\n * @param dataIndices the selected data indices\n * @event\n */\nexport declare function selectionChanged(dataIndices: number[]): void;\n\nexport abstract class ALineUp extends AEventDispatcher implements ILineUpLike {\n  static readonly EVENT_SELECTION_CHANGED = DataProvider.EVENT_SELECTION_CHANGED;\n  static readonly EVENT_HIGHLIGHT_CHANGED = 'highlightChanged';\n\n  private highlightListeners = 0;\n\n  readonly isBrowserSupported: boolean;\n\n  constructor(public readonly node: HTMLElement, private _data: DataProvider, ignoreIncompatibleBrowser: boolean) {\n    super();\n\n    const error = getUnsupportedBrowserError();\n    this.isBrowserSupported = ignoreIncompatibleBrowser || !error;\n\n    if (!this.isBrowserSupported) {\n      this.node.classList.add(cssClass('unsupported-browser'));\n      this.node.innerHTML = `<span>${error}</span>\n      <div class=\"${cssClass('unsupported-browser')}\">\n        <a href=\"https://www.mozilla.org/en-US/firefox/\" rel=\"noopener\" target=\"_blank\" data-browser=\"firefox\" data-version=\"${SUPPORTED_FIREFOX_VERSION}\"></a>\n        <a href=\"https://www.google.com/chrome/index.html\" rel=\"noopener\" target=\"_blank\" data-browser=\"chrome\" data-version=\"${SUPPORTED_CHROME_VERSION}\" title=\"best support\"></a>\n        <a href=\"https://www.microsoft.com/en-us/windows/microsoft-edge\" rel=\"noopener\" target=\"_blank\" data-browser=\"edge\" data-version=\"${SUPPORTED_EDGE_VERSION}\"></a>\n      </div><span>use the <code>ignoreUnsupportedBrowser=true</code> option to ignore this error at your own risk</span>`;\n    }\n\n    this.forward(_data, `${DataProvider.EVENT_SELECTION_CHANGED}.main`);\n    _data.on(`${DataProvider.EVENT_BUSY}.busy`, (busy) => this.node.classList.toggle(cssClass('busy'), busy));\n  }\n\n  protected createEventList() {\n    return super.createEventList().concat([ALineUp.EVENT_HIGHLIGHT_CHANGED, ALineUp.EVENT_SELECTION_CHANGED]);\n  }\n\n  on(type: typeof ALineUp.EVENT_HIGHLIGHT_CHANGED, listener: typeof highlightChanged | null): this;\n  on(type: typeof ALineUp.EVENT_SELECTION_CHANGED, listener: typeof selectionChanged | null): this;\n  on(type: string | string[], listener: IEventListener | null): this; // required for correct typings in *.d.ts\n  on(type: string | string[], listener: IEventListener | null): this {\n    return super.on(type, listener);\n  }\n\n  get data() {\n    return this._data;\n  }\n\n  destroy() {\n    // just clear since we hand in the node itself\n    clear(this.node);\n    this._data.destroy();\n  }\n\n  dump() {\n    return this.data.dump();\n  }\n\n  restore(dump: IDataProviderDump) {\n    this._data.restore(dump);\n  }\n\n  abstract update(): void;\n\n  setDataProvider(data: DataProvider, dump?: IDataProviderDump) {\n    if (this._data) {\n      this.unforward(this._data, `${DataProvider.EVENT_SELECTION_CHANGED}.taggle`);\n      this._data.on(`${DataProvider.EVENT_BUSY}.busy`, null);\n    }\n    this._data = data;\n    if (dump) {\n      data.restore(dump);\n    }\n    this.forward(data, `${DataProvider.EVENT_SELECTION_CHANGED}.taggle`);\n\n    data.on(`${DataProvider.EVENT_BUSY}.busy`, (busy) => this.node.classList.toggle(cssClass('busy'), busy));\n  }\n\n  getSelection() {\n    return this._data.getSelection();\n  }\n\n  setSelection(dataIndices: number[]) {\n    this._data.setSelection(dataIndices);\n  }\n\n  /**\n   * sorts LineUp by he given column\n   * @param column callback function finding the column to sort\n   * @param ascending\n   * @returns {boolean}\n   */\n  sortBy(column: string | ((col: Column) => boolean), ascending = false) {\n    const col = this.data.find(column);\n    if (col) {\n      col.sortByMe(ascending);\n    }\n    return col != null;\n  }\n\n  abstract setHighlight(dataIndex: number, scrollIntoView: boolean): boolean;\n\n  abstract getHighlight(): number;\n\n  protected listenersChanged(type: string, enabled: boolean) {\n    super.listenersChanged(type, enabled);\n    if (!type.startsWith(ALineUp.EVENT_HIGHLIGHT_CHANGED)) {\n      return;\n    }\n    if (enabled) {\n      this.highlightListeners++;\n      if (this.highlightListeners === 1) { // first\n        this.enableHighlightListening(true);\n      }\n    } else {\n      this.highlightListeners -= 1;\n      if (this.highlightListeners === 0) { // last\n        this.enableHighlightListening(false);\n      }\n    }\n  }\n\n  protected enableHighlightListening(_enable: boolean) {\n    // hook\n  }\n}\n\nexport default ALineUp;\n","export { default as KeyFinder } from './KeyFinder';\r\n/**\r\n * different row animation modes\r\n */\r\nexport var EAnimationMode;\r\n(function (EAnimationMode) {\r\n    /**\r\n     * plain update existed both before and after\r\n     */\r\n    EAnimationMode[EAnimationMode[\"UPDATE\"] = 0] = \"UPDATE\";\r\n    /**\r\n     * exists both before and after but wasn't visible yet thus waas created\r\n     */\r\n    EAnimationMode[EAnimationMode[\"UPDATE_CREATE\"] = 1] = \"UPDATE_CREATE\";\r\n    /**\r\n     * exists both before and after is visible but not needed anymore and thus removed\r\n     */\r\n    EAnimationMode[EAnimationMode[\"UPDATE_REMOVE\"] = 2] = \"UPDATE_REMOVE\";\r\n    /**\r\n     * row appears\r\n     */\r\n    EAnimationMode[EAnimationMode[\"SHOW\"] = 3] = \"SHOW\";\r\n    /**\r\n     * row disappears\r\n     */\r\n    EAnimationMode[EAnimationMode[\"HIDE\"] = 4] = \"HIDE\";\r\n})(EAnimationMode || (EAnimationMode = {}));\r\nvar NO_CHANGE_DELTA = 1;\r\nexport function noAnimationChange(_a, previousHeight, currentHeight) {\r\n    var previous = _a.previous, mode = _a.mode, nodeY = _a.nodeY, current = _a.current;\r\n    // sounds like the same\r\n    var prev = previous.height == null ? previousHeight : previous.height;\r\n    var curr = current.height == null ? currentHeight : current.height;\r\n    return mode === EAnimationMode.UPDATE && (Math.abs(previous.y - nodeY) <= NO_CHANGE_DELTA) && (Math.abs(prev - curr) <= NO_CHANGE_DELTA);\r\n}\r\n/**\r\n * maximal duration of all animations + extra waiting before e.g. rows are really removed\r\n * @type {number}\r\n */\r\nvar MAX_ANIMATION_TIME = 1100;\r\nexport var defaultPhases = [\r\n    {\r\n        delay: 0,\r\n        apply: function (_a) {\r\n            var mode = _a.mode, previous = _a.previous, nodeY = _a.nodeY, current = _a.current, node = _a.node;\r\n            node.dataset.animation = EAnimationMode[mode].toLowerCase();\r\n            node.style.transform = \"translate(0, \" + (previous.y - nodeY) + \"px)\";\r\n            if (mode === EAnimationMode.SHOW) {\r\n                // already target height\r\n                node.style.height = current.height !== null ? current.height + \"px\" : null;\r\n            }\r\n            else { // always set previous height for default height changes\r\n                node.style.height = previous.height + \"px\";\r\n            }\r\n            node.style.opacity = mode === EAnimationMode.SHOW ? '0' : (mode === EAnimationMode.HIDE ? '1' : null);\r\n        }\r\n    },\r\n    {\r\n        delay: 10,\r\n        apply: function (_a) {\r\n            var mode = _a.mode, current = _a.current, nodeY = _a.nodeY, node = _a.node;\r\n            // null for added/update since already at the right position\r\n            node.style.transform = (mode === EAnimationMode.HIDE || mode === EAnimationMode.UPDATE_REMOVE) ? \"translate(0, \" + (current.y - nodeY) + \"px)\" : null;\r\n            if (mode !== EAnimationMode.HIDE) { // keep height for removal\r\n                node.style.height = current.height !== null ? current.height + \"px\" : null;\r\n            }\r\n            node.style.opacity = mode === EAnimationMode.SHOW ? '1' : (mode === EAnimationMode.HIDE ? '0' : null);\r\n        }\r\n    },\r\n    {\r\n        delay: MAX_ANIMATION_TIME,\r\n        apply: function (_a) {\r\n            var node = _a.node;\r\n            delete node.dataset.animation;\r\n            node.style.opacity = null;\r\n            node.style.transform = null;\r\n        }\r\n    }\r\n];\r\n//# sourceMappingURL=index.js.map","/**\r\n * utility class for optimized row context access\r\n */\r\nvar KeyFinder = /** @class */ (function () {\r\n    /**\r\n     * constructor for fast key based row access\r\n     * @param {IExceptionContext} context context to use\r\n     * @param {(rowIndex: number) => string} key key function\r\n     */\r\n    function KeyFinder(context, key) {\r\n        var _this = this;\r\n        this.context = context;\r\n        this.key = key;\r\n        this.cache = [];\r\n        this.lastFilled = 0;\r\n        this.key2index = new Map();\r\n        this.context.exceptions.forEach(function (e) {\r\n            _this.cache[e.index] = e.y;\r\n            _this.key2index.set(key(e.index), e.index);\r\n        });\r\n    }\r\n    KeyFinder.prototype.findValidStart = function (before) {\r\n        for (var i = before - 1; i >= 0; --i) {\r\n            if (this.cache[i] !== undefined) {\r\n                return i;\r\n            }\r\n        }\r\n        return -1;\r\n    };\r\n    /**\r\n     * returns the position of the given given or -1 if not found\r\n     * @param {string} key\r\n     * @return {number} -1 if not found\r\n     */\r\n    KeyFinder.prototype.posByKey = function (key) {\r\n        if (this.key2index.has(key)) {\r\n            var index = this.key2index.get(key);\r\n            return { index: index, pos: this.pos(index) };\r\n        }\r\n        return this.fillCacheTillKey(key);\r\n    };\r\n    /**\r\n     * returns the position of the tthe given index\r\n     * @param {number} index index to look for\r\n     * @returns {number}\r\n     */\r\n    KeyFinder.prototype.pos = function (index) {\r\n        if (this.context.exceptions.length === 0) {\r\n            // fast pass\r\n            return index * this.context.defaultRowHeight;\r\n        }\r\n        var cached = this.cache[index];\r\n        if (cached !== undefined) {\r\n            return cached;\r\n        }\r\n        //need to compute it\r\n        // find the starting point where to start counting\r\n        var start = this.findValidStart(index);\r\n        if (start < 0) {\r\n            this.fillCache(0, index, 0);\r\n        }\r\n        else {\r\n            this.fillCache(start + 1, index, this.cache[start] + this.heightOf(start));\r\n        }\r\n        return this.cache[index];\r\n    };\r\n    KeyFinder.prototype.fillCache = function (first, last, offset, callback) {\r\n        if (last <= this.lastFilled) {\r\n            //everything already there\r\n            if (!callback) {\r\n                return;\r\n            }\r\n            for (var i = first; i <= last; ++i) {\r\n                callback(i, this.key(i), this.cache[i]);\r\n            }\r\n            return;\r\n        }\r\n        var pos = offset;\r\n        for (var i = first; i <= last; ++i) {\r\n            this.cache[i] = pos;\r\n            var key = this.key(i);\r\n            this.key2index.set(key, i);\r\n            if (callback) {\r\n                callback(i, key, pos);\r\n            }\r\n            pos += this.heightOf(i);\r\n        }\r\n    };\r\n    /**\r\n     * returns the height of the row identified by index\r\n     * @param {number} index\r\n     * @returns {number}\r\n     */\r\n    KeyFinder.prototype.heightOf = function (index) {\r\n        var lookup = this.context.exceptionsLookup;\r\n        return lookup.has(index) ? lookup.get(index) : this.context.defaultRowHeight;\r\n    };\r\n    /**\r\n     * see heightOf but ignores padding and optional null in case of default height\r\n     * @param {number} index row index\r\n     * @param {boolean} returnDefault return null if default height\r\n     * @returns {number}\r\n     */\r\n    KeyFinder.prototype.exceptionHeightOf = function (index, returnDefault) {\r\n        if (returnDefault === void 0) { returnDefault = false; }\r\n        var padding = this.context.padding(index);\r\n        var lookup = this.context.exceptionsLookup;\r\n        if (lookup.has(index)) {\r\n            return lookup.get(index) - padding;\r\n        }\r\n        return returnDefault ? this.context.defaultRowHeight - padding : null;\r\n    };\r\n    /**\r\n     * padding of the given index\r\n     * @param {number} index\r\n     * @returns {number}\r\n     */\r\n    KeyFinder.prototype.padding = function (index) {\r\n        return this.context.padding(index);\r\n    };\r\n    KeyFinder.prototype.fillCacheTillKey = function (target) {\r\n        var pos = 0;\r\n        for (var i = this.lastFilled; i < this.context.numberOfRows; ++i, ++this.lastFilled) {\r\n            var c = this.cache[i];\r\n            if (c !== undefined) {\r\n                pos = c + this.heightOf(i);\r\n                continue;\r\n            }\r\n            // new one fill up\r\n            var key = this.key(i);\r\n            this.cache[i] = pos;\r\n            this.key2index.set(key, i);\r\n            if (key === target) {\r\n                return { index: i, pos: pos };\r\n            }\r\n            pos += this.heightOf(i);\r\n        }\r\n        return { index: -1, pos: -1 };\r\n    };\r\n    /**\r\n     * computes the positions and keys for a range of given indices\r\n     * @param {number} first first row index\r\n     * @param {number} last last row index\r\n     * @param {number} offset pos offset for the first row index\r\n     * @param {(index: number, key: string, pos: number) => void} callback callack for each identified index\r\n     */\r\n    KeyFinder.prototype.positions = function (first, last, offset, callback) {\r\n        this.fillCache(first, last, offset, callback);\r\n    };\r\n    return KeyFinder;\r\n}());\r\nexport default KeyFinder;\r\n//# sourceMappingURL=KeyFinder.js.map","export var defaultMode = 'animation'; // Boolean((<any>window).chrome) ? 'animation' : 0, // animation frame on chrome;\r\nfunction dummy() {\r\n    return {\r\n        handler: [],\r\n        prev: null,\r\n        timer: -1\r\n    };\r\n}\r\nvar ScrollHandler = /** @class */ (function () {\r\n    function ScrollHandler(node) {\r\n        // this.current = this.asInfo();\r\n        var _this = this;\r\n        this.node = node;\r\n        this.sync = dummy();\r\n        this.animation = dummy();\r\n        this.numbers = new Map();\r\n        this.handleAnimationImpl = function () {\r\n            if (_this.animation.timer !== 1) {\r\n                return;\r\n            }\r\n            _this.handle(_this.animation);\r\n            _this.animation.timer = -1;\r\n        };\r\n        node.addEventListener('scroll', function () {\r\n            // this.current = this.asInfo();\r\n            // if (this.prev && (Math.abs(this.current.left - this.prev.left) + Math.abs(this.current.top - this.prev.top)) < 4) {\r\n            //   return;\r\n            // }\r\n            // this.prev = this.current;\r\n            if (_this.sync.handler.length > 0) {\r\n                _this.handle(_this.sync);\r\n            }\r\n            _this.handleAnimation();\r\n            _this.handleTimeouts();\r\n        }, {\r\n            passive: true\r\n        });\r\n    }\r\n    Object.defineProperty(ScrollHandler.prototype, \"current\", {\r\n        // current: IScrollInfo;\r\n        // private prev: IScrollInfo | null = null;\r\n        get: function () {\r\n            return this.asInfo();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ScrollHandler.prototype.handle = function (handler) {\r\n        var info = this.current;\r\n        if (handler.prev && (Math.abs(info.left - handler.prev.left) + Math.abs(info.top - handler.prev.top)) < 4) {\r\n            return;\r\n        }\r\n        handler.prev = info;\r\n        for (var _i = 0, _a = handler.handler; _i < _a.length; _i++) {\r\n            var s = _a[_i];\r\n            s(info);\r\n        }\r\n    };\r\n    ScrollHandler.prototype.handleAnimation = function () {\r\n        if (this.animation.timer !== -1 || this.animation.handler.length === 0) {\r\n            return;\r\n        }\r\n        this.animation.timer = 1;\r\n        requestAnimationFrame(this.handleAnimationImpl);\r\n    };\r\n    ScrollHandler.prototype.handleTimeouts = function () {\r\n        var _this = this;\r\n        if (this.numbers.size === 0) {\r\n            return;\r\n        }\r\n        this.numbers.forEach(function (handler, n) {\r\n            if (handler.handler.length === 0) {\r\n                return;\r\n            }\r\n            handler.timer = self.setTimeout(function () {\r\n                _this.handle(handler);\r\n                handler.timer = -1;\r\n            }, n);\r\n        });\r\n    };\r\n    ScrollHandler.prototype.asInfo = function () {\r\n        return {\r\n            left: this.node.scrollLeft,\r\n            top: this.node.scrollTop,\r\n            width: this.node.clientWidth,\r\n            height: this.node.clientHeight\r\n        };\r\n    };\r\n    ScrollHandler.prototype.push = function (mode, handler) {\r\n        if (typeof mode === 'number') {\r\n            if (!this.numbers.has(mode)) {\r\n                this.numbers.set(mode, dummy());\r\n            }\r\n            this.numbers.get(mode).handler.push(handler);\r\n        }\r\n        switch (mode) {\r\n            case 'sync':\r\n                this.sync.handler.push(handler);\r\n                break;\r\n            case 'animation':\r\n                this.animation.handler.push(handler);\r\n                break;\r\n        }\r\n    };\r\n    ScrollHandler.prototype.remove = function (handler) {\r\n        var test = [this.sync, this.animation].concat(Array.from(this.numbers.values()));\r\n        return test.some(function (d) {\r\n            var index = d.handler.indexOf(handler);\r\n            if (index >= 0) {\r\n                d.handler.splice(index, 1);\r\n            }\r\n            return index >= 0;\r\n        });\r\n    };\r\n    ScrollHandler.prototype.isWaiting = function (mode) {\r\n        switch (mode) {\r\n            case 'animation':\r\n                return this.animation.timer >= 0;\r\n            case 'sync':\r\n                return false;\r\n            default:\r\n                return this.numbers.has(mode) && this.numbers.get(mode).timer >= 0;\r\n        }\r\n    };\r\n    return ScrollHandler;\r\n}());\r\n/**\r\n * @internal\r\n */\r\nexport function addScroll(scroller, mode, handler) {\r\n    // hide in element to have just one real listener\r\n    if (!scroller.__le_scroller__) {\r\n        scroller.__le_scroller__ = new ScrollHandler(scroller);\r\n    }\r\n    var s = scroller.__le_scroller__;\r\n    s.push(mode, handler);\r\n    return s.asInfo();\r\n}\r\n/**\r\n * @internal\r\n */\r\nexport function isScrollEventWaiting(scroller, mode) {\r\n    if (!scroller.__le_scroller__) {\r\n        return false;\r\n    }\r\n    var s = scroller.__le_scroller__;\r\n    return s.isWaiting(mode);\r\n}\r\n/**\r\n * @internal\r\n */\r\nexport function removeScroll(scroller, handler) {\r\n    if (scroller.__le_scroller__) {\r\n        scroller.__le_scroller__.remove(handler);\r\n    }\r\n}\r\n//# sourceMappingURL=scroll.js.map","export * from './scroll';\r\n/**\r\n * clear node clearing\r\n * @param node\r\n * @internal\r\n */\r\nexport function clear(node) {\r\n    while (node.lastChild) {\r\n        node.removeChild(node.lastChild);\r\n    }\r\n    return node;\r\n}\r\n//# sourceMappingURL=index.js.map","var RowHeightException = /** @class */ (function () {\r\n    function RowHeightException(index, y, height) {\r\n        this.index = index;\r\n        this.y = y;\r\n        this.height = height;\r\n    }\r\n    Object.defineProperty(RowHeightException.prototype, \"y2\", {\r\n        get: function () {\r\n            return this.y + this.height;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return RowHeightException;\r\n}());\r\n/**\r\n * creates a uniform exception context, i.e no exceptions all rows are of the same height\r\n * @param {number} numberOfRows\r\n * @param {number} rowHeight\r\n * @param {number} rowPadding padding between rows\r\n * @return {IExceptionContext}\r\n */\r\nexport function uniformContext(numberOfRows, rowHeight, rowPadding) {\r\n    if (rowPadding === void 0) { rowPadding = 0; }\r\n    rowHeight += rowPadding;\r\n    var exceptionsLookup = {\r\n        keys: function () { return [].values(); },\r\n        get: function () { return rowHeight; },\r\n        has: function () { return false; },\r\n        size: 0\r\n    };\r\n    return {\r\n        exceptions: [],\r\n        exceptionsLookup: exceptionsLookup,\r\n        totalHeight: numberOfRows * rowHeight,\r\n        numberOfRows: numberOfRows,\r\n        defaultRowHeight: rowHeight,\r\n        padding: function () { return rowPadding; }\r\n    };\r\n}\r\n/**\r\n * computes the most frequent value in a given array like\r\n * @param {} values\r\n * @return {number}\r\n */\r\nfunction mostFrequentValue(values) {\r\n    var lookup = new Map();\r\n    values.forEach(function (value) {\r\n        lookup.set(value, (lookup.get(value) || 0) + 1);\r\n    });\r\n    if (lookup.size === 0) {\r\n        return 20; // default value since it doesn't matter\r\n    }\r\n    // sort desc take first key and asc by the second in case of tie, it is optimized to have exceptions for higher rows less for big rows\r\n    var sorted = Array.from(lookup).sort(function (a, b) {\r\n        if (a[1] !== b[1]) {\r\n            return b[1] - a[1];\r\n        }\r\n        return a[0] - b[0];\r\n    });\r\n    var mostFrequent = sorted[0][0];\r\n    if (mostFrequent === 0) { // cornercase\r\n        return sorted.length > 1 ? sorted[1][0] : 20; // all empty\r\n    }\r\n    return mostFrequent;\r\n}\r\n/**\r\n * creates a non uniform context based on the given array like heights\r\n * @param rowHeights arrayish to get the heights\r\n * @param {number} defaultRowHeight if not given the most frequent value will be used\r\n * @param {number} rowPadding padding between rows\r\n * @return {IExceptionContext}\r\n */\r\nexport function nonUniformContext(rowHeights, defaultRowHeight, rowPadding) {\r\n    if (defaultRowHeight === void 0) { defaultRowHeight = NaN; }\r\n    if (rowPadding === void 0) { rowPadding = 0; }\r\n    var exceptionsLookup = new Map();\r\n    var exceptions = [];\r\n    var padding = typeof rowPadding === 'function' ? rowPadding : function () { return rowPadding; };\r\n    if (isNaN(defaultRowHeight)) {\r\n        defaultRowHeight = mostFrequentValue(rowHeights);\r\n    }\r\n    defaultRowHeight += padding(-1);\r\n    var prev = -1, acc = 0, totalHeight = 0, numberOfRows = 0;\r\n    rowHeights.forEach(function (height, index) {\r\n        height += padding(index);\r\n        totalHeight += height;\r\n        numberOfRows++;\r\n        if (height === defaultRowHeight) {\r\n            //regular\r\n            return;\r\n        }\r\n        exceptionsLookup.set(index, height);\r\n        var between = (index - prev - 1) * defaultRowHeight;\r\n        prev = index;\r\n        var y = acc + between;\r\n        acc = y + height;\r\n        exceptions.push(new RowHeightException(index, y, height));\r\n    });\r\n    return { exceptionsLookup: exceptionsLookup, exceptions: exceptions, totalHeight: totalHeight, defaultRowHeight: defaultRowHeight, numberOfRows: numberOfRows, padding: padding };\r\n}\r\n/**\r\n * creates a random context with the given constraints\r\n * @param {number} numberOfRows\r\n * @param {number} defaultRowHeight\r\n * @param {number} minRowHeight\r\n * @param {number} maxRowHeight\r\n * @param {number} ratio around ratio percent will get a non uniform height\r\n * @param {number} seed random seed\r\n * @return {IExceptionContext}\r\n */\r\nexport function randomContext(numberOfRows, defaultRowHeight, minRowHeight, maxRowHeight, ratio, seed) {\r\n    if (minRowHeight === void 0) { minRowHeight = 2; }\r\n    if (maxRowHeight === void 0) { maxRowHeight = defaultRowHeight * 10; }\r\n    if (ratio === void 0) { ratio = 0.2; }\r\n    if (seed === void 0) { seed = Date.now(); }\r\n    var actSeed = seed;\r\n    var random = function () {\r\n        var x = Math.sin(actSeed++) * 10000;\r\n        return x - Math.floor(x);\r\n    };\r\n    var getter = function () {\r\n        var coin = random();\r\n        if (coin < ratio) {\r\n            //non uniform\r\n            return minRowHeight + Math.round(random() * (maxRowHeight - minRowHeight));\r\n        }\r\n        return defaultRowHeight;\r\n    };\r\n    var forEach = function (callback) {\r\n        for (var index = 0; index < numberOfRows; ++index) {\r\n            callback(getter(), index);\r\n        }\r\n    };\r\n    return nonUniformContext({ forEach: forEach }, defaultRowHeight);\r\n}\r\n/**\r\n * computes the visible range\r\n * @param {number} scrollTop top scrolling\r\n * @param {number} clientHeight visible height\r\n * @param {number} rowHeight height of a row by default\r\n * @param {IRowHeightException[]} heightExceptions exceptions of this default height\r\n * @param {number} numberOfRows the number of rows\r\n * @return {IVisibleRange} the computed visible range\r\n */\r\nexport function range(scrollTop, clientHeight, rowHeight, heightExceptions, numberOfRows) {\r\n    if (numberOfRows === 0) {\r\n        return { first: 0, last: -1, firstRowPos: 0, endPos: 0 };\r\n    }\r\n    if (numberOfRows === 1) {\r\n        return {\r\n            first: 0,\r\n            last: 0,\r\n            firstRowPos: 0,\r\n            endPos: heightExceptions.length === 0 ? rowHeight : heightExceptions[0].y2\r\n        };\r\n    }\r\n    var offset = scrollTop;\r\n    var offset2 = offset + clientHeight;\r\n    function indexOf(pos, indexShift) {\r\n        return Math.min(numberOfRows - 1, indexShift + Math.max(0, Math.floor(pos / rowHeight)));\r\n    }\r\n    function calc(offsetShift, indexShift, isGuess) {\r\n        if (isGuess === void 0) { isGuess = false; }\r\n        var shifted = offset - offsetShift;\r\n        var shifted2 = offset2 - offsetShift;\r\n        var first = indexOf(shifted, indexShift);\r\n        var last = indexOf(shifted2, indexShift);\r\n        var firstRowPos = offsetShift + (first - indexShift) * rowHeight;\r\n        var endPos = offsetShift + (last + 1 - indexShift) * rowHeight;\r\n        //if (!isGuess) {\r\n        //  console.log(first, '@', firstRowPos, last, '#', end, offset, offset2, firstRowPos <= offset, offset2 <= end);\r\n        //}\r\n        console.assert(!isGuess || !(firstRowPos > offset || (endPos < offset2 && last < numberOfRows - 1)), 'error', isGuess, firstRowPos, endPos, offset, offset2, indexShift, offsetShift);\r\n        return { first: first, last: last, firstRowPos: firstRowPos, endPos: endPos };\r\n    }\r\n    var r = calc(0, 0, true);\r\n    if (heightExceptions.length === 0) {\r\n        //uniform\r\n        return r;\r\n    }\r\n    if (r.last < heightExceptions[0].index) {\r\n        //console.log('before the first exception = uniform with no shift');\r\n        //console.log(r.first, '@', r.firstRowPos, r.last, '#', r.end, offset, offset2, r.firstRowPos <= offset, offset2 <= r.end);\r\n        return r;\r\n    }\r\n    if (r.last === heightExceptions[0].index && heightExceptions[0].height > rowHeight) {\r\n        return Object.assign(r, { endPos: heightExceptions[0].y2 });\r\n    }\r\n    //the position where the exceptions ends\r\n    var lastPos = heightExceptions[heightExceptions.length - 1];\r\n    if (offset >= lastPos.y) {\r\n        var rest = calc(lastPos.y2, lastPos.index + 1);\r\n        if (offset < lastPos.y2) {\r\n            // include me\r\n            return Object.assign(rest, { first: lastPos.index, firstRowPos: lastPos.y });\r\n        }\r\n        return rest;\r\n    }\r\n    //we have some exceptions\r\n    var visible = [];\r\n    var closest = heightExceptions[0]; //closest before not in range\r\n    for (var _i = 0, heightExceptions_1 = heightExceptions; _i < heightExceptions_1.length; _i++) {\r\n        var item = heightExceptions_1[_i];\r\n        var y = item.y, y2 = item.y2;\r\n        if (y >= offset2) {\r\n            break;\r\n        }\r\n        if (y2 <= offset) {\r\n            closest = item;\r\n            continue;\r\n        }\r\n        visible.push(item);\r\n    }\r\n    if (visible.length === 0) {\r\n        //console.log('we are in the between some exceptions and none are visible');\r\n        return calc(closest.y2, closest.index + 1); //skip myself\r\n    }\r\n    {\r\n        //console.log('we show at least one exception');\r\n        var firstException = visible[0];\r\n        var lastException = visible[visible.length - 1];\r\n        var first = Math.max(0, firstException.index - Math.max(0, Math.ceil((firstException.y - offset) / rowHeight)));\r\n        var last = lastException.index;\r\n        if (offset2 >= lastException.y2) {\r\n            last = indexOf(offset2 - lastException.y2, lastException.index + 1);\r\n        }\r\n        var firstRowPos = firstException.y - (firstException.index - first) * rowHeight;\r\n        var endPos = lastException.y2 + (last - lastException.index) * rowHeight;\r\n        //console.log(first, '@', firstRowPos, last, '#', end, offset, offset2, firstRowPos <= offset, offset2 <= end);\r\n        console.assert(firstRowPos <= offset && (endPos >= offset2 || last === numberOfRows - 1), 'error', firstRowPos, endPos, offset, offset2, firstException, lastException);\r\n        return { first: first, last: last, firstRowPos: firstRowPos, endPos: endPos };\r\n    }\r\n}\r\nexport function frozenDelta(current, target) {\r\n    var clength = current.length;\r\n    var tlength = target.length;\r\n    if (clength === 0) {\r\n        return { added: target, removed: [], common: 0 };\r\n    }\r\n    if (tlength === 0) {\r\n        return { added: [], removed: current, common: 0 };\r\n    }\r\n    if (clength === tlength) { //since sorted and left increasing true\r\n        return { added: [], removed: [], common: clength };\r\n    }\r\n    var removed = current.slice(Math.min(tlength, clength));\r\n    var added = target.slice(Math.min(tlength, clength));\r\n    return { added: added, removed: removed, common: clength - removed.length };\r\n}\r\nexport function updateFrozen(old, columns, first) {\r\n    var oldLast = old.length === 0 ? 0 : old[old.length - 1] + 1;\r\n    var added = [];\r\n    var removed = [];\r\n    for (var i = old.length - 1; i >= 0; --i) {\r\n        var index = old[i];\r\n        if (index >= first) {\r\n            removed.push(old.pop());\r\n        }\r\n        else {\r\n            // can stop since sorted and it will never happen again\r\n            break;\r\n        }\r\n    }\r\n    //added\r\n    for (var i = oldLast; i < first; ++i) {\r\n        if (columns[i].frozen) {\r\n            added.push(i);\r\n            old.push(i);\r\n        }\r\n    }\r\n    return { target: old, added: added, removed: removed };\r\n}\r\n//# sourceMappingURL=logic.js.map","/**\r\n * scrolling result\r\n */\r\nexport var EScrollResult;\r\n(function (EScrollResult) {\r\n    /**\r\n     * nothing has changed\r\n     */\r\n    EScrollResult[EScrollResult[\"NONE\"] = 0] = \"NONE\";\r\n    /**\r\n     * all rows needed to be recreated\r\n     */\r\n    EScrollResult[EScrollResult[\"ALL\"] = 1] = \"ALL\";\r\n    /**\r\n     * unknown\r\n     */\r\n    EScrollResult[EScrollResult[\"SOME\"] = 2] = \"SOME\";\r\n    /**\r\n     * some rows are added at the bottom\r\n     */\r\n    EScrollResult[EScrollResult[\"SOME_BOTTOM\"] = 3] = \"SOME_BOTTOM\";\r\n    /**\r\n     * some rows are added at the top\r\n     */\r\n    EScrollResult[EScrollResult[\"SOME_TOP\"] = 4] = \"SOME_TOP\";\r\n})(EScrollResult || (EScrollResult = {}));\r\n//# sourceMappingURL=IMixin.js.map","var PREFIX = 'le';\r\n/**\r\n * @internal\r\n * @param suffix suffix to suffix\r\n */\r\nexport function cssClass(suffix) {\r\n    if (!suffix) {\r\n        return PREFIX;\r\n    }\r\n    return PREFIX + \"-\" + suffix;\r\n}\r\nexport var CSS_CLASS_LOADING = cssClass('loading');\r\nexport var CSS_CLASS_FROZEN = cssClass('frozen');\r\nexport var CSS_CLASS_HIDDEN = cssClass('hidden');\r\nexport var CSS_CLASS_MULTI = cssClass('multi');\r\nexport var CSS_CLASS_EVEN = cssClass('even');\r\nexport var CSS_CLASS_SHIFTED = cssClass('shifted');\r\nexport var CSS_CLASS_SCROLLBAR_TESTER = cssClass('scrollbar-tester');\r\nexport var CSS_CLASS_HEADER = cssClass('header');\r\nexport var CSS_CLASS_BODY = cssClass('body');\r\nexport var CSS_CLASS_FOOTER = cssClass('footer');\r\nexport var CSS_CLASS_THEAD = cssClass('thead');\r\nexport var CSS_CLASS_TBODY = cssClass('tbody');\r\nexport var CSS_CLASS_TR = cssClass('tr');\r\nexport var CSS_CLASS_TH = cssClass('th');\r\nexport var CSS_CLASS_TD = cssClass('td');\r\nexport var CSS_CLASS_SCROLLING = cssClass('scrolling');\r\nexport var CSS_CLASS_ROW_ANIMATION = cssClass('row-animation');\r\n//# sourceMappingURL=index.js.map","import { ABORTED, isAbortAble } from './abortAble';\r\nimport { defaultPhases, EAnimationMode, noAnimationChange } from './animation';\r\nimport KeyFinder from './animation/KeyFinder';\r\nimport { addScroll, clear, defaultMode, removeScroll } from './internal';\r\nimport { isScrollEventWaiting } from './internal/scroll';\r\nimport { range } from './logic';\r\nimport { EScrollResult } from './mixin';\r\nimport { cssClass, CSS_CLASS_EVEN, CSS_CLASS_FOOTER, CSS_CLASS_LOADING, CSS_CLASS_ROW_ANIMATION, CSS_CLASS_SCROLLING, CSS_CLASS_TR } from './styles';\r\nexport function isLoadingCell(node) {\r\n    return node.classList.contains(CSS_CLASS_LOADING);\r\n}\r\n/**\r\n * base class for creating a scalable table renderer based on rows\r\n */\r\nvar ARowRenderer = /** @class */ (function () {\r\n    function ARowRenderer(body, options) {\r\n        var _this = this;\r\n        if (options === void 0) { options = {}; }\r\n        this.body = body;\r\n        this.pool = [];\r\n        this.loadingPool = [];\r\n        this.loading = new WeakMap();\r\n        /**\r\n         * currently visible slice\r\n         */\r\n        this.visible = {\r\n            first: 0,\r\n            forcedFirst: 0,\r\n            last: -1,\r\n            forcedLast: -1\r\n        };\r\n        /**\r\n         * position of the first visible row in pixel\r\n         * @type {number}\r\n         */\r\n        this.visibleFirstRowPos = 0;\r\n        this.scrollListener = null;\r\n        this.lastScrollInfo = null;\r\n        this.abortAnimation = function () { return undefined; };\r\n        this.options = {\r\n            async: defaultMode,\r\n            minScrollDelta: 10,\r\n            mixins: [],\r\n            scrollingHint: false,\r\n            batchSize: 10,\r\n            striped: false,\r\n            viewportOversize: 200\r\n        };\r\n        this.adapter = this.createAdapter();\r\n        Object.assign(this.options, options);\r\n        this.mixins = this.options.mixins.map(function (mixinClass) { return new mixinClass(_this.adapter); });\r\n        this.fragment = body.ownerDocument.createDocumentFragment();\r\n    }\r\n    /**\r\n     * register another mixin to this renderer\r\n     * @param {IMixinClass} mixinClass the mixin class to instantitiate\r\n     * @param options optional constructor options\r\n     */\r\n    ARowRenderer.prototype.addMixin = function (mixinClass, options) {\r\n        this.mixins.push(new mixinClass(this.adapter, options));\r\n    };\r\n    ARowRenderer.prototype.createAdapter = function () {\r\n        var _this = this;\r\n        var r = {\r\n            visible: this.visible,\r\n            addAtBeginning: this.addAtBeginning.bind(this),\r\n            addAtBottom: this.addAtBottom.bind(this),\r\n            removeFromBeginning: this.removeFromBeginning.bind(this),\r\n            removeFromBottom: this.removeFromBottom.bind(this),\r\n            updateOffset: this.updateOffset.bind(this),\r\n            isScrollEventWaiting: function () { return isScrollEventWaiting(_this.bodyScroller, _this.options.async); }\r\n        };\r\n        Object.defineProperties(r, {\r\n            visibleFirstRowPos: {\r\n                get: function () { return _this.visibleFirstRowPos; },\r\n                enumerable: true\r\n            },\r\n            context: {\r\n                get: function () { return _this.context; },\r\n                enumerable: true\r\n            },\r\n            scrollOffset: {\r\n                get: function () { return _this.lastScrollInfo ? _this.lastScrollInfo.top : 0; },\r\n                enumerable: true\r\n            },\r\n            scrollTotal: {\r\n                get: function () { return _this.lastScrollInfo ? _this.lastScrollInfo.height : _this.bodyScroller.clientHeight; },\r\n                enumerable: true\r\n            }\r\n        });\r\n        return r;\r\n    };\r\n    Object.defineProperty(ARowRenderer.prototype, \"bodyScroller\", {\r\n        /**\r\n         * get the scrolling container i.e. parent of the body element\r\n         * @returns {HTMLElement}\r\n         */\r\n        get: function () {\r\n            return this.body.parentElement;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ARowRenderer.prototype, \"bodySizer\", {\r\n        get: function () {\r\n            var parent = this.bodyScroller;\r\n            var sizer = Array.from(parent.children).find(function (d) { return d.tagName.toLowerCase() === 'footer'; });\r\n            if (sizer) {\r\n                return sizer;\r\n            }\r\n            var s = parent.ownerDocument.createElement('footer');\r\n            s.classList.add(CSS_CLASS_FOOTER, cssClass(\"footer-\" + this.idPrefix));\r\n            parent.insertBefore(s, parent.firstChild);\r\n            return s;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * initializes the table and register the onscroll listener\r\n     * @returns {void} nothing\r\n     */\r\n    ARowRenderer.prototype.init = function () {\r\n        var _this = this;\r\n        var scroller = this.bodyScroller;\r\n        var old = addScroll(scroller, this.options.async, this.scrollListener = function (act) {\r\n            _this.lastScrollInfo = act;\r\n            if (Math.abs(old.top - act.top) < _this.options.minScrollDelta && Math.abs(old.height - act.height) < _this.options.minScrollDelta) {\r\n                return;\r\n            }\r\n            var isGoingDown = act.top > old.top;\r\n            old = act;\r\n            _this.onScrolledVertically(act.top, act.height, isGoingDown);\r\n            if (_this.options.scrollingHint) {\r\n                _this.body.classList.remove(CSS_CLASS_SCROLLING);\r\n            }\r\n        });\r\n        if (this.options.scrollingHint) {\r\n            addScroll(scroller, 'animation', function () { return _this.body.classList.add(CSS_CLASS_SCROLLING); });\r\n        }\r\n        this.recreate();\r\n    };\r\n    /**\r\n     * destroys this renderer and unregisters all event listeners\r\n     */\r\n    ARowRenderer.prototype.destroy = function () {\r\n        removeScroll(this.bodyScroller, this.scrollListener);\r\n        this.body.remove();\r\n    };\r\n    ARowRenderer.cleanUp = function (item) {\r\n        item.style.height = null;\r\n    };\r\n    ARowRenderer.prototype.select = function (index) {\r\n        var item;\r\n        var result;\r\n        if (this.pool.length > 0) {\r\n            item = this.pool.pop();\r\n            result = this.updateRow(item, index);\r\n        }\r\n        else if (this.loadingPool.length > 0) {\r\n            item = this.loadingPool.pop();\r\n            item.classList.remove(CSS_CLASS_LOADING);\r\n            result = this.createRow(item, index);\r\n        }\r\n        else {\r\n            item = this.body.ownerDocument.createElement('div');\r\n            item.classList.add(CSS_CLASS_TR, cssClass(\"tr-\" + this.idPrefix));\r\n            result = this.createRow(item, index);\r\n        }\r\n        item.dataset.index = String(index);\r\n        if (this.options.striped) {\r\n            item.classList.toggle(CSS_CLASS_EVEN, index % 2 === 0);\r\n        }\r\n        return { item: item, result: result };\r\n    };\r\n    ARowRenderer.prototype.selectProxy = function () {\r\n        var proxy;\r\n        if (this.loadingPool.length > 0) {\r\n            proxy = this.loadingPool.pop();\r\n        }\r\n        else {\r\n            proxy = this.body.ownerDocument.createElement('div');\r\n            proxy.classList.add(CSS_CLASS_LOADING, CSS_CLASS_TR, cssClass(\"tr-\" + this.idPrefix));\r\n        }\r\n        return proxy;\r\n    };\r\n    ARowRenderer.prototype.recycle = function (item) {\r\n        ARowRenderer.cleanUp(item);\r\n        // check if the original dom element is still being manipulated\r\n        if (this.loading.has(item)) {\r\n            var abort = this.loading.get(item);\r\n            abort.abort();\r\n        }\r\n        else {\r\n            this.pool.push(item);\r\n        }\r\n    };\r\n    ARowRenderer.prototype.proxy = function (item, result) {\r\n        var _this = this;\r\n        if (!isAbortAble(result)) {\r\n            return item;\r\n        }\r\n        var abort = result;\r\n        //lazy loading\r\n        var real = item;\r\n        var proxy = this.selectProxy();\r\n        // copy attributes\r\n        proxy.dataset.index = real.dataset.index;\r\n        proxy.style.height = real.style.height;\r\n        this.loading.set(proxy, abort);\r\n        abort.then(function (result) {\r\n            if (result === ABORTED) {\r\n                //aborted can recycle the real one\r\n                ARowRenderer.cleanUp(real);\r\n                _this.pool.push(real);\r\n            }\r\n            else {\r\n                //fully loaded\r\n                _this.body.replaceChild(real, proxy);\r\n            }\r\n            _this.loading.delete(proxy);\r\n            ARowRenderer.cleanUp(proxy);\r\n            _this.loadingPool.push(proxy);\r\n        });\r\n        return proxy;\r\n    };\r\n    ARowRenderer.prototype.create = function (index) {\r\n        var _a = this.select(index), item = _a.item, result = _a.result;\r\n        var _b = this.context, ex = _b.exceptionsLookup, padding = _b.padding;\r\n        if (ex.has(index)) {\r\n            item.style.height = ex.get(index) - padding(index) + \"px\";\r\n        }\r\n        return this.proxy(item, result);\r\n    };\r\n    ARowRenderer.prototype.removeAll = function (perform) {\r\n        if (perform === void 0) { perform = true; }\r\n        var b = this.body;\r\n        if (!perform) {\r\n            return Array.from(b.children);\r\n        }\r\n        var torecycle = [];\r\n        while (b.lastElementChild) {\r\n            var i = b.lastElementChild;\r\n            b.removeChild(i);\r\n            this.recycle(i);\r\n            torecycle.push(i);\r\n        }\r\n        return torecycle;\r\n    };\r\n    /**\r\n     * triggers and visual update of all visible rows\r\n     */\r\n    ARowRenderer.prototype.update = function () {\r\n        var _this = this;\r\n        var first = this.visible.first;\r\n        var fragment = this.fragment;\r\n        var items = Array.from(this.body.children);\r\n        clear(this.body);\r\n        items.forEach(function (item, i) {\r\n            if (_this.loading.has(item)) {\r\n                // still loading\r\n                fragment.appendChild(item);\r\n                return;\r\n            }\r\n            var abort = _this.updateRow(item, i + first);\r\n            fragment.appendChild(_this.proxy(item, abort));\r\n        });\r\n        this.body.appendChild(fragment);\r\n    };\r\n    /**\r\n     * utility to execute a function for each visible row\r\n     * @param {(row: HTMLElement, rowIndex: number) => void} callback callback to execute\r\n     * @param {boolean} inplace whether the DOM changes should be performed inplace instead of in a fragment\r\n     */\r\n    ARowRenderer.prototype.forEachRow = function (callback, inplace) {\r\n        var _this = this;\r\n        if (inplace === void 0) { inplace = false; }\r\n        var rows = Array.from(this.body.children);\r\n        var fragment = this.fragment;\r\n        if (!inplace) {\r\n            clear(this.body);\r\n        }\r\n        rows.forEach(function (row, index) {\r\n            if (!isLoadingCell(row) && row.dataset.animation !== 'update_remove' && row.dataset.animation !== 'hide') {\r\n                //skip loading ones and temporary ones\r\n                callback(row, index + _this.visible.first);\r\n            }\r\n            if (!inplace) {\r\n                fragment.appendChild(row);\r\n            }\r\n        });\r\n        if (!inplace) {\r\n            this.body.appendChild(fragment);\r\n        }\r\n    };\r\n    ARowRenderer.prototype.removeFromBeginning = function (from, to, perform) {\r\n        if (perform === void 0) { perform = true; }\r\n        return this.remove(from, to, true, perform);\r\n    };\r\n    ARowRenderer.prototype.removeFromBottom = function (from, to, perform) {\r\n        if (perform === void 0) { perform = true; }\r\n        return this.remove(from, to, false, perform);\r\n    };\r\n    ARowRenderer.prototype.remove = function (from, to, fromBeginning, perform) {\r\n        if (perform === void 0) { perform = true; }\r\n        if (to < from) {\r\n            return;\r\n        }\r\n        var b = this.body;\r\n        var torecycle = [];\r\n        // console.log('remove', fromBeginning, (to - from) + 1, this.body.childElementCount - ((to - from) + 1));\r\n        var act = (fromBeginning ? b.firstChild : b.lastChild);\r\n        for (var i = from; i <= to; ++i) {\r\n            var item = act;\r\n            act = (fromBeginning ? act.nextSibling : act.previousSibling);\r\n            if (perform) {\r\n                b.removeChild(item);\r\n                this.recycle(item);\r\n            }\r\n            torecycle.push(item);\r\n        }\r\n        return torecycle;\r\n    };\r\n    ARowRenderer.prototype.addAtBeginning = function (from, to, perform) {\r\n        if (perform === void 0) { perform = true; }\r\n        if (to < from) {\r\n            return;\r\n        }\r\n        // console.log('add', (to - from) + 1, this.body.childElementCount + ((to - from) + 1));\r\n        var fragment = this.fragment;\r\n        if (from === to && perform) {\r\n            this.body.insertBefore(this.create(from), this.body.firstChild);\r\n            return;\r\n        }\r\n        for (var i = from; i <= to; ++i) {\r\n            fragment.appendChild(this.create(i));\r\n        }\r\n        if (perform) {\r\n            this.body.insertBefore(fragment, this.body.firstChild);\r\n        }\r\n        return fragment;\r\n    };\r\n    ARowRenderer.prototype.addAtBottom = function (from, to, perform) {\r\n        if (perform === void 0) { perform = true; }\r\n        if (to < from) {\r\n            return;\r\n        }\r\n        // console.log('add_b', (to - from) + 1, this.body.childElementCount + ((to - from) + 1));\r\n        if (from === to && perform) {\r\n            this.body.appendChild(this.create(from));\r\n            return;\r\n        }\r\n        var fragment = this.fragment;\r\n        for (var i = from; i <= to; ++i) {\r\n            fragment.appendChild(this.create(i));\r\n        }\r\n        if (perform) {\r\n            this.body.appendChild(fragment);\r\n        }\r\n        return fragment;\r\n    };\r\n    ARowRenderer.prototype.updateOffset = function (firstRowPos) {\r\n        this.visibleFirstRowPos = firstRowPos;\r\n        this.updateSizer(firstRowPos);\r\n    };\r\n    ARowRenderer.prototype.updateSizer = function (firstRowPos) {\r\n        var totalHeight = this.context.totalHeight;\r\n        setTransform(this.body, 0, firstRowPos.toFixed(0));\r\n        setTransform(this.bodySizer, 0, Math.max(0, totalHeight - 1).toFixed(0));\r\n    };\r\n    /**\r\n     * removes all rows and recreates the table\r\n     * @param {IAnimationContext} ctx optional animation context to create a transition between the previous and the current tables\r\n     * @returns {void} nothing\r\n     */\r\n    ARowRenderer.prototype.recreate = function (ctx) {\r\n        this.abortAnimation();\r\n        if (ctx) {\r\n            return this.recreateAnimated(ctx);\r\n        }\r\n        return this.recreatePure();\r\n    };\r\n    ARowRenderer.prototype.recreatePure = function () {\r\n        var context = this.context;\r\n        var scroller = this.bodyScroller;\r\n        //update first to avoid resetting scrollTop\r\n        this.updateOffset(0);\r\n        this.removeAll();\r\n        this.clearPool();\r\n        var _a = range(scroller.scrollTop, scroller.clientHeight, context.defaultRowHeight, context.exceptions, context.numberOfRows), first = _a.first, last = _a.last, firstRowPos = _a.firstRowPos;\r\n        this.visible.first = this.visible.forcedFirst = first;\r\n        this.visible.last = this.visible.forcedLast = last;\r\n        if (first < 0) {\r\n            // empty\r\n            this.updateOffset(0);\r\n            return;\r\n        }\r\n        this.addAtBottom(first, last);\r\n        this.updateOffset(firstRowPos);\r\n    };\r\n    ARowRenderer.prototype.recreateAnimated = function (ctx) {\r\n        var _this = this;\r\n        var lookup = new Map();\r\n        var prev = new KeyFinder(ctx.previous, ctx.previousKey);\r\n        var cur = new KeyFinder(this.context, ctx.currentKey);\r\n        var next = range(this.bodyScroller.scrollTop, this.bodyScroller.clientHeight, cur.context.defaultRowHeight, cur.context.exceptions, cur.context.numberOfRows);\r\n        {\r\n            var rows_1 = Array.from(this.body.children);\r\n            var old = Object.assign({}, this.visible);\r\n            //store the current rows in a lookup and clear\r\n            clear(this.body);\r\n            prev.positions(old.first, Math.min(old.last, old.first + rows_1.length), this.visibleFirstRowPos, function (i, key, pos) {\r\n                var n = rows_1[i];\r\n                if (n) { // shouldn't happen that it is not there\r\n                    lookup.set(key, { n: n, pos: pos, i: i });\r\n                }\r\n                // else {\r\n                //  console.error(i, key, pos, rows);\r\n                //}\r\n            });\r\n        }\r\n        this.visible.first = this.visible.forcedFirst = next.first;\r\n        this.visible.last = this.visible.forcedLast = next.last;\r\n        var fragment = this.fragment;\r\n        var animation = [];\r\n        var nodeY = next.firstRowPos;\r\n        cur.positions(next.first, next.last, next.firstRowPos, function (i, key, pos) {\r\n            var node;\r\n            var mode = EAnimationMode.UPDATE;\r\n            var previous;\r\n            if (lookup.has(key)) {\r\n                // still visible\r\n                var item = lookup.get(key);\r\n                lookup.delete(key);\r\n                // update height\r\n                item.n.dataset.index = String(i);\r\n                node = _this.proxy(item.n, _this.updateRow(item.n, i));\r\n                previous = {\r\n                    index: item.i,\r\n                    y: item.pos,\r\n                    height: prev.exceptionHeightOf(item.i, true)\r\n                };\r\n            }\r\n            else {\r\n                // need a new row\r\n                var old = prev.posByKey(key);\r\n                // maybe not visible  before so keep in place\r\n                node = _this.create(i);\r\n                mode = old.index < 0 ? EAnimationMode.SHOW : EAnimationMode.UPDATE_CREATE;\r\n                previous = {\r\n                    index: old.index,\r\n                    y: old.pos >= 0 ? old.pos : pos,\r\n                    height: old.index < 0 ? cur.exceptionHeightOf(i, true) : prev.exceptionHeightOf(old.index, true)\r\n                };\r\n            }\r\n            animation.push({\r\n                node: node,\r\n                key: key,\r\n                mode: mode,\r\n                previous: previous,\r\n                nodeY: nodeY,\r\n                nodeYCurrentHeight: pos,\r\n                current: {\r\n                    index: i,\r\n                    y: pos,\r\n                    height: cur.exceptionHeightOf(i)\r\n                }\r\n            });\r\n            node.style.transform = \"translate(0, \" + (nodeY - pos) + \"px)\";\r\n            nodeY += previous.height + (previous.index < 0 ? cur.padding(i) : prev.padding(previous.index));\r\n            fragment.appendChild(node);\r\n        });\r\n        var nodeYCurrentHeight = next.endPos;\r\n        // items that are going to be removed\r\n        lookup.forEach(function (item, key) {\r\n            // calculate their next position\r\n            var r = cur.posByKey(key);\r\n            // maybe not visible anymore, keep in place\r\n            var nextPos = r.pos >= 0 ? r.pos : item.pos;\r\n            var node = item.n;\r\n            // located at addedPos\r\n            // should end up at nextPos\r\n            // was previously at item.pos\r\n            node.style.transform = \"translate(0, \" + (item.pos - nodeY) + \"px)\";\r\n            fragment.appendChild(node);\r\n            var prevHeight = prev.exceptionHeightOf(item.i, true);\r\n            animation.push({\r\n                node: item.n,\r\n                key: key,\r\n                mode: r.index < 0 ? EAnimationMode.HIDE : EAnimationMode.UPDATE_REMOVE,\r\n                previous: {\r\n                    index: item.i,\r\n                    y: item.pos,\r\n                    height: prevHeight\r\n                },\r\n                nodeY: nodeY,\r\n                nodeYCurrentHeight: nodeYCurrentHeight,\r\n                current: {\r\n                    index: r.index,\r\n                    y: nextPos,\r\n                    height: r.index < 0 ? null : cur.exceptionHeightOf(r.index)\r\n                }\r\n            });\r\n            nodeYCurrentHeight += r.index < 0 ? cur.context.defaultRowHeight : (cur.exceptionHeightOf(r.index, true) + cur.padding(r.index));\r\n            nodeY += prevHeight + prev.padding(item.i);\r\n        });\r\n        this.updateOffset(next.firstRowPos);\r\n        this.animate(animation, ctx.phases || defaultPhases, prev, cur, fragment);\r\n    };\r\n    ARowRenderer.prototype.animate = function (animation, phases, previousFinder, currentFinder, fragment) {\r\n        var _this = this;\r\n        if (animation.length <= 0) {\r\n            this.body.appendChild(fragment);\r\n            return;\r\n        }\r\n        var currentTimer = -1;\r\n        var actPhase = 0;\r\n        var executePhase = function (phase, items) {\r\n            if (items === void 0) { items = animation; }\r\n            items.forEach(function (anim) { return phase.apply(anim, previousFinder, currentFinder); });\r\n        };\r\n        var run = function () {\r\n            //dummy log for forcing dom update\r\n            console.assert(animation[0].node.offsetTop >= 0, 'dummy log for forcing dom update');\r\n            executePhase(phases[actPhase++]);\r\n            // shifted by one since already added through ++\r\n            if (actPhase < phases.length) {\r\n                // schedule the next one\r\n                var next = phases[actPhase];\r\n                currentTimer = self.setTimeout(run, next.delay);\r\n                return;\r\n            }\r\n            // last one\r\n            var body = _this.body.classList;\r\n            Array.from(body).forEach(function (v) {\r\n                if (v.startsWith(cssClass()) && v.endsWith('-animation')) {\r\n                    body.remove(v);\r\n                }\r\n            });\r\n            // clean up\r\n            animation.forEach(function (_a) {\r\n                var node = _a.node, mode = _a.mode;\r\n                if (mode !== EAnimationMode.UPDATE_REMOVE && mode !== EAnimationMode.HIDE) {\r\n                    return;\r\n                }\r\n                node.remove();\r\n                node.style.transform = null;\r\n                _this.recycle(node);\r\n            });\r\n            _this.abortAnimation = function () { return undefined; };\r\n            currentTimer = -1;\r\n        };\r\n        // execute all phases having a delay of zero\r\n        while (phases[actPhase].delay === 0) {\r\n            executePhase(phases[actPhase++]);\r\n        }\r\n        // after the initial one\r\n        var body = this.body;\r\n        this.body.appendChild(fragment);\r\n        var dummyAnimation = [];\r\n        animation = animation.filter(function (d) {\r\n            if (noAnimationChange(d, previousFinder.context.defaultRowHeight, currentFinder.context.defaultRowHeight)) {\r\n                dummyAnimation.push(d);\r\n                return false;\r\n            }\r\n            return true;\r\n        });\r\n        if (dummyAnimation.length > 0) {\r\n            // execute all phases for them\r\n            phases.slice(actPhase).forEach(function (phase) { return executePhase(phase, dummyAnimation); });\r\n        }\r\n        if (animation.length === 0) {\r\n            return;\r\n        }\r\n        body.classList.add(CSS_CLASS_ROW_ANIMATION);\r\n        (new Set(animation.map(function (d) { return d.mode; }))).forEach(function (mode) {\r\n            // add class but map to UPDATE only\r\n            body.classList.add(cssClass(EAnimationMode[mode].toLowerCase().split('_')[0] + \"-animation\"));\r\n        });\r\n        this.abortAnimation = function () {\r\n            if (currentTimer <= 0) {\r\n                return;\r\n            }\r\n            // abort by removing\r\n            clearTimeout(currentTimer);\r\n            currentTimer = -1;\r\n            // run the last phase\r\n            actPhase = phases.length - 1;\r\n            run();\r\n        };\r\n        // next tick such that DOM will be updated\r\n        currentTimer = self.setTimeout(run, phases[actPhase].delay);\r\n    };\r\n    /**\r\n     * clears the row pool used for faster creation\r\n     */\r\n    ARowRenderer.prototype.clearPool = function () {\r\n        // clear pool\r\n        this.pool.splice(0, this.pool.length);\r\n    };\r\n    /**\r\n     * triggers a revalidation of the current scrolling offest\r\n     */\r\n    ARowRenderer.prototype.revalidate = function () {\r\n        var scroller = this.bodyScroller;\r\n        this.onScrolledVertically(scroller.scrollTop, scroller.clientHeight, true);\r\n        this.updateOffset(this.visibleFirstRowPos);\r\n    };\r\n    /**\r\n     * scrolling vertically\r\n     * @param {number} scrollTop top scrolling\r\n     * @param {number} clientHeight visible height\r\n     * @param {boolean} isGoingDown hint whether the scrollTop increases\r\n     * @return {EScrollResult} full in case of a full rebuild or partial update\r\n     */\r\n    ARowRenderer.prototype.onScrolledVertically = function (scrollTop, clientHeight, isGoingDown) {\r\n        var shift = this.options.viewportOversize;\r\n        var shiftTop = Math.max(0, scrollTop - shift);\r\n        var scrollResult = this.onScrolledImpl(shiftTop, clientHeight + shift + (scrollTop - shiftTop));\r\n        for (var _i = 0, _a = this.mixins; _i < _a.length; _i++) {\r\n            var mixin = _a[_i];\r\n            mixin.onScrolled(isGoingDown, scrollResult);\r\n        }\r\n        return scrollResult;\r\n    };\r\n    ARowRenderer.prototype.shiftLast = function (current, currentDelta) {\r\n        var b = this.options.batchSize;\r\n        if (currentDelta >= b) {\r\n            return current;\r\n        }\r\n        var total = this.context.numberOfRows;\r\n        return Math.min(total - 1, current + (this.options.batchSize - currentDelta));\r\n    };\r\n    ARowRenderer.prototype.shiftFirst = function (current, currentFirstRow, currentDelta) {\r\n        var b = this.options.batchSize;\r\n        if (currentDelta >= b || current <= 0) {\r\n            return { first: current, firstRowPos: currentFirstRow };\r\n        }\r\n        var first = Math.max(0, current - (this.options.batchSize - currentDelta));\r\n        var _a = this.context, exceptionsLookup = _a.exceptionsLookup, defaultRowHeight = _a.defaultRowHeight;\r\n        var firstRowPos = currentFirstRow;\r\n        for (var i = first; i < current; ++i) {\r\n            if (exceptionsLookup.has(i)) {\r\n                firstRowPos -= exceptionsLookup.get(i);\r\n            }\r\n            else {\r\n                firstRowPos -= defaultRowHeight;\r\n            }\r\n        }\r\n        return { first: first, firstRowPos: firstRowPos };\r\n    };\r\n    ARowRenderer.prototype.onScrolledImpl = function (scrollTop, clientHeight) {\r\n        var context = this.context;\r\n        var _a = range(scrollTop, clientHeight, context.defaultRowHeight, context.exceptions, context.numberOfRows), first = _a.first, last = _a.last, firstRowPos = _a.firstRowPos;\r\n        var visible = this.visible;\r\n        visible.forcedFirst = first;\r\n        visible.forcedLast = last;\r\n        if ((first - visible.first) >= 0 && (last - visible.last) <= 0) {\r\n            //nothing to do\r\n            return EScrollResult.NONE;\r\n        }\r\n        var r = EScrollResult.SOME;\r\n        var torecycle;\r\n        var toadd;\r\n        var toaddBottom = false;\r\n        if (first > visible.last || last < visible.first) {\r\n            //no overlap, clean and draw everything\r\n            //console.log(`ff added: ${last - first + 1} removed: ${visibleLast - visibleFirst + 1} ${first}:${last} ${offset}`);\r\n            //removeRows(visibleFirst, visibleLast);\r\n            torecycle = this.removeAll(false);\r\n            toadd = this.addAtBottom(first, last, false);\r\n            toaddBottom = true;\r\n            r = EScrollResult.ALL;\r\n        }\r\n        else if (first < visible.first) {\r\n            //some first rows missing and some last rows to much\r\n            //console.log(`up added: ${visibleFirst - first + 1} removed: ${visibleLast - last + 1} ${first}:${last} ${offset}`);\r\n            var toRemove = visible.last - (last + 1);\r\n            if (toRemove >= this.options.batchSize) {\r\n                torecycle = this.removeFromBottom(last + 1, visible.last, false);\r\n            }\r\n            else {\r\n                last = visible.last;\r\n            }\r\n            var shift = this.shiftFirst(first, firstRowPos, visible.first - 1 - first);\r\n            first = shift.first;\r\n            firstRowPos = shift.firstRowPos;\r\n            toadd = this.addAtBeginning(first, visible.first - 1, false);\r\n            toaddBottom = false;\r\n            r = EScrollResult.SOME_TOP;\r\n        }\r\n        else {\r\n            //console.log(`do added: ${last - visibleLast + 1} removed: ${first - visibleFirst + 1} ${first}:${last} ${offset}`);\r\n            //some last rows missing and some first rows to much\r\n            var toRemove = first - 1 - visible.first;\r\n            if (toRemove >= this.options.batchSize) {\r\n                torecycle = this.removeFromBeginning(visible.first, first - 1, false);\r\n            }\r\n            else {\r\n                first = visible.first;\r\n                firstRowPos = this.visibleFirstRowPos;\r\n            }\r\n            last = this.shiftLast(last, last - visible.last + 1);\r\n            toadd = this.addAtBottom(visible.last + 1, last, false);\r\n            toaddBottom = true;\r\n            r = EScrollResult.SOME_BOTTOM;\r\n        }\r\n        visible.first = first;\r\n        visible.last = last;\r\n        this.updateOffset(firstRowPos);\r\n        this.manipulate(torecycle, toadd, toaddBottom);\r\n        return r;\r\n    };\r\n    ARowRenderer.prototype.manipulate = function (toRecycle, toAdd, bottom) {\r\n        if (toRecycle) {\r\n            for (var _i = 0, toRecycle_1 = toRecycle; _i < toRecycle_1.length; _i++) {\r\n                var item = toRecycle_1[_i];\r\n                item.remove();\r\n                this.recycle(item);\r\n            }\r\n        }\r\n        if (!toAdd) {\r\n            return;\r\n        }\r\n        if (bottom) {\r\n            this.body.appendChild(toAdd);\r\n        }\r\n        else {\r\n            this.body.insertBefore(toAdd, this.body.firstChild);\r\n        }\r\n    };\r\n    return ARowRenderer;\r\n}());\r\nexport { ARowRenderer };\r\nexport default ARowRenderer;\r\nexport function setTransform(elem, x, y) {\r\n    var text = \"translate(\" + x + \"px, \" + y + \"px)\";\r\n    var anyelem = elem;\r\n    if (anyelem.__transform__ === text) {\r\n        return;\r\n    }\r\n    anyelem.__transform__ = elem.style.transform = text;\r\n}\r\n//# sourceMappingURL=ARowRenderer.js.map","// import manually import './style.scss';\r\nfunction assignStyles(target, source) {\r\n    for (var _i = 0, _a = Object.keys(source); _i < _a.length; _i++) {\r\n        var key = _a[_i];\r\n        var v = source[key];\r\n        if (!v.endsWith(' !important')) {\r\n            if (target[key] !== v) {\r\n                target[key] = v;\r\n            }\r\n            continue;\r\n        }\r\n        // handle special important case\r\n        var plain = v.slice(0, -' !important'.length);\r\n        if (target[key] === plain) {\r\n            continue;\r\n        }\r\n        target[key] = plain;\r\n        // see https://gist.github.com/youssman/745578062609e8acac9f\r\n        var hyphen = key.replace(/([a-zA-Z])(?=[A-Z])/g, '$1-').toLowerCase();\r\n        target.setProperty(hyphen, plain, 'important');\r\n    }\r\n}\r\nvar StyleManager = /** @class */ (function () {\r\n    /**\r\n     * the parent element to append this managed style\r\n     * @param {HTMLElement} root\r\n     */\r\n    function StyleManager(root) {\r\n        this.rules = [];\r\n        this.testVerifyTimeout = -1;\r\n        this.node = root.ownerDocument.createElement('style');\r\n        this.node.appendChild(root.ownerDocument.createTextNode('')); // for webkit?\r\n        root.appendChild(this.node);\r\n    }\r\n    StyleManager.prototype.destroy = function () {\r\n        this.node.remove();\r\n    };\r\n    StyleManager.prototype.verifySheet = function () {\r\n        var _this = this;\r\n        var sheet = this.sheet;\r\n        if (!sheet) {\r\n            if (this.testVerifyTimeout >= 0) {\r\n                return;\r\n            }\r\n            // test till attached\r\n            this.testVerifyTimeout = self.setTimeout(function () {\r\n                _this.testVerifyTimeout = -1;\r\n                _this.verifySheet();\r\n            }, 20);\r\n            return;\r\n        }\r\n        var rules = sheet.cssRules;\r\n        if (rules.length === this.rules.length && this.rules.every(function (d, i) { return rules[i].selectorText === d.selector; })) {\r\n            // same\r\n            return;\r\n        }\r\n        console.warn('invalid sheet rules detected');\r\n        var l = rules.length;\r\n        for (var i = 0; i < l; ++i) {\r\n            sheet.deleteRule(i);\r\n        }\r\n        // create all\r\n        for (var _i = 0, _a = this.rules; _i < _a.length; _i++) {\r\n            var rule = _a[_i];\r\n            var index = sheet.insertRule(rule.selector + \" {}\", sheet.cssRules.length);\r\n            var cssRule = sheet.cssRules[index];\r\n            rule.selector = cssRule.selectorText;\r\n            assignStyles(cssRule.style, rule.style);\r\n        }\r\n    };\r\n    Object.defineProperty(StyleManager.prototype, \"sheet\", {\r\n        get: function () {\r\n            return this.node.sheet;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    StyleManager.prototype.getSheetRule = function (index) {\r\n        var sheet = this.sheet;\r\n        return sheet ? sheet.cssRules[index] : null;\r\n    };\r\n    /**\r\n     * add a custom css rule\r\n     * @param {string} id unique id of the rule for later identification\r\n     * @param {string} selector the css selector\r\n     * @param {Partial<CSSStyleDeclaration>} style the style attributes\r\n     * @returns {string} the id again\r\n     */\r\n    StyleManager.prototype.addRule = function (id, selector, style) {\r\n        this.verifySheet();\r\n        var sheet = this.sheet;\r\n        if (!sheet) {\r\n            // upon next update\r\n            this.rules.push({ id: id, selector: selector, style: style });\r\n            return;\r\n        }\r\n        var index = sheet.insertRule(selector + \" {}\", sheet.cssRules.length);\r\n        var rule = sheet.cssRules[index];\r\n        this.rules.push({ id: id, selector: rule.selectorText, style: style });\r\n        assignStyles(rule.style, style);\r\n        return id;\r\n    };\r\n    /**\r\n     * updates or add a rule, see @addRule\r\n     * @param {string} id unique id of the rule for later identification\r\n     * @param {string} selector the css selector\r\n     * @param {Partial<CSSStyleDeclaration>} style the style attributes\r\n     * @returns {string} the id again\r\n     */\r\n    StyleManager.prototype.updateRule = function (id, selector, style) {\r\n        this.verifySheet();\r\n        var index = this.rules.findIndex(function (d) { return d.id === id; });\r\n        if (index < 0) {\r\n            return this.addRule(id, selector, style);\r\n        }\r\n        var stored = this.rules[index];\r\n        stored.selector = selector;\r\n        stored.style = style;\r\n        var rule = this.getSheetRule(index);\r\n        if (rule) {\r\n            if (rule.selectorText.replace(/\\s/gm, '') !== selector.replace(/\\s/gm, '')) { //ignoring white space\r\n                rule.selectorText = selector;\r\n                stored.selector = rule.selectorText;\r\n            }\r\n            assignStyles(rule.style, style);\r\n        }\r\n        return id;\r\n    };\r\n    /**\r\n     * deletes the given rule by id\r\n     * @param {string} id the rule to delete\r\n     */\r\n    StyleManager.prototype.deleteRule = function (id) {\r\n        this.verifySheet();\r\n        var index = this.rules.findIndex(function (d) { return d.id === id; });\r\n        if (index < 0) {\r\n            return;\r\n        }\r\n        this.rules.splice(index, 1);\r\n        var sheet = this.sheet;\r\n        if (sheet) {\r\n            sheet.deleteRule(index);\r\n        }\r\n    };\r\n    Object.defineProperty(StyleManager.prototype, \"ruleNames\", {\r\n        /**\r\n         * get a list of all registered rule ids\r\n         * @returns {string[]}\r\n         */\r\n        get: function () {\r\n            return this.rules.map(function (d) { return d.id; });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return StyleManager;\r\n}());\r\nexport default StyleManager;\r\n//# sourceMappingURL=StyleManager.js.map","import * as tslib_1 from \"tslib\";\r\nimport { addScroll } from '../internal';\r\nimport { cssClass, CSS_CLASS_BODY, CSS_CLASS_FOOTER, CSS_CLASS_HEADER, CSS_CLASS_SCROLLBAR_TESTER, CSS_CLASS_SHIFTED, CSS_CLASS_TBODY, CSS_CLASS_THEAD } from '../styles';\r\nimport StyleManager from './StyleManager';\r\nexport function setTemplate(root, id) {\r\n    id = id.startsWith('#') ? id.slice(1) : id;\r\n    root.innerHTML = \"\\n  <header id=\\\"header-\" + id + \"\\\" class=\\\"\" + CSS_CLASS_HEADER + \" \" + cssClass(\"header-\" + id) + \"\\\">\\n    <article class=\\\"\" + CSS_CLASS_THEAD + \" \" + cssClass(\"thead-\" + id) + \"\\\"></article>\\n  </header>\\n  <main id=\\\"body-\" + id + \"\\\" class=\\\"\" + CSS_CLASS_BODY + \" \" + cssClass(\"body-\" + id) + \"\\\">\\n    <footer class=\\\"\" + CSS_CLASS_FOOTER + \"\\\">&nbsp;</footer>\\n    <article class=\\\"\" + CSS_CLASS_TBODY + \" \" + cssClass(\"tbody-\" + id) + \"\\\"></article>\\n  </main>\";\r\n    return root;\r\n}\r\n/**\r\n * generates the HTML Ids used for the header and body article of a table\r\n * @param {string} tableId base table id\r\n * @param {boolean} asSelector flag whether to prepend with # for CSS selector\r\n * @return {ISelectors} the table ids used for header and body\r\n */\r\nexport function tableIds(tableId) {\r\n    return {\r\n        thead: \"thead-\" + tableId,\r\n        tbody: \"tbody-\" + tableId,\r\n        tr: \"tr-\" + tableId,\r\n        th: \"th-\" + tableId,\r\n        td: \"td-\" + tableId\r\n    };\r\n}\r\nexport function tableCSSClasses(tableId) {\r\n    var ids = tableIds(tableId);\r\n    return {\r\n        thead: cssClass(ids.thead),\r\n        tbody: cssClass(ids.tbody),\r\n        tr: cssClass(ids.tr),\r\n        th: cssClass(ids.th),\r\n        td: cssClass(ids.td)\r\n    };\r\n}\r\n/**\r\n * utility for custom generated CSS rules with a focus on dynamically generated grid layouts\r\n */\r\nvar GridStyleManager = /** @class */ (function (_super) {\r\n    tslib_1.__extends(GridStyleManager, _super);\r\n    function GridStyleManager(root, id) {\r\n        var _this = _super.call(this, root) || this;\r\n        _this.id = id.startsWith('#') ? id.slice(1) : id;\r\n        _this.ids = tableIds(_this.id);\r\n        _this.cssClasses = tableCSSClasses(_this.id);\r\n        var headerScroller = root.getElementsByTagName('header')[0];\r\n        var bodyScroller = root.getElementsByTagName('main')[0];\r\n        // async since style needs to be added to dom first\r\n        self.setTimeout(function () {\r\n            var width = measureScrollbar(root).width;\r\n            _this.updateRule('__scollBarFix2', \"#header-\" + _this.id + \" > article:last-of-type\", {\r\n                borderRight: width + \"px solid transparent\"\r\n            });\r\n        }, 20);\r\n        var old = headerScroller.scrollLeft;\r\n        // update frozen and sync header with body\r\n        addScroll(bodyScroller, 'animation', function (act) {\r\n            var newValue = act.left;\r\n            if (old !== newValue) {\r\n                old = headerScroller.scrollLeft = newValue;\r\n            }\r\n            root.classList.toggle(CSS_CLASS_SHIFTED, act.left > 0);\r\n        });\r\n        return _this;\r\n    }\r\n    /**\r\n     * updates the column widths and default row height for a table\r\n     * @param {number} defaultRowHeight\r\n     * @param {IColumn[]} columns\r\n     * @param {number} frozenShift shift frozen colums\r\n     * @param {string} tableId optional tableId in case of multiple tables within the same engine\r\n     * @param {string} unit\r\n     */\r\n    GridStyleManager.prototype.update = function (defaultRowHeight, columns, padding, frozenShift, tableId, unit) {\r\n        if (unit === void 0) { unit = 'px'; }\r\n        var ids = tableIds(tableId);\r\n        var selectors = tableCSSClasses(tableId);\r\n        var total = \"\" + columns.reduce(function (a, b, i) { return a + b.width + padding(i); }, 0) + unit;\r\n        this.updateRule(\"__heightsRule\" + selectors.tr, \".\" + selectors.tr, {\r\n            height: defaultRowHeight + \"px\",\r\n            width: total\r\n        });\r\n        this.updateRule(\"__heightsRule\" + selectors.tbody, \"#\" + ids.tbody, {\r\n            width: total\r\n        });\r\n        this.updateColumns(columns, padding, selectors, frozenShift, unit);\r\n    };\r\n    /**\r\n     * removes a given tableId if not needed anymore\r\n     * @param {string} tableId tableId to remove\r\n     */\r\n    GridStyleManager.prototype.remove = function (tableId) {\r\n        var selectors = tableCSSClasses(tableId);\r\n        this.deleteRule(\"__heightsRule\" + selectors.tr);\r\n        this.deleteRule(\"__heightsRule\" + selectors.tbody);\r\n        var prefix = \"__col\" + selectors.td + \"_\";\r\n        var rules = this.ruleNames.reduce(function (a, b) { return a + (b.startsWith(prefix) ? 1 : 0); }, 0);\r\n        // reset\r\n        for (var i = 0; i < rules; ++i) {\r\n            this.deleteRule(\"\" + prefix + i);\r\n        }\r\n    };\r\n    GridStyleManager.prototype.updateColumns = function (columns, padding, cssSelectors, frozenShift, unit) {\r\n        var _this = this;\r\n        if (unit === void 0) { unit = 'px'; }\r\n        var prefix = \"__col\" + cssSelectors.td + \"_\";\r\n        var rules = new Set(this.ruleNames.filter(function (d) { return d.startsWith(prefix); }));\r\n        var acc = 0;\r\n        columns.forEach(function (c, i) {\r\n            var th = \".\" + cssSelectors.th + \"[data-id=\\\"\" + c.id + \"\\\"]\";\r\n            var thStyles = {\r\n                width: \"\" + c.width + unit\r\n            };\r\n            var td = \".\" + cssSelectors.td + \"[data-id=\\\"\" + c.id + \"\\\"]\";\r\n            var tdStyles = {\r\n                transform: \"translateX(\" + acc + unit + \")\",\r\n                width: \"\" + c.width + unit\r\n            };\r\n            if (c.frozen) {\r\n                thStyles.left = acc + \"px\";\r\n                _this.updateRule(\"\" + prefix + td + \"F\", \".\" + cssSelectors.td + \".\" + CSS_CLASS_SHIFTED + \"[data-id=\\\"\" + c.id + \"\\\"]\", {\r\n                    transform: \"translateX(0)\",\r\n                    left: \"\" + (acc + frozenShift) + unit\r\n                });\r\n                rules.delete(\"\" + prefix + td + \"F\");\r\n            }\r\n            _this.updateRule(\"\" + prefix + th, th, thStyles);\r\n            rules.delete(\"\" + prefix + th);\r\n            _this.updateRule(\"\" + prefix + td, td, tdStyles);\r\n            rules.delete(\"\" + prefix + td);\r\n            acc += c.width + padding(i);\r\n        });\r\n        rules.forEach(function (d) { return _this.deleteRule(d); });\r\n    };\r\n    return GridStyleManager;\r\n}(StyleManager));\r\nexport default GridStyleManager;\r\n/**\r\n * measure the width and height of the scrollbars\r\n * based on Slick grid implementation\r\n * @param root\r\n */\r\nfunction measureScrollbar(root) {\r\n    var body = root.ownerDocument.body;\r\n    body.insertAdjacentHTML('beforeend', \"\\n    <div class=\\\"\" + CSS_CLASS_SCROLLBAR_TESTER + \"\\\"><div></div></div>\\n  \");\r\n    var elem = body.lastElementChild;\r\n    var width = elem.offsetWidth - elem.clientWidth;\r\n    var height = elem.offsetHeight - elem.clientHeight;\r\n    elem.remove();\r\n    return { width: width, height: height };\r\n}\r\n//# sourceMappingURL=GridStyleManager.js.map","import { setTransform } from '../ARowRenderer';\r\nimport { addScroll, defaultMode } from '../internal';\r\nimport { GridStyleManager, tableCSSClasses, tableIds } from '../style';\r\nimport { cssClass, CSS_CLASS_BODY, CSS_CLASS_FOOTER, CSS_CLASS_HEADER, CSS_CLASS_MULTI, CSS_CLASS_TBODY, CSS_CLASS_THEAD } from '../styles';\r\n/**\r\n * manager of multiple columns separated by separators each an own row renderer\r\n */\r\nvar MultiTableRowRenderer = /** @class */ (function () {\r\n    function MultiTableRowRenderer(node, htmlId, options) {\r\n        var _this = this;\r\n        if (options === void 0) { options = {}; }\r\n        this.node = node;\r\n        this.tableId = 0;\r\n        this.sections = [];\r\n        this.options = {\r\n            columnPadding: 0,\r\n            async: defaultMode,\r\n            minScrollDelta: 30\r\n        };\r\n        Object.assign(this.options, options);\r\n        htmlId = htmlId.startsWith('#') ? htmlId.slice(1) : htmlId;\r\n        node.id = htmlId;\r\n        node.innerHTML = \"<header id=\\\"header-\" + htmlId + \"\\\" class=\\\"\" + CSS_CLASS_HEADER + \" \" + cssClass(\"header-\" + htmlId) + \"\\\">\\n      <footer class=\\\"\" + CSS_CLASS_FOOTER + \" \" + cssClass(\"footer-\" + htmlId) + \"\\\">&nbsp;</footer>\\n    </header>\\n    <main id=\\\"body-\" + htmlId + \"\\\" class=\\\"\" + CSS_CLASS_BODY + \" \" + cssClass(\"body-\" + htmlId) + \"\\\">\\n      <footer class=\\\"\" + CSS_CLASS_FOOTER + \"\\\">&nbsp;</footer>\\n    </main>\";\r\n        node.classList.add(cssClass(), CSS_CLASS_MULTI, 'lineup-engine');\r\n        this.style = new GridStyleManager(this.node, htmlId);\r\n        var old = addScroll(this.main, this.options.async, function (act) {\r\n            if (Math.abs(old.left - act.left) < _this.options.minScrollDelta && Math.abs(old.width - act.width) < _this.options.minScrollDelta) {\r\n                return;\r\n            }\r\n            var isGoingRight = act.left > old.left;\r\n            old = act;\r\n            _this.onScrolledHorizontally(act.left, act.width, isGoingRight);\r\n        });\r\n    }\r\n    MultiTableRowRenderer.prototype.update = function () {\r\n        var _this = this;\r\n        this.onScrolledHorizontally(this.main.scrollLeft, this.main.clientWidth, false);\r\n        var offset = 0;\r\n        this.sections.forEach(function (s) {\r\n            s.body.style.left = s.header.style.left = offset + \"px\";\r\n            offset += s.width + _this.options.columnPadding;\r\n        });\r\n    };\r\n    MultiTableRowRenderer.prototype.onScrolledHorizontally = function (scrollLeft, clientWidth, isGoingRight) {\r\n        var _this = this;\r\n        var offset = 0;\r\n        var scrollEnd = scrollLeft + clientWidth;\r\n        this.sections.forEach(function (s) {\r\n            var end = offset + s.width;\r\n            if (end < scrollLeft || offset > scrollEnd) {\r\n                s.hide();\r\n            }\r\n            else {\r\n                s.show(Math.max(0, scrollLeft - offset), Math.min(scrollEnd - offset, s.width), isGoingRight);\r\n            }\r\n            offset = end + _this.options.columnPadding;\r\n        });\r\n        this.updateOffset();\r\n    };\r\n    MultiTableRowRenderer.prototype.updateOffset = function () {\r\n        var _this = this;\r\n        var headerFooter = this.header.getElementsByTagName('footer')[0];\r\n        var bodyFooter = this.main.getElementsByTagName('footer')[0];\r\n        var maxHeight = Math.max.apply(Math, [0].concat(this.sections.map(function (d) { return d.height; })));\r\n        var total = this.sections.reduce(function (a, c) { return a + c.width + _this.options.columnPadding; }, 0);\r\n        setTransform(headerFooter, total, 0);\r\n        setTransform(bodyFooter, total, maxHeight);\r\n    };\r\n    MultiTableRowRenderer.prototype.destroy = function () {\r\n        this.sections.forEach(function (d) { return d.destroy(); });\r\n        this.node.remove();\r\n    };\r\n    Object.defineProperty(MultiTableRowRenderer.prototype, \"doc\", {\r\n        get: function () {\r\n            return this.node.ownerDocument;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(MultiTableRowRenderer.prototype, \"header\", {\r\n        get: function () {\r\n            return this.node.getElementsByTagName('header')[0];\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(MultiTableRowRenderer.prototype, \"main\", {\r\n        get: function () {\r\n            return this.node.getElementsByTagName('main')[0];\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * push another table to this instance\r\n     * @param {ITableFactory<T extends ITableSection>} factory factory for the table\r\n     * @param extras additional arguments to provide for the factory\r\n     * @returns {T} the table instance\r\n     */\r\n    MultiTableRowRenderer.prototype.pushTable = function (factory) {\r\n        var extras = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            extras[_i - 1] = arguments[_i];\r\n        }\r\n        var header = this.doc.createElement('article');\r\n        var body = this.doc.createElement('article');\r\n        var tableId = this.node.id + \"T\" + this.tableId++;\r\n        var ids = tableIds(tableId);\r\n        var cssClasses = tableCSSClasses(tableId);\r\n        header.id = ids.thead;\r\n        header.classList.add(CSS_CLASS_THEAD, cssClasses.thead);\r\n        body.id = ids.tbody;\r\n        body.classList.add(CSS_CLASS_TBODY, cssClasses.tbody);\r\n        this.header.insertBefore(header, this.header.lastElementChild); //before the footer\r\n        this.main.appendChild(body);\r\n        var table = factory.apply(void 0, [header, body, tableId, this.style].concat(extras));\r\n        table.init();\r\n        this.sections.push(table);\r\n        this.update();\r\n        return table;\r\n    };\r\n    /**\r\n     * push another separator to the manager\r\n     * @param {ISeparatorFactory<T extends ITableSection>} factory the factory to create the separator\r\n     * @param extras optional additional arguments\r\n     * @returns {T} the new created separator\r\n     */\r\n    MultiTableRowRenderer.prototype.pushSeparator = function (factory) {\r\n        var extras = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            extras[_i - 1] = arguments[_i];\r\n        }\r\n        var header = this.doc.createElement('section');\r\n        var body = this.doc.createElement('section');\r\n        header.classList.add(cssClass('header-separator'));\r\n        body.classList.add(cssClass('separator'));\r\n        this.header.insertBefore(header, this.header.lastElementChild); //before the footer\r\n        this.main.appendChild(body);\r\n        var separator = factory.apply(void 0, [header, body, this.style].concat(extras));\r\n        separator.init();\r\n        this.sections.push(separator);\r\n        this.update();\r\n        return separator;\r\n    };\r\n    /**\r\n     * removes a given table section\r\n     * @param {ITableSection} section section to remove\r\n     * @returns {boolean} successful flag\r\n     */\r\n    MultiTableRowRenderer.prototype.remove = function (section) {\r\n        var index = this.sections.indexOf(section);\r\n        if (index < 0) {\r\n            return false;\r\n        }\r\n        this.sections.splice(index, 1);\r\n        section.destroy();\r\n        this.update();\r\n        return true;\r\n    };\r\n    MultiTableRowRenderer.prototype.clear = function () {\r\n        this.sections.splice(0, this.sections.length).forEach(function (s) { return s.destroy(); });\r\n        this.update();\r\n    };\r\n    /**\r\n     * triggers and update because of a change in width of one or more table sections\r\n     */\r\n    MultiTableRowRenderer.prototype.widthChanged = function () {\r\n        this.update();\r\n    };\r\n    return MultiTableRowRenderer;\r\n}());\r\nexport default MultiTableRowRenderer;\r\n//# sourceMappingURL=MultiTableRowRenderer.js.map","import ADialog from './ADialog';\nimport Column from '../../model';\nimport {cssClass} from '../../styles';\n\nexport default class DialogManager {\n\n  private readonly escKeyListener = (evt: KeyboardEvent) => {\n    if (evt.which === 27) {\n      this.removeLast();\n    }\n  }\n\n  private readonly openDialogs: ADialog[] = [];\n  readonly node: HTMLElement;\n\n  constructor(doc = document) {\n    this.node = doc.createElement('div');\n    this.node.classList.add(cssClass('backdrop'));\n    this.node.innerHTML = `<div class=\"${cssClass('backdrop-bg')}\"></div>`;\n    this.node.onclick = () => {\n      this.removeAll();\n    };\n  }\n\n  setHighlight(mask: { left: number, top: number, width: number, height: number }) {\n    const area = <HTMLElement>this.node.firstElementChild;\n    // @see http://bennettfeely.com/clippy/ -> select `Frame` example\n    // use webkit prefix for safari\n    area.style.clipPath = (<any>area.style).webkitClipPath = `polygon(\n      0% 0%,\n      0% 100%,\n      ${mask.left}px 100%,\n      ${mask.left}px ${mask.top}px,\n      ${mask.left + mask.width}px ${mask.top}px,\n      ${mask.left + mask.width}px ${mask.top + mask.height}px,\n      ${mask.left}px ${mask.top + mask.height}px,\n      ${mask.left}px 100%,\n      100% 100%,\n      100% 0%\n    )`;\n  }\n\n  setHighlightColumn(column: Column) {\n    const root = <HTMLElement>this.node.parentElement!;\n    if (!root) {\n      this.clearHighlight();\n      return;\n    }\n    const header = <HTMLElement>root.querySelector(`.${cssClass('header')}[data-col-id=\"${column.id}\"]`);\n    if (!header) {\n      this.clearHighlight();\n      return;\n    }\n    const base = header.getBoundingClientRect();\n    const offset = root.getBoundingClientRect();\n    this.setHighlight({\n      left: base.left - offset.left,\n      top: base.top - offset.top,\n      width: base.width,\n      height: offset.height\n    });\n  }\n\n  clearHighlight() {\n    const area = <HTMLElement>this.node.firstElementChild;\n    area.style.clipPath = null;\n  }\n\n  private removeLast() {\n    if (this.openDialogs.length === 0) {\n      return;\n    }\n    this.remove(this.openDialogs[this.openDialogs.length - 1]);\n  }\n\n  removeAll() {\n    if (this.openDialogs.length === 0) {\n      return;\n    }\n    const all = this.openDialogs.splice(0, this.openDialogs.length);\n    all.forEach((d) => d.destroy());\n    this.takeDown();\n  }\n\n  remove(dialog: ADialog) {\n    const index = this.openDialogs.indexOf(dialog);\n    if (index < 0) {\n      return false;\n    }\n    // destroy self and all levels below that = after that\n    const destroyed = this.openDialogs.splice(index, this.openDialogs.length - index);\n    destroyed.reverse().forEach((d) => d.destroy());\n\n    if (this.openDialogs.length === 0) {\n      this.takeDown();\n    }\n    return true;\n  }\n\n  removeAboveLevel(level: number) {\n    // hide all dialogs which have a higher or equal level to the newly opened one\n    this.openDialogs.filter((d) => d.level >= level).reverse().forEach((d) => this.remove(d));\n  }\n\n  removeLike(dialog: ADialog) {\n    const similar = this.openDialogs.find((d) => dialog.equals(d));\n    if (!similar) {\n      return false;\n    }\n    this.remove(similar);\n    return true;\n  }\n\n  private setUp() {\n    this.node.ownerDocument!.addEventListener('keyup', this.escKeyListener, {\n      passive: true\n    });\n    this.node.style.display = 'block';\n  }\n\n  private takeDown() {\n    this.clearHighlight();\n    this.node.ownerDocument!.removeEventListener('keyup', this.escKeyListener);\n    this.node.style.display = null;\n  }\n\n  push(dialog: ADialog) {\n    this.removeAboveLevel(dialog.level);\n\n    if (this.openDialogs.length === 0) {\n      this.setUp();\n    }\n\n    this.openDialogs.push(dialog);\n  }\n}\n","import { range } from '../logic';\r\nimport { EScrollResult } from './IMixin';\r\n/**\r\n * mixin that prefetches rows depending on the scrolling direction for faster rendering\r\n */\r\nvar PrefetchMixin = /** @class */ (function () {\r\n    function PrefetchMixin(adapter, options) {\r\n        this.adapter = adapter;\r\n        this.prefetchTimeout = -1;\r\n        this.cleanupTimeout = -1;\r\n        this.options = {\r\n            prefetchRows: 20,\r\n            cleanUpRows: 10,\r\n            delay: 200\r\n        };\r\n        Object.assign(this.options, options);\r\n        return this;\r\n    }\r\n    PrefetchMixin.prototype.prefetchDown = function () {\r\n        this.prefetchTimeout = -1;\r\n        if (this.adapter.isScrollEventWaiting()) {\r\n            return;\r\n        }\r\n        var context = this.adapter.context;\r\n        var nextLast = Math.min(this.adapter.visible.forcedLast + this.options.prefetchRows, context.numberOfRows - 1);\r\n        // add some rows in advance\r\n        if (this.adapter.visible.last === nextLast && this.adapter.visible.last >= (this.adapter.visible.forcedLast + this.options.prefetchRows)) {\r\n            return;\r\n        }\r\n        this.adapter.addAtBottom(this.adapter.visible.last + 1, nextLast);\r\n        //console.log('prefetch', visibleFirst, visibleLast + 1, '=>', nextLast, ranking.children.length);\r\n        this.adapter.visible.last = nextLast;\r\n    };\r\n    PrefetchMixin.prototype.prefetchUp = function () {\r\n        this.prefetchTimeout = -1;\r\n        if (this.adapter.isScrollEventWaiting() || this.adapter.visible.first <= (this.adapter.visible.forcedFirst - this.options.prefetchRows)) {\r\n            return;\r\n        }\r\n        var context = this.adapter.context;\r\n        var fakeOffset = Math.max(this.adapter.scrollOffset - this.options.prefetchRows * context.defaultRowHeight, 0);\r\n        var height = this.adapter.scrollTotal;\r\n        var _a = range(fakeOffset, height, context.defaultRowHeight, context.exceptions, context.numberOfRows), first = _a.first, firstRowPos = _a.firstRowPos;\r\n        if (first === this.adapter.visible.first) {\r\n            return;\r\n        }\r\n        var frozenShift = this.adapter.syncFrozen ? this.adapter.syncFrozen(first) : 0;\r\n        this.adapter.addAtBeginning(first, this.adapter.visible.first - 1, frozenShift);\r\n        //console.log('prefetch up ', visibleFirst, '=>', first, visibleLast, ranking.children.length);\r\n        this.adapter.visible.first = first;\r\n        this.adapter.updateOffset(firstRowPos);\r\n    };\r\n    PrefetchMixin.prototype.triggerPrefetch = function (isGoingDown) {\r\n        if (this.prefetchTimeout >= 0) {\r\n            clearTimeout(this.prefetchTimeout);\r\n        }\r\n        var prefetchDownPossible = this.adapter.visible.last < (this.adapter.visible.forcedLast + this.options.prefetchRows);\r\n        var prefetchUpPossible = this.adapter.visible.first > (this.adapter.visible.forcedFirst - this.options.prefetchRows);\r\n        var isLast = this.adapter.visible.last === this.adapter.context.numberOfRows;\r\n        var isFirst = this.adapter.visible.first === 0;\r\n        if ((isGoingDown && !prefetchDownPossible && !isLast) || (!isGoingDown && !prefetchUpPossible && !isFirst)) {\r\n            return;\r\n        }\r\n        // go down if we are already at the top, too\r\n        var op = (isGoingDown || isFirst) ? this.prefetchDown.bind(this) : this.prefetchUp.bind(this);\r\n        this.prefetchTimeout = self.setTimeout(op, this.options.delay);\r\n    };\r\n    PrefetchMixin.prototype.cleanUpTop = function (first) {\r\n        this.cleanupTimeout = -1;\r\n        if (this.adapter.isScrollEventWaiting()) {\r\n            return;\r\n        }\r\n        var newFirst = Math.max(0, first - this.options.cleanUpRows);\r\n        if (newFirst <= this.adapter.visible.first) {\r\n            return;\r\n        }\r\n        //console.log('cleanup top');\r\n        var frozenShift = this.adapter.syncFrozen ? this.adapter.syncFrozen(newFirst) : 0;\r\n        this.adapter.removeFromBeginning(this.adapter.visible.first, newFirst - 1, frozenShift);\r\n        var context = this.adapter.context;\r\n        //console.log('cleanup up ', visibleFirst, '=>', newFirst, visibleLast, ranking.children.length);\r\n        var shift = (newFirst - this.adapter.visible.first) * context.defaultRowHeight;\r\n        if (context.exceptions.length > 0) {\r\n            for (var i = this.adapter.visible.first; i < newFirst; ++i) {\r\n                if (context.exceptionsLookup.has(i)) {\r\n                    shift += context.exceptionsLookup.get(i) - context.defaultRowHeight;\r\n                }\r\n            }\r\n        }\r\n        this.adapter.visible.first = newFirst;\r\n        this.adapter.updateOffset(this.adapter.visibleFirstRowPos + shift);\r\n        this.prefetchDown();\r\n    };\r\n    PrefetchMixin.prototype.cleanUpBottom = function (last) {\r\n        this.cleanupTimeout = -1;\r\n        var newLast = last + this.options.cleanUpRows;\r\n        if (this.adapter.visible.last <= newLast) {\r\n            return;\r\n        }\r\n        //console.log('cleanup bottom');\r\n        this.adapter.removeFromBottom(newLast + 1, this.adapter.visible.last);\r\n        this.adapter.visible.last = newLast;\r\n        this.prefetchUp();\r\n    };\r\n    PrefetchMixin.prototype.triggerCleanUp = function (first, last, isGoingDown) {\r\n        if (this.cleanupTimeout >= 0) {\r\n            clearTimeout(this.cleanupTimeout);\r\n        }\r\n        if ((isGoingDown && (first - this.options.cleanUpRows) <= this.adapter.visible.first) || (!isGoingDown && this.adapter.visible.last <= (last + this.options.cleanUpRows))) {\r\n            return;\r\n        }\r\n        this.cleanupTimeout = self.setTimeout(isGoingDown ? this.cleanUpTop.bind(this) : this.cleanUpBottom.bind(this), this.options.delay, isGoingDown ? first : last);\r\n    };\r\n    PrefetchMixin.prototype.onScrolled = function (isGoingDown, scrollResult) {\r\n        if (this.adapter.isScrollEventWaiting()) {\r\n            return;\r\n        }\r\n        if (scrollResult !== EScrollResult.ALL && this.options.cleanUpRows > 0) {\r\n            this.triggerCleanUp(this.adapter.visible.forcedFirst, this.adapter.visible.forcedLast, isGoingDown);\r\n        }\r\n        if (scrollResult !== EScrollResult.NONE && this.options.prefetchRows > 0) {\r\n            this.triggerPrefetch(isGoingDown);\r\n        }\r\n    };\r\n    return PrefetchMixin;\r\n}());\r\nexport default PrefetchMixin;\r\n//# sourceMappingURL=PrefetchMixin.js.map","import { ABORTED, isAbortAble, isAsyncUpdate } from '../../abortAble';\r\nimport { isLoadingCell } from '../../ARowRenderer';\r\nimport { clear } from '../../internal';\r\nimport { isScrollEventWaiting } from '../../internal/scroll';\r\nimport { range, updateFrozen } from '../../logic';\r\nimport { EScrollResult } from '../../mixin';\r\nimport { cssClass, CSS_CLASS_FROZEN, CSS_CLASS_LOADING, CSS_CLASS_SHIFTED, CSS_CLASS_TD, CSS_CLASS_TH } from '../../styles';\r\nvar debug = false;\r\n/**\r\n * @internal\r\n */\r\nvar ACellAdapter = /** @class */ (function () {\r\n    function ACellAdapter(header, style, tableId) {\r\n        var _this = this;\r\n        var mixinClasses = [];\r\n        for (var _i = 3; _i < arguments.length; _i++) {\r\n            mixinClasses[_i - 3] = arguments[_i];\r\n        }\r\n        this.header = header;\r\n        this.style = style;\r\n        this.tableId = tableId;\r\n        /**\r\n         * pool of cells per column\r\n         * @type {Array}\r\n         */\r\n        this.cellPool = [];\r\n        this.loading = new WeakMap();\r\n        this.visibleColumns = {\r\n            frozen: [],\r\n            first: 0,\r\n            forcedFirst: 0,\r\n            last: -1,\r\n            forcedLast: -1\r\n        };\r\n        this.visibleFirstColumnPos = 0;\r\n        this.horizontallyShifted = false;\r\n        this.columnAdapter = this.createColumnAdapter();\r\n        this.columnMixins = mixinClasses.map(function (mixinClass) { return new mixinClass(_this.columnAdapter); });\r\n        this.columnFragment = header.ownerDocument.createDocumentFragment();\r\n    }\r\n    ACellAdapter.prototype.leftShift = function () {\r\n        var ctx = this.context;\r\n        var frozen = this.visibleColumns.frozen.reduce(function (a, d) { return a + ctx.columns[d].width + ctx.column.padding(d); }, 0);\r\n        return this.visibleFirstColumnPos - frozen;\r\n    };\r\n    Object.defineProperty(ACellAdapter.prototype, \"headerScroller\", {\r\n        get: function () {\r\n            return this.header.parentElement;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ACellAdapter.prototype.addColumnMixin = function (mixinClass, options) {\r\n        this.columnMixins.push(new mixinClass(this.columnAdapter, options));\r\n    };\r\n    ACellAdapter.prototype.createColumnAdapter = function () {\r\n        var _this = this;\r\n        var r = {\r\n            visible: this.visibleColumns,\r\n            addAtBeginning: this.addColumnAtStart.bind(this),\r\n            addAtBottom: this.addColumnAtEnd.bind(this),\r\n            removeFromBeginning: this.removeColumnFromStart.bind(this),\r\n            removeFromBottom: this.removeColumnFromEnd.bind(this),\r\n            updateOffset: this.updateColumnOffset.bind(this),\r\n            scroller: this.headerScroller,\r\n            syncFrozen: this.syncFrozen.bind(this),\r\n            isScrollEventWaiting: function () { return isScrollEventWaiting(_this.headerScroller, 'animation'); }\r\n        };\r\n        Object.defineProperties(r, {\r\n            visibleFirstRowPos: {\r\n                get: function () { return _this.visibleFirstColumnPos; },\r\n                enumerable: true\r\n            },\r\n            context: {\r\n                get: function () { return _this.context.column; },\r\n                enumerable: true\r\n            },\r\n            scrollOffset: {\r\n                get: function () { return _this.lastScrollInfo ? _this.lastScrollInfo.left : 0; },\r\n                enumerable: true\r\n            },\r\n            scrollTotal: {\r\n                get: function () { return _this.lastScrollInfo ? _this.lastScrollInfo.width : _this.headerScroller.clientWidth; },\r\n                enumerable: true\r\n            }\r\n        });\r\n        return r;\r\n    };\r\n    ACellAdapter.prototype.init = function () {\r\n        var _this = this;\r\n        var context = this.context;\r\n        this.style.update(context.defaultRowHeight - context.padding(-1), context.columns, context.column.padding, 0, this.tableId);\r\n        context.columns.forEach(function () {\r\n            //init pool\r\n            _this.cellPool.push([]);\r\n        });\r\n    };\r\n    ACellAdapter.prototype.onScrolledHorizontally = function (scrollLeft, clientWidth, isGoingRight) {\r\n        var scrollResult = this.onScrolledHorizontallyImpl(scrollLeft, clientWidth);\r\n        for (var _i = 0, _a = this.columnMixins; _i < _a.length; _i++) {\r\n            var mixin = _a[_i];\r\n            mixin.onScrolled(isGoingRight, scrollResult);\r\n        }\r\n        return scrollResult;\r\n    };\r\n    ACellAdapter.prototype.removeColumnFromStart = function (from, to, frozenShift) {\r\n        var _this = this;\r\n        if (frozenShift === void 0) { frozenShift = this.visibleColumns.frozen.length; }\r\n        this.forEachRow(function (row) {\r\n            _this.removeCellFromStart(row, from, to, frozenShift);\r\n        });\r\n        if (debug) {\r\n            this.verifyRows();\r\n        }\r\n    };\r\n    ACellAdapter.prototype.removeCellFromStart = function (row, from, to, frozenShift) {\r\n        for (var i = from; i <= to; ++i) {\r\n            var node = (frozenShift === 0 ? row.firstElementChild : row.children[frozenShift]);\r\n            node.remove();\r\n            this.recycleCell(node, i);\r\n        }\r\n        if (debug) {\r\n            verifyRow(row, -1, this.context.columns);\r\n        }\r\n    };\r\n    ACellAdapter.prototype.removeColumnFromEnd = function (from, to) {\r\n        var _this = this;\r\n        this.forEachRow(function (row) {\r\n            _this.removeCellFromEnd(row, from, to);\r\n        });\r\n        if (debug) {\r\n            this.verifyRows();\r\n        }\r\n    };\r\n    ACellAdapter.prototype.removeCellFromEnd = function (row, from, to) {\r\n        for (var i = to; i >= from; --i) {\r\n            var node = row.lastElementChild;\r\n            node.remove();\r\n            this.recycleCell(node, i);\r\n        }\r\n        if (debug) {\r\n            verifyRow(row, -1, this.context.columns);\r\n        }\r\n    };\r\n    ACellAdapter.prototype.removeFrozenCells = function (row, columnIndices, shift) {\r\n        for (var _i = 0, columnIndices_1 = columnIndices; _i < columnIndices_1.length; _i++) {\r\n            var columnIndex = columnIndices_1[_i];\r\n            var node = row.children[shift];\r\n            node.remove();\r\n            this.recycleCell(node, columnIndex);\r\n        }\r\n        if (debug) {\r\n            verifyRow(row, -1, this.context.columns);\r\n        }\r\n    };\r\n    ACellAdapter.prototype.removeFrozenColumns = function (columnIndices, shift) {\r\n        var _this = this;\r\n        this.forEachRow(function (row) {\r\n            _this.removeFrozenCells(row, columnIndices, shift);\r\n        });\r\n        if (debug) {\r\n            this.verifyRows();\r\n        }\r\n    };\r\n    ACellAdapter.prototype.removeAllColumns = function (includingFrozen) {\r\n        var _this = this;\r\n        this.forEachRow(function (row) {\r\n            _this.removeAllCells(row, includingFrozen);\r\n        });\r\n        if (debug) {\r\n            this.verifyRows();\r\n        }\r\n    };\r\n    ACellAdapter.prototype.removeAllCells = function (row, includingFrozen, shift) {\r\n        var _this = this;\r\n        if (shift === void 0) { shift = this.visibleColumns.first; }\r\n        var arr = Array.from(row.children);\r\n        var frozen = this.visibleColumns.frozen;\r\n        clear(row);\r\n        if (includingFrozen || frozen.length === 0) {\r\n            for (var _i = 0, frozen_1 = frozen; _i < frozen_1.length; _i++) {\r\n                var i = frozen_1[_i];\r\n                this.recycleCell(arr.shift(), i);\r\n            }\r\n        }\r\n        else {\r\n            // have frozen and keep them, so readd them\r\n            for (var _a = 0, frozen_2 = frozen; _a < frozen_2.length; _a++) {\r\n                var _1 = frozen_2[_a];\r\n                row.appendChild(arr.shift());\r\n            }\r\n        }\r\n        arr.forEach(function (item, i) {\r\n            _this.recycleCell(item, i + shift);\r\n        });\r\n        if (debug) {\r\n            verifyRow(row, -1, this.context.columns);\r\n        }\r\n    };\r\n    ACellAdapter.prototype.selectProxyCell = function (row, column, columns) {\r\n        var pool = this.cellPool[column];\r\n        var columnObj = columns[column];\r\n        var item;\r\n        var ready;\r\n        var pooled = pool.pop();\r\n        var r = pooled ? this.updateCell(pooled, row, columnObj) || pooled : this.createCell(this.header.ownerDocument, row, columnObj);\r\n        if (isAsyncUpdate(r)) {\r\n            item = r.item;\r\n            ready = r.ready;\r\n        }\r\n        else {\r\n            item = r;\r\n        }\r\n        if (item !== pooled) {\r\n            item.dataset.id = columnObj.id;\r\n            item.classList.add(CSS_CLASS_TD, this.style.cssClasses.td, cssClass(\"td-\" + this.tableId));\r\n        }\r\n        this.updateShiftedState(item, columnObj);\r\n        return { item: item, ready: ready };\r\n    };\r\n    ACellAdapter.prototype.handleCellReady = function (item, ready, column) {\r\n        var _this = this;\r\n        if (column === void 0) { column = -1; }\r\n        item.classList.add(CSS_CLASS_LOADING);\r\n        var abort = ready;\r\n        //lazy loading\r\n        this.loading.set(item, abort);\r\n        abort.then(function (result) {\r\n            _this.loading.delete(item);\r\n            item.classList.remove(CSS_CLASS_LOADING);\r\n            if (result === ABORTED && column >= 0) {\r\n                //aborted can recycle the real one\r\n                _this.cellPool[column].push(item);\r\n            }\r\n        });\r\n        return item;\r\n    };\r\n    ACellAdapter.prototype.selectCell = function (row, column, columns) {\r\n        var _a = this.selectProxyCell(row, column, columns), item = _a.item, ready = _a.ready;\r\n        if (!isAbortAble(ready)) {\r\n            return item;\r\n        }\r\n        return this.handleCellReady(item, ready, column);\r\n    };\r\n    ACellAdapter.prototype.updateShiftedState = function (node, col) {\r\n        node.classList.toggle(CSS_CLASS_SHIFTED, col.frozen && this.horizontallyShifted);\r\n    };\r\n    ACellAdapter.prototype.recycleCell = function (item, column) {\r\n        if (column === void 0) { column = -1; }\r\n        // check if the dom element is still being manipulated\r\n        if (this.loading.has(item)) {\r\n            var abort = this.loading.get(item);\r\n            abort.abort();\r\n        }\r\n        else if (!isLoadingCell(item) && column >= 0) {\r\n            this.cellPool[column].push(item);\r\n        }\r\n    };\r\n    ACellAdapter.prototype.addColumnAtStart = function (from, to, frozenShift) {\r\n        var _this = this;\r\n        if (frozenShift === void 0) { frozenShift = this.visibleColumns.frozen.length; }\r\n        var columns = this.context.columns;\r\n        this.forEachRow(function (row, rowIndex) {\r\n            _this.addCellAtStart(row, rowIndex, from, to, frozenShift, columns);\r\n        });\r\n        if (debug) {\r\n            this.verifyRows();\r\n        }\r\n    };\r\n    ACellAdapter.prototype.addCellAtStart = function (row, rowIndex, from, to, frozenShift, columns) {\r\n        if (debug) {\r\n            verifyRow(row, rowIndex, this.context.columns);\r\n        }\r\n        for (var i = to; i >= from; --i) {\r\n            var cell = this.selectCell(rowIndex, i, columns);\r\n            row.insertBefore(cell, frozenShift > 0 ? row.children[frozenShift] : row.firstChild);\r\n        }\r\n        if (debug) {\r\n            verifyRow(row, rowIndex, this.context.columns);\r\n        }\r\n    };\r\n    ACellAdapter.prototype.insertFrozenCells = function (row, rowIndex, columnIndices, shift, columns) {\r\n        var before = row.children[shift];\r\n        for (var _i = 0, columnIndices_2 = columnIndices; _i < columnIndices_2.length; _i++) {\r\n            var i = columnIndices_2[_i];\r\n            var cell = this.selectCell(rowIndex, i, columns);\r\n            if (before) {\r\n                row.insertBefore(cell, before);\r\n            }\r\n            else {\r\n                row.appendChild(cell);\r\n            }\r\n        }\r\n    };\r\n    ACellAdapter.prototype.insertFrozenColumns = function (columnIndices, shift) {\r\n        var _this = this;\r\n        var columns = this.context.columns;\r\n        this.forEachRow(function (row, rowIndex) {\r\n            _this.insertFrozenCells(row, rowIndex, columnIndices, shift, columns);\r\n        });\r\n    };\r\n    ACellAdapter.prototype.addColumnAtEnd = function (from, to) {\r\n        var _this = this;\r\n        var columns = this.context.columns;\r\n        this.forEachRow(function (row, rowIndex) {\r\n            _this.addCellAtEnd(row, rowIndex, from, to, columns);\r\n        });\r\n        if (debug) {\r\n            this.verifyRows();\r\n        }\r\n    };\r\n    ACellAdapter.prototype.verifyRows = function () {\r\n        var columns = this.context.columns;\r\n        this.forEachRow(function (row, rowIndex) { return verifyRow(row, rowIndex, columns); });\r\n    };\r\n    ACellAdapter.prototype.addCellAtEnd = function (row, rowIndex, from, to, columns) {\r\n        for (var i = from; i <= to; ++i) {\r\n            var cell = this.selectCell(rowIndex, i, columns);\r\n            row.appendChild(cell);\r\n        }\r\n        if (debug) {\r\n            verifyRow(row, rowIndex, this.context.columns);\r\n        }\r\n    };\r\n    ACellAdapter.prototype.updateHeaders = function () {\r\n        var _this = this;\r\n        var columns = this.context.columns;\r\n        Array.from(this.header.children).forEach(function (node, i) {\r\n            var base = node;\r\n            var col = columns[i];\r\n            var r = _this.updateHeader(base, col);\r\n            var n;\r\n            if (isAsyncUpdate(r)) {\r\n                n = _this.handleCellReady(r.item, r.ready, -1);\r\n            }\r\n            else {\r\n                n = r || base;\r\n            }\r\n            if (n === base) {\r\n                return;\r\n            }\r\n            n.dataset.id = col.id;\r\n            n.classList.add(CSS_CLASS_TH, _this.style.cssClasses.th, cssClass(\"th-\" + _this.tableId));\r\n            _this.header.replaceChild(base, n);\r\n        });\r\n    };\r\n    ACellAdapter.prototype.recreate = function (left, width) {\r\n        var _this = this;\r\n        var context = this.context;\r\n        this.style.update(context.defaultRowHeight - context.padding(-1), context.columns, context.column.padding, -this.leftShift(), this.tableId);\r\n        this.clearPool();\r\n        // init pool\r\n        for (var i = this.cellPool.length; i < context.columns.length; ++i) {\r\n            this.cellPool.push([]);\r\n        }\r\n        //create all header columns\r\n        {\r\n            var fragment_1 = this.columnFragment;\r\n            var document_1 = fragment_1.ownerDocument;\r\n            // create lookup cache to reuse headers\r\n            var ids_1 = new Map();\r\n            while (this.header.lastChild) {\r\n                var c = this.header.lastChild;\r\n                this.header.removeChild(c);\r\n                ids_1.set(c.dataset.id, c);\r\n            }\r\n            context.columns.forEach(function (col) {\r\n                var existing = ids_1.get(col.id);\r\n                var r = existing ? _this.updateHeader(existing, col) || existing : _this.createHeader(document_1, col);\r\n                var n;\r\n                if (isAsyncUpdate(r)) {\r\n                    n = _this.handleCellReady(r.item, r.ready, -1);\r\n                }\r\n                else {\r\n                    n = r;\r\n                }\r\n                if (n !== existing) {\r\n                    n.dataset.id = col.id;\r\n                    n.classList.add(CSS_CLASS_TH, _this.style.cssClasses.th, cssClass(\"th-\" + _this.tableId));\r\n                }\r\n                fragment_1.appendChild(n);\r\n            });\r\n            this.header.appendChild(fragment_1);\r\n        }\r\n        var _a = range(left, width, context.column.defaultRowHeight, context.column.exceptions, context.column.numberOfRows), first = _a.first, last = _a.last, firstRowPos = _a.firstRowPos;\r\n        this.visibleColumns.first = this.visibleColumns.forcedFirst = first;\r\n        this.visibleColumns.last = this.visibleColumns.forcedLast = last;\r\n        if (context.columns.some(function (c) { return c.frozen; })) {\r\n            var target = updateFrozen([], context.columns, first).target;\r\n            this.visibleColumns.frozen = target;\r\n        }\r\n        else {\r\n            this.visibleColumns.frozen = [];\r\n        }\r\n        this.updateColumnOffset(firstRowPos);\r\n    };\r\n    ACellAdapter.prototype.clearPool = function () {\r\n        this.cellPool.forEach(function (p) { return p.splice(0, p.length); });\r\n    };\r\n    ACellAdapter.prototype.updateColumnOffset = function (firstColumnPos) {\r\n        var changed = firstColumnPos !== this.visibleFirstColumnPos;\r\n        this.visibleFirstColumnPos = firstColumnPos;\r\n        if (changed) {\r\n            var context = this.context;\r\n            this.style.update(context.defaultRowHeight - context.padding(-1), context.columns, context.column.padding, -this.leftShift(), this.tableId);\r\n        }\r\n    };\r\n    ACellAdapter.prototype.createRow = function (node, rowIndex) {\r\n        var columns = this.context.columns;\r\n        var visible = this.visibleColumns;\r\n        if (visible.frozen.length > 0) {\r\n            for (var _i = 0, _a = visible.frozen; _i < _a.length; _i++) {\r\n                var i = _a[_i];\r\n                var cell = this.selectCell(rowIndex, i, columns);\r\n                node.appendChild(cell);\r\n            }\r\n        }\r\n        for (var i = visible.first; i <= visible.last; ++i) {\r\n            var cell = this.selectCell(rowIndex, i, columns);\r\n            node.appendChild(cell);\r\n        }\r\n    };\r\n    ACellAdapter.prototype.updateRow = function (node, rowIndex) {\r\n        var columns = this.context.columns;\r\n        var visible = this.visibleColumns;\r\n        //columns may not match anymore if it is a pooled item a long time ago\r\n        switch (node.childElementCount) {\r\n            case 0:\r\n                if (visible.frozen.length > 0) {\r\n                    this.insertFrozenCells(node, rowIndex, visible.frozen, 0, columns);\r\n                }\r\n                this.addCellAtEnd(node, rowIndex, visible.first, visible.last, columns);\r\n                break;\r\n            case 1:\r\n                var old = node.firstElementChild;\r\n                var id_1 = old.dataset.id;\r\n                var columnIndex = columns.findIndex(function (c) { return c.id === id_1; });\r\n                node.removeChild(old);\r\n                if (columnIndex >= 0) {\r\n                    this.recycleCell(old, columnIndex);\r\n                }\r\n                if (visible.frozen.length > 0) {\r\n                    this.insertFrozenCells(node, rowIndex, visible.frozen, 0, columns);\r\n                }\r\n                this.addCellAtEnd(node, rowIndex, visible.first, visible.last, columns);\r\n                break;\r\n            default:\r\n                this.mergeColumns(node, rowIndex);\r\n                break;\r\n        }\r\n    };\r\n    ACellAdapter.prototype.mergeColumns = function (node, rowIndex) {\r\n        var _this = this;\r\n        var columns = this.context.columns;\r\n        var visible = this.visibleColumns;\r\n        var ids = new Map();\r\n        while (node.lastChild) {\r\n            var c = node.lastChild;\r\n            node.removeChild(c);\r\n            ids.set(c.dataset.id, c);\r\n        }\r\n        var updateImpl = function (i) {\r\n            var col = columns[i];\r\n            var existing = ids.get(col.id);\r\n            if (!existing) {\r\n                var cell_1 = _this.selectCell(rowIndex, i, columns);\r\n                node.appendChild(cell_1);\r\n                return;\r\n            }\r\n            ids.delete(col.id);\r\n            var r = _this.updateCell(existing, rowIndex, col) || existing;\r\n            var cell;\r\n            if (isAsyncUpdate(r)) {\r\n                cell = _this.handleCellReady(r.item, r.ready, i);\r\n            }\r\n            else {\r\n                cell = r;\r\n            }\r\n            if (cell && cell !== existing) {\r\n                cell.dataset.id = col.id;\r\n                cell.classList.add(CSS_CLASS_TD, _this.style.cssClasses.td, cssClass(\"td-\" + _this.tableId));\r\n            }\r\n            _this.updateShiftedState(cell, col);\r\n            node.appendChild(cell);\r\n        };\r\n        for (var _i = 0, _a = visible.frozen; _i < _a.length; _i++) {\r\n            var frozen = _a[_i];\r\n            updateImpl(frozen);\r\n        }\r\n        for (var i = visible.first; i <= visible.last; ++i) {\r\n            updateImpl(i);\r\n        }\r\n        if (ids.size === 0) {\r\n            return;\r\n        }\r\n        // recycle\r\n        var byId = new Map(columns.map(function (d, i) { return [d.id, i]; }));\r\n        ids.forEach(function (node, key) {\r\n            var index = byId.get(key);\r\n            if (index != null && index >= 0) {\r\n                _this.recycleCell(node, index);\r\n            }\r\n        });\r\n    };\r\n    ACellAdapter.prototype.updateShiftedStates = function () {\r\n        if (!this.context.columns.some(function (d) { return d.frozen; })) {\r\n            return;\r\n        }\r\n        var shifted = this.horizontallyShifted;\r\n        var clazz = CSS_CLASS_SHIFTED;\r\n        if (shifted) {\r\n            var headers = Array.from(this.header.querySelectorAll(\".\" + CSS_CLASS_FROZEN + \":not(.\" + clazz + \")\"));\r\n            var bodies = Array.from(this.body.querySelectorAll(\".\" + CSS_CLASS_FROZEN + \":not(.\" + clazz + \")\"));\r\n            for (var _i = 0, headers_1 = headers; _i < headers_1.length; _i++) {\r\n                var item = headers_1[_i];\r\n                item.classList.add(clazz);\r\n            }\r\n            for (var _a = 0, bodies_1 = bodies; _a < bodies_1.length; _a++) {\r\n                var item = bodies_1[_a];\r\n                item.classList.add(clazz);\r\n            }\r\n        }\r\n        else {\r\n            var headers = Array.from(this.header.querySelectorAll(\".\" + CSS_CLASS_FROZEN + \".\" + clazz));\r\n            var bodies = Array.from(this.body.querySelectorAll(\".\" + CSS_CLASS_FROZEN + \".\" + clazz));\r\n            for (var _b = 0, headers_2 = headers; _b < headers_2.length; _b++) {\r\n                var item = headers_2[_b];\r\n                item.classList.remove(clazz);\r\n            }\r\n            for (var _c = 0, bodies_2 = bodies; _c < bodies_2.length; _c++) {\r\n                var item = bodies_2[_c];\r\n                item.classList.remove(clazz);\r\n            }\r\n        }\r\n    };\r\n    ACellAdapter.prototype.syncFrozen = function (first) {\r\n        var columns = this.context.columns;\r\n        var visible = this.visibleColumns;\r\n        if (!columns.some(function (d) { return d.frozen; })) {\r\n            return 0;\r\n        }\r\n        if (first === 0) {\r\n            if (visible.frozen.length > 0) {\r\n                this.removeFrozenColumns(visible.frozen, 0);\r\n                visible.frozen = [];\r\n            }\r\n            return 0;\r\n        }\r\n        var old = visible.frozen.length;\r\n        var _a = updateFrozen(visible.frozen, columns, first), target = _a.target, added = _a.added, removed = _a.removed;\r\n        if (removed.length > 0) {\r\n            this.removeFrozenColumns(removed, old - removed.length);\r\n        }\r\n        if (added.length > 0) {\r\n            this.insertFrozenColumns(added, old - removed.length);\r\n        }\r\n        visible.frozen = target;\r\n        return target.length;\r\n    };\r\n    ACellAdapter.prototype.onScrolledHorizontallyImpl = function (scrollLeft, clientWidth) {\r\n        var shiftingChanged = this.horizontallyShifted !== scrollLeft > 0;\r\n        this.horizontallyShifted = scrollLeft > 0;\r\n        var column = this.context.column;\r\n        var _a = range(scrollLeft, clientWidth, column.defaultRowHeight, column.exceptions, column.numberOfRows), first = _a.first, last = _a.last, firstRowPos = _a.firstRowPos;\r\n        var visible = this.visibleColumns;\r\n        visible.forcedFirst = first;\r\n        visible.forcedLast = last;\r\n        if ((first - visible.first) >= 0 && (last - visible.last) <= 0) {\r\n            //nothing to do\r\n            if (shiftingChanged) {\r\n                this.updateShiftedStates();\r\n            }\r\n            return EScrollResult.NONE;\r\n        }\r\n        var r = EScrollResult.SOME;\r\n        var frozenShift = this.syncFrozen(first);\r\n        if (first > visible.last || last < visible.first) {\r\n            //no overlap, clean and draw everything\r\n            //console.log(`ff added: ${last - first + 1} removed: ${visibleLast - visibleFirst + 1} ${first}:${last} ${offset}`);\r\n            //removeRows(visibleFirst, visibleLast);\r\n            this.removeAllColumns(false);\r\n            this.addColumnAtEnd(first, last);\r\n            r = EScrollResult.ALL;\r\n        }\r\n        else if (first < visible.first) {\r\n            //some first rows missing and some last rows to much\r\n            //console.log(`up added: ${visibleFirst - first + 1} removed: ${visibleLast - last + 1} ${first}:${last} ${offset}`);\r\n            this.removeColumnFromEnd(last + 1, visible.last);\r\n            this.updateShiftedStates();\r\n            this.addColumnAtStart(first, visible.first - 1, frozenShift);\r\n            r = EScrollResult.SOME_TOP;\r\n        }\r\n        else {\r\n            //console.log(`do added: ${last - visibleLast + 1} removed: ${first - visibleFirst + 1} ${first}:${last} ${offset}`);\r\n            //some last rows missing and some first rows to much\r\n            this.removeColumnFromStart(visible.first, first - 1, frozenShift);\r\n            this.updateShiftedStates();\r\n            this.addColumnAtEnd(visible.last + 1, last);\r\n            r = EScrollResult.SOME_BOTTOM;\r\n        }\r\n        visible.first = first;\r\n        visible.last = last;\r\n        this.updateColumnOffset(firstRowPos);\r\n        return r;\r\n    };\r\n    return ACellAdapter;\r\n}());\r\nexport { ACellAdapter };\r\n/**\r\n * @internal\r\n */\r\nexport default ACellAdapter;\r\nfunction verifyRow(row, index, columns) {\r\n    var cols = Array.from(row.children);\r\n    //sort incrementally\r\n    if (cols.length <= 1) {\r\n        return;\r\n    }\r\n    var colObjs = cols.map(function (c) { return columns.find(function (d) { return d.id === c.dataset.id; }); });\r\n    console.assert(colObjs.every(function (d) { return Boolean(d); }), 'all columns must exist', index);\r\n    console.assert(colObjs.every(function (d, i) { return i === 0 || d.index >= colObjs[i - 1].index; }), 'all columns in ascending order', index);\r\n    console.assert((new Set(colObjs)).size === colObjs.length, 'unique columns', colObjs);\r\n}\r\n//# sourceMappingURL=ACellAdapter.js.map","import * as tslib_1 from \"tslib\";\r\nimport ARowRenderer, { setTransform } from '../ARowRenderer';\r\nimport { EScrollResult } from '../mixin';\r\nimport { CSS_CLASS_HIDDEN, CSS_CLASS_LOADING } from '../styles';\r\nimport ACellAdapter from './internal/ACellAdapter';\r\n/**\r\n * base class for a cell renderer as table section\r\n */\r\nvar ACellTableSection = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ACellTableSection, _super);\r\n    function ACellTableSection(header, body, tableId, style, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var _this = _super.call(this, body, options) || this;\r\n        _this.header = header;\r\n        _this.body = body;\r\n        _this.tableId = tableId;\r\n        _this.style = style;\r\n        var that = _this;\r\n        var LocalCell = /** @class */ (function (_super) {\r\n            tslib_1.__extends(LocalCell, _super);\r\n            function LocalCell() {\r\n                return _super !== null && _super.apply(this, arguments) || this;\r\n            }\r\n            Object.defineProperty(LocalCell.prototype, \"context\", {\r\n                get: function () {\r\n                    return that.context;\r\n                },\r\n                enumerable: true,\r\n                configurable: true\r\n            });\r\n            Object.defineProperty(LocalCell.prototype, \"body\", {\r\n                get: function () {\r\n                    return that.body;\r\n                },\r\n                enumerable: true,\r\n                configurable: true\r\n            });\r\n            Object.defineProperty(LocalCell.prototype, \"lastScrollInfo\", {\r\n                get: function () {\r\n                    return that.lastScrollInfo;\r\n                },\r\n                enumerable: true,\r\n                configurable: true\r\n            });\r\n            LocalCell.prototype.createHeader = function (document, column) {\r\n                return that.createHeader(document, column);\r\n            };\r\n            LocalCell.prototype.updateHeader = function (node, column) {\r\n                return that.updateHeader(node, column);\r\n            };\r\n            LocalCell.prototype.createCell = function (document, index, column) {\r\n                return that.createCell(document, index, column);\r\n            };\r\n            LocalCell.prototype.updateColumnOffset = function (firstColumnPos) {\r\n                _super.prototype.updateColumnOffset.call(this, firstColumnPos);\r\n                that.updateOffset(that.visibleFirstRowPos);\r\n            };\r\n            LocalCell.prototype.updateCell = function (node, index, column) {\r\n                return that.updateCell(node, index, column);\r\n            };\r\n            LocalCell.prototype.forEachRow = function (callback) {\r\n                return that.forEachRow(callback);\r\n            };\r\n            return LocalCell;\r\n        }(ACellAdapter));\r\n        _this.cell = new (LocalCell.bind.apply(LocalCell, [void 0, _this.header, _this.style, tableId].concat((options.mixins || []))))();\r\n        return _this;\r\n    }\r\n    ACellTableSection.prototype.addColumnMixin = function (mixinClass, options) {\r\n        this.cell.addColumnMixin(mixinClass, options);\r\n    };\r\n    Object.defineProperty(ACellTableSection.prototype, \"idPrefix\", {\r\n        get: function () {\r\n            return this.tableId;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ACellTableSection.prototype, \"width\", {\r\n        get: function () {\r\n            return this.context.column.totalHeight;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ACellTableSection.prototype, \"visibleColumns\", {\r\n        get: function () {\r\n            return this.cell.visibleColumns;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ACellTableSection.prototype, \"visibleFirstColumnPos\", {\r\n        get: function () {\r\n            return this.cell.visibleFirstColumnPos;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ACellTableSection.prototype, \"height\", {\r\n        get: function () {\r\n            return this.context.totalHeight;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ACellTableSection.prototype, \"hidden\", {\r\n        get: function () {\r\n            return this.header.classList.contains(CSS_CLASS_LOADING);\r\n        },\r\n        set: function (value) {\r\n            var old = this.hidden;\r\n            if (old === value) {\r\n                return;\r\n            }\r\n            this.header.classList.toggle(CSS_CLASS_LOADING, value);\r\n            this.body.classList.toggle(CSS_CLASS_LOADING, value);\r\n            this.header.classList.toggle(CSS_CLASS_HIDDEN, value);\r\n            this.body.classList.toggle(CSS_CLASS_HIDDEN, value);\r\n            this.onVisibilityChanged(!value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ACellTableSection.prototype.updateSizer = function (firstRowPos) {\r\n        this.updateShifts(firstRowPos, this.cell.leftShift());\r\n        // no sizer update since centrally managed\r\n    };\r\n    ACellTableSection.prototype.updateShifts = function (top, _left) {\r\n        setTransform(this.body, 0 /*left.toFixed(0)*/, top.toFixed(0));\r\n    };\r\n    /**\r\n     * hook when the visibility changes\r\n     * @param {boolean} _visible current visibility\r\n     */\r\n    ACellTableSection.prototype.onVisibilityChanged = function (_visible) {\r\n        // hook\r\n    };\r\n    ACellTableSection.prototype.hide = function () {\r\n        this.hidden = true;\r\n    };\r\n    ACellTableSection.prototype.show = function (scrollLeft, clientWidth, isGoingRight) {\r\n        var wasHidden = this.hidden;\r\n        this.hidden = false;\r\n        if (wasHidden) { // full update\r\n            this.revalidate();\r\n        }\r\n        else {\r\n            this.onScrolledHorizontally(scrollLeft, clientWidth, isGoingRight);\r\n        }\r\n    };\r\n    ACellTableSection.prototype.init = function () {\r\n        this.hide(); // hide by default\r\n        this.cell.init();\r\n        _super.prototype.init.call(this);\r\n    };\r\n    ACellTableSection.prototype.destroy = function () {\r\n        _super.prototype.destroy.call(this);\r\n        this.header.remove();\r\n        this.style.remove(this.tableId);\r\n    };\r\n    ACellTableSection.prototype.onScrolledVertically = function (scrollTop, clientHeight, isGoingDown) {\r\n        if (this.hidden) {\r\n            return EScrollResult.NONE;\r\n        }\r\n        return _super.prototype.onScrolledVertically.call(this, scrollTop, clientHeight, isGoingDown);\r\n    };\r\n    ACellTableSection.prototype.onScrolledHorizontally = function (scrollLeft, clientWidth, isGoingRight) {\r\n        var r = this.cell.onScrolledHorizontally(scrollLeft, clientWidth, isGoingRight);\r\n        this.updateSizer(this.visibleFirstRowPos);\r\n        return r;\r\n    };\r\n    /**\r\n     * triggers updating the header\r\n     */\r\n    ACellTableSection.prototype.updateHeaders = function () {\r\n        this.cell.updateHeaders();\r\n    };\r\n    ACellTableSection.prototype.handleCellReady = function (item, ready, column) {\r\n        if (column === void 0) { column = -1; }\r\n        return this.cell.handleCellReady(item, ready, column);\r\n    };\r\n    ACellTableSection.prototype.recycleCell = function (item, column) {\r\n        if (column === void 0) { column = -1; }\r\n        this.cell.recycleCell(item, column);\r\n    };\r\n    /**\r\n     * trigger an update all all column widths\r\n     */\r\n    ACellTableSection.prototype.updateColumnWidths = function () {\r\n        var context = this.context;\r\n        this.style.update(context.defaultRowHeight - context.padding(-1), context.columns, context.column.padding, -this.cell.leftShift(), this.tableId);\r\n    };\r\n    ACellTableSection.prototype.recreate = function (ctx) {\r\n        var scroller = this.bodyScroller;\r\n        var oldLeft = scroller.scrollLeft;\r\n        this.cell.recreate(oldLeft, scroller.clientWidth);\r\n        _super.prototype.recreate.call(this, ctx);\r\n        // restore left\r\n        scroller.scrollLeft = oldLeft;\r\n    };\r\n    ACellTableSection.prototype.clearPool = function () {\r\n        _super.prototype.clearPool.call(this);\r\n        this.cell.clearPool();\r\n    };\r\n    ACellTableSection.prototype.createRow = function (node, rowIndex) {\r\n        this.cell.createRow(node, rowIndex);\r\n        node.classList.add(this.style.cssClasses.tr);\r\n    };\r\n    ACellTableSection.prototype.updateRow = function (node, rowIndex) {\r\n        this.cell.updateRow(node, rowIndex);\r\n    };\r\n    return ACellTableSection;\r\n}(ARowRenderer));\r\nexport { ACellTableSection };\r\nexport default ACellTableSection;\r\n//# sourceMappingURL=ACellTableSection.js.map","import {defaultPhases, EAnimationMode, IAnimationContext, IAnimationItem, IExceptionContext, IPhase, KeyFinder} from 'lineupengine';\nimport {IGroupData, IGroupItem, isGroup} from '../model';\n\n/** @internal */\nexport interface IGroupLookUp {\n  item2groupIndex: Map<number, number>;\n  group2firstItemIndex: Map<string, number>;\n}\n\nfunction toGroupLookup(items: (IGroupItem | IGroupData)[]): IGroupLookUp {\n  const item2groupIndex = new Map<number, number>();\n  const group2firstItemIndex = new Map<string, number>();\n  items.forEach((item, i) => {\n    if (isGroup(item)) {\n      for (let o = 0; o < item.order.length; ++o) {\n        item2groupIndex.set(o, i);\n      }\n    } else if (item.group && item.relativeIndex === 0) {\n      group2firstItemIndex.set(item.group.name, i);\n    }\n  });\n  return {item2groupIndex, group2firstItemIndex};\n}\n\nfunction toKey(item: IGroupItem | IGroupData) {\n  if (isGroup(item)) {\n    return item.name;\n  }\n  return (<IGroupItem>item).dataIndex.toString();\n}\n\n/** @internal */\nexport function lineupAnimation(previous: IExceptionContext, previousData: (IGroupItem | IGroupData)[], currentData: (IGroupItem | IGroupData)[]): IAnimationContext {\n\n  const previousKey = (index: number) => toKey(previousData[index]);\n  const currentKey = (index: number) => toKey(currentData[index]);\n\n\n  const previousGroupCount = previousData.reduce((acc, i) => acc + (isGroup(i) ? 1 : 0), 0);\n  const currentGroupCount = currentData.reduce((acc, i) => acc + (isGroup(i) ? 1 : 0), 0);\n\n  if (previousGroupCount === currentGroupCount) {\n    // reorder or filter only\n    return {currentKey, previous, previousKey};\n  }\n\n  // try to appear where the group was uncollapsed and vice versa\n  let prevHelper: IGroupLookUp;\n  const appearPosition = (currentRowIndex: number, previousFinder: KeyFinder, defaultValue: number) => {\n    if (!prevHelper) {\n      prevHelper = toGroupLookup(previousData);\n    }\n    const item = currentData[currentRowIndex];\n    const referenceIndex = isGroup(item) ? prevHelper.group2firstItemIndex.get(item.name) : prevHelper.item2groupIndex.get(item.dataIndex);\n    if (referenceIndex === undefined) {\n      return defaultValue;\n    }\n    const pos = previousFinder.posByKey(previousKey(referenceIndex));\n    return pos.pos >= 0 ? pos.pos : defaultValue;\n  };\n\n\n  let currHelper: IGroupLookUp;\n  const removePosition = (previousRowIndex: number, currentFinder: KeyFinder, defaultValue: number) => {\n    if (!currHelper) {\n      currHelper = toGroupLookup(currentData);\n    }\n    const item = previousData[previousRowIndex];\n    const referenceIndex = isGroup(item) ? currHelper.group2firstItemIndex.get(item.name) : currHelper.item2groupIndex.get(item.dataIndex);\n    if (referenceIndex === undefined) {\n      return defaultValue;\n    }\n    const pos = currentFinder.posByKey(currentKey(referenceIndex));\n    return pos.pos >= 0 ? pos.pos : defaultValue;\n  };\n\n  const phases: IPhase[] = [\n    Object.assign({}, defaultPhases[0], {\n      apply(item: Readonly<IAnimationItem>, previousFinder: KeyFinder) {\n        defaultPhases[0].apply(item);\n        if (item.mode === EAnimationMode.SHOW) {\n          item.node.style.transform = `translate(0, ${appearPosition(item.current.index, previousFinder, item.previous.y) - item.nodeY}px)`;\n        }\n      }\n    }),\n    Object.assign({}, defaultPhases[1], {\n      apply(item: Readonly<IAnimationItem>, _previousFinder: KeyFinder, currentFinder: KeyFinder) {\n        defaultPhases[1].apply(item);\n        if (item.mode === EAnimationMode.HIDE) {\n          item.node.style.transform = `translate(0, ${removePosition(item.previous.index, currentFinder, item.current.y) - item.nodeY}px)`;\n        }\n      }\n    }),\n    defaultPhases[defaultPhases.length - 1]\n  ];\n\n  return {previous, previousKey, currentKey, phases};\n}\n","import {IColumn, IAbortAblePromise, IAsyncUpdate, isAbortAble} from 'lineupengine';\nimport {Column} from '../model';\nimport {ICellRenderer, IGroupCellRenderer} from '../renderer';\nimport {ISummaryRenderer, IRenderCallback} from '../renderer';\nimport {createHeader, updateHeader} from './header';\nimport {IRankingContext} from './interfaces';\nimport {ILineUpFlags} from '../config';\nimport {cssClass, engineCssClass} from '../styles';\nimport {isPromiseLike} from '../internal';\n\nexport interface IRenderers {\n  singleId: string;\n  single: ICellRenderer;\n  groupId: string;\n  group: IGroupCellRenderer;\n  summaryId: string;\n  summary: ISummaryRenderer | null;\n  singleTemplate: HTMLElement | null;\n  groupTemplate: HTMLElement | null;\n  summaryTemplate: HTMLElement | null;\n}\n\nexport default class RenderColumn implements IColumn {\n  renderers: IRenderers | null = null;\n\n  constructor(public readonly c: Column, public index: number, protected ctx: IRankingContext, protected readonly flags: ILineUpFlags) {\n\n  }\n\n  get width() {\n    return this.c.getWidth();\n  }\n\n  get id() {\n    return this.c.id;\n  }\n\n  get frozen() {\n    return this.flags.disableFrozenColumns ? false : this.c.frozen;\n  }\n\n  private singleRenderer() {\n    if (!this.renderers || !this.renderers.single) {\n      return null;\n    }\n    if (this.renderers.singleTemplate) {\n      return <HTMLElement>this.renderers.singleTemplate.cloneNode(true);\n    }\n    const elem = this.ctx.asElement(this.renderers.single.template);\n    elem.classList.add(cssClass(`renderer-${this.renderers.singleId}`), cssClass('detail'));\n    elem.dataset.renderer = this.renderers.singleId;\n    elem.dataset.group = 'd';\n\n    this.renderers.singleTemplate = <HTMLElement>elem.cloneNode(true);\n    return elem;\n  }\n\n  private groupRenderer() {\n    if (!this.renderers || !this.renderers.group) {\n      return null;\n    }\n    if (this.renderers.groupTemplate) {\n      return <HTMLElement>this.renderers.groupTemplate.cloneNode(true);\n    }\n    const elem = this.ctx.asElement(this.renderers.group.template);\n    elem.classList.add(cssClass(`renderer-${this.renderers.groupId}`), cssClass('group'));\n    elem.dataset.renderer = this.renderers.groupId;\n    elem.dataset.group = 'g';\n\n    this.renderers.groupTemplate = <HTMLElement>elem.cloneNode(true);\n    return elem;\n  }\n\n  private summaryRenderer() {\n    if (!this.renderers || !this.renderers.summary) {\n      return null;\n    }\n    if (this.renderers.summaryTemplate) {\n      return <HTMLElement>this.renderers.summaryTemplate.cloneNode(true);\n    }\n    const elem = this.ctx.asElement(this.renderers.summary.template);\n    elem.classList.add(cssClass('summary'), cssClass('th-summary'), cssClass(`renderer-${this.renderers.summaryId}`));\n    elem.dataset.renderer = this.renderers.summaryId;\n\n    this.renderers.summaryTemplate = <HTMLElement>elem.cloneNode(true);\n    return elem;\n  }\n\n  createHeader(): HTMLElement | IAsyncUpdate<HTMLElement> {\n    const node = createHeader(this.c, this.ctx, {\n      extraPrefix: 'th',\n      dragAble: this.flags.advancedUIFeatures,\n      mergeDropAble: this.flags.advancedModelFeatures,\n      rearrangeAble: this.flags.advancedUIFeatures,\n      resizeable: this.flags.advancedUIFeatures\n    });\n    node.classList.add(cssClass('header'));\n    if (!this.flags.disableFrozenColumns) {\n      node.classList.toggle(engineCssClass('frozen'), this.frozen);\n    }\n\n    if (this.renderers && this.renderers.summary) {\n      const summary = this.summaryRenderer()!;\n      node.appendChild(summary);\n    }\n    return this.updateHeader(node);\n  }\n\n  updateHeader(node: HTMLElement): HTMLElement | IAsyncUpdate<HTMLElement> {\n    updateHeader(node, this.c);\n    if (!this.renderers || !this.renderers.summary) {\n      return node;\n    }\n    let summary = <HTMLElement>node.getElementsByClassName(cssClass('summary'))[0]!;\n    const oldRenderer = summary.dataset.renderer;\n    const currentRenderer = this.renderers.summaryId;\n    if (oldRenderer !== currentRenderer) {\n      summary.remove();\n      summary = this.summaryRenderer()!;\n      node.appendChild(summary);\n    }\n    const ready = this.renderers.summary.update(summary);\n    if (ready) {\n      return {item: node, ready};\n    }\n    return node;\n  }\n\n  createCell(index: number): HTMLElement | IAsyncUpdate<HTMLElement> {\n    const isGroup = this.ctx.isGroup(index);\n    const node = isGroup ? this.groupRenderer()! : this.singleRenderer()!;\n    return this.updateCell(node, index);\n  }\n\n  updateCell(node: HTMLElement, index: number): HTMLElement | IAsyncUpdate<HTMLElement> {\n    if (!this.flags.disableFrozenColumns) {\n      node.classList.toggle(engineCssClass('frozen'), this.frozen);\n    }\n    const isGroup = this.ctx.isGroup(index);\n    // assert that we have the template of the right mode\n    const oldRenderer = node.dataset.renderer;\n    const currentRenderer = isGroup ? this.renderers!.groupId : this.renderers!.singleId;\n    const oldGroup = node.dataset.group;\n    const currentGroup = (isGroup ? 'g' : 'd');\n    if (oldRenderer !== currentRenderer || oldGroup !== currentGroup) {\n      node = isGroup ? this.groupRenderer()! : this.singleRenderer()!;\n    }\n    let ready: IAbortAblePromise<void> | void | null;\n    if (isGroup) {\n      const g = this.ctx.getGroup(index);\n      ready = this.renderers!.group.update(node, g);\n    } else {\n      const r = this.ctx.getRow(index);\n      const row = this.ctx.provider.getRow(r.dataIndex);\n      if (!isPromiseLike(row)) {\n        ready = this.renderers!.single.update(node, row, r.relativeIndex, r.group);\n      } else {\n        ready = chainAbortAble(row, (row) => this.renderers!.single.update(node, row, r.relativeIndex, r.group));\n      }\n    }\n    if (ready) {\n      return {item: node, ready};\n    }\n    return node;\n  }\n\n  renderCell(ctx: CanvasRenderingContext2D, index: number): boolean | IAbortAblePromise<IRenderCallback> {\n    const r = this.ctx.getRow(index);\n    const s = this.renderers!.single;\n    if (!s.render) {\n      return false;\n    }\n    const row = this.ctx.provider.getRow(r.dataIndex);\n    if (!isPromiseLike(row)) {\n      return s.render(ctx, row, r.relativeIndex, r.group) || false;\n    }\n    return chainAbortAble(row, (row) => s.render!(ctx, row, r.relativeIndex, r.group) || false);\n  }\n\n}\n\n\nfunction chainAbortAble<T, U, V>(toWait: Promise<T>, mapper: (value: T) => IAbortAblePromise<U> | V): IAbortAblePromise<U> | V {\n  let aborted = false;\n  const p: any = new Promise<IAbortAblePromise<U> | null | void>((resolve) => {\n    if (aborted) {\n      return;\n    }\n    toWait.then((r) => {\n      if (aborted) {\n        return;\n      }\n      const mapped = mapper(r);\n      if (isAbortAble(<any>mapped)) {\n        p.abort = (<IAbortAblePromise<U>>mapped).abort.bind(mapped);\n        return p.then(resolve);\n      }\n      return resolve(<any>mapped);\n    });\n  });\n\n  p.abort = () => {\n    aborted = true;\n  };\n  return p;\n}\n","import {abortAbleAll, IAbortAblePromise, IAsyncUpdate, isAsyncUpdate, StyleManager} from 'lineupengine';\nimport {ILineUpFlags} from '../config';\nimport {round} from '../internal';\nimport {Column, IMultiLevelColumn} from '../model';\nimport {ISummaryRenderer} from '../renderer';\nimport {multiLevelGridCSSClass, forEachChild} from '../renderer/utils';\nimport {COLUMN_PADDING, cssClass} from '../styles';\nimport {createHeader, updateHeader} from './header';\nimport {IRankingContext} from './interfaces';\nimport RenderColumn from './RenderColumn';\n\n/** @internal */\nexport default class MultiLevelRenderColumn extends RenderColumn {\n  private readonly summaries: ISummaryRenderer[] = [];\n\n  constructor(c: IMultiLevelColumn & Column, index: number, ctx: IRankingContext, flags: ILineUpFlags) {\n    super(c, index, ctx, flags);\n  }\n\n  private get mc() {\n    return <IMultiLevelColumn & Column>this.c;\n  }\n\n  get width() {\n    return this.c.getWidth() + COLUMN_PADDING * this.mc.length;\n  }\n\n  createHeader() {\n    const r = super.createHeader();\n    const wrapper = this.ctx.document.createElement('div');\n    wrapper.classList.add(cssClass('nested'));\n    wrapper.classList.add(multiLevelGridCSSClass(this.ctx.idPrefix, this.c));\n\n    if (isAsyncUpdate(r)) {\n      r.item.appendChild(wrapper);\n    } else {\n      r.appendChild(wrapper);\n    }\n\n    return this.updateNested(wrapper, r);\n  }\n\n  private matchChildren(wrapper: HTMLElement, children: Column[]) {\n    if (this.summaries.length > children.length) {\n      this.summaries.splice(children.length, this.summaries.length - children.length);\n    }\n\n    function matches(col: Column, i: number) {\n      //do both match?\n      const n = <HTMLElement>wrapper.children[i];\n      return n != null && n.dataset.colId === col.id;\n    }\n\n    if (children.every(matches)) {\n      return;\n    }\n\n    const existing = new Set(children.map((d) => d.id));\n\n    //remove all that are not existing anymore\n    forEachChild(wrapper, (n: HTMLElement) => {\n      const id = n.dataset.colId!;\n      if (!existing.has(id)) {\n        wrapper.removeChild(n);\n      }\n    });\n\n    children.forEach((cc, i) => {\n      const cnode = <HTMLElement>wrapper.querySelector(`[data-col-id=\"${cc.id}\"]`);\n      if (cnode) { // reuse existing\n        wrapper.appendChild(cnode);\n        return;\n      }\n\n      const n = createHeader(cc, this.ctx, {\n        extraPrefix: 'th',\n        mergeDropAble: false,\n        dragAble: this.flags.advancedModelFeatures,\n        rearrangeAble: this.flags.advancedModelFeatures,\n        resizeable: this.flags.advancedModelFeatures\n      });\n      n.classList.add(cssClass('header'), cssClass('nested-th'));\n      (<any>n.style).gridColumnStart = (i + 1).toString();\n      wrapper.appendChild(n);\n\n      if (!this.renderers || !this.renderers.summary) {\n        return;\n      }\n      const summary = this.ctx.summaryRenderer(cc, false);\n      const summaryNode = this.ctx.asElement(summary.template);\n      summaryNode.classList.add(cssClass('summary'), cssClass('th-summary'), cssClass(`renderer-${cc.getSummaryRenderer()}`));\n      summaryNode.dataset.renderer = cc.getSummaryRenderer();\n      n.appendChild(summaryNode);\n      this.summaries[i] = summary;\n      summary.update(summaryNode);\n    });\n  }\n\n  updateHeader(node: HTMLElement) {\n    const r = super.updateHeader(node);\n    node = isAsyncUpdate(r) ? r.item : r;\n    const wrapper = <HTMLElement>node.getElementsByClassName(cssClass('nested'))[0];\n    if (!wrapper) {\n      return r; // too early\n    }\n    node.appendChild(wrapper); // ensure the last one\n    return this.updateNested(wrapper, r);\n  }\n\n  updateWidthRule(style: StyleManager) {\n    const mc = this.mc;\n    // need this for chrome to work properly\n    const widths = mc.children.map((c) => `minmax(0, ${round(c.getWidth())}fr)`);\n    const clazz = multiLevelGridCSSClass(this.ctx.idPrefix, this.c);\n    style.updateRule(`stacked-${this.c.id}`, `.${clazz}`, <any>{\n      display: 'grid',\n      gridTemplateColumns: widths.join(' ')\n    });\n    return clazz;\n  }\n\n  private updateNested(wrapper: HTMLElement, r: HTMLElement | IAsyncUpdate<HTMLElement>) {\n    const sub = this.mc.children;\n    this.matchChildren(wrapper, sub);\n\n    const children = <HTMLElement[]>Array.from(wrapper.children);\n\n    const toWait: IAbortAblePromise<void>[] = [];\n    let header: HTMLElement;\n    if (isAsyncUpdate(r)) {\n      toWait.push(r.ready);\n      header = r.item;\n    } else {\n      header = r;\n    }\n\n    sub.forEach((c, i) => {\n      const node = children[i];\n      updateHeader(node, c);\n\n      if (!this.renderers || !this.renderers.summary) {\n        return;\n      }\n      let summary = <HTMLElement>node.getElementsByClassName(cssClass('summary'))[0];\n      const oldRenderer = summary.dataset.renderer;\n      const currentRenderer = c.getSummaryRenderer();\n      if (oldRenderer !== currentRenderer) {\n        const renderer = this.ctx.summaryRenderer(c, false);\n        summary.remove();\n        summary = this.ctx.asElement(renderer.template);\n        summary.classList.add(cssClass('summary'), cssClass('th-summary'), cssClass(`renderer-${currentRenderer}`));\n        summary.dataset.renderer = currentRenderer;\n        this.summaries[i] = renderer;\n        node.appendChild(summary);\n      }\n      const ready = this.summaries[i].update(summary);\n      if (ready) {\n        toWait.push(ready);\n      }\n    });\n\n    if (toWait.length === 0) {\n      return header;\n    }\n    return {\n      item: header,\n      ready: <IAbortAblePromise<void>>abortAbleAll(toWait)\n    };\n  }\n}\n","import {ILineUpFlags} from '../config';\nimport {Column, IGroupData, IGroupItem} from '../model';\nimport {IDataProvider} from '../provider';\nimport {IImposer, IRenderContext, ISummaryRenderer} from '../renderer';\nimport DialogManager from './dialogs/DialogManager';\nimport {IDialogContext} from './dialogs';\n\nexport interface IUIOptions {\n  shortcut: boolean | 'only';\n  order: number;\n  featureLevel: 'basic' | 'advanced';\n  featureCategory: 'ranking' | 'model' | 'ui';\n}\n\nexport interface IOnClickHandler {\n  (col: Column, evt: MouseEvent, ctx: IRankingHeaderContext, level: number, viaShortcut: boolean): any;\n}\n\nexport interface IToolbarAction {\n  title: string;\n\n  enabled?(col: Column): boolean;\n\n  onClick: IOnClickHandler;\n\n  options: Partial<IUIOptions>;\n}\n\nexport interface IToolbarDialogAddon {\n  title: string;\n\n  order: number;\n\n  append(col: Column, node: HTMLElement, dialog: IDialogContext, ctx: IRankingHeaderContext): void;\n}\n\n\nexport interface IRenderInfo {\n  type: string;\n  label: string;\n}\n\nexport interface IRankingHeaderContextContainer {\n  readonly idPrefix: string;\n  readonly document: Document;\n  readonly provider: IDataProvider;\n\n  readonly dialogManager: DialogManager;\n\n  asElement(html: string): HTMLElement;\n\n  readonly toolbar: {[key: string]: IToolbarAction | IToolbarDialogAddon};\n\n  readonly flags: ILineUpFlags;\n\n  getPossibleRenderer(col: Column): {item: IRenderInfo[], group: IRenderInfo[], summary: IRenderInfo[]};\n\n  summaryRenderer(co: Column, interactive: boolean, imposer?: IImposer): ISummaryRenderer;\n}\n\nexport interface IRankingBodyContext extends IRankingHeaderContextContainer, IRenderContext {\n  isGroup(index: number): boolean;\n\n  getGroup(index: number): IGroupData;\n\n  getRow(index: number): IGroupItem;\n}\n\nexport declare type IRankingHeaderContext = Readonly<IRankingHeaderContextContainer>;\n\nexport declare type IRankingContext = Readonly<IRankingBodyContext>;\n\nexport enum EMode {\n  ITEM = 'item',\n  BAND = 'band'\n}\n","import {OrderedSet, AEventDispatcher, IEventListener} from '../internal';\nimport {IGroupData, IGroupItem, isGroup} from '../model';\nimport {IDataProvider} from '../provider';\nimport {cssClass, engineCssClass} from '../styles';\nimport {forEachIndices} from '../model/internal';\nimport {rangeSelection} from '../provider/utils';\n\ninterface IPoint {\n  x: number;\n  y: number;\n}\n\ninterface IShift {\n  xShift: number;\n  yShift: number;\n  node: HTMLElement;\n}\n\n/**\n * @asMemberOf SelectionManager\n * @internal\n * @event\n */\nexport declare function selectRange(from: number, to: number, additional: boolean): void;\n\n/** @internal */\nexport default class SelectionManager extends AEventDispatcher {\n  static readonly EVENT_SELECT_RANGE = 'selectRange';\n  private static readonly MIN_DISTANCE = 10;\n\n  private readonly hr: HTMLHRElement;\n\n  private start: (IPoint & IShift) | null = null;\n\n  constructor(private readonly ctx: {provider: IDataProvider}, private readonly body: HTMLElement) {\n    super();\n    const root = body.parentElement!.parentElement!;\n    let hr = <HTMLHRElement>root.querySelector('hr');\n    if (!hr) {\n      hr = root.ownerDocument!.createElement('hr');\n      root.appendChild(hr);\n    }\n    this.hr = hr;\n    this.hr.classList.add(cssClass('hr'));\n\n    const mouseMove = (evt: MouseEvent) => {\n      this.showHint(evt);\n    };\n    const mouseUp = (evt: MouseEvent) => {\n      this.body.removeEventListener('mousemove', mouseMove);\n      this.body.removeEventListener('mouseup', mouseUp);\n      this.body.removeEventListener('mouseleave', mouseUp);\n\n      if (!this.start) {\n        return;\n      }\n      const row = engineCssClass('tr');\n      const startNode = this.start.node.classList.contains(row) ? this.start.node : <HTMLElement>this.start.node.closest(`.${row}`);\n      // somehow on firefox the mouseUp will be triggered on the original node\n      // thus search the node explicitly\n      const end = <HTMLElement>this.body.ownerDocument!.elementFromPoint(evt.clientX, evt.clientY);\n      const endNode = end.classList.contains(row) ? end : <HTMLElement>(end.closest(`.${row}`));\n      this.start = null;\n\n      this.body.classList.remove(cssClass('selection-active'));\n      this.hr.classList.remove(cssClass('selection-active'));\n\n      this.select(evt.ctrlKey, startNode, endNode);\n    };\n\n    body.addEventListener('mousedown', (evt) => {\n      const r = root.getBoundingClientRect();\n      this.start = {x: evt.clientX, y: evt.clientY, xShift: r.left, yShift: r.top, node: <HTMLElement>evt.target};\n\n      this.body.classList.add(cssClass('selection-active'));\n      body.addEventListener('mousemove', mouseMove, {\n        passive: true\n      });\n      body.addEventListener('mouseup', mouseUp, {\n        passive: true\n      });\n      body.addEventListener('mouseleave', mouseUp, {\n        passive: true\n      });\n    }, {\n        passive: true\n      });\n  }\n\n  protected createEventList() {\n    return super.createEventList().concat([SelectionManager.EVENT_SELECT_RANGE]);\n  }\n\n  on(type: typeof SelectionManager.EVENT_SELECT_RANGE, listener: typeof selectRange | null): this;\n  on(type: string | string[], listener: IEventListener | null): this; // required for correct typings in *.d.ts\n  on(type: string | string[], listener: IEventListener | null): this {\n    return super.on(type, listener);\n  }\n\n  private select(additional: boolean, startNode?: HTMLElement, endNode?: HTMLElement) {\n    if (!startNode || !endNode || startNode === endNode) {\n      return; // no single\n    }\n\n    const startIndex = parseInt(startNode.dataset.index!, 10);\n    const endIndex = parseInt(endNode.dataset.index!, 10);\n\n    const from = Math.min(startIndex, endIndex);\n    const end = Math.max(startIndex, endIndex);\n    if (from === end) {\n      return; // no single\n    }\n    // bounce event end\n    requestAnimationFrame(() => this.fire(SelectionManager.EVENT_SELECT_RANGE, from, end, additional));\n  }\n\n  private showHint(end: MouseEvent) {\n    const start = this.start!;\n    const sy = start.y;\n    const ey = end.clientY;\n\n    const visible = Math.abs(sy - ey) > SelectionManager.MIN_DISTANCE;\n    this.hr.classList.toggle(cssClass('selection-active'), visible);\n    this.hr.style.transform = `translate(${start.x - start.xShift}px,${sy - start.yShift}px)scale(1,${Math.abs(ey - sy)})rotate(${ey > sy ? 90 : -90}deg)`;\n  }\n\n  remove(node: HTMLElement) {\n    node.onclick = <any>undefined;\n  }\n\n  add(node: HTMLElement) {\n    node.onclick = (evt) => {\n      const dataIndex = parseInt(node.dataset.i!, 10);\n      if (evt.shiftKey) {\n        const relIndex = parseInt(node.dataset.index!, 10);\n        const ranking = node.parentElement!.dataset.ranking!;\n        if (rangeSelection(this.ctx.provider, ranking, dataIndex, relIndex, evt.ctrlKey)) {\n          return;\n        }\n      }\n      this.ctx.provider.toggleSelection(dataIndex, evt.ctrlKey);\n    };\n  }\n\n  selectRange(rows: {forEach: (c: (item: (IGroupItem | IGroupData)) => void) => void}, additional: boolean = false) {\n    const current = new OrderedSet<number>(additional ? this.ctx.provider.getSelection() : []);\n    const toggle = (dataIndex: number) => {\n      if (current.has(dataIndex)) {\n        current.delete(dataIndex);\n      } else {\n        current.add(dataIndex);\n      }\n    };\n    rows.forEach((d) => {\n      if (isGroup(d)) {\n        forEachIndices(d.order, toggle);\n      } else {\n        toggle(d.dataIndex);\n      }\n    });\n    this.ctx.provider.setSelection(Array.from(current));\n  }\n\n  updateState(node: HTMLElement, dataIndex: number) {\n    if (this.ctx.provider.isSelected(dataIndex)) {\n      node.classList.add(cssClass('selected'));\n    } else {\n      node.classList.remove(cssClass('selected'));\n    }\n  }\n\n  update(node: HTMLElement, selectedDataIndices: {has(dataIndex: number): boolean}) {\n    const dataIndex = parseInt(node.dataset.i!, 10);\n    if (selectedDataIndices.has(dataIndex)) {\n      node.classList.add(cssClass('selected'));\n    } else {\n      node.classList.remove(cssClass('selected'));\n    }\n  }\n}\n","import {ACellTableSection, GridStyleManager, IAbortAblePromise, ICellRenderContext, IExceptionContext, isAbortAble, isAsyncUpdate, isLoadingCell, ITableSection, nonUniformContext, PrefetchMixin, tableIds, uniformContext, IAsyncUpdate} from 'lineupengine';\nimport {ILineUpFlags} from '../config';\nimport {HOVER_DELAY_SHOW_DETAIL} from '../constants';\nimport {AEventDispatcher, clear, debounce, IEventContext, IEventHandler, IEventListener} from '../internal';\nimport {Column, IGroupData, IGroupItem, IOrderedGroup, isGroup, isMultiLevelColumn, Ranking, StackColumn, IGroupParent, defaultGroup, IGroup} from '../model';\nimport {IImposer, IRenderCallback, IRenderContext} from '../renderer';\nimport {CANVAS_HEIGHT, COLUMN_PADDING, cssClass, engineCssClass} from '../styles';\nimport {lineupAnimation} from './animation';\nimport {IRankingBodyContext, IRankingHeaderContextContainer} from './interfaces';\nimport MultiLevelRenderColumn from './MultiLevelRenderColumn';\nimport RenderColumn, {IRenderers} from './RenderColumn';\nimport SelectionManager from './SelectionManager';\nimport {groupRoots} from '../model/internal';\nimport {isAlwaysShowingGroupStrategy, toRowMeta} from '../provider/internal';\n\nexport interface IEngineRankingContext extends IRankingHeaderContextContainer, IRenderContext {\n  createRenderer(c: Column, imposer?: IImposer): IRenderers;\n}\n\n\nexport interface IEngineRankingOptions {\n  animation: boolean;\n  levelOfDetail: (rowIndex: number) => 'high' | 'low';\n  customRowUpdate: (row: HTMLElement, rowIndex: number) => void;\n  flags: ILineUpFlags;\n}\n\n/**\n * emitted when the width of the ranking changed\n * @asMemberOf EngineRanking\n * @event\n */\nexport declare function widthChanged(): void;\n/**\n * emitted when the data of the ranking needs to be updated\n * @asMemberOf EngineRanking\n * @event\n */\nexport declare function updateData(): void;\n/**\n * emitted when the table has be recreated\n * @asMemberOf EngineRanking\n * @event\n */\nexport declare function recreate(): void;\n/**\n * emitted when the highlight changes\n * @asMemberOf EngineRanking\n * @param dataIndex the highlghted data index or -1 for none\n * @event\n */\nexport declare function highlightChanged(dataIndex: number): void;\n\n\n/** @internal */\nclass RankingEvents extends AEventDispatcher {\n  static readonly EVENT_WIDTH_CHANGED = 'widthChanged';\n  static readonly EVENT_UPDATE_DATA = 'updateData';\n  static readonly EVENT_RECREATE = 'recreate';\n  static readonly EVENT_HIGHLIGHT_CHANGED = 'highlightChanged';\n\n  fire(type: string | string[], ...args: any[]) {\n    super.fire(type, ...args);\n  }\n\n  protected createEventList() {\n    return super.createEventList().concat([RankingEvents.EVENT_WIDTH_CHANGED, RankingEvents.EVENT_UPDATE_DATA, RankingEvents.EVENT_RECREATE, RankingEvents.EVENT_HIGHLIGHT_CHANGED]);\n  }\n}\n\nconst PASSIVE: AddEventListenerOptions = {\n  passive: false\n};\n\nexport default class EngineRanking extends ACellTableSection<RenderColumn> implements ITableSection, IEventHandler {\n  static readonly EVENT_WIDTH_CHANGED = RankingEvents.EVENT_WIDTH_CHANGED;\n  static readonly EVENT_UPDATE_DATA = RankingEvents.EVENT_UPDATE_DATA;\n  static readonly EVENT_RECREATE = RankingEvents.EVENT_RECREATE;\n  static readonly EVENT_HIGHLIGHT_CHANGED = RankingEvents.EVENT_HIGHLIGHT_CHANGED;\n\n  private _context: ICellRenderContext<RenderColumn>;\n\n  private readonly loadingCanvas = new WeakMap<HTMLCanvasElement, {col: number, render: IAbortAblePromise<IRenderCallback>}[]>();\n\n  private readonly renderCtx: IRankingBodyContext;\n  private data: (IGroupItem | IGroupData)[] = [];\n  private readonly selection: SelectionManager;\n  private highlight: number = -1;\n  private readonly canvasPool: HTMLCanvasElement[] = [];\n  private oldLeft: number = 0;\n\n  private readonly events = new RankingEvents();\n\n  private roptions: Readonly<IEngineRankingOptions> = {\n    animation: true,\n    levelOfDetail: () => 'high',\n    customRowUpdate: () => undefined,\n    flags: {\n      disableFrozenColumns: false,\n      advancedModelFeatures: true,\n      advancedRankingFeatures: true,\n      advancedUIFeatures: true\n    }\n  };\n\n  private readonly delayedUpdate: (this: {type: string}) => void;\n  private readonly delayedUpdateAll: () => void;\n  private readonly delayedUpdateColumnWidths: () => void;\n  private readonly columns: RenderColumn[];\n\n  private readonly canvasMouseHandler = {\n    timer: new Set<number>(),\n    hoveredRows: new Set<HTMLElement>(),\n    cleanUp: () => {\n      const c = this.canvasMouseHandler;\n      c.timer.forEach((timer) => {\n        self.clearTimeout(timer);\n      });\n      c.timer.clear();\n      for (const row of Array.from(c.hoveredRows)) {\n        c.unhover(row);\n      }\n    },\n    enter: (evt: MouseEvent) => {\n      const c = this.canvasMouseHandler;\n      c.cleanUp();\n      const row = <HTMLElement>evt.currentTarget;\n      row.addEventListener('mouseleave', c.leave, PASSIVE);\n      c.timer.add(self.setTimeout(() => {\n        c.hoveredRows.add(row);\n        this.updateHoveredRow(row, true);\n      }, HOVER_DELAY_SHOW_DETAIL));\n    },\n    leave: (evt: MouseEvent | HTMLElement) => {\n      // on row to survive canvas removal\n      const c = this.canvasMouseHandler;\n      const row = <HTMLElement>((typeof (<MouseEvent>evt).currentTarget !== 'undefined') ? (<MouseEvent>evt).currentTarget : evt);\n      c.unhover(row);\n\n      c.cleanUp();\n    },\n    unhover: (row: HTMLElement) => {\n      // remove self\n      const c = this.canvasMouseHandler;\n      c.hoveredRows.delete(row);\n      row.removeEventListener('mouseleave', c.leave);\n      if (!EngineRanking.isCanvasRenderedRow(row) && row.parentElement) { // and part of dom\n        self.setTimeout(() => this.updateHoveredRow(row, false));\n      }\n    }\n  };\n\n  private readonly highlightHandler = {\n    enabled: false,\n    enter: (evt: MouseEvent) => {\n      if (this.highlight >= 0) {\n        const old = this.body.getElementsByClassName(engineCssClass('highlighted'))[0];\n        if (old) {\n          old.classList.remove(engineCssClass('highlighted'));\n        }\n        this.highlight = -1;\n      }\n      const row = <HTMLElement>evt.currentTarget;\n      const dataIndex = parseInt(row.dataset.i || '-1', 10);\n      this.events.fire(EngineRanking.EVENT_HIGHLIGHT_CHANGED, dataIndex);\n    },\n    leave: () => {\n      if (this.highlight >= 0) {\n        const old = this.body.getElementsByClassName(engineCssClass('highlighted'))[0];\n        if (old) {\n          old.classList.remove(engineCssClass('highlighted'));\n        }\n        this.highlight = -1;\n      }\n      this.events.fire(EngineRanking.EVENT_HIGHLIGHT_CHANGED, -1);\n    }\n  };\n\n  constructor(public readonly ranking: Ranking, header: HTMLElement, body: HTMLElement, tableId: string, style: GridStyleManager, private readonly ctx: IEngineRankingContext, roptions: Partial<IEngineRankingOptions> = {}) {\n    super(header, body, tableId, style, {mixins: [PrefetchMixin], batchSize: 20});\n    Object.assign(this.roptions, roptions);\n    body.dataset.ranking = ranking.id;\n\n    const that = this;\n    this.delayedUpdate = debounce((function (this: {type: string, primaryType: string}) {\n      if (this.type !== Ranking.EVENT_DIRTY_VALUES) {\n        that.events.fire(EngineRanking.EVENT_UPDATE_DATA);\n        return;\n      }\n      if (this.primaryType !== Column.EVENT_RENDERER_TYPE_CHANGED && this.primaryType !== Column.EVENT_GROUP_RENDERER_TYPE_CHANGED && this.primaryType !== Column.EVENT_LABEL_CHANGED) { // just the single column will be updated\n        that.updateBody();\n      }\n    }), 50, (current, next) => {\n      const currentEvent = current.self.type;\n      // order changed is more important\n      return currentEvent === Ranking.EVENT_ORDER_CHANGED ? current : next;\n    });\n\n    this.delayedUpdateAll = debounce(() => this.updateAll(), 50);\n    this.delayedUpdateColumnWidths = debounce(() => this.updateColumnWidths(), 50);\n    ranking.on(`${Ranking.EVENT_ADD_COLUMN}.hist`, (col: Column, index: number) => {\n      this.columns.splice(index, 0, this.createCol(col, index));\n      this.reindex();\n      this.delayedUpdateAll();\n    });\n    ranking.on(`${Ranking.EVENT_REMOVE_COLUMN}.body`, (col: Column, index: number) => {\n      EngineRanking.disableListener(col);\n      this.columns.splice(index, 1);\n      this.reindex();\n      this.delayedUpdateAll();\n    });\n    ranking.on(`${Ranking.EVENT_MOVE_COLUMN}.body`, (col: Column, index: number, old: number) => {\n      //delete first\n      const c = this.columns.splice(old, 1)[0];\n      console.assert(c.c === col);\n      // adapt target index based on previous index, i.e shift by one\n      this.columns.splice(old < index ? index - 1 : index, 0, c);\n      this.reindex();\n      this.delayedUpdateAll();\n    });\n    ranking.on(`${Ranking.EVENT_COLUMN_VISIBILITY_CHANGED}.body`, (col: Column, _oldValue: boolean, newValue: boolean) => {\n      if (newValue) {\n        // become visible\n        const index = ranking.children.indexOf(col);\n        this.columns.splice(index, 0, this.createCol(col, index));\n      } else {\n        // hide\n        const index = this.columns.findIndex((d) => d.c === col);\n        EngineRanking.disableListener(col);\n        this.columns.splice(index, 1);\n      }\n      this.reindex();\n      this.delayedUpdateAll();\n    });\n    ranking.on(`${Ranking.EVENT_ORDER_CHANGED}.body`, this.delayedUpdate);\n\n    this.selection = new SelectionManager(this.ctx, body);\n    this.selection.on(SelectionManager.EVENT_SELECT_RANGE, (from: number, to: number, additional: boolean) => {\n      this.selection.selectRange(this.data.slice(from, to + 1), additional);\n    });\n\n    this.renderCtx = Object.assign({\n      isGroup: (index: number) => isGroup(this.data[index]),\n      getRow: (index: number) => <IGroupItem>this.data[index],\n      getGroup: (index: number) => <IGroupData>this.data[index]\n    }, ctx);\n\n    // default context\n    this.columns = ranking.children.filter((c) => c.isVisible()).map((c, i) => this.createCol(c, i));\n    this._context = Object.assign({\n      columns: this.columns,\n      column: nonUniformContext(this.columns.map((w) => w.width), 100, COLUMN_PADDING)\n    }, uniformContext(0, 20));\n\n    this.columns.forEach((column) => {\n      if (column instanceof MultiLevelRenderColumn) {\n        column.updateWidthRule(this.style);\n      }\n      column.renderers = this.ctx.createRenderer(column.c);\n    });\n\n    this.style.updateRule(`hoverOnly${this.tableId}`, `\n      #${tableIds(this.tableId).tbody}:hover > .${engineCssClass('tr')}:hover .${cssClass('hover-only')},\n      #${tableIds(this.tableId).tbody} > .${engineCssClass('tr')}.${cssClass('selected')} .${cssClass('hover-only')},\n      #${tableIds(this.tableId).tbody} > .${engineCssClass('tr')}.${engineCssClass('highlighted')} .${cssClass('hover-only')}`, {\n        visibility: 'visible'\n      });\n  }\n\n  on(type: typeof EngineRanking.EVENT_WIDTH_CHANGED, listener: typeof widthChanged | null): this;\n  on(type: typeof EngineRanking.EVENT_UPDATE_DATA, listener: typeof updateData | null): this;\n  on(type: typeof EngineRanking.EVENT_RECREATE, listener: typeof recreate | null): this;\n  on(type: typeof EngineRanking.EVENT_HIGHLIGHT_CHANGED, listener: typeof highlightChanged | null): this;\n  on(type: string | string[], listener: IEventListener | null): this; // required for correct typings in *.d.ts\n  on(type: string | string[], listener: IEventListener | null): this {\n    this.events.on(type, listener);\n    return this;\n  }\n\n  get id() {\n    return this.ranking.id;\n  }\n\n  protected onVisibilityChanged(visible: boolean) {\n    super.onVisibilityChanged(visible);\n    if (visible) {\n      this.delayedUpdate.call({type: Ranking.EVENT_ORDER_CHANGED});\n    }\n  }\n\n  updateHeaders() {\n    return super.updateHeaders();\n  }\n\n  get currentData() {\n    return this.data;\n  }\n\n  get context(): ICellRenderContext<RenderColumn> {\n    return this._context;\n  }\n\n  protected createHeader(_document: Document, column: RenderColumn): HTMLElement | IAsyncUpdate<HTMLElement> {\n    return column.createHeader();\n  }\n\n  protected updateHeader(node: HTMLElement, column: RenderColumn) {\n    if (column instanceof MultiLevelRenderColumn) {\n      column.updateWidthRule(this.style);\n    }\n    return column.updateHeader(node);\n  }\n\n  protected createCell(_document: Document, index: number, column: RenderColumn) {\n    return column.createCell(index);\n  }\n\n  private createCellHandled(col: RenderColumn, index: number) {\n    const r = col.createCell(index);\n    let item: HTMLElement;\n    if (isAsyncUpdate(r)) {\n      item = this.handleCellReady(r.item, r.ready, col.index);\n    } else {\n      item = r;\n    }\n    this.initCellClasses(item, col.id);\n    return item;\n  }\n\n  protected updateCell(node: HTMLElement, index: number, column: RenderColumn) {\n    return column.updateCell(node, index);\n  }\n\n  private selectCanvas() {\n    if (this.canvasPool.length > 0) {\n      return this.canvasPool.pop()!;\n    }\n    return this.body.ownerDocument!.createElement('canvas');\n  }\n\n  private rowFlags(row: HTMLElement) {\n    const rowany: any = row;\n    const v = rowany.__lu__;\n    if (v == null) {\n      return rowany.__lu__ = {};\n    }\n    return v;\n  }\n\n  private visibleRenderedWidth() {\n    let width = 0;\n    for (const col of this.visibleColumns.frozen) {\n      width += this.columns[col].width + COLUMN_PADDING;\n    }\n    for (let col = this.visibleColumns.first; col <= this.visibleColumns.last; ++col) {\n      width += this.columns[col].width + COLUMN_PADDING;\n    }\n    if (width > 0) {\n      width -= COLUMN_PADDING; // for the last one\n    }\n    return width;\n  }\n\n  private pushLazyRedraw(canvas: HTMLCanvasElement, x: number, column: RenderColumn, render: IAbortAblePromise<IRenderCallback>) {\n    render.then((r) => {\n      const l = (this.loadingCanvas.get(canvas) || []);\n      const pos = l.findIndex((d) => d.render === render && d.col === column.index);\n      if (pos < 0) { // not part anymore ignore\n        return;\n      }\n      l.splice(pos, 1);\n      if (typeof r === 'function') { // i.e not aborted\n        const ctx = canvas.getContext('2d')!;\n        ctx.clearRect(x - 1, 0, column.width + 2, canvas.height);\n        ctx.save();\n        ctx.translate(x, 0);\n        r(ctx);\n        ctx.restore();\n      }\n\n      if (l.length > 0) {\n        return;\n      }\n      this.loadingCanvas.delete(canvas);\n      canvas.classList.remove(cssClass('loading-c'));\n    });\n\n    if (!this.loadingCanvas.has(canvas)) {\n      canvas.classList.add(cssClass('loading-c'));\n      this.loadingCanvas.set(canvas, [{col: column.index, render}]);\n    } else {\n      this.loadingCanvas.get(canvas)!.push({col: column.index, render});\n    }\n  }\n\n  private renderRow(canvas: HTMLCanvasElement, node: HTMLElement, index: number, width = this.visibleRenderedWidth()) {\n    if (this.loadingCanvas.has(canvas)) {\n      for (const a of this.loadingCanvas.get(canvas)!) {\n        a.render.abort();\n      }\n      this.loadingCanvas.delete(canvas);\n    }\n    canvas.classList.remove(cssClass('loading-c'));\n\n    canvas.width = width;\n    canvas.style.width = `${width}px`;\n    canvas.height = CANVAS_HEIGHT;\n    const ctx = canvas.getContext('2d')!;\n    ctx.imageSmoothingEnabled = false;\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.save();\n    const domColumns = <RenderColumn[]>[];\n\n    let x = 0;\n    const renderCellImpl = (col: number) => {\n      const c = this.columns[col];\n      const r = c.renderCell(ctx, index);\n      if (r === true) {\n        domColumns.push(c);\n      } else if (r !== false && isAbortAble(r)) {\n        this.pushLazyRedraw(canvas, x, c, r);\n      }\n      const shift = c.width + COLUMN_PADDING;\n      x += shift;\n      ctx.translate(shift, 0);\n    };\n\n    for (const col of this.visibleColumns.frozen) {\n      renderCellImpl(col);\n    }\n    for (let col = this.visibleColumns.first; col <= this.visibleColumns.last; ++col) {\n      renderCellImpl(col);\n    }\n    ctx.restore();\n\n    const visibleElements = node.childElementCount - 1; // for canvas\n\n    if (domColumns.length === 0) {\n      while (node.lastElementChild !== node.firstElementChild) {\n        const n = <HTMLElement>node.lastElementChild!;\n        node.removeChild(n);\n        this.recycleCell(n);\n      }\n      return;\n    }\n    if (domColumns.length === 1) {\n      const first = domColumns[0];\n      if (visibleElements === 0) {\n        const item = this.createCellHandled(first, index);\n        item.classList.add(cssClass('low'));\n        node.appendChild(item);\n        return;\n      }\n      const firstDOM = <HTMLElement>node.lastElementChild!;\n      if (visibleElements === 1 && firstDOM.dataset.colId === first.id) {\n        const isLoading = isLoadingCell(firstDOM);\n        if (isLoading) {\n          const item = this.createCellHandled(first, index);\n          node.replaceChild(item, firstDOM);\n          this.recycleCell(firstDOM, first.index);\n          return;\n        }\n        this.updateCellImpl(first, <HTMLElement>node.lastElementChild, index);\n        return;\n      }\n    }\n\n    const existing = new Map((<HTMLElement[]>Array.from(node.children)).slice(1).map((d) => <[string, HTMLElement]>[d.dataset.col, d]));\n    for (const col of domColumns) {\n      const elem = existing.get(col.id);\n      if (elem && !isLoadingCell(elem)) {\n        existing.delete(col.id);\n        this.updateCellImpl(col, elem, index);\n      } else {\n        const c = this.createCellHandled(col, index);\n        c.classList.add(cssClass('low'));\n        node.appendChild(c);\n      }\n    }\n    existing.forEach((v) => {\n      v.remove();\n      this.recycleCell(v);\n    });\n  }\n\n\n  protected updateCanvasCell(canvas: HTMLCanvasElement, node: HTMLElement, index: number, column: RenderColumn, x: number) {\n\n    // delete lazy that would render the same thing\n    if (this.loadingCanvas.has(canvas)) {\n      const l = this.loadingCanvas.get(canvas)!;\n      const me = l.filter((d) => d.col === column.index);\n      if (me.length > 0) {\n        this.loadingCanvas.set(canvas, l.filter((d) => d.col !== column.index));\n        for (const a of me) {\n          a.render.abort();\n        }\n      }\n    }\n\n    const ctx = canvas.getContext('2d')!;\n    ctx.clearRect(x - 1, 0, column.width + 2, canvas.height);\n    ctx.save();\n    ctx.translate(x, 0);\n    const needDOM = column.renderCell(ctx, index);\n    ctx.restore();\n\n    if (typeof needDOM !== 'boolean' && isAbortAble(needDOM)) {\n      this.pushLazyRedraw(canvas, x, column, needDOM);\n    }\n\n    if (needDOM !== true && node.childElementCount === 1) { // just canvas\n      return;\n    }\n    const elem = <HTMLElement>node.querySelector(`[data-col-id=\"${column.id}\"]`);\n    if (elem && !needDOM) {\n      elem.remove();\n      this.recycleCell(elem, column.index);\n      return;\n    }\n    if (elem) {\n      return this.updateCellImpl(column, elem, index);\n    }\n\n    const c = this.createCellHandled(column, index);\n    c.classList.add(cssClass('low'));\n    node.appendChild(c);\n  }\n\n  private reindex() {\n    this.columns.forEach((c, i) => {\n      c.index = i;\n    });\n  }\n\n  updateAll() {\n    this.columns.forEach((c, i) => {\n      c.index = i;\n      c.renderers = this.ctx.createRenderer(c.c);\n    });\n\n    this._context = Object.assign({}, this._context, {\n      column: nonUniformContext(this.columns.map((w) => w.width), 100, COLUMN_PADDING)\n    });\n\n    this.events.fire(EngineRanking.EVENT_RECREATE);\n    super.recreate();\n    this.events.fire(EngineRanking.EVENT_WIDTH_CHANGED);\n  }\n\n  updateBody() {\n    if (this.hidden) {\n      return;\n    }\n    this.events.fire(EngineRanking.EVENT_WIDTH_CHANGED);\n    super.forEachRow((row, rowIndex) => this.updateRow(row, rowIndex));\n  }\n\n  updateHeaderOf(col: Column) {\n    const i = this._context.columns.findIndex((d) => d.c === col);\n    if (i < 0) {\n      return false;\n    }\n    const node = <HTMLElement>this.header.children[i]!;\n    const column = this._context.columns[i];\n    if (node && column) {\n      this.updateHeader(node, column);\n    }\n    return node && column;\n  }\n\n  protected createRow(node: HTMLElement, rowIndex: number): void {\n    node.classList.add(this.style.cssClasses.tr);\n    this.roptions.customRowUpdate(node, rowIndex);\n    if (this.highlightHandler.enabled) {\n      node.addEventListener('mouseenter', this.highlightHandler.enter, PASSIVE);\n      this.rowFlags(node).highlight = true;\n    }\n\n    const isGroup = this.renderCtx.isGroup(rowIndex);\n\n    const meta = this.toRowMeta(rowIndex);\n    if (!meta) {\n      delete node.dataset.meta;\n    } else {\n      node.dataset.meta = meta;\n    }\n\n    if (isGroup) {\n      node.dataset.agg = 'group';\n      super.createRow(node, rowIndex);\n      return;\n    }\n\n    const {dataIndex} = this.renderCtx.getRow(rowIndex);\n    node.classList.toggle(engineCssClass('highlighted'), this.highlight === dataIndex);\n    node.dataset.i = dataIndex.toString();\n    node.dataset.agg = 'detail'; //or 'group'\n\n    this.selection.updateState(node, dataIndex);\n    this.selection.add(node);\n\n    const low = this.roptions.levelOfDetail(rowIndex) === 'low';\n    node.classList.toggle(cssClass('low'), low);\n\n    if (!low || this.ctx.provider.isSelected(dataIndex)) {\n      super.createRow(node, rowIndex);\n      return;\n    }\n\n    const canvas = this.selectCanvas();\n    node.appendChild(canvas);\n    node.addEventListener('mouseenter', this.canvasMouseHandler.enter, PASSIVE);\n    this.renderRow(canvas, node, rowIndex);\n  }\n\n  protected updateRow(node: HTMLElement, rowIndex: number, hoverLod?: 'high' | 'low'): void {\n    this.roptions.customRowUpdate(node, rowIndex);\n\n    const computedLod = this.roptions.levelOfDetail(rowIndex);\n    const low = (hoverLod ? hoverLod : computedLod) === 'low';\n    const wasLow = node.classList.contains(cssClass('low'));\n    const isGroup = this.renderCtx.isGroup(rowIndex);\n    const wasGroup = node.dataset.agg === 'group';\n\n    node.classList.toggle(cssClass('low'), computedLod === 'low');\n\n    if (this.highlightHandler.enabled && !this.rowFlags(node).highlight) {\n      node.addEventListener('mouseenter', this.highlightHandler.enter, PASSIVE);\n      this.rowFlags(node).highlight = true;\n    }\n\n    if (isGroup !== wasGroup) {\n      // change of mode clear the children to reinitialize them\n      clear(node);\n\n      // adapt body\n      node.dataset.agg = isGroup ? 'group' : 'detail';\n      if (isGroup) {\n        node.dataset.i = '';\n        this.selection.remove(node);\n      } else {\n        this.selection.add(node);\n      }\n    }\n\n    if (wasLow && (!computedLod || isGroup)) {\n      node.removeEventListener('mouseenter', this.canvasMouseHandler.enter);\n    }\n\n    const meta = this.toRowMeta(rowIndex);\n    if (!meta) {\n      delete node.dataset.meta;\n    } else {\n      node.dataset.meta = meta;\n    }\n\n    if (isGroup) {\n      node.classList.remove(engineCssClass('highlighted'));\n      super.updateRow(node, rowIndex);\n      return;\n    }\n\n    const {dataIndex} = this.renderCtx.getRow(rowIndex);\n    node.classList.toggle(engineCssClass('highlighted'), this.highlight === dataIndex);\n    node.dataset.i = dataIndex.toString();\n    this.selection.updateState(node, dataIndex);\n\n    const canvas = (wasLow && node.firstElementChild!.nodeName.toLowerCase() === 'canvas') ? <HTMLCanvasElement>node.firstElementChild! : null;\n    if (!low || this.ctx.provider.isSelected(dataIndex)) {\n      if (canvas) {\n        this.recycleCanvas(canvas);\n        clear(node);\n        node.removeEventListener('mouseenter', this.canvasMouseHandler.enter);\n      }\n      super.updateRow(node, rowIndex);\n      return;\n    }\n\n    // use canvas\n    if (wasLow && canvas) {\n      this.renderRow(canvas, node, rowIndex);\n      return;\n    }\n    // clear old\n    clear(node);\n    node.dataset.agg = 'detail';\n    const canvas2 = this.selectCanvas();\n    node.appendChild(canvas2);\n    node.addEventListener('mouseenter', this.canvasMouseHandler.enter, PASSIVE);\n    this.renderRow(canvas2, node, rowIndex);\n  }\n\n  private updateCanvasBody() {\n    const width = this.visibleRenderedWidth();\n    super.forEachRow((row, index) => {\n      if (EngineRanking.isCanvasRenderedRow(row)) {\n        this.renderRow(<HTMLCanvasElement>row.firstElementChild!, row, index, width);\n      }\n    });\n  }\n\n  private toRowMeta(rowIndex: number) {\n    const provider = this.renderCtx.provider;\n    const topNGetter = (group: IGroup) => provider.getTopNAggregated(this.ranking, group);\n    return toRowMeta(this.renderCtx.getRow(rowIndex), provider.getAggregationStrategy(), topNGetter);\n  }\n\n  protected updateShifts(top: number, left: number) {\n    super.updateShifts(top, left);\n\n    if (left === this.oldLeft) {\n      return;\n    }\n    this.oldLeft = left;\n    this.updateCanvasBody();\n  }\n\n  private recycleCanvas(canvas: HTMLCanvasElement) {\n    if (this.loadingCanvas.has(canvas)) {\n      for (const a of this.loadingCanvas.get(canvas)!) {\n        a.render.abort();\n      }\n      this.loadingCanvas.delete(canvas);\n    } else if (!canvas.classList.contains(cssClass('loading-c'))) {\n      this.canvasPool.push(canvas);\n    }\n  }\n\n  enableHighlightListening(enable: boolean) {\n    if (this.highlightHandler.enabled === enable) {\n      return;\n    }\n\n    this.highlightHandler.enabled = enable;\n\n    if (enable) {\n      this.body.addEventListener('mouseleave', this.highlightHandler.leave, PASSIVE);\n      super.forEachRow((row) => {\n        row.addEventListener('mouseenter', this.highlightHandler.enter, PASSIVE);\n        this.rowFlags(row).highlight = true;\n      });\n      return;\n    }\n\n    this.body.removeEventListener('mouseleave', this.highlightHandler.leave);\n\n    super.forEachRow((row) => {\n      row.removeEventListener('mouseenter', this.highlightHandler.enter);\n      this.rowFlags(row).highlight = false;\n    });\n  }\n\n  private updateHoveredRow(row: HTMLElement, hover: boolean) {\n    const isCanvas = EngineRanking.isCanvasRenderedRow(row);\n    if (isCanvas !== hover) {\n      return; // good nothing to do\n    }\n    const index = parseInt(row.dataset.index!, 10);\n    this.updateRow(row, index, hover ? 'high' : 'low');\n  }\n\n  protected forEachRow(callback: (row: HTMLElement, rowIndex: number) => void, inplace: boolean = false) {\n    const adapter = (row: HTMLElement, rowIndex: number) => {\n      if (EngineRanking.isCanvasRenderedRow(row)) {\n        // skip canvas\n        return;\n      }\n      callback(row, rowIndex);\n    };\n    return super.forEachRow(adapter, inplace);\n  }\n\n  updateSelection(selectedDataIndices: {has(i: number): boolean}) {\n    super.forEachRow((node: HTMLElement, rowIndex: number) => {\n      if (this.renderCtx.isGroup(rowIndex)) {\n        this.updateRow(node, rowIndex);\n      } else {\n        // fast pass for item\n        this.selection.update(node, selectedDataIndices);\n      }\n    }, true);\n  }\n\n  updateColumnWidths() {\n    // update the column context in place\n    (<any>this._context).column = nonUniformContext(this._context.columns.map((w) => w.width), 100, COLUMN_PADDING);\n    super.updateColumnWidths();\n    const {columns} = this.context;\n    //no data update needed since just width changed\n    columns.forEach((column) => {\n      if (column instanceof MultiLevelRenderColumn) {\n        column.updateWidthRule(this.style);\n      }\n      column.renderers = this.ctx.createRenderer(column.c);\n    });\n    this.events.fire(EngineRanking.EVENT_WIDTH_CHANGED);\n  }\n\n  private updateColumn(index: number) {\n    const columns = this.context.columns;\n    const column = columns[index];\n    if (!column) {\n      return false;\n    }\n    let x = 0;\n    for (let i = this.visibleColumns.first; i < index; ++i) {\n      x += columns[i].width + COLUMN_PADDING;\n    }\n    super.forEachRow((row, rowIndex) => {\n      if (EngineRanking.isCanvasRenderedRow(row)) {\n        this.updateCanvasCell(<HTMLCanvasElement>row.firstElementChild!, row, rowIndex, column, x);\n        return;\n      }\n      this.updateCellImpl(column, <HTMLElement>row.children[index], rowIndex);\n    });\n    return true;\n  }\n\n  private updateCellImpl(column: RenderColumn, before: HTMLElement, rowIndex: number) {\n    if (!before) {\n      return; // race condition\n    }\n    const r = this.updateCell(before, rowIndex, column);\n    let after: HTMLElement;\n    if (isAsyncUpdate(r)) {\n      after = this.handleCellReady(r.item, r.ready, column.index);\n    } else {\n      after = r;\n    }\n    if (before === after || !after) {\n      return;\n    }\n    this.initCellClasses(after, column.id);\n    before.parentElement!.replaceChild(after, before);\n  }\n\n  private initCellClasses(node: HTMLElement, id: string) {\n    node.dataset.id = id;\n    node.classList.add(engineCssClass('td'), this.style.cssClasses.td, engineCssClass(`td-${this.tableId}`));\n  }\n\n  destroy() {\n    super.destroy();\n    this.style.deleteRule(`hoverOnly${this.tableId}`);\n    this.ranking.flatColumns.forEach((c) => EngineRanking.disableListener(c));\n  }\n\n  groupData(): (IGroupItem | IGroupData)[] {\n    const groups = this.ranking.getGroups();\n    const provider = this.ctx.provider;\n    const strategy = provider.getAggregationStrategy();\n    const alwaysShowGroup = isAlwaysShowingGroupStrategy(strategy);\n\n    const r = <(IGroupItem | IGroupData)[]>[];\n\n    if (groups.length === 0) {\n      return r;\n    }\n\n    const pushItem = (group: IOrderedGroup, dataIndex: number, i: number) => {\n      r.push({\n        group,\n        dataIndex,\n        relativeIndex: i\n      });\n    };\n\n    if (groups.length === 1 && groups[0].name === defaultGroup.name) {\n      const group = groups[0];\n      const l = group.order.length;\n      for (let i = 0; i < l; ++i) {\n        pushItem(group, group.order[i], i);\n      }\n      return r;\n    }\n\n    const roots = groupRoots(groups);\n\n    const pushGroup = (group: IOrderedGroup | Readonly<IGroupParent>) => {\n      const n = provider.getTopNAggregated(this.ranking, group);\n\n      // all are IOrderedGroup since propagated\n      const ordered = <IOrderedGroup>group;\n      const gparent = <IGroupParent>group;\n\n      if (n === 0 || alwaysShowGroup) {\n        r.push(ordered);\n      }\n\n      if (n !== 0 && Array.isArray(gparent.subGroups) && gparent.subGroups.length > 0) {\n        for (const g of gparent.subGroups) {\n          pushGroup(<IOrderedGroup | Readonly<IGroupParent>>g);\n        }\n        return;\n      }\n\n      const l = n < 0 ? ordered.order.length : Math.min(n, ordered.order.length);\n      for (let i = 0; i < l; ++i) {\n        pushItem(ordered, ordered.order[i], i);\n      }\n    };\n\n    for (const root of roots) {\n      pushGroup(root);\n    }\n\n    return r;\n  }\n\n  render(data: (IGroupItem | IGroupData)[], rowContext: IExceptionContext) {\n    const previous = this._context;\n    const previousData = this.data;\n    this.data = data;\n\n    this.columns.forEach((c, i) => {\n      c.index = i;\n      c.renderers = this.ctx.createRenderer(c.c);\n    });\n    this._context = Object.assign({\n      columns: this.columns,\n      column: nonUniformContext(this.columns.map((w) => w.width), 100, COLUMN_PADDING)\n    }, rowContext);\n\n    if (!this.bodyScroller) { // somehow not part of dom\n      return;\n    }\n    this.events.fire(EngineRanking.EVENT_RECREATE);\n    return super.recreate(this.roptions.animation ? lineupAnimation(previous, previousData, this.data) : undefined);\n  }\n\n  setHighlight(dataIndex: number) {\n    this.highlight = dataIndex;\n    const old = this.body.querySelector(`[data-i].${engineCssClass('highlighted')}`);\n    if (old) {\n      old.classList.remove(engineCssClass('highlighted'));\n    }\n    if (dataIndex < 0) {\n      return;\n    }\n    const item = this.body.querySelector(`[data-i=\"${dataIndex}\"]`);\n    if (item) {\n      item.classList.add(engineCssClass('highlighted'));\n    }\n    return item != null;\n  }\n\n  findNearest(dataIndices: number[]) {\n    // find the nearest visible data index\n    // first check if already visible\n    const index = dataIndices.find((d) => Boolean(this.body.querySelectorAll(`[data-i=\"${d}\"]`)));\n    if (index != null) {\n      return index; // visible one\n    }\n    const visible = this.visible;\n    const lookFor = new Set(dataIndices);\n    let firstBeforePos = -1;\n    let firstAfterPos = -1;\n    for (let i = visible.first; i >= 0; --i) {\n      const d = this.data[i];\n      if (!isGroup(d) && lookFor.has(d.dataIndex)) {\n        firstBeforePos = i;\n        break;\n      }\n    }\n    for (let i = visible.last; i < this.data.length; ++i) {\n      const d = this.data[i];\n      if (!isGroup(d) && lookFor.has(d.dataIndex)) {\n        firstAfterPos = i;\n        break;\n      }\n    }\n\n    if (firstBeforePos < 0 && firstBeforePos < 0) {\n      return -1; // not found at all\n    }\n    const nearestPos = (firstBeforePos >= 0 && (visible.first - firstBeforePos) < (firstAfterPos - visible.last)) ? firstBeforePos : firstAfterPos;\n    return (<IGroupItem>this.data[nearestPos]).dataIndex;\n  }\n\n  scrollIntoView(dataIndex: number) {\n    const item = this.body.querySelector(`[data-i=\"${dataIndex}\"]`);\n    if (item) {\n      item.scrollIntoView(true);\n      return true;\n    }\n    const index = this.data.findIndex((d) => !isGroup(d) && d.dataIndex === dataIndex);\n    if (index < 0) {\n      return false; // part of a group?\n    }\n\n    const posOf = () => {\n      const c = this._context;\n      if (c.exceptions.length === 0 || index < c.exceptions[0].index) {\n        // fast pass\n        return index * c.defaultRowHeight;\n      }\n      const before = c.exceptions.reverse().find((d) => d.index <= index);\n      if (!before) {\n        return -1;\n      }\n      if (before.index === index) {\n        return before.y;\n      }\n      const regular = index - before.index - 1;\n      return before.y2 + regular * c.defaultRowHeight;\n    };\n    const pos = posOf();\n    if (pos < 0) {\n      return false;\n    }\n    const scroller = this.bodyScroller;\n    if (!scroller) {\n      return false;\n    }\n    const top = scroller.scrollTop;\n    scroller.scrollTop = Math.min(pos, scroller.scrollHeight - scroller.clientHeight);\n    this.onScrolledVertically(scroller.scrollTop, scroller.clientHeight, top < scroller.scrollTop);\n\n    const found = this.body.querySelector(`[data-i=\"${dataIndex}\"]`);\n    if (found) {\n      found.scrollIntoView(true);\n      return true;\n    }\n    return false;\n  }\n\n  getHighlight() {\n    const item = <HTMLElement>this.body.querySelector(`[data-i]:hover, [data-i].${engineCssClass('highlighted')}`);\n    if (item) {\n      return parseInt(item.dataset.i!, 10);\n    }\n    return this.highlight;\n  }\n\n  private createCol(c: Column, index: number) {\n    const col = (isMultiLevelColumn(c) && !c.getCollapsed()) ? new MultiLevelRenderColumn(c, index, this.renderCtx, this.roptions.flags) : new RenderColumn(c, index, this.renderCtx, this.roptions.flags);\n\n    c.on(`${Column.EVENT_WIDTH_CHANGED}.body`, () => {\n      // replace myself upon width change since we renderers are allowed to\n      col.renderers = this.ctx.createRenderer(c);\n      this.delayedUpdateColumnWidths();\n    });\n    const debounceUpdate = debounce(() => {\n      const valid = this.updateColumn(col.index);\n      if (!valid) {\n        EngineRanking.disableListener(c); // destroy myself\n      }\n    }, 25);\n    c.on([`${Column.EVENT_RENDERER_TYPE_CHANGED}.body`, `${Column.EVENT_GROUP_RENDERER_TYPE_CHANGED}.body`], () => {\n      // replace myself upon renderer type change\n      col.renderers = this.ctx.createRenderer(c);\n      debounceUpdate();\n    });\n    const that = this;\n    c.on(`${Column.EVENT_DIRTY_HEADER}.body`, function (this: IEventContext) {\n      const valid = that.updateHeaderOf(col.c);\n      if (!valid) {\n        EngineRanking.disableListener(c); // destroy myself\n      }\n    });\n    c.on(`${Column.EVENT_SUMMARY_RENDERER_TYPE_CHANGED}.body`, () => {\n      // replace myself upon renderer type change\n      col.renderers = this.ctx.createRenderer(c);\n      const valid = this.updateHeaderOf(col.c);\n      if (!valid) {\n        EngineRanking.disableListener(c); // destroy myself\n      }\n    });\n    c.on(`${Column.EVENT_DIRTY_VALUES}.body`, debounceUpdate);\n\n    if (isMultiLevelColumn(c)) {\n      c.on(`${StackColumn.EVENT_COLLAPSE_CHANGED}.body`, () => {\n        // rebuild myself from scratch\n        EngineRanking.disableListener(c); // destroy myself\n        const index = col.index;\n        const replacement = this.createCol(c, index);\n        replacement.index = index;\n        this.columns.splice(index, 1, replacement);\n        this.delayedUpdateAll();\n      });\n      if (!c.getCollapsed()) {\n        (<MultiLevelRenderColumn>col).updateWidthRule(this.style);\n        c.on(`${StackColumn.EVENT_MULTI_LEVEL_CHANGED}.body`, () => {\n          (<MultiLevelRenderColumn>col).updateWidthRule(this.style);\n        });\n        c.on(`${StackColumn.EVENT_MULTI_LEVEL_CHANGED}.bodyUpdate`, debounceUpdate);\n      }\n    }\n\n    return col;\n  }\n\n  private static isCanvasRenderedRow(row: HTMLElement) {\n    return row.classList.contains(cssClass('low')) && row.childElementCount >= 1 && row.firstElementChild!.nodeName.toLowerCase() === 'canvas';\n  }\n\n  private static disableListener(c: Column) {\n    c.on(`${Column.EVENT_WIDTH_CHANGED}.body`, null);\n    c.on([`${Column.EVENT_RENDERER_TYPE_CHANGED}.body`, `${Column.EVENT_GROUP_RENDERER_TYPE_CHANGED}.body`, `${Column.EVENT_SUMMARY_RENDERER_TYPE_CHANGED}.body`, `${Column.EVENT_LABEL_CHANGED}.body`], null);\n    c.on(`${Ranking.EVENT_DIRTY_HEADER}.body`, null);\n    c.on(`${Ranking.EVENT_DIRTY_VALUES}.body`, null);\n\n    if (!(isMultiLevelColumn(c))) {\n      return;\n    }\n    c.on(`${StackColumn.EVENT_COLLAPSE_CHANGED}.body`, null);\n    c.on(`${StackColumn.EVENT_MULTI_LEVEL_CHANGED}.body`, null);\n    c.on(`${StackColumn.EVENT_MULTI_LEVEL_CHANGED}.bodyUpdate`, null);\n  }\n}\n","import {IExceptionContext, ITableSection, range} from 'lineupengine';\nimport {IGroupData, IGroupItem, IOrderedGroup, isGroup, Ranking} from '../model';\nimport {aria, cssClass, engineCssClass, SLOPEGRAPH_WIDTH} from '../styles';\nimport {IRankingHeaderContextContainer, EMode} from './interfaces';\nimport {forEachIndices, filterIndices} from '../model/internal';\n\ninterface ISlope {\n  isSelected(selection: {has(dataIndex: number): boolean}): boolean;\n\n  update(path: SVGPathElement, width: number): void;\n\n  readonly dataIndices: number[];\n}\n\nclass ItemSlope implements ISlope {\n  constructor(private readonly left: number, private readonly right: number, public readonly dataIndices: number[]) {\n\n  }\n\n  isSelected(selection: {has(dataIndex: number): boolean}) {\n    return this.dataIndices.length === 1 ? selection.has(this.dataIndices[0]) : this.dataIndices.some((s) => selection.has(s));\n  }\n\n  update(path: SVGPathElement, width: number) {\n    path.setAttribute('data-i', String(this.dataIndices[0]));\n    path.setAttribute('class', cssClass('slope'));\n    path.setAttribute('d', `M0,${this.left}L${width},${this.right}`);\n  }\n}\n\nclass GroupSlope implements ISlope {\n  constructor(private readonly left: [number, number], private readonly right: [number, number], public readonly dataIndices: number[]) {\n\n  }\n\n  isSelected(selection: {has(dataIndex: number): boolean}) {\n    return this.dataIndices.some((s) => selection.has(s));\n  }\n\n  update(path: SVGPathElement, width: number) {\n    path.setAttribute('class', cssClass('group-slope'));\n    path.setAttribute('d', `M0,${this.left[0]}L${width},${this.right[0]}L${width},${this.right[1]}L0,${this.left[1]}Z`);\n  }\n}\n\ninterface IPos {\n  start: number;\n  heightPerRow: number;\n  rows: number[]; // data indices\n  offset: number;\n  ref: number[];\n  group: IOrderedGroup;\n}\n\nexport interface ISlopeGraphOptions {\n  mode: EMode;\n}\n\nexport default class SlopeGraph implements ITableSection {\n  readonly node: SVGSVGElement;\n\n  private leftSlopes: ISlope[][] = [];\n  // rendered row to one ore multiple slopes\n  private rightSlopes: ISlope[][] = [];\n  private readonly pool: SVGPathElement[] = [];\n\n  private scrollListener: ((act: {top: number, height: number}) => void) | null = null;\n\n  readonly width = SLOPEGRAPH_WIDTH;\n  readonly height = 0;\n\n  private current: {\n    leftRanking: Ranking;\n    left: (IGroupItem | IGroupData)[];\n    leftContext: IExceptionContext;\n    rightRanking: Ranking;\n    right: (IGroupItem | IGroupData)[];\n    rightContext: IExceptionContext;\n  } | null = null;\n\n  private chosen = new Set<ISlope>();\n  private chosenSelectionOnly = new Set<ISlope>();\n\n  private _mode: EMode = EMode.ITEM;\n\n  constructor(public readonly header: HTMLElement, public readonly body: HTMLElement, public readonly id: string, private readonly ctx: IRankingHeaderContextContainer, options: Partial<ISlopeGraphOptions> = {}) {\n    this.node = header.ownerDocument!.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    this.node.innerHTML = `<g transform=\"translate(0,0)\"></g>`;\n    header.classList.add(cssClass('slopegraph-header'));\n    this._mode = options.mode === EMode.BAND ? EMode.BAND : EMode.ITEM;\n    this.initHeader(header);\n    body.classList.add(cssClass('slopegraph'));\n    this.body.style.height = `1px`;\n    body.appendChild(this.node);\n  }\n\n  init() {\n    this.hide(); // hide by default\n\n    const scroller = <any>this.body.parentElement!;\n\n    //sync scrolling of header and body\n    // use internals from lineup engine\n    const scroll = (<any>scroller).__le_scroller__;\n    let old: {top: number, height: number} = scroll.asInfo();\n    scroll.push('animation', this.scrollListener = (act: {top: number, height: number}) => {\n      if (Math.abs(old.top - act.top) < 5) {\n        return;\n      }\n      old = act;\n      this.onScrolledVertically(act.top, act.height);\n    });\n  }\n\n  private initHeader(header: HTMLElement) {\n    const active = cssClass('active');\n    header.innerHTML = `<i title=\"Item\" class=\"${this._mode === EMode.ITEM ? active : ''}\">${aria('Item')}</i>\n        <i title=\"Band\" class=\"${this._mode === EMode.BAND ? active : ''}\">${aria('Band')}</i>`;\n\n    const icons = <HTMLElement[]>Array.from(header.children);\n    icons.forEach((n: HTMLElement, i) => {\n      n.onclick = (evt) => {\n        evt.preventDefault();\n        evt.stopPropagation();\n        if (n.classList.contains(active)) {\n          return;\n        }\n        this.mode = i === 0 ? EMode.ITEM : EMode.BAND;\n        icons.forEach((d, j) => d.classList.toggle(active, j === i));\n      };\n    });\n  }\n\n  get mode() {\n    return this._mode;\n  }\n\n  set mode(value: EMode) {\n    if (value === this._mode) {\n      return;\n    }\n    this._mode = value;\n    if (this.current) {\n      this.rebuild(this.current.leftRanking, this.current.left, this.current.leftContext, this.current.rightRanking, this.current.right, this.current.rightContext);\n    }\n  }\n\n  get hidden() {\n    return this.header.classList.contains(engineCssClass('loading'));\n  }\n\n  set hidden(value: boolean) {\n    this.header.classList.toggle(engineCssClass('loading'), value);\n    this.body.classList.toggle(engineCssClass('loading'), value);\n  }\n\n  hide() {\n    this.hidden = true;\n  }\n\n  show() {\n    const was = this.hidden;\n    this.hidden = false;\n    if (was) {\n      this.revalidate();\n    }\n  }\n\n  destroy() {\n    this.header.remove();\n    if (this.scrollListener) {\n      //sync scrolling of header and body\n      // use internals from lineup engine\n      const scroll = (<any>this.body.parentElement!).__le_scroller__;\n      scroll.remove(this.scrollListener);\n    }\n    this.body.remove();\n  }\n\n  rebuild(leftRanking: Ranking, left: (IGroupItem | IGroupData)[], leftContext: IExceptionContext, rightRanking: Ranking, right: (IGroupItem | IGroupData)[], rightContext: IExceptionContext) {\n    this.current = {leftRanking, left, leftContext, right, rightRanking, rightContext};\n\n    const lookup: Map<number, IPos> = this.prepareRightSlopes(right, rightContext);\n    this.computeSlopes(left, leftContext, lookup);\n\n    this.revalidate();\n  }\n\n  private computeSlopes(left: (IGroupItem | IGroupData)[], leftContext: IExceptionContext, lookup: Map<number, IPos>) {\n    const mode = this.mode;\n    const fakeGroups = new Map<IOrderedGroup, ISlope[]>();\n\n    const createFakeGroup = (first: number, group: IOrderedGroup) => {\n      let count = 0;\n      let height = 0;\n      // find all items in this group, assuming that they are in order\n      for (let i = first; i < left.length; ++i) {\n        const item = left[i];\n        if (isGroup(item) || (<IGroupItem>item).group !== group) {\n          break;\n        }\n        count++;\n        height += (leftContext.exceptionsLookup.get(i) || leftContext.defaultRowHeight);\n      }\n\n      const padded = height - leftContext.padding(first + count - 1);\n\n      const gr = group;\n\n      return {gr, padded, height};\n    };\n\n    let acc = 0;\n    this.leftSlopes = left.map((r, i) => {\n\n      let height = (leftContext.exceptionsLookup.get(i) || leftContext.defaultRowHeight);\n      let padded = height - 0; //leftContext.padding(i);\n      const slopes = <ISlope[]>[];\n      const start = acc;\n\n      // shift by item height\n      acc += height;\n\n      let offset = 0;\n\n      const push = (s: ISlope, right: IPos, common = 1, heightPerRow = 0) => {\n        // store slope in both\n        slopes.push(s);\n        forEachIndices(right.ref, (r) => this.rightSlopes[r].push(s));\n\n        // update the offset of myself and of the right side\n        right.offset += common * right.heightPerRow;\n        offset += common * heightPerRow;\n      };\n\n      let gr: IGroupData;\n\n      if (isGroup(r)) {\n        gr = r;\n      } else {\n        const item = (<IGroupItem>r);\n        const dataIndex = item.dataIndex;\n        const right = lookup.get(dataIndex);\n\n        if (!right) { // no match\n          return slopes;\n        }\n        if (mode === EMode.ITEM) {\n          const s = new ItemSlope(start + padded / 2, right.start + right.offset + right.heightPerRow / 2, [dataIndex]);\n          push(s, right);\n          return slopes;\n        }\n\n        if (fakeGroups.has(item.group)) {\n          // already handled by the first one, take the fake slopes\n          return fakeGroups.get(item.group)!;\n        }\n\n        const fakeGroup = createFakeGroup(i, item.group);\n        gr = fakeGroup.gr;\n        height = fakeGroup.height;\n        padded = fakeGroup.padded;\n        fakeGroups.set(item.group, slopes);\n      }\n\n      // free group items to share\n      const free = new Set(gr.order);\n\n      const heightPerRow = padded / gr.order.length;\n\n      forEachIndices(gr.order, (d: number) => {\n        if (!free.has(d)) {\n          return; // already handled\n        }\n        free.delete(d);\n        const right = lookup.get(d);\n        if (!right) {\n          return; // no matching\n        }\n        // find all of this group\n        const intersection = filterIndices(right.rows, (r) => free.delete(r));\n        intersection.push(d); //self\n\n        const common = intersection.length;\n        let s: ISlope;\n        if (common === 1) {\n          s = new ItemSlope(start + offset + heightPerRow / 2, right.start + right.offset + right.heightPerRow / 2, [d]);\n        } else if (mode === EMode.ITEM) {\n          // fake item\n          s = new ItemSlope(start + offset + heightPerRow * common / 2, right.start + right.offset + right.heightPerRow * common / 2, intersection);\n        } else {\n          s = new GroupSlope([start + offset, start + offset + heightPerRow * common], [right.start + right.offset, right.start + right.offset + right.heightPerRow * common], intersection);\n        }\n        push(s, right, common, heightPerRow);\n      });\n      return slopes;\n    });\n  }\n\n  private prepareRightSlopes(right: (IGroupItem | IGroupData)[], rightContext: IExceptionContext) {\n    const lookup = new Map<number, IPos>();\n    const mode = this.mode;\n\n    const fakeGroups = new Map<IOrderedGroup, IPos>();\n    let acc = 0;\n\n    this.rightSlopes = right.map((r, i) => {\n      const height = (rightContext.exceptionsLookup.get(i) || rightContext.defaultRowHeight);\n      const padded = height - 0; //rightContext.padding(i);\n      const start = acc;\n      acc += height;\n      const slopes = <ISlope[]>[];\n\n      const base = {\n        start,\n        offset: 0,\n        ref: [i]\n      };\n      if (isGroup(r)) {\n        const p = Object.assign(base, {\n          rows: Array.from(r.order),\n          heightPerRow: padded / r.order.length,\n          group: r\n        });\n\n        forEachIndices(r.order, (ri) => lookup.set(ri, p));\n        return slopes;\n      }\n      // item\n      const item = (<IGroupItem>r);\n      const dataIndex = r.dataIndex;\n\n      let p = Object.assign(base, {\n        rows: [dataIndex],\n        heightPerRow: padded,\n        group: item.group\n      });\n\n      if (mode === EMode.ITEM) {\n        lookup.set(dataIndex, p);\n        return slopes;\n      }\n      // forced band mode\n      // merge with the 'ueber' band\n      if (!fakeGroups.has(item.group)) {\n        p.heightPerRow = height; // include padding\n        // TODO just support uniform item height\n        fakeGroups.set(item.group, p);\n      } else { // reuse old\n        p = fakeGroups.get(item.group)!;\n        p.rows.push(dataIndex);\n        p.ref.push(i);\n      }\n      lookup.set(dataIndex, p);\n      return slopes;\n    });\n\n    return lookup;\n  }\n\n  private revalidate() {\n    if (!this.current || this.hidden) {\n      return;\n    }\n    const p = this.body.parentElement!;\n    this.onScrolledVertically(p.scrollTop, p.clientHeight);\n  }\n\n\n  highlight(dataIndex: number) {\n    const highlight = engineCssClass('highlighted');\n    const old = this.body.querySelector(`[data-i].${highlight}`);\n    if (old) {\n      old.classList.remove(highlight);\n    }\n    if (dataIndex < 0) {\n      return;\n    }\n    const item = this.body.querySelector(`[data-i=\"${dataIndex}\"]`);\n    if (item) {\n      item.classList.add(highlight);\n    }\n    return item != null;\n  }\n\n  private onScrolledVertically(scrollTop: number, clientHeight: number) {\n    if (!this.current) {\n      return;\n    }\n\n    // which lines are currently shown\n    const {leftContext, rightContext} = this.current;\n    const left = range(scrollTop, clientHeight, leftContext.defaultRowHeight, leftContext.exceptions, leftContext.numberOfRows);\n    const right = range(scrollTop, clientHeight, rightContext.defaultRowHeight, rightContext.exceptions, rightContext.numberOfRows);\n\n    const start = Math.min(left.firstRowPos, right.firstRowPos);\n    const end = Math.max(left.endPos, right.endPos);\n\n    // move to right position\n    this.body.style.transform = `translate(0, ${start.toFixed(0)}px)`;\n    this.body.style.height = `${(end - start).toFixed(0)}px`;\n    (this.node.firstElementChild!).setAttribute('transform', `translate(0,-${start.toFixed(0)})`);\n\n    this.chosen = this.choose(left.first, left.last, right.first, right.last);\n    this.render(this.chosen, this.chooseSelection(left.first, left.last, this.chosen));\n  }\n\n  private choose(leftVisibleFirst: number, leftVisibleLast: number, rightVisibleFirst: number, rightVisibleLast: number) {\n    // assume no separate scrolling\n\n    const slopes = new Set<ISlope>();\n    for (let i = leftVisibleFirst; i <= leftVisibleLast; ++i) {\n      for (const s of this.leftSlopes[i]) {\n        slopes.add(s);\n      }\n    }\n    for (let i = rightVisibleFirst; i <= rightVisibleLast; ++i) {\n      for (const s of this.rightSlopes[i]) {\n        slopes.add(s);\n      }\n    }\n    return slopes;\n  }\n\n  private chooseSelection(leftVisibleFirst: number, leftVisibleLast: number, alreadyVisible: Set<ISlope>) {\n    const slopes = new Set<ISlope>();\n    // ensure selected slopes are always part of\n    const p = this.ctx.provider;\n\n    if (p.getSelection().length === 0) {\n      return slopes;\n    }\n\n    const selectionLookup = {has: (dataIndex: number) => p.isSelected(dataIndex)};\n\n    // try all not visible ones\n    for (let i = 0; i < leftVisibleFirst; ++i) {\n      for (const s of this.leftSlopes[i]) {\n        if (s.isSelected(selectionLookup) && !alreadyVisible.has(s)) {\n          slopes.add(s);\n        }\n      }\n    }\n    for (let i = leftVisibleLast + 1; i < this.leftSlopes.length; ++i) {\n      for (const s of this.leftSlopes[i]) {\n        if (s.isSelected(selectionLookup) && !alreadyVisible.has(s)) {\n          slopes.add(s);\n        }\n      }\n    }\n    return slopes;\n  }\n\n  private updatePath(p: SVGPathElement, g: SVGGElement, s: ISlope, width: number, selection: {has(dataIndex: number): boolean}) {\n    s.update(p, width);\n    (<any>p).__data__ = s; // data binding\n    const selected = s.isSelected(selection);\n    p.classList.toggle(cssClass('selected'), selected);\n    if (selected) {\n      g.appendChild(p); // to put it on top\n    }\n  }\n\n  private render(visible: Set<ISlope>, selectionSlopes: Set<ISlope>) {\n    const g = <SVGGElement>this.node.firstElementChild!;\n    const width = g.ownerSVGElement!.getBoundingClientRect()!.width;\n    const paths = this.matchLength(visible.size + selectionSlopes.size, g);\n\n    const p = this.ctx.provider;\n    const selectionLookup = {has: (dataIndex: number) => p.isSelected(dataIndex)};\n\n    // update paths\n    let i = 0;\n    const updatePath = (s: ISlope) => {\n      this.updatePath(paths[i++], g, s, width, selectionLookup);\n    };\n\n    visible.forEach(updatePath);\n    selectionSlopes.forEach(updatePath);\n  }\n\n  private addPath(g: SVGGElement) {\n    const elem = this.pool.pop();\n    if (elem) {\n      g.appendChild(elem);\n      return elem;\n    }\n\n    const path = g.ownerDocument!.createElementNS('http://www.w3.org/2000/svg', 'path');\n    path.onclick = (evt) => {\n      // d3 style\n      const s: ISlope = (<any>path).__data__;\n      const p = this.ctx.provider;\n      const ids = s.dataIndices;\n      if (evt.ctrlKey) {\n        ids.forEach((id) => p.toggleSelection(id, true));\n      } else {\n        // either unset or set depending on the first state\n        const isSelected = p.isSelected(ids[0]!);\n        p.setSelection(isSelected ? [] : ids);\n      }\n    };\n    g.appendChild(path);\n    return path;\n  }\n\n  private matchLength(slopes: number, g: SVGGElement) {\n    const paths = <SVGPathElement[]>Array.from(g.children);\n    for (let i = slopes; i < paths.length; ++i) {\n      const elem = paths[i];\n      this.pool.push(elem);\n      elem.remove();\n    }\n\n    for (let i = paths.length; i < slopes; ++i) {\n      paths.push(this.addPath(g));\n    }\n    return paths;\n  }\n\n  updateSelection(selectedDataIndices: Set<number>) {\n    const g = <SVGGElement>this.node.firstElementChild!;\n    const paths = <SVGPathElement[]>Array.from(g.children);\n\n    const openDataIndices = new Set(selectedDataIndices);\n\n    if (selectedDataIndices.size === 0) {\n      // clear\n      for (const p of paths) {\n        const s: ISlope = (<any>p).__data__;\n        p.classList.toggle(cssClass('selected'), false);\n        if (this.chosenSelectionOnly.has(s)) {\n          p.remove();\n        }\n      }\n      this.chosenSelectionOnly.clear();\n      return;\n    }\n\n    for (const p of paths) {\n      const s: ISlope = (<any>p).__data__;\n      const selected = s.isSelected(selectedDataIndices);\n      p.classList.toggle(cssClass('selected'), selected);\n      if (!selected) {\n        if (this.chosenSelectionOnly.delete(s)) {\n          // was only needed because of the selection\n          p.remove();\n        }\n        continue;\n      }\n\n      g.appendChild(p); // to put it on top\n      // remove already handled\n      s.dataIndices.forEach((d) => openDataIndices.delete(d));\n    }\n\n    if (openDataIndices.size === 0) {\n      return;\n    }\n\n    // find and add missing slopes\n    const width = g.ownerSVGElement!.getBoundingClientRect()!.width;\n    for (const ss of this.leftSlopes) {\n      for (const s of ss) {\n        if (this.chosen.has(s) || this.chosenSelectionOnly.has(s) || !s.isSelected(openDataIndices)) {\n          // not visible or not selected -> skip\n          continue;\n        }\n        // create new path for it\n        this.chosenSelectionOnly.add(s);\n        const p = this.addPath(g);\n        this.updatePath(p, g, s, width, openDataIndices);\n      }\n    }\n  }\n}\n","import {GridStyleManager, MultiTableRowRenderer, nonUniformContext} from 'lineupengine';\nimport {ILineUpFlags, ILineUpOptions} from '../config';\nimport {AEventDispatcher, IEventListener, round, suffix} from '../internal';\nimport {Column, IGroupData, IGroupItem, isGroup, Ranking, IGroup} from '../model';\nimport {DataProvider} from '../provider';\nimport {isSummaryGroup, groupEndLevel} from '../provider/internal';\nimport {IImposer, IRenderContext} from '../renderer';\nimport {chooseGroupRenderer, chooseRenderer, chooseSummaryRenderer, getPossibleRenderer} from '../renderer/renderers';\nimport {cssClass} from '../styles';\nimport DialogManager from './dialogs/DialogManager';\nimport domElementCache from './domElementCache';\nimport EngineRanking, {IEngineRankingContext} from './EngineRanking';\nimport {EMode, IRankingHeaderContext, IRankingHeaderContextContainer} from './interfaces';\nimport SlopeGraph from './SlopeGraph';\n\n/**\n * emitted when the highlight changes\n * @asMemberOf EngineRenderer\n * @param dataIndex the highlghted data index or -1 for none\n * @event\n */\nexport declare function highlightChanged(dataIndex: number): void;\n\nexport default class EngineRenderer extends AEventDispatcher {\n  static readonly EVENT_HIGHLIGHT_CHANGED = EngineRanking.EVENT_HIGHLIGHT_CHANGED;\n\n  protected readonly options: Readonly<ILineUpOptions>;\n\n  readonly node: HTMLElement;\n  private readonly table: MultiTableRowRenderer;\n  private readonly rankings: EngineRanking[] = [];\n  private readonly slopeGraphs: SlopeGraph[] = [];\n\n  readonly ctx: IRankingHeaderContextContainer & IRenderContext & IEngineRankingContext;\n\n  private readonly updateAbles: ((ctx: IRankingHeaderContext) => void)[] = [];\n  private zoomFactor = 1;\n  readonly idPrefix = `lu${Math.random().toString(36).slice(-8).substr(0, 3)}`; //generate a random string with length3;\n\n  private enabledHighlightListening: boolean = false;\n\n  constructor(protected data: DataProvider, parent: HTMLElement, options: Readonly<ILineUpOptions>) {\n    super();\n    this.options = options;\n    this.node = parent.ownerDocument!.createElement('main');\n    this.node.id = this.idPrefix;\n    // FIXME inline\n    this.node.classList.toggle(cssClass('whole-hover'), options.expandLineOnHover);\n    parent.appendChild(this.node);\n\n    const dialogManager = new DialogManager(parent.ownerDocument!);\n\n    parent.appendChild(dialogManager.node);\n    this.ctx = {\n      idPrefix: this.idPrefix,\n      document: parent.ownerDocument!,\n      provider: data,\n      tasks: data.getTaskExecutor(),\n      dialogManager,\n      toolbar: this.options.toolbar,\n      flags: <ILineUpFlags>this.options.flags,\n      asElement: domElementCache(parent.ownerDocument!),\n      renderer: (col: Column, imposer?: IImposer) => {\n        const r = chooseRenderer(col, this.options.renderers);\n        return r.create!(col, this.ctx, imposer);\n      },\n      groupRenderer: (col: Column, imposer?: IImposer) => {\n        const r = chooseGroupRenderer(col, this.options.renderers);\n        return r.createGroup!(col, this.ctx, imposer);\n      },\n      summaryRenderer: (col: Column, interactive: boolean, imposer?: IImposer) => {\n        const r = chooseSummaryRenderer(col, this.options.renderers);\n        return r.createSummary!(col, this.ctx, interactive, imposer);\n      },\n      createRenderer(col: Column, imposer?: IImposer) {\n        const single = this.renderer(col, imposer);\n        const group = this.groupRenderer(col, imposer);\n        const summary = options.summaryHeader ? this.summaryRenderer(col, false, imposer) : null;\n        return {\n          single,\n          group,\n          summary,\n          singleId: col.getRenderer(),\n          groupId: col.getGroupRenderer(),\n          summaryId: col.getSummaryRenderer(),\n          singleTemplate: null,\n          groupTemplate: null,\n          summaryTemplate: null\n        };\n      },\n      getPossibleRenderer: (col: Column) => getPossibleRenderer(col, this.options.renderers, this.options.canRender),\n      colWidth: (col: Column) => !col.isVisible() ? 0 : col.getWidth()\n    };\n\n    this.table = new MultiTableRowRenderer(this.node, this.idPrefix);\n\n    //apply rules\n    {\n\n      this.style.addRule('lineup_rowPadding0', `\n        .${this.style.cssClasses.tr}`, {\n          marginTop: `${options.rowPadding}px`\n        });\n\n      for (let level = 0; level < 4; ++level) {\n        this.style.addRule(`lineup_groupPadding${level}`, `\n        .${this.style.cssClasses.tr}[data-meta~=last${level === 0 ? '' : level}]`, {\n            marginBottom: `${options.groupPadding * (level + 1)}px`\n          });\n      }\n\n\n      this.style.addRule('lineup_rowPaddingAgg0', `\n        .${cssClass('agg-level')}::after`, {\n          top: `-${options.rowPadding}px`\n        });\n      for (let level = 1; level <= 4; ++level) {\n        this.style.addRule(`lineup_rowPaddingAgg${level}`, `\n        .${cssClass('agg-level')}[data-level='${level}']::after`, {\n            top: `-${options.rowPadding + options.groupPadding}px`\n          });\n      }\n\n      // FIXME flat\n      this.style.addRule('lineup_rotation', `\n       #${this.idPrefix}.${cssClass('rotated-label')} .${cssClass('label')}.${cssClass('rotated')}`, {\n          transform: `rotate(${-this.options.labelRotation}deg)`\n        });\n\n      const toDisable: string[] = [];\n      if (!this.options.flags.advancedRankingFeatures) {\n        toDisable.push('ranking');\n      }\n      if (!this.options.flags.advancedModelFeatures) {\n        toDisable.push('model');\n      }\n      if (!this.options.flags.advancedUIFeatures) {\n        toDisable.push('ui');\n      }\n      if (toDisable.length > 0) {\n        this.style.addRule('lineup_feature_disable', `\n        ${toDisable.map((d) => `.${cssClass('feature')}-${d}.${cssClass('feature-advanced')}`).join(', ')}`, {\n            display: 'none !important'\n          });\n      }\n    }\n\n    this.initProvider(data);\n  }\n\n  get style(): GridStyleManager {\n    return this.table.style;\n  }\n\n  zoomOut() {\n    this.zoomFactor = Math.max(this.zoomFactor - 0.1, 0.5);\n    this.updateZoomFactor();\n    this.update();\n  }\n\n  zoomIn() {\n    this.zoomFactor = Math.min(this.zoomFactor + 0.1, 2.0);\n    this.updateZoomFactor();\n    this.update();\n  }\n\n  private updateZoomFactor() {\n    const body = <HTMLElement>this.node.querySelector('main')!;\n    body.style.fontSize = `${this.zoomFactor * 100}%`;\n  }\n\n  pushUpdateAble(updateAble: (ctx: IRankingHeaderContext) => void) {\n    this.updateAbles.push(updateAble);\n  }\n\n  protected createEventList() {\n    return super.createEventList().concat([EngineRenderer.EVENT_HIGHLIGHT_CHANGED]);\n  }\n\n  on(type: typeof EngineRenderer.EVENT_HIGHLIGHT_CHANGED, listener: typeof highlightChanged | null): this;\n  on(type: string | string[], listener: IEventListener | null): this; // required for correct typings in *.d.ts\n  on(type: string | string[], listener: IEventListener | null): this {\n    return super.on(type, listener);\n  }\n\n\n  setDataProvider(data: DataProvider) {\n    this.takeDownProvider();\n\n    this.data = data;\n    (<any>this.ctx).provider = data;\n    (<any>this.ctx).tasks = data.getTaskExecutor();\n\n    this.initProvider(data);\n  }\n\n  private takeDownProvider() {\n    this.data.on(`${DataProvider.EVENT_SELECTION_CHANGED}.body`, null);\n    this.data.on(`${DataProvider.EVENT_ADD_RANKING}.body`, null);\n    this.data.on(`${DataProvider.EVENT_REMOVE_RANKING}.body`, null);\n    this.data.on(`${DataProvider.EVENT_GROUP_AGGREGATION_CHANGED}.body`, null);\n    this.data.on(`${DataProvider.EVENT_SHOWTOPN_CHANGED}.body`, null);\n    this.data.on(`${DataProvider.EVENT_JUMP_TO_NEAREST}.body`, null);\n    this.data.on(`${DataProvider.EVENT_BUSY}.body`, null);\n\n    this.rankings.forEach((r) => this.table.remove(r));\n    this.rankings.splice(0, this.rankings.length);\n    this.slopeGraphs.forEach((s) => this.table.remove(s));\n    this.slopeGraphs.splice(0, this.slopeGraphs.length);\n  }\n\n  private initProvider(data: DataProvider) {\n    data.on(`${DataProvider.EVENT_SELECTION_CHANGED}.body`, () => this.updateSelection(data.getSelection()));\n    data.on(`${DataProvider.EVENT_ADD_RANKING}.body`, (ranking: Ranking) => {\n      this.addRanking(ranking);\n    });\n    data.on(`${DataProvider.EVENT_REMOVE_RANKING}.body`, (ranking: Ranking) => {\n      this.removeRanking(ranking);\n    });\n    data.on(`${DataProvider.EVENT_GROUP_AGGREGATION_CHANGED}.body`, (ranking: Ranking) => {\n      this.update(this.rankings.filter((r) => r.ranking === ranking));\n    });\n    data.on(`${DataProvider.EVENT_SHOWTOPN_CHANGED}.body`, () => {\n      this.update(this.rankings);\n    });\n    data.on(`${DataProvider.EVENT_JUMP_TO_NEAREST}.body`, (indices: number[]) => {\n      this.setHighlightToNearest(indices, true);\n    });\n\n    (<any>this.ctx).provider = data;\n\n    this.data.getRankings().forEach((r) => this.addRanking(r));\n  }\n\n  private updateSelection(dataIndices: number[]) {\n    const s = new Set(dataIndices);\n    this.rankings.forEach((r) => r.updateSelection(s));\n\n    this.slopeGraphs.forEach((r) => r.updateSelection(s));\n  }\n\n  private updateHist(ranking?: EngineRanking, col?: Column) {\n    if (!this.options.summaryHeader) {\n      return;\n    }\n    const rankings = ranking ? [ranking] : this.rankings;\n\n    for (const r of rankings) {\n      if (col) {\n        // single update\n        r.updateHeaderOf(col);\n      } else {\n        r.updateHeaders();\n      }\n    }\n    this.updateUpdateAbles();\n  }\n\n  private addRanking(ranking: Ranking) {\n    if (this.rankings.length > 0) {\n      // add slope graph first\n      const s = this.table.pushSeparator((header, body) => new SlopeGraph(header, body, `${ranking.id}S`, this.ctx, {\n        mode: this.options.defaultSlopeGraphMode === 'band' ? EMode.BAND : EMode.ITEM\n      }));\n      this.slopeGraphs.push(s);\n    }\n\n    const r = this.table.pushTable((header, body, tableId, style) => new EngineRanking(ranking, header, body, tableId, style, this.ctx, {\n      animation: this.options.animated,\n      customRowUpdate: this.options.customRowUpdate || (() => undefined),\n      levelOfDetail: this.options.levelOfDetail || (() => 'high'),\n      flags: <ILineUpFlags>this.options.flags\n    }));\n    r.on(EngineRanking.EVENT_WIDTH_CHANGED, () => {\n      this.updateRotatedHeaderState();\n      this.table.widthChanged();\n    });\n    r.on(EngineRanking.EVENT_UPDATE_DATA, () => this.update([r]));\n    r.on(EngineRanking.EVENT_RECREATE, () => this.updateUpdateAbles());\n    this.forward(r, EngineRanking.EVENT_HIGHLIGHT_CHANGED);\n    if (this.enabledHighlightListening) {\n      r.enableHighlightListening(true);\n    }\n\n    ranking.on(suffix('.renderer', Ranking.EVENT_ORDER_CHANGED), () => this.updateHist(r));\n\n    this.rankings.push(r);\n    this.update([r]);\n  }\n\n  private updateRotatedHeaderState() {\n    if (this.options.labelRotation === 0) {\n      return;\n    }\n    const l = this.node.querySelector(`.${cssClass('label')}.${cssClass('rotated')}`);\n    this.node.classList.toggle(cssClass('rotated-label'), Boolean(l));\n  }\n\n  private removeRanking(ranking: Ranking | null) {\n    if (!ranking) {\n      // remove all\n      this.rankings.splice(0, this.rankings.length);\n      this.slopeGraphs.splice(0, this.slopeGraphs.length);\n      this.table.clear();\n      return;\n    }\n    const index = this.rankings.findIndex((r) => r.ranking === ranking);\n    if (index < 0) {\n      return; // error\n    }\n    const section = this.rankings.splice(index, 1)[0]!;\n    const slope = this.slopeGraphs.splice(index === 0 ? index : index - 1, 1)[0];\n    this.table.remove(section);\n    if (slope) {\n      this.table.remove(slope);\n    }\n  }\n\n  update(rankings: EngineRanking[] = this.rankings) {\n    // visible and has parent = part of dom\n    rankings = rankings.filter((d) => !d.hidden && d.body.parentElement!);\n    if (rankings.length === 0) {\n      return;\n    }\n\n    const round2 = (v: number) => round(v, 2);\n    const rowPadding = round2(this.zoomFactor * this.options.rowPadding!);\n    const groupPadding = round2(this.zoomFactor * this.options.groupPadding!);\n\n    const heightsFor = (ranking: Ranking, data: (IGroupItem | IGroupData)[]) => {\n      if (this.options.dynamicHeight) {\n        const impl = this.options.dynamicHeight(data, ranking);\n        const f = (v: number | any, d: any) => typeof v === 'number' ? v : v(d);\n        if (impl) {\n          return {\n            defaultHeight: round2(this.zoomFactor * impl.defaultHeight),\n            height: (d: IGroupItem | IGroupData) => round2(this.zoomFactor * f(impl.height, d)),\n            padding: (d: IGroupItem | IGroupData) => round2(this.zoomFactor * f(impl.padding, d)),\n          };\n        }\n      }\n      const item = round2(this.zoomFactor * this.options.rowHeight!);\n      const group = round2(this.zoomFactor * this.options.groupHeight!);\n      return {\n        defaultHeight: item,\n        height: (d: IGroupItem | IGroupData) => isGroup(d) ? group : item,\n        padding: rowPadding\n      };\n    };\n\n    for (const r of rankings) {\n      const grouped = r.groupData();\n\n      // inline with creating the groupData\n      const {height, defaultHeight, padding} = heightsFor(r.ranking, grouped);\n\n      const strategy = this.data.getAggregationStrategy();\n      const topNGetter = (group: IGroup) => this.data.getTopNAggregated(r.ranking, group);\n\n      // inline and create manually for better performance\n      const rowContext = nonUniformContext(grouped.map(height), defaultHeight, (index) => {\n        const pad = (typeof padding === 'number' ? padding : padding(grouped[index] || null));\n        const v = grouped[index];\n\n        if (index < 0 || !v || (isGroup(v) && isSummaryGroup(v, strategy, topNGetter))) {\n          return pad;\n        }\n        return pad + groupPadding * groupEndLevel(v, topNGetter);\n      });\n      r.render(grouped, rowContext);\n    }\n\n    this.updateSlopeGraphs(rankings);\n\n    this.updateUpdateAbles();\n    this.updateRotatedHeaderState();\n    this.table.widthChanged();\n  }\n\n  private updateUpdateAbles() {\n    for (const u of this.updateAbles) {\n      u(this.ctx);\n    }\n  }\n\n  private updateSlopeGraphs(rankings: EngineRanking[] = this.rankings) {\n    const indices = new Set(rankings.map((d) => this.rankings.indexOf(d)));\n\n    for (let i = 0; i < this.slopeGraphs.length; ++i) {\n      const s = this.slopeGraphs[i];\n      if (s.hidden) {\n        return;\n      }\n      const left = i;\n      const right = i + 1;\n      if (!indices.has(left) && !indices.has(right)) {\n        return;\n      }\n      const leftRanking = this.rankings[left];\n      const rightRanking = this.rankings[right];\n      s.rebuild(leftRanking.ranking, leftRanking.currentData, leftRanking.context, rightRanking.ranking, rightRanking.currentData, rightRanking.context);\n    }\n  }\n\n  setHighlight(dataIndex: number, scrollIntoView: boolean) {\n    const found = this.rankings.map((r) => r.setHighlight(dataIndex));\n    this.fire(EngineRenderer.EVENT_HIGHLIGHT_CHANGED, dataIndex);\n    if (this.rankings.length === 0 || dataIndex < 0) {\n      return false;\n    }\n    if (!scrollIntoView) {\n      return found[0]!;\n    }\n    return this.rankings[0].scrollIntoView(dataIndex);\n  }\n\n  setHighlightToNearest(dataIndices: number[], scrollIntoView: boolean) {\n    if (this.rankings.length === 0) {\n      return false;\n    }\n    const nearest = this.rankings[0].findNearest(dataIndices);\n    if (nearest >= 0) {\n      return this.setHighlight(nearest, scrollIntoView);\n    }\n    return false;\n  }\n\n  getHighlight() {\n    for (const ranking of this.rankings) {\n      const h = ranking.getHighlight();\n      if (h >= 0) {\n        return h;\n      }\n    }\n    return -1;\n  }\n\n  enableHighlightListening(enable: boolean) {\n    for (const ranking of this.rankings) {\n      ranking.enableHighlightListening(enable);\n    }\n    this.enabledHighlightListening = enable;\n  }\n\n  destroy() {\n    this.takeDownProvider();\n    this.table.destroy();\n    this.node.remove();\n  }\n}\n\n","\n\n/**\n * caches parsing of html strings in a dom element cache\n * @param doc the doc to create the elements under\n * @internal\n */\nexport default function domElementCache(doc: Document): (html: string) => HTMLElement {\n  const cache = new Map<string, HTMLElement>();\n\n  const helper = doc.createElement('div');\n\n  return (html: string) => {\n    if (cache.has(html)) {\n      return <HTMLElement>cache.get(html)!.cloneNode(true);\n    }\n\n    helper.innerHTML = html;\n    const node = <HTMLElement>helper.firstElementChild!;\n    // keep a copy\n    cache.set(html, <HTMLElement>node.cloneNode(true));\n\n    return node;\n  };\n}\n","import ADialog, {IDialogContext} from './ADialog';\nimport {cssClass} from '../../styles';\n\n/** @internal */\nexport default class ChooseRankingDialog extends ADialog {\n\n  constructor(private readonly items: HTMLElement[], dialog: IDialogContext) {\n    super(dialog);\n  }\n\n\n  protected build(node: HTMLElement) {\n    node.classList.add(cssClass('more-options'), cssClass('choose-options'));\n    for (const item of this.items) {\n      node.appendChild(item);\n    }\n  }\n}\n","import {clear, AEventDispatcher, IEventListener} from '../../internal';\nimport {cssClass} from '../../styles';\n\nexport interface IItem {\n  id: string;\n  text: string;\n}\n\nexport interface IGroupSearchItem<T extends IItem> {\n  text: string;\n  children: (T | IGroupSearchItem<T>)[];\n}\n\nfunction isItem<T extends IItem>(v: T | IGroupSearchItem<T>): v is T {\n  return (<T>v).id !== undefined;\n}\n\nexport interface ISearchBoxOptions<T extends IItem> {\n  doc: Document;\n\n  formatItem(item: T | IGroupSearchItem<T>, node: HTMLElement): string;\n\n  placeholder: string;\n}\n\n/**\n * @asMemberOf SearchBox\n * @event\n */\nexport declare function select(item: any): void;\n\n\nexport default class SearchBox<T extends IItem> extends AEventDispatcher {\n  static readonly EVENT_SELECT = 'select';\n\n  private readonly options: Readonly<ISearchBoxOptions<T>> = {\n    formatItem: (item) => item.text,\n    doc: document,\n    placeholder: 'Select...',\n  };\n\n  readonly node: HTMLElement;\n  private search: HTMLInputElement;\n  private body: HTMLElement;\n\n  private readonly itemTemplate: HTMLElement;\n  private readonly groupTemplate: HTMLElement;\n\n  private values: (T | IGroupSearchItem<T>)[] = [];\n\n  constructor(options: Partial<ISearchBoxOptions<T>> = {}) {\n    super();\n    Object.assign(this.options, options);\n\n    this.node = this.options.doc.createElement('div');\n    this.node.classList.add(cssClass('search'));\n    this.node.innerHTML = `<input class=\"${cssClass('search-input')}\" type=\"search\" placeholder=\"${this.options.placeholder}\">\n    <ul class=\"${cssClass('search-list')}\"></ul>`;\n\n    this.search = <HTMLInputElement>this.node.firstElementChild!;\n    this.body = <HTMLElement>this.node.lastElementChild!;\n\n    this.search.onfocus = () => this.focus();\n    this.search.onblur = () => this.blur();\n    this.search.oninput = () => this.filter();\n    this.search.onkeydown = (evt) => this.handleKey(evt);\n\n\n    this.itemTemplate = this.options.doc.createElement('li');\n    this.itemTemplate.classList.add(cssClass('search-item'));\n    this.itemTemplate.innerHTML = `<span></span>`;\n    this.groupTemplate = this.options.doc.createElement('li');\n    this.groupTemplate.classList.add(cssClass('search-group'));\n    this.groupTemplate.innerHTML = `<span></span><ul></ul>`;\n  }\n\n  get data() {\n    return this.values;\n  }\n\n  set data(data: (T | IGroupSearchItem<T>)[]) {\n    this.values = data;\n    clear(this.body);\n    this.buildDialog(this.body, this.values);\n  }\n\n  private buildDialog(node: HTMLElement, values: (T | IGroupSearchItem<T>)[]) {\n    for (const v of values) {\n      let li: HTMLElement;\n      if (isItem(v)) {\n        li = <HTMLElement>this.itemTemplate.cloneNode(true);\n        li.onmousedown = (evt) => {\n          // see https://stackoverflow.com/questions/10652852/jquery-fire-click-before-blur-event#10653160\n          evt.preventDefault();\n        };\n        li.onclick = () => this.select(v);\n        li.onmouseenter = () => this.highlighted = li;\n        li.onmouseleave = () => this.highlighted = null;\n        node.appendChild(li);\n      } else {\n        li = <HTMLElement>this.groupTemplate.cloneNode(true);\n        this.buildDialog(<HTMLElement>li.lastElementChild!, v.children);\n        node.appendChild(li);\n      }\n      const item = <HTMLElement>li.firstElementChild!;\n      item.innerHTML = this.options.formatItem(v, item);\n    }\n  }\n\n  private handleKey(evt: KeyboardEvent) {\n    const KEYS = {\n      ESC: 27,\n      ENTER: 13,\n      UP: 38,\n      DOWN: 40\n    };\n    switch (evt.which) {\n      case KEYS.ESC:\n        this.search.blur();\n        break;\n      case KEYS.ENTER:\n        const h = this.highlighted;\n        if (h) {\n          h.click();\n        }\n        break;\n      case KEYS.UP:\n        this.highlightPrevious();\n        break;\n      case KEYS.DOWN:\n        this.highlightNext();\n        break;\n    }\n  }\n\n  private select(item: T) {\n    this.search.value = ''; // reset\n    this.search.blur();\n    this.fire(SearchBox.EVENT_SELECT, item);\n  }\n\n  focus() {\n    this.body.style.width = `${this.search.offsetWidth}px`;\n    this.highlighted = <HTMLElement>this.body.firstElementChild || null;\n    this.node.classList.add(cssClass('search-open'));\n  }\n\n  private get highlighted() {\n    return <HTMLElement>this.body.getElementsByClassName(cssClass('search-highlighted'))[0] || null;\n  }\n\n  private set highlighted(value: HTMLElement | null) {\n    const old = this.highlighted;\n    if (old === value) {\n      return;\n    }\n    if (old) {\n      old.classList.remove(cssClass('search-highlighted'));\n    }\n    if (value) {\n      value.classList.add(cssClass('search-highlighted'));\n    }\n  }\n\n  private highlightNext() {\n    const h = this.highlighted;\n    if (!h || h.classList.contains(cssClass('hidden'))) {\n      this.highlighted = <HTMLElement>this.body.querySelector(`.${cssClass('search-item')}:not(.${cssClass('hidden')})`) || null;\n      return;\n    }\n\n    const items = <HTMLElement[]>Array.from(this.body.querySelectorAll(`.${cssClass('search-item')}:not(.${cssClass('hidden')})`));\n    const index = items.indexOf(h);\n    this.highlighted = items[index + 1] || null;\n  }\n\n  private highlightPrevious() {\n    const h = this.highlighted;\n    const items = <HTMLElement[]>Array.from(this.body.querySelectorAll(`.${cssClass('search-item')}:not(.${cssClass('hidden')})`));\n\n    if (!h || h.classList.contains(cssClass('hidden'))) {\n      this.highlighted = items[items.length - 1] || null;\n      return;\n    }\n    const index = items.indexOf(h);\n    this.highlighted = items[index - 1] || null;\n  }\n\n  private blur() {\n    this.search.value = '';\n    // clear filter\n    this.filterResults(this.body, '');\n    this.node.classList.remove(cssClass('search-open'));\n  }\n\n  private filter() {\n    const empty = this.filterResults(this.body, this.search.value.toLowerCase());\n    this.body.classList.toggle(cssClass('search-empty'), empty);\n  }\n\n  private filterResults(node: HTMLElement, text: string) {\n    if (text === '') {\n      // show all\n      (<HTMLElement[]>Array.from(node.getElementsByClassName(cssClass('hidden')))).forEach((d: HTMLElement) => d.classList.remove(cssClass('hidden')));\n      return false;\n    }\n    const children = Array.from(node.children);\n    children.forEach((d) => {\n      const content = d.firstElementChild!.innerHTML.toLowerCase();\n      let hidden = !content.includes(text);\n      if (d.classList.contains(cssClass('search-group'))) {\n        const ul = <HTMLElement>d.lastElementChild!;\n        const allChildrenHidden = this.filterResults(ul, text);\n        hidden = hidden && allChildrenHidden;\n      }\n      d.classList.toggle(cssClass('hidden'), hidden);\n    });\n\n    return children.every((d) => d.classList.contains(cssClass('hidden')));\n  }\n\n  protected createEventList() {\n    return super.createEventList().concat([SearchBox.EVENT_SELECT]);\n  }\n\n  on(type: typeof SearchBox.EVENT_SELECT, listener: typeof select | null): this;\n  on(type: string | string[], listener: IEventListener | null): this {\n    return super.on(type, listener);\n  }\n}\n","import {Ranking} from '../../model';\nimport ADialog, {IDialogContext} from './ADialog';\nimport {cssClass} from '../../styles';\n\n/** @internal */\nexport default class RenameRankingDialog extends ADialog {\n\n  private readonly before: string;\n\n  constructor(private readonly ranking: Ranking, dialog: IDialogContext) {\n    super(dialog, {\n      fullDialog: true\n    });\n    this.before = ranking.getLabel();\n  }\n\n  protected build(node: HTMLElement) {\n    node.classList.add(cssClass('dialog-rename'));\n    node.insertAdjacentHTML('beforeend', `\n      <input type=\"text\" value=\"${this.ranking.getLabel()}\" required autofocus placeholder=\"name\">`);\n  }\n\n  protected reset() {\n    this.findInput('input[type=\"text\"]').value = this.before;\n    this.ranking.setLabel(this.before);\n  }\n\n  protected submit() {\n    const newValue = this.findInput('input[type=\"text\"]').value;\n    this.ranking.setLabel(newValue);\n    return true;\n  }\n}\n","import {Ranking} from '../../model';\nimport {IRankingHeaderContext} from '../interfaces';\nimport ADialog, {dialogContext, IDialogContext} from './ADialog';\nimport RenameRankingDialog from './RenameRankingDialog';\nimport {cssClass} from '../../styles';\nimport {actionCSSClass} from '../header';\n\n/** @internal */\nexport default class MoreRankingOptionsDialog extends ADialog {\n\n  constructor(private readonly ranking: Ranking, dialog: IDialogContext, private readonly ctx: IRankingHeaderContext) {\n    super(dialog);\n  }\n\n  private addIcon(node: HTMLElement, title: string, onClick: (evt: MouseEvent)=>void) {\n    node.insertAdjacentHTML('beforeend', `<i title=\"${title}\" class=\"${actionCSSClass(title)}\"><span>${title}</span> </i>`);\n    const i = <HTMLElement>node.lastElementChild;\n    i.onclick = (evt) => {\n      evt.stopPropagation();\n      onClick(evt);\n    };\n  }\n\n  protected build(node: HTMLElement) {\n    node.classList.add(cssClass('more-options'));\n    this.addIcon(node, 'Rename', (evt) => {\n      evt.stopPropagation();\n      evt.preventDefault();\n      const dialog = new RenameRankingDialog(this.ranking, dialogContext(this.ctx, this.level + 1, <any>evt));\n      dialog.open();\n    });\n    this.addIcon(node, 'Remove', (evt) => {\n      evt.stopPropagation();\n      evt.preventDefault();\n      this.destroy();\n      this.ctx.provider.removeRanking(this.ranking);\n    });\n  }\n}\n","import {Column} from '../../model';\nimport ADialog, {IDialogContext} from './ADialog';\nimport {IToolbarDialogAddon, IRankingHeaderContext} from '../interfaces';\n\n/** @internal */\nexport default class AddonDialog extends ADialog {\n  constructor(private readonly column: Column, private readonly addons: IToolbarDialogAddon[], dialog: IDialogContext, private readonly ctx: IRankingHeaderContext, private readonly onClick?: ()=>void) {\n    super(dialog, {\n      fullDialog: Boolean(onClick),\n      resetPossible: false\n    });\n  }\n\n  protected build(node: HTMLElement) {\n    for(const addon of this.addons) {\n      this.node.insertAdjacentHTML('beforeend', `<strong>${addon.title}</strong>`);\n      addon.append(this.column, node, this.dialog, this.ctx);\n    }\n  }\n\n  protected submit(): boolean {\n    if (this.onClick) {\n      this.onClick();\n    }\n    return true;\n  }\n}\n","import {clear} from '../../internal';\nimport {Column, Ranking, categoryOf, isSortingAscByDefault, ISortCriteria, isSupportType} from '../../model';\nimport {aria, cssClass} from '../../styles';\nimport AddonDialog from '../dialogs/AddonDialog';\nimport {actionCSSClass, updateHeader} from '../header';\nimport {IRankingHeaderContext, IToolbarDialogAddon} from '../interfaces';\nimport {getToolbarDialogAddons, isGroupAble, isGroupSortAble, isSortAble} from '../toolbar';\nimport SearchBox, {ISearchBoxOptions} from './SearchBox';\nimport {dialogContext} from '../dialogs';\n\ninterface IColumnItem {\n  col: Column;\n  id: string;\n  text: string;\n}\n/**\n * @internal\n */\nexport default class Hierarchy {\n  readonly node: HTMLElement;\n  readonly groupAdder: SearchBox<IColumnItem>;\n  readonly sortAdder: SearchBox<IColumnItem>;\n  readonly groupSortAdder: SearchBox<IColumnItem>;\n\n  constructor(private readonly ctx: IRankingHeaderContext, document: Document) {\n    this.node = document.createElement('aside');\n    this.node.classList.add(cssClass('hierarchy'), cssClass('feature-advanced'), cssClass('feature-ranking'));\n    this.node.innerHTML = `\n      <section class=\"${cssClass('group-hierarchy')}\">\n      </section>\n      <section class=\"${cssClass('sort-hierarchy')}\">\n      </section>\n      <section class=\"${cssClass('sort-groups-hierarchy')}\">\n      </section>\n    `;\n    const options = <Partial<ISearchBoxOptions<IColumnItem>>>{\n      doc: document,\n      placeholder: 'Add Sort Criteria...',\n      formatItem: (item: IColumnItem, node: HTMLElement) => {\n        node.classList.add(cssClass('typed-icon'));\n        node.dataset.typeCat = categoryOf(item.col).name;\n        node.dataset.type = item.col.desc.type;\n        return item.text;\n      },\n\n    };\n    this.groupAdder = new SearchBox(Object.assign({}, options, {\n      placeholder: 'Add Grouping Criteria...'\n    }));\n    this.groupSortAdder = new SearchBox(Object.assign({}, options, {\n      placeholder: 'Add Grouping Sort Criteria...'\n    }));\n    this.sortAdder = new SearchBox(options);\n  }\n\n  update(ranking: Ranking | null) {\n    if (!ranking) {\n      this.node.style.display = 'none';\n      return;\n    }\n    this.node.style.display = null;\n    this.renderGroups(ranking, <HTMLElement>this.node.firstElementChild!);\n    this.renderSorting(ranking, <HTMLElement>this.node.children[1]!);\n    this.renderGroupSorting(ranking, <HTMLElement>this.node.lastElementChild!);\n  }\n\n  private render<T>(node: HTMLElement, items: T[], toColumn: (item: T) => Column, extras: (item: T, node: HTMLElement) => void, addonKey: string, onChange: (item: T, delta: number) => void) {\n    const cache = new Map((<HTMLElement[]>Array.from(node.children)).map((d) => <[string, HTMLElement]>[d.dataset.id, d]));\n    clear(node);\n\n    items.forEach((d) => {\n      const col = toColumn(d);\n      const item = cache.get(col.id);\n      if (item) {\n        node.appendChild(item);\n        updateHeader(item, col, 0);\n        return;\n      }\n      const addons = getToolbarDialogAddons(col, addonKey, this.ctx);\n\n      node.insertAdjacentHTML('beforeend', `<div data-id=\"${col.id}\" class=\"${cssClass('toolbar')} ${cssClass('hierarchy-entry')}\">\n      <div class=\"${cssClass('label')} ${cssClass('typed-icon')}\">${col.label}</div>\n      ${addons.length > 0 ? `<i title=\"Customize\" class=\"${actionCSSClass('customize')}\">${aria('Customize')}</i>` : ''}\n      <i title=\"Move Up\" class=\"${actionCSSClass('Move Up')}\">${aria('Move Up')}</i>\n      <i title=\"Move Down\" class=\"${actionCSSClass('Move Down')}\">${aria('Move Down')}</i>\n      <i title=\"Remove from hierarchy\" class=\"${actionCSSClass('Remove')}\">${aria('Remove from hierarchy')}</i>\n      </div>`);\n      const last = <HTMLElement>node.lastElementChild!;\n\n      function prevent(evt: Event) {\n        evt.preventDefault();\n        evt.stopPropagation();\n      }\n\n      (<HTMLElement>last.querySelector('i[title=\"Move Down\"]')!).onclick = (evt) => {\n        prevent(evt);\n        onChange(d, + 1);\n      };\n      (<HTMLElement>last.querySelector('i[title=\"Move Up\"]')!).onclick = (evt) => {\n        prevent(evt);\n        onChange(d, -1);\n      };\n      (<HTMLElement>last.querySelector('i[title^=Remove]')!).onclick = (evt) => {\n        prevent(evt);\n        onChange(d, 0);\n      };\n\n      if (addons.length > 0) {\n        (<HTMLElement>last.querySelector('i[title=Customize]')!).onclick = (evt) => {\n          prevent(evt);\n          this.customize(col, addons, <any>evt);\n        };\n      }\n\n      extras(d, last);\n\n      updateHeader(last, col, 0);\n    });\n  }\n\n  private renderGroups(ranking: Ranking, node: HTMLElement) {\n    const groups = ranking.getGroupCriteria();\n\n    if (groups.length === 0) {\n      clear(node);\n      return;\n    }\n\n    const click = (col: Column, delta: number) => {\n      if (delta === 0) {\n        col.groupByMe();\n        return;\n      }\n      const current = col.isGroupedBy();\n      col.findMyRanker()!.groupBy(col, current + delta);\n    };\n\n    const addButton = (_: Column, last: HTMLElement) => {\n      last.insertAdjacentHTML('afterbegin', `<i title=\"Group\" class=\"${actionCSSClass('group')}\" data-group=\"true\">${aria('Group')}</i>`);\n    };\n\n    this.render(node, groups, (d) => d, addButton, 'group', click);\n    this.addGroupAdder(ranking, groups, node);\n  }\n\n  private renderSorting(ranking: Ranking, node: HTMLElement) {\n    const sortCriterias = ranking.getSortCriteria();\n\n    if (sortCriterias.length === 0) {\n      clear(node);\n      return;\n    }\n\n    const click = ({col}: ISortCriteria, delta: number) => {\n      const current = col.isSortedByMe();\n      if (!isFinite(delta)) {\n        col.sortByMe(current.asc === 'desc', current.priority);\n        return;\n      }\n      if (delta === 0) {\n        col.sortByMe(current.asc === 'asc', -1);\n        return;\n      }\n      col.sortByMe(current.asc === 'asc', current.priority! + delta);\n    };\n\n    const addButton = (s: ISortCriteria, last: HTMLElement) => {\n      last.insertAdjacentHTML('afterbegin', `\n      <i title=\"Sort\" class=\"${actionCSSClass('sort')}\" data-sort=\"${s.asc ? 'asc' : 'desc'}\">${aria('Toggle Sorting')}</i>`);\n      (<HTMLElement>last.querySelector('i[title=Sort]')!).onclick = (evt) => {\n        evt.preventDefault();\n        evt.stopPropagation();\n        click(s, Infinity);\n      };\n    };\n\n    this.render(node, sortCriterias, (d) => d.col, addButton, 'sort', click);\n\n    this.addSortAdder(ranking, sortCriterias, node);\n  }\n\n  private renderGroupSorting(ranking: Ranking, node: HTMLElement) {\n    const sortCriterias = ranking.getGroupSortCriteria();\n\n    if (sortCriterias.length === 0) {\n      clear(node);\n      return;\n    }\n\n    const click = ({col}: ISortCriteria, delta: number) => {\n      const current = col.isGroupSortedByMe();\n      if (!isFinite(delta)) {\n        col.groupSortByMe(current.asc === 'desc', current.priority);\n        return;\n      }\n      if (delta === 0) {\n        col.groupSortByMe(current.asc === 'asc', -1);\n        return;\n      }\n      col.groupSortByMe(current.asc === 'asc', current.priority! + delta);\n    };\n\n    const addButton = (s: ISortCriteria, last: HTMLElement) => {\n      last.insertAdjacentHTML('afterbegin', `\n      <i title=\"Sort Group\" class=\"${actionCSSClass('sort-groups')}\" data-sort=\"${s.asc ? 'asc' : 'desc'}\">${aria('Toggle Sorting')}</i>`);\n      (<HTMLElement>last.querySelector('i[title=\"Sort Group\"]')!).onclick = (evt) => {\n        evt.preventDefault();\n        evt.stopPropagation();\n        click(s, Infinity);\n      };\n    };\n\n    this.render(node, sortCriterias, (d) => d.col, addButton, 'sortGroup', click);\n\n    this.addGroupSortAdder(ranking, sortCriterias, node);\n  }\n\n  private addAdder(adder: SearchBox<IColumnItem>, ranking: Ranking, addonKey: string, current: Column[], node: HTMLElement, check: (col: Column) => boolean, onSelect: (col: Column) => void) {\n    const used = new Set(current);\n\n    adder.data = ranking.children.filter((col) => !isSupportType(col) && !used.has(col) && check(col)).map((col) => ({col, id: col.id, text: col.label}));\n\n    adder.on(SearchBox.EVENT_SELECT, (item: IColumnItem) => {\n      const addons = getToolbarDialogAddons(item.col, addonKey, this.ctx);\n      if (addons.length > 0) {\n        this.customize(item.col, addons, adder.node, () => onSelect(item.col));\n      } else {\n        onSelect(item.col);\n      }\n    });\n\n    if (adder.data.length <= 0) {\n      return;\n    }\n\n    const wrapper = node.ownerDocument!.createElement('footer');\n    wrapper.appendChild(adder.node);\n    wrapper.classList.add(cssClass('hierarchy-adder'));\n    node.appendChild(wrapper);\n  }\n\n  private addSortAdder(ranking: Ranking, sortCriterias: ISortCriteria[], node: HTMLElement) {\n    this.addAdder(this.sortAdder, ranking, 'sort', sortCriterias.map((d) => d.col), node, (d) => isSortAble(d, this.ctx), (col) => {\n      ranking.sortBy(col, isSortingAscByDefault(col), sortCriterias.length);\n    });\n  }\n\n  private addGroupAdder(ranking: Ranking, groups: Column[], node: HTMLElement) {\n    this.addAdder(this.groupAdder, ranking, 'group', groups, node, (d) => isGroupAble(d, this.ctx), (col) => {\n      ranking.groupBy(col, groups.length);\n    });\n  }\n\n  private addGroupSortAdder(ranking: Ranking, sortCriterias: ISortCriteria[], node: HTMLElement) {\n    this.addAdder(this.groupSortAdder, ranking, 'sortGroup', sortCriterias.map((d) => d.col), node, (d) => isGroupSortAble(d, this.ctx), (col) => {\n      ranking.groupSortBy(col, isSortingAscByDefault(col), sortCriterias.length);\n    });\n  }\n\n  private customize(col: Column, addons: IToolbarDialogAddon[], attachment: HTMLElement, onClick?: () => void) {\n    const dialog = new AddonDialog(col, addons, dialogContext(this.ctx, 0, attachment), this.ctx, onClick);\n    dialog.open();\n  }\n}\n\n","import {Column, isMapAbleColumn, NumberColumn} from '../../model';\nimport {IAbortAblePromise} from '../../provider';\nimport {ISummaryRenderer} from '../../renderer';\nimport {cssClass, engineCssClass} from '../../styles';\nimport {createShortcutMenuItems, dragAbleColumn, updateHeader} from '../header';\nimport {IRankingHeaderContext} from '../interfaces';\n\n/** @internal */\nexport default class SidePanelEntryVis {\n  readonly node: HTMLElement;\n  private summary: ISummaryRenderer;\n  private summaryUpdater: IAbortAblePromise<void> | null = null;\n\n  constructor(public readonly column: Column, private ctx: IRankingHeaderContext, document: Document) {\n    this.node = document.createElement('article');\n    this.node.classList.add(cssClass('side-panel-entry'));\n    this.node.dataset.colId = column.id;\n    this.node.dataset.type = column.desc.type;\n\n    this.summary = ctx.summaryRenderer(column, true);\n\n    this.column.on([`${NumberColumn.EVENT_FILTER_CHANGED}.panel`, `${Column.EVENT_DIRTY_HEADER}.panel`], () => {\n      this.update();\n    });\n    this.column.on(`${Column.EVENT_SUMMARY_RENDERER_TYPE_CHANGED}.panel`, () => {\n      this.recreateSummary();\n    });\n    this.init();\n    this.update();\n  }\n\n\n  private init() {\n    this.node.innerHTML = `\n      <header class=\"${cssClass('side-panel-entry-header')}\">\n        <div class=\"${cssClass('label')} ${cssClass('typed-icon')} ${cssClass('side-panel-label')}\"></div>\n        <div class=\"${cssClass('toolbar')} ${cssClass('side-panel-toolbar')}\"></div>\n      </header>`;\n    createShortcutMenuItems(<HTMLElement>this.node.querySelector(`.${cssClass('toolbar')}`), 0, this.column, this.ctx, false);\n    dragAbleColumn(<HTMLElement>this.node.querySelector('header'), this.column, this.ctx);\n    this.appendSummary();\n  }\n\n  update(ctx: IRankingHeaderContext = this.ctx) {\n    this.ctx = ctx;\n    updateHeader(this.node, this.column);\n    this.updateSummary();\n  }\n\n  private updateSummary() {\n    const summaryNode = <HTMLElement>this.node.querySelector(`.${cssClass('summary')}`)!;\n    if (this.summaryUpdater) {\n      this.summaryUpdater.abort();\n      summaryNode.classList.remove(engineCssClass('loading'));\n      this.summaryUpdater = null;\n    }\n    const r = this.summary.update(summaryNode);\n    if (!r) {\n      return;\n    }\n\n    this.summaryUpdater = r;\n    summaryNode.classList.add(engineCssClass('loading'));\n    r.then((a) => {\n      if (typeof a === 'symbol') {\n        return;\n      }\n      summaryNode.classList.remove(engineCssClass('loading'));\n    });\n  }\n\n  private appendSummary() {\n    const summary = this.ctx.asElement(this.summary.template);\n    summary.classList.add(cssClass('summary'), cssClass('side-panel-summary'), cssClass('renderer'), cssClass(`renderer-${this.column.getSummaryRenderer()}`));\n    summary.dataset.renderer = this.column.getSummaryRenderer();\n    summary.dataset.interactive = isMapAbleColumn(this.column).toString();\n    this.node.appendChild(summary);\n  }\n\n  private recreateSummary() {\n    // remove old summary\n    this.node.removeChild(this.node.querySelector(`.${cssClass('summary')}`)!!);\n\n    this.summary = this.ctx.summaryRenderer(this.column, true);\n    this.appendSummary();\n    this.updateSummary();\n  }\n\n  destroy() {\n    this.column.on([`${NumberColumn.EVENT_FILTER_CHANGED}.panel`, `${Column.EVENT_DIRTY_HEADER}.panel`, `${Column.EVENT_SUMMARY_RENDERER_TYPE_CHANGED}.panel`], null);\n    this.node.remove();\n  }\n}\n","import {clear, suffix} from '../../internal';\nimport {Ranking, isSupportType} from '../../model';\nimport {aria, cssClass} from '../../styles';\nimport MoreRankingOptionsDialog from '../dialogs/MoreRankingOptionsDialog';\nimport {actionCSSClass} from '../header';\nimport {IRankingHeaderContext} from '../interfaces';\nimport {dialogContext} from '../dialogs';\nimport Hierarchy from './Hierarchy';\nimport {ISidePanelOptions} from './SidePanel';\nimport SidePanelEntryVis from './SidePanelEntryVis';\n\n/** @internal */\nexport default class SidePanelRanking {\n\n  readonly header: HTMLElement;\n  readonly dropdown: HTMLElement;\n  readonly node: HTMLElement;\n\n  private readonly hierarchy: Hierarchy | null;\n  private readonly entries = new Map<string, SidePanelEntryVis>();\n\n  constructor(public readonly ranking: Ranking, private ctx: IRankingHeaderContext, document: Document, private readonly options: Readonly<ISidePanelOptions>) {\n    this.node = document.createElement('section');\n    this.header = document.createElement('div');\n    this.dropdown = document.createElement('div');\n\n    this.node.classList.add(cssClass('side-panel-ranking'));\n    this.header.classList.add(cssClass('side-panel-ranking-header'), cssClass('side-panel-ranking-label'));\n    this.dropdown.classList.add(cssClass('side-panel-ranking-label'));\n\n    this.dropdown.innerHTML = this.header.innerHTML = `<span>${ranking.getLabel()}</span><i class=\"${actionCSSClass('more')}\" title=\"More &hellip;\">${aria('More &hellip;')}</i>`;\n    (<HTMLElement>this.header.lastElementChild!).onclick = (<HTMLElement>this.dropdown.lastElementChild!).onclick = (evt) => {\n      evt.stopPropagation();\n      evt.preventDefault();\n      const dialog = new MoreRankingOptionsDialog(ranking, dialogContext(ctx, 1, <any>evt), ctx);\n      dialog.open();\n    };\n\n    this.hierarchy = this.options.hierarchy ? new Hierarchy(ctx, document) : null;\n\n    this.init();\n  }\n\n  private init() {\n    this.node.innerHTML = `<main class=\"${cssClass('side-panel-ranking-main')}\"></main>`;\n    if (this.hierarchy) {\n      this.node.insertBefore(this.hierarchy.node, this.node.firstChild);\n    }\n\n    if (this.hierarchy) {\n      this.ranking.on(suffix('.panel', Ranking.EVENT_GROUP_CRITERIA_CHANGED, Ranking.EVENT_SORT_CRITERIA_CHANGED, Ranking.EVENT_GROUP_SORT_CRITERIA_CHANGED), () => {\n        this.updateHierarchy();\n      });\n    }\n    this.ranking.on(suffix('.panel', Ranking.EVENT_ADD_COLUMN, Ranking.EVENT_REMOVE_COLUMN, Ranking.EVENT_MOVE_COLUMN), () => {\n      this.updateList();\n      this.updateHierarchy();\n    });\n    this.ranking.on(suffix('.panel', Ranking.EVENT_LABEL_CHANGED), () => {\n      this.dropdown.firstElementChild!.textContent = this.header.firstElementChild!.textContent = this.ranking.getLabel();\n    });\n  }\n\n  get active() {\n    return this.node.classList.contains(cssClass('active'));\n  }\n\n  set active(value: boolean) {\n    this.node.classList.toggle(cssClass('active'), value);\n    this.header.classList.toggle(cssClass('active'), value);\n    this.dropdown.classList.toggle(cssClass('active'), value);\n    if (value) {\n      return;\n    }\n    this.updateList();\n    this.updateHierarchy();\n  }\n\n  update(ctx: IRankingHeaderContext) {\n    this.ctx = ctx;\n    this.updateList();\n    this.updateHierarchy();\n  }\n\n  private updateHierarchy() {\n    if (!this.hierarchy || !this.active) {\n      return;\n    }\n    this.hierarchy.update(this.ranking);\n  }\n\n  private updateList() {\n    if (!this.active) {\n      return;\n    }\n    const node = this.node.querySelector('main')!;\n    const columns = this.ranking.flatColumns.filter((d) => !isSupportType(d));\n\n    if (columns.length === 0) {\n      clear(node);\n      this.entries.forEach((d) => d.destroy());\n      this.entries.clear();\n      return;\n    }\n\n    clear(node);\n\n    const copy = new Map(this.entries);\n    this.entries.clear();\n\n    columns.forEach((col) => {\n      const existing = copy.get(col.id);\n      if (existing) {\n        existing.update(this.ctx);\n        node.appendChild(existing.node);\n        this.entries.set(col.id, existing);\n        copy.delete(col.id);\n        return;\n      }\n\n      const entry = new SidePanelEntryVis(col, this.ctx, node.ownerDocument!);\n      node.appendChild(entry.node);\n      this.entries.set(col.id, entry);\n    });\n\n    copy.forEach((d) => d.destroy());\n  }\n\n  destroy() {\n    this.header.remove();\n    this.node.remove();\n    this.ranking.on(suffix('.panel', Ranking.EVENT_GROUP_CRITERIA_CHANGED, Ranking.EVENT_SORT_CRITERIA_CHANGED, Ranking.EVENT_GROUP_SORT_CRITERIA_CHANGED, Ranking.EVENT_ADD_COLUMN, Ranking.EVENT_MOVE_COLUMN, Ranking.EVENT_REMOVE_COLUMN, Ranking.EVENT_LABEL_CHANGED), null);\n\n    this.entries.forEach((d) => d.destroy());\n    this.entries.clear();\n  }\n}\n","import {suffix} from '../../internal';\nimport {categoryOfDesc, IColumnCategory, createAggregateDesc, createGroupDesc, createImpositionDesc, createNestedDesc, createRankDesc, createReduceDesc, createScriptDesc, createSelectionDesc, createStackDesc, IColumnDesc, Ranking} from '../../model';\nimport {DataProvider, IDataProvider} from '../../provider';\nimport {aria, cssClass} from '../../styles';\nimport ChooseRankingDialog from '../dialogs/ChooseRankingDialog';\nimport {IRankingHeaderContext} from '../interfaces';\nimport {dialogContext} from '../dialogs';\nimport SearchBox, {IGroupSearchItem, ISearchBoxOptions} from './SearchBox';\nimport SidePanelRanking from './SidePanelRanking';\nimport {format} from 'd3-format';\n\n\nexport interface IColumnWrapper {\n  desc: IColumnDesc;\n  category: IColumnCategory;\n  id: string;\n  text: string;\n}\n\nfunction isWrapper(item: IColumnWrapper | IGroupSearchItem<IColumnWrapper>): item is IColumnWrapper {\n  return (<IColumnWrapper>item).desc != null;\n}\n\nexport interface ISidePanelOptions extends Partial<ISearchBoxOptions<IColumnWrapper>> {\n  additionalDescs: IColumnDesc[];\n  chooser: boolean;\n  hierarchy: boolean;\n  collapseable: boolean | 'collapsed';\n}\n\nexport default class SidePanel {\n\n  private readonly options: ISidePanelOptions = {\n    additionalDescs: [\n      createStackDesc('Weighted Sum'),\n      createScriptDesc('Scripted Formula'),\n      createNestedDesc('Nested'),\n      createReduceDesc(),\n      createImpositionDesc(),\n      createRankDesc(),\n      createSelectionDesc(),\n      createGroupDesc(),\n      createAggregateDesc(),\n    ],\n    chooser: true,\n    hierarchy: true,\n    placeholder: 'Add Column...',\n    formatItem: (item: IColumnWrapper | IGroupSearchItem<IColumnWrapper>, node: HTMLElement) => {\n      const w: IColumnWrapper = isWrapper(item) ? item : (<IColumnWrapper>item.children[0]);\n      node.dataset.typeCat = w.category.name;\n      node.classList.add(cssClass('typed-icon'));\n      if (isWrapper(item)) {\n        node.dataset.type = w.desc.type;\n      }\n      if (node.parentElement) {\n        node.parentElement.classList.add(cssClass('feature-model'));\n        node.parentElement.classList.toggle(cssClass('feature-advanced'), w.category.featureLevel === 'advanced');\n        node.parentElement.classList.toggle(cssClass('feature-basic'), w.category.featureLevel === 'basic');\n      }\n      return item.text;\n    },\n    collapseable: true\n  };\n\n  readonly node: HTMLElement;\n  private readonly search: SearchBox<IColumnWrapper> | null;\n  private chooser: HTMLElement | null = null;\n  private readonly descs: IColumnWrapper[] = [];\n  private data: IDataProvider;\n  private readonly rankings: SidePanelRanking[] = [];\n\n  constructor(private ctx: IRankingHeaderContext, document: Document, options: Partial<ISidePanelOptions> = {}) {\n    Object.assign(this.options, options);\n\n    this.node = document.createElement('aside');\n    this.node.classList.add(cssClass('side-panel'));\n\n    this.search = this.options.chooser ? new SearchBox<IColumnWrapper>(this.options) : null;\n\n    this.data = ctx.provider;\n    this.init();\n    this.update(ctx);\n  }\n\n  private init() {\n    this.node.innerHTML = `\n      <aside class=\"${cssClass('stats')}\"></aside>\n      <header class=\"${cssClass('side-panel-rankings')}\">\n        <i class=\"${cssClass('action')}\" title=\"Choose &hellip;\">${aria('Choose &hellip;')}</i>\n      </header>\n      <main class=\"${cssClass('side-panel-main')}\"></main>\n    `;\n\n    {\n      const choose = <HTMLElement>this.node.querySelector('header > i');\n      choose.onclick = (evt) => {\n        evt.stopPropagation();\n        const dialog = new ChooseRankingDialog(this.rankings.map((d) => d.dropdown), dialogContext(this.ctx, 1, <any>evt));\n        dialog.open();\n      };\n    }\n\n    if (this.options.collapseable) {\n      this.node.insertAdjacentHTML('beforeend', `<div class=\"${cssClass('collapser')}\" title=\"Collapse Panel\">${aria('Collapse Panel')}</div>`);\n      const last = <HTMLElement>this.node.lastElementChild;\n      last.onclick = () => this.collapsed = !this.collapsed;\n      this.collapsed = this.options.collapseable === 'collapsed';\n    }\n    this.initChooser();\n    this.changeDataStorage(null, this.data);\n  }\n\n  private initChooser() {\n    if (!this.search) {\n      return;\n    }\n    this.chooser = this.node.ownerDocument!.createElement('header');\n    this.chooser.appendChild(this.chooser.ownerDocument!.createElement('form'));\n    this.chooser.classList.add(cssClass('side-panel-chooser'));\n    this.chooser.firstElementChild!.appendChild(this.search.node);\n    this.search.on(SearchBox.EVENT_SELECT, (panel: IColumnWrapper) => {\n      const col = this.data.create(panel.desc);\n      if (!col) {\n        return;\n      }\n      const a = this.active;\n      if (a) {\n        a.ranking.push(col);\n      }\n    });\n  }\n\n  private get active() {\n    return this.rankings.find((d) => d.active);\n  }\n\n  private changeDataStorage(old: IDataProvider | null, data: IDataProvider) {\n    if (old) {\n      old.on(suffix('.panel', DataProvider.EVENT_ADD_RANKING, DataProvider.EVENT_REMOVE_RANKING,\n        DataProvider.EVENT_ADD_DESC, DataProvider.EVENT_CLEAR_DESC, DataProvider.EVENT_ORDER_CHANGED, DataProvider.EVENT_SELECTION_CHANGED), null);\n    }\n    this.data = data;\n\n    const wrapDesc = (desc: IColumnDesc) => ({\n      desc,\n      category: categoryOfDesc(desc, data.columnTypes),\n      id: `${desc.type}@${desc.label}`,\n      text: desc.label\n    });\n    this.descs.splice(0, this.descs.length, ...data.getColumns().concat(this.options.additionalDescs).map(wrapDesc));\n\n    data.on(`${DataProvider.EVENT_ADD_DESC}.panel`, (desc) => {\n      this.descs.push(wrapDesc(desc));\n      this.updateChooser();\n    });\n\n    data.on(`${DataProvider.EVENT_CLEAR_DESC}.panel`, () => {\n      this.descs.splice(0, this.descs.length);\n      this.updateChooser();\n    });\n\n    data.on(suffix('.panel', DataProvider.EVENT_SELECTION_CHANGED, DataProvider.EVENT_ORDER_CHANGED), () => {\n      this.updateStats();\n    });\n\n    data.on(suffix('.panel', DataProvider.EVENT_ADD_RANKING), (ranking: Ranking, index: number) => {\n      this.createEntry(ranking, index);\n      this.makeActive(index);\n    });\n\n    data.on(suffix('.panel', DataProvider.EVENT_REMOVE_RANKING), (_: Ranking, index: number) => {\n      if (index < 0) {\n        // remove all\n        this.rankings.splice(0, this.rankings.length).forEach((d) => d.destroy());\n        this.node.querySelector('header')!.dataset.count = '0';\n        this.makeActive(-1);\n        return;\n      }\n      const r = this.rankings.splice(index, 1)[0];\n      this.node.querySelector('header')!.dataset.count = String(this.rankings.length);\n      r.destroy();\n      if (r.active) {\n        this.makeActive(this.rankings.length === 0 ? -1 : Math.max(index - 1, 0));\n      }\n    });\n\n    this.rankings.splice(0, this.rankings.length).forEach((d) => d.destroy());\n    data.getRankings().forEach((d, i) => {\n      this.createEntry(d, i);\n    });\n    if (this.rankings.length > 0) {\n      this.makeActive(0);\n    }\n\n    this.updateStats();\n  }\n\n  private createEntry(ranking: Ranking, index: number) {\n    const entry = new SidePanelRanking(ranking, this.ctx, this.node.ownerDocument!, this.options);\n\n    const header = this.node.querySelector('header')!;\n    const main = this.node.querySelector('main')!;\n\n    header.insertBefore(entry.header, header.children[index + 1]); // for the action\n    header.dataset.count = String(this.rankings.length + 1);\n\n    entry.header.onclick = (evt) => {\n      evt.preventDefault();\n      evt.stopPropagation();\n      this.makeActive(this.rankings.indexOf(entry));\n    };\n    entry.dropdown.onclick = entry.header.onclick = (evt) => {\n      evt.preventDefault();\n      evt.stopPropagation();\n      this.ctx.dialogManager.removeAboveLevel(0);\n      this.makeActive(this.rankings.indexOf(entry));\n    };\n\n    main.insertBefore(entry.node, main.children[index]);\n\n    this.rankings.splice(index, 0, entry);\n  }\n\n  get collapsed() {\n    return this.node.classList.contains(cssClass('collapsed'));\n  }\n\n  set collapsed(value: boolean) {\n    this.node.classList.toggle(cssClass('collapsed'), value);\n    if (value) {\n      return;\n    }\n    this.updateChooser();\n    this.updateStats();\n    this.updateRanking();\n  }\n\n  private makeActive(index: number) {\n    this.rankings.forEach((d, i) => d.active = index === i);\n\n    const active = this.active;\n    if (active && this.chooser) {\n      active.node.insertAdjacentElement('afterbegin', this.chooser);\n      // scroll to body\n      const parent = <HTMLElement>this.node.closest(`.${cssClass()}`)!;\n      const body = parent ? parent.querySelector(`article[data-ranking=\"${active.ranking.id}\"]`) : null;\n      if (body) {\n        body.scrollIntoView();\n      }\n    }\n    this.updateRanking();\n  }\n\n  private updateRanking() {\n    const active = this.active;\n    if (active && !this.collapsed) {\n      active.update(this.ctx);\n    }\n  }\n\n  update(ctx: IRankingHeaderContext) {\n    const bak = this.data;\n    this.ctx = ctx;\n    if (ctx.provider !== bak) {\n      this.changeDataStorage(bak, ctx.provider);\n    }\n    this.updateChooser();\n    this.updateStats();\n\n    const active = this.active;\n    if (active) {\n      active.update(ctx);\n    }\n  }\n\n  private updateStats() {\n    if (this.collapsed) {\n      return;\n    }\n    const stats = <HTMLElement>this.node.querySelector(`.${cssClass('stats')}`);\n    const s = this.data.getSelection();\n    const r = this.data.getFirstRanking();\n    const f = format(',d');\n    const visible = r ? r.getGroups().reduce((a, b) => a + b.order.length, 0) : 0;\n    const total = this.data.getTotalNumberOfRows();\n    stats.innerHTML = `Showing <strong>${f(visible)}</strong> of ${f(total)} items${s.length > 0 ? `; <span>${f(s.length)} selected</span>` : ''}${visible < total ? ` <i class=\"${cssClass('action')} ${cssClass('action-filter')} ${cssClass('stats-reset')}\" title=\"Reset filters\"><span>Reset</span></i>` : ''}`;\n\n    const resetButton = stats.querySelector<HTMLElement>(`.${cssClass('stats-reset')}`);\n    if (!resetButton) {\n      return;\n    }\n    resetButton.onclick = (evt) => {\n      evt.preventDefault();\n      evt.stopPropagation();\n      this.data.clearFilters();\n    };\n  }\n\n  destroy() {\n    this.node.remove();\n    if (!this.data) {\n      return;\n    }\n    this.rankings.forEach((d) => d.destroy());\n    this.rankings.length = 0;\n    this.data.on(suffix('.panel', DataProvider.EVENT_ADD_RANKING, DataProvider.EVENT_REMOVE_RANKING,\n      DataProvider.EVENT_ADD_DESC), null);\n  }\n\n  private static groupByType(entries: IColumnWrapper[]): {text: string, children: IColumnWrapper[]}[] {\n    const map = new Map<IColumnCategory, IColumnWrapper[]>();\n    entries.forEach((entry) => {\n      if (!map.has(entry.category)) {\n        map.set(entry.category, [entry]);\n      } else {\n        map.get(entry.category)!.push(entry);\n      }\n    });\n    return Array.from(map).map(([key, value]) => {\n      return {\n        text: key.label,\n        order: key.order,\n        children: value.sort((a, b) => a.text.localeCompare(b.text))\n      };\n    }).sort((a, b) => a.order - b.order);\n  }\n\n  private updateChooser() {\n    if (!this.search || this.collapsed) {\n      return;\n    }\n    this.search.data = SidePanel.groupByType(this.descs);\n  }\n}\n","import {ILineUpOptions, defaultOptions} from '../config';\nimport {merge} from '../internal';\nimport {DataProvider} from '../provider';\nimport {cssClass} from '../styles';\nimport {ALineUp} from './ALineUp';\nimport EngineRenderer from './EngineRenderer';\nimport SidePanel from './panel/SidePanel';\n\nexport default class LineUp extends ALineUp {\n  private readonly renderer: EngineRenderer | null;\n  private readonly panel: SidePanel | null;\n\n  private readonly options = defaultOptions();\n\n  constructor(node: HTMLElement, data: DataProvider, options: Partial<ILineUpOptions> = {}) {\n    super(node, data, options && options.ignoreUnsupportedBrowser === true);\n\n    merge(this.options, options);\n\n    if (!this.isBrowserSupported) {\n      this.renderer = null;\n      this.panel = null;\n      return;\n    }\n\n    this.node.classList.add(cssClass());\n\n\n    this.renderer = new EngineRenderer(data, this.node, this.options);\n    if (this.options.sidePanel) {\n      this.panel = new SidePanel(this.renderer.ctx, this.node.ownerDocument!, {\n        collapseable: this.options.sidePanelCollapsed ? 'collapsed' : true,\n        hierarchy: this.options.hierarchyIndicator && this.options.flags.advancedRankingFeatures\n      });\n      this.renderer.pushUpdateAble((ctx) => this.panel!.update(ctx));\n      this.node.insertBefore(this.panel.node, this.node.firstChild);\n    } else {\n      this.panel = null;\n    }\n    this.forward(this.renderer, `${EngineRenderer.EVENT_HIGHLIGHT_CHANGED}.main`);\n  }\n\n  destroy() {\n    this.node.classList.remove(cssClass());\n    if (this.renderer) {\n      this.renderer.destroy();\n    }\n    if (this.panel) {\n      this.panel.destroy();\n    }\n    super.destroy();\n  }\n\n  update() {\n    if (this.renderer) {\n      this.renderer.update();\n    }\n  }\n\n  setDataProvider(data: DataProvider, dump?: any) {\n    super.setDataProvider(data, dump);\n    if (!this.renderer) {\n      return;\n    }\n    this.renderer.setDataProvider(data);\n    this.update();\n    if (this.panel) {\n      this.panel.update(this.renderer.ctx);\n    }\n  }\n\n  setHighlight(dataIndex: number, scrollIntoView: boolean = true) {\n    return this.renderer != null && this.renderer.setHighlight(dataIndex, scrollIntoView);\n  }\n\n  getHighlight() {\n    return this.renderer ? this.renderer.getHighlight() : -1;\n  }\n\n  protected enableHighlightListening(enable: boolean) {\n    if (this.renderer) {\n      this.renderer.enableHighlightListening(enable);\n    }\n  }\n}\n","import {IGroupData, IGroupItem, isGroup} from '../../model';\nimport {groupEndLevel, ITopNGetter} from '../../provider/internal';\n\nexport interface IRule {\n  apply(data: (IGroupData | IGroupItem)[], availableHeight: number, selection: Set<number>, topNGetter: ITopNGetter): IRuleInstance;\n\n  levelOfDetail(item: IGroupData | IGroupItem, height: number): 'high' | 'low';\n}\n\nexport interface IRuleInstance {\n  item: number | ((item: IGroupItem) => number);\n  group: number | ((group: IGroupData) => number);\n  violation?: string;\n}\n\n\nexport function spaceFillingRule(config: {groupHeight: number, rowHeight: number, groupPadding: number}) {\n  function levelOfDetail(item: IGroupData | IGroupItem, height: number): 'high' | 'low' {\n    const group = isGroup(item);\n    const maxHeight = group ? config.groupHeight : config.rowHeight;\n    if (height >= maxHeight * 0.9) {\n      return 'high';\n    }\n    return 'low';\n  }\n\n  function itemHeight(data: (IGroupData | IGroupItem)[], availableHeight: number, selection: Set<number>, topNGetter: ITopNGetter) {\n    const visibleHeight = availableHeight - config.rowHeight - 5; // some padding for hover\n    const items = <IGroupItem[]>data.filter((d) => !isGroup(d));\n    const groups = data.length - items.length;\n    const selected = items.reduce((a, d) => a + (selection.has(d.dataIndex) ? 1 : 0), 0);\n    const unselected = items.length - selected;\n    const groupSeparators = items.reduce((a, d) => a + groupEndLevel(d, topNGetter), 0);\n\n    if (unselected <= 0) {\n      // doesn't matter since all are selected anyhow\n      return {height: config.rowHeight, violation: ''};\n    }\n    const available = visibleHeight - groups * config.groupHeight - groupSeparators * config.groupPadding - selected * config.rowHeight;\n\n    const height = Math.floor(available / unselected); // round to avoid sub pixel issues\n    if (height < 1) {\n      return {\n        height: 1,\n        violation: `Not possible to fit all rows on the screen. Set filters or aggregate groups to make it fit again.`\n      };\n    }\n    // clamp to max height\n    if (height > config.rowHeight) {\n      return {\n        height: config.rowHeight,\n        violation: ``\n      };\n    }\n    return {height, violation: ''};\n  }\n\n  return <IRule>{\n    apply: (data: (IGroupData | IGroupItem)[], availableHeight: number, selection: Set<number>, topNGetter: ITopNGetter) => {\n\n      const {violation, height} = itemHeight(data, availableHeight, selection, topNGetter);\n\n      const item = (item: IGroupItem) => {\n        if (selection.has(item.dataIndex)) {\n          return config.rowHeight;\n        }\n        return height;\n      };\n      return {item, group: config.groupHeight, violation};\n    },\n    levelOfDetail\n  };\n}\n","import {GridStyleManager} from 'lineupengine';\nimport {ILineUpOptions} from '../../config';\nimport {debounce, AEventDispatcher, IEventListener} from '../../internal';\nimport {IGroupData, IGroupItem, isGroup, Ranking, IGroup} from '../../model';\nimport {DataProvider} from '../../provider';\nimport {IRenderContext} from '../../renderer';\nimport {IEngineRankingContext} from '../EngineRanking';\nimport EngineRenderer from '../EngineRenderer';\nimport {IRankingHeaderContext, IRankingHeaderContextContainer} from '../interfaces';\nimport {IRule} from './rules';\n\n/**\n * emitted when the highlight changes\n * @asMemberOf TaggleRenderer\n * @param dataIndex the highlghted data index or -1 for none\n * @event\n */\nexport declare function highlightChanged(dataIndex: number): void;\n\nexport interface ITaggleOptions {\n  violationChanged(rule: IRule, violation: string): void;\n\n  rowPadding: number;\n}\n\nexport default class TaggleRenderer extends AEventDispatcher {\n  static readonly EVENT_HIGHLIGHT_CHANGED = EngineRenderer.EVENT_HIGHLIGHT_CHANGED;\n\n  private isDynamicLeafHeight: boolean = false;\n\n  private rule: IRule | null = null;\n  private levelOfDetail: ((rowIndex: number) => 'high' | 'low') | null = null;\n  private readonly resizeListener = () => debounce(() => this.update(), 100);\n  private readonly renderer: EngineRenderer;\n\n  private readonly options: Readonly<ITaggleOptions> = {\n    violationChanged: () => undefined,\n    rowPadding: 2\n  };\n\n  constructor(public data: DataProvider, parent: HTMLElement, options: (Partial<ITaggleOptions> & Readonly<ILineUpOptions>)) {\n    super();\n    Object.assign(this.options, options);\n\n    this.renderer = new EngineRenderer(data, parent, Object.assign({}, options, {\n      dynamicHeight: (data: (IGroupData | IGroupItem)[], ranking: Ranking) => {\n        const r = this.dynamicHeight(data, ranking);\n        if (r) {\n          return r;\n        }\n        return options.dynamicHeight ? options.dynamicHeight(data, ranking) : null;\n      },\n      levelOfDetail: (rowIndex: number) => this.levelOfDetail ? this.levelOfDetail(rowIndex) : 'high'\n    }));\n\n    this.data.on(`${DataProvider.EVENT_SELECTION_CHANGED}.rule`, () => {\n      if (this.isDynamicLeafHeight) {\n        this.update();\n      }\n    });\n    this.forward(this.renderer, `${TaggleRenderer.EVENT_HIGHLIGHT_CHANGED}.main`);\n\n    window.addEventListener('resize', this.resizeListener, {\n      passive: true\n    });\n  }\n\n  get style(): GridStyleManager {\n    return this.renderer.style;\n  }\n\n  get ctx(): IRankingHeaderContextContainer & IRenderContext & IEngineRankingContext {\n    return this.renderer.ctx;\n  }\n\n  pushUpdateAble(updateAble: (ctx: IRankingHeaderContext) => void) {\n    this.renderer.pushUpdateAble(updateAble);\n  }\n\n  private dynamicHeight(data: (IGroupData | IGroupItem)[], ranking: Ranking) {\n    if (!this.rule) {\n      this.levelOfDetail = null;\n      return null;\n    }\n\n    const availableHeight = this.renderer ? this.renderer.node.querySelector('main')!.clientHeight : 100;\n    const topNGetter = (group: IGroup) => this.data.getTopNAggregated(ranking, group);\n    const instance = this.rule.apply(data, availableHeight, new Set(this.data.getSelection()), topNGetter);\n\n    this.isDynamicLeafHeight = typeof instance.item === 'function';\n\n    this.options.violationChanged(this.rule, instance.violation || '');\n\n    const height = (item: IGroupItem | IGroupData) => {\n      if (isGroup(item)) {\n        return typeof instance.group === 'number' ? instance.group : instance.group(item);\n      }\n      return typeof instance.item === 'number' ? instance.item : instance.item(item);\n    };\n\n    this.levelOfDetail = (rowIndex: number) => {\n      const item = data[rowIndex];\n      return this.rule ? this.rule.levelOfDetail(item, height(item)) : 'high';\n    };\n\n    // padding is always 0 since included in height\n    // const padding = (item: IGroupData | IGroupItem | null) => {\n    //   if (!item) {\n    //     item = data[0];\n    //   }\n    //   const lod = this.rule ? this.rule.levelOfDetail(item, height(item)) : 'high';\n    //   return lod === 'high' ? 0 : 0; // always 0 since\n    // };\n\n    return {\n      defaultHeight: typeof instance.item === 'number' ? instance.item : NaN,\n      height,\n      padding: 0\n    };\n  }\n\n  protected createEventList() {\n    return super.createEventList().concat([TaggleRenderer.EVENT_HIGHLIGHT_CHANGED]);\n  }\n\n  on(type: typeof TaggleRenderer.EVENT_HIGHLIGHT_CHANGED, listener: typeof highlightChanged | null): this;\n  on(type: string | string[], listener: IEventListener | null): this; // required for correct typings in *.d.ts\n  on(type: string | string[], listener: IEventListener | null): this {\n    return super.on(type, listener);\n  }\n\n\n  zoomOut() {\n    this.renderer.zoomOut();\n  }\n\n  zoomIn() {\n    this.renderer.zoomIn();\n  }\n\n  switchRule(rule: IRule | null) {\n    if (this.rule === rule) {\n      return;\n    }\n    this.rule = rule;\n    this.update();\n  }\n\n  destroy() {\n    this.renderer.destroy();\n    window.removeEventListener('resize', this.resizeListener);\n  }\n\n  update() {\n    this.renderer.update();\n  }\n\n  setDataProvider(data: DataProvider) {\n    if (this.data) {\n      this.data.on(`${DataProvider.EVENT_SELECTION_CHANGED}.rule`, null);\n    }\n    this.data = data;\n    this.data.on(`${DataProvider.EVENT_SELECTION_CHANGED}.rule`, () => {\n      if (this.isDynamicLeafHeight) {\n        this.update();\n      }\n    });\n    this.renderer.setDataProvider(data);\n    this.update();\n  }\n\n  setHighlight(dataIndex: number, scrollIntoView: boolean) {\n    return this.renderer.setHighlight(dataIndex, scrollIntoView);\n  }\n\n  getHighlight() {\n    return this.renderer.getHighlight();\n  }\n\n  enableHighlightListening(enable: boolean) {\n    this.renderer.enableHighlightListening(enable);\n  }\n}\n","import {GridStyleManager} from 'lineupengine';\nimport {defaultOptions} from '../../config';\nimport {ITaggleOptions} from '../../config';\nimport {merge} from '../../internal';\nimport {DataProvider} from '../../provider';\nimport {cssClass, engineCssClass} from '../../styles';\nimport {ALineUp} from '../ALineUp';\nimport SidePanel from '../panel/SidePanel';\nimport {spaceFillingRule} from './rules';\nimport TaggleRenderer from './TaggleRenderer';\n\nexport default class Taggle extends ALineUp {\n  private readonly spaceFilling: HTMLElement | null;\n  private readonly renderer: TaggleRenderer | null;\n  private readonly panel: SidePanel | null;\n\n  private readonly options = defaultOptions();\n\n\n  constructor(node: HTMLElement, data: DataProvider, options: Partial<ITaggleOptions> = {}) {\n    super(node, data, options && options.ignoreUnsupportedBrowser === true);\n    merge(this.options, options);\n    merge(this.options, {\n      violationChanged: (_rule: any, violation?: string) => this.setViolation(violation)\n    });\n\n    if (!this.isBrowserSupported) {\n      this.spaceFilling = null;\n      this.renderer = null;\n      this.panel = null;\n      return;\n    }\n\n    this.node.classList.add(cssClass(), cssClass('taggle'));\n\n    this.renderer = new TaggleRenderer(data, this.node, this.options);\n    this.panel = new SidePanel(this.renderer.ctx, this.node.ownerDocument!, {\n      collapseable: this.options.sidePanelCollapsed ? 'collapsed' : true,\n      hierarchy: this.options.hierarchyIndicator && this.options.flags.advancedRankingFeatures\n    });\n    this.renderer.pushUpdateAble((ctx) => this.panel!.update(ctx));\n    this.node.insertBefore(this.panel.node, this.node.firstChild);\n    {\n      this.panel.node.insertAdjacentHTML('afterbegin', `<div class=\"${cssClass('rule-button-chooser')} ${cssClass('feature-advanced')} ${cssClass('feature-ui')}\"><label>\n            <input type=\"checkbox\">\n            <span>Overview</span>\n            <div class=\"${cssClass('rule-violation')}\"></div>\n          </label></div>`);\n      const spaceFilling = spaceFillingRule(this.options);\n      this.spaceFilling = <HTMLElement>this.panel.node.querySelector(`.${cssClass('rule-button-chooser')}`)!;\n      const input = <HTMLInputElement>this.spaceFilling.querySelector('input');\n      input.onchange = () => {\n        const selected = this.spaceFilling!.classList.toggle(cssClass('chosen'));\n        self.setTimeout(() => {\n          this.updateLodRules(selected);\n          this.renderer!.switchRule(selected ? spaceFilling : null);\n        });\n      };\n      if (this.options.overviewMode) {\n        input.checked = true;\n        this.spaceFilling.classList.toggle(cssClass('chosen'));\n        this.updateLodRules(true);\n        this.renderer.switchRule(spaceFilling);\n      }\n    }\n    this.forward(this.renderer, `${ALineUp.EVENT_HIGHLIGHT_CHANGED}.main`);\n  }\n\n  private updateLodRules(overviewMode: boolean) {\n    if (!this.renderer) {\n      return;\n    }\n    updateLodRules(this.renderer.style, overviewMode, this.options);\n  }\n\n  private setViolation(violation?: string) {\n    violation = violation || '';\n    if (this.spaceFilling) {\n      this.spaceFilling.classList.toggle(cssClass('violated'), Boolean(violation));\n      this.spaceFilling.querySelector(`.${cssClass('rule-violation')}`)!.innerHTML = violation.replace(/\\n/g, '<br>');\n    }\n  }\n\n  destroy() {\n    this.node.classList.remove(cssClass(), cssClass('taggle'));\n    if (this.renderer) {\n      this.renderer.destroy();\n    }\n    if (this.panel) {\n      this.panel.destroy();\n    }\n    super.destroy();\n  }\n\n  update() {\n    if (this.renderer) {\n      this.renderer.update();\n    }\n  }\n\n  setHighlight(dataIndex: number, scrollIntoView: boolean = true) {\n    return this.renderer != null && this.renderer.setHighlight(dataIndex, scrollIntoView);\n  }\n\n  getHighlight() {\n    return this.renderer ? this.renderer.getHighlight() : -1;\n  }\n\n  protected enableHighlightListening(enable: boolean) {\n    if (this.renderer) {\n      this.renderer.enableHighlightListening(enable);\n    }\n  }\n\n  setDataProvider(data: DataProvider, dump?: any) {\n    super.setDataProvider(data, dump);\n    if (!this.renderer) {\n      return;\n    }\n    this.renderer.setDataProvider(data);\n    this.update();\n    this.panel!.update(this.renderer.ctx);\n  }\n}\n\nexport function updateLodRules(style: GridStyleManager, overviewMode: boolean, options: Readonly<ITaggleOptions>) {\n  if (!overviewMode) {\n    style.deleteRule('taggle_lod_rule');\n    style.deleteRule('lineup_rowPadding1');\n    style.deleteRule('lineup_rowPadding2');\n    return;\n  }\n\n  style.updateRule('taggle_lod_rule', `\n  .${engineCssClass('tr')}.${cssClass('low')}[data-agg=detail]:hover`, {\n    /* show regular height for hovered rows in low + medium LOD */\n    height: `${options.rowHeight}px !important`\n  });\n\n  style.updateRule('lineup_rowPadding1', `\n  .${engineCssClass('tr')}.${cssClass('low')}`, {\n      marginTop: '0'\n    });\n\n  // no margin for hovered low level row otherwise everything will be shifted down and the hover is gone again\n  // .${engineCssClass('tr')}.${cssClass('low')}:hover,\n\n  // padding in general and for hovered low detail rows + their afterwards\n  style.updateRule('lineup_rowPadding2', `\n  .${engineCssClass('tr')}.${cssClass('low')}.${engineCssClass('highlighted')},\n  .${engineCssClass('tr')}.${cssClass('selected')},\n  .${engineCssClass('tr')}.${cssClass('low')}:hover + .${engineCssClass('tr')}.${cssClass('low')},\n  .${engineCssClass('tr')}.${cssClass('low')}.${engineCssClass('highlighted')} + .${engineCssClass('tr')}.${cssClass('low')},\n  .${engineCssClass('tr')}.${cssClass('selected')} + .${engineCssClass('tr')}.${cssClass('low')}`, {\n      marginTop: `${options.rowPadding}px !important`\n    });\n}\n","import {IArrayDesc, IColumnDesc} from '../../model';\n\nexport default class ColumnBuilder<T extends IColumnDesc = IColumnDesc> {\n  protected readonly desc: T;\n\n  constructor(type: string, column: string) {\n    this.desc = <any>{column, type, label: column ? column[0].toUpperCase() + column.slice(1): type};\n  }\n\n  /**\n   * column label\n   */\n  label(label: string) {\n    this.desc.label = label;\n    return this;\n  }\n\n  /**\n   * column description\n   */\n  description(description: string) {\n    this.desc.description = description;\n    return this;\n  }\n\n  /**\n   * sets the frozen state of this column, i.e is sticky to the left side when scrolling horizontally\n   */\n  frozen() {\n    this.desc.frozen = true;\n    return this;\n  }\n\n  /**\n   * specify the renderer to used for this column\n   * @param {string} renderer within a cell\n   * @param {string} groupRenderer within an aggregated cell\n   * @param {string} summaryRenderer within the summary in the header and side panel\n   */\n  renderer(renderer?: string, groupRenderer?: string, summaryRenderer?: string) {\n    if (renderer) {\n      this.desc.renderer = renderer;\n    }\n    if (groupRenderer) {\n      this.desc.groupRenderer = groupRenderer;\n    }\n    if (summaryRenderer) {\n      this.desc.summaryRenderer = summaryRenderer;\n    }\n    return this;\n  }\n\n  /**\n   * specify a custom additional attribute for the description\n   * @param {string} key the property key\n   * @param value its value\n   */\n  custom(key: string, value: any) {\n    (<any>this.desc)[key] = value;\n    return this;\n  }\n\n  /**\n   * sets the default width of the column\n   */\n  width(width: number) {\n    this.desc.width = width;\n    return this;\n  }\n\n  /**\n   * sets the column color in case of numerical columns\n   * @deprecated use colorMapping in the number case instead\n   */\n  color(_color: string) {\n    return this;\n  }\n\n  /**\n   * converts the column type to be an array type, supports only base types: boolean, categorical, date, number, and string\n   * @param {string[] | number} labels labels to use for each array item or the expected length of an value\n   */\n  asArray(labels?: string[] | number) {\n    console.assert(['boolean', 'categorical', 'date', 'number', 'string', 'link'].includes(this.desc.type!));\n    this.desc.type += 's';\n    const a = <IArrayDesc>this.desc;\n    if (Array.isArray(labels)) {\n      a.labels = labels;\n      a.dataLength = labels.length;\n    } else if (typeof labels === 'number') {\n      a.dataLength = labels;\n    }\n    return this;\n  }\n\n  /**\n   * converts the column type to be a map type, supports only base types: categorical, date, number, and string\n   */\n  asMap() {\n    console.assert(['categorical', 'date', 'number', 'string', 'link'].includes(this.desc.type!));\n    this.desc.type += 'Map';\n    return this;\n  }\n\n  /**\n   * build the column description\n   */\n  build(_data: any[]): T {\n    return <any>this.desc;\n  }\n}\n\n/**\n * build a column of a given type\n * @param {string} type column type\n * @param {string} column column which contains the associated data\n * @returns {ColumnBuilder<IColumnDesc>}\n */\nexport function buildColumn(type: string, column: string) {\n  return new ColumnBuilder(type, column);\n}\n","import {IDynamicHeight, ITaggleOptions} from '../config';\nimport Column, {IGroupData, IGroupItem, Ranking} from '../model';\nimport {ICellRendererFactory, ERenderMode} from '../renderer';\nimport {IToolbarAction, IToolbarDialogAddon} from '../ui';\n\n/**\n * builder for LineUp/Taggle instance\n */\nexport default class LineUpBuilder {\n  protected readonly options: Partial<ITaggleOptions> = {\n    renderers: {},\n    toolbar: {},\n    flags: {}\n  };\n\n  /**\n   * option to enable/disable animated transitions\n   * @default true\n   */\n  animated(enable: boolean) {\n    this.options.animated = enable;\n    return this;\n  }\n\n  /**\n   * option to rotate labels on demand in narrow columns\n   * @param rotation rotation in degrees\n   * @default 0 - disabled\n   */\n  labelRotation(rotation: number) {\n    this.options.labelRotation = rotation;\n    return this;\n  }\n\n  /**\n   * option to enable/disable the side panel\n   * @param {boolean} enable enable flag\n   * @param {boolean} collapsed whether collapsed by default\n   */\n  sidePanel(enable: boolean, collapsed: boolean = false) {\n    this.options.sidePanel = enable;\n    this.options.sidePanelCollapsed = collapsed;\n    return this;\n  }\n\n  /**\n   * show the sorting and grouping hierarchy indicator in the side panel\n   * @param {boolean} enable enable flag\n   */\n  hierarchyIndicator(enable: boolean) {\n    this.options.hierarchyIndicator = enable;\n    return this;\n  }\n\n  /**\n   * option to specify the default slope graph mode\n   * @default 'item'\n   */\n  defaultSlopeGraphMode(mode: 'item' | 'band') {\n    this.options.defaultSlopeGraphMode = mode;\n    return this;\n  }\n\n  /**\n   * option to enable/disable showing a summary (histogram, ...) in the header\n   * @default true\n   */\n  summaryHeader(enable: boolean) {\n    this.options.summaryHeader = enable;\n    return this;\n  }\n\n  /**\n   * option to enforce that the whole row is shown upon hover without overflow hidden\n   * @default false\n   */\n  expandLineOnHover(enable: boolean) {\n    this.options.expandLineOnHover = enable;\n    return this;\n  }\n\n  /**\n   * option to enable overview mode by default, just valid when building a Taggle instance\n   * @returns {this}\n   */\n  overviewMode() {\n    this.options.overviewMode = true;\n    return this;\n  }\n\n  /**\n   * option to ignore unsupported browser check - at own risk\n   * @returns {this}\n   */\n  ignoreUnsupportedBrowser() {\n    this.options.ignoreUnsupportedBrowser = true;\n    return this;\n  }\n\n  /**\n   * register a new renderer factory function\n   * @param id the rederer id\n   * @param factory factory class implementing the renderer\n   */\n  registerRenderer(id: string, factory: ICellRendererFactory) {\n    this.options.renderers![id] = factory;\n    return this;\n  }\n\n  /**\n   * custom function whether the given renderer should be allowed to render the give colum in the given mode\n   */\n  canRender(canRender: (type: string, renderer: ICellRendererFactory, col: Column, mode: ERenderMode) => boolean) {\n    this.options.canRender = canRender;\n    return this;\n  }\n\n  /**\n   * register another toolbar action which can be used within a model class\n   * @param id toolbar id\n   * @param action\n   */\n  registerToolbarAction(id: string, action: IToolbarAction) {\n    this.options.toolbar![id] = action;\n    return this;\n  }\n\n  /**\n   * register another toolbar action which can be sued within a model class\n   * @param id  dialog id\n   * @param addon addon description\n   */\n  registerToolbarDialogAddon(id: string, addon: IToolbarDialogAddon) {\n    this.options.toolbar![id] = addon;\n    return this;\n  }\n\n  /**\n   * height and padding of a row\n   * @default 18 and 2\n   */\n  rowHeight(rowHeight: number, rowPadding: number = 2) {\n    this.options.rowHeight = rowHeight;\n    this.options.rowPadding = rowPadding;\n    return this;\n  }\n\n  /**\n   * height and padding of an aggregated group in pixel\n   * @default 40 and 5\n   */\n  groupRowHeight(groupHeight: number, groupPadding: number = 5) {\n    this.options.groupHeight = groupHeight;\n    this.options.groupPadding = groupPadding;\n    return this;\n  }\n\n  /**\n   * custom function to compute the height of a row (group or item)\n   * @param {(data: (IGroupItem | IGroupData)[], ranking: Ranking) => (IDynamicHeight | null)} callback\n   */\n  dynamicHeight(callback: (data: (IGroupItem | IGroupData)[], ranking: Ranking) => (IDynamicHeight | null)) {\n    this.options.dynamicHeight = callback;\n    return this;\n  }\n\n  /**\n   * disables advanced ranking features (sort by, group by, sorting hierarchy, ...)\n   */\n  disableAdvancedRankingFeatures() {\n    this.options.flags!.advancedRankingFeatures = false;\n    return this;\n  }\n\n  /**\n   * disables advanced model features (add combine column, data mapping, edit pattern, ...)\n   */\n  disableAdvancedModelFeatures() {\n    this.options.flags!.advancedModelFeatures = false;\n    return this;\n  }\n\n  /**\n   * disables advanced ui features (change visualization, color mapping)\n   */\n  disableAdvancedUIFeatures() {\n    this.options.flags!.advancedUIFeatures = false;\n    return this;\n  }\n}\n","import {\n  Column, CompositeColumn, Ranking, ReduceColumn, StackColumn,\n  createAggregateDesc, createGroupDesc, createImpositionBoxPlotDesc, createImpositionDesc, createImpositionsDesc,\n  createNestedDesc, createRankDesc, createReduceDesc, createScriptDesc, createSelectionDesc, createStackDesc,\n  EAdvancedSortMethod, IColumnDesc, ISortCriteria\n} from '../model';\nimport {DataProvider} from '../provider';\n\nexport interface IImposeColumnBuilder {\n  type: 'impose';\n  column: string;\n  label?: string;\n  colorColumn: string;\n}\n\nexport interface INestedBuilder {\n  type: 'nested';\n  label?: string;\n  columns: string[];\n}\n\nexport interface IWeightedSumBuilder {\n  type: 'weightedSum';\n  columns: string[];\n  label?: string;\n  weights: number[];\n}\n\nexport interface IReduceBuilder {\n  type: 'min' | 'max' | 'mean' | 'median';\n  columns: string[];\n  label?: string;\n}\n\nexport interface IScriptedBuilder {\n  type: 'script';\n  code: string;\n  columns: string[];\n  label?: string;\n}\n\n/**\n * builder for a ranking\n */\nexport default class RankingBuilder {\n  private static readonly ALL_MAGIC_FLAG = '*';\n\n  private readonly columns: (string | {desc: IColumnDesc | ((data: DataProvider) => IColumnDesc), columns: string[], post?: (col: Column) => void })[] = [];\n  private readonly sort: {column: string, asc: boolean}[] = [];\n  private readonly groupSort: {column: string, asc: boolean}[] = [];\n  private readonly groups: string[] = [];\n\n  /**\n   * specify another sorting criteria\n   * @param {string} column the column name optionally with encoded sorting separated by colon, e.g. a:desc\n   * @param {boolean | \"asc\" | \"desc\"} asc ascending or descending order\n   */\n  sortBy(column: string, asc: boolean | 'asc' | 'desc' = true) {\n    if (column.includes(':')) {\n      // encoded sorting order\n      const index = column.indexOf(':');\n      asc = <'asc' | 'desc'>column.slice(index + 1);\n      column = column.slice(0, index);\n    }\n    this.sort.push({column, asc: asc === true || String(asc)[0] === 'a'});\n    return this;\n  }\n\n  /**\n   * specify grouping criteria\n   * @returns {this}\n   */\n  groupBy(...columns: (string | string[])[]) {\n    for (const col of columns) {\n      if (Array.isArray(col)) {\n        this.groups.push(...col);\n      } else {\n        this.groups.push(col);\n      }\n    }\n    return this;\n  }\n\n  /**\n   * specify another grouping sorting criteria\n   * @param {string} column the column name optionally with encoded sorting separated by colon, e.g. a:desc\n   * @param {boolean | \"asc\" | \"desc\"} asc ascending or descending order\n   */\n  groupSortBy(column: string, asc: boolean | 'asc' | 'desc' = true) {\n    if (column.includes(':')) {\n      // encoded sorting order\n      const index = column.indexOf(':');\n      asc = <'asc' | 'desc'>column.slice(index + 1);\n      column = column.slice(0, index);\n    }\n    this.groupSort.push({column, asc: asc === true || String(asc)[0] === 'a'});\n    return this;\n  }\n\n  /**\n   * add another column to this ranking, identified by column name or label. magic names are used for special columns:\n   * <ul>\n   *     <li>'*' = all columns</li>\n   *     <li>'_*' = all support columns</li>\n   *     <li>'_aggregate' = aggregate column</li>\n   *     <li>'_selection' = selection column</li>\n   *     <li>'_group' = group column</li>\n   *     <li>'_rank' = rank column</li>\n   * </ul>\n   * In addition build objects for combined columns are supported.\n   * @param {string | IImposeColumnBuilder | INestedBuilder | IWeightedSumBuilder | IReduceBuilder | IScriptedBuilder} column\n   */\n  column(column: string | IImposeColumnBuilder | INestedBuilder | IWeightedSumBuilder | IReduceBuilder | IScriptedBuilder) {\n    if (typeof column === 'string') {\n      switch (column) {\n        case '_aggregate':\n          return this.aggregate();\n        case '_selection':\n          return this.selection();\n        case '_group':\n          return this.group();\n        case '_rank':\n          return this.rank();\n        case '_*':\n          return this.supportTypes();\n        case '*':\n          return this.allColumns();\n      }\n      this.columns.push(column);\n      return this;\n    }\n    const label = column.label || null;\n    // builder ish\n    switch (column.type) {\n      case 'impose':\n        return this.impose(label, column.column, column.colorColumn);\n      case 'min':\n      case 'max':\n      case 'median':\n      case 'mean':\n        console.assert(column.columns.length >= 2);\n        return this.reduce(label, <any>column.type, column.columns[0], column.columns[1], ...column.columns.slice(2));\n      case 'nested':\n        console.assert(column.columns.length >= 1);\n        return this.nested(label, column.columns[0], ... column.columns.slice(1));\n      case 'script':\n        return this.scripted(label, column.code, ...column.columns);\n      case 'weightedSum':\n        console.assert(column.columns.length >= 2);\n        console.assert(column.columns.length === column.weights.length);\n        const mixed: (string | number)[] = [];\n        column.columns.slice(2).forEach((c, i) => {\n          mixed.push(c);\n          mixed.push(column.weights[i + 2]);\n        });\n        return this.weightedSum(label, column.columns[0], column.weights[0], column.columns[1], column.weights[1], ...mixed);\n    }\n    console.error('invalid column type: ', column);\n    return this;\n  }\n\n  /**\n   * add an imposed column (numerical column colored by categorical column) to this ranking\n   * @param {string | null} label optional label\n   * @param {string} numberColumn numerical column reference\n   * @param {string} colorColumn categorical column reference\n   */\n  impose(label: string | null, numberColumn: string, colorColumn: string) {\n    this.columns.push({\n      desc: (data) => {\n        const base = data.getColumns().find((d) => d.label === numberColumn || (<any>d).column === numberColumn);\n        switch (base ? base.type : '') {\n          case 'boxplot':\n            return createImpositionBoxPlotDesc(label ? label : undefined);\n          case 'numbers':\n            return createImpositionsDesc(label ? label : undefined);\n          default:\n            return createImpositionDesc(label ? label : undefined);\n        }\n      },\n      columns: [numberColumn, colorColumn]\n    });\n    return this;\n  }\n\n  /**\n   * add a nested / group composite column\n   * @param {string | null} label optional label\n   * @param {string} column first element of the group enforcing not empty ones\n   * @param {string} columns additional columns\n   */\n  nested(label: string | null, column: string, ...columns: string[]) {\n    this.columns.push({\n      desc: createNestedDesc(label ? label : undefined),\n      columns: [column].concat(columns)\n    });\n    return this;\n  }\n\n  /**\n   * @param {IColumnDesc} desc the composite column description\n   * @param {string} columns additional columns to add as children\n   */\n  composite(desc: IColumnDesc, ...columns: string[]) {\n    this.columns.push({\n      desc,\n      columns\n    });\n    return this;\n  }\n\n  /**\n   * add a weighted sum / stack column\n   * @param {string | null} label optional label\n   * @param {string} numberColumn1 the first numerical column\n   * @param {number} weight1 its weight (0..1)\n   * @param {string} numberColumn2 the second numerical column\n   * @param {number} weight2 its weight (0..1)\n   * @param {string | number} numberColumnAndWeights alternating column weight references\n   */\n  weightedSum(label: string | null, numberColumn1: string, weight1: number, numberColumn2: string, weight2: number, ...numberColumnAndWeights: (string | number)[]) {\n    const weights = [weight1, weight2].concat(<number[]>numberColumnAndWeights.filter((_, i) => i % 2 === 1));\n    this.columns.push({\n      desc: createStackDesc(label ? label : undefined),\n      columns: [numberColumn1, numberColumn2].concat(<string[]>numberColumnAndWeights.filter((_, i) => i % 2 === 0)),\n      post: (col) => {\n        (<StackColumn>col).setWeights(weights);\n      }\n    });\n    return this;\n  }\n\n  /**\n   * add reducing column (min, max, median, mean, ...)\n   * @param {string | null} label optional label\n   * @param {EAdvancedSortMethod} operation operation to apply (min, max, median, mean, ...)\n   * @param {string} numberColumn1 first numerical column\n   * @param {string} numberColumn2 second numerical column\n   * @param {string} numberColumns additional numerical columns\n   */\n  reduce(label: string | null, operation: EAdvancedSortMethod, numberColumn1: string, numberColumn2: string, ...numberColumns: string[]) {\n    this.columns.push({\n      desc: createReduceDesc(label ? label : undefined),\n      columns: [numberColumn1, numberColumn2].concat(numberColumns),\n      post: (col) => {\n        (<ReduceColumn>col).setReduce(operation);\n      }\n    });\n    return this;\n  }\n\n  /**\n   * add a scripted / formula column\n   * @param {string | null} label optional label\n   * @param {string} code the JS code see ScriptColumn for details\n   * @param {string} numberColumns additional script columns\n   */\n  scripted(label: string | null, code: string, ...numberColumns: string[]) {\n    this.columns.push({\n      desc: Object.assign(createScriptDesc(label ? label : undefined), {script: code}),\n      columns: numberColumns\n    });\n    return this;\n  }\n\n  /**\n   * add a selection column for easier multi selections\n   */\n  selection() {\n    this.columns.push({\n      desc: createSelectionDesc(),\n      columns: []\n    });\n    return this;\n  }\n\n  /**\n   * add a group column to show the current group name\n   */\n  group() {\n    this.columns.push({\n      desc: createGroupDesc(),\n      columns: []\n    });\n    return this;\n  }\n\n  /**\n   * add an aggregate column to this ranking to collapse/expand groups\n   */\n  aggregate() {\n    this.columns.push({\n      desc: createAggregateDesc(),\n      columns: []\n    });\n    return this;\n  }\n\n  /**\n   * add a ranking column\n   */\n  rank() {\n    this.columns.push({\n      desc: createRankDesc(),\n      columns: []\n    });\n    return this;\n  }\n\n  /**\n   * add suporttypes (aggregate, rank, selection) to the ranking\n   */\n  supportTypes() {\n    return this.aggregate().rank().selection();\n  }\n\n  /**\n   * add all columns to this ranking\n   */\n  allColumns() {\n    this.columns.push(RankingBuilder.ALL_MAGIC_FLAG);\n    return this;\n  }\n\n  build(data: DataProvider): Ranking {\n    const r = data.pushRanking();\n    const cols = data.getColumns();\n\n    const findDesc = (c: string) => cols.find((d) => d.label === c || (<any>d).column === c);\n\n    const addColumn = (c: string) => {\n      const desc = findDesc(c);\n      if (desc) {\n        return data.push(r, desc) != null;\n      }\n      console.warn('invalid column: ', c);\n      return false;\n    };\n\n    this.columns.forEach((c) => {\n      if (c === RankingBuilder.ALL_MAGIC_FLAG) {\n        cols.forEach((col) => data.push(r, col));\n        return;\n      }\n      if (typeof c === 'string') {\n        addColumn(c);\n        return;\n      }\n      const col = data.create(typeof c.desc === 'function' ? c.desc(data) : c.desc)!;\n      r.push(col);\n      c.columns.forEach((ci) => {\n        const d = findDesc(ci);\n        const child = d ? data.create(d) : null;\n        if (!child) {\n          console.warn('invalid column: ', ci);\n          return;\n        }\n        (<CompositeColumn>col).push(child);\n      });\n      if (c.post) {\n        c.post(col);\n      }\n    });\n\n    const children = r.children;\n    {\n      const groups: Column[] = [];\n      this.groups.forEach((column) => {\n        const col = children.find((d) => d.desc.label === column || (<any>d).desc.column === column);\n        if (col) {\n          groups.push(col);\n          return;\n        }\n        const desc = findDesc(column);\n        if (!desc) {\n          console.warn('invalid group criteria column: ', column);\n          return;\n        }\n        const col2 = data.push(r, desc);\n        if (col2) {\n          groups.push(col2);\n          return;\n        }\n        console.warn('invalid group criteria column: ', column);\n      });\n      if (groups.length > 0) {\n        r.setGroupCriteria(groups);\n      }\n    }\n    {\n      const sorts: ISortCriteria[] = [];\n      this.sort.forEach(({column, asc}) => {\n        const col = children.find((d) => d.desc.label === column || (<any>d).desc.column === column);\n        if (col) {\n          sorts.push({col, asc});\n          return;\n        }\n        const desc = findDesc(column);\n        if (!desc) {\n          console.warn('invalid sort criteria column: ', column);\n          return;\n        }\n        const col2 = data.push(r, desc);\n        if (col2) {\n          sorts.push({col: col2, asc});\n          return;\n        }\n        console.warn('invalid sort criteria column: ', column);\n      });\n      if (sorts.length > 0) {\n        r.setSortCriteria(sorts);\n      }\n    }\n    {\n      const sorts: ISortCriteria[] = [];\n      this.groupSort.forEach(({column, asc}) => {\n        const col = children.find((d) => d.desc.label === column || (<any>d).desc.column === column);\n        if (col) {\n          sorts.push({col, asc});\n          return;\n        }\n        const desc = findDesc(column);\n        if (!desc) {\n          console.warn('invalid group sort criteria column: ', column);\n          return;\n        }\n        const col2 = data.push(r, desc);\n        if (col2) {\n          sorts.push({col: col2, asc});\n          return;\n        }\n        console.warn('invalid group sort criteria column: ', column);\n      });\n      if (sorts.length > 0) {\n        r.setGroupSortCriteria(sorts);\n      }\n    }\n    return r;\n  }\n}\n\n/**\n * creates a new instance of a ranking builder\n * @returns {RankingBuilder}\n */\nexport function buildRanking() {\n  return new RankingBuilder();\n}\n","import {ICategoricalColumnDesc, ICategory} from '../../model';\nimport ColumnBuilder from './ColumnBuilder';\nimport {cleanCategories} from '../../provider/utils';\n\nexport default class CategoricalColumnBuilder extends ColumnBuilder<ICategoricalColumnDesc> {\n\n  constructor(column: string) {\n    super('categorical', column);\n  }\n\n  /**\n   * converts this type to an ordinal column type, such that categories are mapped to numbers\n   */\n  asOrdinal() {\n    this.desc.type = 'ordinal';\n    return this;\n  }\n\n  /**\n   * specify the categories of this categorical column\n   * @param {(string | Partial<ICategory>)[]} categories\n   */\n  categories(categories: (string | Partial<ICategory>)[]) {\n    this.desc.categories = categories;\n    return this;\n  }\n\n  /**\n   * converts this type to a set column, i.e. multiple unique category in a value\n   * @param {string} separator optional separator separating a string value\n   */\n  asSet(separator?: string) {\n    if (separator) {\n      (<any>this.desc).separator = separator;\n    }\n    this.desc.type = 'set';\n    return this;\n  }\n\n  private derive(data: any[]) {\n    // derive categories\n    const categories = new Set<string>();\n    const isSet = this.desc.type === 'set';\n    const separator = (<any>this.desc).separator || ';';\n    const val = (vi: any) => {\n      if (typeof vi === 'string' && vi !== '') {\n        return vi;\n      }\n      if (vi != null && typeof vi.value === 'string' && vi.value !== '') {\n        return vi.value;\n      }\n      return null;\n    };\n    data.forEach((d) => {\n      const v = d[(<any>this.desc).column];\n      if (Array.isArray(v)) {\n        v.forEach((vi) => categories.add(val(vi)));\n      } else if (v != null && v !== '') {\n        const vs: string[] = isSet ? [v.toString()] : v.toString().split(separator);\n        vs.forEach((vi) => categories.add(val(vi)));\n      }\n    });\n    this.categories(cleanCategories(categories));\n  }\n\n  build(data: any[]): ICategoricalColumnDesc {\n    if (!this.desc.categories) {\n      this.derive(data);\n    }\n    return super.build(data);\n  }\n}\n\n/**\n * build a categorical column type\n * @param {string} column column which contains the associated data\n * @param {(string | Partial<ICategory>)[]} categories optional category definition\n * @returns {CategoricalColumnBuilder}\n */\nexport function buildCategoricalColumn(column: string, categories?: (string | Partial<ICategory>)[]) {\n  const r = new CategoricalColumnBuilder(column);\n  if (categories) {\n    r.categories(categories);\n  }\n  return r;\n}\n","import {min, max} from '../../internal';\nimport {EAdvancedSortMethod, ESortMethod, INumberColumnDesc, ITypedDump} from '../../model';\nimport ColumnBuilder from './ColumnBuilder';\nimport {IScriptMappingFunctionType} from '../../model/MappingFunction';\n\nexport default class NumberColumnBuilder extends ColumnBuilder<INumberColumnDesc> {\n\n  constructor(column: string) {\n    super('number', column);\n  }\n\n  /**\n   * defines the mapping for this number column to normalize the data\n   * @param {\"linear\" | \"sqrt\" | \"pow1.1\" | \"pow2\" | \"pow3\"} type mapping type\n   * @param {[number , number]} domain input data domain [min, max]\n   * @param {[number , number]} range optional output domain [0, 1]\n   */\n  mapping(type: 'linear' | 'sqrt' | 'pow1.1' | 'pow2' | 'pow3', domain: [number, number], range?: [number, number]) {\n    if (type === 'linear') {\n      this.desc.domain = domain;\n      if (range) {\n        this.desc.range = range;\n      }\n      return;\n    }\n    this.desc.map = {\n      type, domain, range: range || [0, 1]\n    };\n    return this;\n  }\n\n  /**\n   * sets the column color in case of numerical columns\n   * @deprecated use colorMapping instead\n   */\n  color(color: string) {\n    return this.colorMapping(color);\n  }\n\n  colorMapping(type: string | ((v: number)=>string) | ITypedDump) {\n    this.desc.colorMapping = type;\n    return this;\n  }\n\n  /**\n   * d3-format to use for formatting\n   * @param format d3-format\n   */\n  numberFormat(format: string) {\n    this.desc.numberFormat = format;\n    return this;\n  }\n\n  /**\n   * defines a script to normalize the data, see ScriptedMappingFunction for details\n   * @param {string} code the code to execute\n   * @param {[number , number]} domain the input data domain [min, max]\n   */\n  scripted(code: string | IScriptMappingFunctionType, domain: [number, number]) {\n    this.desc.map = {domain, code, type: 'script'};\n    return this;\n  }\n\n\n  /**\n   * @inheritDoc\n   * @param {string[] | number} labels labels to use for each array item or the expected length of an value\n   * @param {EAdvancedSortMethod} sort sorting criteria when sorting by this column\n   */\n  asArray(labels?: string[] | number, sort?: EAdvancedSortMethod) {\n    if (sort) {\n      (<any>this.desc).sort = sort;\n    }\n    return super.asArray(labels);\n  }\n\n  /**\n   * @inheritDoc\n   * @param {EAdvancedSortMethod} sort sorting criteria when sorting by this column\n   */\n  asMap(sort?: EAdvancedSortMethod) {\n    if (sort) {\n      (<any>this.desc).sort = sort;\n    }\n    return super.asMap();\n  }\n\n  /**\n   * converts type to a boxplot column type\n   * @param {ESortMethod} sort sorting criteria when sorting by this column\n   */\n  asBoxPlot(sort?: ESortMethod) {\n    if (sort) {\n      (<any>this.desc).sort = sort;\n    }\n    this.desc.type = 'boxplot';\n    return this;\n  }\n\n  private derive(data: any[]) {\n    const col = (<any>this.desc).column;\n\n    const asArray = (v: any, extra: string) => {\n      const vs: number[] = [];\n      (Array.isArray(v) ? v : [v]).forEach((vi) => {\n        if (typeof vi === 'number' && !isNaN(vi)) {\n          vs.push(vi);\n        }\n        if (vi != null && typeof vi.value === 'number' && !isNaN(vi.value)) {\n          vs.push(vi.value);\n        }\n        if (vi != null && typeof vi[extra] === 'number' && !isNaN(vi[extra])) {\n          vs.push(vi[extra]);\n        }\n      });\n      return vs;\n    };\n\n    const minv = min(data, (d) => {\n      const v = d[col];\n      const vs: number[] = asArray(v, 'min');\n      return vs.length === 0 ? Infinity : min(vs);\n    });\n    const maxv = max(data, (d) => {\n      const v = d[col];\n      const vs: number[] = asArray(v, 'max');\n      return vs.length === 0 ? -Infinity : max(vs);\n    });\n    return <[number, number]>[minv, maxv];\n  }\n\n\n  build(data: any[]): INumberColumnDesc {\n    if (!this.desc.map && !this.desc.domain) {\n      // derive domain\n      this.mapping('linear', this.derive(data));\n    } else {\n      const d = this.desc.domain || this.desc.map!.domain;\n      if (isNaN(d[0]) || isNaN(d[1])) {\n        const ext = this.derive(data);\n        if (isNaN(d[0])) {\n          d[0] = ext[0];\n        }\n        if (isNaN(d[1])) {\n          d[1] = ext[1];\n        }\n      }\n    }\n    return super.build(data);\n  }\n}\n\n/**\n * builds numerical column builder\n * @param {string} column column which contains the associated data\n * @param {[number , number]} domain domain (min, max) of this column\n * @returns {NumberColumnBuilder}\n */\nexport function buildNumberColumn(column: string, domain?: [number, number]) {\n  const r = new NumberColumnBuilder(column);\n  if (domain) {\n    r.mapping('linear', domain);\n  }\n  return r;\n}\n","import {EAlignment, ILinkColumnDesc} from '../../model';\nimport ColumnBuilder from './ColumnBuilder';\n\nexport default class StringColumnBuilder extends ColumnBuilder<ILinkColumnDesc> {\n\n  constructor(column: string) {\n    super('string', column);\n  }\n\n  /**\n   * makes the text editable within a cell and switches to the annotate type\n   */\n  editable() {\n    this.desc.type = 'annotate';\n    return this;\n  }\n\n  /**\n   * changes the alignment of the column\n   */\n  alignment(align: EAlignment) {\n    this.desc.alignment = align;\n    return this;\n  }\n\n  /**\n   * allow html text as values\n   */\n  html() {\n    this.desc.escape = false;\n    return this;\n  }\n\n  /**\n   * provide a pattern with which the value will be wrapped, use <code>${value}</code> for the current and and <code>${item}</code> for the whole item\n   * @param {string} pattern pattern to apply\n   * @param {string[]} templates optional templates for patterns to provide in the edit pattern dialog\n   */\n  pattern(pattern: string, templates?: string[]) {\n    this.desc.type = 'link';\n    this.desc.pattern = pattern;\n    if (templates) {\n      this.desc.patternTemplates = templates;\n    }\n    return this;\n  }\n}\n\n/**\n * builds a string column builder\n * @param {string} column column which contains the associated data\n * @returns {StringColumnBuilder}\n */\nexport function buildStringColumn(column: string) {\n  return new StringColumnBuilder(column);\n}\n","import {IDateColumnDesc} from '../../model';\nimport ColumnBuilder from './ColumnBuilder';\n\nexport default class DateColumnBuilder extends ColumnBuilder<IDateColumnDesc> {\n\n  constructor(column: string) {\n    super('date', column);\n  }\n\n  /**\n   * specify the format and parsing d3-time pattern to convert Date to strings and vise versa\n   * @param {string} format d3-time-format pattern\n   * @param {string} parse optional different parsing pattern\n   */\n  format(format: string, parse?: string) {\n    this.desc.dateFormat = format;\n    if (parse) {\n      this.desc.dateParse = parse;\n    }\n    return this;\n  }\n\n}\n\n/**\n * builds a date column builder\n * @param {string} column column which contains the associated data\n * @returns {DateColumnBuilder}\n */\nexport function buildDateColumn(column: string) {\n  return new DateColumnBuilder(column);\n}\n","import {IHierarchyColumnDesc, IPartialCategoryNode} from '../../model';\nimport ColumnBuilder from './ColumnBuilder';\n\nexport default class HierarchyColumnBuilder extends ColumnBuilder<IHierarchyColumnDesc> {\n\n  constructor(column: string) {\n    super('hierarchy', column);\n  }\n\n  /**\n   * specify the underlying hierarchy of this column\n   * @param {IPartialCategoryNode} hierarchy\n   * @param {string} hierarchySeparator specify the character to separate levels (default dot)\n   */\n  hierarchy(hierarchy: IPartialCategoryNode, hierarchySeparator?: string) {\n    this.desc.hierarchy = hierarchy;\n    if (hierarchySeparator) {\n      this.desc.hierarchySeparator = hierarchySeparator;\n    }\n    return this;\n  }\n\n  build(data: any[]): IHierarchyColumnDesc {\n    console.assert(Boolean(this.desc.hierarchy));\n    return super.build(data);\n  }\n}\n\n/**\n * build a hierarchical column builder\n * @param {string} column column which contains the associated data\n * @param {IPartialCategoryNode} hierarchy\n * @returns {HierarchyColumnBuilder}\n */\nexport function buildHierarchicalColumn(column: string, hierarchy?: IPartialCategoryNode) {\n  const r = new HierarchyColumnBuilder(column);\n  if (hierarchy) {\n    r.hierarchy(hierarchy);\n  }\n  return r;\n}\n","import {IActionColumnDesc, IAction, IGroupAction} from '../../model';\nimport ColumnBuilder from './ColumnBuilder';\n\nexport default class ActionsColumnBuilder extends ColumnBuilder<IActionColumnDesc> {\n\n  constructor() {\n    super('actions', '');\n  }\n\n  /**\n   * adds another action\n   * @param action the action\n   */\n  action(action: IAction) {\n    return this.actions([action]);\n  }\n\n  /**\n   * adds multiple actions\n   * @param actions list of actions\n   */\n  actions(actions: IAction[]) {\n    if (!this.desc.actions) {\n      this.desc.actions = [];\n    }\n    this.desc.actions!.push(...actions);\n    return this;\n  }\n\n  /**\n   * adds another action that is shown in group rows\n   * @param action the action\n   */\n  groupAction(action: IGroupAction) {\n    return this.groupActions([action]);\n  }\n\n  /**\n   * add multiple group actions that are shown in group rows\n   * @param actions list of actions\n   */\n  groupActions(actions: IGroupAction[]) {\n    if (!this.desc.groupActions) {\n      this.desc.groupActions = [];\n    }\n    this.desc.groupActions!.push(...actions);\n    return this;\n  }\n}\n\n/**\n * builds a actions column builder\n * @returns {ActionsColumnBuilder}\n */\nexport function buildActionsColumn() {\n  return new ActionsColumnBuilder();\n}\n","import {IBooleanColumnDesc} from '../../model';\nimport ColumnBuilder from './ColumnBuilder';\n\nexport default class BooleanColumnBuilder extends ColumnBuilder<IBooleanColumnDesc> {\n\n  constructor(column: string) {\n    super('boolean', column);\n  }\n\n  trueMarker(marker: string) {\n    this.desc.trueMarker = marker;\n    return this;\n  }\n\n  falseMarker(marker: string) {\n    this.desc.falseMarker = marker;\n    return this;\n  }\n}\n\n/**\n * builds a boolean column builder\n * @param {string} column column which contains the associated data\n * @returns {BooleanColumnBuilder}\n */\nexport function buildBooleanColumn(column: string) {\n  return new BooleanColumnBuilder(column);\n}\n","import {IColumnDesc, IColumnConstructor} from '../model';\nimport {DataProvider, LocalDataProvider, deriveColors, deriveColumnDescriptions, IDataProviderOptions, ILocalDataProviderOptions, IAggregationStrategy} from '../provider';\nimport {LineUp, Taggle} from '../ui';\nimport ColumnBuilder from './column/ColumnBuilder';\nimport LineUpBuilder from './LineUpBuilder';\nimport RankingBuilder from './RankingBuilder';\n\nexport * from './column';\nexport * from './RankingBuilder';\n\n/**\n * builder for a LocalDataProvider along with LineUp configuration options\n */\nexport default class DataBuilder extends LineUpBuilder {\n  private readonly columns: (IColumnDesc | ((data: any[]) => IColumnDesc))[] = [];\n  private readonly providerOptions: Partial<ILocalDataProviderOptions & IDataProviderOptions> = {\n    columnTypes: {}\n  };\n\n  private readonly rankBuilders: ((data: DataProvider) => void)[] = [];\n  private _deriveColors: boolean = false;\n\n  constructor(private readonly data: object[]) {\n    super();\n  }\n\n  /**\n   * use the schedulded task executor to asynchronously compute aggregations\n   */\n  scheduledTaskExecutor() {\n    this.providerOptions.taskExecutor = 'scheduled';\n    return this;\n  }\n\n  /**\n   * when using a top-n strategy how many items should be shown\n   */\n  showTopN(n: number) {\n    this.providerOptions.showTopN = n;\n    return this;\n  }\n\n  /**\n   * change the aggregation strategy that should be used when grouping by a column\n   */\n  aggregationStrategy(strategy: IAggregationStrategy) {\n    this.providerOptions.aggregationStrategy = strategy;\n    return this;\n  }\n\n  /**\n   * allow just a single selection\n   */\n  singleSelection() {\n    this.providerOptions.singleSelection = true;\n    return this;\n  }\n\n  /**\n   * filter all rankings by all filters in LineUp\n   */\n  filterGlobally() {\n    this.providerOptions.filterGlobally = true;\n    return this;\n  }\n\n  /**\n   * triggers to derive the column descriptions for the given data\n   * @param {string} columns optional enforced order of columns\n   */\n  deriveColumns(...columns: (string | string[])[]) {\n    const cols = (<string[]>[]).concat(...columns);\n    for (const c of deriveColumnDescriptions(this.data, {columns: cols})) {\n      this.columns.push(c);\n    }\n    return this;\n  }\n\n  /**\n   * tirggers to assign colors for the given descriptions\n   */\n  deriveColors() {\n    this._deriveColors = true;\n    return this;\n  }\n\n  /**\n   * register another column type to this data provider\n   * @param {string} type unique type id\n   * @param {IColumnConstructor} clazz column class\n   */\n  registerColumnType(type: string, clazz: IColumnConstructor) {\n    this.providerOptions.columnTypes![type] = clazz;\n    return this;\n  }\n\n  /**\n   * push another column description to this data provider\n   * @param {IColumnDesc | ColumnBuilder} column column description or builder instance\n   */\n  column(column: IColumnDesc | ColumnBuilder | ((data: any[]) => IColumnDesc)) {\n    this.columns.push(column instanceof ColumnBuilder ? column.build.bind(column) : column);\n    return this;\n  }\n\n  /**\n   * restores a given ranking dump\n   * @param dump dump as created using '.dump()'\n   */\n  restore(dump: any) {\n    this.rankBuilders.push((data) => data.restore(dump));\n    return this;\n  }\n\n  /**\n   * add the default ranking (all columns) to this data provider\n   * @param {boolean} addSupportTypes add support types, too, default: true\n   */\n  defaultRanking(addSupportTypes: boolean = true) {\n    this.rankBuilders.push((data) => data.deriveDefault(addSupportTypes));\n    return this;\n  }\n\n  /**\n   * add another ranking to this data provider\n   * @param {((data: DataProvider) => void) | RankingBuilder} builder ranking builder\n   */\n  ranking(builder: ((data: DataProvider) => void) | RankingBuilder) {\n    this.rankBuilders.push(builder instanceof RankingBuilder ? builder.build.bind(builder) : builder);\n    return this;\n  }\n\n  /**\n   * builds the data provider itself\n   * @returns {LocalDataProvider}\n   */\n  buildData() {\n    // last come survived separted by label to be able to override columns\n    const columns: IColumnDesc[] = [];\n    const contained = new Set<string>();\n    for (const col of this.columns) {\n      const c = typeof col === 'function' ? col(this.data) : col;\n      const key = `${c.type}@${c.label}`;\n      if (!contained.has(key)) {\n        columns.push(c);\n        contained.add(key);\n        continue;\n      }\n      const oldPos = columns.findIndex((d) => key === `${d.type}@${d.label}`);\n      columns.splice(oldPos, 1, c); // replace with new one\n    }\n    if (this._deriveColors) {\n      deriveColors(columns);\n    }\n    const r = new LocalDataProvider(this.data, columns, this.providerOptions);\n    if (this.rankBuilders.length === 0) {\n      this.defaultRanking();\n    }\n    this.rankBuilders.forEach((builder) => builder(r));\n    return r;\n  }\n\n  /**\n   * builds LineUp at the given parent DOM node\n   * @param {HTMLElement} node parent DOM node to attach\n   * @returns {LineUp}\n   */\n  build(node: HTMLElement) {\n    return new LineUp(node, this.buildData(), this.options);\n  }\n\n  /**\n   * builds Taggle at the given parent DOM node\n   * @param {HTMLElement} node parent DOM node to attach\n   * @returns {Taggle}\n   */\n  buildTaggle(node: HTMLElement) {\n    return new Taggle(node, this.buildData(), this.options);\n  }\n}\n\n\n/**\n * creates a new builder instance for the given data\n * @param {object[]} arr data to visualize\n * @returns {DataBuilder}\n */\nexport function builder(arr: object[]) {\n  return new DataBuilder(arr);\n}\n\n\n/**\n * build a new Taggle instance in the given node for the given data\n * @param {HTMLElement} node DOM node to attach to\n * @param {any[]} data data to visualize\n * @param {string[]} columns optional enforced column order\n * @returns {Taggle}\n */\nexport function asTaggle(node: HTMLElement, data: any[], ...columns: string[]): Taggle {\n  return builder(data)\n    .deriveColumns(columns)\n    .deriveColors()\n    .defaultRanking()\n    .buildTaggle(node);\n}\n\n/**\n * build a new LineUp instance in the given node for the given data\n * @param {HTMLElement} node DOM node to attach to\n * @param {any[]} data data to visualize\n * @param {string[]} columns optional enforced column order\n * @returns {LineUp}\n */\nexport function asLineUp(node: HTMLElement, data: any[], ...columns: string[]): LineUp {\n  return builder(data)\n    .deriveColumns(columns)\n    .deriveColors()\n    .defaultRanking()\n    .build(node);\n}\n","import {extent} from '../../internal';\nimport {IActionColumnDesc, IArrayDesc, IBooleanColumnDesc, ICategoricalColumnDesc, IColumnDesc, IDateColumnDesc, IHierarchyColumnDesc, ILinkColumnDesc, INumberColumnDesc} from '../../model';\nimport {IBuilderAdapterActionsColumnDescProps, IBuilderAdapterBooleanColumnDescProps, IBuilderAdapterCategoricalColumnDescProps, IBuilderAdapterColumnDescProps, IBuilderAdapterDateColumnDescProps, IBuilderAdapterHierarchyColumnDescProps, IBuilderAdapterNumberColumnDescProps, IBuilderAdapterStringColumnDescProps} from '.';\n\nexport function build<T extends IBuilderAdapterColumnDescProps>(props: T, _data?: any[]): IColumnDesc {\n  const {column} = props;\n  const desc = <any>{column, type: props.type, label: column ? column[0].toUpperCase() + column.slice(1) : props.type};\n\n  (<(keyof IBuilderAdapterColumnDescProps)[]>['label', 'description', 'frozen', 'width', 'renderer', 'groupRenderer', 'summaryRenderer', 'visible', 'fixed']).forEach((key) => {\n    if (props.hasOwnProperty(key)) {\n      desc[key] = props[key];\n    }\n  });\n\n  if (props.custom) { // merge custom attributes\n    Object.assign(desc, props.custom);\n  }\n\n  if (props.asMap) {\n    console.assert(['categorical', 'date', 'number', 'string', 'link'].includes(desc.type!));\n    desc.type += 'Map';\n  }\n\n  if (props.asArray != null) {\n    console.assert(['boolean', 'categorical', 'date', 'number', 'string', 'link'].includes(desc.type!));\n    desc.type += 's';\n    const a = <IArrayDesc>desc;\n    const labels = props.asArray;\n    if (Array.isArray(labels)) {\n      a.labels = labels;\n      a.dataLength = labels.length;\n    } else if (typeof labels === 'number') {\n      a.dataLength = labels;\n    }\n  }\n\n  return <any>desc;\n}\n\n\nexport function buildCategorical(props: IBuilderAdapterCategoricalColumnDescProps, data: any[]): ICategoricalColumnDesc {\n  const desc: any = build({...props, type: 'categorical'});\n\n  if (props.asOrdinal) {\n    desc.type = 'ordinal';\n  }\n  if (props.missingCategory) {\n    desc.missingCategory = props.missingCategory;\n  }\n  if (props.asSet) {\n    if (typeof props.asSet === 'string') {\n      (<any>desc).separator = props.asSet;\n    }\n    desc.type = 'set';\n  }\n\n\n  if (!props.categories) {\n    // derive categories\n    const categories = new Set(data.map((d) => <string>d[(<any>desc).column]));\n    desc.categories = Array.from(categories).sort();\n  } else {\n    desc.categories = props.categories;\n  }\n  return desc;\n}\n\nexport function buildDate(props: IBuilderAdapterDateColumnDescProps): IDateColumnDesc {\n  const desc: any = build({...props, type: 'date'});\n\n  (<(keyof IBuilderAdapterDateColumnDescProps)[]>['dateFormat', 'dateParse']).forEach((key) => {\n    if (props.hasOwnProperty(key)) {\n      desc[key] = props[key];\n    }\n  });\n  return desc;\n}\n\nexport function buildHierarchy(props: Partial<IBuilderAdapterHierarchyColumnDescProps>): IHierarchyColumnDesc {\n  const desc: any = build({...(<any>props), type: 'hierarchy'});\n\n  (<(keyof IBuilderAdapterHierarchyColumnDescProps)[]>['hierarchy', 'hierarchySeparator']).forEach((key) => {\n    if (props.hasOwnProperty(key)) {\n      desc[key] = props[key];\n    }\n  });\n  return desc;\n}\n\nexport function buildNumber(props: IBuilderAdapterNumberColumnDescProps, data: any[]): INumberColumnDesc {\n  const desc: any = build({...props, type: 'number'});\n\n  const domain = props.domain ? props.domain : <[number, number]>extent(data, (d) => <number>d[(<any>desc).column]);\n\n  if (props.hasOwnProperty('color')) {\n    desc.colorMapping = props.color;\n  }\n  (<(keyof IBuilderAdapterNumberColumnDescProps)[]>['sort', 'colorMapping']).forEach((key) => {\n    if (props.hasOwnProperty(key)) {\n      desc[key] = props[key];\n    }\n  });\n  if (props.scripted) {\n    desc.map = {domain, code: props.scripted, type: 'script'};\n  } else if (!props.mapping || props.mapping === 'linear') {\n    desc.domain = domain;\n    if (props.range) {\n      desc.range = props.range;\n    }\n  } else {\n    desc.map = {\n      type: props.mapping,\n      domain,\n      range: props.range || [0, 1]\n    };\n  }\n  return desc;\n}\n\nexport function buildString(props: IBuilderAdapterStringColumnDescProps): ILinkColumnDesc {\n  const desc: any = build({...props, type: 'string'});\n\n  (<(keyof IBuilderAdapterStringColumnDescProps)[]>['pattern', 'patternTemplate', 'alignment']).forEach((key) => {\n    if (props.hasOwnProperty(key)) {\n      desc[key] = props[key];\n    }\n  });\n  if (props.editable) {\n    desc.type = 'annotate';\n  }\n  if (props.pattern) {\n    desc.type = 'link';\n  }\n  if (props.html) {\n    desc.escape = false;\n  }\n  return desc;\n}\n\n\nexport function buildBoolean(props: IBuilderAdapterBooleanColumnDescProps): IBooleanColumnDesc {\n  const desc: any = build({...props, type: 'boolean'});\n\n  (<(keyof IBuilderAdapterBooleanColumnDescProps)[]>['trueMarker', 'falseMarker']).forEach((key) => {\n    if (props.hasOwnProperty(key)) {\n      desc[key] = props[key];\n    }\n  });\n  return desc;\n}\n\nexport function buildActions(props: IBuilderAdapterActionsColumnDescProps): IActionColumnDesc {\n  const desc: any = build({...props, type: 'actions'});\n\n  (<(keyof IBuilderAdapterActionsColumnDescProps)[]>['actions', 'groupActions']).forEach((key) => {\n    if (props.hasOwnProperty(key)) {\n      desc[key] = props[key];\n    }\n  });\n  return desc;\n}\n\n","import {buildRanking as buildRankingImpl, INestedBuilder, IReduceBuilder, IScriptedBuilder, IWeightedSumBuilder} from '..';\nimport {Ranking} from '../../model';\nimport {LocalDataProvider} from '../../provider';\nimport {IBuilderAdapterImposeColumnProps, IBuilderAdapterNestedColumnProps, IBuilderAdapterRankingProps, IBuilderAdapterReduceColumnProps, IBuilderAdapterScriptColumnProps, IBuilderAdapterSupportColumnProps, IBuilderAdapterWeightedSumColumnProps} from '.';\n\n\n/*\n * build the column description\n */\nexport function buildRanking(props: IBuilderAdapterRankingProps, data: LocalDataProvider): Ranking {\n  const r = buildRankingImpl();\n\n  if (props.sortBy) {\n    const s = Array.isArray(props.sortBy) ? props.sortBy : [props.sortBy];\n    s.forEach((si) => {\n      if (typeof si === 'string') {\n        r.sortBy(si);\n      } else {\n        r.sortBy(si.column, si.asc);\n      }\n    });\n  }\n  if (props.groupBy) {\n    const s = Array.isArray(props.groupBy) ? props.groupBy : [props.groupBy];\n    r.groupBy(...s);\n  }\n  if (props.columns) {\n    props.columns.forEach((c) => r.column(c));\n  }\n  return r.build(data);\n}\n\nexport function buildGeneric(props: { column: '*' | string }) {\n  return props.column;\n}\n\nexport function buildImposeRanking(props: IBuilderAdapterImposeColumnProps) {\n  return <any>Object.assign({\n    type: 'impose'\n  }, props);\n}\n\n\nexport function buildNestedRanking(props: IBuilderAdapterNestedColumnProps, children: string[]) {\n  const r: INestedBuilder = {\n    type: 'nested',\n    columns: children\n  };\n  if (props.label) {\n    r.label = props.label;\n  }\n  return r;\n}\n\n\nexport function buildWeightedSumRanking(props: IBuilderAdapterWeightedSumColumnProps, children: { column: string, weight: number }[]) {\n  const r: IWeightedSumBuilder = {\n    type: 'weightedSum',\n    columns: children.map((d) => d.column),\n    weights: children.map((d) => d.weight)\n  };\n  if (props.label) {\n    r.label = props.label;\n  }\n  return r;\n}\n\nexport function buildReduceRanking(props: IBuilderAdapterReduceColumnProps, children: string[]) {\n  const r: IReduceBuilder = {\n    type: props.type,\n    columns: children\n  };\n  if (props.label) {\n    r.label = props.label;\n  }\n  return r;\n}\n\nexport function buildScriptRanking(props: IBuilderAdapterScriptColumnProps, children: string[]) {\n  const r: IScriptedBuilder = {\n    type: 'script',\n    code: props.code,\n    columns: children\n  };\n  if (props.label) {\n    r.label = props.label;\n  }\n  return r;\n}\n\nexport function buildSupportRanking(props: IBuilderAdapterSupportColumnProps) {\n  return `_${props.type}`;\n}\n\nexport function buildAllColumnsRanking() {\n  return '*';\n}\n","export {equal} from '../../internal';\n\nexport function isTypeInstance(clazz: any, superClass: any) {\n  let c = clazz;\n  while (c && c !== superClass) {\n    c = c.__proto__;\n  }\n  return c === superClass;\n}\n\nexport function pick<T extends object>(obj: T, keys: (keyof T)[]): Pick<T, keyof T> {\n  const r: Pick<T, keyof T> = <any>{};\n  keys.forEach((k) => {\n    if (obj.hasOwnProperty(k)) {\n      r[k] = obj[k];\n    }\n  });\n  return r;\n}\n\nexport function isSame<T extends object>(current: T, changed: (prop: keyof T) => boolean, props: (keyof T)[]) {\n  if (props.every((p) => !changed(p))) {\n    return null;\n  }\n  return pick(current, props);\n}\n","import {IBuilderAdapter, IBuilderAdapterProps, IBuilderAdapterRankingProps, IChangeDetecter} from '.';\nimport {IColumnDesc} from '../../model';\nimport {deriveColors, deriveColumnDescriptions, IDataProviderOptions, ILocalDataProviderOptions, LocalDataProvider} from '../../provider';\nimport {LineUp, Taggle} from '../../ui';\nimport {buildRanking} from './ranking';\nimport {equal, isSame, pick} from './utils';\n\n\nconst providerOptions: (keyof IDataProviderOptions | keyof ILocalDataProviderOptions)[] = ['singleSelection', 'filterGlobally', 'columnTypes', 'taskExecutor', 'jumpToSearchResult'];\nconst lineupOptions: (keyof IBuilderAdapterProps)[] = ['animated', 'sidePanel', 'sidePanelCollapsed', 'hierarchyIndicator', 'defaultSlopeGraphMode', 'summaryHeader', 'expandLineOnHover', 'overviewMode', 'renderers', 'canRender', 'toolbar', 'rowHeight', 'rowPadding', 'groupHeight', 'groupPadding', 'dynamicHeight', 'labelRotation', 'ignoreUnsupportedBrowser'];\n\ninterface IRankingContext {\n  builders: IBuilderAdapterRankingProps[];\n  restore: any;\n  derive: boolean;\n  supportTypes: boolean;\n}\n\ninterface IColumnContext {\n  columns: IColumnDesc[];\n  deriveColumns: boolean;\n  deriveColumnNames: string[];\n  deriveColors: boolean;\n}\n\nexport class Adapter {\n  private data: LocalDataProvider | null = null;\n  private instance: LineUp | Taggle | null = null;\n\n  private prevRankings: IRankingContext | null = null;\n  private prevColumns: IColumnContext | null = null;\n  private prevHighlight: number | null = null;\n\n  private readonly onSelectionChanged = (indices: number[]) => {\n    if (this.props.onSelectionChanged && !equal(this.props.selection, indices)) {\n      this.props.onSelectionChanged(indices);\n    }\n  }\n\n  private readonly onHighlightChanged = (highlight: number) => {\n    const prev = this.prevHighlight != null ? this.prevHighlight : -1;\n    if (prev === highlight) {\n      return;\n    }\n    this.prevHighlight = highlight;\n    if (this.props.onHighlightChanged) {\n      this.props.onHighlightChanged(highlight);\n    }\n  }\n\n  constructor(private readonly adapter: IBuilderAdapter) {\n\n  }\n\n  private get props() {\n    return this.adapter.props();\n  }\n\n  componentDidMount() {\n    this.data = this.buildProvider();\n    this.instance = this.adapter.createInstance(this.data, pick(this.props, lineupOptions));\n    this.instance.on(LineUp.EVENT_HIGHLIGHT_CHANGED, this.onHighlightChanged);\n  }\n\n  private resolveColumnDescs(data: any[]): IColumnContext {\n    const columns = this.adapter.columnDescs(data);\n    const deriveColumns = columns.length === 0 || Boolean(this.props.deriveColumns);\n    const deriveColumnNames = Array.isArray(this.props.deriveColumns) ? this.props.deriveColumns : [];\n    const deriveColors = Boolean(this.props.deriveColors);\n    return {\n      columns,\n      deriveColors,\n      deriveColumns,\n      deriveColumnNames\n    };\n  }\n\n  private resolveRankings(): IRankingContext {\n    const builders = this.adapter.rankingBuilders();\n\n    return {\n      builders,\n      restore: this.props.restore,\n      derive: (builders.length === 0 && !this.props.restore) || Boolean(this.props.defaultRanking),\n      supportTypes: this.props.defaultRanking !== 'noSupportTypes'\n    };\n  }\n\n  private buildColumns(data: any[], ctx: IColumnContext) {\n    this.prevColumns = ctx;\n    const columns = ctx.columns.map((d) => Object.assign({}, d)); // work on copy\n    if (ctx.deriveColumns) {\n      const labels = new Set(columns.map((d) => `${d.type}@${d.label}`));\n      const derived = deriveColumnDescriptions(data, {columns: ctx.deriveColumnNames});\n      for (const derive of derived) {\n        if (labels.has(`${derive.type}@${derive.label}`)) { // skip same name\n          continue;\n        }\n        columns.push(derive);\n      }\n    }\n    if (ctx.deriveColors) {\n      deriveColors(columns);\n    }\n    return columns;\n  }\n\n  private buildRankings(data: LocalDataProvider, rankings: IRankingContext) {\n    data.clearRankings();\n    this.prevRankings = rankings;\n    if (rankings.derive) {\n      data.deriveDefault(rankings.supportTypes);\n    }\n    if (rankings.restore) {\n      data.restore(rankings.restore);\n    }\n    rankings.builders.forEach((b) => buildRanking(b, data!));\n  }\n\n  private buildProvider() {\n    const columns = this.buildColumns(this.props.data, this.resolveColumnDescs(this.props.data));\n    const data = new LocalDataProvider(this.props.data, columns, pick(this.props, providerOptions));\n\n    this.buildRankings(data, this.resolveRankings());\n\n    data.setSelection(this.props.selection || []);\n    data.on(LocalDataProvider.EVENT_SELECTION_CHANGED, this.onSelectionChanged);\n\n    return data;\n  }\n\n  private updateLineUp(changeDetector: IChangeDetecter, providerChanged: boolean) {\n    // check lineup instance properties\n    const changedLineUpOptions = isSame(this.props, changeDetector, lineupOptions);\n    if (!changedLineUpOptions) {\n      if (providerChanged) {\n        this.instance!.setDataProvider(this.data!);\n      }\n\n      if (providerChanged || (this.props.highlight != null && this.prevHighlight !== this.props.highlight)) {\n        this.prevHighlight = this.props.highlight == null ? -1 : this.props.highlight;\n        this.instance!.on(LineUp.EVENT_HIGHLIGHT_CHANGED, null);\n        this.instance!.setHighlight(this.prevHighlight);\n        this.instance!.on(LineUp.EVENT_HIGHLIGHT_CHANGED, this.onHighlightChanged);\n        return true;\n      }\n      return false;\n    }\n    // recreate lineup\n    if (this.instance) {\n      this.instance.destroy();\n    }\n    this.instance = this.adapter.createInstance(this.data!, changedLineUpOptions);\n\n    this.prevHighlight = this.props.highlight == null ? -1 : this.props.highlight;\n    this.instance!.setHighlight(this.prevHighlight);\n    this.instance!.on(LineUp.EVENT_HIGHLIGHT_CHANGED, this.onHighlightChanged);\n    return true;\n  }\n\n  private updateProvider(changeDetector: IChangeDetecter) {\n    const changedProviderOptions = isSame(this.props, changeDetector, providerOptions);\n    if (changedProviderOptions || !this.data || changeDetector('data')) {\n      // big change start from scratch\n      this.data = this.buildProvider();\n      return true;\n    }\n\n    const rankings = this.resolveRankings();\n    const columns = this.resolveColumnDescs(this.props.data);\n    const columnsChanged = !equal(this.prevColumns, columns);\n    if (columnsChanged) {\n      const descs = this.buildColumns(this.props.data, columns);\n      this.data.clearColumns();\n      descs.forEach((d) => this.data!.pushDesc(d));\n    }\n\n    if (columnsChanged || !equal(rankings, this.prevRankings)) {\n      this.buildRankings(this.data, rankings);\n    }\n\n    this.data.on(LocalDataProvider.EVENT_SELECTION_CHANGED, null);\n    this.data.setSelection(this.props.selection || []);\n    this.data.on(LocalDataProvider.EVENT_SELECTION_CHANGED, this.onSelectionChanged);\n    return false;\n  }\n\n  componentDidUpdate(changeDetector: IChangeDetecter) {\n    const providerChanged = this.updateProvider(changeDetector);\n    this.updateLineUp(changeDetector, providerChanged);\n    // this.instance!.update();\n  }\n\n  componentWillUnmount() {\n    if (this.instance) {\n      this.instance.destroy();\n      this.instance = null;\n    }\n    this.data = null;\n  }\n}\n","\nimport {build, buildCategorical, buildDate, buildHierarchy, buildNumber, buildString, buildActions} from './column';\nimport {Adapter} from './lineup';\nimport {\n  buildAllColumnsRanking,\n  buildGeneric,\n  buildImposeRanking,\n  buildNestedRanking,\n  buildRanking,\n  buildReduceRanking,\n  buildScriptRanking,\n  buildSupportRanking,\n  buildWeightedSumRanking\n} from './ranking';\nimport {equal, isSame, isTypeInstance} from './utils';\n\nexport const builderAdapter = {\n  buildString,\n  buildNumber,\n  buildHierarchy,\n  buildDate,\n  buildCategorical,\n  buildActions,\n  build,\n  buildGeneric,\n  buildWeightedSumRanking,\n  buildSupportRanking,\n  buildScriptRanking,\n  buildReduceRanking,\n  buildRanking,\n  buildNestedRanking,\n  buildImposeRanking,\n  buildAllColumnsRanking,\n  equal,\n  isSame,\n  isTypeInstance,\n  Adapter\n};\n","import Column from './Column';\nimport ValueColumn from './ValueColumn';\nimport {IValueColumnDesc} from './interfaces';\n\nexport * from './annotations';\nexport {isMissingValue, isUnknown, FIRST_IS_NAN, FIRST_IS_MISSING, missingGroup} from './missing';\nexport * from './interfaces';\nexport * from './ICategoricalColumn';\nexport * from './INumberColumn';\nexport * from './IDateColumn';\nexport * from './IArrayColumn';\n\nexport {ScaleMappingFunction, ScriptMappingFunction} from './MappingFunction';\nexport {DEFAULT_CATEGORICAL_COLOR_FUNCTION, ReplacmentColorMappingFunction} from './CategoricalColorMappingFunction';\nexport {CustomColorMappingFunction, DEFAULT_COLOR_FUNCTION, SequentialColorFunction, DivergentColorFunction, UnknownColorFunction, QuantizedColorFunction, SolidColorFunction} from './ColorMappingFunction';\n\nexport {default as ActionColumn} from './ActionColumn';\nexport * from './ActionColumn';\nexport {default as AggregateGroupColumn} from './AggregateGroupColumn';\nexport * from './AggregateGroupColumn';\nexport {default as AnnotateColumn} from './AnnotateColumn';\nexport * from './AnnotateColumn';\nexport {default as ArrayColumn} from './ArrayColumn';\nexport * from './ArrayColumn';\nexport {default as BooleanColumn} from './BooleanColumn';\nexport * from './BooleanColumn';\nexport {default as BooleansColumn} from './BooleansColumn';\nexport * from './BooleansColumn';\nexport {default as BoxPlotColumn} from './BoxPlotColumn';\nexport * from './BoxPlotColumn';\nexport {default as CategoricalColumn} from './CategoricalColumn';\nexport *from './CategoricalColumn';\nexport {default as CategoricalMapColumn} from './CategoricalMapColumn';\nexport * from './CategoricalMapColumn';\nexport {default as CategoricalsColumn} from './CategoricalsColumn';\nexport * from './CategoricalsColumn';\nexport {default, default as Column} from './Column';\n// no * export\nexport {default as CompositeColumn} from './CompositeColumn';\n// no * export\nexport {default as CompositeNumberColumn} from './CompositeNumberColumn';\nexport * from './CompositeNumberColumn';\nexport {default as DateColumn} from './DateColumn';\nexport * from './DateColumn';\nexport {default as DatesColumn} from './DatesColumn';\nexport * from './DatesColumn';\nexport {default as DatesMapColumn} from './DatesMapColumn';\nexport * from './DatesMapColumn';\nexport {default as GroupColumn} from './GroupColumn';\nexport *from './GroupColumn';\nexport {default as HierarchyColumn} from './HierarchyColumn';\nexport * from './HierarchyColumn';\nexport {default as ImpositionBoxPlotColumn} from './ImpositionBoxPlotColumn';\nexport * from './ImpositionBoxPlotColumn';\nexport {default as ImpositionCompositeColumn} from './ImpositionCompositeColumn';\nexport * from './ImpositionCompositeColumn';\nexport {default as ImpositionCompositesColumn} from './ImpositionCompositesColumn';\nexport * from './ImpositionCompositesColumn';\nexport {default as LinkColumn} from './LinkColumn';\nexport * from './LinkColumn';\nexport {default as LinkMapColumn} from './LinkMapColumn';\nexport * from './LinkMapColumn';\nexport {default as LinksColumn} from './LinksColumn';\nexport * from './LinksColumn';\nexport {default as MapColumn} from './MapColumn';\nexport * from './MapColumn';\nexport {default as MultiLevelCompositeColumn} from './MultiLevelCompositeColumn';\nexport * from './MultiLevelCompositeColumn';\nexport {default as NestedColumn} from './NestedColumn';\nexport * from './NestedColumn';\nexport {default as NumberColumn} from './NumberColumn';\nexport * from './NumberColumn';\nexport {default as NumberMapColumn} from './NumberMapColumn';\nexport * from './NumberMapColumn';\nexport {default as NumbersColumn} from './NumbersColumn';\nexport * from './NumbersColumn';\nexport {default as OrdinalColumn} from './OrdinalColumn';\nexport * from './OrdinalColumn';\nexport {default as RankColumn} from './RankColumn';\nexport * from './RankColumn';\nexport {default as Ranking, EDirtyReason} from './Ranking';\n// no * export\nexport {default as ReduceColumn} from './ReduceColumn';\nexport * from './ReduceColumn';\nexport {default as ScriptColumn} from './ScriptColumn';\nexport * from './ScriptColumn';\nexport {default as SelectionColumn} from './SelectionColumn';\nexport * from './SelectionColumn';\nexport {default as SetColumn} from './SetColumn';\nexport * from './SetColumn';\nexport {default as StackColumn} from './StackColumn';\nexport * from './StackColumn';\nexport {default as StringColumn} from './StringColumn';\nexport * from './StringColumn';\nexport {default as StringsColumn} from './StringsColumn';\nexport * from './StringsColumn';\nexport {default as StringMapColumn} from './StringMapColumn';\nexport * from './StringMapColumn';\nexport {default as ValueColumn} from './ValueColumn';\n// no * export\n\n\n/**\n * defines a new column type\n * @param name\n * @param functions\n * @returns {CustomColumn}\n */\nexport function defineColumn<T>(name: string, functions: any = {}): typeof Column {\n  class CustomColumn extends ValueColumn<T> {\n    constructor(id: string, desc: IValueColumnDesc<T>, ...args: any[]) {\n      super(id, desc);\n      if (typeof (this.init) === 'function') {\n        this.init(id, desc, ...args);\n      }\n    }\n\n    init(..._args: any[]) {\n      // dummy\n    }\n  }\n\n  CustomColumn.prototype.toString = () => name;\n  CustomColumn.prototype = Object.assign(CustomColumn.prototype, functions);\n\n  return CustomColumn;\n}\n","import Column, {IColumnDesc, IDataRow, Ranking, defaultGroup, IndicesArray, IOrderedGroup} from '../model';\nimport ACommonDataProvider from './ACommonDataProvider';\nimport {IDataProviderOptions} from './interfaces';\nimport {DirectRenderTasks} from './DirectRenderTasks';\nimport {IRenderTasks} from '../renderer';\n\n/**\n * interface what the server side has to provide\n */\nexport interface IServerData {\n  /**\n   * sort the dataset by the given description\n   * @param ranking\n   */\n  sort(ranking: Ranking): Promise<IndicesArray>;\n\n  /**\n   * returns a slice of the data array identified by a list of indices\n   * @param indices\n   */\n  view(indices: number[]): Promise<any[]>;\n\n  /**\n   * returns a sample of the values for a given column\n   * @param column\n   */\n  mappingSample(column: any): Promise<number[]>;\n\n  /**\n   * return the matching indices matching the given arguments\n   * @param search\n   * @param column\n   */\n  search(search: string | RegExp, column: any): Promise<number[]>;\n}\n\n\nexport interface IRemoteDataProviderOptions {\n  /**\n   * maximal cache size (unused at the moment)\n   */\n  maxCacheSize: number;\n}\n\nfunction createIndex2Pos(order: IndicesArray) {\n  const index2pos = <number[]>[];\n  for (let i = 0; i < order.length; ++i) {\n    index2pos[order[i]] = i + 1;\n  }\n  return index2pos;\n}\n\n/**\n * a remote implementation of the data provider\n */\nexport default class RemoteDataProvider extends ACommonDataProvider {\n  private readonly ooptions: IRemoteDataProviderOptions = {\n    maxCacheSize: 1000\n  };\n\n  private readonly cache = new Map<number, Promise<IDataRow>>();\n\n\n  constructor(private server: IServerData, columns: IColumnDesc[] = [], options: Partial<IRemoteDataProviderOptions & IDataProviderOptions> = {}) {\n    super(columns, options);\n    Object.assign(this.ooptions, options);\n  }\n\n  getTotalNumberOfRows() {\n    // TODO not correct\n    return this.cache.size;\n  }\n\n  getTaskExecutor(): IRenderTasks {\n    // FIXME\n    return new DirectRenderTasks([]);\n  }\n\n  sort(ranking: Ranking) : Promise<{groups: IOrderedGroup[], index2pos: IndicesArray}> | {groups: IOrderedGroup[], index2pos: IndicesArray} {\n    //use the server side to sort\n    return this.server.sort(ranking).then((order) => ({groups: [Object.assign({order}, defaultGroup)], index2pos: createIndex2Pos(order)}));\n  }\n\n  private loadFromServer(indices: number[]) {\n    return this.server.view(indices).then((view) => {\n      //enhance with the data index\n      return view.map((v, i) => {\n        const dataIndex = indices[i];\n        return {v, dataIndex};\n      });\n    });\n  }\n\n  view(indices: number[]): Promise<any[]> {\n    if (indices.length === 0) {\n      return Promise.resolve([]);\n    }\n    const base = this.fetch([indices])[0];\n    return Promise.all(base).then((rows) => rows.map((d) => d.v));\n  }\n\n\n  private computeMissing(orders: number[][]): number[] {\n    const union = new Set<number>();\n    const unionAdd = union.add.bind(union);\n    orders.forEach((order) => order.forEach(unionAdd));\n\n    // removed cached\n    this.cache.forEach((_v, k) => union.delete(k));\n\n    if ((this.cache.size + union.size) > this.ooptions.maxCacheSize) {\n      // clean up cache\n    }\n    // const maxLength = Math.max(...orders.map((o) => o.length));\n    return Array.from(union);\n  }\n\n  private loadInCache(missing: number[]) {\n    if (missing.length === 0) {\n      return;\n    }\n    // load data and map to rows;\n    const v = this.loadFromServer(missing);\n    missing.forEach((_m, i) => {\n      const dataIndex = missing[i];\n      this.cache.set(dataIndex, v.then((loaded) => ({v: loaded[i], i: dataIndex})));\n    });\n  }\n\n  fetch(orders: number[][]): Promise<IDataRow>[][] {\n    const toLoad = this.computeMissing(orders);\n    this.loadInCache(toLoad);\n\n    return orders.map((order) =>\n      order.map((i) => this.cache.get(i)!));\n  }\n\n  getRow(index: number) {\n    if (this.cache.has(index)) {\n      return this.cache.get(index)!;\n    }\n    this.loadInCache([index]);\n    return this.cache.get(index)!;\n  }\n\n\n  mappingSample(col: Column): Promise<number[]> {\n    return this.server.mappingSample((<any>col.desc).column);\n  }\n\n  searchAndJump(search: string | RegExp, col: Column) {\n    this.server.search(search, (<any>col.desc).column).then((indices) => {\n      this.jumpToNearest(indices);\n    });\n  }\n}\n","/**\n * main module of LineUp.js containing the main class and exposes all other modules\n */\n\nimport {IColumnDesc} from './model';\nimport {DataProvider, LocalDataProvider, ILocalDataProviderOptions} from './provider';\nimport {LineUp, Taggle} from './ui';\nimport {ILineUpOptions, ITaggleOptions} from './config';\n\n\nexport * from './builder';\nexport * from './config';\nexport * from './internal/mathInterfaces';\nexport * from './model';\nexport * from './provider';\nexport * from './renderer';\nexport * from './ui';\nexport {LineUp as default} from './ui';\n\n\nexport function createLocalDataProvider(data: any[], columns: IColumnDesc[], options: Partial<ILocalDataProviderOptions> = {}) {\n  return new LocalDataProvider(data, columns, options);\n}\n\n/**\n *\n * @param container the html element lineup should be built in\n * @param data {DataProvider} the data providier\n * @param config {Partial<ILineUpOptions>} lineup configuration overrides\n * @returns {LineUp} the created lineup instance\n */\nexport function createLineUp(container: HTMLElement, data: DataProvider, config: Partial<ILineUpOptions> = {}) {\n  return new LineUp(container, data, config);\n}\n\nexport function createTaggle(container: HTMLElement, data: DataProvider, config: Partial<ITaggleOptions> = {}) {\n  return new Taggle(container, data, config);\n}\n","export * from './';\nexport {default} from './';\nimport '!file-loader?name=schema.4.0.0.json!./provider/schema.json';\nimport './style.scss';\n\ndeclare const __VERSION__: string;\ndeclare const __BUILD_ID__: string;\ndeclare const __LICENSE__: string;\n\n/**\n * LineUp version\n * @type {string}\n */\nexport const version = __VERSION__;\n/**\n * LineUp unique build id\n * @type {string}\n */\nexport const buildId = __BUILD_ID__;\n/**\n * LineUp license type\n * @type {string}\n */\nexport const license = __LICENSE__;\n"],"sourceRoot":""}